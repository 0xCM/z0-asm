// 2020-01-31 17:23:16:253
// System.SByte Z0.gmathops::sub_d8i(System.SByte,System.SByte)
// sbyte sub_d8i(sbyte lhs, sbyte rhs)
// IL
sbyte sub_d8i(sbyte lhs, sbyte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.SByte Z0.math::sub(System.SByte,System.SByte)
    IL_0007: ret
}

// System.SByte Z0.gmathops::sub_g8i(System.SByte,System.SByte)
// sbyte sub_g8i(sbyte lhs, sbyte rhs)
// IL
sbyte sub_g8i(sbyte lhs, sbyte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.SByte Z0.gmath::sub<System.SByte>(System.SByte,System.SByte)
    IL_0007: ret
}

// System.Byte Z0.gmathops::sub_d8u(System.Byte,System.Byte)
// byte sub_d8u(byte lhs, byte rhs)
// IL
byte sub_d8u(byte lhs, byte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Byte Z0.math::sub(System.Byte,System.Byte)
    IL_0007: ret
}

// System.Byte Z0.gmathops::sub_g8u(System.Byte,System.Byte)
// byte sub_g8u(byte lhs, byte rhs)
// IL
byte sub_g8u(byte lhs, byte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Byte Z0.gmath::sub<System.Byte>(System.Byte,System.Byte)
    IL_0007: ret
}

// System.Int16 Z0.gmathops::sub_d16i(System.Int16,System.Int16)
// short sub_d16i(short lhs, short rhs)
// IL
short sub_d16i(short lhs, short rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int16 Z0.math::sub(System.Int16,System.Int16)
    IL_0007: ret
}

// System.Int16 Z0.gmathops::sub_g16i(System.Int16,System.Int16)
// short sub_g16i(short lhs, short rhs)
// IL
short sub_g16i(short lhs, short rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int16 Z0.gmath::sub<System.Int16>(System.Int16,System.Int16)
    IL_0007: ret
}

// System.UInt16 Z0.gmathops::sub_d16u(System.UInt16,System.UInt16)
// ushort sub_d16u(ushort lhs, ushort rhs)
// IL
ushort sub_d16u(ushort lhs, ushort rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.math::sub(System.UInt16,System.UInt16)
    IL_0007: ret
}

// System.UInt16 Z0.gmathops::sub_g16u(System.UInt16,System.UInt16)
// ushort sub_g16u(ushort lhs, ushort rhs)
// IL
ushort sub_g16u(ushort lhs, ushort rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.gmath::sub<System.UInt16>(System.UInt16,System.UInt16)
    IL_0007: ret
}

// System.Int32 Z0.gmathops::sub_d32i(System.Int32,System.Int32)
// int sub_d32i(int lhs, int rhs)
// IL
int sub_d32i(int lhs, int rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int32 Z0.math::sub(System.Int32,System.Int32)
    IL_0007: ret
}

// System.Int32 Z0.gmathops::sub_g32i(System.Int32,System.Int32)
// int sub_g32i(int lhs, int rhs)
// IL
int sub_g32i(int lhs, int rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int32 Z0.gmath::sub<System.Int32>(System.Int32,System.Int32)
    IL_0007: ret
}

// System.UInt32 Z0.gmathops::sub_d32u(System.UInt32,System.UInt32)
// uint sub_d32u(uint lhs, uint rhs)
// IL
uint sub_d32u(uint lhs, uint rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt32 Z0.math::sub(System.UInt32,System.UInt32)
    IL_0007: ret
}

// System.UInt32 Z0.gmathops::sub_g32u(System.UInt32,System.UInt32)
// uint sub_g32u(uint lhs, uint rhs)
// IL
uint sub_g32u(uint lhs, uint rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt32 Z0.gmath::sub<System.UInt32>(System.UInt32,System.UInt32)
    IL_0007: ret
}

// System.Int64 Z0.gmathops::sub_d64i(System.Int64,System.Int64)
// long sub_d64i(long lhs, long rhs)
// IL
long sub_d64i(long lhs, long rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int64 Z0.math::sub(System.Int64,System.Int64)
    IL_0007: ret
}

// System.Int64 Z0.gmathops::sub_g64i(System.Int64,System.Int64)
// long sub_g64i(long lhs, long rhs)
// IL
long sub_g64i(long lhs, long rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int64 Z0.gmath::sub<System.Int64>(System.Int64,System.Int64)
    IL_0007: ret
}

// System.UInt64 Z0.gmathops::sub_d64u(System.UInt64,System.UInt64)
// ulong sub_d64u(ulong lhs, ulong rhs)
// IL
ulong sub_d64u(ulong lhs, ulong rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt64 Z0.math::sub(System.UInt64,System.UInt64)
    IL_0007: ret
}

// System.UInt64 Z0.gmathops::sub_g64u(System.UInt64,System.UInt64)
// ulong sub_g64u(ulong lhs, ulong rhs)
// IL
ulong sub_g64u(ulong lhs, ulong rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt64 Z0.gmath::sub<System.UInt64>(System.UInt64,System.UInt64)
    IL_0007: ret
}

// System.Single Z0.gmathops::sub_d32f(System.Single,System.Single)
// float sub_d32f(float lhs, float rhs)
// IL
float sub_d32f(float lhs, float rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Single Z0.fmath::sub(System.Single,System.Single)
    IL_0007: ret
}

// System.Single Z0.gmathops::sub_g32f(System.Single,System.Single)
// float sub_g32f(float lhs, float rhs)
// IL
float sub_g32f(float lhs, float rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Single Z0.gfp::sub<System.Single>(System.Single,System.Single)
    IL_0007: ret
}

// System.Double Z0.gmathops::sub_d64f(System.Double,System.Double)
// double sub_d64f(double lhs, double rhs)
// IL
double sub_d64f(double lhs, double rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Double Z0.fmath::sub(System.Double,System.Double)
    IL_0007: ret
}

// System.Double Z0.gmathops::sub_g64f(System.Double,System.Double)
// double sub_g64f(double lhs, double rhs)
// IL
double sub_g64f(double lhs, double rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Double Z0.gfp::sub<System.Double>(System.Double,System.Double)
    IL_0007: ret
}

// System.SByte Z0.gmathops::xor_d8i(System.SByte,System.SByte)
// sbyte xor_d8i(sbyte lhs, sbyte rhs)
// IL
sbyte xor_d8i(sbyte lhs, sbyte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.SByte Z0.math::xor(System.SByte,System.SByte)
    IL_0007: ret
}

// System.SByte Z0.gmathops::xor_g8i(System.SByte,System.SByte)
// sbyte xor_g8i(sbyte lhs, sbyte rhs)
// IL
sbyte xor_g8i(sbyte lhs, sbyte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.SByte Z0.gmath::xor<System.SByte>(System.SByte,System.SByte)
    IL_0007: ret
}

// System.Byte Z0.gmathops::xor_d8u(System.Byte,System.Byte)
// byte xor_d8u(byte lhs, byte rhs)
// IL
byte xor_d8u(byte lhs, byte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Byte Z0.math::xor(System.Byte,System.Byte)
    IL_0007: ret
}

// System.Byte Z0.gmathops::xor_g8u(System.Byte,System.Byte)
// byte xor_g8u(byte lhs, byte rhs)
// IL
byte xor_g8u(byte lhs, byte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Byte Z0.gmath::xor<System.Byte>(System.Byte,System.Byte)
    IL_0007: ret
}

// System.Int16 Z0.gmathops::xor_d16i(System.Int16,System.Int16)
// short xor_d16i(short lhs, short rhs)
// IL
short xor_d16i(short lhs, short rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int16 Z0.math::xor(System.Int16,System.Int16)
    IL_0007: ret
}

// System.Int16 Z0.gmathops::xor_g16i(System.Int16,System.Int16)
// short xor_g16i(short lhs, short rhs)
// IL
short xor_g16i(short lhs, short rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int16 Z0.gmath::xor<System.Int16>(System.Int16,System.Int16)
    IL_0007: ret
}

// System.UInt16 Z0.gmathops::xor_d16u(System.UInt16,System.UInt16)
// ushort xor_d16u(ushort lhs, ushort rhs)
// IL
ushort xor_d16u(ushort lhs, ushort rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.math::xor(System.UInt16,System.UInt16)
    IL_0007: ret
}

// System.UInt16 Z0.gmathops::xor_g16u(System.UInt16,System.UInt16)
// ushort xor_g16u(ushort lhs, ushort rhs)
// IL
ushort xor_g16u(ushort lhs, ushort rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.gmath::xor<System.UInt16>(System.UInt16,System.UInt16)
    IL_0007: ret
}

// System.Int32 Z0.gmathops::xor_d32i(System.Int32,System.Int32)
// int xor_d32i(int lhs, int rhs)
// IL
int xor_d32i(int lhs, int rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int32 Z0.math::xor(System.Int32,System.Int32)
    IL_0007: ret
}

// System.Int32 Z0.gmathops::xor_g32i(System.Int32,System.Int32)
// int xor_g32i(int lhs, int rhs)
// IL
int xor_g32i(int lhs, int rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int32 Z0.gmath::xor<System.Int32>(System.Int32,System.Int32)
    IL_0007: ret
}

// System.UInt32 Z0.gmathops::xor_d32u(System.UInt32,System.UInt32)
// uint xor_d32u(uint lhs, uint rhs)
// IL
uint xor_d32u(uint lhs, uint rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt32 Z0.math::xor(System.UInt32,System.UInt32)
    IL_0007: ret
}

// System.UInt32 Z0.gmathops::xor_g32u(System.UInt32,System.UInt32)
// uint xor_g32u(uint lhs, uint rhs)
// IL
uint xor_g32u(uint lhs, uint rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt32 Z0.gmath::xor<System.UInt32>(System.UInt32,System.UInt32)
    IL_0007: ret
}

// System.Int64 Z0.gmathops::xor_d64i(System.Int64,System.Int64)
// long xor_d64i(long lhs, long rhs)
// IL
long xor_d64i(long lhs, long rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int64 Z0.math::xor(System.Int64,System.Int64)
    IL_0007: ret
}

// System.Int64 Z0.gmathops::xor_g64i(System.Int64,System.Int64)
// long xor_g64i(long lhs, long rhs)
// IL
long xor_g64i(long lhs, long rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int64 Z0.gmath::xor<System.Int64>(System.Int64,System.Int64)
    IL_0007: ret
}

// System.UInt64 Z0.gmathops::xor_d64u(System.UInt64,System.UInt64)
// ulong xor_d64u(ulong lhs, ulong rhs)
// IL
ulong xor_d64u(ulong lhs, ulong rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt64 Z0.math::xor(System.UInt64,System.UInt64)
    IL_0007: ret
}

// System.UInt64 Z0.gmathops::xor_g64u(System.UInt64,System.UInt64)
// ulong xor_g64u(ulong lhs, ulong rhs)
// IL
ulong xor_g64u(ulong lhs, ulong rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt64 Z0.gmath::xor<System.UInt64>(System.UInt64,System.UInt64)
    IL_0007: ret
}

// System.UInt16 Z0.gmathops::or_d16u(System.UInt16,System.UInt16)
// ushort or_d16u(ushort lhs, ushort rhs)
// IL
ushort or_d16u(ushort lhs, ushort rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.math::or(System.UInt16,System.UInt16)
    IL_0007: ret
}

// System.UInt16 Z0.gmathops::or_g16u(System.UInt16,System.UInt16)
// ushort or_g16u(ushort lhs, ushort rhs)
// IL
ushort or_g16u(ushort lhs, ushort rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.gmath::or<System.UInt16>(System.UInt16,System.UInt16)
    IL_0007: ret
}

// System.Int32 Z0.gmathops::or_d32i(System.Int32,System.Int32)
// int or_d32i(int lhs, int rhs)
// IL
int or_d32i(int lhs, int rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int32 Z0.math::or(System.Int32,System.Int32)
    IL_0007: ret
}

// System.Int32 Z0.gmathops::or_g32i(System.Int32,System.Int32)
// int or_g32i(int lhs, int rhs)
// IL
int or_g32i(int lhs, int rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int32 Z0.gmath::or<System.Int32>(System.Int32,System.Int32)
    IL_0007: ret
}

// System.UInt32 Z0.gmathops::or_d32u(System.UInt32,System.UInt32)
// uint or_d32u(uint lhs, uint rhs)
// IL
uint or_d32u(uint lhs, uint rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt32 Z0.math::or(System.UInt32,System.UInt32)
    IL_0007: ret
}

// System.UInt32 Z0.gmathops::or_g32u(System.UInt32,System.UInt32)
// uint or_g32u(uint lhs, uint rhs)
// IL
uint or_g32u(uint lhs, uint rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt32 Z0.gmath::or<System.UInt32>(System.UInt32,System.UInt32)
    IL_0007: ret
}

// System.Int64 Z0.gmathops::or_d64i(System.Int64,System.Int64)
// long or_d64i(long lhs, long rhs)
// IL
long or_d64i(long lhs, long rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int64 Z0.math::or(System.Int64,System.Int64)
    IL_0007: ret
}

// System.Int64 Z0.gmathops::or_g64i(System.Int64,System.Int64)
// long or_g64i(long lhs, long rhs)
// IL
long or_g64i(long lhs, long rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int64 Z0.gmath::or<System.Int64>(System.Int64,System.Int64)
    IL_0007: ret
}

// System.UInt64 Z0.gmathops::or_d64u(System.UInt64,System.UInt64)
// ulong or_d64u(ulong lhs, ulong rhs)
// IL
ulong or_d64u(ulong lhs, ulong rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt64 Z0.math::or(System.UInt64,System.UInt64)
    IL_0007: ret
}

// System.UInt64 Z0.gmathops::or_g64u(System.UInt64,System.UInt64)
// ulong or_g64u(ulong lhs, ulong rhs)
// IL
ulong or_g64u(ulong lhs, ulong rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt64 Z0.gmath::or<System.UInt64>(System.UInt64,System.UInt64)
    IL_0007: ret
}

// Z0.Perm4L Z0.gmathops::perm4_assemble_id()
// Perm4L:byte perm4_assemble_id()
// IL
Perm4L:byte perm4_assemble_id()
{
    IL_0000: ldc.i4.0
    IL_0001: ldc.i4.1
    IL_0002: ldc.i4.2
    IL_0003: ldc.i4.3
    IL_0004: call Z0.Perm4L Z0.Perms::assemble(Z0.Perm4L,Z0.Perm4L,Z0.Perm4L,Z0.Perm4L)
    IL_0009: ret
}

// Z0.Perm4L Z0.gmathops::perm4_assemble_rid()
// Perm4L:byte perm4_assemble_rid()
// IL
Perm4L:byte perm4_assemble_rid()
{
    IL_0000: ldc.i4.3
    IL_0001: ldc.i4.2
    IL_0002: ldc.i4.1
    IL_0003: ldc.i4.0
    IL_0004: call Z0.Perm4L Z0.Perms::assemble(Z0.Perm4L,Z0.Perm4L,Z0.Perm4L,Z0.Perm4L)
    IL_0009: ret
}

// System.Boolean Z0.gmathops::positive_n8i(System.SByte)
// bool positive_n8i(sbyte x)
// IL
bool positive_n8i(sbyte x)
{
    IL_0000: ldarg.0
    IL_0001: ldc.i4.0
    IL_0002: cgt
    IL_0004: ret
}

// System.Boolean Z0.gmathops::positive_g8i(System.SByte)
// bool positive_g8i(sbyte x)
// IL
bool positive_g8i(sbyte x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::positive<System.SByte>(System.SByte)
    IL_0006: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000B: ret
}

// System.Boolean Z0.gmathops::positive_n8u(System.Byte)
// bool positive_n8u(byte x)
// IL
bool positive_n8u(byte x)
{
    IL_0000: ldarg.0
    IL_0001: ldc.i4.0
    IL_0002: cgt
    IL_0004: ret
}

// System.Boolean Z0.gmathops::positive_g8u(System.Byte)
// bool positive_g8u(byte x)
// IL
bool positive_g8u(byte x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::positive<System.Byte>(System.Byte)
    IL_0006: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000B: ret
}

// System.Boolean Z0.gmathops::positive_n16i(System.Int16)
// bool positive_n16i(short x)
// IL
bool positive_n16i(short x)
{
    IL_0000: ldarg.0
    IL_0001: ldc.i4.0
    IL_0002: cgt
    IL_0004: ret
}

// System.Boolean Z0.gmathops::positive_g16i(System.Int16)
// bool positive_g16i(short x)
// IL
bool positive_g16i(short x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::positive<System.Int16>(System.Int16)
    IL_0006: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000B: ret
}

// System.Boolean Z0.gmathops::positive_n16u(System.UInt16)
// bool positive_n16u(ushort x)
// IL
bool positive_n16u(ushort x)
{
    IL_0000: ldarg.0
    IL_0001: ldc.i4.0
    IL_0002: cgt
    IL_0004: ret
}

// System.Boolean Z0.gmathops::positive_g16u(System.UInt16)
// bool positive_g16u(ushort x)
// IL
bool positive_g16u(ushort x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::positive<System.UInt16>(System.UInt16)
    IL_0006: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000B: ret
}

// System.Boolean Z0.gmathops::positive_n32i(System.Int32)
// bool positive_n32i(int x)
// IL
bool positive_n32i(int x)
{
    IL_0000: ldarg.0
    IL_0001: ldc.i4.0
    IL_0002: cgt
    IL_0004: ret
}

// System.Boolean Z0.gmathops::positive_g32i(System.Int32)
// bool positive_g32i(int x)
// IL
bool positive_g32i(int x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::positive<System.Int32>(System.Int32)
    IL_0006: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000B: ret
}

// System.Boolean Z0.gmathops::positive_n32u(System.UInt32)
// bool positive_n32u(uint x)
// IL
bool positive_n32u(uint x)
{
    IL_0000: ldarg.0
    IL_0001: ldc.i4.0
    IL_0002: cgt.un
    IL_0004: ret
}

// System.Boolean Z0.gmathops::positive_g32u(System.UInt32)
// bool positive_g32u(uint x)
// IL
bool positive_g32u(uint x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::positive<System.UInt32>(System.UInt32)
    IL_0006: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000B: ret
}

// System.Boolean Z0.gmathops::positive_n64i(System.Int64)
// bool positive_n64i(long x)
// IL
bool positive_n64i(long x)
{
    IL_0000: ldarg.0
    IL_0001: ldc.i4.0
    IL_0002: conv.i8
    IL_0003: cgt
    IL_0005: ret
}

// System.Boolean Z0.gmathops::positive_g64i(System.Int64)
// bool positive_g64i(long x)
// IL
bool positive_g64i(long x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::positive<System.Int64>(System.Int64)
    IL_0006: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000B: ret
}

// System.Boolean Z0.gmathops::positive_n64u(System.UInt64)
// bool positive_n64u(ulong x)
// IL
bool positive_n64u(ulong x)
{
    IL_0000: ldarg.0
    IL_0001: ldc.i4.0
    IL_0002: conv.i8
    IL_0003: cgt.un
    IL_0005: ret
}

// System.Boolean Z0.gmathops::positive_g64u(System.UInt64)
// bool positive_g64u(ulong x)
// IL
bool positive_g64u(ulong x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::positive<System.UInt64>(System.UInt64)
    IL_0006: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000B: ret
}

// System.Boolean Z0.gmathops::positive_n32f(System.Single)
// bool positive_n32f(float x)
// IL
bool positive_n32f(float x)
{
    IL_0000: ldarg.0
    IL_0001: ldc.r4 0
    IL_0006: cgt
    IL_0008: ret
}

// System.Boolean Z0.gmathops::positive_g32f(System.Single)
// bool positive_g32f(float x)
// IL
bool positive_g32f(float x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::positive<System.Single>(System.Single)
    IL_0006: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000B: ret
}

// System.Boolean Z0.gmathops::positive_n64f(System.Double)
// bool positive_n64f(double x)
// IL
bool positive_n64f(double x)
{
    IL_0000: ldarg.0
    IL_0001: ldc.r8 0
    IL_000A: cgt
    IL_000C: ret
}

// System.Boolean Z0.gmathops::positive_g64f(System.Double)
// bool positive_g64f(double x)
// IL
bool positive_g64f(double x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::positive<System.Double>(System.Double)
    IL_0006: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000B: ret
}

// Z0.bit Z0.gmathops::ispow2_g16u(System.UInt16)
// bit ispow2_g16u(ushort a)
// IL
bit ispow2_g16u(ushort a)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::ispow2<System.UInt16>(System.UInt16)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::ispow2_16u(System.UInt16)
// bit ispow2_16u(ushort a)
// IL
bit ispow2_16u(ushort a)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.math::ispow2(System.UInt16)
    IL_0006: ret
}

// System.SByte Z0.gmathops::pow_b8i(System.SByte,System.UInt32)
// sbyte pow_b8i(sbyte b, uint exp)
// IL
sbyte pow_b8i(sbyte b, uint exp)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.SByte Z0.math::pow(System.SByte,System.UInt32)
    IL_0007: ret
}

// System.SByte Z0.gmathops::pow_g8i(System.SByte,System.UInt32)
// sbyte pow_g8i(sbyte b, uint exp)
// IL
sbyte pow_g8i(sbyte b, uint exp)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.SByte Z0.gmath::pow<System.SByte>(System.SByte,System.UInt32)
    IL_0007: ret
}

// System.Byte Z0.gmathops::pow_b8u(System.Byte,System.UInt32)
// byte pow_b8u(byte b, uint exp)
// IL
byte pow_b8u(byte b, uint exp)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Byte Z0.math::pow(System.Byte,System.UInt32)
    IL_0007: ret
}

// System.Byte Z0.gmathops::pow_g8u(System.Byte,System.UInt32)
// byte pow_g8u(byte b, uint exp)
// IL
byte pow_g8u(byte b, uint exp)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Byte Z0.gmath::pow<System.Byte>(System.Byte,System.UInt32)
    IL_0007: ret
}

// System.Int16 Z0.gmathops::pow_b16i(System.Int16,System.UInt32)
// short pow_b16i(short b, uint exp)
// IL
short pow_b16i(short b, uint exp)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int16 Z0.math::pow(System.Int16,System.UInt32)
    IL_0007: ret
}

// System.Int16 Z0.gmathops::pow_g16i(System.Int16,System.UInt32)
// short pow_g16i(short b, uint exp)
// IL
short pow_g16i(short b, uint exp)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int16 Z0.gmath::pow<System.Int16>(System.Int16,System.UInt32)
    IL_0007: ret
}

// System.UInt16 Z0.gmathops::pow_b16u(System.UInt16,System.UInt32)
// ushort pow_b16u(ushort b, uint exp)
// IL
ushort pow_b16u(ushort b, uint exp)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.math::pow(System.UInt16,System.UInt32)
    IL_0007: ret
}

// System.UInt16 Z0.gmathops::pow_g16u(System.UInt16,System.UInt32)
// ushort pow_g16u(ushort b, uint exp)
// IL
ushort pow_g16u(ushort b, uint exp)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.gmath::pow<System.UInt16>(System.UInt16,System.UInt32)
    IL_0007: ret
}

// System.Int32 Z0.gmathops::pow_b32i(System.Int32,System.UInt32)
// int pow_b32i(int b, uint exp)
// IL
int pow_b32i(int b, uint exp)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int32 Z0.math::pow(System.Int32,System.UInt32)
    IL_0007: ret
}

// System.Int32 Z0.gmathops::pow_g32i(System.Int32,System.UInt32)
// int pow_g32i(int b, uint exp)
// IL
int pow_g32i(int b, uint exp)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int32 Z0.gmath::pow<System.Int32>(System.Int32,System.UInt32)
    IL_0007: ret
}

// System.UInt32 Z0.gmathops::pow_b32u(System.UInt32,System.UInt32)
// uint pow_b32u(uint b, uint exp)
// IL
uint pow_b32u(uint b, uint exp)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt32 Z0.math::pow(System.UInt32,System.UInt32)
    IL_0007: ret
}

// System.UInt32 Z0.gmathops::pow_g32u(System.UInt32,System.UInt32)
// uint pow_g32u(uint b, uint exp)
// IL
uint pow_g32u(uint b, uint exp)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt32 Z0.gmath::pow<System.UInt32>(System.UInt32,System.UInt32)
    IL_0007: ret
}

// System.Int64 Z0.gmathops::pow_b64i(System.Int64,System.UInt32)
// long pow_b64i(long b, uint exp)
// IL
long pow_b64i(long b, uint exp)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int64 Z0.math::pow(System.Int64,System.UInt32)
    IL_0007: ret
}

// System.Int64 Z0.gmathops::pow_g64i(System.Int64,System.UInt32)
// long pow_g64i(long b, uint exp)
// IL
long pow_g64i(long b, uint exp)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int64 Z0.gmath::pow<System.Int64>(System.Int64,System.UInt32)
    IL_0007: ret
}

// System.UInt64 Z0.gmathops::pow_b64u(System.UInt64,System.UInt32)
// ulong pow_b64u(ulong b, uint exp)
// IL
ulong pow_b64u(ulong b, uint exp)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt64 Z0.math::pow(System.UInt64,System.UInt32)
    IL_0007: ret
}

// System.UInt64 Z0.gmathops::pow_g64u(System.UInt64,System.UInt32)
// ulong pow_g64u(ulong b, uint exp)
// IL
ulong pow_g64u(ulong b, uint exp)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt64 Z0.gmath::pow<System.UInt64>(System.UInt64,System.UInt32)
    IL_0007: ret
}

// System.Single Z0.gmathops::pow_d32f(System.Single,System.UInt32)
// float pow_d32f(float b, uint exp)
// IL
float pow_d32f(float b, uint exp)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: conv.r.un
    IL_0003: conv.r4
    IL_0004: call System.Single Z0.fmath::pow(System.Single,System.Single)
    IL_0009: ret
}

// System.Single Z0.gmathops::pow_g32f(System.Single,System.UInt32)
// float pow_g32f(float b, uint exp)
// IL
float pow_g32f(float b, uint exp)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Single Z0.gfp::pow<System.Single>(System.Single,System.UInt32)
    IL_0007: ret
}

// System.Double Z0.gmathops::pow_d64f(System.Double,System.UInt32)
// double pow_d64f(double b, uint exp)
// IL
double pow_d64f(double b, uint exp)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: conv.r.un
    IL_0003: conv.r8
    IL_0004: call System.Double Z0.fmath::pow(System.Double,System.Double)
    IL_0009: ret
}

// System.Double Z0.gmathops::pow_g64f(System.Double,System.UInt32)
// double pow_g64f(double b, uint exp)
// IL
double pow_g64f(double b, uint exp)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Double Z0.gfp::pow<System.Double>(System.Double,System.UInt32)
    IL_0007: ret
}

// System.SByte Z0.gmathops::sar_d8i(System.SByte,System.Byte)
// sbyte sar_d8i(sbyte lhs, byte offset)
// IL
sbyte sar_d8i(sbyte lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.SByte Z0.math::sar(System.SByte,System.Byte)
    IL_0007: ret
}

// System.SByte Z0.gmathops::sar_g8i(System.SByte,System.Byte)
// sbyte sar_g8i(sbyte lhs, byte offset)
// IL
sbyte sar_g8i(sbyte lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.SByte Z0.gmath::sar<System.SByte>(System.SByte,System.Byte)
    IL_0007: ret
}

// System.Byte Z0.gmathops::sar_d8u(System.Byte,System.Byte)
// byte sar_d8u(byte lhs, byte offset)
// IL
byte sar_d8u(byte lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Byte Z0.math::sar(System.Byte,System.Byte)
    IL_0007: ret
}

// System.Byte Z0.gmathops::sar_g8u(System.Byte,System.Byte)
// byte sar_g8u(byte lhs, byte offset)
// IL
byte sar_g8u(byte lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Byte Z0.gmath::sar<System.Byte>(System.Byte,System.Byte)
    IL_0007: ret
}

// System.Int16 Z0.gmathops::sar_d16i(System.Int16,System.Byte)
// short sar_d16i(short lhs, byte offset)
// IL
short sar_d16i(short lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int16 Z0.math::sar(System.Int16,System.Byte)
    IL_0007: ret
}

// System.Int16 Z0.gmathops::sar_g16i(System.Int16,System.Byte)
// short sar_g16i(short lhs, byte offset)
// IL
short sar_g16i(short lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int16 Z0.gmath::sar<System.Int16>(System.Int16,System.Byte)
    IL_0007: ret
}

// System.UInt16 Z0.gmathops::sar_d16u(System.UInt16,System.Byte)
// ushort sar_d16u(ushort lhs, byte offset)
// IL
ushort sar_d16u(ushort lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.math::sar(System.UInt16,System.Byte)
    IL_0007: ret
}

// System.UInt16 Z0.gmathops::sar_g16u(System.UInt16,System.Byte)
// ushort sar_g16u(ushort lhs, byte offset)
// IL
ushort sar_g16u(ushort lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.gmath::sar<System.UInt16>(System.UInt16,System.Byte)
    IL_0007: ret
}

// System.Int32 Z0.gmathops::sar_d32i(System.Int32,System.Byte)
// int sar_d32i(int lhs, byte offset)
// IL
int sar_d32i(int lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int32 Z0.math::sar(System.Int32,System.Byte)
    IL_0007: ret
}

// System.Int32 Z0.gmathops::sar_g32i(System.Int32,System.Byte)
// int sar_g32i(int lhs, byte offset)
// IL
int sar_g32i(int lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int32 Z0.gmath::sar<System.Int32>(System.Int32,System.Byte)
    IL_0007: ret
}

// System.UInt32 Z0.gmathops::sar_d32u(System.UInt32,System.Byte)
// uint sar_d32u(uint lhs, byte offset)
// IL
uint sar_d32u(uint lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt32 Z0.math::sar(System.UInt32,System.Byte)
    IL_0007: ret
}

// System.UInt32 Z0.gmathops::sar_g32u(System.UInt32,System.Byte)
// uint sar_g32u(uint lhs, byte offset)
// IL
uint sar_g32u(uint lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt32 Z0.gmath::sar<System.UInt32>(System.UInt32,System.Byte)
    IL_0007: ret
}

// System.Int64 Z0.gmathops::sar_d64i(System.Int64,System.Byte)
// long sar_d64i(long lhs, byte offset)
// IL
long sar_d64i(long lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int64 Z0.math::sar(System.Int64,System.Byte)
    IL_0007: ret
}

// System.Int64 Z0.gmathops::sar_g64i(System.Int64,System.Byte)
// long sar_g64i(long lhs, byte offset)
// IL
long sar_g64i(long lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int64 Z0.gmath::sar<System.Int64>(System.Int64,System.Byte)
    IL_0007: ret
}

// System.UInt64 Z0.gmathops::sar_d64u(System.UInt64,System.Byte)
// ulong sar_d64u(ulong lhs, byte offset)
// IL
ulong sar_d64u(ulong lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt64 Z0.math::sar(System.UInt64,System.Byte)
    IL_0007: ret
}

// System.UInt64 Z0.gmathops::sar_g64u(System.UInt64,System.Byte)
// ulong sar_g64u(ulong lhs, byte offset)
// IL
ulong sar_g64u(ulong lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt64 Z0.gmath::sar<System.UInt64>(System.UInt64,System.Byte)
    IL_0007: ret
}

// System.UInt64 Z0.gmathops::select_1(System.UInt64,System.UInt64,System.UInt64)
// ulong select_1(ulong a, ulong b, ulong c)
// IL
ulong select_1(ulong a, ulong b, ulong c)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.UInt64 Z0.gmath::select<System.UInt64>(System.UInt64,System.UInt64,System.UInt64)
    IL_0008: ret
}

// System.UInt64 Z0.gmathops::select_2(System.UInt64,System.UInt64,System.UInt64)
// ulong select_2(ulong a, ulong b, ulong c)
// IL
ulong select_2(ulong a, ulong b, ulong c)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.UInt64 Z0.gmath::blend<System.UInt64>(System.UInt64,System.UInt64,System.UInt64)
    IL_0008: ret
}

// Z0.Sign Z0.gmathops::signum_d8i(System.SByte)
// Sign:int signum_d8i(sbyte x)
// IL
Sign:int signum_d8i(sbyte x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.Sign Z0.math::signum(System.SByte)
    IL_0006: ret
}

// Z0.Sign Z0.gmathops::signum_g8i(System.SByte)
// Sign:int signum_g8i(sbyte x)
// IL
Sign:int signum_g8i(sbyte x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.Sign Z0.gmath::signum<System.SByte>(System.SByte)
    IL_0006: ret
}

// Z0.Sign Z0.gmathops::signum_d8u(System.Byte)
// Sign:int signum_d8u(byte x)
// IL
Sign:int signum_d8u(byte x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.Sign Z0.math::signum(System.Byte)
    IL_0006: ret
}

// Z0.Sign Z0.gmathops::signum_g8u(System.Byte)
// Sign:int signum_g8u(byte x)
// IL
Sign:int signum_g8u(byte x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.Sign Z0.gmath::signum<System.Byte>(System.Byte)
    IL_0006: ret
}

// Z0.Sign Z0.gmathops::signum_d16i(System.Int16)
// Sign:int signum_d16i(short x)
// IL
Sign:int signum_d16i(short x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.Sign Z0.math::signum(System.Int16)
    IL_0006: ret
}

// Z0.Sign Z0.gmathops::signum_g16i(System.Int16)
// Sign:int signum_g16i(short x)
// IL
Sign:int signum_g16i(short x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.Sign Z0.gmath::signum<System.Int16>(System.Int16)
    IL_0006: ret
}

// Z0.Sign Z0.gmathops::signum_d16u(System.UInt16)
// Sign:int signum_d16u(ushort x)
// IL
Sign:int signum_d16u(ushort x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.Sign Z0.math::signum(System.UInt16)
    IL_0006: ret
}

// Z0.Sign Z0.gmathops::signum_g16u(System.UInt16)
// Sign:int signum_g16u(ushort x)
// IL
Sign:int signum_g16u(ushort x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.Sign Z0.gmath::signum<System.UInt16>(System.UInt16)
    IL_0006: ret
}

// Z0.Sign Z0.gmathops::signum_d32i(System.Int32)
// Sign:int signum_d32i(int x)
// IL
Sign:int signum_d32i(int x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.Sign Z0.math::signum(System.Int32)
    IL_0006: ret
}

// Z0.Sign Z0.gmathops::signum_g32i(System.Int32)
// Sign:int signum_g32i(int x)
// IL
Sign:int signum_g32i(int x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.Sign Z0.gmath::signum<System.Int32>(System.Int32)
    IL_0006: ret
}

// Z0.Sign Z0.gmathops::signum_d32u(System.UInt32)
// Sign:int signum_d32u(uint x)
// IL
Sign:int signum_d32u(uint x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.Sign Z0.math::signum(System.UInt32)
    IL_0006: ret
}

// Z0.Sign Z0.gmathops::signum_g32u(System.UInt32)
// Sign:int signum_g32u(uint x)
// IL
Sign:int signum_g32u(uint x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.Sign Z0.gmath::signum<System.UInt32>(System.UInt32)
    IL_0006: ret
}

// Z0.Sign Z0.gmathops::signum_d64i(System.Int64)
// Sign:int signum_d64i(long x)
// IL
Sign:int signum_d64i(long x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.Sign Z0.math::signum(System.Int64)
    IL_0006: ret
}

// Z0.Sign Z0.gmathops::signum_g64i(System.Int64)
// Sign:int signum_g64i(long x)
// IL
Sign:int signum_g64i(long x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.Sign Z0.gmath::signum<System.Int64>(System.Int64)
    IL_0006: ret
}

// Z0.Sign Z0.gmathops::signum_d64u(System.UInt64)
// Sign:int signum_d64u(ulong x)
// IL
Sign:int signum_d64u(ulong x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.Sign Z0.math::signum(System.UInt64)
    IL_0006: ret
}

// Z0.Sign Z0.gmathops::signum_g64u(System.UInt64)
// Sign:int signum_g64u(ulong x)
// IL
Sign:int signum_g64u(ulong x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.Sign Z0.gmath::signum<System.UInt64>(System.UInt64)
    IL_0006: ret
}

// Z0.Sign Z0.gmathops::signum_g32f(System.Single)
// Sign:int signum_g32f(float x)
// IL
Sign:int signum_g32f(float x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.Sign Z0.gfp::signum<System.Single>(System.Single)
    IL_0006: ret
}

// Z0.Sign Z0.gmathops::signum_d32f(System.Single)
// Sign:int signum_d32f(float x)
// IL
Sign:int signum_d32f(float x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.Sign Z0.fmath::signum(System.Single)
    IL_0006: ret
}

// Z0.Sign Z0.gmathops::signum_d64f(System.Double)
// Sign:int signum_d64f(double x)
// IL
Sign:int signum_d64f(double x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.Sign Z0.fmath::signum(System.Double)
    IL_0006: ret
}

// Z0.Sign Z0.gmathops::signum_g64f(System.Double)
// Sign:int signum_g64f(double x)
// IL
Sign:int signum_g64f(double x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.Sign Z0.gfp::signum<System.Double>(System.Double)
    IL_0006: ret
}

// System.SByte Z0.gmathops::square_d8i(System.SByte)
// sbyte square_d8i(sbyte x)
// IL
sbyte square_d8i(sbyte x)
{
    IL_0000: ldarg.0
    IL_0001: call System.SByte Z0.math::square(System.SByte)
    IL_0006: ret
}

// System.SByte Z0.gmathops::square_g8i(System.SByte)
// sbyte square_g8i(sbyte x)
// IL
sbyte square_g8i(sbyte x)
{
    IL_0000: ldarg.0
    IL_0001: call System.SByte Z0.gmath::square<System.SByte>(System.SByte)
    IL_0006: ret
}

// System.Byte Z0.gmathops::square_d8u(System.Byte)
// byte square_d8u(byte x)
// IL
byte square_d8u(byte x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Byte Z0.math::square(System.Byte)
    IL_0006: ret
}

// System.Byte Z0.gmathops::square_g8u(System.Byte)
// byte square_g8u(byte x)
// IL
byte square_g8u(byte x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Byte Z0.gmath::square<System.Byte>(System.Byte)
    IL_0006: ret
}

// System.Int16 Z0.gmathops::square_d16i(System.Int16)
// short square_d16i(short x)
// IL
short square_d16i(short x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int16 Z0.math::square(System.Int16)
    IL_0006: ret
}

// System.Int16 Z0.gmathops::square_g16i(System.Int16)
// short square_g16i(short x)
// IL
short square_g16i(short x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int16 Z0.gmath::square<System.Int16>(System.Int16)
    IL_0006: ret
}

// System.UInt16 Z0.gmathops::square_d16u(System.UInt16)
// ushort square_d16u(ushort x)
// IL
ushort square_d16u(ushort x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt16 Z0.math::square(System.UInt16)
    IL_0006: ret
}

// System.UInt16 Z0.gmathops::square_g16u(System.UInt16)
// ushort square_g16u(ushort x)
// IL
ushort square_g16u(ushort x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt16 Z0.gmath::square<System.UInt16>(System.UInt16)
    IL_0006: ret
}

// System.Int32 Z0.gmathops::square_d32i(System.Int32)
// int square_d32i(int x)
// IL
int square_d32i(int x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int32 Z0.math::square(System.Int32)
    IL_0006: ret
}

// System.Int32 Z0.gmathops::square_g32i(System.Int32)
// int square_g32i(int x)
// IL
int square_g32i(int x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int32 Z0.gmath::square<System.Int32>(System.Int32)
    IL_0006: ret
}

// System.UInt32 Z0.gmathops::square_d32u(System.UInt32)
// uint square_d32u(uint x)
// IL
uint square_d32u(uint x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt32 Z0.math::square(System.UInt32)
    IL_0006: ret
}

// System.UInt32 Z0.gmathops::square_g32u(System.UInt32)
// uint square_g32u(uint x)
// IL
uint square_g32u(uint x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt32 Z0.gmath::square<System.UInt32>(System.UInt32)
    IL_0006: ret
}

// System.Int64 Z0.gmathops::square_d64i(System.Int64)
// long square_d64i(long x)
// IL
long square_d64i(long x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int64 Z0.math::square(System.Int64)
    IL_0006: ret
}

// System.Int64 Z0.gmathops::square_g64i(System.Int64)
// long square_g64i(long x)
// IL
long square_g64i(long x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int64 Z0.gmath::square<System.Int64>(System.Int64)
    IL_0006: ret
}

// System.UInt64 Z0.gmathops::square_d64u(System.UInt64)
// ulong square_d64u(ulong x)
// IL
ulong square_d64u(ulong x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt64 Z0.math::square(System.UInt64)
    IL_0006: ret
}

// System.UInt64 Z0.gmathops::square_g64u(System.UInt64)
// ulong square_g64u(ulong x)
// IL
ulong square_g64u(ulong x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt64 Z0.gmath::square<System.UInt64>(System.UInt64)
    IL_0006: ret
}

// System.Single Z0.gmathops::square_d32f(System.Single)
// float square_d32f(float x)
// IL
float square_d32f(float x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Single Z0.fmath::square(System.Single)
    IL_0006: ret
}

// System.Single Z0.gmathops::square_g32f(System.Single)
// float square_g32f(float x)
// IL
float square_g32f(float x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Single Z0.gfp::square<System.Single>(System.Single)
    IL_0006: ret
}

// System.Double Z0.gmathops::square_d64f(System.Double)
// double square_d64f(double x)
// IL
double square_d64f(double x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Double Z0.fmath::square(System.Double)
    IL_0006: ret
}

// System.Double Z0.gmathops::square_g64f(System.Double)
// double square_g64f(double x)
// IL
double square_g64f(double x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Double Z0.gfp::square<System.Double>(System.Double)
    IL_0006: ret
}

// System.SByte Z0.gmathops::srl_d8i(System.SByte,System.Byte)
// sbyte srl_d8i(sbyte lhs, byte offset)
// IL
sbyte srl_d8i(sbyte lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.SByte Z0.math::srl(System.SByte,System.Byte)
    IL_0007: ret
}

// System.SByte Z0.gmathops::srl_g8i(System.SByte,System.Byte)
// sbyte srl_g8i(sbyte lhs, byte offset)
// IL
sbyte srl_g8i(sbyte lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.SByte Z0.gmath::srl<System.SByte>(System.SByte,System.Byte)
    IL_0007: ret
}

// System.Byte Z0.gmathops::srl_d8u(System.Byte,System.Byte)
// byte srl_d8u(byte lhs, byte offset)
// IL
byte srl_d8u(byte lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Byte Z0.math::srl(System.Byte,System.Byte)
    IL_0007: ret
}

// System.Byte Z0.gmathops::srl_g8u(System.Byte,System.Byte)
// byte srl_g8u(byte lhs, byte offset)
// IL
byte srl_g8u(byte lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Byte Z0.gmath::srl<System.Byte>(System.Byte,System.Byte)
    IL_0007: ret
}

// System.Int16 Z0.gmathops::srl_d16i(System.Int16,System.Byte)
// short srl_d16i(short lhs, byte offset)
// IL
short srl_d16i(short lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int16 Z0.math::srl(System.Int16,System.Byte)
    IL_0007: ret
}

// System.Int16 Z0.gmathops::srl_g16i(System.Int16,System.Byte)
// short srl_g16i(short lhs, byte offset)
// IL
short srl_g16i(short lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int16 Z0.gmath::srl<System.Int16>(System.Int16,System.Byte)
    IL_0007: ret
}

// System.UInt16 Z0.gmathops::srl_d16u(System.UInt16,System.Byte)
// ushort srl_d16u(ushort lhs, byte offset)
// IL
ushort srl_d16u(ushort lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.math::srl(System.UInt16,System.Byte)
    IL_0007: ret
}

// System.UInt16 Z0.gmathops::srl_g16u(System.UInt16,System.Byte)
// ushort srl_g16u(ushort lhs, byte offset)
// IL
ushort srl_g16u(ushort lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.gmath::srl<System.UInt16>(System.UInt16,System.Byte)
    IL_0007: ret
}

// System.Int32 Z0.gmathops::srl_d32i(System.Int32,System.Byte)
// int srl_d32i(int lhs, byte offset)
// IL
int srl_d32i(int lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int32 Z0.math::srl(System.Int32,System.Byte)
    IL_0007: ret
}

// System.Int32 Z0.gmathops::srl_g32i(System.Int32,System.Byte)
// int srl_g32i(int lhs, byte offset)
// IL
int srl_g32i(int lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int32 Z0.gmath::srl<System.Int32>(System.Int32,System.Byte)
    IL_0007: ret
}

// System.UInt32 Z0.gmathops::srl_d32u(System.UInt32,System.Byte)
// uint srl_d32u(uint lhs, byte offset)
// IL
uint srl_d32u(uint lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt32 Z0.math::srl(System.UInt32,System.Byte)
    IL_0007: ret
}

// System.UInt32 Z0.gmathops::srl_g32u(System.UInt32,System.Byte)
// uint srl_g32u(uint lhs, byte offset)
// IL
uint srl_g32u(uint lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt32 Z0.gmath::srl<System.UInt32>(System.UInt32,System.Byte)
    IL_0007: ret
}

// System.Int64 Z0.gmathops::srl_d64i(System.Int64,System.Byte)
// long srl_d64i(long lhs, byte offset)
// IL
long srl_d64i(long lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int64 Z0.math::srl(System.Int64,System.Byte)
    IL_0007: ret
}

// System.Int64 Z0.gmathops::srl_g64i(System.Int64,System.Byte)
// long srl_g64i(long lhs, byte offset)
// IL
long srl_g64i(long lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int64 Z0.gmath::srl<System.Int64>(System.Int64,System.Byte)
    IL_0007: ret
}

// System.UInt64 Z0.gmathops::srl_d64u(System.UInt64,System.Byte)
// ulong srl_d64u(ulong lhs, byte offset)
// IL
ulong srl_d64u(ulong lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt64 Z0.math::srl(System.UInt64,System.Byte)
    IL_0007: ret
}

// System.UInt64 Z0.gmathops::srl_g64u(System.UInt64,System.Byte)
// ulong srl_g64u(ulong lhs, byte offset)
// IL
ulong srl_g64u(ulong lhs, byte offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt64 Z0.gmath::srl<System.UInt64>(System.UInt64,System.Byte)
    IL_0007: ret
}

// System.UInt32 Z0.gmathops::min_g32u(System.UInt32,System.UInt32)
// uint min_g32u(uint lhs, uint rhs)
// IL
uint min_g32u(uint lhs, uint rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt32 Z0.gmath::min<System.UInt32>(System.UInt32,System.UInt32)
    IL_0007: ret
}

// System.Int64 Z0.gmathops::min_d64i(System.Int64,System.Int64)
// long min_d64i(long lhs, long rhs)
// IL
long min_d64i(long lhs, long rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int64 Z0.math::min(System.Int64,System.Int64)
    IL_0007: ret
}

// System.Int64 Z0.gmathops::min_g64i(System.Int64,System.Int64)
// long min_g64i(long lhs, long rhs)
// IL
long min_g64i(long lhs, long rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int64 Z0.gmath::min<System.Int64>(System.Int64,System.Int64)
    IL_0007: ret
}

// System.UInt64 Z0.gmathops::min_d64u(System.UInt64,System.UInt64)
// ulong min_d64u(ulong lhs, ulong rhs)
// IL
ulong min_d64u(ulong lhs, ulong rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt64 Z0.math::min(System.UInt64,System.UInt64)
    IL_0007: ret
}

// System.UInt64 Z0.gmathops::min_g64u(System.UInt64,System.UInt64)
// ulong min_g64u(ulong lhs, ulong rhs)
// IL
ulong min_g64u(ulong lhs, ulong rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt64 Z0.gmath::min<System.UInt64>(System.UInt64,System.UInt64)
    IL_0007: ret
}

// System.Single Z0.gmathops::min_d32f(System.Single,System.Single)
// float min_d32f(float lhs, float rhs)
// IL
float min_d32f(float lhs, float rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Single Z0.fmath::min(System.Single,System.Single)
    IL_0007: ret
}

// System.Single Z0.gmathops::min_g32f(System.Single,System.Single)
// float min_g32f(float lhs, float rhs)
// IL
float min_g32f(float lhs, float rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Single Z0.gfp::min<System.Single>(System.Single,System.Single)
    IL_0007: ret
}

// System.Double Z0.gmathops::min_d64f(System.Double,System.Double)
// double min_d64f(double lhs, double rhs)
// IL
double min_d64f(double lhs, double rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Double Z0.fmath::min(System.Double,System.Double)
    IL_0007: ret
}

// System.Double Z0.gmathops::min_g64f(System.Double,System.Double)
// double min_g64f(double lhs, double rhs)
// IL
double min_g64f(double lhs, double rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Double Z0.gfp::min<System.Double>(System.Double,System.Double)
    IL_0007: ret
}

// System.SByte Z0.gmathops::mod_n8i(System.SByte,System.SByte)
// sbyte mod_n8i(sbyte lhs, sbyte rhs)
// IL
sbyte mod_n8i(sbyte lhs, sbyte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: rem
    IL_0003: conv.i1
    IL_0004: ret
}

// System.SByte Z0.gmathops::mod_d8i(System.SByte,System.SByte)
// sbyte mod_d8i(sbyte lhs, sbyte rhs)
// IL
sbyte mod_d8i(sbyte lhs, sbyte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.SByte Z0.math::mod(System.SByte,System.SByte)
    IL_0007: ret
}

// System.SByte Z0.gmathops::mod_g8i(System.SByte,System.SByte)
// sbyte mod_g8i(sbyte lhs, sbyte rhs)
// IL
sbyte mod_g8i(sbyte lhs, sbyte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.SByte Z0.gmath::mod<System.SByte>(System.SByte,System.SByte)
    IL_0007: ret
}

// System.Byte Z0.gmathops::mod_n8u(System.Byte,System.Byte)
// byte mod_n8u(byte lhs, byte rhs)
// IL
byte mod_n8u(byte lhs, byte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: rem
    IL_0003: conv.u1
    IL_0004: ret
}

// System.Byte Z0.gmathops::mod_d8u(System.Byte,System.Byte)
// byte mod_d8u(byte lhs, byte rhs)
// IL
byte mod_d8u(byte lhs, byte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Byte Z0.math::mod(System.Byte,System.Byte)
    IL_0007: ret
}

// System.Byte Z0.gmathops::mod_g8u(System.Byte,System.Byte)
// byte mod_g8u(byte lhs, byte rhs)
// IL
byte mod_g8u(byte lhs, byte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Byte Z0.gmath::mod<System.Byte>(System.Byte,System.Byte)
    IL_0007: ret
}

// System.Int16 Z0.gmathops::mod_d16i(System.Int16,System.Int16)
// short mod_d16i(short lhs, short rhs)
// IL
short mod_d16i(short lhs, short rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int16 Z0.math::mod(System.Int16,System.Int16)
    IL_0007: ret
}

// System.Int16 Z0.gmathops::mod_g16i(System.Int16,System.Int16)
// short mod_g16i(short lhs, short rhs)
// IL
short mod_g16i(short lhs, short rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int16 Z0.gmath::mod<System.Int16>(System.Int16,System.Int16)
    IL_0007: ret
}

// System.UInt16 Z0.gmathops::mod_d16u(System.UInt16,System.UInt16)
// ushort mod_d16u(ushort lhs, ushort rhs)
// IL
ushort mod_d16u(ushort lhs, ushort rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.math::mod(System.UInt16,System.UInt16)
    IL_0007: ret
}

// System.UInt16 Z0.gmathops::mod_g16u(System.UInt16,System.UInt16)
// ushort mod_g16u(ushort lhs, ushort rhs)
// IL
ushort mod_g16u(ushort lhs, ushort rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.gmath::mod<System.UInt16>(System.UInt16,System.UInt16)
    IL_0007: ret
}

// System.Int32 Z0.gmathops::mod_d32i(System.Int32,System.Int32)
// int mod_d32i(int lhs, int rhs)
// IL
int mod_d32i(int lhs, int rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int32 Z0.math::mod(System.Int32,System.Int32)
    IL_0007: ret
}

// System.Int32 Z0.gmathops::mod_g32i(System.Int32,System.Int32)
// int mod_g32i(int lhs, int rhs)
// IL
int mod_g32i(int lhs, int rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int32 Z0.gmath::mod<System.Int32>(System.Int32,System.Int32)
    IL_0007: ret
}

// System.UInt32 Z0.gmathops::mod_d32u(System.UInt32,System.UInt32)
// uint mod_d32u(uint lhs, uint rhs)
// IL
uint mod_d32u(uint lhs, uint rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt32 Z0.math::mod(System.UInt32,System.UInt32)
    IL_0007: ret
}

// System.UInt32 Z0.gmathops::mod_g32u(System.UInt32,System.UInt32)
// uint mod_g32u(uint lhs, uint rhs)
// IL
uint mod_g32u(uint lhs, uint rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt32 Z0.gmath::mod<System.UInt32>(System.UInt32,System.UInt32)
    IL_0007: ret
}

// System.Int64 Z0.gmathops::mod_d64i(System.Int64,System.Int64)
// long mod_d64i(long lhs, long rhs)
// IL
long mod_d64i(long lhs, long rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int64 Z0.math::mod(System.Int64,System.Int64)
    IL_0007: ret
}

// System.Int64 Z0.gmathops::mod_g64i(System.Int64,System.Int64)
// long mod_g64i(long lhs, long rhs)
// IL
long mod_g64i(long lhs, long rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int64 Z0.gmath::mod<System.Int64>(System.Int64,System.Int64)
    IL_0007: ret
}

// System.UInt64 Z0.gmathops::mod_d64u(System.UInt64,System.UInt64)
// ulong mod_d64u(ulong lhs, ulong rhs)
// IL
ulong mod_d64u(ulong lhs, ulong rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt64 Z0.math::mod(System.UInt64,System.UInt64)
    IL_0007: ret
}

// System.UInt64 Z0.gmathops::mod_g64u(System.UInt64,System.UInt64)
// ulong mod_g64u(ulong lhs, ulong rhs)
// IL
ulong mod_g64u(ulong lhs, ulong rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt64 Z0.gmath::mod<System.UInt64>(System.UInt64,System.UInt64)
    IL_0007: ret
}

// System.Single Z0.gmathops::mod_d32f(System.Single,System.Single)
// float mod_d32f(float lhs, float rhs)
// IL
float mod_d32f(float lhs, float rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Single Z0.fmath::mod(System.Single,System.Single)
    IL_0007: ret
}

// System.Single Z0.gmathops::mod_g32f(System.Single,System.Single)
// float mod_g32f(float lhs, float rhs)
// IL
float mod_g32f(float lhs, float rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Single Z0.gfp::mod<System.Single>(System.Single,System.Single)
    IL_0007: ret
}

// System.Double Z0.gmathops::mod_d64f(System.Double,System.Double)
// double mod_d64f(double lhs, double rhs)
// IL
double mod_d64f(double lhs, double rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Double Z0.fmath::mod(System.Double,System.Double)
    IL_0007: ret
}

// System.Double Z0.gmathops::mod_g64f(System.Double,System.Double)
// double mod_g64f(double lhs, double rhs)
// IL
double mod_g64f(double lhs, double rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Double Z0.gfp::mod<System.Double>(System.Double,System.Double)
    IL_0007: ret
}

// System.Void Z0.gmathops::mul_u128(System.ReadOnlySpan`1<System.UInt64>,System.ReadOnlySpan`1<System.UInt64>,System.Span`1<Z0.Pair`1<System.UInt64>>)
// void mul_u128(ReadOnlySpan<ulong> lhs, ReadOnlySpan<ulong> rhs, Span<Pair<ulong>> dst)
// IL
void mul_u128(ReadOnlySpan<ulong> lhs, ReadOnlySpan<ulong> rhs, Span<Pair<ulong>> dst)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.Void Z0.math::mul64x128(System.ReadOnlySpan`1<System.UInt64>,System.ReadOnlySpan`1<System.UInt64>,System.Span`1<Z0.Pair`1<System.UInt64>>)
    IL_0008: ret
}

// System.SByte Z0.gmathops::mul_d8i(System.SByte,System.SByte)
// sbyte mul_d8i(sbyte lhs, sbyte rhs)
// IL
sbyte mul_d8i(sbyte lhs, sbyte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.SByte Z0.math::mul(System.SByte,System.SByte)
    IL_0007: ret
}

// System.SByte Z0.gmathops::mul_g8i(System.SByte,System.SByte)
// sbyte mul_g8i(sbyte lhs, sbyte rhs)
// IL
sbyte mul_g8i(sbyte lhs, sbyte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.SByte Z0.gmath::mul<System.SByte>(System.SByte,System.SByte)
    IL_0007: ret
}

// System.Byte Z0.gmathops::mul_d8u(System.Byte,System.Byte)
// byte mul_d8u(byte lhs, byte rhs)
// IL
byte mul_d8u(byte lhs, byte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Byte Z0.math::mul(System.Byte,System.Byte)
    IL_0007: ret
}

// System.Byte Z0.gmathops::mul_g8u(System.Byte,System.Byte)
// byte mul_g8u(byte lhs, byte rhs)
// IL
byte mul_g8u(byte lhs, byte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Byte Z0.gmath::mul<System.Byte>(System.Byte,System.Byte)
    IL_0007: ret
}

// System.Int16 Z0.gmathops::mul_d16i(System.Int16,System.Int16)
// short mul_d16i(short lhs, short rhs)
// IL
short mul_d16i(short lhs, short rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int16 Z0.math::mul(System.Int16,System.Int16)
    IL_0007: ret
}

// System.Int16 Z0.gmathops::mul_g16i(System.Int16,System.Int16)
// short mul_g16i(short lhs, short rhs)
// IL
short mul_g16i(short lhs, short rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int16 Z0.gmath::mul<System.Int16>(System.Int16,System.Int16)
    IL_0007: ret
}

// System.UInt16 Z0.gmathops::mul_d16u(System.UInt16,System.UInt16)
// ushort mul_d16u(ushort lhs, ushort rhs)
// IL
ushort mul_d16u(ushort lhs, ushort rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.math::mul(System.UInt16,System.UInt16)
    IL_0007: ret
}

// System.UInt16 Z0.gmathops::mul_g16u(System.UInt16,System.UInt16)
// ushort mul_g16u(ushort lhs, ushort rhs)
// IL
ushort mul_g16u(ushort lhs, ushort rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.gmath::mul<System.UInt16>(System.UInt16,System.UInt16)
    IL_0007: ret
}

// System.Int32 Z0.gmathops::mul_d32i(System.Int32,System.Int32)
// int mul_d32i(int lhs, int rhs)
// IL
int mul_d32i(int lhs, int rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int32 Z0.math::mul(System.Int32,System.Int32)
    IL_0007: ret
}

// System.Int32 Z0.gmathops::mul_g32i(System.Int32,System.Int32)
// int mul_g32i(int lhs, int rhs)
// IL
int mul_g32i(int lhs, int rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int32 Z0.gmath::mul<System.Int32>(System.Int32,System.Int32)
    IL_0007: ret
}

// System.UInt32 Z0.gmathops::mul_d32u(System.UInt32,System.UInt32)
// uint mul_d32u(uint lhs, uint rhs)
// IL
uint mul_d32u(uint lhs, uint rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt32 Z0.math::mul(System.UInt32,System.UInt32)
    IL_0007: ret
}

// System.UInt32 Z0.gmathops::mul_g32u(System.UInt32,System.UInt32)
// uint mul_g32u(uint lhs, uint rhs)
// IL
uint mul_g32u(uint lhs, uint rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt32 Z0.gmath::mul<System.UInt32>(System.UInt32,System.UInt32)
    IL_0007: ret
}

// System.Int64 Z0.gmathops::mul_d64i(System.Int64,System.Int64)
// long mul_d64i(long lhs, long rhs)
// IL
long mul_d64i(long lhs, long rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int64 Z0.math::mul(System.Int64,System.Int64)
    IL_0007: ret
}

// System.Int64 Z0.gmathops::mul_g64i(System.Int64,System.Int64)
// long mul_g64i(long lhs, long rhs)
// IL
long mul_g64i(long lhs, long rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int64 Z0.gmath::mul<System.Int64>(System.Int64,System.Int64)
    IL_0007: ret
}

// System.UInt64 Z0.gmathops::mul_d64u(System.UInt64,System.UInt64)
// ulong mul_d64u(ulong lhs, ulong rhs)
// IL
ulong mul_d64u(ulong lhs, ulong rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt64 Z0.math::mul(System.UInt64,System.UInt64)
    IL_0007: ret
}

// System.UInt64 Z0.gmathops::mul_g64u(System.UInt64,System.UInt64)
// ulong mul_g64u(ulong lhs, ulong rhs)
// IL
ulong mul_g64u(ulong lhs, ulong rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt64 Z0.gmath::mul<System.UInt64>(System.UInt64,System.UInt64)
    IL_0007: ret
}

// System.Single Z0.gmathops::mul_d32f(System.Single,System.Single)
// float mul_d32f(float lhs, float rhs)
// IL
float mul_d32f(float lhs, float rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Single Z0.fmath::mul(System.Single,System.Single)
    IL_0007: ret
}

// System.Single Z0.gmathops::mul_g32f(System.Single,System.Single)
// float mul_g32f(float lhs, float rhs)
// IL
float mul_g32f(float lhs, float rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Single Z0.gfp::mul<System.Single>(System.Single,System.Single)
    IL_0007: ret
}

// System.Double Z0.gmathops::mul_d64f(System.Double,System.Double)
// double mul_d64f(double lhs, double rhs)
// IL
double mul_d64f(double lhs, double rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Double Z0.fmath::mul(System.Double,System.Double)
    IL_0007: ret
}

// System.Double Z0.gmathops::mul_g64f(System.Double,System.Double)
// double mul_g64f(double lhs, double rhs)
// IL
double mul_g64f(double lhs, double rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Double Z0.gfp::mul<System.Double>(System.Double,System.Double)
    IL_0007: ret
}

// System.SByte Z0.gmathops::negate_d8i(System.SByte)
// sbyte negate_d8i(sbyte x)
// IL
sbyte negate_d8i(sbyte x)
{
    IL_0000: ldarg.0
    IL_0001: call System.SByte Z0.math::negate(System.SByte)
    IL_0006: ret
}

// System.SByte Z0.gmathops::negate_g8i(System.SByte)
// sbyte negate_g8i(sbyte x)
// IL
sbyte negate_g8i(sbyte x)
{
    IL_0000: ldarg.0
    IL_0001: call System.SByte Z0.gmath::negate<System.SByte>(System.SByte)
    IL_0006: ret
}

// System.Byte Z0.gmathops::negate_d8u(System.Byte)
// byte negate_d8u(byte x)
// IL
byte negate_d8u(byte x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Byte Z0.math::negate(System.Byte)
    IL_0006: ret
}

// System.Byte Z0.gmathops::negate_g8u(System.Byte)
// byte negate_g8u(byte x)
// IL
byte negate_g8u(byte x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Byte Z0.gmath::negate<System.Byte>(System.Byte)
    IL_0006: ret
}

// System.Int16 Z0.gmathops::negate_d16i(System.Int16)
// short negate_d16i(short x)
// IL
short negate_d16i(short x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int16 Z0.math::negate(System.Int16)
    IL_0006: ret
}

// System.Int16 Z0.gmathops::negate_g16i(System.Int16)
// short negate_g16i(short x)
// IL
short negate_g16i(short x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int16 Z0.gmath::negate<System.Int16>(System.Int16)
    IL_0006: ret
}

// System.UInt16 Z0.gmathops::negate_d16u(System.UInt16)
// ushort negate_d16u(ushort x)
// IL
ushort negate_d16u(ushort x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt16 Z0.math::negate(System.UInt16)
    IL_0006: ret
}

// System.UInt16 Z0.gmathops::negate_g16u(System.UInt16)
// ushort negate_g16u(ushort x)
// IL
ushort negate_g16u(ushort x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt16 Z0.gmath::negate<System.UInt16>(System.UInt16)
    IL_0006: ret
}

// System.Int32 Z0.gmathops::negate_d32i(System.Int32)
// int negate_d32i(int x)
// IL
int negate_d32i(int x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int32 Z0.math::negate(System.Int32)
    IL_0006: ret
}

// System.Int32 Z0.gmathops::negate_g32i(System.Int32)
// int negate_g32i(int x)
// IL
int negate_g32i(int x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int32 Z0.gmath::negate<System.Int32>(System.Int32)
    IL_0006: ret
}

// System.UInt32 Z0.gmathops::negate_d32u(System.UInt32)
// uint negate_d32u(uint x)
// IL
uint negate_d32u(uint x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt32 Z0.math::negate(System.UInt32)
    IL_0006: ret
}

// System.UInt32 Z0.gmathops::negate_g32u(System.UInt32)
// uint negate_g32u(uint x)
// IL
uint negate_g32u(uint x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt32 Z0.gmath::negate<System.UInt32>(System.UInt32)
    IL_0006: ret
}

// System.Int64 Z0.gmathops::negate_d64i(System.Int64)
// long negate_d64i(long x)
// IL
long negate_d64i(long x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int64 Z0.math::negate(System.Int64)
    IL_0006: ret
}

// System.Int64 Z0.gmathops::negate_g64i(System.Int64)
// long negate_g64i(long x)
// IL
long negate_g64i(long x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int64 Z0.gmath::negate<System.Int64>(System.Int64)
    IL_0006: ret
}

// System.UInt64 Z0.gmathops::negate_d64u(System.UInt64)
// ulong negate_d64u(ulong x)
// IL
ulong negate_d64u(ulong x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt64 Z0.math::negate(System.UInt64)
    IL_0006: ret
}

// System.UInt64 Z0.gmathops::negate_g64u(System.UInt64)
// ulong negate_g64u(ulong x)
// IL
ulong negate_g64u(ulong x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt64 Z0.gmath::negate<System.UInt64>(System.UInt64)
    IL_0006: ret
}

// System.Single Z0.gmathops::negate_g32f(System.Single)
// float negate_g32f(float x)
// IL
float negate_g32f(float x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Single Z0.gfp::negate<System.Single>(System.Single)
    IL_0006: ret
}

// System.Single Z0.gmathops::negate_d32f(System.Single)
// float negate_d32f(float x)
// IL
float negate_d32f(float x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Single Z0.fmath::negate(System.Single)
    IL_0006: ret
}

// System.Double Z0.gmathops::negate_d64f(System.Double)
// double negate_d64f(double x)
// IL
double negate_d64f(double x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Double Z0.fmath::negate(System.Double)
    IL_0006: ret
}

// System.Double Z0.gmathops::negate_g64f(System.Double)
// double negate_g64f(double x)
// IL
double negate_g64f(double x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Double Z0.gfp::negate<System.Double>(System.Double)
    IL_0006: ret
}

// System.Boolean Z0.gmathops::negative_d8i(System.SByte)
// bool negative_d8i(sbyte x)
// IL
bool negative_d8i(sbyte x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.math::negative(System.SByte)
    IL_0006: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000B: ret
}

// System.Boolean Z0.gmathops::negative_g8i(System.SByte)
// bool negative_g8i(sbyte x)
// IL
bool negative_g8i(sbyte x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::negative<System.SByte>(System.SByte)
    IL_0006: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000B: ret
}

// System.Boolean Z0.gmathops::negative_d16i(System.Int16)
// bool negative_d16i(short x)
// IL
bool negative_d16i(short x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.math::negative(System.Int16)
    IL_0006: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000B: ret
}

// System.Boolean Z0.gmathops::negative_g16i(System.Int16)
// bool negative_g16i(short x)
// IL
bool negative_g16i(short x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::negative<System.Int16>(System.Int16)
    IL_0006: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000B: ret
}

// System.Boolean Z0.gmathops::negative_d32i(System.Int32)
// bool negative_d32i(int x)
// IL
bool negative_d32i(int x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.math::negative(System.Int32)
    IL_0006: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000B: ret
}

// System.Boolean Z0.gmathops::negative_g32i(System.Int32)
// bool negative_g32i(int x)
// IL
bool negative_g32i(int x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::negative<System.Int32>(System.Int32)
    IL_0006: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000B: ret
}

// System.Boolean Z0.gmathops::negative_d64i(System.Int64)
// bool negative_d64i(long x)
// IL
bool negative_d64i(long x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.math::negative(System.Int64)
    IL_0006: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000B: ret
}

// System.Boolean Z0.gmathops::negative_g64i(System.Int64)
// bool negative_g64i(long x)
// IL
bool negative_g64i(long x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::negative<System.Int64>(System.Int64)
    IL_0006: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000B: ret
}

// System.Boolean Z0.gmathops::negative_d32f(System.Single)
// bool negative_d32f(float x)
// IL
bool negative_d32f(float x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.math::negative(System.Single)
    IL_0006: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000B: ret
}

// System.Boolean Z0.gmathops::negative_d64f(System.Double)
// bool negative_d64f(double x)
// IL
bool negative_d64f(double x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.math::negative(System.Double)
    IL_0006: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000B: ret
}

// System.Boolean Z0.gmathops::negative_n32f(System.Single)
// bool negative_n32f(float x)
// IL
bool negative_n32f(float x)
{
    IL_0000: ldarg.0
    IL_0001: ldc.r4 0
    IL_0006: clt
    IL_0008: ret
}

// System.Boolean Z0.gmathops::negative_g32f(System.Single)
// bool negative_g32f(float x)
// IL
bool negative_g32f(float x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::negative<System.Single>(System.Single)
    IL_0006: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000B: ret
}

// System.Boolean Z0.gmathops::negative_n64f(System.Double)
// bool negative_n64f(double x)
// IL
bool negative_n64f(double x)
{
    IL_0000: ldarg.0
    IL_0001: ldc.r8 0
    IL_000A: clt
    IL_000C: ret
}

// System.Boolean Z0.gmathops::negative_g64f(System.Double)
// bool negative_g64f(double x)
// IL
bool negative_g64f(double x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::negative<System.Double>(System.Double)
    IL_0006: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000B: ret
}

// System.Boolean Z0.gmathops::nonzero_d8i(System.SByte)
// bool nonzero_d8i(sbyte x)
// IL
bool nonzero_d8i(sbyte x)
{
    IL_0000: ldarga.s x
    IL_0002: ldc.i4.0
    IL_0003: call System.Boolean System.SByte::Equals(System.SByte)
    IL_0008: ldc.i4.0
    IL_0009: ceq
    IL_000B: ret
}

// Z0.bit Z0.gmathops::nonzero_g8i(System.SByte)
// bit nonzero_g8i(sbyte x)
// IL
bit nonzero_g8i(sbyte x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::nonz<System.SByte>(System.SByte)
    IL_0006: ret
}

// System.Boolean Z0.gmathops::nonzero_d8u(System.Byte)
// bool nonzero_d8u(byte x)
// IL
bool nonzero_d8u(byte x)
{
    IL_0000: ldarga.s x
    IL_0002: ldc.i4.0
    IL_0003: call System.Boolean System.Byte::Equals(System.Byte)
    IL_0008: ldc.i4.0
    IL_0009: ceq
    IL_000B: ret
}

// Z0.bit Z0.gmathops::nonzero_g8u(System.Byte)
// bit nonzero_g8u(byte x)
// IL
bit nonzero_g8u(byte x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::nonz<System.Byte>(System.Byte)
    IL_0006: ret
}

// System.Boolean Z0.gmathops::nonzero_d16i(System.Int16)
// bool nonzero_d16i(short x)
// IL
bool nonzero_d16i(short x)
{
    IL_0000: ldarga.s x
    IL_0002: ldc.i4.0
    IL_0003: call System.Boolean System.Int16::Equals(System.Int16)
    IL_0008: ldc.i4.0
    IL_0009: ceq
    IL_000B: ret
}

// Z0.bit Z0.gmathops::nonzero_g16i(System.Int16)
// bit nonzero_g16i(short x)
// IL
bit nonzero_g16i(short x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::nonz<System.Int16>(System.Int16)
    IL_0006: ret
}

// System.Boolean Z0.gmathops::nonzero_d16u(System.UInt16)
// bool nonzero_d16u(ushort x)
// IL
bool nonzero_d16u(ushort x)
{
    IL_0000: ldarga.s x
    IL_0002: ldc.i4.0
    IL_0003: call System.Boolean System.UInt16::Equals(System.UInt16)
    IL_0008: ldc.i4.0
    IL_0009: ceq
    IL_000B: ret
}

// Z0.bit Z0.gmathops::nonzero_g16u(System.UInt16)
// bit nonzero_g16u(ushort x)
// IL
bit nonzero_g16u(ushort x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::nonz<System.UInt16>(System.UInt16)
    IL_0006: ret
}

// System.Boolean Z0.gmathops::nonzero_d32i(System.Int32)
// bool nonzero_d32i(int x)
// IL
bool nonzero_d32i(int x)
{
    IL_0000: ldarga.s x
    IL_0002: ldc.i4.0
    IL_0003: call System.Boolean System.Int32::Equals(System.Int32)
    IL_0008: ldc.i4.0
    IL_0009: ceq
    IL_000B: ret
}

// Z0.bit Z0.gmathops::nonzero_g32i(System.Int32)
// bit nonzero_g32i(int x)
// IL
bit nonzero_g32i(int x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::nonz<System.Int32>(System.Int32)
    IL_0006: ret
}

// System.Boolean Z0.gmathops::nonzero_d32u(System.UInt32)
// bool nonzero_d32u(uint x)
// IL
bool nonzero_d32u(uint x)
{
    IL_0000: ldarga.s x
    IL_0002: ldc.i4.0
    IL_0003: call System.Boolean System.UInt32::Equals(System.UInt32)
    IL_0008: ldc.i4.0
    IL_0009: ceq
    IL_000B: ret
}

// Z0.bit Z0.gmathops::nonzero_g32u(System.UInt32)
// bit nonzero_g32u(uint x)
// IL
bit nonzero_g32u(uint x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::nonz<System.UInt32>(System.UInt32)
    IL_0006: ret
}

// System.Boolean Z0.gmathops::nonzero_d64i(System.Int64)
// bool nonzero_d64i(long x)
// IL
bool nonzero_d64i(long x)
{
    IL_0000: ldarga.s x
    IL_0002: ldc.i4.0
    IL_0003: conv.i8
    IL_0004: call System.Boolean System.Int64::Equals(System.Int64)
    IL_0009: ldc.i4.0
    IL_000A: ceq
    IL_000C: ret
}

// Z0.bit Z0.gmathops::nonzero_g64i(System.Int64)
// bit nonzero_g64i(long x)
// IL
bit nonzero_g64i(long x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::nonz<System.Int64>(System.Int64)
    IL_0006: ret
}

// System.Boolean Z0.gmathops::nonzero_n64u(System.UInt64)
// bool nonzero_n64u(ulong x)
// IL
bool nonzero_n64u(ulong x)
{
    IL_0000: ldarga.s x
    IL_0002: ldc.i4.0
    IL_0003: conv.i8
    IL_0004: call System.Boolean System.UInt64::Equals(System.UInt64)
    IL_0009: ldc.i4.0
    IL_000A: ceq
    IL_000C: ret
}

// Z0.bit Z0.gmathops::nonzero_g64u(System.UInt64)
// bit nonzero_g64u(ulong x)
// IL
bit nonzero_g64u(ulong x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::nonz<System.UInt64>(System.UInt64)
    IL_0006: ret
}

// System.Boolean Z0.gmathops::nonzero_n32f(System.Single)
// bool nonzero_n32f(float x)
// IL
bool nonzero_n32f(float x)
{
    IL_0000: ldarg.0
    IL_0001: ldc.r4 0
    IL_0006: ceq
    IL_0008: ldc.i4.0
    IL_0009: ceq
    IL_000B: ret
}

// System.Boolean Z0.gmathops::nonzero_g32f(System.Single)
// bool nonzero_g32f(float x)
// IL
bool nonzero_g32f(float x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::nonz<System.Single>(System.Single)
    IL_0006: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000B: ret
}

// System.Boolean Z0.gmathops::nonzero_n64f(System.Double)
// bool nonzero_n64f(double x)
// IL
bool nonzero_n64f(double x)
{
    IL_0000: ldarg.0
    IL_0001: ldc.r8 0
    IL_000A: ceq
    IL_000C: ldc.i4.0
    IL_000D: ceq
    IL_000F: ret
}

// System.Boolean Z0.gmathops::nonzero_g64f(System.Double)
// bool nonzero_g64f(double x)
// IL
bool nonzero_g64f(double x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::nonz<System.Double>(System.Double)
    IL_0006: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000B: ret
}

// System.SByte Z0.gmathops::not_d8i(System.SByte)
// sbyte not_d8i(sbyte x)
// IL
sbyte not_d8i(sbyte x)
{
    IL_0000: ldarg.0
    IL_0001: call System.SByte Z0.math::not(System.SByte)
    IL_0006: ret
}

// System.SByte Z0.gmathops::not_g8i(System.SByte)
// sbyte not_g8i(sbyte x)
// IL
sbyte not_g8i(sbyte x)
{
    IL_0000: ldarg.0
    IL_0001: call System.SByte Z0.gmath::not<System.SByte>(System.SByte)
    IL_0006: ret
}

// System.Byte Z0.gmathops::not_d8u(System.Byte)
// byte not_d8u(byte x)
// IL
byte not_d8u(byte x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Byte Z0.math::not(System.Byte)
    IL_0006: ret
}

// System.Byte Z0.gmathops::not_g8u(System.Byte)
// byte not_g8u(byte x)
// IL
byte not_g8u(byte x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Byte Z0.gmath::not<System.Byte>(System.Byte)
    IL_0006: ret
}

// System.Int16 Z0.gmathops::not_d16i(System.Int16)
// short not_d16i(short x)
// IL
short not_d16i(short x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int16 Z0.math::not(System.Int16)
    IL_0006: ret
}

// System.Int16 Z0.gmathops::not_g16i(System.Int16)
// short not_g16i(short x)
// IL
short not_g16i(short x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int16 Z0.gmath::not<System.Int16>(System.Int16)
    IL_0006: ret
}

// System.UInt16 Z0.gmathops::not_d16u(System.UInt16)
// ushort not_d16u(ushort x)
// IL
ushort not_d16u(ushort x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt16 Z0.math::not(System.UInt16)
    IL_0006: ret
}

// System.UInt16 Z0.gmathops::not_g16u(System.UInt16)
// ushort not_g16u(ushort x)
// IL
ushort not_g16u(ushort x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt16 Z0.gmath::not<System.UInt16>(System.UInt16)
    IL_0006: ret
}

// System.Int32 Z0.gmathops::not_d32i(System.Int32)
// int not_d32i(int x)
// IL
int not_d32i(int x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int32 Z0.math::not(System.Int32)
    IL_0006: ret
}

// System.Int32 Z0.gmathops::not_g32i(System.Int32)
// int not_g32i(int x)
// IL
int not_g32i(int x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int32 Z0.gmath::not<System.Int32>(System.Int32)
    IL_0006: ret
}

// System.UInt32 Z0.gmathops::not_d32u(System.UInt32)
// uint not_d32u(uint x)
// IL
uint not_d32u(uint x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt32 Z0.math::not(System.UInt32)
    IL_0006: ret
}

// System.UInt32 Z0.gmathops::not_g32u(System.UInt32)
// uint not_g32u(uint x)
// IL
uint not_g32u(uint x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt32 Z0.gmath::not<System.UInt32>(System.UInt32)
    IL_0006: ret
}

// System.Int64 Z0.gmathops::not_d64i(System.Int64)
// long not_d64i(long x)
// IL
long not_d64i(long x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int64 Z0.math::not(System.Int64)
    IL_0006: ret
}

// System.Int64 Z0.gmathops::not_g64i(System.Int64)
// long not_g64i(long x)
// IL
long not_g64i(long x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int64 Z0.gmath::not<System.Int64>(System.Int64)
    IL_0006: ret
}

// System.UInt64 Z0.gmathops::not_d64u(System.UInt64)
// ulong not_d64u(ulong x)
// IL
ulong not_d64u(ulong x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt64 Z0.math::not(System.UInt64)
    IL_0006: ret
}

// System.UInt64 Z0.gmathops::not_g64u(System.UInt64)
// ulong not_g64u(ulong x)
// IL
ulong not_g64u(ulong x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt64 Z0.gmath::not<System.UInt64>(System.UInt64)
    IL_0006: ret
}

// System.SByte Z0.gmathops::or_d8i(System.SByte,System.SByte)
// sbyte or_d8i(sbyte lhs, sbyte rhs)
// IL
sbyte or_d8i(sbyte lhs, sbyte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.SByte Z0.math::or(System.SByte,System.SByte)
    IL_0007: ret
}

// System.SByte Z0.gmathops::or_g8i(System.SByte,System.SByte)
// sbyte or_g8i(sbyte lhs, sbyte rhs)
// IL
sbyte or_g8i(sbyte lhs, sbyte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.SByte Z0.gmath::or<System.SByte>(System.SByte,System.SByte)
    IL_0007: ret
}

// System.Byte Z0.gmathops::or_d8u(System.Byte,System.Byte)
// byte or_d8u(byte lhs, byte rhs)
// IL
byte or_d8u(byte lhs, byte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Byte Z0.math::or(System.Byte,System.Byte)
    IL_0007: ret
}

// System.Byte Z0.gmathops::or_g8u(System.Byte,System.Byte)
// byte or_g8u(byte lhs, byte rhs)
// IL
byte or_g8u(byte lhs, byte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Byte Z0.gmath::or<System.Byte>(System.Byte,System.Byte)
    IL_0007: ret
}

// System.Int16 Z0.gmathops::or_d16i(System.Int16,System.Int16)
// short or_d16i(short lhs, short rhs)
// IL
short or_d16i(short lhs, short rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int16 Z0.math::or(System.Int16,System.Int16)
    IL_0007: ret
}

// System.Int16 Z0.gmathops::or_g16i(System.Int16,System.Int16)
// short or_g16i(short lhs, short rhs)
// IL
short or_g16i(short lhs, short rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int16 Z0.gmath::or<System.Int16>(System.Int16,System.Int16)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gt_g32u(System.UInt32,System.UInt32)
// bit gt_g32u(uint a, uint b)
// IL
bit gt_g32u(uint a, uint b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::gt<System.UInt32>(System.UInt32,System.UInt32)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gt_d64i(System.Int64,System.Int64)
// bit gt_d64i(long a, long b)
// IL
bit gt_d64i(long a, long b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::gt(System.Int64,System.Int64)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gt_g64i(System.Int64,System.Int64)
// bit gt_g64i(long a, long b)
// IL
bit gt_g64i(long a, long b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::gt<System.Int64>(System.Int64,System.Int64)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gt_d64u(System.UInt64,System.UInt64)
// bit gt_d64u(ulong a, ulong b)
// IL
bit gt_d64u(ulong a, ulong b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::gt(System.UInt64,System.UInt64)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gt_g64u(System.UInt64,System.UInt64)
// bit gt_g64u(ulong a, ulong b)
// IL
bit gt_g64u(ulong a, ulong b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::gt<System.UInt64>(System.UInt64,System.UInt64)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gt_d32f(System.Single,System.Single)
// bit gt_d32f(float a, float b)
// IL
bit gt_d32f(float a, float b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.fmath::gt(System.Single,System.Single)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gt_g32f(System.Single,System.Single)
// bit gt_g32f(float a, float b)
// IL
bit gt_g32f(float a, float b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gfp::gt<System.Single>(System.Single,System.Single)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gt_d64f(System.Double,System.Double)
// bit gt_d64f(double a, double b)
// IL
bit gt_d64f(double a, double b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.fmath::gt(System.Double,System.Double)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gt_g64f(System.Double,System.Double)
// bit gt_g64f(double a, double b)
// IL
bit gt_g64f(double a, double b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gfp::gt<System.Double>(System.Double,System.Double)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gteq_d8i(System.SByte,System.SByte)
// bit gteq_d8i(sbyte a, sbyte b)
// IL
bit gteq_d8i(sbyte a, sbyte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::gteq(System.SByte,System.SByte)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gteq_g8i(System.SByte,System.SByte)
// bit gteq_g8i(sbyte a, sbyte b)
// IL
bit gteq_g8i(sbyte a, sbyte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::gteq<System.SByte>(System.SByte,System.SByte)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gteq_d8u(System.Byte,System.Byte)
// bit gteq_d8u(byte a, byte b)
// IL
bit gteq_d8u(byte a, byte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::gteq(System.Byte,System.Byte)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gteq_g8u(System.Byte,System.Byte)
// bit gteq_g8u(byte a, byte b)
// IL
bit gteq_g8u(byte a, byte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::gteq<System.Byte>(System.Byte,System.Byte)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gteq_d16i(System.Int16,System.Int16)
// bit gteq_d16i(short a, short b)
// IL
bit gteq_d16i(short a, short b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::gteq(System.Int16,System.Int16)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gteq_g16i(System.Int16,System.Int16)
// bit gteq_g16i(short a, short b)
// IL
bit gteq_g16i(short a, short b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::gteq<System.Int16>(System.Int16,System.Int16)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gteq_d16u(System.UInt16,System.UInt16)
// bit gteq_d16u(ushort a, ushort b)
// IL
bit gteq_d16u(ushort a, ushort b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::gteq(System.UInt16,System.UInt16)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gteq_g16u(System.UInt16,System.UInt16)
// bit gteq_g16u(ushort a, ushort b)
// IL
bit gteq_g16u(ushort a, ushort b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::gteq<System.UInt16>(System.UInt16,System.UInt16)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gteq_d32i(System.Int32,System.Int32)
// bit gteq_d32i(int a, int b)
// IL
bit gteq_d32i(int a, int b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::gteq(System.Int32,System.Int32)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gteq_g32i(System.Int32,System.Int32)
// bit gteq_g32i(int a, int b)
// IL
bit gteq_g32i(int a, int b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::gteq<System.Int32>(System.Int32,System.Int32)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gteq_d32u(System.UInt32,System.UInt32)
// bit gteq_d32u(uint a, uint b)
// IL
bit gteq_d32u(uint a, uint b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::gteq(System.UInt32,System.UInt32)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gteq_g32u(System.UInt32,System.UInt32)
// bit gteq_g32u(uint a, uint b)
// IL
bit gteq_g32u(uint a, uint b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::gteq<System.UInt32>(System.UInt32,System.UInt32)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gteq_d64i(System.Int64,System.Int64)
// bit gteq_d64i(long a, long b)
// IL
bit gteq_d64i(long a, long b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::gteq(System.Int64,System.Int64)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gteq_g64i(System.Int64,System.Int64)
// bit gteq_g64i(long a, long b)
// IL
bit gteq_g64i(long a, long b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::gteq<System.Int64>(System.Int64,System.Int64)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gteq_d64u(System.UInt64,System.UInt64)
// bit gteq_d64u(ulong a, ulong b)
// IL
bit gteq_d64u(ulong a, ulong b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::gteq(System.UInt64,System.UInt64)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gteq_g64u(System.UInt64,System.UInt64)
// bit gteq_g64u(ulong a, ulong b)
// IL
bit gteq_g64u(ulong a, ulong b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::gteq<System.UInt64>(System.UInt64,System.UInt64)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gteq_d32f(System.Single,System.Single)
// bit gteq_d32f(float a, float b)
// IL
bit gteq_d32f(float a, float b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.fmath::gteq(System.Single,System.Single)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gteq_g32f(System.Single,System.Single)
// bit gteq_g32f(float a, float b)
// IL
bit gteq_g32f(float a, float b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gfp::gteq<System.Single>(System.Single,System.Single)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gteq_d64f(System.Double,System.Double)
// bit gteq_d64f(double a, double b)
// IL
bit gteq_d64f(double a, double b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.fmath::gteq(System.Double,System.Double)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gteq_g64f(System.Double,System.Double)
// bit gteq_g64f(double a, double b)
// IL
bit gteq_g64f(double a, double b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gfp::gteq<System.Double>(System.Double,System.Double)
    IL_0007: ret
}

// System.Void Z0.gmathops::increments_8u(System.Int32,System.Byte&)
// void increments_8u(int count, ref byte dst)
// IL
void increments_8u(int count, ref byte dst)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Void Z0.gmath::increments<System.Byte>(System.Int32,System.Byte&)
    IL_0007: ret
}

// System.Void Z0.gmathops::increments_32u(System.Int32,System.UInt32&)
// void increments_32u(int count, ref uint dst)
// IL
void increments_32u(int count, ref uint dst)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Void Z0.gmath::increments<System.UInt32>(System.Int32,System.UInt32&)
    IL_0007: ret
}

// System.Void Z0.gmathops::decrements_8u(System.Int32,System.Byte&)
// void decrements_8u(int count, ref byte dst)
// IL
void decrements_8u(int count, ref byte dst)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Void Z0.gmath::decrements<System.Byte>(System.Int32,System.Byte&)
    IL_0007: ret
}

// System.Void Z0.gmathops::decrements_32u(System.Int32,System.UInt32&)
// void decrements_32u(int count, ref uint dst)
// IL
void decrements_32u(int count, ref uint dst)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Void Z0.gmath::decrements<System.UInt32>(System.Int32,System.UInt32&)
    IL_0007: ret
}

// System.Void Z0.gmathops::steps_8u(System.Byte,System.Byte,System.Int32,System.Byte&)
// void steps_8u(byte first, byte step, int count, ref byte dst)
// IL
void steps_8u(byte first, byte step, int count, ref byte dst)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: ldarg.3
    IL_0004: call System.Void Z0.gmath::steps<System.Byte>(System.Byte,System.Byte,System.Int32,System.Byte&)
    IL_0009: ret
}

// System.Void Z0.gmathops::steps_32u(System.UInt32,System.UInt32,System.Int32,System.UInt32&)
// void steps_32u(uint first, uint step, int count, ref uint dst)
// IL
void steps_32u(uint first, uint step, int count, ref uint dst)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: ldarg.3
    IL_0004: call System.Void Z0.gmath::steps<System.UInt32>(System.UInt32,System.UInt32,System.Int32,System.UInt32&)
    IL_0009: ret
}

// System.SByte Z0.gmathops::inc_d8i(System.SByte)
// sbyte inc_d8i(sbyte x)
// IL
sbyte inc_d8i(sbyte x)
{
    IL_0000: ldarg.0
    IL_0001: call System.SByte Z0.math::inc(System.SByte)
    IL_0006: ret
}

// System.SByte Z0.gmathops::inc_g8i(System.SByte)
// sbyte inc_g8i(sbyte x)
// IL
sbyte inc_g8i(sbyte x)
{
    IL_0000: ldarg.0
    IL_0001: call System.SByte Z0.gmath::inc<System.SByte>(System.SByte)
    IL_0006: ret
}

// System.Byte Z0.gmathops::inc_d8u(System.Byte)
// byte inc_d8u(byte x)
// IL
byte inc_d8u(byte x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Byte Z0.math::inc(System.Byte)
    IL_0006: ret
}

// System.Byte Z0.gmathops::inc_g8u(System.Byte)
// byte inc_g8u(byte x)
// IL
byte inc_g8u(byte x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Byte Z0.gmath::inc<System.Byte>(System.Byte)
    IL_0006: ret
}

// System.Int16 Z0.gmathops::inc_d16i(System.Int16)
// short inc_d16i(short x)
// IL
short inc_d16i(short x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int16 Z0.math::inc(System.Int16)
    IL_0006: ret
}

// System.Int16 Z0.gmathops::inc_g16i(System.Int16)
// short inc_g16i(short x)
// IL
short inc_g16i(short x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int16 Z0.gmath::inc<System.Int16>(System.Int16)
    IL_0006: ret
}

// System.UInt16 Z0.gmathops::inc_d16u(System.UInt16)
// ushort inc_d16u(ushort x)
// IL
ushort inc_d16u(ushort x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt16 Z0.math::inc(System.UInt16)
    IL_0006: ret
}

// System.UInt16 Z0.gmathops::inc_g16u(System.UInt16)
// ushort inc_g16u(ushort x)
// IL
ushort inc_g16u(ushort x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt16 Z0.gmath::inc<System.UInt16>(System.UInt16)
    IL_0006: ret
}

// System.Int32 Z0.gmathops::inc_d32i(System.Int32)
// int inc_d32i(int x)
// IL
int inc_d32i(int x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int32 Z0.math::inc(System.Int32)
    IL_0006: ret
}

// System.Int32 Z0.gmathops::inc_g32i(System.Int32)
// int inc_g32i(int x)
// IL
int inc_g32i(int x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int32 Z0.gmath::inc<System.Int32>(System.Int32)
    IL_0006: ret
}

// System.Int32 Z0.gmathops::inc_op32i(System.Int32)
// int inc_op32i(int x)
// IL
int inc_op32i(int x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.GXTypes/Inc`1<System.Int32> Z0.GX::inc<System.Int32>(System.Int32)
    IL_0006: stloc.0
    IL_0007: ldloca.s V_0
    IL_0009: ldarg.0
    IL_000A: call System.Int32 Z0.GXTypes/Inc`1<System.Int32>::Invoke(System.Int32)
    IL_000F: ret
}

// System.UInt32 Z0.gmathops::inc_d32u(System.UInt32)
// uint inc_d32u(uint x)
// IL
uint inc_d32u(uint x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt32 Z0.math::inc(System.UInt32)
    IL_0006: ret
}

// System.UInt32 Z0.gmathops::inc_g32u(System.UInt32)
// uint inc_g32u(uint x)
// IL
uint inc_g32u(uint x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt32 Z0.gmath::inc<System.UInt32>(System.UInt32)
    IL_0006: ret
}

// System.UInt32 Z0.gmathops::inc_op32u(System.UInt32)
// uint inc_op32u(uint x)
// IL
uint inc_op32u(uint x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.GXTypes/Inc`1<System.UInt32> Z0.GX::inc<System.UInt32>(System.UInt32)
    IL_0006: stloc.0
    IL_0007: ldloca.s V_0
    IL_0009: ldarg.0
    IL_000A: call System.UInt32 Z0.GXTypes/Inc`1<System.UInt32>::Invoke(System.UInt32)
    IL_000F: ret
}

// System.Int64 Z0.gmathops::inc_d64i(System.Int64)
// long inc_d64i(long x)
// IL
long inc_d64i(long x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int64 Z0.math::inc(System.Int64)
    IL_0006: ret
}

// System.Int64 Z0.gmathops::inc_g64i(System.Int64)
// long inc_g64i(long x)
// IL
long inc_g64i(long x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int64 Z0.gmath::inc<System.Int64>(System.Int64)
    IL_0006: ret
}

// System.UInt64 Z0.gmathops::inc_d64u(System.UInt64)
// ulong inc_d64u(ulong x)
// IL
ulong inc_d64u(ulong x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt64 Z0.math::inc(System.UInt64)
    IL_0006: ret
}

// System.UInt64 Z0.gmathops::inc_g64u(System.UInt64)
// ulong inc_g64u(ulong x)
// IL
ulong inc_g64u(ulong x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt64 Z0.gmath::inc<System.UInt64>(System.UInt64)
    IL_0006: ret
}

// System.Single Z0.gmathops::inc_g32f(System.Single)
// float inc_g32f(float x)
// IL
float inc_g32f(float x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Single Z0.gfp::inc<System.Single>(System.Single)
    IL_0006: ret
}

// System.Single Z0.gmathops::inc_d32f(System.Single)
// float inc_d32f(float x)
// IL
float inc_d32f(float x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Single Z0.fmath::inc(System.Single)
    IL_0006: ret
}

// System.Double Z0.gmathops::inc_d64f(System.Double)
// double inc_d64f(double x)
// IL
double inc_d64f(double x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Double Z0.fmath::inc(System.Double)
    IL_0006: ret
}

// System.Double Z0.gmathops::inc_g64f(System.Double)
// double inc_g64f(double x)
// IL
double inc_g64f(double x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Double Z0.gfp::inc<System.Double>(System.Double)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::lt_d8i(System.SByte,System.SByte)
// bit lt_d8i(sbyte lhs, sbyte rhs)
// IL
bit lt_d8i(sbyte lhs, sbyte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::lt(System.SByte,System.SByte)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lt_g8i(System.SByte,System.SByte)
// bit lt_g8i(sbyte lhs, sbyte rhs)
// IL
bit lt_g8i(sbyte lhs, sbyte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::lt<System.SByte>(System.SByte,System.SByte)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lt_d8u(System.Byte,System.Byte)
// bit lt_d8u(byte lhs, byte rhs)
// IL
bit lt_d8u(byte lhs, byte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::lt(System.Byte,System.Byte)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lt_g8u(System.Byte,System.Byte)
// bit lt_g8u(byte lhs, byte rhs)
// IL
bit lt_g8u(byte lhs, byte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::lt<System.Byte>(System.Byte,System.Byte)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lt_d16i(System.Int16,System.Int16)
// bit lt_d16i(short lhs, short rhs)
// IL
bit lt_d16i(short lhs, short rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::lt(System.Int16,System.Int16)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lt_g16i(System.Int16,System.Int16)
// bit lt_g16i(short lhs, short rhs)
// IL
bit lt_g16i(short lhs, short rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::lt<System.Int16>(System.Int16,System.Int16)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lt_d16u(System.UInt16,System.UInt16)
// bit lt_d16u(ushort lhs, ushort rhs)
// IL
bit lt_d16u(ushort lhs, ushort rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::lt(System.UInt16,System.UInt16)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lt_g16u(System.UInt16,System.UInt16)
// bit lt_g16u(ushort lhs, ushort rhs)
// IL
bit lt_g16u(ushort lhs, ushort rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::lt<System.UInt16>(System.UInt16,System.UInt16)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lt_d32i(System.Int32,System.Int32)
// bit lt_d32i(int lhs, int rhs)
// IL
bit lt_d32i(int lhs, int rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::lt(System.Int32,System.Int32)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lt_g32i(System.Int32,System.Int32)
// bit lt_g32i(int lhs, int rhs)
// IL
bit lt_g32i(int lhs, int rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::lt<System.Int32>(System.Int32,System.Int32)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lt_d32u(System.UInt32,System.UInt32)
// bit lt_d32u(uint lhs, uint rhs)
// IL
bit lt_d32u(uint lhs, uint rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::lt(System.UInt32,System.UInt32)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lt_g32u(System.UInt32,System.UInt32)
// bit lt_g32u(uint lhs, uint rhs)
// IL
bit lt_g32u(uint lhs, uint rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::lt<System.UInt32>(System.UInt32,System.UInt32)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lt_d64i(System.Int64,System.Int64)
// bit lt_d64i(long lhs, long rhs)
// IL
bit lt_d64i(long lhs, long rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::lt(System.Int64,System.Int64)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lt_g64i(System.Int64,System.Int64)
// bit lt_g64i(long lhs, long rhs)
// IL
bit lt_g64i(long lhs, long rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::lt<System.Int64>(System.Int64,System.Int64)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lt_d64u(System.UInt64,System.UInt64)
// bit lt_d64u(ulong lhs, ulong rhs)
// IL
bit lt_d64u(ulong lhs, ulong rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::lt(System.UInt64,System.UInt64)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lt_g64u(System.UInt64,System.UInt64)
// bit lt_g64u(ulong lhs, ulong rhs)
// IL
bit lt_g64u(ulong lhs, ulong rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::lt<System.UInt64>(System.UInt64,System.UInt64)
    IL_0007: ret
}

// System.Boolean Z0.gmathops::lt_d32f(System.Single,System.Single)
// bool lt_d32f(float lhs, float rhs)
// IL
bool lt_d32f(float lhs, float rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.fmath::lt(System.Single,System.Single)
    IL_0007: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000C: ret
}

// System.Boolean Z0.gmathops::lt_g32f(System.Single,System.Single)
// bool lt_g32f(float lhs, float rhs)
// IL
bool lt_g32f(float lhs, float rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gfp::lt<System.Single>(System.Single,System.Single)
    IL_0007: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000C: ret
}

// System.Boolean Z0.gmathops::lt_d64f(System.Double,System.Double)
// bool lt_d64f(double lhs, double rhs)
// IL
bool lt_d64f(double lhs, double rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.fmath::lt(System.Double,System.Double)
    IL_0007: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000C: ret
}

// System.Boolean Z0.gmathops::lt_g64f(System.Double,System.Double)
// bool lt_g64f(double lhs, double rhs)
// IL
bool lt_g64f(double lhs, double rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gfp::lt<System.Double>(System.Double,System.Double)
    IL_0007: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000C: ret
}

// Z0.bit Z0.gmathops::lteq_d8i(System.SByte,System.SByte)
// bit lteq_d8i(sbyte lhs, sbyte rhs)
// IL
bit lteq_d8i(sbyte lhs, sbyte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::lteq(System.SByte,System.SByte)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lteq_g8i(System.SByte,System.SByte)
// bit lteq_g8i(sbyte lhs, sbyte rhs)
// IL
bit lteq_g8i(sbyte lhs, sbyte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::lteq<System.SByte>(System.SByte,System.SByte)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lteq_d8u(System.Byte,System.Byte)
// bit lteq_d8u(byte lhs, byte rhs)
// IL
bit lteq_d8u(byte lhs, byte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::lteq(System.Byte,System.Byte)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lteq_g8u(System.Byte,System.Byte)
// bit lteq_g8u(byte lhs, byte rhs)
// IL
bit lteq_g8u(byte lhs, byte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::lteq<System.Byte>(System.Byte,System.Byte)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lteq_d16i(System.Int16,System.Int16)
// bit lteq_d16i(short lhs, short rhs)
// IL
bit lteq_d16i(short lhs, short rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::lteq(System.Int16,System.Int16)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lteq_g16i(System.Int16,System.Int16)
// bit lteq_g16i(short lhs, short rhs)
// IL
bit lteq_g16i(short lhs, short rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::lteq<System.Int16>(System.Int16,System.Int16)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lteq_d16u(System.UInt16,System.UInt16)
// bit lteq_d16u(ushort lhs, ushort rhs)
// IL
bit lteq_d16u(ushort lhs, ushort rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::lteq(System.UInt16,System.UInt16)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lteq_g16u(System.UInt16,System.UInt16)
// bit lteq_g16u(ushort lhs, ushort rhs)
// IL
bit lteq_g16u(ushort lhs, ushort rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::lteq<System.UInt16>(System.UInt16,System.UInt16)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lteq_d32i(System.Int32,System.Int32)
// bit lteq_d32i(int lhs, int rhs)
// IL
bit lteq_d32i(int lhs, int rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::lteq(System.Int32,System.Int32)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lteq_g32i(System.Int32,System.Int32)
// bit lteq_g32i(int lhs, int rhs)
// IL
bit lteq_g32i(int lhs, int rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::lteq<System.Int32>(System.Int32,System.Int32)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lteq_d32u(System.UInt32,System.UInt32)
// bit lteq_d32u(uint lhs, uint rhs)
// IL
bit lteq_d32u(uint lhs, uint rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::lteq(System.UInt32,System.UInt32)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lteq_g32u(System.UInt32,System.UInt32)
// bit lteq_g32u(uint lhs, uint rhs)
// IL
bit lteq_g32u(uint lhs, uint rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::lteq<System.UInt32>(System.UInt32,System.UInt32)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lteq_d64i(System.Int64,System.Int64)
// bit lteq_d64i(long lhs, long rhs)
// IL
bit lteq_d64i(long lhs, long rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::lteq(System.Int64,System.Int64)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lteq_g64i(System.Int64,System.Int64)
// bit lteq_g64i(long lhs, long rhs)
// IL
bit lteq_g64i(long lhs, long rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::lteq<System.Int64>(System.Int64,System.Int64)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lteq_d64u(System.UInt64,System.UInt64)
// bit lteq_d64u(ulong lhs, ulong rhs)
// IL
bit lteq_d64u(ulong lhs, ulong rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::lteq(System.UInt64,System.UInt64)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::lteq_g64u(System.UInt64,System.UInt64)
// bit lteq_g64u(ulong lhs, ulong rhs)
// IL
bit lteq_g64u(ulong lhs, ulong rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::lteq<System.UInt64>(System.UInt64,System.UInt64)
    IL_0007: ret
}

// System.Boolean Z0.gmathops::lteq_d32f(System.Single,System.Single)
// bool lteq_d32f(float lhs, float rhs)
// IL
bool lteq_d32f(float lhs, float rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.fmath::lteq(System.Single,System.Single)
    IL_0007: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000C: ret
}

// System.Boolean Z0.gmathops::lteq_g32f(System.Single,System.Single)
// bool lteq_g32f(float lhs, float rhs)
// IL
bool lteq_g32f(float lhs, float rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gfp::lteq<System.Single>(System.Single,System.Single)
    IL_0007: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000C: ret
}

// System.Boolean Z0.gmathops::lteq_d64f(System.Double,System.Double)
// bool lteq_d64f(double lhs, double rhs)
// IL
bool lteq_d64f(double lhs, double rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.fmath::lteq(System.Double,System.Double)
    IL_0007: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000C: ret
}

// System.Boolean Z0.gmathops::lteq_g64f(System.Double,System.Double)
// bool lteq_g64f(double lhs, double rhs)
// IL
bool lteq_g64f(double lhs, double rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gfp::lteq<System.Double>(System.Double,System.Double)
    IL_0007: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000C: ret
}

// System.SByte Z0.gmathops::max_d8i(System.SByte,System.SByte)
// sbyte max_d8i(sbyte a, sbyte b)
// IL
sbyte max_d8i(sbyte a, sbyte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.SByte Z0.math::max(System.SByte,System.SByte)
    IL_0007: ret
}

// System.SByte Z0.gmathops::max_g8i(System.SByte,System.SByte)
// sbyte max_g8i(sbyte a, sbyte b)
// IL
sbyte max_g8i(sbyte a, sbyte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.SByte Z0.gmath::max<System.SByte>(System.SByte,System.SByte)
    IL_0007: ret
}

// System.Byte Z0.gmathops::max_d8u(System.Byte,System.Byte)
// byte max_d8u(byte a, byte b)
// IL
byte max_d8u(byte a, byte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Byte Z0.math::max(System.Byte,System.Byte)
    IL_0007: ret
}

// System.Byte Z0.gmathops::max_g8u(System.Byte,System.Byte)
// byte max_g8u(byte a, byte b)
// IL
byte max_g8u(byte a, byte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Byte Z0.gmath::max<System.Byte>(System.Byte,System.Byte)
    IL_0007: ret
}

// System.Int16 Z0.gmathops::max_d16i(System.Int16,System.Int16)
// short max_d16i(short a, short b)
// IL
short max_d16i(short a, short b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int16 Z0.math::max(System.Int16,System.Int16)
    IL_0007: ret
}

// System.Int16 Z0.gmathops::max_g16i(System.Int16,System.Int16)
// short max_g16i(short a, short b)
// IL
short max_g16i(short a, short b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int16 Z0.gmath::max<System.Int16>(System.Int16,System.Int16)
    IL_0007: ret
}

// System.UInt16 Z0.gmathops::max_d16u(System.UInt16,System.UInt16)
// ushort max_d16u(ushort a, ushort b)
// IL
ushort max_d16u(ushort a, ushort b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.math::max(System.UInt16,System.UInt16)
    IL_0007: ret
}

// System.UInt16 Z0.gmathops::max_g16u(System.UInt16,System.UInt16)
// ushort max_g16u(ushort a, ushort b)
// IL
ushort max_g16u(ushort a, ushort b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.gmath::max<System.UInt16>(System.UInt16,System.UInt16)
    IL_0007: ret
}

// System.Int32 Z0.gmathops::max_d32i(System.Int32,System.Int32)
// int max_d32i(int a, int b)
// IL
int max_d32i(int a, int b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int32 Z0.math::max(System.Int32,System.Int32)
    IL_0007: ret
}

// System.Int32 Z0.gmathops::max_g32i(System.Int32,System.Int32)
// int max_g32i(int a, int b)
// IL
int max_g32i(int a, int b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int32 Z0.gmath::max<System.Int32>(System.Int32,System.Int32)
    IL_0007: ret
}

// System.UInt32 Z0.gmathops::max_d32u(System.UInt32,System.UInt32)
// uint max_d32u(uint a, uint b)
// IL
uint max_d32u(uint a, uint b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt32 Z0.math::max(System.UInt32,System.UInt32)
    IL_0007: ret
}

// System.UInt32 Z0.gmathops::max_g32u(System.UInt32,System.UInt32)
// uint max_g32u(uint a, uint b)
// IL
uint max_g32u(uint a, uint b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt32 Z0.gmath::max<System.UInt32>(System.UInt32,System.UInt32)
    IL_0007: ret
}

// System.Int64 Z0.gmathops::max_d64i(System.Int64,System.Int64)
// long max_d64i(long a, long b)
// IL
long max_d64i(long a, long b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int64 Z0.math::max(System.Int64,System.Int64)
    IL_0007: ret
}

// System.Int64 Z0.gmathops::max_g64i(System.Int64,System.Int64)
// long max_g64i(long a, long b)
// IL
long max_g64i(long a, long b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int64 Z0.gmath::max<System.Int64>(System.Int64,System.Int64)
    IL_0007: ret
}

// System.UInt64 Z0.gmathops::max_d64u(System.UInt64,System.UInt64)
// ulong max_d64u(ulong a, ulong b)
// IL
ulong max_d64u(ulong a, ulong b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt64 Z0.math::max(System.UInt64,System.UInt64)
    IL_0007: ret
}

// System.UInt64 Z0.gmathops::max_g64u(System.UInt64,System.UInt64)
// ulong max_g64u(ulong a, ulong b)
// IL
ulong max_g64u(ulong a, ulong b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt64 Z0.gmath::max<System.UInt64>(System.UInt64,System.UInt64)
    IL_0007: ret
}

// System.Single Z0.gmathops::max_d32f(System.Single,System.Single)
// float max_d32f(float lhs, float rhs)
// IL
float max_d32f(float lhs, float rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Single Z0.fmath::max(System.Single,System.Single)
    IL_0007: ret
}

// System.Single Z0.gmathops::max_g32f(System.Single,System.Single)
// float max_g32f(float lhs, float rhs)
// IL
float max_g32f(float lhs, float rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Single Z0.gfp::max<System.Single>(System.Single,System.Single)
    IL_0007: ret
}

// System.Double Z0.gmathops::max_d64f(System.Double,System.Double)
// double max_d64f(double lhs, double rhs)
// IL
double max_d64f(double lhs, double rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Double Z0.fmath::max(System.Double,System.Double)
    IL_0007: ret
}

// System.Double Z0.gmathops::max_g64f(System.Double,System.Double)
// double max_g64f(double lhs, double rhs)
// IL
double max_g64f(double lhs, double rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Double Z0.gfp::max<System.Double>(System.Double,System.Double)
    IL_0007: ret
}

// System.SByte Z0.gmathops::min_d8i(System.SByte,System.SByte)
// sbyte min_d8i(sbyte lhs, sbyte rhs)
// IL
sbyte min_d8i(sbyte lhs, sbyte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.SByte Z0.math::min(System.SByte,System.SByte)
    IL_0007: ret
}

// System.SByte Z0.gmathops::min_g8i(System.SByte,System.SByte)
// sbyte min_g8i(sbyte lhs, sbyte rhs)
// IL
sbyte min_g8i(sbyte lhs, sbyte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.SByte Z0.gmath::min<System.SByte>(System.SByte,System.SByte)
    IL_0007: ret
}

// System.Byte Z0.gmathops::min_d8u(System.Byte,System.Byte)
// byte min_d8u(byte lhs, byte rhs)
// IL
byte min_d8u(byte lhs, byte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Byte Z0.math::min(System.Byte,System.Byte)
    IL_0007: ret
}

// System.Byte Z0.gmathops::min_g8u(System.Byte,System.Byte)
// byte min_g8u(byte lhs, byte rhs)
// IL
byte min_g8u(byte lhs, byte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Byte Z0.gmath::min<System.Byte>(System.Byte,System.Byte)
    IL_0007: ret
}

// System.Int16 Z0.gmathops::min_d16i(System.Int16,System.Int16)
// short min_d16i(short lhs, short rhs)
// IL
short min_d16i(short lhs, short rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int16 Z0.math::min(System.Int16,System.Int16)
    IL_0007: ret
}

// System.Int16 Z0.gmathops::min_g16i(System.Int16,System.Int16)
// short min_g16i(short lhs, short rhs)
// IL
short min_g16i(short lhs, short rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int16 Z0.gmath::min<System.Int16>(System.Int16,System.Int16)
    IL_0007: ret
}

// System.UInt16 Z0.gmathops::min_d16u(System.UInt16,System.UInt16)
// ushort min_d16u(ushort lhs, ushort rhs)
// IL
ushort min_d16u(ushort lhs, ushort rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.math::min(System.UInt16,System.UInt16)
    IL_0007: ret
}

// System.UInt16 Z0.gmathops::min_g16u(System.UInt16,System.UInt16)
// ushort min_g16u(ushort lhs, ushort rhs)
// IL
ushort min_g16u(ushort lhs, ushort rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.gmath::min<System.UInt16>(System.UInt16,System.UInt16)
    IL_0007: ret
}

// System.Int32 Z0.gmathops::min_d32i(System.Int32,System.Int32)
// int min_d32i(int lhs, int rhs)
// IL
int min_d32i(int lhs, int rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int32 Z0.math::min(System.Int32,System.Int32)
    IL_0007: ret
}

// System.Int32 Z0.gmathops::min_g32i(System.Int32,System.Int32)
// int min_g32i(int lhs, int rhs)
// IL
int min_g32i(int lhs, int rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int32 Z0.gmath::min<System.Int32>(System.Int32,System.Int32)
    IL_0007: ret
}

// System.UInt32 Z0.gmathops::min_d32u(System.UInt32,System.UInt32)
// uint min_d32u(uint lhs, uint rhs)
// IL
uint min_d32u(uint lhs, uint rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt32 Z0.math::min(System.UInt32,System.UInt32)
    IL_0007: ret
}

// System.UInt64 Z0.gmathops::dec_g64u(System.UInt64)
// ulong dec_g64u(ulong x)
// IL
ulong dec_g64u(ulong x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt64 Z0.gmath::dec<System.UInt64>(System.UInt64)
    IL_0006: ret
}

// System.Single Z0.gmathops::dec_g32f(System.Single)
// float dec_g32f(float x)
// IL
float dec_g32f(float x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Single Z0.gfp::dec<System.Single>(System.Single)
    IL_0006: ret
}

// System.Single Z0.gmathops::dec_d32f(System.Single)
// float dec_d32f(float x)
// IL
float dec_d32f(float x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Single Z0.fmath::dec(System.Single)
    IL_0006: ret
}

// System.Double Z0.gmathops::dec_d64f(System.Double)
// double dec_d64f(double x)
// IL
double dec_d64f(double x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Double Z0.fmath::dec(System.Double)
    IL_0006: ret
}

// System.Double Z0.gmathops::dec_g64f(System.Double)
// double dec_g64f(double x)
// IL
double dec_g64f(double x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Double Z0.gfp::dec<System.Double>(System.Double)
    IL_0006: ret
}

// System.Boolean Z0.gmathops::divides_d8i(System.SByte,System.SByte)
// bool divides_d8i(sbyte lhs, sbyte rhs)
// IL
bool divides_d8i(sbyte lhs, sbyte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::divides(System.SByte,System.SByte)
    IL_0007: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000C: ret
}

// System.Boolean Z0.gmathops::divides_g8i(System.SByte,System.SByte)
// bool divides_g8i(sbyte lhs, sbyte rhs)
// IL
bool divides_g8i(sbyte lhs, sbyte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::divides<System.SByte>(System.SByte,System.SByte)
    IL_0007: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000C: ret
}

// System.Boolean Z0.gmathops::divides_d8u(System.Byte,System.Byte)
// bool divides_d8u(byte lhs, byte rhs)
// IL
bool divides_d8u(byte lhs, byte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::divides(System.Byte,System.Byte)
    IL_0007: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000C: ret
}

// System.Boolean Z0.gmathops::divides_g8u(System.Byte,System.Byte)
// bool divides_g8u(byte lhs, byte rhs)
// IL
bool divides_g8u(byte lhs, byte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::divides<System.Byte>(System.Byte,System.Byte)
    IL_0007: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000C: ret
}

// System.Boolean Z0.gmathops::divides_d16i(System.Int16,System.Int16)
// bool divides_d16i(short lhs, short rhs)
// IL
bool divides_d16i(short lhs, short rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::divides(System.Int16,System.Int16)
    IL_0007: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000C: ret
}

// System.Boolean Z0.gmathops::divides_g16i(System.Int16,System.Int16)
// bool divides_g16i(short lhs, short rhs)
// IL
bool divides_g16i(short lhs, short rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::divides<System.Int16>(System.Int16,System.Int16)
    IL_0007: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000C: ret
}

// System.Boolean Z0.gmathops::divides_d16u(System.UInt16,System.UInt16)
// bool divides_d16u(ushort lhs, ushort rhs)
// IL
bool divides_d16u(ushort lhs, ushort rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::divides(System.UInt16,System.UInt16)
    IL_0007: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000C: ret
}

// System.Boolean Z0.gmathops::divides_g16u(System.UInt16,System.UInt16)
// bool divides_g16u(ushort lhs, ushort rhs)
// IL
bool divides_g16u(ushort lhs, ushort rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::divides<System.UInt16>(System.UInt16,System.UInt16)
    IL_0007: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000C: ret
}

// System.Boolean Z0.gmathops::divides_d32i(System.Int32,System.Int32)
// bool divides_d32i(int lhs, int rhs)
// IL
bool divides_d32i(int lhs, int rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::divides(System.Int32,System.Int32)
    IL_0007: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000C: ret
}

// System.Boolean Z0.gmathops::divides_g32i(System.Int32,System.Int32)
// bool divides_g32i(int lhs, int rhs)
// IL
bool divides_g32i(int lhs, int rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::divides<System.Int32>(System.Int32,System.Int32)
    IL_0007: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000C: ret
}

// System.Boolean Z0.gmathops::divides_d32u(System.UInt32,System.UInt32)
// bool divides_d32u(uint lhs, uint rhs)
// IL
bool divides_d32u(uint lhs, uint rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::divides(System.UInt32,System.UInt32)
    IL_0007: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000C: ret
}

// System.Boolean Z0.gmathops::divides_g32u(System.UInt32,System.UInt32)
// bool divides_g32u(uint lhs, uint rhs)
// IL
bool divides_g32u(uint lhs, uint rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::divides<System.UInt32>(System.UInt32,System.UInt32)
    IL_0007: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000C: ret
}

// System.Boolean Z0.gmathops::divides_d64i(System.Int64,System.Int64)
// bool divides_d64i(long lhs, long rhs)
// IL
bool divides_d64i(long lhs, long rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::divides(System.Int64,System.Int64)
    IL_0007: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000C: ret
}

// System.Boolean Z0.gmathops::divides_g64i(System.Int64,System.Int64)
// bool divides_g64i(long lhs, long rhs)
// IL
bool divides_g64i(long lhs, long rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::divides<System.Int64>(System.Int64,System.Int64)
    IL_0007: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000C: ret
}

// System.Boolean Z0.gmathops::divides_d64u(System.UInt64,System.UInt64)
// bool divides_d64u(ulong lhs, ulong rhs)
// IL
bool divides_d64u(ulong lhs, ulong rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::divides(System.UInt64,System.UInt64)
    IL_0007: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000C: ret
}

// System.Boolean Z0.gmathops::divides_g64u(System.UInt64,System.UInt64)
// bool divides_g64u(ulong lhs, ulong rhs)
// IL
bool divides_g64u(ulong lhs, ulong rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::divides<System.UInt64>(System.UInt64,System.UInt64)
    IL_0007: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000C: ret
}

// System.Boolean Z0.gmathops::divides_d32f(System.Single,System.Single)
// bool divides_d32f(float lhs, float rhs)
// IL
bool divides_d32f(float lhs, float rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.fmath::divides(System.Single,System.Single)
    IL_0007: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000C: ret
}

// System.Boolean Z0.gmathops::divides_g32f(System.Single,System.Single)
// bool divides_g32f(float lhs, float rhs)
// IL
bool divides_g32f(float lhs, float rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Boolean Z0.gfp::divides<System.Single>(System.Single,System.Single)
    IL_0007: ret
}

// System.Boolean Z0.gmathops::divides_d64f(System.Double,System.Double)
// bool divides_d64f(double lhs, double rhs)
// IL
bool divides_d64f(double lhs, double rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.fmath::divides(System.Double,System.Double)
    IL_0007: call System.Boolean Z0.bit::op_Implicit(Z0.bit)
    IL_000C: ret
}

// System.Boolean Z0.gmathops::divides_g64f(System.Double,System.Double)
// bool divides_g64f(double lhs, double rhs)
// IL
bool divides_g64f(double lhs, double rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Boolean Z0.gfp::divides<System.Double>(System.Double,System.Double)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::eq_d8i(System.SByte,System.SByte)
// bit eq_d8i(sbyte lhs, sbyte rhs)
// IL
bit eq_d8i(sbyte lhs, sbyte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::eq(System.SByte,System.SByte)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::eq_g8i(System.SByte,System.SByte)
// bit eq_g8i(sbyte lhs, sbyte rhs)
// IL
bit eq_g8i(sbyte lhs, sbyte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::eq<System.SByte>(System.SByte,System.SByte)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::eq_d8u(System.Byte,System.Byte)
// bit eq_d8u(byte lhs, byte rhs)
// IL
bit eq_d8u(byte lhs, byte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::eq(System.Byte,System.Byte)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::eq_g8u(System.Byte,System.Byte)
// bit eq_g8u(byte lhs, byte rhs)
// IL
bit eq_g8u(byte lhs, byte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::eq<System.Byte>(System.Byte,System.Byte)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::eq_d16i(System.Int16,System.Int16)
// bit eq_d16i(short lhs, short rhs)
// IL
bit eq_d16i(short lhs, short rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::eq(System.Int16,System.Int16)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::eq_g16i(System.Int16,System.Int16)
// bit eq_g16i(short lhs, short rhs)
// IL
bit eq_g16i(short lhs, short rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::eq<System.Int16>(System.Int16,System.Int16)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::eq_d32i(System.Int32,System.Int32)
// bit eq_d32i(int lhs, int rhs)
// IL
bit eq_d32i(int lhs, int rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::eq(System.Int32,System.Int32)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::eq_g32i(System.Int32,System.Int32)
// bit eq_g32i(int lhs, int rhs)
// IL
bit eq_g32i(int lhs, int rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::eq<System.Int32>(System.Int32,System.Int32)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::eq_d32u(System.UInt32,System.UInt32)
// bit eq_d32u(uint lhs, uint rhs)
// IL
bit eq_d32u(uint lhs, uint rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::eq(System.UInt32,System.UInt32)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::eq_g32u(System.UInt32,System.UInt32)
// bit eq_g32u(uint lhs, uint rhs)
// IL
bit eq_g32u(uint lhs, uint rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::eq<System.UInt32>(System.UInt32,System.UInt32)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::eq_d64i(System.Int64,System.Int64)
// bit eq_d64i(long lhs, long rhs)
// IL
bit eq_d64i(long lhs, long rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::eq(System.Int64,System.Int64)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::eq_g64i(System.Int64,System.Int64)
// bit eq_g64i(long lhs, long rhs)
// IL
bit eq_g64i(long lhs, long rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::eq<System.Int64>(System.Int64,System.Int64)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::eq_d64u(System.UInt64,System.UInt64)
// bit eq_d64u(ulong lhs, ulong rhs)
// IL
bit eq_d64u(ulong lhs, ulong rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::eq(System.UInt64,System.UInt64)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::eq_g64u(System.UInt64,System.UInt64)
// bit eq_g64u(ulong lhs, ulong rhs)
// IL
bit eq_g64u(ulong lhs, ulong rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::eq<System.UInt64>(System.UInt64,System.UInt64)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::eq_d32f(System.Single,System.Single)
// bit eq_d32f(float lhs, float rhs)
// IL
bit eq_d32f(float lhs, float rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.fmath::eq(System.Single,System.Single)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::eq_g32f(System.Single,System.Single)
// bit eq_g32f(float lhs, float rhs)
// IL
bit eq_g32f(float lhs, float rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gfp::eq<System.Single>(System.Single,System.Single)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::eq_d64f(System.Double,System.Double)
// bit eq_d64f(double lhs, double rhs)
// IL
bit eq_d64f(double lhs, double rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.fmath::eq(System.Double,System.Double)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::eq_g64f(System.Double,System.Double)
// bit eq_g64f(double lhs, double rhs)
// IL
bit eq_g64f(double lhs, double rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gfp::eq<System.Double>(System.Double,System.Double)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::neq_d8i(System.SByte,System.SByte)
// bit neq_d8i(sbyte lhs, sbyte rhs)
// IL
bit neq_d8i(sbyte lhs, sbyte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::neq(System.SByte,System.SByte)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::neq_g8i(System.SByte,System.SByte)
// bit neq_g8i(sbyte lhs, sbyte rhs)
// IL
bit neq_g8i(sbyte lhs, sbyte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::neq<System.SByte>(System.SByte,System.SByte)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::neq_d8u(System.Byte,System.Byte)
// bit neq_d8u(byte lhs, byte rhs)
// IL
bit neq_d8u(byte lhs, byte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::neq(System.Byte,System.Byte)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::neq_g8u(System.Byte,System.Byte)
// bit neq_g8u(byte lhs, byte rhs)
// IL
bit neq_g8u(byte lhs, byte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::neq<System.Byte>(System.Byte,System.Byte)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::neq_d16i(System.Int16,System.Int16)
// bit neq_d16i(short lhs, short rhs)
// IL
bit neq_d16i(short lhs, short rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::neq(System.Int16,System.Int16)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::neq_g16i(System.Int16,System.Int16)
// bit neq_g16i(short lhs, short rhs)
// IL
bit neq_g16i(short lhs, short rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::neq<System.Int16>(System.Int16,System.Int16)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::neq_d16u(System.UInt16,System.UInt16)
// bit neq_d16u(ushort lhs, ushort rhs)
// IL
bit neq_d16u(ushort lhs, ushort rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::neq(System.UInt16,System.UInt16)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::neq_g16u(System.UInt16,System.UInt16)
// bit neq_g16u(ushort lhs, ushort rhs)
// IL
bit neq_g16u(ushort lhs, ushort rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::neq<System.UInt16>(System.UInt16,System.UInt16)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::neq_d32i(System.Int32,System.Int32)
// bit neq_d32i(int lhs, int rhs)
// IL
bit neq_d32i(int lhs, int rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::neq(System.Int32,System.Int32)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::neq_g32i(System.Int32,System.Int32)
// bit neq_g32i(int lhs, int rhs)
// IL
bit neq_g32i(int lhs, int rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::neq<System.Int32>(System.Int32,System.Int32)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::neq_d32u(System.UInt32,System.UInt32)
// bit neq_d32u(uint lhs, uint rhs)
// IL
bit neq_d32u(uint lhs, uint rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::neq(System.UInt32,System.UInt32)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::neq_g32u(System.UInt32,System.UInt32)
// bit neq_g32u(uint lhs, uint rhs)
// IL
bit neq_g32u(uint lhs, uint rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::neq<System.UInt32>(System.UInt32,System.UInt32)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::neq_d64i(System.Int64,System.Int64)
// bit neq_d64i(long lhs, long rhs)
// IL
bit neq_d64i(long lhs, long rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::neq(System.Int64,System.Int64)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::neq_g64i(System.Int64,System.Int64)
// bit neq_g64i(long lhs, long rhs)
// IL
bit neq_g64i(long lhs, long rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::neq<System.Int64>(System.Int64,System.Int64)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::neq_d64u(System.UInt64,System.UInt64)
// bit neq_d64u(ulong lhs, ulong rhs)
// IL
bit neq_d64u(ulong lhs, ulong rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::neq(System.UInt64,System.UInt64)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::neq_g64u(System.UInt64,System.UInt64)
// bit neq_g64u(ulong lhs, ulong rhs)
// IL
bit neq_g64u(ulong lhs, ulong rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::neq<System.UInt64>(System.UInt64,System.UInt64)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::neq_d32f(System.Single,System.Single)
// bit neq_d32f(float lhs, float rhs)
// IL
bit neq_d32f(float lhs, float rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.fmath::neq(System.Single,System.Single)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::neq_g32f(System.Single,System.Single)
// bit neq_g32f(float lhs, float rhs)
// IL
bit neq_g32f(float lhs, float rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gfp::neq<System.Single>(System.Single,System.Single)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::neq_d64f(System.Double,System.Double)
// bit neq_d64f(double lhs, double rhs)
// IL
bit neq_d64f(double lhs, double rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.fmath::neq(System.Double,System.Double)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::neq_g64f(System.Double,System.Double)
// bit neq_g64f(double lhs, double rhs)
// IL
bit neq_g64f(double lhs, double rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gfp::neq<System.Double>(System.Double,System.Double)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::even_d8i(System.SByte)
// bit even_d8i(sbyte x)
// IL
bit even_d8i(sbyte x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit zfunc::even(System.SByte)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::even_g8i(System.SByte)
// bit even_g8i(sbyte x)
// IL
bit even_g8i(sbyte x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::even<System.SByte>(System.SByte)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::even_d8u(System.Byte)
// bit even_d8u(byte x)
// IL
bit even_d8u(byte x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit zfunc::even(System.Byte)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::even_g8u(System.Byte)
// bit even_g8u(byte x)
// IL
bit even_g8u(byte x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::even<System.Byte>(System.Byte)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::even_d16i(System.Int16)
// bit even_d16i(short x)
// IL
bit even_d16i(short x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit zfunc::even(System.Int16)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::even_g16i(System.Int16)
// bit even_g16i(short x)
// IL
bit even_g16i(short x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::even<System.Int16>(System.Int16)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::even_d16u(System.UInt16)
// bit even_d16u(ushort x)
// IL
bit even_d16u(ushort x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit zfunc::even(System.UInt16)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::even_g16u(System.UInt16)
// bit even_g16u(ushort x)
// IL
bit even_g16u(ushort x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::even<System.UInt16>(System.UInt16)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::even_d32i(System.Int32)
// bit even_d32i(int x)
// IL
bit even_d32i(int x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit zfunc::even(System.Int32)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::even_g32i(System.Int32)
// bit even_g32i(int x)
// IL
bit even_g32i(int x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::even<System.Int32>(System.Int32)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::even_d32u(System.UInt32)
// bit even_d32u(uint x)
// IL
bit even_d32u(uint x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit zfunc::even(System.UInt32)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::even_g32u(System.UInt32)
// bit even_g32u(uint x)
// IL
bit even_g32u(uint x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::even<System.UInt32>(System.UInt32)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::even_d64i(System.Int64)
// bit even_d64i(long x)
// IL
bit even_d64i(long x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit zfunc::even(System.Int64)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::even_g64i(System.Int64)
// bit even_g64i(long x)
// IL
bit even_g64i(long x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::even<System.Int64>(System.Int64)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::even_d64u(System.UInt64)
// bit even_d64u(ulong x)
// IL
bit even_d64u(ulong x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit zfunc::even(System.UInt64)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::even_g64u(System.UInt64)
// bit even_g64u(ulong x)
// IL
bit even_g64u(ulong x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::even<System.UInt64>(System.UInt64)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::odd_d8i(System.SByte)
// bit odd_d8i(sbyte x)
// IL
bit odd_d8i(sbyte x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit zfunc::odd(System.SByte)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::odd_g8i(System.SByte)
// bit odd_g8i(sbyte x)
// IL
bit odd_g8i(sbyte x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::odd<System.SByte>(System.SByte)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::odd_d8u(System.Byte)
// bit odd_d8u(byte x)
// IL
bit odd_d8u(byte x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit zfunc::odd(System.Byte)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::odd_g8u(System.Byte)
// bit odd_g8u(byte x)
// IL
bit odd_g8u(byte x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::odd<System.Byte>(System.Byte)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::odd_d16i(System.Int16)
// bit odd_d16i(short x)
// IL
bit odd_d16i(short x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit zfunc::odd(System.Int16)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::odd_g16i(System.Int16)
// bit odd_g16i(short x)
// IL
bit odd_g16i(short x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::odd<System.Int16>(System.Int16)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::odd_d16u(System.UInt16)
// bit odd_d16u(ushort x)
// IL
bit odd_d16u(ushort x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit zfunc::odd(System.UInt16)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::odd_g16u(System.UInt16)
// bit odd_g16u(ushort x)
// IL
bit odd_g16u(ushort x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::odd<System.UInt16>(System.UInt16)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::odd_d32i(System.Int32)
// bit odd_d32i(int x)
// IL
bit odd_d32i(int x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit zfunc::odd(System.Int32)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::odd_g32i(System.Int32)
// bit odd_g32i(int x)
// IL
bit odd_g32i(int x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::odd<System.Int32>(System.Int32)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::odd_d32u(System.UInt32)
// bit odd_d32u(uint x)
// IL
bit odd_d32u(uint x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit zfunc::odd(System.UInt32)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::odd_g32u(System.UInt32)
// bit odd_g32u(uint x)
// IL
bit odd_g32u(uint x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::odd<System.UInt32>(System.UInt32)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::odd_d64i(System.Int64)
// bit odd_d64i(long x)
// IL
bit odd_d64i(long x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit zfunc::odd(System.Int64)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::odd_g64i(System.Int64)
// bit odd_g64i(long x)
// IL
bit odd_g64i(long x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::odd<System.Int64>(System.Int64)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::odd_d64u(System.UInt64)
// bit odd_d64u(ulong x)
// IL
bit odd_d64u(ulong x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit zfunc::odd(System.UInt64)
    IL_0006: ret
}

// Z0.bit Z0.gmathops::odd_g64u(System.UInt64)
// bit odd_g64u(ulong x)
// IL
bit odd_g64u(ulong x)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.bit Z0.gmath::odd<System.UInt64>(System.UInt64)
    IL_0006: ret
}

// System.SByte Z0.gmathops::fma_d8i(System.SByte,System.SByte,System.SByte)
// sbyte fma_d8i(sbyte x, sbyte a, sbyte b)
// IL
sbyte fma_d8i(sbyte x, sbyte a, sbyte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.SByte Z0.math::fma(System.SByte,System.SByte,System.SByte)
    IL_0008: ret
}

// System.SByte Z0.gmathops::fma_g8i(System.SByte,System.SByte,System.SByte)
// sbyte fma_g8i(sbyte x, sbyte a, sbyte b)
// IL
sbyte fma_g8i(sbyte x, sbyte a, sbyte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.SByte Z0.gmath::fma<System.SByte>(System.SByte,System.SByte,System.SByte)
    IL_0008: ret
}

// System.Byte Z0.gmathops::fma_d8u(System.Byte,System.Byte,System.Byte)
// byte fma_d8u(byte x, byte a, byte b)
// IL
byte fma_d8u(byte x, byte a, byte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.Byte Z0.math::fma(System.Byte,System.Byte,System.Byte)
    IL_0008: ret
}

// System.Byte Z0.gmathops::fma_g8u(System.Byte,System.Byte,System.Byte)
// byte fma_g8u(byte x, byte a, byte b)
// IL
byte fma_g8u(byte x, byte a, byte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.Byte Z0.gmath::fma<System.Byte>(System.Byte,System.Byte,System.Byte)
    IL_0008: ret
}

// System.Int16 Z0.gmathops::fma_d16i(System.Int16,System.Int16,System.Int16)
// short fma_d16i(short x, short a, short b)
// IL
short fma_d16i(short x, short a, short b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.Int16 Z0.math::fma(System.Int16,System.Int16,System.Int16)
    IL_0008: ret
}

// System.Int16 Z0.gmathops::fma_g16i(System.Int16,System.Int16,System.Int16)
// short fma_g16i(short x, short a, short b)
// IL
short fma_g16i(short x, short a, short b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.Int16 Z0.gmath::fma<System.Int16>(System.Int16,System.Int16,System.Int16)
    IL_0008: ret
}

// System.UInt16 Z0.gmathops::fma_d16u(System.UInt16,System.UInt16,System.UInt16)
// ushort fma_d16u(ushort x, ushort a, ushort b)
// IL
ushort fma_d16u(ushort x, ushort a, ushort b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.UInt16 Z0.math::fma(System.UInt16,System.UInt16,System.UInt16)
    IL_0008: ret
}

// System.UInt16 Z0.gmathops::fma_g16u(System.UInt16,System.UInt16,System.UInt16)
// ushort fma_g16u(ushort x, ushort a, ushort b)
// IL
ushort fma_g16u(ushort x, ushort a, ushort b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.UInt16 Z0.gmath::fma<System.UInt16>(System.UInt16,System.UInt16,System.UInt16)
    IL_0008: ret
}

// System.Int32 Z0.gmathops::fma_d32i(System.Int32,System.Int32,System.Int32)
// int fma_d32i(int x, int a, int b)
// IL
int fma_d32i(int x, int a, int b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.Int32 Z0.math::fma(System.Int32,System.Int32,System.Int32)
    IL_0008: ret
}

// System.Int32 Z0.gmathops::fma_g32i(System.Int32,System.Int32,System.Int32)
// int fma_g32i(int x, int a, int b)
// IL
int fma_g32i(int x, int a, int b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.Int32 Z0.gmath::fma<System.Int32>(System.Int32,System.Int32,System.Int32)
    IL_0008: ret
}

// System.UInt32 Z0.gmathops::fma_d32u(System.UInt32,System.UInt32,System.UInt32)
// uint fma_d32u(uint x, uint a, uint b)
// IL
uint fma_d32u(uint x, uint a, uint b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.UInt32 Z0.math::fma(System.UInt32,System.UInt32,System.UInt32)
    IL_0008: ret
}

// System.UInt32 Z0.gmathops::fma_g32u(System.UInt32,System.UInt32,System.UInt32)
// uint fma_g32u(uint x, uint a, uint b)
// IL
uint fma_g32u(uint x, uint a, uint b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.UInt32 Z0.gmath::fma<System.UInt32>(System.UInt32,System.UInt32,System.UInt32)
    IL_0008: ret
}

// System.Int64 Z0.gmathops::fma_d64i(System.Int64,System.Int64,System.Int64)
// long fma_d64i(long x, long a, long b)
// IL
long fma_d64i(long x, long a, long b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.Int64 Z0.math::fma(System.Int64,System.Int64,System.Int64)
    IL_0008: ret
}

// System.Int64 Z0.gmathops::fma_g64i(System.Int64,System.Int64,System.Int64)
// long fma_g64i(long x, long a, long b)
// IL
long fma_g64i(long x, long a, long b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.Int64 Z0.gmath::fma<System.Int64>(System.Int64,System.Int64,System.Int64)
    IL_0008: ret
}

// System.UInt64 Z0.gmathops::fma_d64u(System.UInt64,System.UInt64,System.UInt64)
// ulong fma_d64u(ulong x, ulong a, ulong b)
// IL
ulong fma_d64u(ulong x, ulong a, ulong b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.UInt64 Z0.math::fma(System.UInt64,System.UInt64,System.UInt64)
    IL_0008: ret
}

// System.UInt64 Z0.gmathops::fma_g64u(System.UInt64,System.UInt64,System.UInt64)
// ulong fma_g64u(ulong x, ulong a, ulong b)
// IL
ulong fma_g64u(ulong x, ulong a, ulong b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.UInt64 Z0.gmath::fma<System.UInt64>(System.UInt64,System.UInt64,System.UInt64)
    IL_0008: ret
}

// System.Single Z0.gmathops::fma_d32f(System.Single,System.Single,System.Single)
// float fma_d32f(float x, float a, float b)
// IL
float fma_d32f(float x, float a, float b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.Single Z0.fmath::fma(System.Single,System.Single,System.Single)
    IL_0008: ret
}

// System.Single Z0.gmathops::fma_g32f(System.Single,System.Single,System.Single)
// float fma_g32f(float x, float a, float b)
// IL
float fma_g32f(float x, float a, float b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.Single Z0.gmath::fma<System.Single>(System.Single,System.Single,System.Single)
    IL_0008: ret
}

// System.Double Z0.gmathops::fma_d64f(System.Double,System.Double,System.Double)
// double fma_d64f(double x, double a, double b)
// IL
double fma_d64f(double x, double a, double b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.Double Z0.fmath::fma(System.Double,System.Double,System.Double)
    IL_0008: ret
}

// System.Double Z0.gmathops::fma_g64f(System.Double,System.Double,System.Double)
// double fma_g64f(double x, double a, double b)
// IL
double fma_g64f(double x, double a, double b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.Double Z0.gmath::fma<System.Double>(System.Double,System.Double,System.Double)
    IL_0008: ret
}

// System.UInt32 Z0.gmathops::gcd_32u(System.UInt32,System.UInt32)
// uint gcd_32u(uint a, uint b)
// IL
uint gcd_32u(uint a, uint b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt32 Z0.gmath::gcd<System.UInt32>(System.UInt32,System.UInt32)
    IL_0007: ret
}

// System.Int32 Z0.gmathops::gcd_32i(System.Int32,System.Int32)
// int gcd_32i(int a, int b)
// IL
int gcd_32i(int a, int b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int32 Z0.gmath::gcd<System.Int32>(System.Int32,System.Int32)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gt_d8i(System.SByte,System.SByte)
// bit gt_d8i(sbyte a, sbyte b)
// IL
bit gt_d8i(sbyte a, sbyte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::gt(System.SByte,System.SByte)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gt_g8i(System.SByte,System.SByte)
// bit gt_g8i(sbyte a, sbyte b)
// IL
bit gt_g8i(sbyte a, sbyte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::gt<System.SByte>(System.SByte,System.SByte)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gt_d8u(System.Byte,System.Byte)
// bit gt_d8u(byte a, byte b)
// IL
bit gt_d8u(byte a, byte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::gt(System.Byte,System.Byte)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gt_g8u(System.Byte,System.Byte)
// bit gt_g8u(byte a, byte b)
// IL
bit gt_g8u(byte a, byte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::gt<System.Byte>(System.Byte,System.Byte)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gt_d16i(System.Int16,System.Int16)
// bit gt_d16i(short a, short b)
// IL
bit gt_d16i(short a, short b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::gt(System.Int16,System.Int16)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gt_g16i(System.Int16,System.Int16)
// bit gt_g16i(short a, short b)
// IL
bit gt_g16i(short a, short b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::gt<System.Int16>(System.Int16,System.Int16)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gt_d16u(System.UInt16,System.UInt16)
// bit gt_d16u(ushort a, ushort b)
// IL
bit gt_d16u(ushort a, ushort b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::gt(System.UInt16,System.UInt16)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gt_g16u(System.UInt16,System.UInt16)
// bit gt_g16u(ushort a, ushort b)
// IL
bit gt_g16u(ushort a, ushort b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::gt<System.UInt16>(System.UInt16,System.UInt16)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gt_d32i(System.Int32,System.Int32)
// bit gt_d32i(int a, int b)
// IL
bit gt_d32i(int a, int b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::gt(System.Int32,System.Int32)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gt_g32i(System.Int32,System.Int32)
// bit gt_g32i(int a, int b)
// IL
bit gt_g32i(int a, int b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.gmath::gt<System.Int32>(System.Int32,System.Int32)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::gt_d32u(System.UInt32,System.UInt32)
// bit gt_d32u(uint a, uint b)
// IL
bit gt_d32u(uint a, uint b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.bit Z0.math::gt(System.UInt32,System.UInt32)
    IL_0007: ret
}

// System.SByte Z0.gmathops::abs_d8i(System.SByte)
// sbyte abs_d8i(sbyte x)
// IL
sbyte abs_d8i(sbyte x)
{
    IL_0000: ldarg.0
    IL_0001: call System.SByte Z0.math::abs(System.SByte)
    IL_0006: ret
}

// System.SByte Z0.gmathops::abs_g8i(System.SByte)
// sbyte abs_g8i(sbyte x)
// IL
sbyte abs_g8i(sbyte x)
{
    IL_0000: ldarg.0
    IL_0001: call System.SByte Z0.gmath::abs<System.SByte>(System.SByte)
    IL_0006: ret
}

// System.Int16 Z0.gmathops::abs_d16i(System.Int16)
// short abs_d16i(short x)
// IL
short abs_d16i(short x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int16 Z0.math::abs(System.Int16)
    IL_0006: ret
}

// System.Int16 Z0.gmathops::abs_g16i(System.Int16)
// short abs_g16i(short x)
// IL
short abs_g16i(short x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int16 Z0.gmath::abs<System.Int16>(System.Int16)
    IL_0006: ret
}

// System.Int32 Z0.gmathops::abs_d32i(System.Int32)
// int abs_d32i(int x)
// IL
int abs_d32i(int x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int32 Z0.math::abs(System.Int32)
    IL_0006: ret
}

// System.Int32 Z0.gmathops::abs_g32i(System.Int32)
// int abs_g32i(int x)
// IL
int abs_g32i(int x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int32 Z0.gmath::abs<System.Int32>(System.Int32)
    IL_0006: ret
}

// System.Int64 Z0.gmathops::abs_d64i(System.Int64)
// long abs_d64i(long x)
// IL
long abs_d64i(long x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int64 Z0.math::abs(System.Int64)
    IL_0006: ret
}

// System.Int64 Z0.gmathops::abs_g64i(System.Int64)
// long abs_g64i(long x)
// IL
long abs_g64i(long x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int64 Z0.gmath::abs<System.Int64>(System.Int64)
    IL_0006: ret
}

// System.Single Z0.gmathops::abs_g32f(System.Single)
// float abs_g32f(float x)
// IL
float abs_g32f(float x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Single Z0.gfp::abs<System.Single>(System.Single)
    IL_0006: ret
}

// System.Single Z0.gmathops::abs_d32f(System.Single)
// float abs_d32f(float x)
// IL
float abs_d32f(float x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Single Z0.fmath::abs(System.Single)
    IL_0006: ret
}

// System.Double Z0.gmathops::abs_d64f(System.Double)
// double abs_d64f(double x)
// IL
double abs_d64f(double x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Double Z0.fmath::abs(System.Double)
    IL_0006: ret
}

// System.Double Z0.gmathops::abs_g64f(System.Double)
// double abs_g64f(double x)
// IL
double abs_g64f(double x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Double Z0.gfp::abs<System.Double>(System.Double)
    IL_0006: ret
}

// System.SByte Z0.gmathops::add_d8i(System.SByte,System.SByte)
// sbyte add_d8i(sbyte lhs, sbyte rhs)
// IL
sbyte add_d8i(sbyte lhs, sbyte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.SByte Z0.math::add(System.SByte,System.SByte)
    IL_0007: ret
}

// System.SByte Z0.gmathops::add_g8i(System.SByte,System.SByte)
// sbyte add_g8i(sbyte lhs, sbyte rhs)
// IL
sbyte add_g8i(sbyte lhs, sbyte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.SByte Z0.gmath::add<System.SByte>(System.SByte,System.SByte)
    IL_0007: ret
}

// System.Byte Z0.gmathops::add_d8u(System.Byte,System.Byte)
// byte add_d8u(byte lhs, byte rhs)
// IL
byte add_d8u(byte lhs, byte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Byte Z0.math::add(System.Byte,System.Byte)
    IL_0007: ret
}

// System.Byte Z0.gmathops::add_g8u(System.Byte,System.Byte)
// byte add_g8u(byte lhs, byte rhs)
// IL
byte add_g8u(byte lhs, byte rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Byte Z0.gmath::add<System.Byte>(System.Byte,System.Byte)
    IL_0007: ret
}

// System.Int16 Z0.gmathops::add_d16i(System.Int16,System.Int16)
// short add_d16i(short lhs, short rhs)
// IL
short add_d16i(short lhs, short rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int16 Z0.math::add(System.Int16,System.Int16)
    IL_0007: ret
}

// System.Int16 Z0.gmathops::add_g16i(System.Int16,System.Int16)
// short add_g16i(short lhs, short rhs)
// IL
short add_g16i(short lhs, short rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int16 Z0.gmath::add<System.Int16>(System.Int16,System.Int16)
    IL_0007: ret
}

// System.UInt16 Z0.gmathops::add_d16u(System.UInt16,System.UInt16)
// ushort add_d16u(ushort lhs, ushort rhs)
// IL
ushort add_d16u(ushort lhs, ushort rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.math::add(System.UInt16,System.UInt16)
    IL_0007: ret
}

// System.UInt16 Z0.gmathops::add_g16u(System.UInt16,System.UInt16)
// ushort add_g16u(ushort lhs, ushort rhs)
// IL
ushort add_g16u(ushort lhs, ushort rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.gmath::add<System.UInt16>(System.UInt16,System.UInt16)
    IL_0007: ret
}

// System.Int32 Z0.gmathops::add_d32i(System.Int32,System.Int32)
// int add_d32i(int lhs, int rhs)
// IL
int add_d32i(int lhs, int rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int32 Z0.math::add(System.Int32,System.Int32)
    IL_0007: ret
}

// System.Int32 Z0.gmathops::add_g32i(System.Int32,System.Int32)
// int add_g32i(int lhs, int rhs)
// IL
int add_g32i(int lhs, int rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int32 Z0.gmath::add<System.Int32>(System.Int32,System.Int32)
    IL_0007: ret
}

// System.UInt32 Z0.gmathops::add_d32u(System.UInt32,System.UInt32)
// uint add_d32u(uint lhs, uint rhs)
// IL
uint add_d32u(uint lhs, uint rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt32 Z0.math::add(System.UInt32,System.UInt32)
    IL_0007: ret
}

// System.UInt32 Z0.gmathops::add_g32u(System.UInt32,System.UInt32)
// uint add_g32u(uint lhs, uint rhs)
// IL
uint add_g32u(uint lhs, uint rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt32 Z0.gmath::add<System.UInt32>(System.UInt32,System.UInt32)
    IL_0007: ret
}

// System.Int64 Z0.gmathops::add_d64i(System.Int64,System.Int64)
// long add_d64i(long lhs, long rhs)
// IL
long add_d64i(long lhs, long rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int64 Z0.math::add(System.Int64,System.Int64)
    IL_0007: ret
}

// System.Int64 Z0.gmathops::add_g64i(System.Int64,System.Int64)
// long add_g64i(long lhs, long rhs)
// IL
long add_g64i(long lhs, long rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Int64 Z0.gmath::add<System.Int64>(System.Int64,System.Int64)
    IL_0007: ret
}

// System.UInt64 Z0.gmathops::add_d64u(System.UInt64,System.UInt64)
// ulong add_d64u(ulong lhs, ulong rhs)
// IL
ulong add_d64u(ulong lhs, ulong rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt64 Z0.math::add(System.UInt64,System.UInt64)
    IL_0007: ret
}

// System.UInt64 Z0.gmathops::add_g64u(System.UInt64,System.UInt64)
// ulong add_g64u(ulong lhs, ulong rhs)
// IL
ulong add_g64u(ulong lhs, ulong rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt64 Z0.gmath::add<System.UInt64>(System.UInt64,System.UInt64)
    IL_0007: ret
}

// System.Single Z0.gmathops::add_d32f(System.Single,System.Single)
// float add_d32f(float lhs, float rhs)
// IL
float add_d32f(float lhs, float rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Single Z0.fmath::add(System.Single,System.Single)
    IL_0007: ret
}

// System.Single Z0.gmathops::add_g32f(System.Single,System.Single)
// float add_g32f(float lhs, float rhs)
// IL
float add_g32f(float lhs, float rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Single Z0.gfp::add<System.Single>(System.Single,System.Single)
    IL_0007: ret
}

// System.Double Z0.gmathops::add_d64f(System.Double,System.Double)
// double add_d64f(double lhs, double rhs)
// IL
double add_d64f(double lhs, double rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Double Z0.fmath::add(System.Double,System.Double)
    IL_0007: ret
}

// System.Double Z0.gmathops::add_g64f(System.Double,System.Double)
// double add_g64f(double lhs, double rhs)
// IL
double add_g64f(double lhs, double rhs)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.Double Z0.gfp::add<System.Double>(System.Double,System.Double)
    IL_0007: ret
}

// Z0.bit Z0.gmathops::between_d8i(System.SByte,System.SByte,System.SByte)
// bit between_d8i(sbyte x, sbyte a, sbyte b)
// IL
bit between_d8i(sbyte x, sbyte a, sbyte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call Z0.bit Z0.math::between(System.SByte,System.SByte,System.SByte)
    IL_0008: ret
}

// Z0.bit Z0.gmathops::between_g8i(System.SByte,System.SByte,System.SByte)
// bit between_g8i(sbyte x, sbyte a, sbyte b)
// IL
bit between_g8i(sbyte x, sbyte a, sbyte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call Z0.bit Z0.gmath::between<System.SByte>(System.SByte,System.SByte,System.SByte)
    IL_0008: ret
}

// Z0.bit Z0.gmathops::between_d8u(System.Byte,System.Byte,System.Byte)
// bit between_d8u(byte x, byte a, byte b)
// IL
bit between_d8u(byte x, byte a, byte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call Z0.bit Z0.math::between(System.Byte,System.Byte,System.Byte)
    IL_0008: ret
}

// Z0.bit Z0.gmathops::between_g8u(System.Byte,System.Byte,System.Byte)
// bit between_g8u(byte x, byte a, byte b)
// IL
bit between_g8u(byte x, byte a, byte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call Z0.bit Z0.gmath::between<System.Byte>(System.Byte,System.Byte,System.Byte)
    IL_0008: ret
}

// Z0.bit Z0.gmathops::between_d16i(System.Int16,System.Int16,System.Int16)
// bit between_d16i(short x, short a, short b)
// IL
bit between_d16i(short x, short a, short b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call Z0.bit Z0.math::between(System.Int16,System.Int16,System.Int16)
    IL_0008: ret
}

// Z0.bit Z0.gmathops::between_g16i(System.Int16,System.Int16,System.Int16)
// bit between_g16i(short x, short a, short b)
// IL
bit between_g16i(short x, short a, short b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call Z0.bit Z0.gmath::between<System.Int16>(System.Int16,System.Int16,System.Int16)
    IL_0008: ret
}

// Z0.bit Z0.gmathops::between_d16u(System.UInt16,System.UInt16,System.UInt16)
// bit between_d16u(ushort x, ushort a, ushort b)
// IL
bit between_d16u(ushort x, ushort a, ushort b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call Z0.bit Z0.math::between(System.UInt16,System.UInt16,System.UInt16)
    IL_0008: ret
}

// Z0.bit Z0.gmathops::between_g16u(System.UInt16,System.UInt16,System.UInt16)
// bit between_g16u(ushort x, ushort a, ushort b)
// IL
bit between_g16u(ushort x, ushort a, ushort b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call Z0.bit Z0.gmath::between<System.UInt16>(System.UInt16,System.UInt16,System.UInt16)
    IL_0008: ret
}

// Z0.bit Z0.gmathops::between_d32i(System.Int32,System.Int32,System.Int32)
// bit between_d32i(int x, int a, int b)
// IL
bit between_d32i(int x, int a, int b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call Z0.bit Z0.math::between(System.Int32,System.Int32,System.Int32)
    IL_0008: ret
}

// Z0.bit Z0.gmathops::between_g32i(System.Int32,System.Int32,System.Int32)
// bit between_g32i(int x, int a, int b)
// IL
bit between_g32i(int x, int a, int b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call Z0.bit Z0.gmath::between<System.Int32>(System.Int32,System.Int32,System.Int32)
    IL_0008: ret
}

// Z0.bit Z0.gmathops::between_d32u(System.UInt32,System.UInt32,System.UInt32)
// bit between_d32u(uint x, uint a, uint b)
// IL
bit between_d32u(uint x, uint a, uint b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call Z0.bit Z0.math::between(System.UInt32,System.UInt32,System.UInt32)
    IL_0008: ret
}

// Z0.bit Z0.gmathops::between_g32u(System.UInt32,System.UInt32,System.UInt32)
// bit between_g32u(uint x, uint a, uint b)
// IL
bit between_g32u(uint x, uint a, uint b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call Z0.bit Z0.gmath::between<System.UInt32>(System.UInt32,System.UInt32,System.UInt32)
    IL_0008: ret
}

// Z0.bit Z0.gmathops::between_d64i(System.Int64,System.Int64,System.Int64)
// bit between_d64i(long x, long a, long b)
// IL
bit between_d64i(long x, long a, long b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call Z0.bit Z0.math::between(System.Int64,System.Int64,System.Int64)
    IL_0008: ret
}

// Z0.bit Z0.gmathops::between_g64i(System.Int64,System.Int64,System.Int64)
// bit between_g64i(long x, long a, long b)
// IL
bit between_g64i(long x, long a, long b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call Z0.bit Z0.gmath::between<System.Int64>(System.Int64,System.Int64,System.Int64)
    IL_0008: ret
}

// Z0.bit Z0.gmathops::between_d64u(System.UInt64,System.UInt64,System.UInt64)
// bit between_d64u(ulong x, ulong a, ulong b)
// IL
bit between_d64u(ulong x, ulong a, ulong b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call Z0.bit Z0.math::between(System.UInt64,System.UInt64,System.UInt64)
    IL_0008: ret
}

// Z0.bit Z0.gmathops::between_g64u(System.UInt64,System.UInt64,System.UInt64)
// bit between_g64u(ulong x, ulong a, ulong b)
// IL
bit between_g64u(ulong x, ulong a, ulong b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call Z0.bit Z0.gmath::between<System.UInt64>(System.UInt64,System.UInt64,System.UInt64)
    IL_0008: ret
}

// Z0.bit Z0.gmathops::between_d32f(System.Single,System.Single,System.Single)
// bit between_d32f(float x, float a, float b)
// IL
bit between_d32f(float x, float a, float b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call Z0.bit Z0.fmath::between(System.Single,System.Single,System.Single)
    IL_0008: ret
}

// Z0.bit Z0.gmathops::between_g32f(System.Single,System.Single,System.Single)
// bit between_g32f(float x, float a, float b)
// IL
bit between_g32f(float x, float a, float b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call Z0.bit Z0.gmath::between<System.Single>(System.Single,System.Single,System.Single)
    IL_0008: ret
}

// Z0.bit Z0.gmathops::between_d64f(System.Double,System.Double,System.Double)
// bit between_d64f(double x, double a, double b)
// IL
bit between_d64f(double x, double a, double b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call Z0.bit Z0.fmath::between(System.Double,System.Double,System.Double)
    IL_0008: ret
}

// Z0.bit Z0.gmathops::between_g64f(System.Double,System.Double,System.Double)
// bit between_g64f(double x, double a, double b)
// IL
bit between_g64f(double x, double a, double b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call Z0.bit Z0.gmath::between<System.Double>(System.Double,System.Double,System.Double)
    IL_0008: ret
}

// System.UInt64 Z0.gmathops::avgz_64u_g(System.ReadOnlySpan`1<System.UInt64>)
// ulong avgz_64u_g(ReadOnlySpan<ulong> src)
// IL
ulong avgz_64u_g(ReadOnlySpan<ulong> src)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt64 Z0.mathspan::avgz<System.UInt64>(System.ReadOnlySpan`1<System.UInt64>)
    IL_0006: ret
}

// Z0.Collector Z0.gmathops::collector_create()
// Collector collector_create()
// IL
Collector collector_create()
{
    IL_0000: ldc.i4.0
    IL_0001: call Z0.Collector Z0.Collector::Create<System.Int32>(System.Int32)
    IL_0006: ret
}

// System.Void Z0.gmathops::collector_collect_seq(Z0.Collector)
// void collector_collect_seq(Collector collector)
// IL
void collector_collect_seq(Collector collector)
{
    IL_0000: ldc.i4.1
    IL_0001: stloc.0
    IL_0002: br.s IL_000F
    IL_0004: ldarg.0
    IL_0005: ldloc.0
    IL_0006: callvirt System.Void Z0.Collector::Collect<System.Int32>(System.Int32)
    IL_000B: ldloc.0
    IL_000C: ldc.i4.1
    IL_000D: add
    IL_000E: stloc.0
    IL_000F: ldloc.0
    IL_0010: ldc.i4 255
    IL_0015: blt.s IL_0004
    IL_0017: ret
}

// System.Void Z0.gmathops::collector_collect_op(Z0.Collector)
// void collector_collect_op(Collector collector)
// IL
void collector_collect_op(Collector collector)
{
    IL_0000: ldarg.0
    IL_0001: ldc.i4.3
    IL_0002: call Z0.Collector Z0.Collector::op_Addition(Z0.Collector,System.Int32)
    IL_0007: starg.s collector
    IL_0009: ldarg.0
    IL_000A: ldc.i4.4
    IL_000B: call Z0.Collector Z0.Collector::op_Addition(Z0.Collector,System.Int32)
    IL_0010: starg.s collector
    IL_0012: ldarg.0
    IL_0013: ldc.i4.5
    IL_0014: call Z0.Collector Z0.Collector::op_Addition(Z0.Collector,System.Int32)
    IL_0019: starg.s collector
    IL_001B: ret
}

// System.Byte Z0.gmathops::alteven_u8()
// byte alteven_u8()
// IL
byte alteven_u8()
{
    IL_0000: call System.Byte Z0.gmath::alteven<System.Byte>()
    IL_0005: ret
}

// System.Byte Z0.gmathops::altodd_u8()
// byte altodd_u8()
// IL
byte altodd_u8()
{
    IL_0000: call System.Byte Z0.gmath::altodd<System.Byte>()
    IL_0005: ret
}

// System.Byte Z0.gmathops::one_n8u()
// byte one_n8u()
// IL
byte one_n8u()
{
    IL_0000: ldc.i4.1
    IL_0001: ret
}

// System.Byte Z0.gmathops::one_g8u()
// byte one_g8u()
// IL
byte one_g8u()
{
    IL_0000: ldc.i4.0
    IL_0001: call System.Byte Z0.gmath::one<System.Byte>(System.Byte)
    IL_0006: ret
}

// System.UInt16 Z0.gmathops::one_n16u()
// ushort one_n16u()
// IL
ushort one_n16u()
{
    IL_0000: ldc.i4.1
    IL_0001: ret
}

// System.UInt16 Z0.gmathops::one_g16u()
// ushort one_g16u()
// IL
ushort one_g16u()
{
    IL_0000: ldc.i4.0
    IL_0001: call System.UInt16 Z0.gmath::one<System.UInt16>(System.UInt16)
    IL_0006: ret
}

// System.Int32 Z0.gmathops::one_n32i()
// int one_n32i()
// IL
int one_n32i()
{
    IL_0000: ldc.i4.1
    IL_0001: ret
}

// System.Int32 Z0.gmathops::one_g32i()
// int one_g32i()
// IL
int one_g32i()
{
    IL_0000: ldc.i4.0
    IL_0001: call System.Int32 Z0.gmath::one<System.Int32>(System.Int32)
    IL_0006: ret
}

// System.UInt32 Z0.gmathops::one_n32u()
// uint one_n32u()
// IL
uint one_n32u()
{
    IL_0000: ldc.i4.1
    IL_0001: ret
}

// System.UInt32 Z0.gmathops::one_g32u()
// uint one_g32u()
// IL
uint one_g32u()
{
    IL_0000: ldc.i4.0
    IL_0001: call System.UInt32 Z0.gmath::one<System.UInt32>(System.UInt32)
    IL_0006: ret
}

// System.Int64 Z0.gmathops::one_n64i()
// long one_n64i()
// IL
long one_n64i()
{
    IL_0000: ldc.i4.1
    IL_0001: conv.i8
    IL_0002: ret
}

// System.Int64 Z0.gmathops::one_g64i()
// long one_g64i()
// IL
long one_g64i()
{
    IL_0000: ldc.i4.0
    IL_0001: conv.i8
    IL_0002: call System.Int64 Z0.gmath::one<System.Int64>(System.Int64)
    IL_0007: ret
}

// System.UInt64 Z0.gmathops::one_n64u()
// ulong one_n64u()
// IL
ulong one_n64u()
{
    IL_0000: ldc.i4.1
    IL_0001: conv.i8
    IL_0002: ret
}

// System.UInt64 Z0.gmathops::one_g64u()
// ulong one_g64u()
// IL
ulong one_g64u()
{
    IL_0000: ldc.i4.0
    IL_0001: conv.i8
    IL_0002: call System.UInt64 Z0.gmath::one<System.UInt64>(System.UInt64)
    IL_0007: ret
}

// System.Single Z0.gmathops::one_n32f()
// float one_n32f()
// IL
float one_n32f()
{
    IL_0000: ldc.r4 1
    IL_0005: ret
}

// System.Single Z0.gmathops::one_g32f()
// float one_g32f()
// IL
float one_g32f()
{
    IL_0000: ldc.r4 0
    IL_0005: call System.Single Z0.gmath::one<System.Single>(System.Single)
    IL_000A: ret
}

// System.Double Z0.gmathops::one_n64f()
// double one_n64f()
// IL
double one_n64f()
{
    IL_0000: ldc.r8 1
    IL_0009: ret
}

// System.Double Z0.gmathops::one_g64f()
// double one_g64f()
// IL
double one_g64f()
{
    IL_0000: ldc.r8 0
    IL_0009: call System.Double Z0.gmath::one<System.Double>(System.Double)
    IL_000E: ret
}

// System.SByte Z0.gmathops::zero_g8i()
// sbyte zero_g8i()
// IL
sbyte zero_g8i()
{
    IL_0000: ldc.i4.0
    IL_0001: call System.SByte Z0.gmath::zero<System.SByte>(System.SByte)
    IL_0006: ret
}

// System.Byte Z0.gmathops::zero_g8u()
// byte zero_g8u()
// IL
byte zero_g8u()
{
    IL_0000: ldc.i4.0
    IL_0001: call System.Byte Z0.gmath::zero<System.Byte>(System.Byte)
    IL_0006: ret
}

// System.Int16 Z0.gmathops::zero_g16i()
// short zero_g16i()
// IL
short zero_g16i()
{
    IL_0000: ldc.i4.0
    IL_0001: call System.Int16 Z0.gmath::zero<System.Int16>(System.Int16)
    IL_0006: ret
}

// System.UInt16 Z0.gmathops::zero_g16u()
// ushort zero_g16u()
// IL
ushort zero_g16u()
{
    IL_0000: ldc.i4.0
    IL_0001: call System.UInt16 Z0.gmath::zero<System.UInt16>(System.UInt16)
    IL_0006: ret
}

// System.Int32 Z0.gmathops::zero_g32i()
// int zero_g32i()
// IL
int zero_g32i()
{
    IL_0000: ldc.i4.0
    IL_0001: call System.Int32 Z0.gmath::zero<System.Int32>(System.Int32)
    IL_0006: ret
}

// System.UInt32 Z0.gmathops::zero_g32u()
// uint zero_g32u()
// IL
uint zero_g32u()
{
    IL_0000: ldc.i4.0
    IL_0001: call System.UInt32 Z0.gmath::zero<System.UInt32>(System.UInt32)
    IL_0006: ret
}

// System.Int64 Z0.gmathops::zero_g64i()
// long zero_g64i()
// IL
long zero_g64i()
{
    IL_0000: ldc.i4.0
    IL_0001: conv.i8
    IL_0002: call System.Int64 Z0.gmath::zero<System.Int64>(System.Int64)
    IL_0007: ret
}

// System.UInt64 Z0.gmathops::zero_g64u()
// ulong zero_g64u()
// IL
ulong zero_g64u()
{
    IL_0000: ldc.i4.0
    IL_0001: conv.i8
    IL_0002: call System.UInt64 Z0.gmath::zero<System.UInt64>(System.UInt64)
    IL_0007: ret
}

// System.Single Z0.gmathops::zero_g32f()
// float zero_g32f()
// IL
float zero_g32f()
{
    IL_0000: ldc.r4 0
    IL_0005: call System.Single Z0.gmath::zero<System.Single>(System.Single)
    IL_000A: ret
}

// System.Double Z0.gmathops::zero_g64f()
// double zero_g64f()
// IL
double zero_g64f()
{
    IL_0000: ldc.r8 0
    IL_0009: call System.Double Z0.gmath::one<System.Double>(System.Double)
    IL_000E: ret
}

// System.SByte Z0.gmathops::minval_n8i()
// sbyte minval_n8i()
// IL
sbyte minval_n8i()
{
    IL_0000: ldc.i4.s -128
    IL_0002: ret
}

// System.SByte Z0.gmathops::minval_g8i()
// sbyte minval_g8i()
// IL
sbyte minval_g8i()
{
    IL_0000: ldc.i4.0
    IL_0001: call System.SByte Z0.gmath::minval<System.SByte>(System.SByte)
    IL_0006: ret
}

// System.Byte Z0.gmathops::minval_n8u()
// byte minval_n8u()
// IL
byte minval_n8u()
{
    IL_0000: ldc.i4.0
    IL_0001: ret
}

// System.Byte Z0.gmathops::minval_g8u()
// byte minval_g8u()
// IL
byte minval_g8u()
{
    IL_0000: ldc.i4.0
    IL_0001: call System.Byte Z0.gmath::minval<System.Byte>(System.Byte)
    IL_0006: ret
}

// System.Int16 Z0.gmathops::minval_n16i()
// short minval_n16i()
// IL
short minval_n16i()
{
    IL_0000: ldc.i4 -32768
    IL_0005: ret
}

// System.Int16 Z0.gmathops::minval_g16i()
// short minval_g16i()
// IL
short minval_g16i()
{
    IL_0000: ldc.i4.0
    IL_0001: call System.Int16 Z0.gmath::minval<System.Int16>(System.Int16)
    IL_0006: ret
}

// System.UInt16 Z0.gmathops::minval_g16u()
// ushort minval_g16u()
// IL
ushort minval_g16u()
{
    IL_0000: ldc.i4.0
    IL_0001: call System.UInt16 Z0.gmath::minval<System.UInt16>(System.UInt16)
    IL_0006: ret
}

// System.Int32 Z0.gmathops::minval_32i()
// int minval_32i()
// IL
int minval_32i()
{
    IL_0000: ldc.i4 -2147483648
    IL_0005: ret
}

// System.Int32 Z0.gmathops::minval_g32i()
// int minval_g32i()
// IL
int minval_g32i()
{
    IL_0000: ldc.i4.0
    IL_0001: call System.Int32 Z0.gmath::minval<System.Int32>(System.Int32)
    IL_0006: ret
}

// System.UInt32 Z0.gmathops::minval_32u()
// uint minval_32u()
// IL
uint minval_32u()
{
    IL_0000: ldc.i4.0
    IL_0001: ret
}

// System.UInt32 Z0.gmathops::minval_g32u()
// uint minval_g32u()
// IL
uint minval_g32u()
{
    IL_0000: ldc.i4.0
    IL_0001: call System.UInt32 Z0.gmath::minval<System.UInt32>(System.UInt32)
    IL_0006: ret
}

// System.Int64 Z0.gmathops::minval_g64i()
// long minval_g64i()
// IL
long minval_g64i()
{
    IL_0000: ldc.i4.0
    IL_0001: conv.i8
    IL_0002: call System.Int64 Z0.gmath::minval<System.Int64>(System.Int64)
    IL_0007: ret
}

// System.UInt64 Z0.gmathops::minval_g64u()
// ulong minval_g64u()
// IL
ulong minval_g64u()
{
    IL_0000: ldc.i4.0
    IL_0001: conv.i8
    IL_0002: call System.UInt64 Z0.gmath::minval<System.UInt64>(System.UInt64)
    IL_0007: ret
}

// System.Single Z0.gmathops::minval_g32f()
// float minval_g32f()
// IL
float minval_g32f()
{
    IL_0000: ldc.r4 0
    IL_0005: call System.Single Z0.gmath::minval<System.Single>(System.Single)
    IL_000A: ret
}

// System.Double Z0.gmathops::minval_g64f()
// double minval_g64f()
// IL
double minval_g64f()
{
    IL_0000: ldc.r8 0
    IL_0009: call System.Double Z0.gmath::minval<System.Double>(System.Double)
    IL_000E: ret
}

// System.SByte Z0.gmathops::maxval_g8i()
// sbyte maxval_g8i()
// IL
sbyte maxval_g8i()
{
    IL_0000: ldc.i4.0
    IL_0001: call System.SByte Z0.gmath::maxval<System.SByte>(System.SByte)
    IL_0006: ret
}

// System.Byte Z0.gmathops::maxval_g8u()
// byte maxval_g8u()
// IL
byte maxval_g8u()
{
    IL_0000: ldc.i4.0
    IL_0001: call System.Byte Z0.gmath::maxval<System.Byte>(System.Byte)
    IL_0006: ret
}

// System.Int16 Z0.gmathops::maxval_g16i()
// short maxval_g16i()
// IL
short maxval_g16i()
{
    IL_0000: ldc.i4.0
    IL_0001: call System.Int16 Z0.gmath::maxval<System.Int16>(System.Int16)
    IL_0006: ret
}

// System.UInt16 Z0.gmathops::maxval_g16u()
// ushort maxval_g16u()
// IL
ushort maxval_g16u()
{
    IL_0000: ldc.i4.0
    IL_0001: call System.UInt16 Z0.gmath::maxval<System.UInt16>(System.UInt16)
    IL_0006: ret
}

// System.Int32 Z0.gmathops::maxval_n32i()
// int maxval_n32i()
// IL
int maxval_n32i()
{
    IL_0000: ldc.i4 2147483647
    IL_0005: ret
}

// System.Int32 Z0.gmathops::maxval_g32i()
// int maxval_g32i()
// IL
int maxval_g32i()
{
    IL_0000: ldc.i4.0
    IL_0001: call System.Int32 Z0.gmath::maxval<System.Int32>(System.Int32)
    IL_0006: ret
}

// System.UInt32 Z0.gmathops::maxval_n32u()
// uint maxval_n32u()
// IL
uint maxval_n32u()
{
    IL_0000: ldc.i4.m1
    IL_0001: ret
}

// System.UInt32 Z0.gmathops::maxval_g32u()
// uint maxval_g32u()
// IL
uint maxval_g32u()
{
    IL_0000: ldc.i4.0
    IL_0001: call System.UInt32 Z0.gmath::maxval<System.UInt32>(System.UInt32)
    IL_0006: ret
}

// System.Int64 Z0.gmathops::maxval_g64i()
// long maxval_g64i()
// IL
long maxval_g64i()
{
    IL_0000: ldc.i4.0
    IL_0001: conv.i8
    IL_0002: call System.Int64 Z0.gmath::maxval<System.Int64>(System.Int64)
    IL_0007: ret
}

// System.UInt64 Z0.gmathops::maxval_g64u()
// ulong maxval_g64u()
// IL
ulong maxval_g64u()
{
    IL_0000: ldc.i4.0
    IL_0001: conv.i8
    IL_0002: call System.UInt64 Z0.gmath::maxval<System.UInt64>(System.UInt64)
    IL_0007: ret
}

// System.Single Z0.gmathops::maxval_g32f()
// float maxval_g32f()
// IL
float maxval_g32f()
{
    IL_0000: ldc.r4 0
    IL_0005: call System.Single Z0.gmath::maxval<System.Single>(System.Single)
    IL_000A: ret
}

// System.Double Z0.gmathops::maxval_n64f()
// double maxval_n64f()
// IL
double maxval_n64f()
{
    IL_0000: ldc.r8 1.7976931348623157E+308
    IL_0009: ret
}

// System.Double Z0.gmathops::maxval_g64f()
// double maxval_g64f()
// IL
double maxval_g64f()
{
    IL_0000: ldc.r8 0
    IL_0009: call System.Double Z0.gmath::maxval<System.Double>(System.Double)
    IL_000E: ret
}

// System.SByte Z0.gmathops::dec_d8i(System.SByte)
// sbyte dec_d8i(sbyte x)
// IL
sbyte dec_d8i(sbyte x)
{
    IL_0000: ldarg.0
    IL_0001: call System.SByte Z0.math::dec(System.SByte)
    IL_0006: ret
}

// System.SByte Z0.gmathops::dec_g8i(System.SByte)
// sbyte dec_g8i(sbyte x)
// IL
sbyte dec_g8i(sbyte x)
{
    IL_0000: ldarg.0
    IL_0001: call System.SByte Z0.gmath::dec<System.SByte>(System.SByte)
    IL_0006: ret
}

// System.Byte Z0.gmathops::dec_d8u(System.Byte)
// byte dec_d8u(byte x)
// IL
byte dec_d8u(byte x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Byte Z0.math::dec(System.Byte)
    IL_0006: ret
}

// System.Byte Z0.gmathops::dec_g8u(System.Byte)
// byte dec_g8u(byte x)
// IL
byte dec_g8u(byte x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Byte Z0.gmath::dec<System.Byte>(System.Byte)
    IL_0006: ret
}

// System.Int16 Z0.gmathops::dec_d16i(System.Int16)
// short dec_d16i(short x)
// IL
short dec_d16i(short x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int16 Z0.math::dec(System.Int16)
    IL_0006: ret
}

// System.Int16 Z0.gmathops::dec_g16i(System.Int16)
// short dec_g16i(short x)
// IL
short dec_g16i(short x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int16 Z0.gmath::dec<System.Int16>(System.Int16)
    IL_0006: ret
}

// System.UInt16 Z0.gmathops::dec_d16u(System.UInt16)
// ushort dec_d16u(ushort x)
// IL
ushort dec_d16u(ushort x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt16 Z0.math::dec(System.UInt16)
    IL_0006: ret
}

// System.UInt16 Z0.gmathops::dec_g16u(System.UInt16)
// ushort dec_g16u(ushort x)
// IL
ushort dec_g16u(ushort x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt16 Z0.gmath::dec<System.UInt16>(System.UInt16)
    IL_0006: ret
}

// System.Int32 Z0.gmathops::dec_d32i(System.Int32)
// int dec_d32i(int x)
// IL
int dec_d32i(int x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int32 Z0.math::dec(System.Int32)
    IL_0006: ret
}

// System.Int32 Z0.gmathops::dec_g32i(System.Int32)
// int dec_g32i(int x)
// IL
int dec_g32i(int x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int32 Z0.gmath::dec<System.Int32>(System.Int32)
    IL_0006: ret
}

// System.UInt32 Z0.gmathops::dec_d32u(System.UInt32)
// uint dec_d32u(uint x)
// IL
uint dec_d32u(uint x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt32 Z0.math::dec(System.UInt32)
    IL_0006: ret
}

// System.UInt32 Z0.gmathops::dec_g32u(System.UInt32)
// uint dec_g32u(uint x)
// IL
uint dec_g32u(uint x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt32 Z0.gmath::dec<System.UInt32>(System.UInt32)
    IL_0006: ret
}

// System.Int64 Z0.gmathops::dec_d64i(System.Int64)
// long dec_d64i(long x)
// IL
long dec_d64i(long x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int64 Z0.math::dec(System.Int64)
    IL_0006: ret
}

// System.Int64 Z0.gmathops::dec_g64i(System.Int64)
// long dec_g64i(long x)
// IL
long dec_g64i(long x)
{
    IL_0000: ldarg.0
    IL_0001: call System.Int64 Z0.gmath::dec<System.Int64>(System.Int64)
    IL_0006: ret
}

// System.UInt64 Z0.gmathops::dec_d64u(System.UInt64)
// ulong dec_d64u(ulong x)
// IL
ulong dec_d64u(ulong x)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt64 Z0.math::dec(System.UInt64)
    IL_0006: ret
}

