Sequence  | Address         | Length  | Uri                                                                                                           | OpSig                                                                                                         | Data
0         | 7ff7c85f0210h   | 183     | hex://logix/expr.arith.eval?eval#eval_g[8u]()                                                                 | LiteralExpr<byte> eval<byte>(IComparisonExpr<byte> expr)                                                      | 57 56 53 48 83 ec 20 48 8b f1 48 8b ce 49 bb b8 09 61 c7 f7 7f 00 00 48 b8 b8 09 61 c7 f7 7f 00 00 39 09 ff 10 8b f8 48 8b ce 49 bb c0 09 61 c7 f7 7f 00 00 48 b8 c0 09 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 46 fc ff ff 0f b6 58 08 48 8b ce 49 bb c8 09 61 c7 f7 7f 00 00 48 b8 c8 09 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 1f fc ff ff 44 0f b6 40 08 8b cf 8b d3 e8 31 fc ff ff 40 0f b6 f0 48 b9 f8 ec 9a c8 f7 7f 00 00 e8 0e 6a c7 5e 40 88 70 08 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
1         | 7ff7c85f02d0h   | 183     | hex://logix/expr.arith.eval?eval#eval_g[8i]()                                                                 | LiteralExpr<sbyte> eval<sbyte>(IComparisonExpr<sbyte> expr)                                                   | 57 56 53 48 83 ec 20 48 8b f1 48 8b ce 49 bb d0 09 61 c7 f7 7f 00 00 48 b8 d0 09 61 c7 f7 7f 00 00 39 09 ff 10 8b f8 48 8b ce 49 bb d8 09 61 c7 f7 7f 00 00 48 b8 d8 09 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 6e fc ff ff 48 0f be 58 08 48 8b ce 49 bb e0 09 61 c7 f7 7f 00 00 48 b8 e0 09 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 46 fc ff ff 4c 0f be 40 08 8b cf 8b d3 e8 48 fc ff ff 48 0f be f0 48 b9 10 f3 9a c8 f7 7f 00 00 e8 4d 69 c7 5e 40 88 70 08 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
2         | 7ff7c85f0390h   | 183     | hex://logix/expr.arith.eval?eval#eval_g[16u]()                                                                | LiteralExpr<ushort> eval<ushort>(IComparisonExpr<ushort> expr)                                                | 57 56 53 48 83 ec 20 48 8b f1 48 8b ce 49 bb e8 09 61 c7 f7 7f 00 00 48 b8 e8 09 61 c7 f7 7f 00 00 39 09 ff 10 8b f8 48 8b ce 49 bb f0 09 61 c7 f7 7f 00 00 48 b8 f0 09 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 76 fc ff ff 0f b7 58 08 48 8b ce 49 bb f8 09 61 c7 f7 7f 00 00 48 b8 f8 09 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 4f fc ff ff 44 0f b7 40 08 8b cf 8b d3 e8 51 fc ff ff 0f b7 f0 48 b9 68 f8 9a c8 f7 7f 00 00 e8 8f 68 c7 5e 66 89 70 08 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
3         | 7ff7c85f0450h   | 183     | hex://logix/expr.arith.eval?eval#eval_g[16i]()                                                                | LiteralExpr<short> eval<short>(IComparisonExpr<short> expr)                                                   | 57 56 53 48 83 ec 20 48 8b f1 48 8b ce 49 bb 00 0a 61 c7 f7 7f 00 00 48 b8 00 0a 61 c7 f7 7f 00 00 39 09 ff 10 8b f8 48 8b ce 49 bb 08 0a 61 c7 f7 7f 00 00 48 b8 08 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 7e fc ff ff 48 0f bf 58 08 48 8b ce 49 bb 10 0a 61 c7 f7 7f 00 00 48 b8 10 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 56 fc ff ff 4c 0f bf 40 08 8b cf 8b d3 e8 58 fc ff ff 48 0f bf f0 48 b9 c0 fd 9a c8 f7 7f 00 00 e8 cd 67 c7 5e 66 89 70 08 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
4         | 7ff7c85f0510h   | 1208    | hex://logix/expr.arith.eval?eval#eval_g[32u]()                                                                | LiteralExpr<uint> eval<uint>(IComparisonExpr<uint> expr)                                                      | 57 56 53 48 83 ec 20 48 8b f1 48 8b ce 49 bb 18 0a 61 c7 f7 7f 00 00 48 b8 18 0a 61 c7 f7 7f 00 00 39 09 ff 10 8b f8 48 8b ce 49 bb 20 0a 61 c7 f7 7f 00 00 48 b8 20 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 86 fc ff ff 8b 58 08 48 8b ce 49 bb 28 0a 61 c7 f7 7f 00 00 48 b8 28 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 60 fc ff ff 44 8b 40 08 8b cf 8b d3 e8 63 fc ff ff 8b f0 48 b9 38 03 9c c8 f7 7f 00 00 e8 12 67 c7 5e 89 70 08 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 73 50 c7 5e 5e 00 00 d8 07 9c c8 f7 7f 00 00 e8 63 50 c7 5e 5e 00 0a e8 5b 50 c7 5e 5e 01 09 e8 53 50 c7 5e 5e 02 08 e8 4b 50 c7 5e 5e 03 07 e8 43 50 c7 5e 5e 04 06 e8 3b 50 c7 5e 5e 05 05 e8 33 50 c7 5e 5e 06 04 e8 2b 50 c7 5e 5e 07 03 e8 23 50 c7 5e 5e 08 02 e8 1b 50 c7 5e 5e 09 01 e8 13 50 c7 5e 5e 0a 00 38 08 9c c8 f7 7f 00 00 e8 03 50 c7 5e 5e 00 00 b8 09 9c c8 f7 7f 00 00 e8 f3 4f c7 5e 5e 00 03 e8 eb 4f c7 5e 5e 01 02 e8 e3 4f c7 5e 5e 02 01 e8 db 4f c7 5e 5e 03 00 f0 0a 9c c8 f7 7f 00 00 e8 cb 4f c7 5e 5e 00 00 e8 0b 9c c8 f7 7f 00 00 e8 bb 4f c7 5e 5e 00 00 48 0c 9c c8 f7 7f 00 00 e8 ab 4f c7 5e 5e 00 00 30 0d 9c c8 f7 7f 00 00 e8 9b 4f c7 5e 5e 00 0a e8 93 4f c7 5e 5e 01 09 e8 8b 4f c7 5e 5e 02 08 e8 83 4f c7 5e 5e 03 07 e8 7b 4f c7 5e 5e 04 06 e8 73 4f c7 5e 5e 05 05 e8 6b 4f c7 5e 5e 06 04 e8 63 4f c7 5e 5e 07 03 e8 5b 4f c7 5e 5e 08 02 e8 53 4f c7 5e 5e 09 01 e8 4b 4f c7 5e 5e 0a 00 90 0d 9c c8 f7 7f 00 00 e8 3b 4f c7 5e 5e 00 00 10 0f 9c c8 f7 7f 00 00 e8 2b 4f c7 5e 5e 00 03 e8 23 4f c7 5e 5e 01 02 e8 1b 4f c7 5e 5e 02 01 e8 13 4f c7 5e 5e 03 00 48 10 9c c8 f7 7f 00 00 e8 03 4f c7 5e 5e 00 00 40 11 9c c8 f7 7f 00 00 e8 f3 4e c7 5e 5e 00 00 a0 11 9c c8 f7 7f 00 00 e8 e3 4e c7 5e 5e 00 00 88 12 9c c8 f7 7f 00 00 e8 d3 4e c7 5e 5e 00 0a e8 cb 4e c7 5e 5e 01 09 e8 c3 4e c7 5e 5e 02 08 e8 bb 4e c7 5e 5e 03 07 e8 b3 4e c7 5e 5e 04 06 e8 ab 4e c7 5e 5e 05 05 e8 a3 4e c7 5e 5e 06 04 e8 9b 4e c7 5e 5e 07 03 e8 93 4e c7 5e 5e 08 02 e8 8b 4e c7 5e 5e 09 01 e8 83 4e c7 5e 5e 0a 00 e8 12 9c c8 f7 7f 00 00 e8 73 4e c7 5e 5e 00 00 68 14 9c c8 f7 7f 00 00 e8 63 4e c7 5e 5e 00 03 e8 5b 4e c7 5e 5e 01 02 e8 53 4e c7 5e 5e 02 01 e8 4b 4e c7 5e 5e 03 00 a0 15 9c c8 f7 7f 00 00 e8 3b 4e c7 5e 5e 00 00 98 16 9c c8 f7 7f 00 00 e8 2b 4e c7 5e 5e 00 00 f8 16 9c c8 f7 7f 00 00 e8 1b 4e c7 5e 5e 00 0a e8 13 4e c7 5e 5e 01 09 e8 0b 4e c7 5e 5e 02 08 e8 03 4e c7 5e 5e 03 07 e8 fb 4d c7 5e 5e 04 06 e8 f3 4d c7 5e 5e 05 05 e8 eb 4d c7 5e 5e 06 04 e8 e3 4d c7 5e 5e 07 03 e8 db 4d c7 5e 5e 08 02 e8 d3 4d c7 5e 5e 09 01 e8 cb 4d c7 5e 5e 0a 00 e0 17 9c c8 f7 7f 00 00 e8 bb 4d c7 5e 5e 00 00 78 19 9c c8 f7 7f 00 00 e8 ab 4d c7 5e 5e 00 00 f0 1d 9c c8 f7 7f 00 00 e8 9b 4d c7 5e 5e 00 00 d0 1e 9c c8 f7 7f 00 00 e8 8b 4d c7 5e 5e 00 00 d8 21 9c c8 f7 7f 00 00 e8 7b 4d c7 5e 5e 00 00 b8 22 9c c8 f7 7f 00 00 e8 6b 4d c7 5e 5e 00 00 18 23 9c c8 f7 7f 00 00 e8 5b 4d c7 5e 5e 00 00 78 23 9c c8 f7 7f 00 00 e8 4b 4d c7 5e 5e 00 00 d8 23 9c c8 f7 7f 00 00 e8 3b 4d c7 5e 5e 00 00 38 24 9c c8 f7 7f 00 00 e8 2b 4d c7 5e 5e 00 00 98 24 9c c8 f7 7f 00 00 e8 1b 4d c7 5e 5e 00 00 a0 27 9c c8 f7 7f 00 00 e8 0b 4d c7 5e 5e 00 00 80 28 9c c8 f7 7f 00 00 e8 fb 4c c7 5e 5e 00 00 e0 28 9c c8 f7 7f 00 00 e8 eb 4c c7 5e 5e 00 00 40 29 9c c8 f7 7f 00 00 e8 db 4c c7 5e 5e 00 00 48 2c 9c c8 f7 7f 00 00 e8 cb 4c c7 5e 5e 00 00 28 2d 9c c8 f7 7f 00 00 e8 bb 4c c7 5e 5e 00 00 88 2d 9c c8 f7 7f 00 00 e8 ab 4c c7 5e 5e 00 00 e8 2d 9c c8 f7 7f 00 00 e8 9b 4c c7 5e 5e 00 00 f0 30 9c c8 f7 7f 00 00 e8 8b 4c c7 5e 5e 00 00 d0 31 9c c8 f7 7f 00 00 00 00 00 00 00 00 00 00
5         | 7ff7c85f09d0h   | 179     | hex://logix/expr.arith.eval?eval#eval_g[32i]()                                                                | LiteralExpr<int> eval<int>(IComparisonExpr<int> expr)                                                         | 57 56 53 48 83 ec 20 48 8b f1 48 8b ce 49 bb 30 0a 61 c7 f7 7f 00 00 48 b8 30 0a 61 c7 f7 7f 00 00 39 09 ff 10 8b f8 48 8b ce 49 bb 38 0a 61 c7 f7 7f 00 00 48 b8 38 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 56 fc ff ff 8b 58 08 48 8b ce 49 bb 40 0a 61 c7 f7 7f 00 00 48 b8 40 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 30 fc ff ff 44 8b 40 08 8b cf 8b d3 e8 33 fc ff ff 8b f0 48 b9 90 08 9c c8 f7 7f 00 00 e8 52 62 c7 5e 89 70 08 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
6         | 7ff7c85f0a90h   | 183     | hex://logix/expr.arith.eval?eval#eval_g[64u]()                                                                | LiteralExpr<ulong> eval<ulong>(IComparisonExpr<ulong> expr)                                                   | 57 56 53 48 83 ec 20 48 8b f1 48 8b ce 49 bb 48 0a 61 c7 f7 7f 00 00 48 b8 48 0a 61 c7 f7 7f 00 00 39 09 ff 10 8b f8 48 8b ce 49 bb 50 0a 61 c7 f7 7f 00 00 48 b8 50 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 5e fc ff ff 48 8b 58 08 48 8b ce 49 bb 58 0a 61 c7 f7 7f 00 00 48 b8 58 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 37 fc ff ff 4c 8b 40 08 8b cf 48 8b d3 e8 39 fc ff ff 48 8b f0 48 b9 e8 0d 9c c8 f7 7f 00 00 e8 8f 61 c7 5e 48 89 70 08 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
7         | 7ff7c85f0b50h   | 183     | hex://logix/expr.arith.eval?eval#eval_g[64i]()                                                                | LiteralExpr<long> eval<long>(IComparisonExpr<long> expr)                                                      | 57 56 53 48 83 ec 20 48 8b f1 48 8b ce 49 bb 60 0a 61 c7 f7 7f 00 00 48 b8 60 0a 61 c7 f7 7f 00 00 39 09 ff 10 8b f8 48 8b ce 49 bb 68 0a 61 c7 f7 7f 00 00 48 b8 68 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 66 fc ff ff 48 8b 58 08 48 8b ce 49 bb 70 0a 61 c7 f7 7f 00 00 48 b8 70 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 3f fc ff ff 4c 8b 40 08 8b cf 48 8b d3 e8 41 fc ff ff 48 8b f0 48 b9 40 13 9c c8 f7 7f 00 00 e8 cf 60 c7 5e 48 89 70 08 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
8         | 7ff7c85f0c10h   | 67      | hex://logix/expr.arith.eval?inc#inc_g[8u]()                                                                   | LiteralExpr<byte> inc<byte>(IUnaryArithmeticOp<byte> a)                                                       | 56 48 83 ec 20 e8 a6 fc ff ff 0f b6 48 08 ff c1 40 0f b6 f1 48 b9 f8 ec 9a c8 f7 7f 00 00 e8 7d 60 c7 5e 40 88 70 08 48 83 c4 20 5e c3 00 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
9         | 7ff7c85f0c60h   | 67      | hex://logix/expr.arith.eval?inc#inc_g[8i]()                                                                   | LiteralExpr<sbyte> inc<sbyte>(IUnaryArithmeticOp<sbyte> a)                                                    | 56 48 83 ec 20 e8 c6 fc ff ff 48 0f be 48 08 ff c1 48 0f be f1 48 b9 10 f3 9a c8 f7 7f 00 00 e8 2c 60 c7 5e 40 88 70 08 48 83 c4 20 5e c3 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
10        | 7ff7c85f0cb0h   | 1096    | hex://logix/expr.arith.eval?inc#inc_g[16u]()                                                                  | LiteralExpr<ushort> inc<ushort>(IUnaryArithmeticOp<ushort> a)                                                 | 56 48 83 ec 20 e8 b6 fc ff ff 0f b7 48 08 ff c1 0f b7 f1 48 b9 68 f8 9a c8 f7 7f 00 00 e8 de 5f c7 5e 66 89 70 08 48 83 c4 20 5e c3 19 05 02 00 05 32 01 60 40 00 00 00 02 00 00 00 00 00 00 00 e8 4b 49 c7 5e 5e 00 00 30 32 9c c8 f7 7f 00 00 e8 3b 49 c7 5e 5e 00 00 90 32 9c c8 f7 7f 00 00 e8 2b 49 c7 5e 5e 00 00 98 35 9c c8 f7 7f 00 00 e8 1b 49 c7 5e 5e 00 00 78 36 9c c8 f7 7f 00 00 e8 0b 49 c7 5e 5e 00 00 d8 36 9c c8 f7 7f 00 00 e8 fb 48 c7 5e 5e 00 00 38 37 9c c8 f7 7f 00 00 e8 eb 48 c7 5e 5e 00 00 40 3a 9c c8 f7 7f 00 00 e8 db 48 c7 5e 5e 00 00 20 3b 9c c8 f7 7f 00 00 e8 cb 48 c7 5e 5e 00 00 80 3b 9c c8 f7 7f 00 00 e8 bb 48 c7 5e 5e 00 00 e0 3b 9c c8 f7 7f 00 00 e8 ab 48 c7 5e 5e 00 00 e8 3e 9c c8 f7 7f 00 00 e8 9b 48 c7 5e 5e 00 00 c8 3f 9c c8 f7 7f 00 00 e8 8b 48 c7 5e 5e 00 00 28 40 9c c8 f7 7f 00 00 e8 7b 48 c7 5e 5e 00 00 88 40 9c c8 f7 7f 00 00 e8 6b 48 c7 5e 5e 00 00 90 43 9c c8 f7 7f 00 00 e8 5b 48 c7 5e 5e 00 00 70 44 9c c8 f7 7f 00 00 e8 4b 48 c7 5e 5e 00 00 d0 44 9c c8 f7 7f 00 00 e8 3b 48 c7 5e 5e 00 0a e8 33 48 c7 5e 5e 01 09 e8 2b 48 c7 5e 5e 02 08 e8 23 48 c7 5e 5e 03 07 e8 1b 48 c7 5e 5e 04 06 e8 13 48 c7 5e 5e 05 05 e8 0b 48 c7 5e 5e 06 04 e8 03 48 c7 5e 5e 07 03 e8 fb 47 c7 5e 5e 08 02 e8 f3 47 c7 5e 5e 09 01 e8 eb 47 c7 5e 5e 0a 00 30 45 9c c8 f7 7f 00 00 e8 db 47 c7 5e 5e 00 00 c8 46 9c c8 f7 7f 00 00 e8 cb 47 c7 5e 5e 00 00 40 4b 9c c8 f7 7f 00 00 e8 bb 47 c7 5e 5e 00 00 20 4c 9c c8 f7 7f 00 00 e8 ab 47 c7 5e 5e 00 00 80 4c 9c c8 f7 7f 00 00 e8 9b 47 c7 5e 5e 00 00 e0 4c 9c c8 f7 7f 00 00 e8 8b 47 c7 5e 5e 00 00 40 4d 9c c8 f7 7f 00 00 e8 7b 47 c7 5e 5e 00 00 a0 4d 9c c8 f7 7f 00 00 e8 6b 47 c7 5e 5e 00 00 00 4e 9c c8 f7 7f 00 00 e8 5b 47 c7 5e 5e 00 00 60 4e 9c c8 f7 7f 00 00 e8 4b 47 c7 5e 5e 00 00 c0 4e 9c c8 f7 7f 00 00 e8 3b 47 c7 5e 5e 00 00 20 4f 9c c8 f7 7f 00 00 e8 2b 47 c7 5e 5e 00 00 80 4f 9c c8 f7 7f 00 00 e8 1b 47 c7 5e 5e 00 00 e0 4f 9c c8 f7 7f 00 00 e8 0b 47 c7 5e 5e 00 00 40 50 9c c8 f7 7f 00 00 e8 fb 46 c7 5e 5e 00 00 a0 50 9c c8 f7 7f 00 00 e8 eb 46 c7 5e 5e 00 00 00 51 9c c8 f7 7f 00 00 e8 db 46 c7 5e 5e 00 00 60 51 9c c8 f7 7f 00 00 e8 cb 46 c7 5e 5e 00 00 c0 51 9c c8 f7 7f 00 00 e8 bb 46 c7 5e 5e 00 00 20 52 9c c8 f7 7f 00 00 e8 ab 46 c7 5e 5e 00 00 80 52 9c c8 f7 7f 00 00 e8 9b 46 c7 5e 5e 00 00 e0 52 9c c8 f7 7f 00 00 e8 8b 46 c7 5e 5e 00 0a e8 83 46 c7 5e 5e 01 09 e8 7b 46 c7 5e 5e 02 08 e8 73 46 c7 5e 5e 03 07 e8 6b 46 c7 5e 5e 04 06 e8 63 46 c7 5e 5e 05 05 e8 5b 46 c7 5e 5e 06 04 e8 53 46 c7 5e 5e 07 03 e8 4b 46 c7 5e 5e 08 02 e8 43 46 c7 5e 5e 09 01 e8 3b 46 c7 5e 5e 0a 00 40 53 9c c8 f7 7f 00 00 e8 2b 46 c7 5e 5e 00 00 d8 54 9c c8 f7 7f 00 00 e8 1b 46 c7 5e 5e 00 00 50 59 9c c8 f7 7f 00 00 e8 0b 46 c7 5e 5e 00 00 30 5a 9c c8 f7 7f 00 00 e8 fb 45 c7 5e 5e 00 00 90 5a 9c c8 f7 7f 00 00 e8 eb 45 c7 5e 5e 00 00 f0 5a 9c c8 f7 7f 00 00 e8 db 45 c7 5e 5e 00 00 50 5b 9c c8 f7 7f 00 00 e8 cb 45 c7 5e 5e 00 00 b0 5b 9c c8 f7 7f 00 00 e8 bb 45 c7 5e 5e 00 00 10 5c 9c c8 f7 7f 00 00 e8 ab 45 c7 5e 5e 00 00 70 5c 9c c8 f7 7f 00 00 e8 9b 45 c7 5e 5e 00 00 d0 5c 9c c8 f7 7f 00 00 e8 8b 45 c7 5e 5e 00 00 30 5d 9c c8 f7 7f 00 00 e8 7b 45 c7 5e 5e 00 00 90 5d 9c c8 f7 7f 00 00 e8 6b 45 c7 5e 5e 00 00 f0 5d 9c c8 f7 7f 00 00 e8 5b 45 c7 5e 5e 00 00 50 5e 9c c8 f7 7f 00 00 00 00 00 00 00 00 00 00
11        | 7ff7c85f1100h   | 67      | hex://logix/expr.arith.eval?inc#inc_g[16i]()                                                                  | LiteralExpr<short> inc<short>(IUnaryArithmeticOp<short> a)                                                    | 56 48 83 ec 20 e8 a6 f8 ff ff 48 0f bf 48 08 ff c1 48 0f bf f1 48 b9 c0 fd 9a c8 f7 7f 00 00 e8 8c 5b c7 5e 66 89 70 08 48 83 c4 20 5e c3 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
12        | 7ff7c85f1150h   | 323     | hex://logix/expr.arith.eval?inc#inc_g[32u]()                                                                  | LiteralExpr<uint> inc<uint>(IUnaryArithmeticOp<uint> a)                                                       | 56 48 83 ec 20 e8 c6 fb ff ff 8b 70 08 ff c6 48 b9 38 03 9c c8 f7 7f 00 00 e8 42 5b c7 5e 89 70 08 48 83 c4 20 5e c3 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 c8 86 9b c8 f7 7f 00 00 56 48 83 ec 20 e8 c6 fb ff ff 8b 70 08 ff c6 48 b9 90 08 9c c8 f7 7f 00 00 e8 02 5b c7 5e 89 70 08 48 83 c4 20 5e c3 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 30 8a 9b c8 f7 7f 00 00 56 48 83 ec 20 e8 c6 fb ff ff 48 8b 70 08 48 ff c6 48 b9 e8 0d 9c c8 f7 7f 00 00 e8 c0 5a c7 5e 48 89 70 08 48 83 c4 20 5e c3 00 00 19 05 02 00 05 32 01 60 40 00 00 00 98 8d 9b c8 f7 7f 00 00 56 48 83 ec 20 e8 c6 fb ff ff 48 8b 70 08 48 ff c6 48 b9 40 13 9c c8 f7 7f 00 00 e8 80 5a c7 5e 48 89 70 08 48 83 c4 20 5e c3 00 00 19 05 02 00 05 32 01 60 40 00 00 00 80 93 9b c8 f7 7f 00 00 56 48 83 ec 20 e8 66 f6 ff ff 0f b6 48 08 ff c9 40 0f b6 f1 48 b9 f8 ec 9a c8 f7 7f 00 00 e8 3d 5a c7 5e 40 88 70 08 48 83 c4 20 5e c3 00 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
13        | 7ff7c85f1190h   | 259     | hex://logix/expr.arith.eval?inc#inc_g[32i]()                                                                  | LiteralExpr<int> inc<int>(IUnaryArithmeticOp<int> a)                                                          | 56 48 83 ec 20 e8 c6 fb ff ff 8b 70 08 ff c6 48 b9 90 08 9c c8 f7 7f 00 00 e8 02 5b c7 5e 89 70 08 48 83 c4 20 5e c3 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 30 8a 9b c8 f7 7f 00 00 56 48 83 ec 20 e8 c6 fb ff ff 48 8b 70 08 48 ff c6 48 b9 e8 0d 9c c8 f7 7f 00 00 e8 c0 5a c7 5e 48 89 70 08 48 83 c4 20 5e c3 00 00 19 05 02 00 05 32 01 60 40 00 00 00 98 8d 9b c8 f7 7f 00 00 56 48 83 ec 20 e8 c6 fb ff ff 48 8b 70 08 48 ff c6 48 b9 40 13 9c c8 f7 7f 00 00 e8 80 5a c7 5e 48 89 70 08 48 83 c4 20 5e c3 00 00 19 05 02 00 05 32 01 60 40 00 00 00 80 93 9b c8 f7 7f 00 00 56 48 83 ec 20 e8 66 f6 ff ff 0f b6 48 08 ff c9 40 0f b6 f1 48 b9 f8 ec 9a c8 f7 7f 00 00 e8 3d 5a c7 5e 40 88 70 08 48 83 c4 20 5e c3 00 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
14        | 7ff7c85f11d0h   | 195     | hex://logix/expr.arith.eval?inc#inc_g[64u]()                                                                  | LiteralExpr<ulong> inc<ulong>(IUnaryArithmeticOp<ulong> a)                                                    | 56 48 83 ec 20 e8 c6 fb ff ff 48 8b 70 08 48 ff c6 48 b9 e8 0d 9c c8 f7 7f 00 00 e8 c0 5a c7 5e 48 89 70 08 48 83 c4 20 5e c3 00 00 19 05 02 00 05 32 01 60 40 00 00 00 98 8d 9b c8 f7 7f 00 00 56 48 83 ec 20 e8 c6 fb ff ff 48 8b 70 08 48 ff c6 48 b9 40 13 9c c8 f7 7f 00 00 e8 80 5a c7 5e 48 89 70 08 48 83 c4 20 5e c3 00 00 19 05 02 00 05 32 01 60 40 00 00 00 80 93 9b c8 f7 7f 00 00 56 48 83 ec 20 e8 66 f6 ff ff 0f b6 48 08 ff c9 40 0f b6 f1 48 b9 f8 ec 9a c8 f7 7f 00 00 e8 3d 5a c7 5e 40 88 70 08 48 83 c4 20 5e c3 00 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
15        | 7ff7c85f1210h   | 131     | hex://logix/expr.arith.eval?inc#inc_g[64i]()                                                                  | LiteralExpr<long> inc<long>(IUnaryArithmeticOp<long> a)                                                       | 56 48 83 ec 20 e8 c6 fb ff ff 48 8b 70 08 48 ff c6 48 b9 40 13 9c c8 f7 7f 00 00 e8 80 5a c7 5e 48 89 70 08 48 83 c4 20 5e c3 00 00 19 05 02 00 05 32 01 60 40 00 00 00 80 93 9b c8 f7 7f 00 00 56 48 83 ec 20 e8 66 f6 ff ff 0f b6 48 08 ff c9 40 0f b6 f1 48 b9 f8 ec 9a c8 f7 7f 00 00 e8 3d 5a c7 5e 40 88 70 08 48 83 c4 20 5e c3 00 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
16        | 7ff7c85f1250h   | 67      | hex://logix/expr.arith.eval?dec#dec_g[8u]()                                                                   | LiteralExpr<byte> dec<byte>(IUnaryArithmeticOp<byte> a)                                                       | 56 48 83 ec 20 e8 66 f6 ff ff 0f b6 48 08 ff c9 40 0f b6 f1 48 b9 f8 ec 9a c8 f7 7f 00 00 e8 3d 5a c7 5e 40 88 70 08 48 83 c4 20 5e c3 00 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
17        | 7ff7c85f12a0h   | 67      | hex://logix/expr.arith.eval?dec#dec_g[8i]()                                                                   | LiteralExpr<sbyte> dec<sbyte>(IUnaryArithmeticOp<sbyte> a)                                                    | 56 48 83 ec 20 e8 86 f6 ff ff 48 0f be 48 08 ff c9 48 0f be f1 48 b9 10 f3 9a c8 f7 7f 00 00 e8 ec 59 c7 5e 40 88 70 08 48 83 c4 20 5e c3 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
18        | 7ff7c85f12f0h   | 131     | hex://logix/expr.arith.eval?dec#dec_g[16u]()                                                                  | LiteralExpr<ushort> dec<ushort>(IUnaryArithmeticOp<ushort> a)                                                 | 56 48 83 ec 20 e8 76 f6 ff ff 0f b7 48 08 ff c9 0f b7 f1 48 b9 68 f8 9a c8 f7 7f 00 00 e8 9e 59 c7 5e 66 89 70 08 48 83 c4 20 5e c3 19 05 02 00 05 32 01 60 40 00 00 00 00 95 9b c8 f7 7f 00 00 56 48 83 ec 20 e8 76 f6 ff ff 48 0f bf 48 08 ff c9 48 0f bf f1 48 b9 c0 fd 9a c8 f7 7f 00 00 e8 5c 59 c7 5e 66 89 70 08 48 83 c4 20 5e c3 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
19        | 7ff7c85f1330h   | 67      | hex://logix/expr.arith.eval?dec#dec_g[16i]()                                                                  | LiteralExpr<short> dec<short>(IUnaryArithmeticOp<short> a)                                                    | 56 48 83 ec 20 e8 76 f6 ff ff 48 0f bf 48 08 ff c9 48 0f bf f1 48 b9 c0 fd 9a c8 f7 7f 00 00 e8 5c 59 c7 5e 66 89 70 08 48 83 c4 20 5e c3 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
20        | 7ff7c85f1380h   | 323     | hex://logix/expr.arith.eval?dec#dec_g[32u]()                                                                  | LiteralExpr<uint> dec<uint>(IUnaryArithmeticOp<uint> a)                                                       | 56 48 83 ec 20 e8 96 f9 ff ff 8b 70 08 ff ce 48 b9 38 03 9c c8 f7 7f 00 00 e8 12 59 c7 5e 89 70 08 48 83 c4 20 5e c3 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 96 9b c8 f7 7f 00 00 56 48 83 ec 20 e8 96 f9 ff ff 8b 70 08 ff ce 48 b9 90 08 9c c8 f7 7f 00 00 e8 d2 58 c7 5e 89 70 08 48 83 c4 20 5e c3 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 80 96 9b c8 f7 7f 00 00 56 48 83 ec 20 e8 96 f9 ff ff 48 8b 70 08 48 ff ce 48 b9 e8 0d 9c c8 f7 7f 00 00 e8 90 58 c7 5e 48 89 70 08 48 83 c4 20 5e c3 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 97 9b c8 f7 7f 00 00 56 48 83 ec 20 e8 96 f9 ff ff 48 8b 70 08 48 ff ce 48 b9 40 13 9c c8 f7 7f 00 00 e8 50 58 c7 5e 48 89 70 08 48 83 c4 20 5e c3 00 00 19 05 02 00 05 32 01 60 40 00 00 00 e8 9c 9b c8 f7 7f 00 00 56 48 83 ec 20 e8 36 f4 ff ff 0f b6 48 08 f7 d1 ff c1 40 0f b6 f1 48 b9 f8 ec 9a c8 f7 7f 00 00 e8 0b 58 c7 5e 40 88 70 08 48 83 c4 20 5e c3 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
21        | 7ff7c85f13c0h   | 259     | hex://logix/expr.arith.eval?dec#dec_g[32i]()                                                                  | LiteralExpr<int> dec<int>(IUnaryArithmeticOp<int> a)                                                          | 56 48 83 ec 20 e8 96 f9 ff ff 8b 70 08 ff ce 48 b9 90 08 9c c8 f7 7f 00 00 e8 d2 58 c7 5e 89 70 08 48 83 c4 20 5e c3 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 80 96 9b c8 f7 7f 00 00 56 48 83 ec 20 e8 96 f9 ff ff 48 8b 70 08 48 ff ce 48 b9 e8 0d 9c c8 f7 7f 00 00 e8 90 58 c7 5e 48 89 70 08 48 83 c4 20 5e c3 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 97 9b c8 f7 7f 00 00 56 48 83 ec 20 e8 96 f9 ff ff 48 8b 70 08 48 ff ce 48 b9 40 13 9c c8 f7 7f 00 00 e8 50 58 c7 5e 48 89 70 08 48 83 c4 20 5e c3 00 00 19 05 02 00 05 32 01 60 40 00 00 00 e8 9c 9b c8 f7 7f 00 00 56 48 83 ec 20 e8 36 f4 ff ff 0f b6 48 08 f7 d1 ff c1 40 0f b6 f1 48 b9 f8 ec 9a c8 f7 7f 00 00 e8 0b 58 c7 5e 40 88 70 08 48 83 c4 20 5e c3 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
22        | 7ff7c85f1400h   | 195     | hex://logix/expr.arith.eval?dec#dec_g[64u]()                                                                  | LiteralExpr<ulong> dec<ulong>(IUnaryArithmeticOp<ulong> a)                                                    | 56 48 83 ec 20 e8 96 f9 ff ff 48 8b 70 08 48 ff ce 48 b9 e8 0d 9c c8 f7 7f 00 00 e8 90 58 c7 5e 48 89 70 08 48 83 c4 20 5e c3 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 97 9b c8 f7 7f 00 00 56 48 83 ec 20 e8 96 f9 ff ff 48 8b 70 08 48 ff ce 48 b9 40 13 9c c8 f7 7f 00 00 e8 50 58 c7 5e 48 89 70 08 48 83 c4 20 5e c3 00 00 19 05 02 00 05 32 01 60 40 00 00 00 e8 9c 9b c8 f7 7f 00 00 56 48 83 ec 20 e8 36 f4 ff ff 0f b6 48 08 f7 d1 ff c1 40 0f b6 f1 48 b9 f8 ec 9a c8 f7 7f 00 00 e8 0b 58 c7 5e 40 88 70 08 48 83 c4 20 5e c3 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
23        | 7ff7c85f1440h   | 131     | hex://logix/expr.arith.eval?dec#dec_g[64i]()                                                                  | LiteralExpr<long> dec<long>(IUnaryArithmeticOp<long> a)                                                       | 56 48 83 ec 20 e8 96 f9 ff ff 48 8b 70 08 48 ff ce 48 b9 40 13 9c c8 f7 7f 00 00 e8 50 58 c7 5e 48 89 70 08 48 83 c4 20 5e c3 00 00 19 05 02 00 05 32 01 60 40 00 00 00 e8 9c 9b c8 f7 7f 00 00 56 48 83 ec 20 e8 36 f4 ff ff 0f b6 48 08 f7 d1 ff c1 40 0f b6 f1 48 b9 f8 ec 9a c8 f7 7f 00 00 e8 0b 58 c7 5e 40 88 70 08 48 83 c4 20 5e c3 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
24        | 7ff7c85f1480h   | 67      | hex://logix/expr.arith.eval?negate#negate_g[8u]()                                                             | LiteralExpr<byte> negate<byte>(IUnaryArithmeticOp<byte> a)                                                    | 56 48 83 ec 20 e8 36 f4 ff ff 0f b6 48 08 f7 d1 ff c1 40 0f b6 f1 48 b9 f8 ec 9a c8 f7 7f 00 00 e8 0b 58 c7 5e 40 88 70 08 48 83 c4 20 5e c3 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
25        | 7ff7c85f14d0h   | 67      | hex://logix/expr.arith.eval?negate#negate_g[8i]()                                                             | LiteralExpr<sbyte> negate<sbyte>(IUnaryArithmeticOp<sbyte> a)                                                 | 56 48 83 ec 20 e8 56 f4 ff ff 48 0f be 48 08 f7 d9 48 0f be f1 48 b9 10 f3 9a c8 f7 7f 00 00 e8 bc 57 c7 5e 40 88 70 08 48 83 c4 20 5e c3 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
26        | 7ff7c85f1520h   | 67      | hex://logix/expr.arith.eval?negate#negate_g[16u]()                                                            | LiteralExpr<ushort> negate<ushort>(IUnaryArithmeticOp<ushort> a)                                              | 56 48 83 ec 20 e8 46 f4 ff ff 0f b7 48 08 f7 d1 ff c1 0f b7 f1 48 b9 68 f8 9a c8 f7 7f 00 00 e8 6c 57 c7 5e 66 89 70 08 48 83 c4 20 5e c3 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
27        | 7ff7c85f1570h   | 1299    | hex://logix/expr.arith.eval?negate#negate_g[16i]()                                                            | LiteralExpr<short> negate<short>(IUnaryArithmeticOp<short> a)                                                 | 56 48 83 ec 20 e8 36 f4 ff ff 48 0f bf 48 08 f7 d9 48 0f bf f1 48 b9 c0 fd 9a c8 f7 7f 00 00 e8 1c 57 c7 5e 66 89 70 08 48 83 c4 20 5e c3 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 83 40 c7 5e 5e 00 00 b0 5e 9c c8 f7 7f 00 00 e8 73 40 c7 5e 5e 00 00 10 5f 9c c8 f7 7f 00 00 e8 63 40 c7 5e 5e 00 00 70 5f 9c c8 f7 7f 00 00 e8 53 40 c7 5e 5e 00 00 d0 5f 9c c8 f7 7f 00 00 e8 43 40 c7 5e 5e 00 00 30 60 9c c8 f7 7f 00 00 e8 33 40 c7 5e 5e 00 00 90 60 9c c8 f7 7f 00 00 e8 23 40 c7 5e 5e 00 00 f0 60 9c c8 f7 7f 00 00 e8 13 40 c7 5e 5e 00 0a e8 0b 40 c7 5e 5e 01 09 e8 03 40 c7 5e 5e 02 08 e8 fb 3f c7 5e 5e 03 07 e8 f3 3f c7 5e 5e 04 06 e8 eb 3f c7 5e 5e 05 05 e8 e3 3f c7 5e 5e 06 04 e8 db 3f c7 5e 5e 07 03 e8 d3 3f c7 5e 5e 08 02 e8 cb 3f c7 5e 5e 09 01 e8 c3 3f c7 5e 5e 0a 00 50 61 9c c8 f7 7f 00 00 e8 b3 3f c7 5e 5e 00 00 e8 62 9c c8 f7 7f 00 00 e8 a3 3f c7 5e 5e 00 01 e8 9b 3f c7 5e 5e 01 00 20 64 9c c8 f7 7f 00 00 e8 8b 3f c7 5e 5e 00 00 a8 67 9c c8 f7 7f 00 00 e8 7b 3f c7 5e 5e 00 00 88 68 9c c8 f7 7f 00 00 e8 6b 3f c7 5e 5e 00 01 e8 63 3f c7 5e 5e 01 00 d8 68 9c c8 f7 7f 00 00 e8 53 3f c7 5e 5e 00 00 a8 6a 9c c8 f7 7f 00 00 e8 43 3f c7 5e 5e 00 00 88 6b 9c c8 f7 7f 00 00 e8 33 3f c7 5e 5e 00 00 e8 6b 9c c8 f7 7f 00 00 e8 23 3f c7 5e 5e 00 00 48 6c 9c c8 f7 7f 00 00 e8 13 3f c7 5e 5e 00 00 a8 6c 9c c8 f7 7f 00 00 e8 03 3f c7 5e 5e 00 00 08 6d 9c c8 f7 7f 00 00 e8 f3 3e c7 5e 5e 00 01 e8 eb 3e c7 5e 5e 01 00 58 6d 9c c8 f7 7f 00 00 e8 db 3e c7 5e 5e 00 00 28 6f 9c c8 f7 7f 00 00 e8 cb 3e c7 5e 5e 00 00 08 70 9c c8 f7 7f 00 00 e8 bb 3e c7 5e 5e 00 00 68 70 9c c8 f7 7f 00 00 e8 ab 3e c7 5e 5e 00 01 e8 a3 3e c7 5e 5e 01 00 b8 70 9c c8 f7 7f 00 00 e8 93 3e c7 5e 5e 00 00 88 72 9c c8 f7 7f 00 00 e8 83 3e c7 5e 5e 00 00 68 73 9c c8 f7 7f 00 00 e8 73 3e c7 5e 5e 00 00 c8 73 9c c8 f7 7f 00 00 e8 63 3e c7 5e 5e 00 01 e8 5b 3e c7 5e 5e 01 00 18 74 9c c8 f7 7f 00 00 e8 4b 3e c7 5e 5e 00 00 e8 75 9c c8 f7 7f 00 00 e8 3b 3e c7 5e 5e 00 00 c8 76 9c c8 f7 7f 00 00 e8 2b 3e c7 5e 5e 00 00 28 77 9c c8 f7 7f 00 00 e8 1b 3e c7 5e 5e 00 01 e8 13 3e c7 5e 5e 01 00 78 77 9c c8 f7 7f 00 00 e8 03 3e c7 5e 5e 00 00 48 79 9c c8 f7 7f 00 00 e8 f3 3d c7 5e 5e 00 00 28 7a 9c c8 f7 7f 00 00 e8 e3 3d c7 5e 5e 00 00 88 7a 9c c8 f7 7f 00 00 e8 d3 3d c7 5e 5e 00 01 e8 cb 3d c7 5e 5e 01 00 d8 7a 9c c8 f7 7f 00 00 e8 bb 3d c7 5e 5e 00 00 a8 7c 9c c8 f7 7f 00 00 e8 ab 3d c7 5e 5e 00 00 88 7d 9c c8 f7 7f 00 00 e8 9b 3d c7 5e 5e 00 00 e8 7d 9c c8 f7 7f 00 00 e8 8b 3d c7 5e 5e 00 01 e8 83 3d c7 5e 5e 01 00 38 7e 9c c8 f7 7f 00 00 e8 73 3d c7 5e 5e 00 00 08 80 9c c8 f7 7f 00 00 e8 63 3d c7 5e 5e 00 00 e8 80 9c c8 f7 7f 00 00 e8 53 3d c7 5e 5e 00 00 48 81 9c c8 f7 7f 00 00 e8 43 3d c7 5e 5e 00 01 e8 3b 3d c7 5e 5e 01 00 98 81 9c c8 f7 7f 00 00 e8 2b 3d c7 5e 5e 00 00 68 83 9c c8 f7 7f 00 00 e8 1b 3d c7 5e 5e 00 00 48 84 9c c8 f7 7f 00 00 e8 0b 3d c7 5e 5e 00 0a e8 03 3d c7 5e 5e 01 09 e8 fb 3c c7 5e 5e 02 08 e8 f3 3c c7 5e 5e 03 07 e8 eb 3c c7 5e 5e 04 06 e8 e3 3c c7 5e 5e 05 05 e8 db 3c c7 5e 5e 06 04 e8 d3 3c c7 5e 5e 07 03 e8 cb 3c c7 5e 5e 08 02 e8 c3 3c c7 5e 5e 09 01 e8 bb 3c c7 5e 5e 0a 00 a8 84 9c c8 f7 7f 00 00 e8 ab 3c c7 5e 5e 00 00 40 86 9c c8 f7 7f 00 00 e8 9b 3c c7 5e 5e 00 01 e8 93 3c c7 5e 5e 01 00 78 87 9c c8 f7 7f 00 00 e8 9e 9b c8 f7 7f 00 00 56 48 83 ec 20 e8 56 f3 ff ff 8b 48 08 8b f1 f7 d6 ff c6 48 b9 38 03 9c c8 f7 7f 00 00 e8 ce 52 c7 5e 89 70 08 48 83 c4 20 5e c3 00 19 05 02 00 05 32 01 60 40 00 00 00 68 9f 9b c8 f7 7f 00 00 56 48 83 ec 20 e8 56 f3 ff ff 8b 48 08 8b f1 f7 de 48 b9 90 08 9c c8 f7 7f 00 00 e8 90 52 c7 5e 89 70 08 48 83 c4 20 5e c3 00 00 00 19 05 02 00 05 32 01 60 40 00 00 00 e8 9f 9b c8 f7 7f 00 00 56 48 83 ec 20 e8 56 f3 ff ff 48 8b 48 08 48 8b f1 48 f7 d6 48 ff c6 48 b9 e8 0d 9c c8 f7 7f 00 00 e8 4a 52 c7 5e 48 89 70 08 48 83 c4 20 5e c3 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
28        | 7ff7c85f19c0h   | 195     | hex://logix/expr.arith.eval?negate#negate_g[32u]()                                                            | LiteralExpr<uint> negate<uint>(IUnaryArithmeticOp<uint> a)                                                    | 56 48 83 ec 20 e8 56 f3 ff ff 8b 48 08 8b f1 f7 d6 ff c6 48 b9 38 03 9c c8 f7 7f 00 00 e8 ce 52 c7 5e 89 70 08 48 83 c4 20 5e c3 00 19 05 02 00 05 32 01 60 40 00 00 00 68 9f 9b c8 f7 7f 00 00 56 48 83 ec 20 e8 56 f3 ff ff 8b 48 08 8b f1 f7 de 48 b9 90 08 9c c8 f7 7f 00 00 e8 90 52 c7 5e 89 70 08 48 83 c4 20 5e c3 00 00 00 19 05 02 00 05 32 01 60 40 00 00 00 e8 9f 9b c8 f7 7f 00 00 56 48 83 ec 20 e8 56 f3 ff ff 48 8b 48 08 48 8b f1 48 f7 d6 48 ff c6 48 b9 e8 0d 9c c8 f7 7f 00 00 e8 4a 52 c7 5e 48 89 70 08 48 83 c4 20 5e c3 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
29        | 7ff7c85f1a00h   | 131     | hex://logix/expr.arith.eval?negate#negate_g[32i]()                                                            | LiteralExpr<int> negate<int>(IUnaryArithmeticOp<int> a)                                                       | 56 48 83 ec 20 e8 56 f3 ff ff 8b 48 08 8b f1 f7 de 48 b9 90 08 9c c8 f7 7f 00 00 e8 90 52 c7 5e 89 70 08 48 83 c4 20 5e c3 00 00 00 19 05 02 00 05 32 01 60 40 00 00 00 e8 9f 9b c8 f7 7f 00 00 56 48 83 ec 20 e8 56 f3 ff ff 48 8b 48 08 48 8b f1 48 f7 d6 48 ff c6 48 b9 e8 0d 9c c8 f7 7f 00 00 e8 4a 52 c7 5e 48 89 70 08 48 83 c4 20 5e c3 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
30        | 7ff7c85f1a40h   | 67      | hex://logix/expr.arith.eval?negate#negate_g[64u]()                                                            | LiteralExpr<ulong> negate<ulong>(IUnaryArithmeticOp<ulong> a)                                                 | 56 48 83 ec 20 e8 56 f3 ff ff 48 8b 48 08 48 8b f1 48 f7 d6 48 ff c6 48 b9 e8 0d 9c c8 f7 7f 00 00 e8 4a 52 c7 5e 48 89 70 08 48 83 c4 20 5e c3 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
31        | 7ff7c85f1a90h   | 67      | hex://logix/expr.arith.eval?negate#negate_g[64i]()                                                            | LiteralExpr<long> negate<long>(IUnaryArithmeticOp<long> a)                                                    | 56 48 83 ec 20 e8 46 f3 ff ff 48 8b 48 08 48 8b f1 48 f7 de 48 b9 40 13 9c c8 f7 7f 00 00 e8 fd 51 c7 5e 48 89 70 08 48 83 c4 20 5e c3 00 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
32        | 7ff7c85f1ae0h   | 147     | hex://logix/expr.arith.eval?add#add_g[8u]()                                                                   | LiteralExpr<byte> add<byte>(IBinaryArithmeticOp<byte> expr)                                                   | 57 56 48 83 ec 28 48 8b f1 48 8b ce 49 bb 78 0a 61 c7 f7 7f 00 00 48 b8 78 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 94 e3 ff ff 40 0f b6 78 08 48 8b ce 49 bb 80 0a 61 c7 f7 7f 00 00 48 b8 80 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 6c e3 ff ff 0f b6 48 08 40 0f b6 c7 03 c8 40 0f b6 f1 48 b9 f8 ec 9a c8 f7 7f 00 00 e8 5f 51 c7 5e 40 88 70 08 48 83 c4 28 5e 5f c3 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 00 00 00
33        | 7ff7c85f1b80h   | 151     | hex://logix/expr.arith.eval?add#add_g[8i]()                                                                   | LiteralExpr<sbyte> add<sbyte>(IBinaryArithmeticOp<sbyte> expr)                                                | 57 56 48 83 ec 28 48 8b f1 48 8b ce 49 bb 88 0a 61 c7 f7 7f 00 00 48 b8 88 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 dc e3 ff ff 48 0f be 78 08 48 8b ce 49 bb 90 0a 61 c7 f7 7f 00 00 48 b8 90 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 b4 e3 ff ff 48 0f be 48 08 48 0f be c7 03 c8 48 0f be f1 48 b9 10 f3 9a c8 f7 7f 00 00 e8 be 50 c7 5e 40 88 70 08 48 83 c4 28 5e 5f c3 00 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 00 00 00
34        | 7ff7c85f1c20h   | 147     | hex://logix/expr.arith.eval?add#add_g[16u]()                                                                  | LiteralExpr<ushort> add<ushort>(IBinaryArithmeticOp<ushort> expr)                                             | 57 56 48 83 ec 28 48 8b f1 48 8b ce 49 bb 98 0a 61 c7 f7 7f 00 00 48 b8 98 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 04 e4 ff ff 0f b7 78 08 48 8b ce 49 bb a0 0a 61 c7 f7 7f 00 00 48 b8 a0 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 dd e3 ff ff 0f b7 48 08 0f b7 c7 03 c8 0f b7 f1 48 b9 68 f8 9a c8 f7 7f 00 00 e8 22 50 c7 5e 66 89 70 08 48 83 c4 28 5e 5f c3 00 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 00 00 00
35        | 7ff7c85f1cc0h   | 151     | hex://logix/expr.arith.eval?add#add_g[16i]()                                                                  | LiteralExpr<short> add<short>(IBinaryArithmeticOp<short> expr)                                                | 57 56 48 83 ec 28 48 8b f1 48 8b ce 49 bb a8 0a 61 c7 f7 7f 00 00 48 b8 a8 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 2c e4 ff ff 48 0f bf 78 08 48 8b ce 49 bb b0 0a 61 c7 f7 7f 00 00 48 b8 b0 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 04 e4 ff ff 48 0f bf 48 08 48 0f bf c7 03 c8 48 0f bf f1 48 b9 c0 fd 9a c8 f7 7f 00 00 e8 7e 4f c7 5e 66 89 70 08 48 83 c4 28 5e 5f c3 00 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 00 00 00
36        | 7ff7c85f1d60h   | 135     | hex://logix/expr.arith.eval?add#add_g[32u]()                                                                  | LiteralExpr<uint> add<uint>(IBinaryArithmeticOp<uint> expr)                                                   | 57 56 48 83 ec 28 48 8b f1 48 8b ce 49 bb b8 0a 61 c7 f7 7f 00 00 48 b8 b8 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 54 e4 ff ff 8b 78 08 48 8b ce 49 bb c0 0a 61 c7 f7 7f 00 00 48 b8 c0 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 2e e4 ff ff 8b 70 08 03 f7 48 b9 38 03 9c c8 f7 7f 00 00 e8 ea 4e c7 5e 89 70 08 48 83 c4 28 5e 5f c3 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 00 00 00
37        | 7ff7c85f1df0h   | 135     | hex://logix/expr.arith.eval?add#add_g[32i]()                                                                  | LiteralExpr<int> add<int>(IBinaryArithmeticOp<int> expr)                                                      | 57 56 48 83 ec 28 48 8b f1 48 8b ce 49 bb c8 0a 61 c7 f7 7f 00 00 48 b8 c8 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 54 e8 ff ff 8b 78 08 48 8b ce 49 bb d0 0a 61 c7 f7 7f 00 00 48 b8 d0 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 2e e8 ff ff 8b 70 08 03 f7 48 b9 90 08 9c c8 f7 7f 00 00 e8 5a 4e c7 5e 89 70 08 48 83 c4 28 5e 5f c3 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 00 00 00
38        | 7ff7c85f1e80h   | 616     | hex://logix/expr.arith.eval?add#add_g[64u]()                                                                  | LiteralExpr<ulong> add<ulong>(IBinaryArithmeticOp<ulong> expr)                                                | 57 56 48 83 ec 28 48 8b f1 48 8b ce 49 bb d8 0a 61 c7 f7 7f 00 00 48 b8 d8 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 8c e8 ff ff 48 8b 78 08 48 8b ce 49 bb e0 0a 61 c7 f7 7f 00 00 48 b8 e0 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 65 e8 ff ff 48 8b 70 08 48 03 f7 48 b9 e8 0d 9c c8 f7 7f 00 00 e8 c7 4d c7 5e 48 89 70 08 48 83 c4 28 5e 5f c3 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 78 bd 9b c8 f7 7f 00 00 57 56 48 83 ec 28 48 8b f1 48 8b ce 49 bb e8 0a 61 c7 f7 7f 00 00 48 b8 e8 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 c4 e8 ff ff 48 8b 78 08 48 8b ce 49 bb f0 0a 61 c7 f7 7f 00 00 48 b8 f0 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 9d e8 ff ff 48 8b 70 08 48 03 f7 48 b9 40 13 9c c8 f7 7f 00 00 e8 37 4d c7 5e 48 89 70 08 48 83 c4 28 5e 5f c3 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 9b 36 c7 5e 5e 00 00 00 8b 9c c8 f7 7f 00 00 e8 8b 36 c7 5e 5e 00 00 e0 8b 9c c8 f7 7f 00 00 e8 7b 36 c7 5e 5e 00 00 40 8c 9c c8 f7 7f 00 00 e8 6b 36 c7 5e 5e 00 00 a0 8c 9c c8 f7 7f 00 00 e8 5b 36 c7 5e 5e 00 00 00 8d 9c c8 f7 7f 00 00 e8 4b 36 c7 5e 5e 00 00 60 8d 9c c8 f7 7f 00 00 e8 3b 36 c7 5e 5e 00 00 c0 8d 9c c8 f7 7f 00 00 e8 2b 36 c7 5e 5e 00 00 20 8e 9c c8 f7 7f 00 00 e8 1b 36 c7 5e 5e 00 00 80 8e 9c c8 f7 7f 00 00 e8 0b 36 c7 5e 5e 00 00 e0 8e 9c c8 f7 7f 00 00 e8 fb 35 c7 5e 5e 00 00 40 8f 9c c8 f7 7f 00 00 e8 eb 35 c7 5e 5e 00 00 a0 8f 9c c8 f7 7f 00 00 e8 db 35 c7 5e 5e 00 00 00 90 9c c8 f7 7f 00 00 e8 cb 35 c7 5e 5e 00 00 60 90 9c c8 f7 7f 00 00 e8 bb 35 c7 5e 5e 00 00 c0 90 9c c8 f7 7f 00 00 e8 ab 35 c7 5e 5e 00 00 20 91 9c c8 f7 7f 00 00 e8 9b 35 c7 5e 5e 00 00 80 91 9c c8 f7 7f 00 00 e8 8b 35 c7 5e 5e 00 00 e0 91 9c c8 f7 7f 00 00 e8 7b 35 c7 5e 5e 00 00 40 92 9c c8 f7 7f 00 00 e8 6b 35 c7 5e 5e 00 00 a0 92 9c c8 f7 7f 00 00 00 00 00 00 00 00 00 00
39        | 7ff7c85f1f10h   | 472     | hex://logix/expr.arith.eval?add#add_g[64i]()                                                                  | LiteralExpr<long> add<long>(IBinaryArithmeticOp<long> expr)                                                   | 57 56 48 83 ec 28 48 8b f1 48 8b ce 49 bb e8 0a 61 c7 f7 7f 00 00 48 b8 e8 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 c4 e8 ff ff 48 8b 78 08 48 8b ce 49 bb f0 0a 61 c7 f7 7f 00 00 48 b8 f0 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 9d e8 ff ff 48 8b 70 08 48 03 f7 48 b9 40 13 9c c8 f7 7f 00 00 e8 37 4d c7 5e 48 89 70 08 48 83 c4 28 5e 5f c3 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 9b 36 c7 5e 5e 00 00 00 8b 9c c8 f7 7f 00 00 e8 8b 36 c7 5e 5e 00 00 e0 8b 9c c8 f7 7f 00 00 e8 7b 36 c7 5e 5e 00 00 40 8c 9c c8 f7 7f 00 00 e8 6b 36 c7 5e 5e 00 00 a0 8c 9c c8 f7 7f 00 00 e8 5b 36 c7 5e 5e 00 00 00 8d 9c c8 f7 7f 00 00 e8 4b 36 c7 5e 5e 00 00 60 8d 9c c8 f7 7f 00 00 e8 3b 36 c7 5e 5e 00 00 c0 8d 9c c8 f7 7f 00 00 e8 2b 36 c7 5e 5e 00 00 20 8e 9c c8 f7 7f 00 00 e8 1b 36 c7 5e 5e 00 00 80 8e 9c c8 f7 7f 00 00 e8 0b 36 c7 5e 5e 00 00 e0 8e 9c c8 f7 7f 00 00 e8 fb 35 c7 5e 5e 00 00 40 8f 9c c8 f7 7f 00 00 e8 eb 35 c7 5e 5e 00 00 a0 8f 9c c8 f7 7f 00 00 e8 db 35 c7 5e 5e 00 00 00 90 9c c8 f7 7f 00 00 e8 cb 35 c7 5e 5e 00 00 60 90 9c c8 f7 7f 00 00 e8 bb 35 c7 5e 5e 00 00 c0 90 9c c8 f7 7f 00 00 e8 ab 35 c7 5e 5e 00 00 20 91 9c c8 f7 7f 00 00 e8 9b 35 c7 5e 5e 00 00 80 91 9c c8 f7 7f 00 00 e8 8b 35 c7 5e 5e 00 00 e0 91 9c c8 f7 7f 00 00 e8 7b 35 c7 5e 5e 00 00 40 92 9c c8 f7 7f 00 00 e8 6b 35 c7 5e 5e 00 00 a0 92 9c c8 f7 7f 00 00 00 00 00 00 00 00 00 00
40        | 7ff7c85f23b0h   | 147     | hex://logix/expr.arith.eval?sub#sub_g[8u]()                                                                   | LiteralExpr<byte> sub<byte>(IBinaryArithmeticOp<byte> expr)                                                   | 57 56 48 83 ec 28 48 8b f1 48 8b ce 49 bb f8 0a 61 c7 f7 7f 00 00 48 b8 f8 0a 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 c4 da ff ff 40 0f b6 78 08 48 8b ce 49 bb 00 0b 61 c7 f7 7f 00 00 48 b8 00 0b 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 9c da ff ff 0f b6 48 08 40 0f b6 c7 2b c1 40 0f b6 f0 48 b9 f8 ec 9a c8 f7 7f 00 00 e8 8f 48 c7 5e 40 88 70 08 48 83 c4 28 5e 5f c3 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 00 00 00
41        | 7ff7c85f2450h   | 151     | hex://logix/expr.arith.eval?sub#sub_g[8i]()                                                                   | LiteralExpr<sbyte> sub<sbyte>(IBinaryArithmeticOp<sbyte> expr)                                                | 57 56 48 83 ec 28 48 8b f1 48 8b ce 49 bb 08 0b 61 c7 f7 7f 00 00 48 b8 08 0b 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 0c db ff ff 48 0f be 78 08 48 8b ce 49 bb 10 0b 61 c7 f7 7f 00 00 48 b8 10 0b 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 e4 da ff ff 48 0f be 48 08 48 0f be c7 2b c1 48 0f be f0 48 b9 10 f3 9a c8 f7 7f 00 00 e8 ee 47 c7 5e 40 88 70 08 48 83 c4 28 5e 5f c3 00 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 00 00 00
42        | 7ff7c85f24f0h   | 147     | hex://logix/expr.arith.eval?sub#sub_g[16u]()                                                                  | LiteralExpr<ushort> sub<ushort>(IBinaryArithmeticOp<ushort> expr)                                             | 57 56 48 83 ec 28 48 8b f1 48 8b ce 49 bb 18 0b 61 c7 f7 7f 00 00 48 b8 18 0b 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 34 db ff ff 0f b7 78 08 48 8b ce 49 bb 20 0b 61 c7 f7 7f 00 00 48 b8 20 0b 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 0d db ff ff 0f b7 48 08 0f b7 c7 2b c1 0f b7 f0 48 b9 68 f8 9a c8 f7 7f 00 00 e8 52 47 c7 5e 66 89 70 08 48 83 c4 28 5e 5f c3 00 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 00 00 00
43        | 7ff7c85f2590h   | 151     | hex://logix/expr.arith.eval?sub#sub_g[16i]()                                                                  | LiteralExpr<short> sub<short>(IBinaryArithmeticOp<short> expr)                                                | 57 56 48 83 ec 28 48 8b f1 48 8b ce 49 bb 28 0b 61 c7 f7 7f 00 00 48 b8 28 0b 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 5c db ff ff 48 0f bf 78 08 48 8b ce 49 bb 30 0b 61 c7 f7 7f 00 00 48 b8 30 0b 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 34 db ff ff 48 0f bf 48 08 48 0f bf c7 2b c1 48 0f bf f0 48 b9 c0 fd 9a c8 f7 7f 00 00 e8 ae 46 c7 5e 66 89 70 08 48 83 c4 28 5e 5f c3 00 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 00 00 00
44        | 7ff7c85f2630h   | 135     | hex://logix/expr.arith.eval?sub#sub_g[32u]()                                                                  | LiteralExpr<uint> sub<uint>(IBinaryArithmeticOp<uint> expr)                                                   | 57 56 48 83 ec 28 48 8b f1 48 8b ce 49 bb 38 0b 61 c7 f7 7f 00 00 48 b8 38 0b 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 84 db ff ff 8b 78 08 48 8b ce 49 bb 40 0b 61 c7 f7 7f 00 00 48 b8 40 0b 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 5e db ff ff 8b 48 08 2b f9 48 b9 38 03 9c c8 f7 7f 00 00 e8 1a 46 c7 5e 89 78 08 48 83 c4 28 5e 5f c3 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 00 00 00
45        | 7ff7c85f26c0h   | 135     | hex://logix/expr.arith.eval?sub#sub_g[32i]()                                                                  | LiteralExpr<int> sub<int>(IBinaryArithmeticOp<int> expr)                                                      | 57 56 48 83 ec 28 48 8b f1 48 8b ce 49 bb 48 0b 61 c7 f7 7f 00 00 48 b8 48 0b 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 84 df ff ff 8b 78 08 48 8b ce 49 bb 50 0b 61 c7 f7 7f 00 00 48 b8 50 0b 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 5e df ff ff 8b 48 08 2b f9 48 b9 90 08 9c c8 f7 7f 00 00 e8 8a 45 c7 5e 89 78 08 48 83 c4 28 5e 5f c3 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 00 00 00
46        | 7ff7c85f2750h   | 283     | hex://logix/expr.arith.eval?sub#sub_g[64u]()                                                                  | LiteralExpr<ulong> sub<ulong>(IBinaryArithmeticOp<ulong> expr)                                                | 57 56 48 83 ec 28 48 8b f1 48 8b ce 49 bb 58 0b 61 c7 f7 7f 00 00 48 b8 58 0b 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 bc df ff ff 48 8b 78 08 48 8b ce 49 bb 60 0b 61 c7 f7 7f 00 00 48 b8 60 0b 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 95 df ff ff 48 8b 48 08 48 2b f9 48 b9 e8 0d 9c c8 f7 7f 00 00 e8 f7 44 c7 5e 48 89 78 08 48 83 c4 28 5e 5f c3 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 e0 c6 9b c8 f7 7f 00 00 57 56 48 83 ec 28 48 8b f1 48 8b ce 49 bb 68 0b 61 c7 f7 7f 00 00 48 b8 68 0b 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 f4 df ff ff 48 8b 78 08 48 8b ce 49 bb 70 0b 61 c7 f7 7f 00 00 48 b8 70 0b 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 cd df ff ff 48 8b 48 08 48 2b f9 48 b9 40 13 9c c8 f7 7f 00 00 e8 67 44 c7 5e 48 89 78 08 48 83 c4 28 5e 5f c3 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 00 00 00
47        | 7ff7c85f27e0h   | 139     | hex://logix/expr.arith.eval?sub#sub_g[64i]()                                                                  | LiteralExpr<long> sub<long>(IBinaryArithmeticOp<long> expr)                                                   | 57 56 48 83 ec 28 48 8b f1 48 8b ce 49 bb 68 0b 61 c7 f7 7f 00 00 48 b8 68 0b 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 f4 df ff ff 48 8b 78 08 48 8b ce 49 bb 70 0b 61 c7 f7 7f 00 00 48 b8 70 0b 61 c7 f7 7f 00 00 39 09 ff 10 48 8b c8 e8 cd df ff ff 48 8b 48 08 48 2b f9 48 b9 40 13 9c c8 f7 7f 00 00 e8 67 44 c7 5e 48 89 78 08 48 83 c4 28 5e 5f c3 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 00 00 00
