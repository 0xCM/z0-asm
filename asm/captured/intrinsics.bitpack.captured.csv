Sequence  | Address         | Length  | Uri                                                                                                           | OpSig                                                                                                         | Data
0         | 7ff7c85aad10h   | 179     | hex://intrinsics/bitpack?pack#pack_g[8u](8u)                                                                  | byte pack<byte>(Span<bit> src, byte t)                                                                        | 48 83 ec 28 c5 f8 77 48 8b 01 8b 51 08 48 83 fa 08 0f 82 79 00 00 00 c5 ff f0 00 c4 e3 7d 19 c1 00 c4 e3 7d 19 c0 01 c7 44 24 24 ff ff 00 00 48 8d 44 24 24 c4 e2 79 58 54 24 24 c5 f1 db ca c5 f9 db c2 c4 e2 71 2b c0 c5 f0 57 c9 c7 44 24 20 ff 00 00 00 48 8d 44 24 20 c4 e2 79 79 54 24 20 c5 f9 db c2 c5 f1 db ca c5 f9 67 c1 b8 07 00 00 00 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 0f b6 c0 c5 f8 77 48 83 c4 28 c3 e8 80 4e de 5e e8 63 9d 19 ff cc cc cc cc cc cc cc cc cc cc cc 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 00 00 00
1         | 7ff7c85aadd0h   | 1207    | hex://intrinsics/bitpack?pack#pack_g[16u](16u)                                                                | ushort pack<ushort>(Span<bit> src, ushort t)                                                                  | 48 83 ec 28 c5 f8 77 48 8b 01 8b 51 08 48 83 fa 10 0f 82 83 00 00 00 48 8b d0 c5 ff f0 02 48 83 c0 20 c5 ff f0 08 c7 44 24 24 ff ff 00 00 48 8d 44 24 24 c4 e2 7d 58 54 24 24 c5 fd db c2 c5 f5 db ca c4 e2 7d 2b c1 c4 e3 fd 00 c0 d8 c4 e3 7d 19 c1 00 c4 e3 7d 19 c0 01 c7 44 24 20 ff 00 00 00 48 8d 44 24 20 c4 e2 79 79 54 24 20 c5 f1 db ca c5 f9 db c2 c5 f1 67 c0 b8 07 00 00 00 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c5 f8 77 48 83 c4 28 c3 e8 b6 4d de 5e e8 99 9c 19 ff cc cc cc cc cc cc cc cc cc cc cc 00 00 19 04 01 00 04 42 00 00 40 00 00 00 18 5f 80 c8 f7 7f 00 00 48 83 ec 38 c5 f8 77 48 8b 01 8b 51 08 48 83 fa 20 0f 82 b1 00 00 00 48 8b d0 c5 ff f0 02 48 8d 50 20 c5 ff f0 0a c7 44 24 34 ff ff 00 00 48 8d 54 24 34 c4 e2 7d 58 54 24 34 c5 fd db c2 c5 f5 db ca c4 e2 7d 2b c1 c4 e3 fd 00 c0 d8 48 8d 50 40 c5 ff f0 0a 48 83 c0 60 c5 ff f0 10 c7 44 24 30 ff ff 00 00 48 8d 44 24 30 c4 e2 7d 58 5c 24 30 c5 f5 db cb c5 ed db d3 c4 e2 75 2b ca c4 e3 fd 00 c9 d8 c7 44 24 2c ff 00 00 00 48 8d 44 24 2c c4 e2 7d 79 54 24 2c c5 fd db c2 c5 f5 db ca c5 fd 67 c1 c4 e3 fd 00 c0 d8 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 48 83 c4 38 c3 e8 c8 4c de 5e e8 ab 9b 19 ff cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc 19 04 01 00 04 62 00 00 40 00 00 00 70 5f 80 c8 f7 7f 00 00 48 83 ec 38 c5 f8 77 48 8b 01 8b 51 08 48 83 fa 40 0f 82 6f 01 00 00 48 8b d0 c5 ff f0 02 48 8d 50 20 c5 ff f0 0a c7 44 24 34 ff ff 00 00 48 8d 54 24 34 c4 e2 7d 58 54 24 34 c5 fd db c2 c5 f5 db ca c4 e2 7d 2b c1 c4 e3 fd 00 c0 d8 48 8d 50 40 c5 ff f0 0a 48 8d 50 60 c5 ff f0 12 c7 44 24 30 ff ff 00 00 48 8d 54 24 30 c4 e2 7d 58 5c 24 30 c5 f5 db cb c5 ed db d3 c4 e2 75 2b ca c4 e3 fd 00 c9 d8 c7 44 24 2c ff 00 00 00 48 8d 54 24 2c c4 e2 7d 79 54 24 2c c5 fd db c2 c5 f5 db ca c5 fd 67 c1 c4 e3 fd 00 c0 d8 ba 07 00 00 00 c5 f9 6e ca c5 fd f3 c1 c5 fd d7 d0 8b d2 48 8d 88 80 00 00 00 c5 ff f0 09 48 8d 88 a0 00 00 00 c5 ff f0 11 c7 44 24 28 ff ff 00 00 48 8d 4c 24 28 c4 e2 7d 58 44 24 28 c5 f5 db c8 c5 ed db c0 c4 e2 75 2b c0 c4 e3 fd 00 c0 d8 48 8d 88 c0 00 00 00 c5 ff f0 09 48 05 e0 00 00 00 c5 ff f0 10 c7 44 24 24 ff ff 00 00 48 8d 44 24 24 c4 e2 7d 58 5c 24 24 c5 f5 db cb c5 ed db d3 c4 e2 75 2b ca c4 e3 fd 00 c9 d8 c7 44 24 20 ff 00 00 00 48 8d 44 24 20 c4 e2 7d 79 54 24 20 c5 fd db c2 c5 f5 db ca c5 fd 67 c1 c4 e3 fd 00 c0 d8 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 48 83 c4 38 c3 e8 1a 4b de 5e e8 fd 99 19 ff cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc 19 04 01 00 04 62 00 00 40 00 00 00 00 00 00 00 20 62 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 8b 04 10 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 88 62 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 8b 04 10 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 f0 62 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 50 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 58 63 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 50 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 c0 63 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 40 64 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 f0 64 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 8b 00 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
2         | 7ff7c85aae90h   | 1015    | hex://intrinsics/bitpack?pack#pack_g[32u](32u)                                                                | uint pack<uint>(Span<bit> src, uint t)                                                                        | 48 83 ec 38 c5 f8 77 48 8b 01 8b 51 08 48 83 fa 20 0f 82 b1 00 00 00 48 8b d0 c5 ff f0 02 48 8d 50 20 c5 ff f0 0a c7 44 24 34 ff ff 00 00 48 8d 54 24 34 c4 e2 7d 58 54 24 34 c5 fd db c2 c5 f5 db ca c4 e2 7d 2b c1 c4 e3 fd 00 c0 d8 48 8d 50 40 c5 ff f0 0a 48 83 c0 60 c5 ff f0 10 c7 44 24 30 ff ff 00 00 48 8d 44 24 30 c4 e2 7d 58 5c 24 30 c5 f5 db cb c5 ed db d3 c4 e2 75 2b ca c4 e3 fd 00 c9 d8 c7 44 24 2c ff 00 00 00 48 8d 44 24 2c c4 e2 7d 79 54 24 2c c5 fd db c2 c5 f5 db ca c5 fd 67 c1 c4 e3 fd 00 c0 d8 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 48 83 c4 38 c3 e8 c8 4c de 5e e8 ab 9b 19 ff cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc 19 04 01 00 04 62 00 00 40 00 00 00 70 5f 80 c8 f7 7f 00 00 48 83 ec 38 c5 f8 77 48 8b 01 8b 51 08 48 83 fa 40 0f 82 6f 01 00 00 48 8b d0 c5 ff f0 02 48 8d 50 20 c5 ff f0 0a c7 44 24 34 ff ff 00 00 48 8d 54 24 34 c4 e2 7d 58 54 24 34 c5 fd db c2 c5 f5 db ca c4 e2 7d 2b c1 c4 e3 fd 00 c0 d8 48 8d 50 40 c5 ff f0 0a 48 8d 50 60 c5 ff f0 12 c7 44 24 30 ff ff 00 00 48 8d 54 24 30 c4 e2 7d 58 5c 24 30 c5 f5 db cb c5 ed db d3 c4 e2 75 2b ca c4 e3 fd 00 c9 d8 c7 44 24 2c ff 00 00 00 48 8d 54 24 2c c4 e2 7d 79 54 24 2c c5 fd db c2 c5 f5 db ca c5 fd 67 c1 c4 e3 fd 00 c0 d8 ba 07 00 00 00 c5 f9 6e ca c5 fd f3 c1 c5 fd d7 d0 8b d2 48 8d 88 80 00 00 00 c5 ff f0 09 48 8d 88 a0 00 00 00 c5 ff f0 11 c7 44 24 28 ff ff 00 00 48 8d 4c 24 28 c4 e2 7d 58 44 24 28 c5 f5 db c8 c5 ed db c0 c4 e2 75 2b c0 c4 e3 fd 00 c0 d8 48 8d 88 c0 00 00 00 c5 ff f0 09 48 05 e0 00 00 00 c5 ff f0 10 c7 44 24 24 ff ff 00 00 48 8d 44 24 24 c4 e2 7d 58 5c 24 24 c5 f5 db cb c5 ed db d3 c4 e2 75 2b ca c4 e3 fd 00 c9 d8 c7 44 24 20 ff 00 00 00 48 8d 44 24 20 c4 e2 7d 79 54 24 20 c5 fd db c2 c5 f5 db ca c5 fd 67 c1 c4 e3 fd 00 c0 d8 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 48 83 c4 38 c3 e8 1a 4b de 5e e8 fd 99 19 ff cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc 19 04 01 00 04 62 00 00 40 00 00 00 00 00 00 00 20 62 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 8b 04 10 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 88 62 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 8b 04 10 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 f0 62 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 50 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 58 63 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 50 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 c0 63 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 40 64 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 f0 64 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 8b 00 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
3         | 7ff7c85aaf80h   | 775     | hex://intrinsics/bitpack?pack#pack_g[64u](64u)                                                                | ulong pack<ulong>(Span<bit> src, ulong t)                                                                     | 48 83 ec 38 c5 f8 77 48 8b 01 8b 51 08 48 83 fa 40 0f 82 6f 01 00 00 48 8b d0 c5 ff f0 02 48 8d 50 20 c5 ff f0 0a c7 44 24 34 ff ff 00 00 48 8d 54 24 34 c4 e2 7d 58 54 24 34 c5 fd db c2 c5 f5 db ca c4 e2 7d 2b c1 c4 e3 fd 00 c0 d8 48 8d 50 40 c5 ff f0 0a 48 8d 50 60 c5 ff f0 12 c7 44 24 30 ff ff 00 00 48 8d 54 24 30 c4 e2 7d 58 5c 24 30 c5 f5 db cb c5 ed db d3 c4 e2 75 2b ca c4 e3 fd 00 c9 d8 c7 44 24 2c ff 00 00 00 48 8d 54 24 2c c4 e2 7d 79 54 24 2c c5 fd db c2 c5 f5 db ca c5 fd 67 c1 c4 e3 fd 00 c0 d8 ba 07 00 00 00 c5 f9 6e ca c5 fd f3 c1 c5 fd d7 d0 8b d2 48 8d 88 80 00 00 00 c5 ff f0 09 48 8d 88 a0 00 00 00 c5 ff f0 11 c7 44 24 28 ff ff 00 00 48 8d 4c 24 28 c4 e2 7d 58 44 24 28 c5 f5 db c8 c5 ed db c0 c4 e2 75 2b c0 c4 e3 fd 00 c0 d8 48 8d 88 c0 00 00 00 c5 ff f0 09 48 05 e0 00 00 00 c5 ff f0 10 c7 44 24 24 ff ff 00 00 48 8d 44 24 24 c4 e2 7d 58 5c 24 24 c5 f5 db cb c5 ed db d3 c4 e2 75 2b ca c4 e3 fd 00 c9 d8 c7 44 24 20 ff 00 00 00 48 8d 44 24 20 c4 e2 7d 79 54 24 20 c5 fd db c2 c5 f5 db ca c5 fd 67 c1 c4 e3 fd 00 c0 d8 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 48 83 c4 38 c3 e8 1a 4b de 5e e8 fd 99 19 ff cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc 19 04 01 00 04 62 00 00 40 00 00 00 00 00 00 00 20 62 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 8b 04 10 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 88 62 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 8b 04 10 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 f0 62 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 50 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 58 63 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 50 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 c0 63 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 40 64 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 f0 64 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 8b 00 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
4         | 7ff7c85ab140h   | 327     | hex://intrinsics/bitpack?pack8#pack8_g[8u](b32x8u~in,32i)                                                     | byte pack8<byte>(in Block32<byte> src, int block)                                                             | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 8b 04 10 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 88 62 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 8b 04 10 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 f0 62 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 50 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 58 63 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 50 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 c0 63 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 40 64 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 f0 64 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 8b 00 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
5         | 7ff7c85ab170h   | 279     | hex://intrinsics/bitpack?pack8#pack8_g[8i](b32x8i~in,32i)                                                     | byte pack8<sbyte>(in Block32<sbyte> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 8b 04 10 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 f0 62 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 50 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 58 63 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 50 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 c0 63 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 40 64 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 f0 64 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 8b 00 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
6         | 7ff7c85ab1a0h   | 231     | hex://intrinsics/bitpack?pack8#pack8_g[16u](b32x16u~in,32i)                                                   | byte pack8<ushort>(in Block32<ushort> src, int block)                                                         | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 50 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 58 63 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 50 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 c0 63 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 40 64 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 f0 64 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 8b 00 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
7         | 7ff7c85ab1d0h   | 183     | hex://intrinsics/bitpack?pack8#pack8_g[16i](b32x16i~in,32i)                                                   | byte pack8<short>(in Block32<short> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 50 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 c0 63 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 40 64 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 f0 64 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 8b 00 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
8         | 7ff7c85ab200h   | 135     | hex://intrinsics/bitpack?pack8#pack8_g[32u](b32x32u~in,32i)                                                   | byte pack8<uint>(in Block32<uint> src, int block)                                                             | 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 40 64 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 f0 64 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 8b 00 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
9         | 7ff7c85ab230h   | 87      | hex://intrinsics/bitpack?pack8#pack8_g[32i](b32x32i~in,32i)                                                   | byte pack8<int>(in Block32<int> src, int block)                                                               | 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 f0 64 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 8b 00 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
10        | 7ff7c85ab260h   | 39      | hex://intrinsics/bitpack?pack8#pack8_g[64u](b32x64u~in,32i)                                                   | byte pack8<ulong>(in Block32<ulong> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 8b 00 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
11        | 7ff7c85ab290h   | 1064    | hex://intrinsics/bitpack?pack8#pack8_g[64i](b32x64i~in,32i)                                                   | byte pack8<long>(in Block32<long> src, int block)                                                             | 0f 1f 44 00 00 48 8b 01 8b 00 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 83 a3 cb 5e 5e 00 1b e8 7b a3 cb 5e 5e 01 1a e8 73 a3 cb 5e 5e 02 19 e8 6b a3 cb 5e 5e 03 18 e8 63 a3 cb 5e 5e 04 17 e8 5b a3 cb 5e 5e 05 16 e8 53 a3 cb 5e 5e 06 15 e8 4b a3 cb 5e 5e 07 14 e8 43 a3 cb 5e 5e 08 13 e8 3b a3 cb 5e 5e 09 12 e8 33 a3 cb 5e 5e 0a 11 e8 2b a3 cb 5e 5e 0b 10 e8 23 a3 cb 5e 5e 0c 0f e8 1b a3 cb 5e 5e 0d 0e e8 13 a3 cb 5e 5e 0e 0d e8 0b a3 cb 5e 5e 0f 0c e8 03 a3 cb 5e 5e 10 0b e8 fb a2 cb 5e 5e 11 0a e8 f3 a2 cb 5e 5e 12 09 e8 eb a2 cb 5e 5e 13 08 e8 e3 a2 cb 5e 5e 14 07 e8 db a2 cb 5e 5e 15 06 e8 d3 a2 cb 5e 5e 16 05 e8 cb a2 cb 5e 5e 17 04 e8 c3 a2 cb 5e 5e 18 03 e8 bb a2 cb 5e 5e 19 02 e8 b3 a2 cb 5e 5e 1a 01 e8 ab a2 cb 5e 5e 1b 00 98 0f 81 c8 f7 7f 00 00 e8 9b a2 cb 5e 5e 00 12 e8 93 a2 cb 5e 5e 01 11 e8 8b a2 cb 5e 5e 02 10 e8 83 a2 cb 5e 5e 03 0f e8 7b a2 cb 5e 5e 04 0e e8 73 a2 cb 5e 5e 05 0d e8 6b a2 cb 5e 5e 06 0c e8 63 a2 cb 5e 5e 07 0b e8 5b a2 cb 5e 5e 08 0a e8 53 a2 cb 5e 5e 09 09 e8 4b a2 cb 5e 5e 0a 08 e8 43 a2 cb 5e 5e 0b 07 e8 3b a2 cb 5e 5e 0c 06 e8 33 a2 cb 5e 5e 0d 05 e8 2b a2 cb 5e 5e 0e 04 e8 23 a2 cb 5e 5e 0f 03 e8 1b a2 cb 5e 5e 10 02 e8 13 a2 cb 5e 5e 14 01 e8 0b a2 cb 5e 5e 15 00 a8 0e 81 c8 f7 7f 00 00 e8 fb a1 cb 5e 5e 00 00 28 16 81 c8 f7 7f 00 00 e8 eb a1 cb 5e 5e 00 00 88 16 81 c8 f7 7f 00 00 e8 db a1 cb 5e 5e 00 00 e8 16 81 c8 f7 7f 00 00 e8 cb a1 cb 5e 5e 00 00 48 17 81 c8 f7 7f 00 00 e8 bb a1 cb 5e 5e 00 01 e8 b3 a1 cb 5e 5e 01 00 a8 19 81 c8 f7 7f 00 00 e8 a3 a1 cb 5e 5e 00 1b e8 9b a1 cb 5e 5e 01 1a e8 93 a1 cb 5e 5e 02 19 e8 8b a1 cb 5e 5e 03 18 e8 83 a1 cb 5e 5e 04 17 e8 7b a1 cb 5e 5e 05 16 e8 73 a1 cb 5e 5e 06 15 e8 6b a1 cb 5e 5e 07 14 e8 63 a1 cb 5e 5e 08 13 e8 5b a1 cb 5e 5e 09 12 e8 53 a1 cb 5e 5e 0a 11 e8 4b a1 cb 5e 5e 0b 10 e8 43 a1 cb 5e 5e 0c 0f e8 3b a1 cb 5e 5e 0d 0e e8 33 a1 cb 5e 5e 0e 0d e8 2b a1 cb 5e 5e 0f 0c e8 23 a1 cb 5e 5e 10 0b e8 1b a1 cb 5e 5e 11 0a e8 13 a1 cb 5e 5e 12 09 e8 0b a1 cb 5e 5e 13 08 e8 03 a1 cb 5e 5e 14 07 e8 fb a0 cb 5e 5e 15 06 e8 f3 a0 cb 5e 5e 16 05 e8 eb a0 cb 5e 5e 17 04 e8 e3 a0 cb 5e 5e 18 03 e8 db a0 cb 5e 5e 19 02 e8 d3 a0 cb 5e 5e 1a 01 e8 cb a0 cb 5e 5e 1b 00 98 18 81 c8 f7 7f 00 00 e8 bb a0 cb 5e 5e 00 12 e8 b3 a0 cb 5e 5e 01 11 e8 ab a0 cb 5e 5e 02 10 e8 a3 a0 cb 5e 5e 03 0f e8 9b a0 cb 5e 5e 04 0e e8 93 a0 cb 5e 5e 05 0d e8 8b a0 cb 5e 5e 06 0c e8 83 a0 cb 5e 5e 07 0b e8 7b a0 cb 5e 5e 08 0a e8 73 a0 cb 5e 5e 09 09 e8 6b a0 cb 5e 5e 0a 08 e8 63 a0 cb 5e 5e 0b 07 e8 5b a0 cb 5e 5e 0c 06 e8 53 a0 cb 5e 5e 0d 05 e8 4b a0 cb 5e 5e 0e 04 e8 43 a0 cb 5e 5e 0f 03 e8 3b a0 cb 5e 5e 10 02 e8 33 a0 cb 5e 5e 14 01 e8 2b a0 cb 5e 5e 15 00 a8 17 81 c8 f7 7f 00 00 e8 1b a0 cb 5e 5e 00 00 e8 1c 81 c8 f7 7f 00 00 e8 0b a0 cb 5e 5e 00 00 48 1d 81 c8 f7 7f 00 00 e8 fb 9f cb 5e 5e 00 00 a8 1d 81 c8 f7 7f 00 00 e8 eb 9f cb 5e 5e 00 00 08 1e 81 c8 f7 7f 00 00 e8 db 9f cb 5e 5e 00 00 68 1e 81 c8 f7 7f 00 00 e8 cb 9f cb 5e 5e 00 00 c8 1e 81 c8 f7 7f 00 00 e8 bb 9f cb 5e 5e 00 00 28 1f 81 c8 f7 7f 00 00 e8 ab 9f cb 5e 5e 00 00 88 1f 81 c8 f7 7f 00 00 e8 9b 9f cb 5e 5e 00 00 e8 1f 81 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
12        | 7ff7c85ab6c0h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[8u](b64x8u~in,32i)                                                     | byte pack8<byte>(in Block64<byte> src, int block)                                                             | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 0f b6 04 10 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
13        | 7ff7c85ab700h   | 119     | hex://intrinsics/bitpack?pack8#pack8_g[8i](b64x8i~in,32i)                                                     | byte pack8<sbyte>(in Block64<sbyte> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 0f be 04 10 48 63 c0 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 48 6a 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 0f b7 04 50 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
14        | 7ff7c85ab740h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[16u](b64x16u~in,32i)                                                   | byte pack8<ushort>(in Block64<ushort> src, int block)                                                         | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 0f b7 04 50 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
15        | 7ff7c85ab780h   | 115     | hex://intrinsics/bitpack?pack8#pack8_g[16i](b64x16i~in,32i)                                                   | byte pack8<short>(in Block64<short> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 0f bf 04 50 48 63 c0 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 18 6b 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 90 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
16        | 7ff7c85ab7c0h   | 51      | hex://intrinsics/bitpack?pack8#pack8_g[32u](b64x32u~in,32i)                                                   | byte pack8<uint>(in Block64<uint> src, int block)                                                             | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 90 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
17        | 7ff7c85ab800h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[32i](b64x32i~in,32i)                                                   | byte pack8<int>(in Block64<int> src, int block)                                                               | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 90 48 63 c0 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
18        | 7ff7c85ab840h   | 51      | hex://intrinsics/bitpack?pack8#pack8_g[64u](b64x64u~in,32i)                                                   | byte pack8<ulong>(in Block64<ulong> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 d0 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
19        | 7ff7c85ab880h   | 1080    | hex://intrinsics/bitpack?pack8#pack8_g[64i](b64x64i~in,32i)                                                   | byte pack8<long>(in Block64<long> src, int block)                                                             | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 d0 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 83 9d cb 5e 5e 00 00 48 20 81 c8 f7 7f 00 00 e8 73 9d cb 5e 5e 00 00 a8 20 81 c8 f7 7f 00 00 e8 63 9d cb 5e 5e 00 00 08 21 81 c8 f7 7f 00 00 e8 53 9d cb 5e 5e 00 00 68 21 81 c8 f7 7f 00 00 e8 43 9d cb 5e 5e 00 00 c8 21 81 c8 f7 7f 00 00 e8 33 9d cb 5e 5e 00 00 28 22 81 c8 f7 7f 00 00 e8 23 9d cb 5e 5e 00 00 88 22 81 c8 f7 7f 00 00 e8 13 9d cb 5e 5e 00 00 e8 22 81 c8 f7 7f 00 00 e8 03 9d cb 5e 5e 00 00 48 23 81 c8 f7 7f 00 00 e8 f3 9c cb 5e 5e 00 00 a8 23 81 c8 f7 7f 00 00 e8 e3 9c cb 5e 5e 00 00 08 24 81 c8 f7 7f 00 00 e8 d3 9c cb 5e 5e 00 00 68 24 81 c8 f7 7f 00 00 e8 c3 9c cb 5e 5e 00 00 c8 24 81 c8 f7 7f 00 00 e8 b3 9c cb 5e 5e 00 00 28 25 81 c8 f7 7f 00 00 e8 a3 9c cb 5e 5e 00 00 88 25 81 c8 f7 7f 00 00 e8 93 9c cb 5e 5e 00 00 e8 25 81 c8 f7 7f 00 00 e8 83 9c cb 5e 5e 00 00 48 26 81 c8 f7 7f 00 00 e8 73 9c cb 5e 5e 00 00 a8 26 81 c8 f7 7f 00 00 e8 63 9c cb 5e 5e 00 00 08 27 81 c8 f7 7f 00 00 e8 53 9c cb 5e 5e 00 00 68 27 81 c8 f7 7f 00 00 e8 43 9c cb 5e 5e 00 00 c8 27 81 c8 f7 7f 00 00 e8 33 9c cb 5e 5e 00 00 28 28 81 c8 f7 7f 00 00 e8 23 9c cb 5e 5e 00 00 88 28 81 c8 f7 7f 00 00 e8 13 9c cb 5e 5e 00 00 e8 28 81 c8 f7 7f 00 00 e8 03 9c cb 5e 5e 00 00 48 29 81 c8 f7 7f 00 00 e8 f3 9b cb 5e 5e 00 00 a8 29 81 c8 f7 7f 00 00 e8 e3 9b cb 5e 5e 00 00 08 2a 81 c8 f7 7f 00 00 e8 d3 9b cb 5e 5e 00 00 68 2a 81 c8 f7 7f 00 00 e8 c3 9b cb 5e 5e 00 00 c8 2a 81 c8 f7 7f 00 00 e8 b3 9b cb 5e 5e 00 00 28 2b 81 c8 f7 7f 00 00 e8 a3 9b cb 5e 5e 00 01 e8 9b 9b cb 5e 5e 01 00 90 2d 81 c8 f7 7f 00 00 e8 8b 9b cb 5e 5e 00 1b e8 83 9b cb 5e 5e 01 1a e8 7b 9b cb 5e 5e 02 19 e8 73 9b cb 5e 5e 03 18 e8 6b 9b cb 5e 5e 04 17 e8 63 9b cb 5e 5e 05 16 e8 5b 9b cb 5e 5e 06 15 e8 53 9b cb 5e 5e 07 14 e8 4b 9b cb 5e 5e 08 13 e8 43 9b cb 5e 5e 09 12 e8 3b 9b cb 5e 5e 0a 11 e8 33 9b cb 5e 5e 0b 10 e8 2b 9b cb 5e 5e 0c 0f e8 23 9b cb 5e 5e 0d 0e e8 1b 9b cb 5e 5e 0e 0d e8 13 9b cb 5e 5e 0f 0c e8 0b 9b cb 5e 5e 10 0b e8 03 9b cb 5e 5e 11 0a e8 fb 9a cb 5e 5e 12 09 e8 f3 9a cb 5e 5e 13 08 e8 eb 9a cb 5e 5e 14 07 e8 e3 9a cb 5e 5e 15 06 e8 db 9a cb 5e 5e 16 05 e8 d3 9a cb 5e 5e 17 04 e8 cb 9a cb 5e 5e 18 03 e8 c3 9a cb 5e 5e 19 02 e8 bb 9a cb 5e 5e 1a 01 e8 b3 9a cb 5e 5e 1b 00 80 2c 81 c8 f7 7f 00 00 e8 a3 9a cb 5e 5e 00 13 e8 9b 9a cb 5e 5e 01 12 e8 93 9a cb 5e 5e 02 11 e8 8b 9a cb 5e 5e 03 10 e8 83 9a cb 5e 5e 04 0f e8 7b 9a cb 5e 5e 05 0e e8 73 9a cb 5e 5e 06 0d e8 6b 9a cb 5e 5e 07 0c e8 63 9a cb 5e 5e 08 0b e8 5b 9a cb 5e 5e 09 0a e8 53 9a cb 5e 5e 0a 09 e8 4b 9a cb 5e 5e 0b 08 e8 43 9a cb 5e 5e 0c 07 e8 3b 9a cb 5e 5e 0d 06 e8 33 9a cb 5e 5e 0e 05 e8 2b 9a cb 5e 5e 0f 04 e8 23 9a cb 5e 5e 10 03 e8 1b 9a cb 5e 5e 11 02 e8 13 9a cb 5e 5e 15 01 e8 0b 9a cb 5e 5e 16 00 88 2b 81 c8 f7 7f 00 00 e8 fb 99 cb 5e 5e 00 00 d8 30 81 c8 f7 7f 00 00 e8 eb 99 cb 5e 5e 00 00 38 31 81 c8 f7 7f 00 00 e8 db 99 cb 5e 5e 00 00 98 31 81 c8 f7 7f 00 00 e8 cb 99 cb 5e 5e 00 00 f8 31 81 c8 f7 7f 00 00 e8 bb 99 cb 5e 5e 00 00 58 32 81 c8 f7 7f 00 00 e8 ab 99 cb 5e 5e 00 00 b8 32 81 c8 f7 7f 00 00 e8 9b 99 cb 5e 5e 00 00 18 33 81 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
20        | 7ff7c85abcc0h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[8u](b128x8u~in,32i)                                                    | ushort pack8<byte>(in Block128<byte> src, int block)                                                          | c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 03 c2 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
21        | 7ff7c85abd00h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[8i](b128x8i~in,32i)                                                    | ushort pack8<sbyte>(in Block128<sbyte> src, int block)                                                        | c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 03 c2 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
22        | 7ff7c85abd40h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[16u](b128x16u~in,32i)                                                  | ushort pack8<ushort>(in Block128<ushort> src, int block)                                                      | c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 50 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
23        | 7ff7c85abd80h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[16i](b128x16i~in,32i)                                                  | ushort pack8<short>(in Block128<short> src, int block)                                                        | c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 50 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
24        | 7ff7c85abdc0h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[32u](b128x32u~in,32i)                                                  | ushort pack8<uint>(in Block128<uint> src, int block)                                                          | c5 f8 77 66 90 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
25        | 7ff7c85abe00h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[32i](b128x32i~in,32i)                                                  | ushort pack8<int>(in Block128<int> src, int block)                                                            | c5 f8 77 66 90 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
26        | 7ff7c85abe40h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[64u](b128x64u~in,32i)                                                  | ushort pack8<ulong>(in Block128<ulong> src, int block)                                                        | c5 f8 77 66 90 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
27        | 7ff7c85abe80h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[64i](b128x64i~in,32i)                                                  | ushort pack8<long>(in Block128<long> src, int block)                                                          | c5 f8 77 66 90 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
28        | 7ff7c85abec0h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[8u](b256x8u~in,32i)                                                    | uint pack8<byte>(in Block256<byte> src, int block)                                                            | c5 f8 77 66 90 48 8b 01 c1 e2 05 48 63 d2 48 03 c2 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
29        | 7ff7c85abf00h   | 1143    | hex://intrinsics/bitpack?pack8#pack8_g[8i](b256x8i~in,32i)                                                    | uint pack8<sbyte>(in Block256<sbyte> src, int block)                                                          | c5 f8 77 66 90 48 8b 01 c1 e2 05 48 63 d2 48 03 c2 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 00 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 03 97 cb 5e 5e 00 00 78 33 81 c8 f7 7f 00 00 e8 f3 96 cb 5e 5e 00 00 d8 33 81 c8 f7 7f 00 00 e8 e3 96 cb 5e 5e 00 00 38 34 81 c8 f7 7f 00 00 e8 d3 96 cb 5e 5e 00 00 98 34 81 c8 f7 7f 00 00 e8 c3 96 cb 5e 5e 00 00 f8 34 81 c8 f7 7f 00 00 e8 b3 96 cb 5e 5e 00 00 58 35 81 c8 f7 7f 00 00 e8 a3 96 cb 5e 5e 00 00 b8 35 81 c8 f7 7f 00 00 e8 93 96 cb 5e 5e 00 00 18 36 81 c8 f7 7f 00 00 e8 83 96 cb 5e 5e 00 00 78 36 81 c8 f7 7f 00 00 e8 73 96 cb 5e 5e 00 00 d8 36 81 c8 f7 7f 00 00 e8 63 96 cb 5e 5e 00 00 38 37 81 c8 f7 7f 00 00 e8 53 96 cb 5e 5e 00 00 98 37 81 c8 f7 7f 00 00 e8 43 96 cb 5e 5e 00 01 e8 3b 96 cb 5e 5e 01 00 08 3a 81 c8 f7 7f 00 00 e8 2b 96 cb 5e 5e 00 1b e8 23 96 cb 5e 5e 01 1a e8 1b 96 cb 5e 5e 02 19 e8 13 96 cb 5e 5e 03 18 e8 0b 96 cb 5e 5e 04 17 e8 03 96 cb 5e 5e 05 16 e8 fb 95 cb 5e 5e 06 15 e8 f3 95 cb 5e 5e 07 14 e8 eb 95 cb 5e 5e 08 13 e8 e3 95 cb 5e 5e 09 12 e8 db 95 cb 5e 5e 0a 11 e8 d3 95 cb 5e 5e 0b 10 e8 cb 95 cb 5e 5e 0c 0f e8 c3 95 cb 5e 5e 0d 0e e8 bb 95 cb 5e 5e 0e 0d e8 b3 95 cb 5e 5e 0f 0c e8 ab 95 cb 5e 5e 10 0b e8 a3 95 cb 5e 5e 11 0a e8 9b 95 cb 5e 5e 12 09 e8 93 95 cb 5e 5e 13 08 e8 8b 95 cb 5e 5e 14 07 e8 83 95 cb 5e 5e 15 06 e8 7b 95 cb 5e 5e 16 05 e8 73 95 cb 5e 5e 17 04 e8 6b 95 cb 5e 5e 18 03 e8 63 95 cb 5e 5e 19 02 e8 5b 95 cb 5e 5e 1a 01 e8 53 95 cb 5e 5e 1b 00 f8 38 81 c8 f7 7f 00 00 e8 43 95 cb 5e 5e 00 14 e8 3b 95 cb 5e 5e 01 13 e8 33 95 cb 5e 5e 02 12 e8 2b 95 cb 5e 5e 03 11 e8 23 95 cb 5e 5e 04 10 e8 1b 95 cb 5e 5e 05 0f e8 13 95 cb 5e 5e 06 0e e8 0b 95 cb 5e 5e 07 0d e8 03 95 cb 5e 5e 08 0c e8 fb 94 cb 5e 5e 09 0b e8 f3 94 cb 5e 5e 0a 0a e8 eb 94 cb 5e 5e 0b 09 e8 e3 94 cb 5e 5e 0c 08 e8 db 94 cb 5e 5e 0d 07 e8 d3 94 cb 5e 5e 0e 06 e8 cb 94 cb 5e 5e 0f 05 e8 c3 94 cb 5e 5e 10 04 e8 bb 94 cb 5e 5e 11 03 e8 b3 94 cb 5e 5e 12 02 e8 ab 94 cb 5e 5e 16 01 e8 a3 94 cb 5e 5e 17 00 f8 37 81 c8 f7 7f 00 00 e8 93 94 cb 5e 5e 00 00 58 3d 81 c8 f7 7f 00 00 e8 83 94 cb 5e 5e 00 00 b8 3d 81 c8 f7 7f 00 00 e8 73 94 cb 5e 5e 00 00 18 3e 81 c8 f7 7f 00 00 e8 63 94 cb 5e 5e 00 00 78 3e 81 c8 f7 7f 00 00 e8 53 94 cb 5e 5e 00 00 d8 3e 81 c8 f7 7f 00 00 e8 43 94 cb 5e 5e 00 01 e8 3b 94 cb 5e 5e 01 00 48 41 81 c8 f7 7f 00 00 e8 2b 94 cb 5e 5e 00 1b e8 23 94 cb 5e 5e 01 1a e8 1b 94 cb 5e 5e 02 19 e8 13 94 cb 5e 5e 03 18 e8 0b 94 cb 5e 5e 04 17 e8 03 94 cb 5e 5e 05 16 e8 fb 93 cb 5e 5e 06 15 e8 f3 93 cb 5e 5e 07 14 e8 eb 93 cb 5e 5e 08 13 e8 e3 93 cb 5e 5e 09 12 e8 db 93 cb 5e 5e 0a 11 e8 d3 93 cb 5e 5e 0b 10 e8 cb 93 cb 5e 5e 0c 0f e8 c3 93 cb 5e 5e 0d 0e e8 bb 93 cb 5e 5e 0e 0d e8 b3 93 cb 5e 5e 0f 0c e8 ab 93 cb 5e 5e 10 0b e8 a3 93 cb 5e 5e 11 0a e8 9b 93 cb 5e 5e 12 09 e8 93 93 cb 5e 5e 13 08 e8 8b 93 cb 5e 5e 14 07 e8 83 93 cb 5e 5e 15 06 e8 7b 93 cb 5e 5e 16 05 e8 73 93 cb 5e 5e 17 04 e8 6b 93 cb 5e 5e 18 03 e8 63 93 cb 5e 5e 19 02 e8 5b 93 cb 5e 5e 1a 01 e8 53 93 cb 5e 5e 1b 00 38 40 81 c8 f7 7f 00 00 e8 43 93 cb 5e 5e 00 00 98 44 81 c8 f7 7f 00 00 e8 33 93 cb 5e 5e 00 00 f8 44 81 c8 f7 7f 00 00 e8 23 93 cb 5e 5e 00 00 58 45 81 c8 f7 7f 00 00 e8 13 93 cb 5e 5e 00 00 b8 45 81 c8 f7 7f 00 00 48 78 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 50 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
30        | 7ff7c85ac340h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[16u](b256x16u~in,32i)                                                  | uint pack8<ushort>(in Block256<ushort> src, int block)                                                        | c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 50 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
31        | 7ff7c85ac380h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[16i](b256x16i~in,32i)                                                  | uint pack8<short>(in Block256<short> src, int block)                                                          | c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 50 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
32        | 7ff7c85ac3c0h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[32u](b256x32u~in,32i)                                                  | uint pack8<uint>(in Block256<uint> src, int block)                                                            | c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
33        | 7ff7c85ac400h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[32i](b256x32i~in,32i)                                                  | uint pack8<int>(in Block256<int> src, int block)                                                              | c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
34        | 7ff7c85ac440h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[64u](b256x64u~in,32i)                                                  | uint pack8<ulong>(in Block256<ulong> src, int block)                                                          | c5 f8 77 66 90 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
35        | 7ff7c85ac480h   | 1907    | hex://intrinsics/bitpack?pack8#pack8_g[64i](b256x64i~in,32i)                                                  | uint pack8<long>(in Block256<long> src, int block)                                                            | c5 f8 77 66 90 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 83 91 cb 5e 5e 00 14 e8 7b 91 cb 5e 5e 01 13 e8 73 91 cb 5e 5e 02 12 e8 6b 91 cb 5e 5e 03 11 e8 63 91 cb 5e 5e 04 10 e8 5b 91 cb 5e 5e 05 0f e8 53 91 cb 5e 5e 06 0e e8 4b 91 cb 5e 5e 07 0d e8 43 91 cb 5e 5e 08 0c e8 3b 91 cb 5e 5e 09 0b e8 33 91 cb 5e 5e 0a 0a e8 2b 91 cb 5e 5e 0b 09 e8 23 91 cb 5e 5e 0c 08 e8 1b 91 cb 5e 5e 0d 07 e8 13 91 cb 5e 5e 0e 06 e8 0b 91 cb 5e 5e 0f 05 e8 03 91 cb 5e 5e 10 04 e8 fb 90 cb 5e 5e 11 03 e8 f3 90 cb 5e 5e 12 02 e8 eb 90 cb 5e 5e 16 01 e8 e3 90 cb 5e 5e 17 00 38 3f 81 c8 f7 7f 00 00 e8 d3 90 cb 5e 5e 00 00 18 46 81 c8 f7 7f 00 00 e8 c3 90 cb 5e 5e 00 00 78 46 81 c8 f7 7f 00 00 e8 b3 90 cb 5e 5e 00 00 d8 46 81 c8 f7 7f 00 00 e8 a3 90 cb 5e 5e 00 00 38 47 81 c8 f7 7f 00 00 e8 93 90 cb 5e 5e 00 00 98 47 81 c8 f7 7f 00 00 e8 83 90 cb 5e 5e 00 00 f8 47 81 c8 f7 7f 00 00 e8 73 90 cb 5e 5e 00 00 58 48 81 c8 f7 7f 00 00 e8 63 90 cb 5e 5e 00 00 b8 48 81 c8 f7 7f 00 00 e8 53 90 cb 5e 5e 00 00 18 49 81 c8 f7 7f 00 00 e8 43 90 cb 5e 5e 00 00 78 49 81 c8 f7 7f 00 00 e8 33 90 cb 5e 5e 00 00 d8 49 81 c8 f7 7f 00 00 e8 23 90 cb 5e 5e 00 00 38 4a 81 c8 f7 7f 00 00 e8 13 90 cb 5e 5e 00 00 98 4a 81 c8 f7 7f 00 00 e8 03 90 cb 5e 5e 00 00 f8 4a 81 c8 f7 7f 00 00 e8 f3 8f cb 5e 5e 00 00 58 4b 81 c8 f7 7f 00 00 e8 e3 8f cb 5e 5e 00 00 b8 4b 81 c8 f7 7f 00 00 e8 d3 8f cb 5e 5e 00 00 18 4c 81 c8 f7 7f 00 00 e8 c3 8f cb 5e 5e 00 00 78 4c 81 c8 f7 7f 00 00 e8 b3 8f cb 5e 5e 00 00 d8 4c 81 c8 f7 7f 00 00 e8 a3 8f cb 5e 5e 00 00 38 4d 81 c8 f7 7f 00 00 e8 93 8f cb 5e 5e 00 01 e8 8b 8f cb 5e 5e 01 00 a0 4e 81 c8 f7 7f 00 00 e8 7b 8f cb 5e 5e 00 18 e8 73 8f cb 5e 5e 01 17 e8 6b 8f cb 5e 5e 02 16 e8 63 8f cb 5e 5e 03 15 e8 5b 8f cb 5e 5e 04 14 e8 53 8f cb 5e 5e 05 13 e8 4b 8f cb 5e 5e 06 12 e8 43 8f cb 5e 5e 07 11 e8 3b 8f cb 5e 5e 08 10 e8 33 8f cb 5e 5e 09 0f e8 2b 8f cb 5e 5e 0a 0e e8 23 8f cb 5e 5e 0b 0d e8 1b 8f cb 5e 5e 0c 0c e8 13 8f cb 5e 5e 0d 0b e8 0b 8f cb 5e 5e 0e 0a e8 03 8f cb 5e 5e 0f 09 e8 fb 8e cb 5e 5e 10 08 e8 f3 8e cb 5e 5e 11 07 e8 eb 8e cb 5e 5e 12 06 e8 e3 8e cb 5e 5e 13 05 e8 db 8e cb 5e 5e 14 04 e8 d3 8e cb 5e 5e 15 03 e8 cb 8e cb 5e 5e 16 02 e8 c3 8e cb 5e 5e 17 01 e8 bb 8e cb 5e 5e 18 00 a8 4d 81 c8 f7 7f 00 00 e8 ab 8e cb 5e 5e 00 00 a0 50 81 c8 f7 7f 00 00 e8 9b 8e cb 5e 5e 00 00 00 51 81 c8 f7 7f 00 00 e8 8b 8e cb 5e 5e 00 00 60 51 81 c8 f7 7f 00 00 e8 7b 8e cb 5e 5e 00 00 c0 51 81 c8 f7 7f 00 00 e8 6b 8e cb 5e 5e 00 00 20 52 81 c8 f7 7f 00 00 e8 5b 8e cb 5e 5e 00 00 80 52 81 c8 f7 7f 00 00 e8 4b 8e cb 5e 5e 00 00 e0 52 81 c8 f7 7f 00 00 e8 3b 8e cb 5e 5e 00 00 40 53 81 c8 f7 7f 00 00 e8 2b 8e cb 5e 5e 00 00 a0 53 81 c8 f7 7f 00 00 e8 1b 8e cb 5e 5e 00 00 00 54 81 c8 f7 7f 00 00 e8 0b 8e cb 5e 5e 00 00 60 54 81 c8 f7 7f 00 00 e8 fb 8d cb 5e 5e 00 00 c0 54 81 c8 f7 7f 00 00 e8 eb 8d cb 5e 5e 00 00 20 55 81 c8 f7 7f 00 00 e8 db 8d cb 5e 5e 00 00 80 55 81 c8 f7 7f 00 00 e8 cb 8d cb 5e 5e 00 00 e0 55 81 c8 f7 7f 00 00 e8 bb 8d cb 5e 5e 00 00 40 56 81 c8 f7 7f 00 00 e8 ab 8d cb 5e 5e 00 00 a0 56 81 c8 f7 7f 00 00 e8 9b 8d cb 5e 5e 00 01 e8 93 8d cb 5e 5e 01 00 08 58 81 c8 f7 7f 00 00 90 7f 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 06 48 63 d2 48 03 c2 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 20 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 28 80 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 06 48 63 d2 48 03 c2 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 20 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 c0 80 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 05 48 63 d2 48 8d 04 50 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 40 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 58 81 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 05 48 63 d2 48 8d 04 50 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 40 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 f0 81 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 88 82 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 20 83 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 b8 83 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 88 85 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
36        | 7ff7c85ac8c0h   | 819     | hex://intrinsics/bitpack?pack8#pack8_g[8u](b512x8u~in,32i)                                                    | ulong pack8<byte>(in Block512<byte> src, int block)                                                           | c5 f8 77 66 90 48 8b 01 c1 e2 06 48 63 d2 48 03 c2 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 20 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 28 80 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 06 48 63 d2 48 03 c2 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 20 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 c0 80 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 05 48 63 d2 48 8d 04 50 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 40 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 58 81 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 05 48 63 d2 48 8d 04 50 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 40 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 f0 81 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 88 82 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 20 83 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 b8 83 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 88 85 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
37        | 7ff7c85ac920h   | 723     | hex://intrinsics/bitpack?pack8#pack8_g[8i](b512x8i~in,32i)                                                    | ulong pack8<sbyte>(in Block512<sbyte> src, int block)                                                         | c5 f8 77 66 90 48 8b 01 c1 e2 06 48 63 d2 48 03 c2 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 20 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 c0 80 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 05 48 63 d2 48 8d 04 50 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 40 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 58 81 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 05 48 63 d2 48 8d 04 50 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 40 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 f0 81 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 88 82 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 20 83 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 b8 83 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 88 85 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
38        | 7ff7c85ac980h   | 627     | hex://intrinsics/bitpack?pack8#pack8_g[16u](b512x16u~in,32i)                                                  | ulong pack8<ushort>(in Block512<ushort> src, int block)                                                       | c5 f8 77 66 90 48 8b 01 c1 e2 05 48 63 d2 48 8d 04 50 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 40 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 58 81 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 05 48 63 d2 48 8d 04 50 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 40 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 f0 81 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 88 82 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 20 83 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 b8 83 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 88 85 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
39        | 7ff7c85ac9e0h   | 531     | hex://intrinsics/bitpack?pack8#pack8_g[16i](b512x16i~in,32i)                                                  | ulong pack8<short>(in Block512<short> src, int block)                                                         | c5 f8 77 66 90 48 8b 01 c1 e2 05 48 63 d2 48 8d 04 50 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 40 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 f0 81 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 88 82 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 20 83 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 b8 83 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 88 85 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
40        | 7ff7c85aca40h   | 435     | hex://intrinsics/bitpack?pack8#pack8_g[32u](b512x32u~in,32i)                                                  | ulong pack8<uint>(in Block512<uint> src, int block)                                                           | c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 88 82 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 20 83 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 b8 83 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 88 85 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
41        | 7ff7c85acaa0h   | 339     | hex://intrinsics/bitpack?pack8#pack8_g[32i](b512x32i~in,32i)                                                  | ulong pack8<int>(in Block512<int> src, int block)                                                             | c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 20 83 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 b8 83 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 88 85 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
42        | 7ff7c85acb00h   | 243     | hex://intrinsics/bitpack?pack8#pack8_g[64u](b512x64u~in,32i)                                                  | ulong pack8<ulong>(in Block512<ulong> src, int block)                                                         | c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 b8 83 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 88 85 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
43        | 7ff7c85acb60h   | 147     | hex://intrinsics/bitpack?pack8#pack8_g[64i](b512x64i~in,32i)                                                  | ulong pack8<long>(in Block512<long> src, int block)                                                           | c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 88 85 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
44        | 7ff7c85acbc0h   | 51      | hex://intrinsics/bitpack?pack8x8#pack8x8_g[8u](uspan8u,32i)                                                   | byte pack8x8<byte>(ReadOnlySpan<byte> src, int offset)                                                        | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
45        | 7ff7c85acc00h   | 51      | hex://intrinsics/bitpack?pack8x8#pack8x8_g[8i](uspan8i,32i)                                                   | byte pack8x8<sbyte>(ReadOnlySpan<sbyte> src, int offset)                                                      | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
46        | 7ff7c85acc40h   | 51      | hex://intrinsics/bitpack?pack8x8#pack8x8_g[16u](uspan16u,32i)                                                 | byte pack8x8<ushort>(ReadOnlySpan<ushort> src, int offset)                                                    | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 50 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
47        | 7ff7c85acc80h   | 51      | hex://intrinsics/bitpack?pack8x8#pack8x8_g[16i](uspan16i,32i)                                                 | byte pack8x8<short>(ReadOnlySpan<short> src, int offset)                                                      | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 50 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
48        | 7ff7c85accc0h   | 51      | hex://intrinsics/bitpack?pack8x8#pack8x8_g[32u](uspan32u,32i)                                                 | byte pack8x8<uint>(ReadOnlySpan<uint> src, int offset)                                                        | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 90 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
49        | 7ff7c85acd00h   | 51      | hex://intrinsics/bitpack?pack8x8#pack8x8_g[32i](uspan32i,32i)                                                 | byte pack8x8<int>(ReadOnlySpan<int> src, int offset)                                                          | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 90 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
50        | 7ff7c85acd40h   | 51      | hex://intrinsics/bitpack?pack8x8#pack8x8_g[64u](uspan64u,32i)                                                 | byte pack8x8<ulong>(ReadOnlySpan<ulong> src, int offset)                                                      | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 d0 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
51        | 7ff7c85acd80h   | 1139    | hex://intrinsics/bitpack?pack8x8#pack8x8_g[64i](uspan64i,32i)                                                 | byte pack8x8<long>(ReadOnlySpan<long> src, int offset)                                                        | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 d0 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 83 88 cb 5e 5e 00 18 e8 7b 88 cb 5e 5e 01 17 e8 73 88 cb 5e 5e 02 16 e8 6b 88 cb 5e 5e 03 15 e8 63 88 cb 5e 5e 04 14 e8 5b 88 cb 5e 5e 05 13 e8 53 88 cb 5e 5e 06 12 e8 4b 88 cb 5e 5e 07 11 e8 43 88 cb 5e 5e 08 10 e8 3b 88 cb 5e 5e 09 0f e8 33 88 cb 5e 5e 0a 0e e8 2b 88 cb 5e 5e 0b 0d e8 23 88 cb 5e 5e 0c 0c e8 1b 88 cb 5e 5e 0d 0b e8 13 88 cb 5e 5e 0e 0a e8 0b 88 cb 5e 5e 0f 09 e8 03 88 cb 5e 5e 10 08 e8 fb 87 cb 5e 5e 11 07 e8 f3 87 cb 5e 5e 12 06 e8 eb 87 cb 5e 5e 13 05 e8 e3 87 cb 5e 5e 14 04 e8 db 87 cb 5e 5e 15 03 e8 d3 87 cb 5e 5e 16 02 e8 cb 87 cb 5e 5e 17 01 e8 c3 87 cb 5e 5e 18 00 10 57 81 c8 f7 7f 00 00 e8 b3 87 cb 5e 5e 00 00 08 5a 81 c8 f7 7f 00 00 e8 a3 87 cb 5e 5e 00 00 68 5a 81 c8 f7 7f 00 00 e8 93 87 cb 5e 5e 00 00 c8 5a 81 c8 f7 7f 00 00 e8 83 87 cb 5e 5e 00 00 28 5b 81 c8 f7 7f 00 00 e8 73 87 cb 5e 5e 00 00 88 5b 81 c8 f7 7f 00 00 e8 63 87 cb 5e 5e 00 00 e8 5b 81 c8 f7 7f 00 00 e8 53 87 cb 5e 5e 00 00 48 5c 81 c8 f7 7f 00 00 e8 43 87 cb 5e 5e 00 00 a8 5c 81 c8 f7 7f 00 00 e8 33 87 cb 5e 5e 00 00 08 5d 81 c8 f7 7f 00 00 e8 23 87 cb 5e 5e 00 00 68 5d 81 c8 f7 7f 00 00 e8 13 87 cb 5e 5e 00 01 e8 0b 87 cb 5e 5e 01 00 d0 5e 81 c8 f7 7f 00 00 e8 fb 86 cb 5e 5e 00 18 e8 f3 86 cb 5e 5e 01 17 e8 eb 86 cb 5e 5e 02 16 e8 e3 86 cb 5e 5e 03 15 e8 db 86 cb 5e 5e 04 14 e8 d3 86 cb 5e 5e 05 13 e8 cb 86 cb 5e 5e 06 12 e8 c3 86 cb 5e 5e 07 11 e8 bb 86 cb 5e 5e 08 10 e8 b3 86 cb 5e 5e 09 0f e8 ab 86 cb 5e 5e 0a 0e e8 a3 86 cb 5e 5e 0b 0d e8 9b 86 cb 5e 5e 0c 0c e8 93 86 cb 5e 5e 0d 0b e8 8b 86 cb 5e 5e 0e 0a e8 83 86 cb 5e 5e 0f 09 e8 7b 86 cb 5e 5e 10 08 e8 73 86 cb 5e 5e 11 07 e8 6b 86 cb 5e 5e 12 06 e8 63 86 cb 5e 5e 13 05 e8 5b 86 cb 5e 5e 14 04 e8 53 86 cb 5e 5e 15 03 e8 4b 86 cb 5e 5e 16 02 e8 43 86 cb 5e 5e 17 01 e8 3b 86 cb 5e 5e 18 00 d8 5d 81 c8 f7 7f 00 00 e8 2b 86 cb 5e 5e 00 00 d0 60 81 c8 f7 7f 00 00 e8 1b 86 cb 5e 5e 00 00 30 61 81 c8 f7 7f 00 00 e8 0b 86 cb 5e 5e 00 00 90 61 81 c8 f7 7f 00 00 e8 fb 85 cb 5e 5e 00 00 f0 61 81 c8 f7 7f 00 00 e8 eb 85 cb 5e 5e 00 00 50 62 81 c8 f7 7f 00 00 e8 db 85 cb 5e 5e 00 00 b0 62 81 c8 f7 7f 00 00 e8 cb 85 cb 5e 5e 00 00 10 63 81 c8 f7 7f 00 00 e8 bb 85 cb 5e 5e 00 00 70 63 81 c8 f7 7f 00 00 e8 ab 85 cb 5e 5e 00 00 d0 63 81 c8 f7 7f 00 00 e8 9b 85 cb 5e 5e 00 00 30 64 81 c8 f7 7f 00 00 e8 8b 85 cb 5e 5e 00 01 e8 83 85 cb 5e 5e 01 00 98 65 81 c8 f7 7f 00 00 e8 73 85 cb 5e 5e 00 18 e8 6b 85 cb 5e 5e 01 17 e8 63 85 cb 5e 5e 02 16 e8 5b 85 cb 5e 5e 03 15 e8 53 85 cb 5e 5e 04 14 e8 4b 85 cb 5e 5e 05 13 e8 43 85 cb 5e 5e 06 12 e8 3b 85 cb 5e 5e 07 11 e8 33 85 cb 5e 5e 08 10 e8 2b 85 cb 5e 5e 09 0f e8 23 85 cb 5e 5e 0a 0e e8 1b 85 cb 5e 5e 0b 0d e8 13 85 cb 5e 5e 0c 0c e8 0b 85 cb 5e 5e 0d 0b e8 03 85 cb 5e 5e 0e 0a e8 fb 84 cb 5e 5e 0f 09 e8 f3 84 cb 5e 5e 10 08 e8 eb 84 cb 5e 5e 11 07 e8 e3 84 cb 5e 5e 12 06 e8 db 84 cb 5e 5e 13 05 e8 d3 84 cb 5e 5e 14 04 e8 cb 84 cb 5e 5e 15 03 e8 c3 84 cb 5e 5e 16 02 e8 bb 84 cb 5e 5e 17 01 e8 b3 84 cb 5e 5e 18 00 a0 64 81 c8 f7 7f 00 00 e8 a3 84 cb 5e 5e 00 00 98 67 81 c8 f7 7f 00 00 e8 93 84 cb 5e 5e 00 00 f8 67 81 c8 f7 7f 00 00 a8 8a 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 48 63 d2 48 03 c2 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
52        | 7ff7c85ad1c0h   | 51      | hex://intrinsics/bitpack?pack16x8#pack16x8_g[8u](uspan8u,32i)                                                 | ushort pack16x8<byte>(ReadOnlySpan<byte> src, int offset)                                                     | c5 f8 77 66 90 48 8b 01 48 63 d2 48 03 c2 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
53        | 7ff7c85ad200h   | 51      | hex://intrinsics/bitpack?pack16x8#pack16x8_g[8i](uspan8i,32i)                                                 | ushort pack16x8<sbyte>(ReadOnlySpan<sbyte> src, int offset)                                                   | c5 f8 77 66 90 48 8b 01 48 63 d2 48 03 c2 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
54        | 7ff7c85ad240h   | 51      | hex://intrinsics/bitpack?pack16x8#pack16x8_g[16u](uspan16u,32i)                                               | ushort pack16x8<ushort>(ReadOnlySpan<ushort> src, int offset)                                                 | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 50 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
55        | 7ff7c85ad280h   | 51      | hex://intrinsics/bitpack?pack16x8#pack16x8_g[16i](uspan16i,32i)                                               | ushort pack16x8<short>(ReadOnlySpan<short> src, int offset)                                                   | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 50 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
56        | 7ff7c85ad2c0h   | 51      | hex://intrinsics/bitpack?pack16x8#pack16x8_g[32u](uspan32u,32i)                                               | ushort pack16x8<uint>(ReadOnlySpan<uint> src, int offset)                                                     | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 90 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
57        | 7ff7c85ad300h   | 51      | hex://intrinsics/bitpack?pack16x8#pack16x8_g[32i](uspan32i,32i)                                               | ushort pack16x8<int>(ReadOnlySpan<int> src, int offset)                                                       | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 90 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
58        | 7ff7c85ad340h   | 51      | hex://intrinsics/bitpack?pack16x8#pack16x8_g[64u](uspan64u,32i)                                               | ushort pack16x8<ulong>(ReadOnlySpan<ulong> src, int offset)                                                   | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 d0 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
59        | 7ff7c85ad380h   | 51      | hex://intrinsics/bitpack?pack16x8#pack16x8_g[64i](uspan64i,32i)                                               | ushort pack16x8<long>(ReadOnlySpan<long> src, int offset)                                                     | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 d0 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
60        | 7ff7c85ad3c0h   | 51      | hex://intrinsics/bitpack?pack32x8#pack32x8_g[8u](uspan8u,32i)                                                 | uint pack32x8<byte>(ReadOnlySpan<byte> src, int offset)                                                       | c5 f8 77 66 90 48 8b 01 48 63 d2 48 03 c2 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
61        | 7ff7c85ad400h   | 51      | hex://intrinsics/bitpack?pack32x8#pack32x8_g[8i](uspan8i,32i)                                                 | uint pack32x8<sbyte>(ReadOnlySpan<sbyte> src, int offset)                                                     | c5 f8 77 66 90 48 8b 01 48 63 d2 48 03 c2 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
62        | 7ff7c85ad440h   | 51      | hex://intrinsics/bitpack?pack32x8#pack32x8_g[16u](uspan16u,32i)                                               | uint pack32x8<ushort>(ReadOnlySpan<ushort> src, int offset)                                                   | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 50 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
63        | 7ff7c85ad480h   | 51      | hex://intrinsics/bitpack?pack32x8#pack32x8_g[16i](uspan16i,32i)                                               | uint pack32x8<short>(ReadOnlySpan<short> src, int offset)                                                     | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 50 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
64        | 7ff7c85ad4c0h   | 51      | hex://intrinsics/bitpack?pack32x8#pack32x8_g[32u](uspan32u,32i)                                               | uint pack32x8<uint>(ReadOnlySpan<uint> src, int offset)                                                       | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 90 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
65        | 7ff7c85ad500h   | 51      | hex://intrinsics/bitpack?pack32x8#pack32x8_g[32i](uspan32i,32i)                                               | uint pack32x8<int>(ReadOnlySpan<int> src, int offset)                                                         | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 90 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
66        | 7ff7c85ad540h   | 51      | hex://intrinsics/bitpack?pack32x8#pack32x8_g[64u](uspan64u,32i)                                               | uint pack32x8<ulong>(ReadOnlySpan<ulong> src, int offset)                                                     | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 d0 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
67        | 7ff7c85ad580h   | 1175    | hex://intrinsics/bitpack?pack32x8#pack32x8_g[64i](uspan64i,32i)                                               | uint pack32x8<long>(ReadOnlySpan<long> src, int offset)                                                       | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 d0 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 83 80 cb 5e 5e 00 00 58 68 81 c8 f7 7f 00 00 e8 73 80 cb 5e 5e 00 00 b8 68 81 c8 f7 7f 00 00 e8 63 80 cb 5e 5e 00 00 18 69 81 c8 f7 7f 00 00 e8 53 80 cb 5e 5e 00 00 78 69 81 c8 f7 7f 00 00 e8 43 80 cb 5e 5e 00 00 d8 69 81 c8 f7 7f 00 00 e8 33 80 cb 5e 5e 00 00 38 6a 81 c8 f7 7f 00 00 e8 23 80 cb 5e 5e 00 00 98 6a 81 c8 f7 7f 00 00 e8 13 80 cb 5e 5e 00 00 f8 6a 81 c8 f7 7f 00 00 e8 03 80 cb 5e 5e 00 0c e8 fb 7f cb 5e 5e 01 0b e8 f3 7f cb 5e 5e 02 0a e8 eb 7f cb 5e 5e 03 09 e8 e3 7f cb 5e 5e 04 08 e8 db 7f cb 5e 5e 05 07 e8 d3 7f cb 5e 5e 06 06 e8 cb 7f cb 5e 5e 07 05 e8 c3 7f cb 5e 5e 08 04 e8 bb 7f cb 5e 5e 09 03 e8 b3 7f cb 5e 5e 0a 02 e8 ab 7f cb 5e 5e 0b 01 e8 a3 7f cb 5e 5e 0c 00 68 6b 81 c8 f7 7f 00 00 e8 93 7f cb 5e 5e 00 00 f0 6c 81 c8 f7 7f 00 00 e8 83 7f cb 5e 5e 00 00 a0 6d 81 c8 f7 7f 00 00 e8 73 7f cb 5e 5e 00 00 00 6e 81 c8 f7 7f 00 00 e8 63 7f cb 5e 5e 00 00 60 6e 81 c8 f7 7f 00 00 e8 53 7f cb 5e 5e 00 00 c0 6e 81 c8 f7 7f 00 00 e8 43 7f cb 5e 5e 00 00 20 6f 81 c8 f7 7f 00 00 e8 33 7f cb 5e 5e 00 00 80 6f 81 c8 f7 7f 00 00 e8 23 7f cb 5e 5e 00 00 e0 6f 81 c8 f7 7f 00 00 e8 13 7f cb 5e 5e 00 00 40 70 81 c8 f7 7f 00 00 e8 03 7f cb 5e 5e 00 00 a0 70 81 c8 f7 7f 00 00 e8 f3 7e cb 5e 5e 00 00 00 71 81 c8 f7 7f 00 00 e8 e3 7e cb 5e 5e 00 00 60 71 81 c8 f7 7f 00 00 e8 d3 7e cb 5e 5e 00 00 c0 71 81 c8 f7 7f 00 00 e8 c3 7e cb 5e 5e 00 00 20 72 81 c8 f7 7f 00 00 e8 b3 7e cb 5e 5e 00 00 80 72 81 c8 f7 7f 00 00 e8 a3 7e cb 5e 5e 00 0c e8 9b 7e cb 5e 5e 01 0b e8 93 7e cb 5e 5e 02 0a e8 8b 7e cb 5e 5e 03 09 e8 83 7e cb 5e 5e 04 08 e8 7b 7e cb 5e 5e 05 07 e8 73 7e cb 5e 5e 06 06 e8 6b 7e cb 5e 5e 07 05 e8 63 7e cb 5e 5e 08 04 e8 5b 7e cb 5e 5e 09 03 e8 53 7e cb 5e 5e 0a 02 e8 4b 7e cb 5e 5e 0b 01 e8 43 7e cb 5e 5e 0c 00 10 73 81 c8 f7 7f 00 00 e8 33 7e cb 5e 5e 00 00 98 74 81 c8 f7 7f 00 00 e8 23 7e cb 5e 5e 00 00 48 75 81 c8 f7 7f 00 00 e8 13 7e cb 5e 5e 00 00 a8 75 81 c8 f7 7f 00 00 e8 03 7e cb 5e 5e 00 00 08 76 81 c8 f7 7f 00 00 e8 f3 7d cb 5e 5e 00 00 68 76 81 c8 f7 7f 00 00 e8 e3 7d cb 5e 5e 00 00 c8 76 81 c8 f7 7f 00 00 e8 d3 7d cb 5e 5e 00 00 28 77 81 c8 f7 7f 00 00 e8 c3 7d cb 5e 5e 00 00 88 77 81 c8 f7 7f 00 00 e8 b3 7d cb 5e 5e 00 00 e8 77 81 c8 f7 7f 00 00 e8 a3 7d cb 5e 5e 00 00 48 78 81 c8 f7 7f 00 00 e8 93 7d cb 5e 5e 00 00 a8 78 81 c8 f7 7f 00 00 e8 83 7d cb 5e 5e 00 00 08 79 81 c8 f7 7f 00 00 e8 73 7d cb 5e 5e 00 00 68 79 81 c8 f7 7f 00 00 e8 63 7d cb 5e 5e 00 00 c8 79 81 c8 f7 7f 00 00 e8 53 7d cb 5e 5e 00 00 28 7a 81 c8 f7 7f 00 00 e8 43 7d cb 5e 5e 00 0c e8 3b 7d cb 5e 5e 01 0b e8 33 7d cb 5e 5e 02 0a e8 2b 7d cb 5e 5e 03 09 e8 23 7d cb 5e 5e 04 08 e8 1b 7d cb 5e 5e 05 07 e8 13 7d cb 5e 5e 06 06 e8 0b 7d cb 5e 5e 07 05 e8 03 7d cb 5e 5e 08 04 e8 fb 7c cb 5e 5e 09 03 e8 f3 7c cb 5e 5e 0a 02 e8 eb 7c cb 5e 5e 0b 01 e8 e3 7c cb 5e 5e 0c 00 98 7a 81 c8 f7 7f 00 00 e8 d3 7c cb 5e 5e 00 00 20 7c 81 c8 f7 7f 00 00 e8 c3 7c cb 5e 5e 00 00 d0 7c 81 c8 f7 7f 00 00 e8 b3 7c cb 5e 5e 00 00 30 7d 81 c8 f7 7f 00 00 e8 a3 7c cb 5e 5e 00 00 90 7d 81 c8 f7 7f 00 00 e8 93 7c cb 5e 5e 00 00 f0 7d 81 c8 f7 7f 00 00 c8 93 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 48 63 d2 48 03 c2 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 20 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
68        | 7ff7c85ad9c0h   | 87      | hex://intrinsics/bitpack?pack64x8#pack64x8_g[8u](uspan8u,32i)                                                 | ulong pack64x8<byte>(ReadOnlySpan<byte> src, int offset)                                                      | c5 f8 77 66 90 48 8b 01 48 63 d2 48 03 c2 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 20 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
69        | 7ff7c85ada20h   | 87      | hex://intrinsics/bitpack?pack64x8#pack64x8_g[8i](uspan8i,32i)                                                 | ulong pack64x8<sbyte>(ReadOnlySpan<sbyte> src, int offset)                                                    | c5 f8 77 66 90 48 8b 01 48 63 d2 48 03 c2 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 20 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
70        | 7ff7c85ada80h   | 87      | hex://intrinsics/bitpack?pack64x8#pack64x8_g[16u](uspan16u,32i)                                               | ulong pack64x8<ushort>(ReadOnlySpan<ushort> src, int offset)                                                  | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 50 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 40 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
71        | 7ff7c85adae0h   | 87      | hex://intrinsics/bitpack?pack64x8#pack64x8_g[16i](uspan16i,32i)                                               | ulong pack64x8<short>(ReadOnlySpan<short> src, int offset)                                                    | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 50 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 40 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
72        | 7ff7c85adb40h   | 439     | hex://intrinsics/bitpack?pack64x8#pack64x8_g[32u](uspan32u,32i)                                               | ulong pack64x8<uint>(ReadOnlySpan<uint> src, int offset)                                                      | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 d0 95 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 38 96 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 a0 96 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 20 98 80 c8 f7 7f 00 00 c5 f8 77 66 90 c5 f9 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
73        | 7ff7c85adba0h   | 343     | hex://intrinsics/bitpack?pack64x8#pack64x8_g[32i](uspan32i,32i)                                               | ulong pack64x8<int>(ReadOnlySpan<int> src, int offset)                                                        | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 38 96 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 a0 96 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 20 98 80 c8 f7 7f 00 00 c5 f8 77 66 90 c5 f9 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
74        | 7ff7c85adc00h   | 247     | hex://intrinsics/bitpack?pack64x8#pack64x8_g[64u](uspan64u,32i)                                               | ulong pack64x8<ulong>(ReadOnlySpan<ulong> src, int offset)                                                    | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 a0 96 80 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 20 98 80 c8 f7 7f 00 00 c5 f8 77 66 90 c5 f9 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
75        | 7ff7c85adc60h   | 151     | hex://intrinsics/bitpack?pack64x8#pack64x8_g[64i](uspan64i,32i)                                               | ulong pack64x8<long>(ReadOnlySpan<long> src, int offset)                                                      | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 20 98 80 c8 f7 7f 00 00 c5 f8 77 66 90 c5 f9 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
76        | 7ff7c85adcc0h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[8u](v128x8u,8u)                                                        | ushort pack8<byte>(Vector128<byte> src, byte index)                                                           | c5 f8 77 66 90 c5 f9 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
77        | 7ff7c85add00h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[8i](v128x8i,8u)                                                        | ushort pack8<sbyte>(Vector128<sbyte> src, byte index)                                                         | c5 f8 77 66 90 c5 f9 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
78        | 7ff7c85add40h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[16u](v128x16u,8u)                                                      | ushort pack8<ushort>(Vector128<ushort> src, byte index)                                                       | c5 f8 77 66 90 c5 f9 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
79        | 7ff7c85add80h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[16i](v128x16i,8u)                                                      | ushort pack8<short>(Vector128<short> src, byte index)                                                         | c5 f8 77 66 90 c5 f9 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
80        | 7ff7c85addc0h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[32u](v128x32u,8u)                                                      | ushort pack8<uint>(Vector128<uint> src, byte index)                                                           | c5 f8 77 66 90 c5 f9 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
81        | 7ff7c85ade00h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[32i](v128x32i,8u)                                                      | ushort pack8<int>(Vector128<int> src, byte index)                                                             | c5 f8 77 66 90 c5 f9 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
82        | 7ff7c85ade40h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[64u](v128x64u,8u)                                                      | ushort pack8<ulong>(Vector128<ulong> src, byte index)                                                         | c5 f8 77 66 90 c5 f9 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
83        | 7ff7c85ade80h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[64i](v128x64i,8u)                                                      | ushort pack8<long>(Vector128<long> src, byte index)                                                           | c5 f8 77 66 90 c5 f9 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
84        | 7ff7c85adec0h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[8u](v256x8u,8u)                                                        | uint pack8<byte>(Vector256<byte> src, byte index)                                                             | c5 f8 77 66 90 c5 fd 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
85        | 7ff7c85adf00h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[8i](v256x8i,8u)                                                        | uint pack8<sbyte>(Vector256<sbyte> src, byte index)                                                           | c5 f8 77 66 90 c5 fd 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
86        | 7ff7c85adf40h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[16u](v256x16u,8u)                                                      | uint pack8<ushort>(Vector256<ushort> src, byte index)                                                         | c5 f8 77 66 90 c5 fd 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
87        | 7ff7c85adf80h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[16i](v256x16i,8u)                                                      | uint pack8<short>(Vector256<short> src, byte index)                                                           | c5 f8 77 66 90 c5 fd 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
88        | 7ff7c85adfc0h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[32u](v256x32u,8u)                                                      | uint pack8<uint>(Vector256<uint> src, byte index)                                                             | c5 f8 77 66 90 c5 fd 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
89        | 7ff7c85ae000h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[32i](v256x32i,8u)                                                      | uint pack8<int>(Vector256<int> src, byte index)                                                               | c5 f8 77 66 90 c5 fd 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
90        | 7ff7c85ae040h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[64u](v256x64u,8u)                                                      | uint pack8<ulong>(Vector256<ulong> src, byte index)                                                           | c5 f8 77 66 90 c5 fd 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
91        | 7ff7c85ae080h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[64i](v256x64i,8u)                                                      | uint pack8<long>(Vector256<long> src, byte index)                                                             | c5 f8 77 66 90 c5 fd 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
92        | 7ff7c85ae0c0h   | 35      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[8u](v128x8u)                                                     | ushort packmsb8<byte>(Vector128<byte> src)                                                                    | c5 f8 77 66 90 c5 f9 10 01 c5 f9 d7 c0 0f b7 c0 c3 cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
93        | 7ff7c85ae0f0h   | 1064    | hex://intrinsics/bitpack?packmsb8#packmsb8_g[8i](v128x8i)                                                     | ushort packmsb8<sbyte>(Vector128<sbyte> src)                                                                  | c5 f8 77 66 90 c5 f9 10 01 c5 f9 d7 c0 0f b7 c0 c3 cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 23 75 cb 5e 5e 00 00 50 7e 81 c8 f7 7f 00 00 e8 13 75 cb 5e 5e 00 00 b0 7e 81 c8 f7 7f 00 00 e8 03 75 cb 5e 5e 00 00 10 7f 81 c8 f7 7f 00 00 e8 f3 74 cb 5e 5e 00 00 70 7f 81 c8 f7 7f 00 00 e8 e3 74 cb 5e 5e 00 00 d0 7f 81 c8 f7 7f 00 00 e8 d3 74 cb 5e 5e 00 00 30 80 81 c8 f7 7f 00 00 e8 c3 74 cb 5e 5e 00 00 90 80 81 c8 f7 7f 00 00 e8 b3 74 cb 5e 5e 00 00 f0 80 81 c8 f7 7f 00 00 e8 a3 74 cb 5e 5e 00 00 50 81 81 c8 f7 7f 00 00 e8 93 74 cb 5e 5e 00 0c e8 8b 74 cb 5e 5e 01 0b e8 83 74 cb 5e 5e 02 0a e8 7b 74 cb 5e 5e 03 09 e8 73 74 cb 5e 5e 04 08 e8 6b 74 cb 5e 5e 05 07 e8 63 74 cb 5e 5e 06 06 e8 5b 74 cb 5e 5e 07 05 e8 53 74 cb 5e 5e 08 04 e8 4b 74 cb 5e 5e 09 03 e8 43 74 cb 5e 5e 0a 02 e8 3b 74 cb 5e 5e 0b 01 e8 33 74 cb 5e 5e 0c 00 e0 81 81 c8 f7 7f 00 00 e8 23 74 cb 5e 5e 00 00 68 83 81 c8 f7 7f 00 00 e8 13 74 cb 5e 5e 00 00 18 84 81 c8 f7 7f 00 00 e8 03 74 cb 5e 5e 00 00 78 84 81 c8 f7 7f 00 00 e8 f3 73 cb 5e 5e 00 00 d8 84 81 c8 f7 7f 00 00 e8 e3 73 cb 5e 5e 00 00 38 85 81 c8 f7 7f 00 00 e8 d3 73 cb 5e 5e 00 00 98 85 81 c8 f7 7f 00 00 e8 c3 73 cb 5e 5e 00 00 f8 85 81 c8 f7 7f 00 00 e8 b3 73 cb 5e 5e 00 00 58 86 81 c8 f7 7f 00 00 e8 a3 73 cb 5e 5e 00 00 b8 86 81 c8 f7 7f 00 00 e8 93 73 cb 5e 5e 00 00 18 87 81 c8 f7 7f 00 00 e8 83 73 cb 5e 5e 00 00 78 87 81 c8 f7 7f 00 00 e8 73 73 cb 5e 5e 00 00 d8 87 81 c8 f7 7f 00 00 e8 63 73 cb 5e 5e 00 00 38 88 81 c8 f7 7f 00 00 e8 53 73 cb 5e 5e 00 00 98 88 81 c8 f7 7f 00 00 e8 43 73 cb 5e 5e 00 0c e8 3b 73 cb 5e 5e 01 0b e8 33 73 cb 5e 5e 02 0a e8 2b 73 cb 5e 5e 03 09 e8 23 73 cb 5e 5e 04 08 e8 1b 73 cb 5e 5e 05 07 e8 13 73 cb 5e 5e 06 06 e8 0b 73 cb 5e 5e 07 05 e8 03 73 cb 5e 5e 08 04 e8 fb 72 cb 5e 5e 09 03 e8 f3 72 cb 5e 5e 0a 02 e8 eb 72 cb 5e 5e 0b 01 e8 e3 72 cb 5e 5e 0c 00 08 89 81 c8 f7 7f 00 00 e8 d3 72 cb 5e 5e 00 00 90 8a 81 c8 f7 7f 00 00 e8 c3 72 cb 5e 5e 00 00 40 8b 81 c8 f7 7f 00 00 e8 b3 72 cb 5e 5e 00 00 a0 8b 81 c8 f7 7f 00 00 e8 a3 72 cb 5e 5e 00 00 00 8c 81 c8 f7 7f 00 00 e8 93 72 cb 5e 5e 00 00 60 8c 81 c8 f7 7f 00 00 e8 83 72 cb 5e 5e 00 00 c0 8c 81 c8 f7 7f 00 00 e8 73 72 cb 5e 5e 00 00 20 8d 81 c8 f7 7f 00 00 e8 63 72 cb 5e 5e 00 00 80 8d 81 c8 f7 7f 00 00 e8 53 72 cb 5e 5e 00 0c e8 4b 72 cb 5e 5e 01 0b e8 43 72 cb 5e 5e 02 0a e8 3b 72 cb 5e 5e 03 09 e8 33 72 cb 5e 5e 04 08 e8 2b 72 cb 5e 5e 05 07 e8 23 72 cb 5e 5e 06 06 e8 1b 72 cb 5e 5e 07 05 e8 13 72 cb 5e 5e 08 04 e8 0b 72 cb 5e 5e 09 03 e8 03 72 cb 5e 5e 0a 02 e8 fb 71 cb 5e 5e 0b 01 e8 f3 71 cb 5e 5e 0c 00 10 8e 81 c8 f7 7f 00 00 e8 e3 71 cb 5e 5e 00 00 98 8f 81 c8 f7 7f 00 00 e8 d3 71 cb 5e 5e 00 00 48 90 81 c8 f7 7f 00 00 e8 c3 71 cb 5e 5e 00 00 a8 90 81 c8 f7 7f 00 00 e8 b3 71 cb 5e 5e 00 00 08 91 81 c8 f7 7f 00 00 e8 a3 71 cb 5e 5e 00 00 68 91 81 c8 f7 7f 00 00 e8 93 71 cb 5e 5e 00 00 c8 91 81 c8 f7 7f 00 00 e8 83 71 cb 5e 5e 00 00 28 92 81 c8 f7 7f 00 00 e8 73 71 cb 5e 5e 00 00 88 92 81 c8 f7 7f 00 00 e8 63 71 cb 5e 5e 00 01 e8 5b 71 cb 5e 5e 01 00 f0 93 81 c8 f7 7f 00 00 e8 4b 71 cb 5e 5e 00 00 f0 95 81 c8 f7 7f 00 00 e8 3b 71 cb 5e 5e 00 00 50 96 81 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
94        | 7ff7c85ae520h   | 35      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[16u](v128x16u)                                                   | ushort packmsb8<ushort>(Vector128<ushort> src)                                                                | c5 f8 77 66 90 c5 f9 10 01 c5 f9 d7 c0 0f b7 c0 c3 cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
95        | 7ff7c85ae550h   | 35      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[16i](v128x16i)                                                   | ushort packmsb8<short>(Vector128<short> src)                                                                  | c5 f8 77 66 90 c5 f9 10 01 c5 f9 d7 c0 0f b7 c0 c3 cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
96        | 7ff7c85ae580h   | 35      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[32u](v128x32u)                                                   | ushort packmsb8<uint>(Vector128<uint> src)                                                                    | c5 f8 77 66 90 c5 f9 10 01 c5 f9 d7 c0 0f b7 c0 c3 cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
97        | 7ff7c85ae5b0h   | 35      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[32i](v128x32i)                                                   | ushort packmsb8<int>(Vector128<int> src)                                                                      | c5 f8 77 66 90 c5 f9 10 01 c5 f9 d7 c0 0f b7 c0 c3 cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
98        | 7ff7c85ae5e0h   | 35      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[64u](v128x64u)                                                   | ushort packmsb8<ulong>(Vector128<ulong> src)                                                                  | c5 f8 77 66 90 c5 f9 10 01 c5 f9 d7 c0 0f b7 c0 c3 cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
99        | 7ff7c85ae610h   | 35      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[64i](v128x64i)                                                   | ushort packmsb8<long>(Vector128<long> src)                                                                    | c5 f8 77 66 90 c5 f9 10 01 c5 f9 d7 c0 0f b7 c0 c3 cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
100       | 7ff7c85ae640h   | 39      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[8u](v256x8u)                                                     | ulong packmsb8<byte>(Vector256<byte> src)                                                                     | c5 f8 77 66 90 c5 fd 10 01 c5 fd d7 c0 8b c0 c5 f8 77 c3 cc cc 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
101       | 7ff7c85ae670h   | 39      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[8i](v256x8i)                                                     | ulong packmsb8<sbyte>(Vector256<sbyte> src)                                                                   | c5 f8 77 66 90 c5 fd 10 01 c5 fd d7 c0 8b c0 c5 f8 77 c3 cc cc 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
102       | 7ff7c85ae6a0h   | 39      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[16u](v256x16u)                                                   | ulong packmsb8<ushort>(Vector256<ushort> src)                                                                 | c5 f8 77 66 90 c5 fd 10 01 c5 fd d7 c0 8b c0 c5 f8 77 c3 cc cc 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
103       | 7ff7c85ae6d0h   | 39      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[16i](v256x16i)                                                   | ulong packmsb8<short>(Vector256<short> src)                                                                   | c5 f8 77 66 90 c5 fd 10 01 c5 fd d7 c0 8b c0 c5 f8 77 c3 cc cc 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
104       | 7ff7c85ae700h   | 39      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[32u](v256x32u)                                                   | ulong packmsb8<uint>(Vector256<uint> src)                                                                     | c5 f8 77 66 90 c5 fd 10 01 c5 fd d7 c0 8b c0 c5 f8 77 c3 cc cc 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
105       | 7ff7c85ae730h   | 39      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[32i](v256x32i)                                                   | ulong packmsb8<int>(Vector256<int> src)                                                                       | c5 f8 77 66 90 c5 fd 10 01 c5 fd d7 c0 8b c0 c5 f8 77 c3 cc cc 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
106       | 7ff7c85ae760h   | 39      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[64u](v256x64u)                                                   | ulong packmsb8<ulong>(Vector256<ulong> src)                                                                   | c5 f8 77 66 90 c5 fd 10 01 c5 fd d7 c0 8b c0 c5 f8 77 c3 cc cc 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
107       | 7ff7c85ae790h   | 39      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[64i](v256x64i)                                                   | ulong packmsb8<long>(Vector256<long> src)                                                                     | c5 f8 77 66 90 c5 fd 10 01 c5 fd d7 c0 8b c0 c5 f8 77 c3 cc cc 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
108       | 7ff7c85ae7c0h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[8u](v128x8u)                                                     | ushort packlsb8<byte>(Vector128<byte> src)                                                                    | c5 f8 77 66 90 c5 f9 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
109       | 7ff7c85ae800h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[8i](v128x8i)                                                     | ushort packlsb8<sbyte>(Vector128<sbyte> src)                                                                  | c5 f8 77 66 90 c5 f9 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
110       | 7ff7c85ae840h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[16u](v128x16u)                                                   | ushort packlsb8<ushort>(Vector128<ushort> src)                                                                | c5 f8 77 66 90 c5 f9 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
111       | 7ff7c85ae880h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[16i](v128x16i)                                                   | ushort packlsb8<short>(Vector128<short> src)                                                                  | c5 f8 77 66 90 c5 f9 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
112       | 7ff7c85ae8c0h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[32u](v128x32u)                                                   | ushort packlsb8<uint>(Vector128<uint> src)                                                                    | c5 f8 77 66 90 c5 f9 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
113       | 7ff7c85ae900h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[32i](v128x32i)                                                   | ushort packlsb8<int>(Vector128<int> src)                                                                      | c5 f8 77 66 90 c5 f9 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
114       | 7ff7c85ae940h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[64u](v128x64u)                                                   | ushort packlsb8<ulong>(Vector128<ulong> src)                                                                  | c5 f8 77 66 90 c5 f9 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
115       | 7ff7c85ae980h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[64i](v128x64i)                                                   | ushort packlsb8<long>(Vector128<long> src)                                                                    | c5 f8 77 66 90 c5 f9 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
116       | 7ff7c85ae9c0h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[8u](v256x8u)                                                     | uint packlsb8<byte>(Vector256<byte> src)                                                                      | c5 f8 77 66 90 c5 fd 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
117       | 7ff7c85aea00h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[8i](v256x8i)                                                     | uint packlsb8<sbyte>(Vector256<sbyte> src)                                                                    | c5 f8 77 66 90 c5 fd 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
118       | 7ff7c85aea40h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[16u](v256x16u)                                                   | uint packlsb8<ushort>(Vector256<ushort> src)                                                                  | c5 f8 77 66 90 c5 fd 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
119       | 7ff7c85aea80h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[16i](v256x16i)                                                   | uint packlsb8<short>(Vector256<short> src)                                                                    | c5 f8 77 66 90 c5 fd 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
120       | 7ff7c85aeac0h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[32u](v256x32u)                                                   | uint packlsb8<uint>(Vector256<uint> src)                                                                      | c5 f8 77 66 90 c5 fd 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
121       | 7ff7c85aeb00h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[32i](v256x32i)                                                   | uint packlsb8<int>(Vector256<int> src)                                                                        | c5 f8 77 66 90 c5 fd 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
122       | 7ff7c85aeb40h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[64u](v256x64u)                                                   | uint packlsb8<ulong>(Vector256<ulong> src)                                                                    | c5 f8 77 66 90 c5 fd 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
123       | 7ff7c85aeb80h   | 1080    | hex://intrinsics/bitpack?packlsb8#packlsb8_g[64i](v256x64i)                                                   | uint packlsb8<long>(Vector256<long> src)                                                                      | c5 f8 77 66 90 c5 fd 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 83 6a cb 5e 5e 00 18 e8 7b 6a cb 5e 5e 01 17 e8 73 6a cb 5e 5e 02 16 e8 6b 6a cb 5e 5e 03 15 e8 63 6a cb 5e 5e 04 14 e8 5b 6a cb 5e 5e 05 13 e8 53 6a cb 5e 5e 06 12 e8 4b 6a cb 5e 5e 07 11 e8 43 6a cb 5e 5e 08 10 e8 3b 6a cb 5e 5e 09 0f e8 33 6a cb 5e 5e 0a 0e e8 2b 6a cb 5e 5e 0b 0d e8 23 6a cb 5e 5e 0c 0c e8 1b 6a cb 5e 5e 0d 0b e8 13 6a cb 5e 5e 0e 0a e8 0b 6a cb 5e 5e 0f 09 e8 03 6a cb 5e 5e 10 08 e8 fb 69 cb 5e 5e 11 07 e8 f3 69 cb 5e 5e 12 06 e8 eb 69 cb 5e 5e 13 05 e8 e3 69 cb 5e 5e 14 04 e8 db 69 cb 5e 5e 15 03 e8 d3 69 cb 5e 5e 16 02 e8 cb 69 cb 5e 5e 17 01 e8 c3 69 cb 5e 5e 18 00 f8 92 81 c8 f7 7f 00 00 e8 b3 69 cb 5e 5e 00 00 b0 96 81 c8 f7 7f 00 00 e8 a3 69 cb 5e 5e 00 00 10 97 81 c8 f7 7f 00 00 e8 93 69 cb 5e 5e 00 00 70 97 81 c8 f7 7f 00 00 e8 83 69 cb 5e 5e 00 00 d0 97 81 c8 f7 7f 00 00 e8 73 69 cb 5e 5e 00 00 30 98 81 c8 f7 7f 00 00 e8 63 69 cb 5e 5e 00 00 90 98 81 c8 f7 7f 00 00 e8 53 69 cb 5e 5e 00 00 f0 98 81 c8 f7 7f 00 00 e8 43 69 cb 5e 5e 00 00 50 99 81 c8 f7 7f 00 00 e8 33 69 cb 5e 5e 00 00 b0 99 81 c8 f7 7f 00 00 e8 23 69 cb 5e 5e 00 00 10 9a 81 c8 f7 7f 00 00 e8 13 69 cb 5e 5e 00 00 70 9a 81 c8 f7 7f 00 00 e8 03 69 cb 5e 5e 00 00 d0 9a 81 c8 f7 7f 00 00 e8 f3 68 cb 5e 5e 00 00 30 9b 81 c8 f7 7f 00 00 e8 e3 68 cb 5e 5e 00 00 90 9b 81 c8 f7 7f 00 00 e8 d3 68 cb 5e 5e 00 00 f0 9b 81 c8 f7 7f 00 00 e8 c3 68 cb 5e 5e 00 00 50 9c 81 c8 f7 7f 00 00 e8 b3 68 cb 5e 5e 00 00 b0 9c 81 c8 f7 7f 00 00 e8 a3 68 cb 5e 5e 00 00 10 9d 81 c8 f7 7f 00 00 e8 93 68 cb 5e 5e 00 00 70 9d 81 c8 f7 7f 00 00 e8 83 68 cb 5e 5e 00 00 d0 9d 81 c8 f7 7f 00 00 e8 73 68 cb 5e 5e 00 00 30 9e 81 c8 f7 7f 00 00 e8 63 68 cb 5e 5e 00 00 90 9e 81 c8 f7 7f 00 00 e8 53 68 cb 5e 5e 00 00 f0 9e 81 c8 f7 7f 00 00 e8 43 68 cb 5e 5e 00 00 50 9f 81 c8 f7 7f 00 00 e8 33 68 cb 5e 5e 00 00 b0 9f 81 c8 f7 7f 00 00 e8 23 68 cb 5e 5e 00 00 10 a0 81 c8 f7 7f 00 00 e8 13 68 cb 5e 5e 00 01 e8 0b 68 cb 5e 5e 01 00 78 a1 81 c8 f7 7f 00 00 e8 fb 67 cb 5e 5e 00 18 e8 f3 67 cb 5e 5e 01 17 e8 eb 67 cb 5e 5e 02 16 e8 e3 67 cb 5e 5e 03 15 e8 db 67 cb 5e 5e 04 14 e8 d3 67 cb 5e 5e 05 13 e8 cb 67 cb 5e 5e 06 12 e8 c3 67 cb 5e 5e 07 11 e8 bb 67 cb 5e 5e 08 10 e8 b3 67 cb 5e 5e 09 0f e8 ab 67 cb 5e 5e 0a 0e e8 a3 67 cb 5e 5e 0b 0d e8 9b 67 cb 5e 5e 0c 0c e8 93 67 cb 5e 5e 0d 0b e8 8b 67 cb 5e 5e 0e 0a e8 83 67 cb 5e 5e 0f 09 e8 7b 67 cb 5e 5e 10 08 e8 73 67 cb 5e 5e 11 07 e8 6b 67 cb 5e 5e 12 06 e8 63 67 cb 5e 5e 13 05 e8 5b 67 cb 5e 5e 14 04 e8 53 67 cb 5e 5e 15 03 e8 4b 67 cb 5e 5e 16 02 e8 43 67 cb 5e 5e 17 01 e8 3b 67 cb 5e 5e 18 00 80 a0 81 c8 f7 7f 00 00 e8 2b 67 cb 5e 5e 00 00 78 a3 81 c8 f7 7f 00 00 e8 1b 67 cb 5e 5e 00 00 d8 a3 81 c8 f7 7f 00 00 e8 0b 67 cb 5e 5e 00 00 38 a4 81 c8 f7 7f 00 00 e8 fb 66 cb 5e 5e 00 00 98 a4 81 c8 f7 7f 00 00 e8 eb 66 cb 5e 5e 00 00 f8 a4 81 c8 f7 7f 00 00 e8 db 66 cb 5e 5e 00 00 58 a5 81 c8 f7 7f 00 00 e8 cb 66 cb 5e 5e 00 00 b8 a5 81 c8 f7 7f 00 00 e8 bb 66 cb 5e 5e 00 00 18 a6 81 c8 f7 7f 00 00 e8 ab 66 cb 5e 5e 00 00 78 a6 81 c8 f7 7f 00 00 e8 9b 66 cb 5e 5e 00 00 d8 a6 81 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
124       | 7ff7c85aefc0h   | 179     | hex://intrinsics/bitpack?unpack32#unpack32_g[8u](uspan8u,b256x32u~in)                                         | void unpack32<byte>(ReadOnlySpan<byte> src, in Block256<uint> dst)                                            | 56 48 83 ec 30 c5 f8 77 33 c0 48 89 44 24 28 8b 42 08 44 8b c0 41 c1 f8 1f 41 83 e0 07 41 03 c0 c1 f8 03 48 8b 09 45 33 c0 85 c0 7e 62 4d 63 c8 46 0f b6 0c 09 45 8b d0 41 c1 e2 03 45 8b da 49 83 c3 08 8b 72 08 4c 3b de 77 4d 4c 8b 1a 4d 63 d2 4f 8d 14 93 45 33 db 4c 89 5c 24 28 4c 89 5c 24 28 4c 8d 5c 24 28 45 0f b6 c9 48 be 01 01 01 01 01 01 01 01 c4 62 b3 f5 ce 4d 89 0b c4 c2 7d 31 03 c4 c1 7e 7f 02 41 ff c0 44 3b c0 7c 9e c5 f8 77 48 83 c4 30 5e c3 e8 ab 5a 19 ff cc 00 00 19 05 02 00 05 52 01 60 40 00 00 00 00 00 00 00 00 00 00
125       | 7ff7c85af080h   | 1008    | hex://intrinsics/bitpack?unpack32#unpack32_g[16u](uspan16u,b256x32u~in)                                       | void unpack32<ushort>(ReadOnlySpan<ushort> src, in Block256<uint> dst)                                        | 56 48 83 ec 30 c5 f8 77 33 c0 48 89 44 24 28 8b 42 08 44 8b c0 41 c1 f8 1f 41 83 e0 07 41 03 c0 c1 f8 03 4c 8b 01 8b 49 08 6b c9 02 70 6f 33 c9 85 c0 7e 60 4c 63 c9 47 0f b6 0c 08 44 8b d1 41 c1 e2 03 45 8b da 49 83 c3 08 8b 72 08 4c 3b de 77 50 4c 8b 1a 4d 63 d2 4f 8d 14 93 45 33 db 4c 89 5c 24 28 4c 89 5c 24 28 4c 8d 5c 24 28 45 0f b6 c9 48 be 01 01 01 01 01 01 01 01 c4 62 b3 f5 ce 4d 89 0b c4 c2 7d 31 03 c4 c1 7e 7f 02 ff c1 3b c8 7c a0 c5 f8 77 48 83 c4 30 5e c3 e8 fe 0a de 5e e8 e1 59 19 ff cc 19 05 02 00 05 52 01 60 40 00 00 00 00 00 00 00 e8 b7 80 c8 f7 7f 00 00 56 48 83 ec 30 c5 f8 77 33 c0 48 89 44 24 28 8b 42 08 44 8b c0 41 c1 f8 1f 41 83 e0 07 41 03 c0 c1 f8 03 4c 8b 01 8b 49 08 6b c9 04 70 6f 33 c9 85 c0 7e 60 4c 63 c9 47 0f b6 0c 08 44 8b d1 41 c1 e2 03 45 8b da 49 83 c3 08 8b 72 08 4c 3b de 77 50 4c 8b 1a 4d 63 d2 4f 8d 14 93 45 33 db 4c 89 5c 24 28 4c 89 5c 24 28 4c 8d 5c 24 28 45 0f b6 c9 48 be 01 01 01 01 01 01 01 01 c4 62 b3 f5 ce 4d 89 0b c4 c2 7d 31 03 c4 c1 7e 7f 02 ff c1 3b c8 7c a0 c5 f8 77 48 83 c4 30 5e c3 e8 3e 0a de 5e e8 21 59 19 ff cc 19 05 02 00 05 52 01 60 40 00 00 00 00 00 00 00 d8 b8 80 c8 f7 7f 00 00 56 48 83 ec 30 c5 f8 77 33 c0 48 89 44 24 28 8b 42 08 44 8b c0 41 c1 f8 1f 41 83 e0 07 41 03 c0 c1 f8 03 4c 8b 01 8b 49 08 6b c9 08 70 6f 33 c9 85 c0 7e 60 4c 63 c9 47 0f b6 0c 08 44 8b d1 41 c1 e2 03 45 8b da 49 83 c3 08 8b 72 08 4c 3b de 77 50 4c 8b 1a 4d 63 d2 4f 8d 14 93 45 33 db 4c 89 5c 24 28 4c 89 5c 24 28 4c 8d 5c 24 28 45 0f b6 c9 48 be 01 01 01 01 01 01 01 01 c4 62 b3 f5 ce 4d 89 0b c4 c2 7d 31 03 c4 c1 7e 7f 02 ff c1 3b c8 7c a0 c5 f8 77 48 83 c4 30 5e c3 e8 7e 09 de 5e e8 61 58 19 ff cc 19 05 02 00 05 52 01 60 40 00 00 00 00 00 00 00 78 bb 80 c8 f7 7f 00 00 48 83 ec 28 c5 f8 77 48 8b 01 49 63 c8 0f b6 04 08 41 c1 e0 03 41 8b c8 48 83 c1 08 44 8b 4a 08 49 3b c9 77 47 48 8b 0a 4d 63 c0 4a 8d 0c 81 0f b6 c0 45 33 c0 4c 89 44 24 20 4c 89 44 24 20 4c 8d 44 24 20 8b c0 49 b9 01 01 01 01 01 01 01 01 c4 c2 fb f5 c1 49 89 00 c4 c2 7d 31 00 c5 fe 7f 01 48 8b c2 c5 f8 77 48 83 c4 28 c3 e8 d7 57 19 ff cc cc 00 19 04 01 00 04 42 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 f3 62 cb 5e 5e 00 00 38 a7 81 c8 f7 7f 00 00 e8 e3 62 cb 5e 5e 00 00 98 a7 81 c8 f7 7f 00 00 e8 d3 62 cb 5e 5e 00 00 f8 a7 81 c8 f7 7f 00 00 e8 c3 62 cb 5e 5e 00 00 58 a8 81 c8 f7 7f 00 00 e8 b3 62 cb 5e 5e 00 00 b8 a8 81 c8 f7 7f 00 00 e8 a3 62 cb 5e 5e 00 00 18 a9 81 c8 f7 7f 00 00 e8 93 62 cb 5e 5e 00 00 78 a9 81 c8 f7 7f 00 00 e8 83 62 cb 5e 5e 00 00 d8 a9 81 c8 f7 7f 00 00 e8 73 62 cb 5e 5e 00 00 38 aa 81 c8 f7 7f 00 00 e8 63 62 cb 5e 5e 00 00 98 aa 81 c8 f7 7f 00 00 e8 53 62 cb 5e 5e 00 00 f8 aa 81 c8 f7 7f 00 00 e8 43 62 cb 5e 5e 00 00 58 ab 81 c8 f7 7f 00 00 e8 33 62 cb 5e 5e 00 00 b8 ab 81 c8 f7 7f 00 00 e8 23 62 cb 5e 5e 00 00 18 ac 81 c8 f7 7f 00 00 e8 13 62 cb 5e 5e 00 00 78 ac 81 c8 f7 7f 00 00 e8 03 62 cb 5e 5e 00 00 d8 ac 81 c8 f7 7f 00 00 e8 f3 61 cb 5e 5e 00 00 38 ad 81 c8 f7 7f 00 00 e8 e3 61 cb 5e 5e 00 00 98 ad 81 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
126       | 7ff7c85af140h   | 816     | hex://intrinsics/bitpack?unpack32#unpack32_g[32u](uspan32u,b256x32u~in)                                       | void unpack32<uint>(ReadOnlySpan<uint> src, in Block256<uint> dst)                                            | 56 48 83 ec 30 c5 f8 77 33 c0 48 89 44 24 28 8b 42 08 44 8b c0 41 c1 f8 1f 41 83 e0 07 41 03 c0 c1 f8 03 4c 8b 01 8b 49 08 6b c9 04 70 6f 33 c9 85 c0 7e 60 4c 63 c9 47 0f b6 0c 08 44 8b d1 41 c1 e2 03 45 8b da 49 83 c3 08 8b 72 08 4c 3b de 77 50 4c 8b 1a 4d 63 d2 4f 8d 14 93 45 33 db 4c 89 5c 24 28 4c 89 5c 24 28 4c 8d 5c 24 28 45 0f b6 c9 48 be 01 01 01 01 01 01 01 01 c4 62 b3 f5 ce 4d 89 0b c4 c2 7d 31 03 c4 c1 7e 7f 02 ff c1 3b c8 7c a0 c5 f8 77 48 83 c4 30 5e c3 e8 3e 0a de 5e e8 21 59 19 ff cc 19 05 02 00 05 52 01 60 40 00 00 00 00 00 00 00 d8 b8 80 c8 f7 7f 00 00 56 48 83 ec 30 c5 f8 77 33 c0 48 89 44 24 28 8b 42 08 44 8b c0 41 c1 f8 1f 41 83 e0 07 41 03 c0 c1 f8 03 4c 8b 01 8b 49 08 6b c9 08 70 6f 33 c9 85 c0 7e 60 4c 63 c9 47 0f b6 0c 08 44 8b d1 41 c1 e2 03 45 8b da 49 83 c3 08 8b 72 08 4c 3b de 77 50 4c 8b 1a 4d 63 d2 4f 8d 14 93 45 33 db 4c 89 5c 24 28 4c 89 5c 24 28 4c 8d 5c 24 28 45 0f b6 c9 48 be 01 01 01 01 01 01 01 01 c4 62 b3 f5 ce 4d 89 0b c4 c2 7d 31 03 c4 c1 7e 7f 02 ff c1 3b c8 7c a0 c5 f8 77 48 83 c4 30 5e c3 e8 7e 09 de 5e e8 61 58 19 ff cc 19 05 02 00 05 52 01 60 40 00 00 00 00 00 00 00 78 bb 80 c8 f7 7f 00 00 48 83 ec 28 c5 f8 77 48 8b 01 49 63 c8 0f b6 04 08 41 c1 e0 03 41 8b c8 48 83 c1 08 44 8b 4a 08 49 3b c9 77 47 48 8b 0a 4d 63 c0 4a 8d 0c 81 0f b6 c0 45 33 c0 4c 89 44 24 20 4c 89 44 24 20 4c 8d 44 24 20 8b c0 49 b9 01 01 01 01 01 01 01 01 c4 c2 fb f5 c1 49 89 00 c4 c2 7d 31 00 c5 fe 7f 01 48 8b c2 c5 f8 77 48 83 c4 28 c3 e8 d7 57 19 ff cc cc 00 19 04 01 00 04 42 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 f3 62 cb 5e 5e 00 00 38 a7 81 c8 f7 7f 00 00 e8 e3 62 cb 5e 5e 00 00 98 a7 81 c8 f7 7f 00 00 e8 d3 62 cb 5e 5e 00 00 f8 a7 81 c8 f7 7f 00 00 e8 c3 62 cb 5e 5e 00 00 58 a8 81 c8 f7 7f 00 00 e8 b3 62 cb 5e 5e 00 00 b8 a8 81 c8 f7 7f 00 00 e8 a3 62 cb 5e 5e 00 00 18 a9 81 c8 f7 7f 00 00 e8 93 62 cb 5e 5e 00 00 78 a9 81 c8 f7 7f 00 00 e8 83 62 cb 5e 5e 00 00 d8 a9 81 c8 f7 7f 00 00 e8 73 62 cb 5e 5e 00 00 38 aa 81 c8 f7 7f 00 00 e8 63 62 cb 5e 5e 00 00 98 aa 81 c8 f7 7f 00 00 e8 53 62 cb 5e 5e 00 00 f8 aa 81 c8 f7 7f 00 00 e8 43 62 cb 5e 5e 00 00 58 ab 81 c8 f7 7f 00 00 e8 33 62 cb 5e 5e 00 00 b8 ab 81 c8 f7 7f 00 00 e8 23 62 cb 5e 5e 00 00 18 ac 81 c8 f7 7f 00 00 e8 13 62 cb 5e 5e 00 00 78 ac 81 c8 f7 7f 00 00 e8 03 62 cb 5e 5e 00 00 d8 ac 81 c8 f7 7f 00 00 e8 f3 61 cb 5e 5e 00 00 38 ad 81 c8 f7 7f 00 00 e8 e3 61 cb 5e 5e 00 00 98 ad 81 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
127       | 7ff7c85af200h   | 624     | hex://intrinsics/bitpack?unpack32#unpack32_g[64u](uspan64u,b256x32u~in)                                       | void unpack32<ulong>(ReadOnlySpan<ulong> src, in Block256<uint> dst)                                          | 56 48 83 ec 30 c5 f8 77 33 c0 48 89 44 24 28 8b 42 08 44 8b c0 41 c1 f8 1f 41 83 e0 07 41 03 c0 c1 f8 03 4c 8b 01 8b 49 08 6b c9 08 70 6f 33 c9 85 c0 7e 60 4c 63 c9 47 0f b6 0c 08 44 8b d1 41 c1 e2 03 45 8b da 49 83 c3 08 8b 72 08 4c 3b de 77 50 4c 8b 1a 4d 63 d2 4f 8d 14 93 45 33 db 4c 89 5c 24 28 4c 89 5c 24 28 4c 8d 5c 24 28 45 0f b6 c9 48 be 01 01 01 01 01 01 01 01 c4 62 b3 f5 ce 4d 89 0b c4 c2 7d 31 03 c4 c1 7e 7f 02 ff c1 3b c8 7c a0 c5 f8 77 48 83 c4 30 5e c3 e8 7e 09 de 5e e8 61 58 19 ff cc 19 05 02 00 05 52 01 60 40 00 00 00 00 00 00 00 78 bb 80 c8 f7 7f 00 00 48 83 ec 28 c5 f8 77 48 8b 01 49 63 c8 0f b6 04 08 41 c1 e0 03 41 8b c8 48 83 c1 08 44 8b 4a 08 49 3b c9 77 47 48 8b 0a 4d 63 c0 4a 8d 0c 81 0f b6 c0 45 33 c0 4c 89 44 24 20 4c 89 44 24 20 4c 8d 44 24 20 8b c0 49 b9 01 01 01 01 01 01 01 01 c4 c2 fb f5 c1 49 89 00 c4 c2 7d 31 00 c5 fe 7f 01 48 8b c2 c5 f8 77 48 83 c4 28 c3 e8 d7 57 19 ff cc cc 00 19 04 01 00 04 42 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 f3 62 cb 5e 5e 00 00 38 a7 81 c8 f7 7f 00 00 e8 e3 62 cb 5e 5e 00 00 98 a7 81 c8 f7 7f 00 00 e8 d3 62 cb 5e 5e 00 00 f8 a7 81 c8 f7 7f 00 00 e8 c3 62 cb 5e 5e 00 00 58 a8 81 c8 f7 7f 00 00 e8 b3 62 cb 5e 5e 00 00 b8 a8 81 c8 f7 7f 00 00 e8 a3 62 cb 5e 5e 00 00 18 a9 81 c8 f7 7f 00 00 e8 93 62 cb 5e 5e 00 00 78 a9 81 c8 f7 7f 00 00 e8 83 62 cb 5e 5e 00 00 d8 a9 81 c8 f7 7f 00 00 e8 73 62 cb 5e 5e 00 00 38 aa 81 c8 f7 7f 00 00 e8 63 62 cb 5e 5e 00 00 98 aa 81 c8 f7 7f 00 00 e8 53 62 cb 5e 5e 00 00 f8 aa 81 c8 f7 7f 00 00 e8 43 62 cb 5e 5e 00 00 58 ab 81 c8 f7 7f 00 00 e8 33 62 cb 5e 5e 00 00 b8 ab 81 c8 f7 7f 00 00 e8 23 62 cb 5e 5e 00 00 18 ac 81 c8 f7 7f 00 00 e8 13 62 cb 5e 5e 00 00 78 ac 81 c8 f7 7f 00 00 e8 03 62 cb 5e 5e 00 00 d8 ac 81 c8 f7 7f 00 00 e8 f3 61 cb 5e 5e 00 00 38 ad 81 c8 f7 7f 00 00 e8 e3 61 cb 5e 5e 00 00 98 ad 81 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
128       | 7ff7c85af2c0h   | 432     | hex://intrinsics/bitpack?unpack32#unpack32_g[8u](uspan8u,b256x32u~in,32i)                                     | ref Block256<uint> unpack32<byte>(ReadOnlySpan<byte> src, in Block256<uint> dst, int block)                   | 48 83 ec 28 c5 f8 77 48 8b 01 49 63 c8 0f b6 04 08 41 c1 e0 03 41 8b c8 48 83 c1 08 44 8b 4a 08 49 3b c9 77 47 48 8b 0a 4d 63 c0 4a 8d 0c 81 0f b6 c0 45 33 c0 4c 89 44 24 20 4c 89 44 24 20 4c 8d 44 24 20 8b c0 49 b9 01 01 01 01 01 01 01 01 c4 c2 fb f5 c1 49 89 00 c4 c2 7d 31 00 c5 fe 7f 01 48 8b c2 c5 f8 77 48 83 c4 28 c3 e8 d7 57 19 ff cc cc 00 19 04 01 00 04 42 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 f3 62 cb 5e 5e 00 00 38 a7 81 c8 f7 7f 00 00 e8 e3 62 cb 5e 5e 00 00 98 a7 81 c8 f7 7f 00 00 e8 d3 62 cb 5e 5e 00 00 f8 a7 81 c8 f7 7f 00 00 e8 c3 62 cb 5e 5e 00 00 58 a8 81 c8 f7 7f 00 00 e8 b3 62 cb 5e 5e 00 00 b8 a8 81 c8 f7 7f 00 00 e8 a3 62 cb 5e 5e 00 00 18 a9 81 c8 f7 7f 00 00 e8 93 62 cb 5e 5e 00 00 78 a9 81 c8 f7 7f 00 00 e8 83 62 cb 5e 5e 00 00 d8 a9 81 c8 f7 7f 00 00 e8 73 62 cb 5e 5e 00 00 38 aa 81 c8 f7 7f 00 00 e8 63 62 cb 5e 5e 00 00 98 aa 81 c8 f7 7f 00 00 e8 53 62 cb 5e 5e 00 00 f8 aa 81 c8 f7 7f 00 00 e8 43 62 cb 5e 5e 00 00 58 ab 81 c8 f7 7f 00 00 e8 33 62 cb 5e 5e 00 00 b8 ab 81 c8 f7 7f 00 00 e8 23 62 cb 5e 5e 00 00 18 ac 81 c8 f7 7f 00 00 e8 13 62 cb 5e 5e 00 00 78 ac 81 c8 f7 7f 00 00 e8 03 62 cb 5e 5e 00 00 d8 ac 81 c8 f7 7f 00 00 e8 f3 61 cb 5e 5e 00 00 38 ad 81 c8 f7 7f 00 00 e8 e3 61 cb 5e 5e 00 00 98 ad 81 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
129       | 7ff7c85af750h   | 419     | hex://intrinsics/bitpack?unpack32#unpack32_g[16u](uspan16u,b256x32u~in,32i)                                   | ref Block256<uint> unpack32<ushort>(ReadOnlySpan<ushort> src, in Block256<uint> dst, int block)               | 48 83 ec 28 c5 f8 77 48 8b 01 49 63 c8 0f b7 04 48 41 c1 e0 03 41 8b c8 48 83 c1 08 44 8b 4a 08 49 3b c9 77 6b 48 8b 0a 4d 63 c0 4a 8d 0c 81 0f b7 c0 45 33 c0 4c 89 44 24 20 4c 89 44 24 20 4c 8d 44 24 20 44 0f b6 c8 49 ba 01 01 01 01 01 01 01 01 c4 42 b3 f5 ca 4d 89 08 4d 8b c8 c4 c2 7d 31 01 4c 8b c9 c4 c1 7e 7f 01 c1 f8 08 0f b6 c0 c4 c2 fb f5 c2 49 89 00 c4 c2 7d 31 00 48 83 c1 20 c5 fe 7f 01 48 8b c2 c5 f8 77 48 83 c4 28 c3 e8 23 53 19 ff cc cc 00 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 38 bd 80 c8 f7 7f 00 00 48 83 ec 28 c5 f8 77 48 8b 01 49 63 c8 8b 04 88 41 c1 e0 03 41 8b c8 48 83 c1 08 44 8b 4a 08 49 3b c9 0f 87 b0 00 00 00 48 8b 0a 4d 63 c0 4a 8d 0c 81 45 33 c0 4c 89 44 24 20 4c 89 44 24 20 4c 8d 44 24 20 44 0f b6 c8 49 ba 01 01 01 01 01 01 01 01 c4 42 b3 f5 ca 4d 89 08 4d 8b c8 c4 c2 7d 31 01 4c 8b c9 c4 c1 7e 7f 01 44 8b c8 41 c1 e9 08 45 0f b6 c9 c4 42 b3 f5 ca 4d 89 08 4d 8b c8 c4 c2 7d 31 01 4c 8d 49 20 c4 c1 7e 7f 01 44 8b c8 41 c1 e9 10 45 0f b6 c9 c4 42 b3 f5 ca 4d 89 08 4d 8b c8 c4 c2 7d 31 01 4c 8d 49 40 c4 c1 7e 7f 01 c1 e8 18 0f b6 c0 c4 c2 fb f5 c2 49 89 00 c4 c2 7d 31 00 48 83 c1 60 c5 fe 7f 01 48 8b c2 c5 f8 77 48 83 c4 28 c3 e8 2b 52 19 ff cc cc 00 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 00 00 00
130       | 7ff7c85af800h   | 243     | hex://intrinsics/bitpack?unpack32#unpack32_g[32u](uspan32u,b256x32u~in,32i)                                   | ref Block256<uint> unpack32<uint>(ReadOnlySpan<uint> src, in Block256<uint> dst, int block)                   | 48 83 ec 28 c5 f8 77 48 8b 01 49 63 c8 8b 04 88 41 c1 e0 03 41 8b c8 48 83 c1 08 44 8b 4a 08 49 3b c9 0f 87 b0 00 00 00 48 8b 0a 4d 63 c0 4a 8d 0c 81 45 33 c0 4c 89 44 24 20 4c 89 44 24 20 4c 8d 44 24 20 44 0f b6 c8 49 ba 01 01 01 01 01 01 01 01 c4 42 b3 f5 ca 4d 89 08 4d 8b c8 c4 c2 7d 31 01 4c 8b c9 c4 c1 7e 7f 01 44 8b c8 41 c1 e9 08 45 0f b6 c9 c4 42 b3 f5 ca 4d 89 08 4d 8b c8 c4 c2 7d 31 01 4c 8d 49 20 c4 c1 7e 7f 01 44 8b c8 41 c1 e9 10 45 0f b6 c9 c4 42 b3 f5 ca 4d 89 08 4d 8b c8 c4 c2 7d 31 01 4c 8d 49 40 c4 c1 7e 7f 01 c1 e8 18 0f b6 c0 c4 c2 fb f5 c2 49 89 00 c4 c2 7d 31 00 48 83 c1 60 c5 fe 7f 01 48 8b c2 c5 f8 77 48 83 c4 28 c3 e8 2b 52 19 ff cc cc 00 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 00 00 00
131       | 7ff7c85af900h   | 403     | hex://intrinsics/bitpack?unpack32#unpack32_g[64u](uspan64u,b256x32u~in,32i)                                   | ref Block256<uint> unpack32<ulong>(ReadOnlySpan<ulong> src, in Block256<uint> dst, int block)                 | 48 83 ec 28 c5 f8 77 48 8b 01 49 63 c8 48 8b 04 c8 41 c1 e0 03 41 8b c8 48 83 c1 08 44 8b 4a 08 49 3b c9 0f 87 4d 01 00 00 48 8b 0a 4d 63 c0 4a 8d 0c 81 45 33 c0 4c 89 44 24 20 4c 89 44 24 20 4c 8d 44 24 20 44 0f b6 c8 49 ba 01 01 01 01 01 01 01 01 c4 42 b3 f5 ca 4d 89 08 4d 8b c8 c4 c2 7d 31 01 4c 8b c9 c4 c1 7e 7f 01 4c 8b c8 49 c1 e9 08 45 0f b6 c9 c4 42 b3 f5 ca 4d 89 08 4d 8b c8 c4 c2 7d 31 01 4c 8d 49 20 c4 c1 7e 7f 01 4c 8b c8 49 c1 e9 10 45 0f b6 c9 c4 42 b3 f5 ca 4d 89 08 4d 8b c8 c4 c2 7d 31 01 4c 8d 49 40 c4 c1 7e 7f 01 4c 8b c8 49 c1 e9 18 45 0f b6 c9 c4 42 b3 f5 ca 4d 89 08 4d 8b c8 c4 c2 7d 31 01 4c 8d 49 60 c4 c1 7e 7f 01 4c 8b c8 49 c1 e9 20 45 0f b6 c9 c4 42 b3 f5 ca 4d 89 08 4d 8b c8 c4 c2 7d 31 01 4c 8d 89 80 00 00 00 c4 c1 7e 7f 01 4c 8b c8 49 c1 e9 28 45 0f b6 c9 c4 42 b3 f5 ca 4d 89 08 4d 8b c8 c4 c2 7d 31 01 4c 8d 89 a0 00 00 00 c4 c1 7e 7f 01 4c 8b c8 49 c1 e9 30 45 0f b6 c9 c4 42 b3 f5 ca 4d 89 08 4d 8b c8 c4 c2 7d 31 01 4c 8d 89 c0 00 00 00 c4 c1 7e 7f 01 48 c1 e8 38 0f b6 c0 c4 c2 fb f5 c2 49 89 00 c4 c2 7d 31 00 48 81 c1 e0 00 00 00 c5 fe 7f 01 48 8b c2 c5 f8 77 48 83 c4 28 c3 e8 8d 50 19 ff cc cc 00 00 00 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 00 00 00
132       | 7ff7c85afaa0h   | 147     | hex://intrinsics/bitpack?pack32#pack32_(32u~in,n8)                                                            | byte pack32(in uint src, N8 n)                                                                                | 50 c5 f8 77 90 c5 ff f0 01 c4 e3 7d 19 c1 00 c4 e3 7d 19 c0 01 c7 44 24 04 ff ff 00 00 48 8d 44 24 04 c4 e2 79 58 54 24 04 c5 f1 db ca c5 f9 db c2 c4 e2 71 2b c0 c5 f0 57 c9 c7 04 24 ff 00 00 00 48 8d 04 24 c4 e2 79 79 14 24 c5 f9 db c2 c5 f1 db ca c5 f9 67 c1 b8 07 00 00 00 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 0f b6 c0 c5 f8 77 48 83 c4 08 c3 cc cc cc cc cc cc cc cc cc cc 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
133       | 7ff7c85afb40h   | 375     | hex://intrinsics/bitpack?pack32#pack32_(32u~in,n16)                                                           | ushort pack32(in uint src, N16 n)                                                                             | 50 c5 f8 77 90 48 8b c1 c5 ff f0 00 48 83 c1 20 c5 ff f0 09 c7 44 24 04 ff ff 00 00 48 8d 44 24 04 c4 e2 7d 58 54 24 04 c5 fd db c2 c5 f5 db ca c4 e2 7d 2b c1 c4 e3 fd 00 c0 d8 c4 e3 7d 19 c1 00 c4 e3 7d 19 c0 01 c7 04 24 ff 00 00 00 48 8d 04 24 c4 e2 79 79 14 24 c5 f1 db ca c5 f9 db c2 c5 f1 67 c0 b8 07 00 00 00 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c5 f8 77 48 83 c4 08 c3 cc cc cc cc cc cc cc cc cc cc 00 00 19 01 01 00 01 02 00 00 40 00 00 00 20 bf 80 c8 f7 7f 00 00 48 83 ec 18 c5 f8 77 48 8b c1 c5 ff f0 00 48 8d 41 20 c5 ff f0 08 c7 44 24 14 ff ff 00 00 48 8d 44 24 14 c4 e2 7d 58 54 24 14 c5 fd db c2 c5 f5 db ca c4 e2 7d 2b c1 c4 e3 fd 00 c0 d8 48 8d 41 40 c5 ff f0 08 48 83 c1 60 c5 ff f0 11 c7 44 24 10 ff ff 00 00 48 8d 44 24 10 c4 e2 7d 58 5c 24 10 c5 f5 db cb c5 ed db d3 c4 e2 75 2b ca c4 e3 fd 00 c9 d8 c7 44 24 0c ff 00 00 00 48 8d 44 24 0c c4 e2 7d 79 54 24 0c c5 fd db c2 c5 f5 db ca c5 fd 67 c1 c4 e3 fd 00 c0 d8 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 48 83 c4 18 c3 cc cc cc cc cc cc cc cc cc cc cc cc cc cc 00 00 00 19 04 01 00 04 22 00 00 40 00 00 00 00 00 00 00 00 00 00
134       | 7ff7c85afbe0h   | 215     | hex://intrinsics/bitpack?pack32#pack32_(32u~in,n32)                                                           | uint pack32(in uint src, N32 n)                                                                               | 48 83 ec 18 c5 f8 77 48 8b c1 c5 ff f0 00 48 8d 41 20 c5 ff f0 08 c7 44 24 14 ff ff 00 00 48 8d 44 24 14 c4 e2 7d 58 54 24 14 c5 fd db c2 c5 f5 db ca c4 e2 7d 2b c1 c4 e3 fd 00 c0 d8 48 8d 41 40 c5 ff f0 08 48 83 c1 60 c5 ff f0 11 c7 44 24 10 ff ff 00 00 48 8d 44 24 10 c4 e2 7d 58 5c 24 10 c5 f5 db cb c5 ed db d3 c4 e2 75 2b ca c4 e3 fd 00 c9 d8 c7 44 24 0c ff 00 00 00 48 8d 44 24 0c c4 e2 7d 79 54 24 0c c5 fd db c2 c5 f5 db ca c5 fd 67 c1 c4 e3 fd 00 c0 d8 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 48 83 c4 18 c3 cc cc cc cc cc cc cc cc cc cc cc cc cc cc 00 00 00 19 04 01 00 04 22 00 00 40 00 00 00 00 00 00 00 00 00 00
135       | 7ff7c85afcc0h   | 531     | hex://intrinsics/bitpack?pack32#pack32_(32u~in,n64)                                                           | ulong pack32(in uint src, N64 n)                                                                              | 48 83 ec 18 c5 f8 77 48 8b c1 c5 ff f0 00 48 8d 41 20 c5 ff f0 08 c7 44 24 14 ff ff 00 00 48 8d 44 24 14 c4 e2 7d 58 54 24 14 c5 fd db c2 c5 f5 db ca c4 e2 7d 2b c1 c4 e3 fd 00 c0 d8 48 8d 41 40 c5 ff f0 08 48 8d 41 60 c5 ff f0 10 c7 44 24 10 ff ff 00 00 48 8d 44 24 10 c4 e2 7d 58 5c 24 10 c5 f5 db cb c5 ed db d3 c4 e2 75 2b ca c4 e3 fd 00 c9 d8 c7 44 24 0c ff 00 00 00 48 8d 44 24 0c c4 e2 7d 79 54 24 0c c5 fd db c2 c5 f5 db ca c5 fd 67 c1 c4 e3 fd 00 c0 d8 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 8b c0 48 8d 91 80 00 00 00 c5 ff f0 0a 48 8d 91 a0 00 00 00 c5 ff f0 12 c7 44 24 08 ff ff 00 00 48 8d 54 24 08 c4 e2 7d 58 44 24 08 c5 f5 db c8 c5 ed db c0 c4 e2 75 2b c0 c4 e3 fd 00 c0 d8 48 8d 91 c0 00 00 00 c5 ff f0 0a 48 81 c1 e0 00 00 00 c5 ff f0 11 c7 44 24 04 ff ff 00 00 48 8d 54 24 04 c4 e2 7d 58 5c 24 04 c5 f5 db cb c5 ed db d3 c4 e2 75 2b ca c4 e3 fd 00 c9 d8 c7 04 24 ff 00 00 00 48 8d 14 24 c4 e2 7d 79 14 24 c5 fd db c2 c5 f5 db ca c5 fd 67 c1 c4 e3 fd 00 c0 d8 ba 07 00 00 00 c5 f9 6e ca c5 fd f3 c1 c5 fd d7 d0 8b d2 48 c1 e2 20 48 0b c2 c5 f8 77 48 83 c4 18 c3 cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc 19 04 01 00 04 22 00 00 40 00 00 00 00 00 00 00 c8 bf 80 c8 f7 7f 00 00 50 c5 f8 77 33 c0 48 89 04 24 33 c0 48 89 04 24 48 8d 04 24 45 33 c9 85 d2 7e 3d 4d 63 d1 46 0f b6 14 11 49 bb 01 01 01 01 01 01 01 01 c4 42 ab f5 d3 4c 89 10 4c 8b d0 c4 c2 7d 31 02 45 8b d1 41 c1 e2 03 4d 63 d2 4f 8d 14 90 c4 c1 7e 7f 02 41 ff c1 44 3b ca 7c c3 c5 f8 77 48 83 c4 08 c3 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
136       | 7ff7c85afe60h   | 115     | hex://intrinsics/bitpack?unpack32#unpack32_(8u~in,32i,32u~ref)                                                | void unpack32(in byte src, int count, ref uint target)                                                        | 50 c5 f8 77 33 c0 48 89 04 24 33 c0 48 89 04 24 48 8d 04 24 45 33 c9 85 d2 7e 3d 4d 63 d1 46 0f b6 14 11 49 bb 01 01 01 01 01 01 01 01 c4 42 ab f5 d3 4c 89 10 4c 8b d0 c4 c2 7d 31 02 45 8b d1 41 c1 e2 03 4d 63 d2 4f 8d 14 90 c4 c1 7e 7f 02 41 ff c1 44 3b ca 7c c3 c5 f8 77 48 83 c4 08 c3 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
137       | 7ff7c85afee0h   | 119     | hex://intrinsics/bitpack?unpack32#unpack32_(8u~in,32i,b256x32u~in)                                            | void unpack32(in byte src, int blocks, in Block256<uint> target)                                              | 50 c5 f8 77 33 c0 48 89 04 24 33 c0 48 89 04 24 48 8d 04 24 45 33 c9 85 d2 7e 40 4d 63 d1 46 0f b6 14 11 49 bb 01 01 01 01 01 01 01 01 c4 42 ab f5 d3 4c 89 10 4c 8b d0 c4 c2 7d 31 02 4d 8b 10 45 8b d9 41 c1 e3 03 4d 63 db 4f 8d 14 9a c4 c1 7e 7f 02 41 ff c1 44 3b ca 7c c0 c5 f8 77 48 83 c4 08 c3 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
138       | 7ff7c85aff60h   | 231     | hex://intrinsics/bitpack?unpack8#unpack8_(8u,8u~ref)                                                          | void unpack8(byte packed, ref byte unpacked)                                                                  | 0f 1f 44 00 00 0f b6 c1 48 b9 01 01 01 01 01 01 01 01 c4 e2 fb f5 c1 48 89 02 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 20 c1 80 c8 f7 7f 00 00 0f 1f 44 00 00 0f b7 c1 0f b6 c8 49 b8 01 01 01 01 01 01 01 01 c4 c2 f3 f5 c8 48 89 0a 48 83 c2 08 c1 f8 08 0f b6 c0 c4 c2 fb f5 c0 48 89 02 c3 19 00 00 00 40 00 00 00 78 c1 80 c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 49 b8 01 01 01 01 01 01 01 01 c4 c2 fb f5 c0 48 89 02 48 8d 42 08 44 8b c1 41 c1 e8 08 45 0f b6 c0 49 b9 01 01 01 01 01 01 01 01 c4 42 bb f5 c1 4c 89 00 48 8d 42 10 44 8b c1 41 c1 e8 10 45 0f b6 c0 c4 42 bb f5 c1 4c 89 00 48 83 c2 18 c1 e9 18 0f b6 c1 c4 c2 fb f5 c1 48 89 02 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
139       | 7ff7c85aff90h   | 183     | hex://intrinsics/bitpack?unpack8#unpack8_(16u,8u~ref)                                                         | void unpack8(ushort packed, ref byte unpacked)                                                                | 0f 1f 44 00 00 0f b7 c1 0f b6 c8 49 b8 01 01 01 01 01 01 01 01 c4 c2 f3 f5 c8 48 89 0a 48 83 c2 08 c1 f8 08 0f b6 c0 c4 c2 fb f5 c0 48 89 02 c3 19 00 00 00 40 00 00 00 78 c1 80 c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 49 b8 01 01 01 01 01 01 01 01 c4 c2 fb f5 c0 48 89 02 48 8d 42 08 44 8b c1 41 c1 e8 08 45 0f b6 c0 49 b9 01 01 01 01 01 01 01 01 c4 42 bb f5 c1 4c 89 00 48 8d 42 10 44 8b c1 41 c1 e8 10 45 0f b6 c0 c4 42 bb f5 c1 4c 89 00 48 83 c2 18 c1 e9 18 0f b6 c1 c4 c2 fb f5 c1 48 89 02 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
140       | 7ff7c85affd0h   | 119     | hex://intrinsics/bitpack?unpack8#unpack8_(32u,8u~ref)                                                         | void unpack8(uint packed, ref byte unpacked)                                                                  | 0f 1f 44 00 00 0f b6 c1 49 b8 01 01 01 01 01 01 01 01 c4 c2 fb f5 c0 48 89 02 48 8d 42 08 44 8b c1 41 c1 e8 08 45 0f b6 c0 49 b9 01 01 01 01 01 01 01 01 c4 42 bb f5 c1 4c 89 00 48 8d 42 10 44 8b c1 41 c1 e8 10 45 0f b6 c0 c4 42 bb f5 c1 4c 89 00 48 83 c2 18 c1 e9 18 0f b6 c1 c4 c2 fb f5 c1 48 89 02 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
141       | 7ff7c85b0050h   | 323     | hex://intrinsics/bitpack?unpack8#unpack8_(64u,8u~ref)                                                         | void unpack8(ulong packed, ref byte unpacked)                                                                 | 0f 1f 44 00 00 8b c1 44 0f b6 c0 49 b9 01 01 01 01 01 01 01 01 c4 42 bb f5 c1 4c 89 02 4c 8d 42 08 44 8b c8 41 c1 e9 08 45 0f b6 c9 49 ba 01 01 01 01 01 01 01 01 c4 42 b3 f5 ca 4d 89 08 4c 8d 42 10 44 8b c8 41 c1 e9 10 45 0f b6 c9 c4 42 b3 f5 ca 4d 89 08 4c 8d 42 18 c1 e8 18 0f b6 c0 c4 c2 fb f5 c2 49 89 00 48 c1 e9 20 8b c1 48 83 c2 20 0f b6 c8 c4 c2 f3 f5 ca 48 89 0a 48 8d 4a 08 44 8b c0 41 c1 e8 08 45 0f b6 c0 c4 42 bb f5 c2 4c 89 01 48 8d 4a 10 44 8b c0 41 c1 e8 10 45 0f b6 c0 c4 42 bb f5 c2 4c 89 01 48 83 c2 18 c1 e8 18 0f b6 c0 c4 c2 fb f5 c2 48 89 02 c3 00 00 00 19 00 00 00 40 00 00 00 88 c2 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 02 0f b6 d1 48 b9 01 01 01 01 01 01 01 01 c4 e2 eb f5 d1 48 89 10 c3 00 00 19 00 00 00 40 00 00 00 e0 c2 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 02 0f b7 d1 0f b6 ca 49 b8 01 01 01 01 01 01 01 01 c4 c2 f3 f5 c8 48 89 08 48 83 c0 08 c1 fa 08 0f b6 d2 c4 c2 eb f5 d0 48 89 10 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
142       | 7ff7c85b0120h   | 115     | hex://intrinsics/bitpack?unpack8#unpack8_(8u,span8u)                                                          | void unpack8(byte packed, Span<byte> unpacked)                                                                | 0f 1f 44 00 00 48 8b 02 0f b6 d1 48 b9 01 01 01 01 01 01 01 01 c4 e2 eb f5 d1 48 89 10 c3 00 00 19 00 00 00 40 00 00 00 e0 c2 80 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 02 0f b7 d1 0f b6 ca 49 b8 01 01 01 01 01 01 01 01 c4 c2 f3 f5 c8 48 89 08 48 83 c0 08 c1 fa 08 0f b6 d2 c4 c2 eb f5 d0 48 89 10 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
143       | 7ff7c85b0150h   | 67      | hex://intrinsics/bitpack?unpack8#unpack8_(16u,span8u)                                                         | void unpack8(ushort packed, Span<byte> unpacked)                                                              | 0f 1f 44 00 00 48 8b 02 0f b7 d1 0f b6 ca 49 b8 01 01 01 01 01 01 01 01 c4 c2 f3 f5 c8 48 89 08 48 83 c0 08 c1 fa 08 0f b6 d2 c4 c2 eb f5 d0 48 89 10 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
144       | 7ff7c85b01a0h   | 119     | hex://intrinsics/bitpack?unpack8#unpack8_(32u,span8u)                                                         | void unpack8(uint packed, Span<byte> unpacked)                                                                | 0f 1f 44 00 00 48 8b 02 0f b6 d1 49 b8 01 01 01 01 01 01 01 01 c4 c2 eb f5 d0 48 89 10 48 8d 50 08 44 8b c1 41 c1 e8 08 45 0f b6 c0 49 b9 01 01 01 01 01 01 01 01 c4 42 bb f5 c1 4c 89 02 48 8d 50 10 44 8b c1 41 c1 e8 10 45 0f b6 c0 c4 42 bb f5 c1 4c 89 02 48 83 c0 18 c1 e9 18 0f b6 d1 c4 c2 eb f5 d1 48 89 10 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
