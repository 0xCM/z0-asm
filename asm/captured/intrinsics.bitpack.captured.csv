Sequence  | Address         | Length  | Uri                                                                                                           | OpSig                                                                                                         | Data
0         | 7ff7c85e0c10h   | 179     | hex://intrinsics/bitpack?pack#pack_g[8u](8u)                                                                  | byte pack<byte>(Span<bit> src, byte t)                                                                        | 48 83 ec 28 c5 f8 77 48 8b 01 8b 51 08 48 83 fa 08 0f 82 79 00 00 00 c5 ff f0 00 c4 e3 7d 19 c1 00 c4 e3 7d 19 c0 01 c7 44 24 24 ff ff 00 00 48 8d 44 24 24 c4 e2 79 58 54 24 24 c5 f1 db ca c5 f9 db c2 c4 e2 71 2b c0 c5 f0 57 c9 c7 44 24 20 ff 00 00 00 48 8d 44 24 20 c4 e2 79 79 54 24 20 c5 f9 db c2 c5 f1 db ca c5 f9 67 c1 b8 07 00 00 00 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 0f b6 c0 c5 f8 77 48 83 c4 28 c3 e8 80 ef da 5e e8 93 3d 17 ff cc cc cc cc cc cc cc cc cc cc cc 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 00 00 00
1         | 7ff7c85e0cd0h   | 1207    | hex://intrinsics/bitpack?pack#pack_g[16u](16u)                                                                | ushort pack<ushort>(Span<bit> src, ushort t)                                                                  | 48 83 ec 28 c5 f8 77 48 8b 01 8b 51 08 48 83 fa 10 0f 82 83 00 00 00 48 8b d0 c5 ff f0 02 48 83 c0 20 c5 ff f0 08 c7 44 24 24 ff ff 00 00 48 8d 44 24 24 c4 e2 7d 58 54 24 24 c5 fd db c2 c5 f5 db ca c4 e2 7d 2b c1 c4 e3 fd 00 c0 d8 c4 e3 7d 19 c1 00 c4 e3 7d 19 c0 01 c7 44 24 20 ff 00 00 00 48 8d 44 24 20 c4 e2 79 79 54 24 20 c5 f1 db ca c5 f9 db c2 c5 f1 67 c0 b8 07 00 00 00 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c5 f8 77 48 83 c4 28 c3 e8 b6 ee da 5e e8 c9 3c 17 ff cc cc cc cc cc cc cc cc cc cc cc 00 00 19 04 01 00 04 42 00 00 40 00 00 00 f0 d8 8b c8 f7 7f 00 00 48 83 ec 38 c5 f8 77 48 8b 01 8b 51 08 48 83 fa 20 0f 82 b1 00 00 00 48 8b d0 c5 ff f0 02 48 8d 50 20 c5 ff f0 0a c7 44 24 34 ff ff 00 00 48 8d 54 24 34 c4 e2 7d 58 54 24 34 c5 fd db c2 c5 f5 db ca c4 e2 7d 2b c1 c4 e3 fd 00 c0 d8 48 8d 50 40 c5 ff f0 0a 48 83 c0 60 c5 ff f0 10 c7 44 24 30 ff ff 00 00 48 8d 44 24 30 c4 e2 7d 58 5c 24 30 c5 f5 db cb c5 ed db d3 c4 e2 75 2b ca c4 e3 fd 00 c9 d8 c7 44 24 2c ff 00 00 00 48 8d 44 24 2c c4 e2 7d 79 54 24 2c c5 fd db c2 c5 f5 db ca c5 fd 67 c1 c4 e3 fd 00 c0 d8 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 48 83 c4 38 c3 e8 c8 ed da 5e e8 db 3b 17 ff cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc 19 04 01 00 04 62 00 00 40 00 00 00 48 d9 8b c8 f7 7f 00 00 48 83 ec 38 c5 f8 77 48 8b 01 8b 51 08 48 83 fa 40 0f 82 6f 01 00 00 48 8b d0 c5 ff f0 02 48 8d 50 20 c5 ff f0 0a c7 44 24 34 ff ff 00 00 48 8d 54 24 34 c4 e2 7d 58 54 24 34 c5 fd db c2 c5 f5 db ca c4 e2 7d 2b c1 c4 e3 fd 00 c0 d8 48 8d 50 40 c5 ff f0 0a 48 8d 50 60 c5 ff f0 12 c7 44 24 30 ff ff 00 00 48 8d 54 24 30 c4 e2 7d 58 5c 24 30 c5 f5 db cb c5 ed db d3 c4 e2 75 2b ca c4 e3 fd 00 c9 d8 c7 44 24 2c ff 00 00 00 48 8d 54 24 2c c4 e2 7d 79 54 24 2c c5 fd db c2 c5 f5 db ca c5 fd 67 c1 c4 e3 fd 00 c0 d8 ba 07 00 00 00 c5 f9 6e ca c5 fd f3 c1 c5 fd d7 d0 8b d2 48 8d 88 80 00 00 00 c5 ff f0 09 48 8d 88 a0 00 00 00 c5 ff f0 11 c7 44 24 28 ff ff 00 00 48 8d 4c 24 28 c4 e2 7d 58 44 24 28 c5 f5 db c8 c5 ed db c0 c4 e2 75 2b c0 c4 e3 fd 00 c0 d8 48 8d 88 c0 00 00 00 c5 ff f0 09 48 05 e0 00 00 00 c5 ff f0 10 c7 44 24 24 ff ff 00 00 48 8d 44 24 24 c4 e2 7d 58 5c 24 24 c5 f5 db cb c5 ed db d3 c4 e2 75 2b ca c4 e3 fd 00 c9 d8 c7 44 24 20 ff 00 00 00 48 8d 44 24 20 c4 e2 7d 79 54 24 20 c5 fd db c2 c5 f5 db ca c5 fd 67 c1 c4 e3 fd 00 c0 d8 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 48 83 c4 38 c3 e8 1a ec da 5e e8 2d 3a 17 ff cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc 19 04 01 00 04 62 00 00 40 00 00 00 00 00 00 00 f8 db 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 8b 04 10 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 60 dc 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 8b 04 10 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 c8 dc 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 50 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 30 dd 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 50 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 98 dd 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 18 de 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 c8 de 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 8b 00 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
2         | 7ff7c85e0d90h   | 1015    | hex://intrinsics/bitpack?pack#pack_g[32u](32u)                                                                | uint pack<uint>(Span<bit> src, uint t)                                                                        | 48 83 ec 38 c5 f8 77 48 8b 01 8b 51 08 48 83 fa 20 0f 82 b1 00 00 00 48 8b d0 c5 ff f0 02 48 8d 50 20 c5 ff f0 0a c7 44 24 34 ff ff 00 00 48 8d 54 24 34 c4 e2 7d 58 54 24 34 c5 fd db c2 c5 f5 db ca c4 e2 7d 2b c1 c4 e3 fd 00 c0 d8 48 8d 50 40 c5 ff f0 0a 48 83 c0 60 c5 ff f0 10 c7 44 24 30 ff ff 00 00 48 8d 44 24 30 c4 e2 7d 58 5c 24 30 c5 f5 db cb c5 ed db d3 c4 e2 75 2b ca c4 e3 fd 00 c9 d8 c7 44 24 2c ff 00 00 00 48 8d 44 24 2c c4 e2 7d 79 54 24 2c c5 fd db c2 c5 f5 db ca c5 fd 67 c1 c4 e3 fd 00 c0 d8 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 48 83 c4 38 c3 e8 c8 ed da 5e e8 db 3b 17 ff cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc 19 04 01 00 04 62 00 00 40 00 00 00 48 d9 8b c8 f7 7f 00 00 48 83 ec 38 c5 f8 77 48 8b 01 8b 51 08 48 83 fa 40 0f 82 6f 01 00 00 48 8b d0 c5 ff f0 02 48 8d 50 20 c5 ff f0 0a c7 44 24 34 ff ff 00 00 48 8d 54 24 34 c4 e2 7d 58 54 24 34 c5 fd db c2 c5 f5 db ca c4 e2 7d 2b c1 c4 e3 fd 00 c0 d8 48 8d 50 40 c5 ff f0 0a 48 8d 50 60 c5 ff f0 12 c7 44 24 30 ff ff 00 00 48 8d 54 24 30 c4 e2 7d 58 5c 24 30 c5 f5 db cb c5 ed db d3 c4 e2 75 2b ca c4 e3 fd 00 c9 d8 c7 44 24 2c ff 00 00 00 48 8d 54 24 2c c4 e2 7d 79 54 24 2c c5 fd db c2 c5 f5 db ca c5 fd 67 c1 c4 e3 fd 00 c0 d8 ba 07 00 00 00 c5 f9 6e ca c5 fd f3 c1 c5 fd d7 d0 8b d2 48 8d 88 80 00 00 00 c5 ff f0 09 48 8d 88 a0 00 00 00 c5 ff f0 11 c7 44 24 28 ff ff 00 00 48 8d 4c 24 28 c4 e2 7d 58 44 24 28 c5 f5 db c8 c5 ed db c0 c4 e2 75 2b c0 c4 e3 fd 00 c0 d8 48 8d 88 c0 00 00 00 c5 ff f0 09 48 05 e0 00 00 00 c5 ff f0 10 c7 44 24 24 ff ff 00 00 48 8d 44 24 24 c4 e2 7d 58 5c 24 24 c5 f5 db cb c5 ed db d3 c4 e2 75 2b ca c4 e3 fd 00 c9 d8 c7 44 24 20 ff 00 00 00 48 8d 44 24 20 c4 e2 7d 79 54 24 20 c5 fd db c2 c5 f5 db ca c5 fd 67 c1 c4 e3 fd 00 c0 d8 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 48 83 c4 38 c3 e8 1a ec da 5e e8 2d 3a 17 ff cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc 19 04 01 00 04 62 00 00 40 00 00 00 00 00 00 00 f8 db 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 8b 04 10 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 60 dc 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 8b 04 10 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 c8 dc 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 50 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 30 dd 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 50 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 98 dd 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 18 de 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 c8 de 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 8b 00 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
3         | 7ff7c85e0e80h   | 775     | hex://intrinsics/bitpack?pack#pack_g[64u](64u)                                                                | ulong pack<ulong>(Span<bit> src, ulong t)                                                                     | 48 83 ec 38 c5 f8 77 48 8b 01 8b 51 08 48 83 fa 40 0f 82 6f 01 00 00 48 8b d0 c5 ff f0 02 48 8d 50 20 c5 ff f0 0a c7 44 24 34 ff ff 00 00 48 8d 54 24 34 c4 e2 7d 58 54 24 34 c5 fd db c2 c5 f5 db ca c4 e2 7d 2b c1 c4 e3 fd 00 c0 d8 48 8d 50 40 c5 ff f0 0a 48 8d 50 60 c5 ff f0 12 c7 44 24 30 ff ff 00 00 48 8d 54 24 30 c4 e2 7d 58 5c 24 30 c5 f5 db cb c5 ed db d3 c4 e2 75 2b ca c4 e3 fd 00 c9 d8 c7 44 24 2c ff 00 00 00 48 8d 54 24 2c c4 e2 7d 79 54 24 2c c5 fd db c2 c5 f5 db ca c5 fd 67 c1 c4 e3 fd 00 c0 d8 ba 07 00 00 00 c5 f9 6e ca c5 fd f3 c1 c5 fd d7 d0 8b d2 48 8d 88 80 00 00 00 c5 ff f0 09 48 8d 88 a0 00 00 00 c5 ff f0 11 c7 44 24 28 ff ff 00 00 48 8d 4c 24 28 c4 e2 7d 58 44 24 28 c5 f5 db c8 c5 ed db c0 c4 e2 75 2b c0 c4 e3 fd 00 c0 d8 48 8d 88 c0 00 00 00 c5 ff f0 09 48 05 e0 00 00 00 c5 ff f0 10 c7 44 24 24 ff ff 00 00 48 8d 44 24 24 c4 e2 7d 58 5c 24 24 c5 f5 db cb c5 ed db d3 c4 e2 75 2b ca c4 e3 fd 00 c9 d8 c7 44 24 20 ff 00 00 00 48 8d 44 24 20 c4 e2 7d 79 54 24 20 c5 fd db c2 c5 f5 db ca c5 fd 67 c1 c4 e3 fd 00 c0 d8 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 48 83 c4 38 c3 e8 1a ec da 5e e8 2d 3a 17 ff cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc 19 04 01 00 04 62 00 00 40 00 00 00 00 00 00 00 f8 db 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 8b 04 10 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 60 dc 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 8b 04 10 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 c8 dc 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 50 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 30 dd 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 50 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 98 dd 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 18 de 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 c8 de 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 8b 00 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
4         | 7ff7c85e1040h   | 327     | hex://intrinsics/bitpack?pack8#pack8_g[8u](b32x8u~in,32i)                                                     | byte pack8<byte>(in Block32<byte> src, int block)                                                             | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 8b 04 10 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 60 dc 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 8b 04 10 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 c8 dc 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 50 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 30 dd 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 50 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 98 dd 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 18 de 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 c8 de 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 8b 00 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
5         | 7ff7c85e1070h   | 279     | hex://intrinsics/bitpack?pack8#pack8_g[8i](b32x8i~in,32i)                                                     | byte pack8<sbyte>(in Block32<sbyte> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 8b 04 10 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 c8 dc 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 50 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 30 dd 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 50 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 98 dd 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 18 de 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 c8 de 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 8b 00 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
6         | 7ff7c85e10a0h   | 231     | hex://intrinsics/bitpack?pack8#pack8_g[16u](b32x16u~in,32i)                                                   | byte pack8<ushort>(in Block32<ushort> src, int block)                                                         | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 50 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 30 dd 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 50 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 98 dd 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 18 de 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 c8 de 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 8b 00 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
7         | 7ff7c85e10d0h   | 183     | hex://intrinsics/bitpack?pack8#pack8_g[16i](b32x16i~in,32i)                                                   | byte pack8<short>(in Block32<short> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 50 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 98 dd 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 18 de 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 c8 de 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 8b 00 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
8         | 7ff7c85e1100h   | 135     | hex://intrinsics/bitpack?pack8#pack8_g[32u](b32x32u~in,32i)                                                   | byte pack8<uint>(in Block32<uint> src, int block)                                                             | 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 18 de 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 c8 de 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 8b 00 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
9         | 7ff7c85e1130h   | 87      | hex://intrinsics/bitpack?pack8#pack8_g[32i](b32x32i~in,32i)                                                   | byte pack8<int>(in Block32<int> src, int block)                                                               | 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 90 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 c8 de 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 8b 00 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
10        | 7ff7c85e1160h   | 39      | hex://intrinsics/bitpack?pack8#pack8_g[64u](b32x64u~in,32i)                                                   | byte pack8<ulong>(in Block32<ulong> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 8b 00 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
11        | 7ff7c85e1190h   | 1064    | hex://intrinsics/bitpack?pack8#pack8_g[64i](b32x64i~in,32i)                                                   | byte pack8<long>(in Block32<long> src, int block)                                                             | 0f 1f 44 00 00 48 8b 01 8b 00 ba 01 01 01 01 c4 e2 7a f5 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 83 44 c8 5e 5e 00 1b e8 7b 44 c8 5e 5e 01 1a e8 73 44 c8 5e 5e 02 19 e8 6b 44 c8 5e 5e 03 18 e8 63 44 c8 5e 5e 04 17 e8 5b 44 c8 5e 5e 05 16 e8 53 44 c8 5e 5e 06 15 e8 4b 44 c8 5e 5e 07 14 e8 43 44 c8 5e 5e 08 13 e8 3b 44 c8 5e 5e 09 12 e8 33 44 c8 5e 5e 0a 11 e8 2b 44 c8 5e 5e 0b 10 e8 23 44 c8 5e 5e 0c 0f e8 1b 44 c8 5e 5e 0d 0e e8 13 44 c8 5e 5e 0e 0d e8 0b 44 c8 5e 5e 0f 0c e8 03 44 c8 5e 5e 10 0b e8 fb 43 c8 5e 5e 11 0a e8 f3 43 c8 5e 5e 12 09 e8 eb 43 c8 5e 5e 13 08 e8 e3 43 c8 5e 5e 14 07 e8 db 43 c8 5e 5e 15 06 e8 d3 43 c8 5e 5e 16 05 e8 cb 43 c8 5e 5e 17 04 e8 c3 43 c8 5e 5e 18 03 e8 bb 43 c8 5e 5e 19 02 e8 b3 43 c8 5e 5e 1a 01 e8 ab 43 c8 5e 5e 1b 00 70 53 8c c8 f7 7f 00 00 e8 9b 43 c8 5e 5e 00 12 e8 93 43 c8 5e 5e 01 11 e8 8b 43 c8 5e 5e 02 10 e8 83 43 c8 5e 5e 03 0f e8 7b 43 c8 5e 5e 04 0e e8 73 43 c8 5e 5e 05 0d e8 6b 43 c8 5e 5e 06 0c e8 63 43 c8 5e 5e 07 0b e8 5b 43 c8 5e 5e 08 0a e8 53 43 c8 5e 5e 09 09 e8 4b 43 c8 5e 5e 0a 08 e8 43 43 c8 5e 5e 0b 07 e8 3b 43 c8 5e 5e 0c 06 e8 33 43 c8 5e 5e 0d 05 e8 2b 43 c8 5e 5e 0e 04 e8 23 43 c8 5e 5e 0f 03 e8 1b 43 c8 5e 5e 10 02 e8 13 43 c8 5e 5e 14 01 e8 0b 43 c8 5e 5e 15 00 80 52 8c c8 f7 7f 00 00 e8 fb 42 c8 5e 5e 00 00 e0 58 8c c8 f7 7f 00 00 e8 eb 42 c8 5e 5e 00 00 40 59 8c c8 f7 7f 00 00 e8 db 42 c8 5e 5e 00 00 a0 59 8c c8 f7 7f 00 00 e8 cb 42 c8 5e 5e 00 00 00 5a 8c c8 f7 7f 00 00 e8 bb 42 c8 5e 5e 00 00 60 5a 8c c8 f7 7f 00 00 e8 ab 42 c8 5e 5e 00 00 c0 5a 8c c8 f7 7f 00 00 e8 9b 42 c8 5e 5e 00 00 20 5b 8c c8 f7 7f 00 00 e8 8b 42 c8 5e 5e 00 01 e8 83 42 c8 5e 5e 01 00 80 5d 8c c8 f7 7f 00 00 e8 73 42 c8 5e 5e 00 1b e8 6b 42 c8 5e 5e 01 1a e8 63 42 c8 5e 5e 02 19 e8 5b 42 c8 5e 5e 03 18 e8 53 42 c8 5e 5e 04 17 e8 4b 42 c8 5e 5e 05 16 e8 43 42 c8 5e 5e 06 15 e8 3b 42 c8 5e 5e 07 14 e8 33 42 c8 5e 5e 08 13 e8 2b 42 c8 5e 5e 09 12 e8 23 42 c8 5e 5e 0a 11 e8 1b 42 c8 5e 5e 0b 10 e8 13 42 c8 5e 5e 0c 0f e8 0b 42 c8 5e 5e 0d 0e e8 03 42 c8 5e 5e 0e 0d e8 fb 41 c8 5e 5e 0f 0c e8 f3 41 c8 5e 5e 10 0b e8 eb 41 c8 5e 5e 11 0a e8 e3 41 c8 5e 5e 12 09 e8 db 41 c8 5e 5e 13 08 e8 d3 41 c8 5e 5e 14 07 e8 cb 41 c8 5e 5e 15 06 e8 c3 41 c8 5e 5e 16 05 e8 bb 41 c8 5e 5e 17 04 e8 b3 41 c8 5e 5e 18 03 e8 ab 41 c8 5e 5e 19 02 e8 a3 41 c8 5e 5e 1a 01 e8 9b 41 c8 5e 5e 1b 00 70 5c 8c c8 f7 7f 00 00 e8 8b 41 c8 5e 5e 00 12 e8 83 41 c8 5e 5e 01 11 e8 7b 41 c8 5e 5e 02 10 e8 73 41 c8 5e 5e 03 0f e8 6b 41 c8 5e 5e 04 0e e8 63 41 c8 5e 5e 05 0d e8 5b 41 c8 5e 5e 06 0c e8 53 41 c8 5e 5e 07 0b e8 4b 41 c8 5e 5e 08 0a e8 43 41 c8 5e 5e 09 09 e8 3b 41 c8 5e 5e 0a 08 e8 33 41 c8 5e 5e 0b 07 e8 2b 41 c8 5e 5e 0c 06 e8 23 41 c8 5e 5e 0d 05 e8 1b 41 c8 5e 5e 0e 04 e8 13 41 c8 5e 5e 0f 03 e8 0b 41 c8 5e 5e 10 02 e8 03 41 c8 5e 5e 14 01 e8 fb 40 c8 5e 5e 15 00 80 5b 8c c8 f7 7f 00 00 e8 eb 40 c8 5e 5e 00 00 c0 60 8c c8 f7 7f 00 00 e8 db 40 c8 5e 5e 00 00 20 61 8c c8 f7 7f 00 00 e8 cb 40 c8 5e 5e 00 00 80 61 8c c8 f7 7f 00 00 e8 bb 40 c8 5e 5e 00 00 e0 61 8c c8 f7 7f 00 00 e8 ab 40 c8 5e 5e 00 00 40 62 8c c8 f7 7f 00 00 e8 9b 40 c8 5e 5e 00 00 a0 62 8c c8 f7 7f 00 00 00 00 00 00 00 00 00 00
12        | 7ff7c85e15c0h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[8u](b64x8u~in,32i)                                                     | byte pack8<byte>(in Block64<byte> src, int block)                                                             | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 0f b6 04 10 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
13        | 7ff7c85e1600h   | 119     | hex://intrinsics/bitpack?pack8#pack8_g[8i](b64x8i~in,32i)                                                     | byte pack8<sbyte>(in Block64<sbyte> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 0f be 04 10 48 63 c0 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 20 e4 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 0f b7 04 50 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
14        | 7ff7c85e1640h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[16u](b64x16u~in,32i)                                                   | byte pack8<ushort>(in Block64<ushort> src, int block)                                                         | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 0f b7 04 50 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
15        | 7ff7c85e1680h   | 115     | hex://intrinsics/bitpack?pack8#pack8_g[16i](b64x16i~in,32i)                                                   | byte pack8<short>(in Block64<short> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 0f bf 04 50 48 63 c0 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 f0 e4 8b c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 90 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
16        | 7ff7c85e16c0h   | 51      | hex://intrinsics/bitpack?pack8#pack8_g[32u](b64x32u~in,32i)                                                   | byte pack8<uint>(in Block64<uint> src, int block)                                                             | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 90 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
17        | 7ff7c85e1700h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[32i](b64x32i~in,32i)                                                   | byte pack8<int>(in Block64<int> src, int block)                                                               | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 8b 04 90 48 63 c0 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
18        | 7ff7c85e1740h   | 51      | hex://intrinsics/bitpack?pack8#pack8_g[64u](b64x64u~in,32i)                                                   | byte pack8<ulong>(in Block64<ulong> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 d0 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
19        | 7ff7c85e1780h   | 1080    | hex://intrinsics/bitpack?pack8#pack8_g[64i](b64x64i~in,32i)                                                   | byte pack8<long>(in Block64<long> src, int block)                                                             | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 d0 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 83 3e c8 5e 5e 00 00 00 63 8c c8 f7 7f 00 00 e8 73 3e c8 5e 5e 00 00 60 63 8c c8 f7 7f 00 00 e8 63 3e c8 5e 5e 00 00 c0 63 8c c8 f7 7f 00 00 e8 53 3e c8 5e 5e 00 00 20 64 8c c8 f7 7f 00 00 e8 43 3e c8 5e 5e 00 00 80 64 8c c8 f7 7f 00 00 e8 33 3e c8 5e 5e 00 00 e0 64 8c c8 f7 7f 00 00 e8 23 3e c8 5e 5e 00 00 40 65 8c c8 f7 7f 00 00 e8 13 3e c8 5e 5e 00 00 a0 65 8c c8 f7 7f 00 00 e8 03 3e c8 5e 5e 00 00 00 66 8c c8 f7 7f 00 00 e8 f3 3d c8 5e 5e 00 00 60 66 8c c8 f7 7f 00 00 e8 e3 3d c8 5e 5e 00 00 c0 66 8c c8 f7 7f 00 00 e8 d3 3d c8 5e 5e 00 00 20 67 8c c8 f7 7f 00 00 e8 c3 3d c8 5e 5e 00 00 80 67 8c c8 f7 7f 00 00 e8 b3 3d c8 5e 5e 00 00 e0 67 8c c8 f7 7f 00 00 e8 a3 3d c8 5e 5e 00 00 40 68 8c c8 f7 7f 00 00 e8 93 3d c8 5e 5e 00 00 a0 68 8c c8 f7 7f 00 00 e8 83 3d c8 5e 5e 00 00 00 69 8c c8 f7 7f 00 00 e8 73 3d c8 5e 5e 00 00 60 69 8c c8 f7 7f 00 00 e8 63 3d c8 5e 5e 00 00 c0 69 8c c8 f7 7f 00 00 e8 53 3d c8 5e 5e 00 00 20 6a 8c c8 f7 7f 00 00 e8 43 3d c8 5e 5e 00 00 80 6a 8c c8 f7 7f 00 00 e8 33 3d c8 5e 5e 00 00 e0 6a 8c c8 f7 7f 00 00 e8 23 3d c8 5e 5e 00 00 40 6b 8c c8 f7 7f 00 00 e8 13 3d c8 5e 5e 00 00 a0 6b 8c c8 f7 7f 00 00 e8 03 3d c8 5e 5e 00 00 00 6c 8c c8 f7 7f 00 00 e8 f3 3c c8 5e 5e 00 00 60 6c 8c c8 f7 7f 00 00 e8 e3 3c c8 5e 5e 00 00 c0 6c 8c c8 f7 7f 00 00 e8 d3 3c c8 5e 5e 00 01 e8 cb 3c c8 5e 5e 01 00 28 6f 8c c8 f7 7f 00 00 e8 bb 3c c8 5e 5e 00 1b e8 b3 3c c8 5e 5e 01 1a e8 ab 3c c8 5e 5e 02 19 e8 a3 3c c8 5e 5e 03 18 e8 9b 3c c8 5e 5e 04 17 e8 93 3c c8 5e 5e 05 16 e8 8b 3c c8 5e 5e 06 15 e8 83 3c c8 5e 5e 07 14 e8 7b 3c c8 5e 5e 08 13 e8 73 3c c8 5e 5e 09 12 e8 6b 3c c8 5e 5e 0a 11 e8 63 3c c8 5e 5e 0b 10 e8 5b 3c c8 5e 5e 0c 0f e8 53 3c c8 5e 5e 0d 0e e8 4b 3c c8 5e 5e 0e 0d e8 43 3c c8 5e 5e 0f 0c e8 3b 3c c8 5e 5e 10 0b e8 33 3c c8 5e 5e 11 0a e8 2b 3c c8 5e 5e 12 09 e8 23 3c c8 5e 5e 13 08 e8 1b 3c c8 5e 5e 14 07 e8 13 3c c8 5e 5e 15 06 e8 0b 3c c8 5e 5e 16 05 e8 03 3c c8 5e 5e 17 04 e8 fb 3b c8 5e 5e 18 03 e8 f3 3b c8 5e 5e 19 02 e8 eb 3b c8 5e 5e 1a 01 e8 e3 3b c8 5e 5e 1b 00 18 6e 8c c8 f7 7f 00 00 e8 d3 3b c8 5e 5e 00 13 e8 cb 3b c8 5e 5e 01 12 e8 c3 3b c8 5e 5e 02 11 e8 bb 3b c8 5e 5e 03 10 e8 b3 3b c8 5e 5e 04 0f e8 ab 3b c8 5e 5e 05 0e e8 a3 3b c8 5e 5e 06 0d e8 9b 3b c8 5e 5e 07 0c e8 93 3b c8 5e 5e 08 0b e8 8b 3b c8 5e 5e 09 0a e8 83 3b c8 5e 5e 0a 09 e8 7b 3b c8 5e 5e 0b 08 e8 73 3b c8 5e 5e 0c 07 e8 6b 3b c8 5e 5e 0d 06 e8 63 3b c8 5e 5e 0e 05 e8 5b 3b c8 5e 5e 0f 04 e8 53 3b c8 5e 5e 10 03 e8 4b 3b c8 5e 5e 11 02 e8 43 3b c8 5e 5e 15 01 e8 3b 3b c8 5e 5e 16 00 20 6d 8c c8 f7 7f 00 00 e8 2b 3b c8 5e 5e 00 00 70 72 8c c8 f7 7f 00 00 e8 1b 3b c8 5e 5e 00 00 d0 72 8c c8 f7 7f 00 00 e8 0b 3b c8 5e 5e 00 00 30 73 8c c8 f7 7f 00 00 e8 fb 3a c8 5e 5e 00 00 90 73 8c c8 f7 7f 00 00 e8 eb 3a c8 5e 5e 00 00 f0 73 8c c8 f7 7f 00 00 e8 db 3a c8 5e 5e 00 00 50 74 8c c8 f7 7f 00 00 e8 cb 3a c8 5e 5e 00 00 b0 74 8c c8 f7 7f 00 00 e8 bb 3a c8 5e 5e 00 00 10 75 8c c8 f7 7f 00 00 e8 ab 3a c8 5e 5e 00 00 70 75 8c c8 f7 7f 00 00 e8 9b 3a c8 5e 5e 00 00 d0 75 8c c8 f7 7f 00 00 00 00 00 00 00 00 00 00
20        | 7ff7c85e1bc0h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[8u](b128x8u~in,32i)                                                    | ushort pack8<byte>(in Block128<byte> src, int block)                                                          | c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 03 c2 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
21        | 7ff7c85e1c00h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[8i](b128x8i~in,32i)                                                    | ushort pack8<sbyte>(in Block128<sbyte> src, int block)                                                        | c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 03 c2 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
22        | 7ff7c85e1c40h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[16u](b128x16u~in,32i)                                                  | ushort pack8<ushort>(in Block128<ushort> src, int block)                                                      | c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 50 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
23        | 7ff7c85e1c80h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[16i](b128x16i~in,32i)                                                  | ushort pack8<short>(in Block128<short> src, int block)                                                        | c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 50 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
24        | 7ff7c85e1cc0h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[32u](b128x32u~in,32i)                                                  | ushort pack8<uint>(in Block128<uint> src, int block)                                                          | c5 f8 77 66 90 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
25        | 7ff7c85e1d00h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[32i](b128x32i~in,32i)                                                  | ushort pack8<int>(in Block128<int> src, int block)                                                            | c5 f8 77 66 90 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
26        | 7ff7c85e1d40h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[64u](b128x64u~in,32i)                                                  | ushort pack8<ulong>(in Block128<ulong> src, int block)                                                        | c5 f8 77 66 90 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
27        | 7ff7c85e1d80h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[64i](b128x64i~in,32i)                                                  | ushort pack8<long>(in Block128<long> src, int block)                                                          | c5 f8 77 66 90 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
28        | 7ff7c85e1dc0h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[8u](b256x8u~in,32i)                                                    | uint pack8<byte>(in Block256<byte> src, int block)                                                            | c5 f8 77 66 90 48 8b 01 c1 e2 05 48 63 d2 48 03 c2 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
29        | 7ff7c85e1e00h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[8i](b256x8i~in,32i)                                                    | uint pack8<sbyte>(in Block256<sbyte> src, int block)                                                          | c5 f8 77 66 90 48 8b 01 c1 e2 05 48 63 d2 48 03 c2 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
30        | 7ff7c85e1e40h   | 1080    | hex://intrinsics/bitpack?pack8#pack8_g[16u](b256x16u~in,32i)                                                  | uint pack8<ushort>(in Block256<ushort> src, int block)                                                        | c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 50 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 c3 37 c8 5e 5e 00 00 30 76 8c c8 f7 7f 00 00 e8 b3 37 c8 5e 5e 00 00 90 76 8c c8 f7 7f 00 00 e8 a3 37 c8 5e 5e 00 00 f0 76 8c c8 f7 7f 00 00 e8 93 37 c8 5e 5e 00 00 50 77 8c c8 f7 7f 00 00 e8 83 37 c8 5e 5e 00 00 b0 77 8c c8 f7 7f 00 00 e8 73 37 c8 5e 5e 00 00 10 78 8c c8 f7 7f 00 00 e8 63 37 c8 5e 5e 00 00 70 78 8c c8 f7 7f 00 00 e8 53 37 c8 5e 5e 00 00 d0 78 8c c8 f7 7f 00 00 e8 43 37 c8 5e 5e 00 00 30 79 8c c8 f7 7f 00 00 e8 33 37 c8 5e 5e 00 01 e8 2b 37 c8 5e 5e 01 00 a0 7b 8c c8 f7 7f 00 00 e8 1b 37 c8 5e 5e 00 1b e8 13 37 c8 5e 5e 01 1a e8 0b 37 c8 5e 5e 02 19 e8 03 37 c8 5e 5e 03 18 e8 fb 36 c8 5e 5e 04 17 e8 f3 36 c8 5e 5e 05 16 e8 eb 36 c8 5e 5e 06 15 e8 e3 36 c8 5e 5e 07 14 e8 db 36 c8 5e 5e 08 13 e8 d3 36 c8 5e 5e 09 12 e8 cb 36 c8 5e 5e 0a 11 e8 c3 36 c8 5e 5e 0b 10 e8 bb 36 c8 5e 5e 0c 0f e8 b3 36 c8 5e 5e 0d 0e e8 ab 36 c8 5e 5e 0e 0d e8 a3 36 c8 5e 5e 0f 0c e8 9b 36 c8 5e 5e 10 0b e8 93 36 c8 5e 5e 11 0a e8 8b 36 c8 5e 5e 12 09 e8 83 36 c8 5e 5e 13 08 e8 7b 36 c8 5e 5e 14 07 e8 73 36 c8 5e 5e 15 06 e8 6b 36 c8 5e 5e 16 05 e8 63 36 c8 5e 5e 17 04 e8 5b 36 c8 5e 5e 18 03 e8 53 36 c8 5e 5e 19 02 e8 4b 36 c8 5e 5e 1a 01 e8 43 36 c8 5e 5e 1b 00 90 7a 8c c8 f7 7f 00 00 e8 33 36 c8 5e 5e 00 14 e8 2b 36 c8 5e 5e 01 13 e8 23 36 c8 5e 5e 02 12 e8 1b 36 c8 5e 5e 03 11 e8 13 36 c8 5e 5e 04 10 e8 0b 36 c8 5e 5e 05 0f e8 03 36 c8 5e 5e 06 0e e8 fb 35 c8 5e 5e 07 0d e8 f3 35 c8 5e 5e 08 0c e8 eb 35 c8 5e 5e 09 0b e8 e3 35 c8 5e 5e 0a 0a e8 db 35 c8 5e 5e 0b 09 e8 d3 35 c8 5e 5e 0c 08 e8 cb 35 c8 5e 5e 0d 07 e8 c3 35 c8 5e 5e 0e 06 e8 bb 35 c8 5e 5e 0f 05 e8 b3 35 c8 5e 5e 10 04 e8 ab 35 c8 5e 5e 11 03 e8 a3 35 c8 5e 5e 12 02 e8 9b 35 c8 5e 5e 16 01 e8 93 35 c8 5e 5e 17 00 90 79 8c c8 f7 7f 00 00 e8 83 35 c8 5e 5e 00 00 f0 7e 8c c8 f7 7f 00 00 e8 73 35 c8 5e 5e 00 00 50 7f 8c c8 f7 7f 00 00 e8 63 35 c8 5e 5e 00 00 b0 7f 8c c8 f7 7f 00 00 e8 53 35 c8 5e 5e 00 00 10 80 8c c8 f7 7f 00 00 e8 43 35 c8 5e 5e 00 00 70 80 8c c8 f7 7f 00 00 e8 33 35 c8 5e 5e 00 00 d0 80 8c c8 f7 7f 00 00 e8 23 35 c8 5e 5e 00 00 30 81 8c c8 f7 7f 00 00 e8 13 35 c8 5e 5e 00 00 90 81 8c c8 f7 7f 00 00 e8 03 35 c8 5e 5e 00 00 f0 81 8c c8 f7 7f 00 00 e8 f3 34 c8 5e 5e 00 00 50 82 8c c8 f7 7f 00 00 e8 e3 34 c8 5e 5e 00 00 b0 82 8c c8 f7 7f 00 00 e8 d3 34 c8 5e 5e 00 00 10 83 8c c8 f7 7f 00 00 e8 c3 34 c8 5e 5e 00 00 70 83 8c c8 f7 7f 00 00 e8 b3 34 c8 5e 5e 00 00 d0 83 8c c8 f7 7f 00 00 e8 a3 34 c8 5e 5e 00 00 30 84 8c c8 f7 7f 00 00 e8 93 34 c8 5e 5e 00 00 90 84 8c c8 f7 7f 00 00 e8 83 34 c8 5e 5e 00 00 f0 84 8c c8 f7 7f 00 00 e8 73 34 c8 5e 5e 00 00 50 85 8c c8 f7 7f 00 00 e8 63 34 c8 5e 5e 00 00 b0 85 8c c8 f7 7f 00 00 e8 53 34 c8 5e 5e 00 00 10 86 8c c8 f7 7f 00 00 e8 43 34 c8 5e 5e 00 01 e8 3b 34 c8 5e 5e 01 00 78 87 8c c8 f7 7f 00 00 e8 2b 34 c8 5e 5e 00 00 78 89 8c c8 f7 7f 00 00 e8 1b 34 c8 5e 5e 00 00 d8 89 8c c8 f7 7f 00 00 e8 0b 34 c8 5e 5e 00 00 38 8a 8c c8 f7 7f 00 00 e8 fb 33 c8 5e 5e 00 00 98 8a 8c c8 f7 7f 00 00 e8 eb 33 c8 5e 5e 00 00 f8 8a 8c c8 f7 7f 00 00 e8 db 33 c8 5e 5e 00 00 58 8b 8c c8 f7 7f 00 00 00 00 00 00 00 00 00 00
31        | 7ff7c85e2280h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[16i](b256x16i~in,32i)                                                  | uint pack8<short>(in Block256<short> src, int block)                                                          | c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 50 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
32        | 7ff7c85e22c0h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[32u](b256x32u~in,32i)                                                  | uint pack8<uint>(in Block256<uint> src, int block)                                                            | c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
33        | 7ff7c85e2300h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[32i](b256x32i~in,32i)                                                  | uint pack8<int>(in Block256<int> src, int block)                                                              | c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
34        | 7ff7c85e2340h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[64u](b256x64u~in,32i)                                                  | uint pack8<ulong>(in Block256<ulong> src, int block)                                                          | c5 f8 77 66 90 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
35        | 7ff7c85e2380h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[64i](b256x64i~in,32i)                                                  | uint pack8<long>(in Block256<long> src, int block)                                                            | c5 f8 77 66 90 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
36        | 7ff7c85e23c0h   | 1800    | hex://intrinsics/bitpack?pack8#pack8_g[8u](b512x8u~in,32i)                                                    | ulong pack8<byte>(in Block512<byte> src, int block)                                                           | c5 f8 77 66 90 48 8b 01 c1 e2 06 48 63 d2 48 03 c2 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 20 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 50 f7 8b c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 06 48 63 d2 48 03 c2 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 20 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 d0 f7 8b c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 05 48 63 d2 48 8d 04 50 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 40 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 50 f8 8b c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 05 48 63 d2 48 8d 04 50 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 40 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 d0 f8 8b c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 50 f9 8b c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 d0 f9 8b c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 50 fa 8b c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 7b 2f c8 5e 5e 00 18 e8 73 2f c8 5e 5e 01 17 e8 6b 2f c8 5e 5e 02 16 e8 63 2f c8 5e 5e 03 15 e8 5b 2f c8 5e 5e 04 14 e8 53 2f c8 5e 5e 05 13 e8 4b 2f c8 5e 5e 06 12 e8 43 2f c8 5e 5e 07 11 e8 3b 2f c8 5e 5e 08 10 e8 33 2f c8 5e 5e 09 0f e8 2b 2f c8 5e 5e 0a 0e e8 23 2f c8 5e 5e 0b 0d e8 1b 2f c8 5e 5e 0c 0c e8 13 2f c8 5e 5e 0d 0b e8 0b 2f c8 5e 5e 0e 0a e8 03 2f c8 5e 5e 0f 09 e8 fb 2e c8 5e 5e 10 08 e8 f3 2e c8 5e 5e 11 07 e8 eb 2e c8 5e 5e 12 06 e8 e3 2e c8 5e 5e 13 05 e8 db 2e c8 5e 5e 14 04 e8 d3 2e c8 5e 5e 15 03 e8 cb 2e c8 5e 5e 16 02 e8 c3 2e c8 5e 5e 17 01 e8 bb 2e c8 5e 5e 18 00 80 86 8c c8 f7 7f 00 00 e8 ab 2e c8 5e 5e 00 00 b8 8b 8c c8 f7 7f 00 00 e8 9b 2e c8 5e 5e 00 00 18 8c 8c c8 f7 7f 00 00 e8 8b 2e c8 5e 5e 00 00 78 8c 8c c8 f7 7f 00 00 e8 7b 2e c8 5e 5e 00 00 d8 8c 8c c8 f7 7f 00 00 e8 6b 2e c8 5e 5e 00 00 38 8d 8c c8 f7 7f 00 00 e8 5b 2e c8 5e 5e 00 00 98 8d 8c c8 f7 7f 00 00 e8 4b 2e c8 5e 5e 00 00 f8 8d 8c c8 f7 7f 00 00 e8 3b 2e c8 5e 5e 00 00 58 8e 8c c8 f7 7f 00 00 e8 2b 2e c8 5e 5e 00 00 b8 8e 8c c8 f7 7f 00 00 e8 1b 2e c8 5e 5e 00 00 18 8f 8c c8 f7 7f 00 00 e8 0b 2e c8 5e 5e 00 00 78 8f 8c c8 f7 7f 00 00 e8 fb 2d c8 5e 5e 00 01 e8 f3 2d c8 5e 5e 01 00 e0 90 8c c8 f7 7f 00 00 e8 e3 2d c8 5e 5e 00 18 e8 db 2d c8 5e 5e 01 17 e8 d3 2d c8 5e 5e 02 16 e8 cb 2d c8 5e 5e 03 15 e8 c3 2d c8 5e 5e 04 14 e8 bb 2d c8 5e 5e 05 13 e8 b3 2d c8 5e 5e 06 12 e8 ab 2d c8 5e 5e 07 11 e8 a3 2d c8 5e 5e 08 10 e8 9b 2d c8 5e 5e 09 0f e8 93 2d c8 5e 5e 0a 0e e8 8b 2d c8 5e 5e 0b 0d e8 83 2d c8 5e 5e 0c 0c e8 7b 2d c8 5e 5e 0d 0b e8 73 2d c8 5e 5e 0e 0a e8 6b 2d c8 5e 5e 0f 09 e8 63 2d c8 5e 5e 10 08 e8 5b 2d c8 5e 5e 11 07 e8 53 2d c8 5e 5e 12 06 e8 4b 2d c8 5e 5e 13 05 e8 43 2d c8 5e 5e 14 04 e8 3b 2d c8 5e 5e 15 03 e8 33 2d c8 5e 5e 16 02 e8 2b 2d c8 5e 5e 17 01 e8 23 2d c8 5e 5e 18 00 e8 8f 8c c8 f7 7f 00 00 e8 13 2d c8 5e 5e 00 00 e0 92 8c c8 f7 7f 00 00 e8 03 2d c8 5e 5e 00 00 40 93 8c c8 f7 7f 00 00 e8 f3 2c c8 5e 5e 00 00 a0 93 8c c8 f7 7f 00 00 e8 e3 2c c8 5e 5e 00 00 00 94 8c c8 f7 7f 00 00 e8 d3 2c c8 5e 5e 00 00 60 94 8c c8 f7 7f 00 00 e8 c3 2c c8 5e 5e 00 00 c0 94 8c c8 f7 7f 00 00 e8 b3 2c c8 5e 5e 00 00 20 95 8c c8 f7 7f 00 00 e8 a3 2c c8 5e 5e 00 00 80 95 8c c8 f7 7f 00 00 e8 93 2c c8 5e 5e 00 00 e0 95 8c c8 f7 7f 00 00 e8 83 2c c8 5e 5e 00 00 40 96 8c c8 f7 7f 00 00 e8 73 2c c8 5e 5e 00 01 e8 6b 2c c8 5e 5e 01 00 a8 97 8c c8 f7 7f 00 00 e8 5b 2c c8 5e 5e 00 18 e8 53 2c c8 5e 5e 01 17 e8 4b 2c c8 5e 5e 02 16 e8 43 2c c8 5e 5e 03 15 e8 3b 2c c8 5e 5e 04 14 e8 33 2c c8 5e 5e 05 13 e8 2b 2c c8 5e 5e 06 12 e8 23 2c c8 5e 5e 07 11 e8 1b 2c c8 5e 5e 08 10 e8 13 2c c8 5e 5e 09 0f e8 0b 2c c8 5e 5e 0a 0e e8 03 2c c8 5e 5e 0b 0d e8 fb 2b c8 5e 5e 0c 0c e8 f3 2b c8 5e 5e 0d 0b e8 eb 2b c8 5e 5e 0e 0a e8 e3 2b c8 5e 5e 0f 09 e8 db 2b c8 5e 5e 10 08 e8 d3 2b c8 5e 5e 11 07 e8 cb 2b c8 5e 5e 12 06 e8 c3 2b c8 5e 5e 13 05 e8 bb 2b c8 5e 5e 14 04 e8 b3 2b c8 5e 5e 15 03 e8 ab 2b c8 5e 5e 16 02 e8 a3 2b c8 5e 5e 17 01 e8 9b 2b c8 5e 5e 18 00 b0 96 8c c8 f7 7f 00 00 e8 8b 2b c8 5e 5e 00 00 a8 99 8c c8 f7 7f 00 00 00 00 00 00 00 00 00 00
37        | 7ff7c85e2420h   | 1704    | hex://intrinsics/bitpack?pack8#pack8_g[8i](b512x8i~in,32i)                                                    | ulong pack8<sbyte>(in Block512<sbyte> src, int block)                                                         | c5 f8 77 66 90 48 8b 01 c1 e2 06 48 63 d2 48 03 c2 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 20 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 d0 f7 8b c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 05 48 63 d2 48 8d 04 50 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 40 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 50 f8 8b c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 05 48 63 d2 48 8d 04 50 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 40 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 d0 f8 8b c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 50 f9 8b c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 d0 f9 8b c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 50 fa 8b c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 7b 2f c8 5e 5e 00 18 e8 73 2f c8 5e 5e 01 17 e8 6b 2f c8 5e 5e 02 16 e8 63 2f c8 5e 5e 03 15 e8 5b 2f c8 5e 5e 04 14 e8 53 2f c8 5e 5e 05 13 e8 4b 2f c8 5e 5e 06 12 e8 43 2f c8 5e 5e 07 11 e8 3b 2f c8 5e 5e 08 10 e8 33 2f c8 5e 5e 09 0f e8 2b 2f c8 5e 5e 0a 0e e8 23 2f c8 5e 5e 0b 0d e8 1b 2f c8 5e 5e 0c 0c e8 13 2f c8 5e 5e 0d 0b e8 0b 2f c8 5e 5e 0e 0a e8 03 2f c8 5e 5e 0f 09 e8 fb 2e c8 5e 5e 10 08 e8 f3 2e c8 5e 5e 11 07 e8 eb 2e c8 5e 5e 12 06 e8 e3 2e c8 5e 5e 13 05 e8 db 2e c8 5e 5e 14 04 e8 d3 2e c8 5e 5e 15 03 e8 cb 2e c8 5e 5e 16 02 e8 c3 2e c8 5e 5e 17 01 e8 bb 2e c8 5e 5e 18 00 80 86 8c c8 f7 7f 00 00 e8 ab 2e c8 5e 5e 00 00 b8 8b 8c c8 f7 7f 00 00 e8 9b 2e c8 5e 5e 00 00 18 8c 8c c8 f7 7f 00 00 e8 8b 2e c8 5e 5e 00 00 78 8c 8c c8 f7 7f 00 00 e8 7b 2e c8 5e 5e 00 00 d8 8c 8c c8 f7 7f 00 00 e8 6b 2e c8 5e 5e 00 00 38 8d 8c c8 f7 7f 00 00 e8 5b 2e c8 5e 5e 00 00 98 8d 8c c8 f7 7f 00 00 e8 4b 2e c8 5e 5e 00 00 f8 8d 8c c8 f7 7f 00 00 e8 3b 2e c8 5e 5e 00 00 58 8e 8c c8 f7 7f 00 00 e8 2b 2e c8 5e 5e 00 00 b8 8e 8c c8 f7 7f 00 00 e8 1b 2e c8 5e 5e 00 00 18 8f 8c c8 f7 7f 00 00 e8 0b 2e c8 5e 5e 00 00 78 8f 8c c8 f7 7f 00 00 e8 fb 2d c8 5e 5e 00 01 e8 f3 2d c8 5e 5e 01 00 e0 90 8c c8 f7 7f 00 00 e8 e3 2d c8 5e 5e 00 18 e8 db 2d c8 5e 5e 01 17 e8 d3 2d c8 5e 5e 02 16 e8 cb 2d c8 5e 5e 03 15 e8 c3 2d c8 5e 5e 04 14 e8 bb 2d c8 5e 5e 05 13 e8 b3 2d c8 5e 5e 06 12 e8 ab 2d c8 5e 5e 07 11 e8 a3 2d c8 5e 5e 08 10 e8 9b 2d c8 5e 5e 09 0f e8 93 2d c8 5e 5e 0a 0e e8 8b 2d c8 5e 5e 0b 0d e8 83 2d c8 5e 5e 0c 0c e8 7b 2d c8 5e 5e 0d 0b e8 73 2d c8 5e 5e 0e 0a e8 6b 2d c8 5e 5e 0f 09 e8 63 2d c8 5e 5e 10 08 e8 5b 2d c8 5e 5e 11 07 e8 53 2d c8 5e 5e 12 06 e8 4b 2d c8 5e 5e 13 05 e8 43 2d c8 5e 5e 14 04 e8 3b 2d c8 5e 5e 15 03 e8 33 2d c8 5e 5e 16 02 e8 2b 2d c8 5e 5e 17 01 e8 23 2d c8 5e 5e 18 00 e8 8f 8c c8 f7 7f 00 00 e8 13 2d c8 5e 5e 00 00 e0 92 8c c8 f7 7f 00 00 e8 03 2d c8 5e 5e 00 00 40 93 8c c8 f7 7f 00 00 e8 f3 2c c8 5e 5e 00 00 a0 93 8c c8 f7 7f 00 00 e8 e3 2c c8 5e 5e 00 00 00 94 8c c8 f7 7f 00 00 e8 d3 2c c8 5e 5e 00 00 60 94 8c c8 f7 7f 00 00 e8 c3 2c c8 5e 5e 00 00 c0 94 8c c8 f7 7f 00 00 e8 b3 2c c8 5e 5e 00 00 20 95 8c c8 f7 7f 00 00 e8 a3 2c c8 5e 5e 00 00 80 95 8c c8 f7 7f 00 00 e8 93 2c c8 5e 5e 00 00 e0 95 8c c8 f7 7f 00 00 e8 83 2c c8 5e 5e 00 00 40 96 8c c8 f7 7f 00 00 e8 73 2c c8 5e 5e 00 01 e8 6b 2c c8 5e 5e 01 00 a8 97 8c c8 f7 7f 00 00 e8 5b 2c c8 5e 5e 00 18 e8 53 2c c8 5e 5e 01 17 e8 4b 2c c8 5e 5e 02 16 e8 43 2c c8 5e 5e 03 15 e8 3b 2c c8 5e 5e 04 14 e8 33 2c c8 5e 5e 05 13 e8 2b 2c c8 5e 5e 06 12 e8 23 2c c8 5e 5e 07 11 e8 1b 2c c8 5e 5e 08 10 e8 13 2c c8 5e 5e 09 0f e8 0b 2c c8 5e 5e 0a 0e e8 03 2c c8 5e 5e 0b 0d e8 fb 2b c8 5e 5e 0c 0c e8 f3 2b c8 5e 5e 0d 0b e8 eb 2b c8 5e 5e 0e 0a e8 e3 2b c8 5e 5e 0f 09 e8 db 2b c8 5e 5e 10 08 e8 d3 2b c8 5e 5e 11 07 e8 cb 2b c8 5e 5e 12 06 e8 c3 2b c8 5e 5e 13 05 e8 bb 2b c8 5e 5e 14 04 e8 b3 2b c8 5e 5e 15 03 e8 ab 2b c8 5e 5e 16 02 e8 a3 2b c8 5e 5e 17 01 e8 9b 2b c8 5e 5e 18 00 b0 96 8c c8 f7 7f 00 00 e8 8b 2b c8 5e 5e 00 00 a8 99 8c c8 f7 7f 00 00 00 00 00 00 00 00 00 00
38        | 7ff7c85e2480h   | 1608    | hex://intrinsics/bitpack?pack8#pack8_g[16u](b512x16u~in,32i)                                                  | ulong pack8<ushort>(in Block512<ushort> src, int block)                                                       | c5 f8 77 66 90 48 8b 01 c1 e2 05 48 63 d2 48 8d 04 50 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 40 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 50 f8 8b c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 05 48 63 d2 48 8d 04 50 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 40 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 d0 f8 8b c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 50 f9 8b c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 d0 f9 8b c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 50 fa 8b c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 7b 2f c8 5e 5e 00 18 e8 73 2f c8 5e 5e 01 17 e8 6b 2f c8 5e 5e 02 16 e8 63 2f c8 5e 5e 03 15 e8 5b 2f c8 5e 5e 04 14 e8 53 2f c8 5e 5e 05 13 e8 4b 2f c8 5e 5e 06 12 e8 43 2f c8 5e 5e 07 11 e8 3b 2f c8 5e 5e 08 10 e8 33 2f c8 5e 5e 09 0f e8 2b 2f c8 5e 5e 0a 0e e8 23 2f c8 5e 5e 0b 0d e8 1b 2f c8 5e 5e 0c 0c e8 13 2f c8 5e 5e 0d 0b e8 0b 2f c8 5e 5e 0e 0a e8 03 2f c8 5e 5e 0f 09 e8 fb 2e c8 5e 5e 10 08 e8 f3 2e c8 5e 5e 11 07 e8 eb 2e c8 5e 5e 12 06 e8 e3 2e c8 5e 5e 13 05 e8 db 2e c8 5e 5e 14 04 e8 d3 2e c8 5e 5e 15 03 e8 cb 2e c8 5e 5e 16 02 e8 c3 2e c8 5e 5e 17 01 e8 bb 2e c8 5e 5e 18 00 80 86 8c c8 f7 7f 00 00 e8 ab 2e c8 5e 5e 00 00 b8 8b 8c c8 f7 7f 00 00 e8 9b 2e c8 5e 5e 00 00 18 8c 8c c8 f7 7f 00 00 e8 8b 2e c8 5e 5e 00 00 78 8c 8c c8 f7 7f 00 00 e8 7b 2e c8 5e 5e 00 00 d8 8c 8c c8 f7 7f 00 00 e8 6b 2e c8 5e 5e 00 00 38 8d 8c c8 f7 7f 00 00 e8 5b 2e c8 5e 5e 00 00 98 8d 8c c8 f7 7f 00 00 e8 4b 2e c8 5e 5e 00 00 f8 8d 8c c8 f7 7f 00 00 e8 3b 2e c8 5e 5e 00 00 58 8e 8c c8 f7 7f 00 00 e8 2b 2e c8 5e 5e 00 00 b8 8e 8c c8 f7 7f 00 00 e8 1b 2e c8 5e 5e 00 00 18 8f 8c c8 f7 7f 00 00 e8 0b 2e c8 5e 5e 00 00 78 8f 8c c8 f7 7f 00 00 e8 fb 2d c8 5e 5e 00 01 e8 f3 2d c8 5e 5e 01 00 e0 90 8c c8 f7 7f 00 00 e8 e3 2d c8 5e 5e 00 18 e8 db 2d c8 5e 5e 01 17 e8 d3 2d c8 5e 5e 02 16 e8 cb 2d c8 5e 5e 03 15 e8 c3 2d c8 5e 5e 04 14 e8 bb 2d c8 5e 5e 05 13 e8 b3 2d c8 5e 5e 06 12 e8 ab 2d c8 5e 5e 07 11 e8 a3 2d c8 5e 5e 08 10 e8 9b 2d c8 5e 5e 09 0f e8 93 2d c8 5e 5e 0a 0e e8 8b 2d c8 5e 5e 0b 0d e8 83 2d c8 5e 5e 0c 0c e8 7b 2d c8 5e 5e 0d 0b e8 73 2d c8 5e 5e 0e 0a e8 6b 2d c8 5e 5e 0f 09 e8 63 2d c8 5e 5e 10 08 e8 5b 2d c8 5e 5e 11 07 e8 53 2d c8 5e 5e 12 06 e8 4b 2d c8 5e 5e 13 05 e8 43 2d c8 5e 5e 14 04 e8 3b 2d c8 5e 5e 15 03 e8 33 2d c8 5e 5e 16 02 e8 2b 2d c8 5e 5e 17 01 e8 23 2d c8 5e 5e 18 00 e8 8f 8c c8 f7 7f 00 00 e8 13 2d c8 5e 5e 00 00 e0 92 8c c8 f7 7f 00 00 e8 03 2d c8 5e 5e 00 00 40 93 8c c8 f7 7f 00 00 e8 f3 2c c8 5e 5e 00 00 a0 93 8c c8 f7 7f 00 00 e8 e3 2c c8 5e 5e 00 00 00 94 8c c8 f7 7f 00 00 e8 d3 2c c8 5e 5e 00 00 60 94 8c c8 f7 7f 00 00 e8 c3 2c c8 5e 5e 00 00 c0 94 8c c8 f7 7f 00 00 e8 b3 2c c8 5e 5e 00 00 20 95 8c c8 f7 7f 00 00 e8 a3 2c c8 5e 5e 00 00 80 95 8c c8 f7 7f 00 00 e8 93 2c c8 5e 5e 00 00 e0 95 8c c8 f7 7f 00 00 e8 83 2c c8 5e 5e 00 00 40 96 8c c8 f7 7f 00 00 e8 73 2c c8 5e 5e 00 01 e8 6b 2c c8 5e 5e 01 00 a8 97 8c c8 f7 7f 00 00 e8 5b 2c c8 5e 5e 00 18 e8 53 2c c8 5e 5e 01 17 e8 4b 2c c8 5e 5e 02 16 e8 43 2c c8 5e 5e 03 15 e8 3b 2c c8 5e 5e 04 14 e8 33 2c c8 5e 5e 05 13 e8 2b 2c c8 5e 5e 06 12 e8 23 2c c8 5e 5e 07 11 e8 1b 2c c8 5e 5e 08 10 e8 13 2c c8 5e 5e 09 0f e8 0b 2c c8 5e 5e 0a 0e e8 03 2c c8 5e 5e 0b 0d e8 fb 2b c8 5e 5e 0c 0c e8 f3 2b c8 5e 5e 0d 0b e8 eb 2b c8 5e 5e 0e 0a e8 e3 2b c8 5e 5e 0f 09 e8 db 2b c8 5e 5e 10 08 e8 d3 2b c8 5e 5e 11 07 e8 cb 2b c8 5e 5e 12 06 e8 c3 2b c8 5e 5e 13 05 e8 bb 2b c8 5e 5e 14 04 e8 b3 2b c8 5e 5e 15 03 e8 ab 2b c8 5e 5e 16 02 e8 a3 2b c8 5e 5e 17 01 e8 9b 2b c8 5e 5e 18 00 b0 96 8c c8 f7 7f 00 00 e8 8b 2b c8 5e 5e 00 00 a8 99 8c c8 f7 7f 00 00 00 00 00 00 00 00 00 00
39        | 7ff7c85e24e0h   | 1512    | hex://intrinsics/bitpack?pack8#pack8_g[16i](b512x16i~in,32i)                                                  | ulong pack8<short>(in Block512<short> src, int block)                                                         | c5 f8 77 66 90 48 8b 01 c1 e2 05 48 63 d2 48 8d 04 50 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 40 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 d0 f8 8b c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 50 f9 8b c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 d0 f9 8b c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 50 fa 8b c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 7b 2f c8 5e 5e 00 18 e8 73 2f c8 5e 5e 01 17 e8 6b 2f c8 5e 5e 02 16 e8 63 2f c8 5e 5e 03 15 e8 5b 2f c8 5e 5e 04 14 e8 53 2f c8 5e 5e 05 13 e8 4b 2f c8 5e 5e 06 12 e8 43 2f c8 5e 5e 07 11 e8 3b 2f c8 5e 5e 08 10 e8 33 2f c8 5e 5e 09 0f e8 2b 2f c8 5e 5e 0a 0e e8 23 2f c8 5e 5e 0b 0d e8 1b 2f c8 5e 5e 0c 0c e8 13 2f c8 5e 5e 0d 0b e8 0b 2f c8 5e 5e 0e 0a e8 03 2f c8 5e 5e 0f 09 e8 fb 2e c8 5e 5e 10 08 e8 f3 2e c8 5e 5e 11 07 e8 eb 2e c8 5e 5e 12 06 e8 e3 2e c8 5e 5e 13 05 e8 db 2e c8 5e 5e 14 04 e8 d3 2e c8 5e 5e 15 03 e8 cb 2e c8 5e 5e 16 02 e8 c3 2e c8 5e 5e 17 01 e8 bb 2e c8 5e 5e 18 00 80 86 8c c8 f7 7f 00 00 e8 ab 2e c8 5e 5e 00 00 b8 8b 8c c8 f7 7f 00 00 e8 9b 2e c8 5e 5e 00 00 18 8c 8c c8 f7 7f 00 00 e8 8b 2e c8 5e 5e 00 00 78 8c 8c c8 f7 7f 00 00 e8 7b 2e c8 5e 5e 00 00 d8 8c 8c c8 f7 7f 00 00 e8 6b 2e c8 5e 5e 00 00 38 8d 8c c8 f7 7f 00 00 e8 5b 2e c8 5e 5e 00 00 98 8d 8c c8 f7 7f 00 00 e8 4b 2e c8 5e 5e 00 00 f8 8d 8c c8 f7 7f 00 00 e8 3b 2e c8 5e 5e 00 00 58 8e 8c c8 f7 7f 00 00 e8 2b 2e c8 5e 5e 00 00 b8 8e 8c c8 f7 7f 00 00 e8 1b 2e c8 5e 5e 00 00 18 8f 8c c8 f7 7f 00 00 e8 0b 2e c8 5e 5e 00 00 78 8f 8c c8 f7 7f 00 00 e8 fb 2d c8 5e 5e 00 01 e8 f3 2d c8 5e 5e 01 00 e0 90 8c c8 f7 7f 00 00 e8 e3 2d c8 5e 5e 00 18 e8 db 2d c8 5e 5e 01 17 e8 d3 2d c8 5e 5e 02 16 e8 cb 2d c8 5e 5e 03 15 e8 c3 2d c8 5e 5e 04 14 e8 bb 2d c8 5e 5e 05 13 e8 b3 2d c8 5e 5e 06 12 e8 ab 2d c8 5e 5e 07 11 e8 a3 2d c8 5e 5e 08 10 e8 9b 2d c8 5e 5e 09 0f e8 93 2d c8 5e 5e 0a 0e e8 8b 2d c8 5e 5e 0b 0d e8 83 2d c8 5e 5e 0c 0c e8 7b 2d c8 5e 5e 0d 0b e8 73 2d c8 5e 5e 0e 0a e8 6b 2d c8 5e 5e 0f 09 e8 63 2d c8 5e 5e 10 08 e8 5b 2d c8 5e 5e 11 07 e8 53 2d c8 5e 5e 12 06 e8 4b 2d c8 5e 5e 13 05 e8 43 2d c8 5e 5e 14 04 e8 3b 2d c8 5e 5e 15 03 e8 33 2d c8 5e 5e 16 02 e8 2b 2d c8 5e 5e 17 01 e8 23 2d c8 5e 5e 18 00 e8 8f 8c c8 f7 7f 00 00 e8 13 2d c8 5e 5e 00 00 e0 92 8c c8 f7 7f 00 00 e8 03 2d c8 5e 5e 00 00 40 93 8c c8 f7 7f 00 00 e8 f3 2c c8 5e 5e 00 00 a0 93 8c c8 f7 7f 00 00 e8 e3 2c c8 5e 5e 00 00 00 94 8c c8 f7 7f 00 00 e8 d3 2c c8 5e 5e 00 00 60 94 8c c8 f7 7f 00 00 e8 c3 2c c8 5e 5e 00 00 c0 94 8c c8 f7 7f 00 00 e8 b3 2c c8 5e 5e 00 00 20 95 8c c8 f7 7f 00 00 e8 a3 2c c8 5e 5e 00 00 80 95 8c c8 f7 7f 00 00 e8 93 2c c8 5e 5e 00 00 e0 95 8c c8 f7 7f 00 00 e8 83 2c c8 5e 5e 00 00 40 96 8c c8 f7 7f 00 00 e8 73 2c c8 5e 5e 00 01 e8 6b 2c c8 5e 5e 01 00 a8 97 8c c8 f7 7f 00 00 e8 5b 2c c8 5e 5e 00 18 e8 53 2c c8 5e 5e 01 17 e8 4b 2c c8 5e 5e 02 16 e8 43 2c c8 5e 5e 03 15 e8 3b 2c c8 5e 5e 04 14 e8 33 2c c8 5e 5e 05 13 e8 2b 2c c8 5e 5e 06 12 e8 23 2c c8 5e 5e 07 11 e8 1b 2c c8 5e 5e 08 10 e8 13 2c c8 5e 5e 09 0f e8 0b 2c c8 5e 5e 0a 0e e8 03 2c c8 5e 5e 0b 0d e8 fb 2b c8 5e 5e 0c 0c e8 f3 2b c8 5e 5e 0d 0b e8 eb 2b c8 5e 5e 0e 0a e8 e3 2b c8 5e 5e 0f 09 e8 db 2b c8 5e 5e 10 08 e8 d3 2b c8 5e 5e 11 07 e8 cb 2b c8 5e 5e 12 06 e8 c3 2b c8 5e 5e 13 05 e8 bb 2b c8 5e 5e 14 04 e8 b3 2b c8 5e 5e 15 03 e8 ab 2b c8 5e 5e 16 02 e8 a3 2b c8 5e 5e 17 01 e8 9b 2b c8 5e 5e 18 00 b0 96 8c c8 f7 7f 00 00 e8 8b 2b c8 5e 5e 00 00 a8 99 8c c8 f7 7f 00 00 00 00 00 00 00 00 00 00
40        | 7ff7c85e2540h   | 1416    | hex://intrinsics/bitpack?pack8#pack8_g[32u](b512x32u~in,32i)                                                  | ulong pack8<uint>(in Block512<uint> src, int block)                                                           | c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 50 f9 8b c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 d0 f9 8b c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 50 fa 8b c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 7b 2f c8 5e 5e 00 18 e8 73 2f c8 5e 5e 01 17 e8 6b 2f c8 5e 5e 02 16 e8 63 2f c8 5e 5e 03 15 e8 5b 2f c8 5e 5e 04 14 e8 53 2f c8 5e 5e 05 13 e8 4b 2f c8 5e 5e 06 12 e8 43 2f c8 5e 5e 07 11 e8 3b 2f c8 5e 5e 08 10 e8 33 2f c8 5e 5e 09 0f e8 2b 2f c8 5e 5e 0a 0e e8 23 2f c8 5e 5e 0b 0d e8 1b 2f c8 5e 5e 0c 0c e8 13 2f c8 5e 5e 0d 0b e8 0b 2f c8 5e 5e 0e 0a e8 03 2f c8 5e 5e 0f 09 e8 fb 2e c8 5e 5e 10 08 e8 f3 2e c8 5e 5e 11 07 e8 eb 2e c8 5e 5e 12 06 e8 e3 2e c8 5e 5e 13 05 e8 db 2e c8 5e 5e 14 04 e8 d3 2e c8 5e 5e 15 03 e8 cb 2e c8 5e 5e 16 02 e8 c3 2e c8 5e 5e 17 01 e8 bb 2e c8 5e 5e 18 00 80 86 8c c8 f7 7f 00 00 e8 ab 2e c8 5e 5e 00 00 b8 8b 8c c8 f7 7f 00 00 e8 9b 2e c8 5e 5e 00 00 18 8c 8c c8 f7 7f 00 00 e8 8b 2e c8 5e 5e 00 00 78 8c 8c c8 f7 7f 00 00 e8 7b 2e c8 5e 5e 00 00 d8 8c 8c c8 f7 7f 00 00 e8 6b 2e c8 5e 5e 00 00 38 8d 8c c8 f7 7f 00 00 e8 5b 2e c8 5e 5e 00 00 98 8d 8c c8 f7 7f 00 00 e8 4b 2e c8 5e 5e 00 00 f8 8d 8c c8 f7 7f 00 00 e8 3b 2e c8 5e 5e 00 00 58 8e 8c c8 f7 7f 00 00 e8 2b 2e c8 5e 5e 00 00 b8 8e 8c c8 f7 7f 00 00 e8 1b 2e c8 5e 5e 00 00 18 8f 8c c8 f7 7f 00 00 e8 0b 2e c8 5e 5e 00 00 78 8f 8c c8 f7 7f 00 00 e8 fb 2d c8 5e 5e 00 01 e8 f3 2d c8 5e 5e 01 00 e0 90 8c c8 f7 7f 00 00 e8 e3 2d c8 5e 5e 00 18 e8 db 2d c8 5e 5e 01 17 e8 d3 2d c8 5e 5e 02 16 e8 cb 2d c8 5e 5e 03 15 e8 c3 2d c8 5e 5e 04 14 e8 bb 2d c8 5e 5e 05 13 e8 b3 2d c8 5e 5e 06 12 e8 ab 2d c8 5e 5e 07 11 e8 a3 2d c8 5e 5e 08 10 e8 9b 2d c8 5e 5e 09 0f e8 93 2d c8 5e 5e 0a 0e e8 8b 2d c8 5e 5e 0b 0d e8 83 2d c8 5e 5e 0c 0c e8 7b 2d c8 5e 5e 0d 0b e8 73 2d c8 5e 5e 0e 0a e8 6b 2d c8 5e 5e 0f 09 e8 63 2d c8 5e 5e 10 08 e8 5b 2d c8 5e 5e 11 07 e8 53 2d c8 5e 5e 12 06 e8 4b 2d c8 5e 5e 13 05 e8 43 2d c8 5e 5e 14 04 e8 3b 2d c8 5e 5e 15 03 e8 33 2d c8 5e 5e 16 02 e8 2b 2d c8 5e 5e 17 01 e8 23 2d c8 5e 5e 18 00 e8 8f 8c c8 f7 7f 00 00 e8 13 2d c8 5e 5e 00 00 e0 92 8c c8 f7 7f 00 00 e8 03 2d c8 5e 5e 00 00 40 93 8c c8 f7 7f 00 00 e8 f3 2c c8 5e 5e 00 00 a0 93 8c c8 f7 7f 00 00 e8 e3 2c c8 5e 5e 00 00 00 94 8c c8 f7 7f 00 00 e8 d3 2c c8 5e 5e 00 00 60 94 8c c8 f7 7f 00 00 e8 c3 2c c8 5e 5e 00 00 c0 94 8c c8 f7 7f 00 00 e8 b3 2c c8 5e 5e 00 00 20 95 8c c8 f7 7f 00 00 e8 a3 2c c8 5e 5e 00 00 80 95 8c c8 f7 7f 00 00 e8 93 2c c8 5e 5e 00 00 e0 95 8c c8 f7 7f 00 00 e8 83 2c c8 5e 5e 00 00 40 96 8c c8 f7 7f 00 00 e8 73 2c c8 5e 5e 00 01 e8 6b 2c c8 5e 5e 01 00 a8 97 8c c8 f7 7f 00 00 e8 5b 2c c8 5e 5e 00 18 e8 53 2c c8 5e 5e 01 17 e8 4b 2c c8 5e 5e 02 16 e8 43 2c c8 5e 5e 03 15 e8 3b 2c c8 5e 5e 04 14 e8 33 2c c8 5e 5e 05 13 e8 2b 2c c8 5e 5e 06 12 e8 23 2c c8 5e 5e 07 11 e8 1b 2c c8 5e 5e 08 10 e8 13 2c c8 5e 5e 09 0f e8 0b 2c c8 5e 5e 0a 0e e8 03 2c c8 5e 5e 0b 0d e8 fb 2b c8 5e 5e 0c 0c e8 f3 2b c8 5e 5e 0d 0b e8 eb 2b c8 5e 5e 0e 0a e8 e3 2b c8 5e 5e 0f 09 e8 db 2b c8 5e 5e 10 08 e8 d3 2b c8 5e 5e 11 07 e8 cb 2b c8 5e 5e 12 06 e8 c3 2b c8 5e 5e 13 05 e8 bb 2b c8 5e 5e 14 04 e8 b3 2b c8 5e 5e 15 03 e8 ab 2b c8 5e 5e 16 02 e8 a3 2b c8 5e 5e 17 01 e8 9b 2b c8 5e 5e 18 00 b0 96 8c c8 f7 7f 00 00 e8 8b 2b c8 5e 5e 00 00 a8 99 8c c8 f7 7f 00 00 00 00 00 00 00 00 00 00
41        | 7ff7c85e25a0h   | 1320    | hex://intrinsics/bitpack?pack8#pack8_g[32i](b512x32i~in,32i)                                                  | ulong pack8<int>(in Block512<int> src, int block)                                                             | c5 f8 77 66 90 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 d0 f9 8b c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 50 fa 8b c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 7b 2f c8 5e 5e 00 18 e8 73 2f c8 5e 5e 01 17 e8 6b 2f c8 5e 5e 02 16 e8 63 2f c8 5e 5e 03 15 e8 5b 2f c8 5e 5e 04 14 e8 53 2f c8 5e 5e 05 13 e8 4b 2f c8 5e 5e 06 12 e8 43 2f c8 5e 5e 07 11 e8 3b 2f c8 5e 5e 08 10 e8 33 2f c8 5e 5e 09 0f e8 2b 2f c8 5e 5e 0a 0e e8 23 2f c8 5e 5e 0b 0d e8 1b 2f c8 5e 5e 0c 0c e8 13 2f c8 5e 5e 0d 0b e8 0b 2f c8 5e 5e 0e 0a e8 03 2f c8 5e 5e 0f 09 e8 fb 2e c8 5e 5e 10 08 e8 f3 2e c8 5e 5e 11 07 e8 eb 2e c8 5e 5e 12 06 e8 e3 2e c8 5e 5e 13 05 e8 db 2e c8 5e 5e 14 04 e8 d3 2e c8 5e 5e 15 03 e8 cb 2e c8 5e 5e 16 02 e8 c3 2e c8 5e 5e 17 01 e8 bb 2e c8 5e 5e 18 00 80 86 8c c8 f7 7f 00 00 e8 ab 2e c8 5e 5e 00 00 b8 8b 8c c8 f7 7f 00 00 e8 9b 2e c8 5e 5e 00 00 18 8c 8c c8 f7 7f 00 00 e8 8b 2e c8 5e 5e 00 00 78 8c 8c c8 f7 7f 00 00 e8 7b 2e c8 5e 5e 00 00 d8 8c 8c c8 f7 7f 00 00 e8 6b 2e c8 5e 5e 00 00 38 8d 8c c8 f7 7f 00 00 e8 5b 2e c8 5e 5e 00 00 98 8d 8c c8 f7 7f 00 00 e8 4b 2e c8 5e 5e 00 00 f8 8d 8c c8 f7 7f 00 00 e8 3b 2e c8 5e 5e 00 00 58 8e 8c c8 f7 7f 00 00 e8 2b 2e c8 5e 5e 00 00 b8 8e 8c c8 f7 7f 00 00 e8 1b 2e c8 5e 5e 00 00 18 8f 8c c8 f7 7f 00 00 e8 0b 2e c8 5e 5e 00 00 78 8f 8c c8 f7 7f 00 00 e8 fb 2d c8 5e 5e 00 01 e8 f3 2d c8 5e 5e 01 00 e0 90 8c c8 f7 7f 00 00 e8 e3 2d c8 5e 5e 00 18 e8 db 2d c8 5e 5e 01 17 e8 d3 2d c8 5e 5e 02 16 e8 cb 2d c8 5e 5e 03 15 e8 c3 2d c8 5e 5e 04 14 e8 bb 2d c8 5e 5e 05 13 e8 b3 2d c8 5e 5e 06 12 e8 ab 2d c8 5e 5e 07 11 e8 a3 2d c8 5e 5e 08 10 e8 9b 2d c8 5e 5e 09 0f e8 93 2d c8 5e 5e 0a 0e e8 8b 2d c8 5e 5e 0b 0d e8 83 2d c8 5e 5e 0c 0c e8 7b 2d c8 5e 5e 0d 0b e8 73 2d c8 5e 5e 0e 0a e8 6b 2d c8 5e 5e 0f 09 e8 63 2d c8 5e 5e 10 08 e8 5b 2d c8 5e 5e 11 07 e8 53 2d c8 5e 5e 12 06 e8 4b 2d c8 5e 5e 13 05 e8 43 2d c8 5e 5e 14 04 e8 3b 2d c8 5e 5e 15 03 e8 33 2d c8 5e 5e 16 02 e8 2b 2d c8 5e 5e 17 01 e8 23 2d c8 5e 5e 18 00 e8 8f 8c c8 f7 7f 00 00 e8 13 2d c8 5e 5e 00 00 e0 92 8c c8 f7 7f 00 00 e8 03 2d c8 5e 5e 00 00 40 93 8c c8 f7 7f 00 00 e8 f3 2c c8 5e 5e 00 00 a0 93 8c c8 f7 7f 00 00 e8 e3 2c c8 5e 5e 00 00 00 94 8c c8 f7 7f 00 00 e8 d3 2c c8 5e 5e 00 00 60 94 8c c8 f7 7f 00 00 e8 c3 2c c8 5e 5e 00 00 c0 94 8c c8 f7 7f 00 00 e8 b3 2c c8 5e 5e 00 00 20 95 8c c8 f7 7f 00 00 e8 a3 2c c8 5e 5e 00 00 80 95 8c c8 f7 7f 00 00 e8 93 2c c8 5e 5e 00 00 e0 95 8c c8 f7 7f 00 00 e8 83 2c c8 5e 5e 00 00 40 96 8c c8 f7 7f 00 00 e8 73 2c c8 5e 5e 00 01 e8 6b 2c c8 5e 5e 01 00 a8 97 8c c8 f7 7f 00 00 e8 5b 2c c8 5e 5e 00 18 e8 53 2c c8 5e 5e 01 17 e8 4b 2c c8 5e 5e 02 16 e8 43 2c c8 5e 5e 03 15 e8 3b 2c c8 5e 5e 04 14 e8 33 2c c8 5e 5e 05 13 e8 2b 2c c8 5e 5e 06 12 e8 23 2c c8 5e 5e 07 11 e8 1b 2c c8 5e 5e 08 10 e8 13 2c c8 5e 5e 09 0f e8 0b 2c c8 5e 5e 0a 0e e8 03 2c c8 5e 5e 0b 0d e8 fb 2b c8 5e 5e 0c 0c e8 f3 2b c8 5e 5e 0d 0b e8 eb 2b c8 5e 5e 0e 0a e8 e3 2b c8 5e 5e 0f 09 e8 db 2b c8 5e 5e 10 08 e8 d3 2b c8 5e 5e 11 07 e8 cb 2b c8 5e 5e 12 06 e8 c3 2b c8 5e 5e 13 05 e8 bb 2b c8 5e 5e 14 04 e8 b3 2b c8 5e 5e 15 03 e8 ab 2b c8 5e 5e 16 02 e8 a3 2b c8 5e 5e 17 01 e8 9b 2b c8 5e 5e 18 00 b0 96 8c c8 f7 7f 00 00 e8 8b 2b c8 5e 5e 00 00 a8 99 8c c8 f7 7f 00 00 00 00 00 00 00 00 00 00
42        | 7ff7c85e2600h   | 1224    | hex://intrinsics/bitpack?pack8#pack8_g[64u](b512x64u~in,32i)                                                  | ulong pack8<ulong>(in Block512<ulong> src, int block)                                                         | c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 50 fa 8b c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 7b 2f c8 5e 5e 00 18 e8 73 2f c8 5e 5e 01 17 e8 6b 2f c8 5e 5e 02 16 e8 63 2f c8 5e 5e 03 15 e8 5b 2f c8 5e 5e 04 14 e8 53 2f c8 5e 5e 05 13 e8 4b 2f c8 5e 5e 06 12 e8 43 2f c8 5e 5e 07 11 e8 3b 2f c8 5e 5e 08 10 e8 33 2f c8 5e 5e 09 0f e8 2b 2f c8 5e 5e 0a 0e e8 23 2f c8 5e 5e 0b 0d e8 1b 2f c8 5e 5e 0c 0c e8 13 2f c8 5e 5e 0d 0b e8 0b 2f c8 5e 5e 0e 0a e8 03 2f c8 5e 5e 0f 09 e8 fb 2e c8 5e 5e 10 08 e8 f3 2e c8 5e 5e 11 07 e8 eb 2e c8 5e 5e 12 06 e8 e3 2e c8 5e 5e 13 05 e8 db 2e c8 5e 5e 14 04 e8 d3 2e c8 5e 5e 15 03 e8 cb 2e c8 5e 5e 16 02 e8 c3 2e c8 5e 5e 17 01 e8 bb 2e c8 5e 5e 18 00 80 86 8c c8 f7 7f 00 00 e8 ab 2e c8 5e 5e 00 00 b8 8b 8c c8 f7 7f 00 00 e8 9b 2e c8 5e 5e 00 00 18 8c 8c c8 f7 7f 00 00 e8 8b 2e c8 5e 5e 00 00 78 8c 8c c8 f7 7f 00 00 e8 7b 2e c8 5e 5e 00 00 d8 8c 8c c8 f7 7f 00 00 e8 6b 2e c8 5e 5e 00 00 38 8d 8c c8 f7 7f 00 00 e8 5b 2e c8 5e 5e 00 00 98 8d 8c c8 f7 7f 00 00 e8 4b 2e c8 5e 5e 00 00 f8 8d 8c c8 f7 7f 00 00 e8 3b 2e c8 5e 5e 00 00 58 8e 8c c8 f7 7f 00 00 e8 2b 2e c8 5e 5e 00 00 b8 8e 8c c8 f7 7f 00 00 e8 1b 2e c8 5e 5e 00 00 18 8f 8c c8 f7 7f 00 00 e8 0b 2e c8 5e 5e 00 00 78 8f 8c c8 f7 7f 00 00 e8 fb 2d c8 5e 5e 00 01 e8 f3 2d c8 5e 5e 01 00 e0 90 8c c8 f7 7f 00 00 e8 e3 2d c8 5e 5e 00 18 e8 db 2d c8 5e 5e 01 17 e8 d3 2d c8 5e 5e 02 16 e8 cb 2d c8 5e 5e 03 15 e8 c3 2d c8 5e 5e 04 14 e8 bb 2d c8 5e 5e 05 13 e8 b3 2d c8 5e 5e 06 12 e8 ab 2d c8 5e 5e 07 11 e8 a3 2d c8 5e 5e 08 10 e8 9b 2d c8 5e 5e 09 0f e8 93 2d c8 5e 5e 0a 0e e8 8b 2d c8 5e 5e 0b 0d e8 83 2d c8 5e 5e 0c 0c e8 7b 2d c8 5e 5e 0d 0b e8 73 2d c8 5e 5e 0e 0a e8 6b 2d c8 5e 5e 0f 09 e8 63 2d c8 5e 5e 10 08 e8 5b 2d c8 5e 5e 11 07 e8 53 2d c8 5e 5e 12 06 e8 4b 2d c8 5e 5e 13 05 e8 43 2d c8 5e 5e 14 04 e8 3b 2d c8 5e 5e 15 03 e8 33 2d c8 5e 5e 16 02 e8 2b 2d c8 5e 5e 17 01 e8 23 2d c8 5e 5e 18 00 e8 8f 8c c8 f7 7f 00 00 e8 13 2d c8 5e 5e 00 00 e0 92 8c c8 f7 7f 00 00 e8 03 2d c8 5e 5e 00 00 40 93 8c c8 f7 7f 00 00 e8 f3 2c c8 5e 5e 00 00 a0 93 8c c8 f7 7f 00 00 e8 e3 2c c8 5e 5e 00 00 00 94 8c c8 f7 7f 00 00 e8 d3 2c c8 5e 5e 00 00 60 94 8c c8 f7 7f 00 00 e8 c3 2c c8 5e 5e 00 00 c0 94 8c c8 f7 7f 00 00 e8 b3 2c c8 5e 5e 00 00 20 95 8c c8 f7 7f 00 00 e8 a3 2c c8 5e 5e 00 00 80 95 8c c8 f7 7f 00 00 e8 93 2c c8 5e 5e 00 00 e0 95 8c c8 f7 7f 00 00 e8 83 2c c8 5e 5e 00 00 40 96 8c c8 f7 7f 00 00 e8 73 2c c8 5e 5e 00 01 e8 6b 2c c8 5e 5e 01 00 a8 97 8c c8 f7 7f 00 00 e8 5b 2c c8 5e 5e 00 18 e8 53 2c c8 5e 5e 01 17 e8 4b 2c c8 5e 5e 02 16 e8 43 2c c8 5e 5e 03 15 e8 3b 2c c8 5e 5e 04 14 e8 33 2c c8 5e 5e 05 13 e8 2b 2c c8 5e 5e 06 12 e8 23 2c c8 5e 5e 07 11 e8 1b 2c c8 5e 5e 08 10 e8 13 2c c8 5e 5e 09 0f e8 0b 2c c8 5e 5e 0a 0e e8 03 2c c8 5e 5e 0b 0d e8 fb 2b c8 5e 5e 0c 0c e8 f3 2b c8 5e 5e 0d 0b e8 eb 2b c8 5e 5e 0e 0a e8 e3 2b c8 5e 5e 0f 09 e8 db 2b c8 5e 5e 10 08 e8 d3 2b c8 5e 5e 11 07 e8 cb 2b c8 5e 5e 12 06 e8 c3 2b c8 5e 5e 13 05 e8 bb 2b c8 5e 5e 14 04 e8 b3 2b c8 5e 5e 15 03 e8 ab 2b c8 5e 5e 16 02 e8 a3 2b c8 5e 5e 17 01 e8 9b 2b c8 5e 5e 18 00 b0 96 8c c8 f7 7f 00 00 e8 8b 2b c8 5e 5e 00 00 a8 99 8c c8 f7 7f 00 00 00 00 00 00 00 00 00 00
43        | 7ff7c85e2660h   | 1128    | hex://intrinsics/bitpack?pack8#pack8_g[64i](b512x64i~in,32i)                                                  | ulong pack8<long>(in Block512<long> src, int block)                                                           | c5 f8 77 66 90 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 7b 2f c8 5e 5e 00 18 e8 73 2f c8 5e 5e 01 17 e8 6b 2f c8 5e 5e 02 16 e8 63 2f c8 5e 5e 03 15 e8 5b 2f c8 5e 5e 04 14 e8 53 2f c8 5e 5e 05 13 e8 4b 2f c8 5e 5e 06 12 e8 43 2f c8 5e 5e 07 11 e8 3b 2f c8 5e 5e 08 10 e8 33 2f c8 5e 5e 09 0f e8 2b 2f c8 5e 5e 0a 0e e8 23 2f c8 5e 5e 0b 0d e8 1b 2f c8 5e 5e 0c 0c e8 13 2f c8 5e 5e 0d 0b e8 0b 2f c8 5e 5e 0e 0a e8 03 2f c8 5e 5e 0f 09 e8 fb 2e c8 5e 5e 10 08 e8 f3 2e c8 5e 5e 11 07 e8 eb 2e c8 5e 5e 12 06 e8 e3 2e c8 5e 5e 13 05 e8 db 2e c8 5e 5e 14 04 e8 d3 2e c8 5e 5e 15 03 e8 cb 2e c8 5e 5e 16 02 e8 c3 2e c8 5e 5e 17 01 e8 bb 2e c8 5e 5e 18 00 80 86 8c c8 f7 7f 00 00 e8 ab 2e c8 5e 5e 00 00 b8 8b 8c c8 f7 7f 00 00 e8 9b 2e c8 5e 5e 00 00 18 8c 8c c8 f7 7f 00 00 e8 8b 2e c8 5e 5e 00 00 78 8c 8c c8 f7 7f 00 00 e8 7b 2e c8 5e 5e 00 00 d8 8c 8c c8 f7 7f 00 00 e8 6b 2e c8 5e 5e 00 00 38 8d 8c c8 f7 7f 00 00 e8 5b 2e c8 5e 5e 00 00 98 8d 8c c8 f7 7f 00 00 e8 4b 2e c8 5e 5e 00 00 f8 8d 8c c8 f7 7f 00 00 e8 3b 2e c8 5e 5e 00 00 58 8e 8c c8 f7 7f 00 00 e8 2b 2e c8 5e 5e 00 00 b8 8e 8c c8 f7 7f 00 00 e8 1b 2e c8 5e 5e 00 00 18 8f 8c c8 f7 7f 00 00 e8 0b 2e c8 5e 5e 00 00 78 8f 8c c8 f7 7f 00 00 e8 fb 2d c8 5e 5e 00 01 e8 f3 2d c8 5e 5e 01 00 e0 90 8c c8 f7 7f 00 00 e8 e3 2d c8 5e 5e 00 18 e8 db 2d c8 5e 5e 01 17 e8 d3 2d c8 5e 5e 02 16 e8 cb 2d c8 5e 5e 03 15 e8 c3 2d c8 5e 5e 04 14 e8 bb 2d c8 5e 5e 05 13 e8 b3 2d c8 5e 5e 06 12 e8 ab 2d c8 5e 5e 07 11 e8 a3 2d c8 5e 5e 08 10 e8 9b 2d c8 5e 5e 09 0f e8 93 2d c8 5e 5e 0a 0e e8 8b 2d c8 5e 5e 0b 0d e8 83 2d c8 5e 5e 0c 0c e8 7b 2d c8 5e 5e 0d 0b e8 73 2d c8 5e 5e 0e 0a e8 6b 2d c8 5e 5e 0f 09 e8 63 2d c8 5e 5e 10 08 e8 5b 2d c8 5e 5e 11 07 e8 53 2d c8 5e 5e 12 06 e8 4b 2d c8 5e 5e 13 05 e8 43 2d c8 5e 5e 14 04 e8 3b 2d c8 5e 5e 15 03 e8 33 2d c8 5e 5e 16 02 e8 2b 2d c8 5e 5e 17 01 e8 23 2d c8 5e 5e 18 00 e8 8f 8c c8 f7 7f 00 00 e8 13 2d c8 5e 5e 00 00 e0 92 8c c8 f7 7f 00 00 e8 03 2d c8 5e 5e 00 00 40 93 8c c8 f7 7f 00 00 e8 f3 2c c8 5e 5e 00 00 a0 93 8c c8 f7 7f 00 00 e8 e3 2c c8 5e 5e 00 00 00 94 8c c8 f7 7f 00 00 e8 d3 2c c8 5e 5e 00 00 60 94 8c c8 f7 7f 00 00 e8 c3 2c c8 5e 5e 00 00 c0 94 8c c8 f7 7f 00 00 e8 b3 2c c8 5e 5e 00 00 20 95 8c c8 f7 7f 00 00 e8 a3 2c c8 5e 5e 00 00 80 95 8c c8 f7 7f 00 00 e8 93 2c c8 5e 5e 00 00 e0 95 8c c8 f7 7f 00 00 e8 83 2c c8 5e 5e 00 00 40 96 8c c8 f7 7f 00 00 e8 73 2c c8 5e 5e 00 01 e8 6b 2c c8 5e 5e 01 00 a8 97 8c c8 f7 7f 00 00 e8 5b 2c c8 5e 5e 00 18 e8 53 2c c8 5e 5e 01 17 e8 4b 2c c8 5e 5e 02 16 e8 43 2c c8 5e 5e 03 15 e8 3b 2c c8 5e 5e 04 14 e8 33 2c c8 5e 5e 05 13 e8 2b 2c c8 5e 5e 06 12 e8 23 2c c8 5e 5e 07 11 e8 1b 2c c8 5e 5e 08 10 e8 13 2c c8 5e 5e 09 0f e8 0b 2c c8 5e 5e 0a 0e e8 03 2c c8 5e 5e 0b 0d e8 fb 2b c8 5e 5e 0c 0c e8 f3 2b c8 5e 5e 0d 0b e8 eb 2b c8 5e 5e 0e 0a e8 e3 2b c8 5e 5e 0f 09 e8 db 2b c8 5e 5e 10 08 e8 d3 2b c8 5e 5e 11 07 e8 cb 2b c8 5e 5e 12 06 e8 c3 2b c8 5e 5e 13 05 e8 bb 2b c8 5e 5e 14 04 e8 b3 2b c8 5e 5e 15 03 e8 ab 2b c8 5e 5e 16 02 e8 a3 2b c8 5e 5e 17 01 e8 9b 2b c8 5e 5e 18 00 b0 96 8c c8 f7 7f 00 00 e8 8b 2b c8 5e 5e 00 00 a8 99 8c c8 f7 7f 00 00 00 00 00 00 00 00 00 00
44        | 7ff7c85e2ad0h   | 51      | hex://intrinsics/bitpack?pack8x8#pack8x8_g[8u](uspan8u,32i)                                                   | byte pack8x8<byte>(ReadOnlySpan<byte> src, int offset)                                                        | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
45        | 7ff7c85e2b10h   | 51      | hex://intrinsics/bitpack?pack8x8#pack8x8_g[8i](uspan8i,32i)                                                   | byte pack8x8<sbyte>(ReadOnlySpan<sbyte> src, int offset)                                                      | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
46        | 7ff7c85e2b50h   | 51      | hex://intrinsics/bitpack?pack8x8#pack8x8_g[16u](uspan16u,32i)                                                 | byte pack8x8<ushort>(ReadOnlySpan<ushort> src, int offset)                                                    | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 50 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
47        | 7ff7c85e2b90h   | 51      | hex://intrinsics/bitpack?pack8x8#pack8x8_g[16i](uspan16i,32i)                                                 | byte pack8x8<short>(ReadOnlySpan<short> src, int offset)                                                      | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 50 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
48        | 7ff7c85e2bd0h   | 51      | hex://intrinsics/bitpack?pack8x8#pack8x8_g[32u](uspan32u,32i)                                                 | byte pack8x8<uint>(ReadOnlySpan<uint> src, int offset)                                                        | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 90 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
49        | 7ff7c85e2c10h   | 51      | hex://intrinsics/bitpack?pack8x8#pack8x8_g[32i](uspan32i,32i)                                                 | byte pack8x8<int>(ReadOnlySpan<int> src, int offset)                                                          | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 90 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
50        | 7ff7c85e2c50h   | 51      | hex://intrinsics/bitpack?pack8x8#pack8x8_g[64u](uspan64u,32i)                                                 | byte pack8x8<ulong>(ReadOnlySpan<ulong> src, int offset)                                                      | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 d0 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
51        | 7ff7c85e2c90h   | 51      | hex://intrinsics/bitpack?pack8x8#pack8x8_g[64i](uspan64i,32i)                                                 | byte pack8x8<long>(ReadOnlySpan<long> src, int offset)                                                        | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 d0 48 ba 01 01 01 01 01 01 01 01 c4 e2 fa f5 c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
52        | 7ff7c85e2cd0h   | 51      | hex://intrinsics/bitpack?pack16x8#pack16x8_g[8u](uspan8u,32i)                                                 | ushort pack16x8<byte>(ReadOnlySpan<byte> src, int offset)                                                     | c5 f8 77 66 90 48 8b 01 48 63 d2 48 03 c2 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
53        | 7ff7c85e2d10h   | 51      | hex://intrinsics/bitpack?pack16x8#pack16x8_g[8i](uspan8i,32i)                                                 | ushort pack16x8<sbyte>(ReadOnlySpan<sbyte> src, int offset)                                                   | c5 f8 77 66 90 48 8b 01 48 63 d2 48 03 c2 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
54        | 7ff7c85e2d50h   | 51      | hex://intrinsics/bitpack?pack16x8#pack16x8_g[16u](uspan16u,32i)                                               | ushort pack16x8<ushort>(ReadOnlySpan<ushort> src, int offset)                                                 | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 50 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
55        | 7ff7c85e2d90h   | 51      | hex://intrinsics/bitpack?pack16x8#pack16x8_g[16i](uspan16i,32i)                                               | ushort pack16x8<short>(ReadOnlySpan<short> src, int offset)                                                   | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 50 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
56        | 7ff7c85e2dd0h   | 51      | hex://intrinsics/bitpack?pack16x8#pack16x8_g[32u](uspan32u,32i)                                               | ushort pack16x8<uint>(ReadOnlySpan<uint> src, int offset)                                                     | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 90 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
57        | 7ff7c85e2e10h   | 51      | hex://intrinsics/bitpack?pack16x8#pack16x8_g[32i](uspan32i,32i)                                               | ushort pack16x8<int>(ReadOnlySpan<int> src, int offset)                                                       | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 90 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
58        | 7ff7c85e2e50h   | 51      | hex://intrinsics/bitpack?pack16x8#pack16x8_g[64u](uspan64u,32i)                                               | ushort pack16x8<ulong>(ReadOnlySpan<ulong> src, int offset)                                                   | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 d0 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
59        | 7ff7c85e2e90h   | 1080    | hex://intrinsics/bitpack?pack16x8#pack16x8_g[64i](uspan64i,32i)                                               | ushort pack16x8<long>(ReadOnlySpan<long> src, int offset)                                                     | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 d0 c5 fb f0 00 c5 f9 73 f0 07 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 73 27 c8 5e 5e 00 00 08 9a 8c c8 f7 7f 00 00 e8 63 27 c8 5e 5e 00 00 68 9a 8c c8 f7 7f 00 00 e8 53 27 c8 5e 5e 00 00 c8 9a 8c c8 f7 7f 00 00 e8 43 27 c8 5e 5e 00 00 28 9b 8c c8 f7 7f 00 00 e8 33 27 c8 5e 5e 00 00 88 9b 8c c8 f7 7f 00 00 e8 23 27 c8 5e 5e 00 00 e8 9b 8c c8 f7 7f 00 00 e8 13 27 c8 5e 5e 00 00 48 9c 8c c8 f7 7f 00 00 e8 03 27 c8 5e 5e 00 00 a8 9c 8c c8 f7 7f 00 00 e8 f3 26 c8 5e 5e 00 00 08 9d 8c c8 f7 7f 00 00 e8 e3 26 c8 5e 5e 00 01 e8 db 26 c8 5e 5e 01 00 70 9e 8c c8 f7 7f 00 00 e8 cb 26 c8 5e 5e 00 18 e8 c3 26 c8 5e 5e 01 17 e8 bb 26 c8 5e 5e 02 16 e8 b3 26 c8 5e 5e 03 15 e8 ab 26 c8 5e 5e 04 14 e8 a3 26 c8 5e 5e 05 13 e8 9b 26 c8 5e 5e 06 12 e8 93 26 c8 5e 5e 07 11 e8 8b 26 c8 5e 5e 08 10 e8 83 26 c8 5e 5e 09 0f e8 7b 26 c8 5e 5e 0a 0e e8 73 26 c8 5e 5e 0b 0d e8 6b 26 c8 5e 5e 0c 0c e8 63 26 c8 5e 5e 0d 0b e8 5b 26 c8 5e 5e 0e 0a e8 53 26 c8 5e 5e 0f 09 e8 4b 26 c8 5e 5e 10 08 e8 43 26 c8 5e 5e 11 07 e8 3b 26 c8 5e 5e 12 06 e8 33 26 c8 5e 5e 13 05 e8 2b 26 c8 5e 5e 14 04 e8 23 26 c8 5e 5e 15 03 e8 1b 26 c8 5e 5e 16 02 e8 13 26 c8 5e 5e 17 01 e8 0b 26 c8 5e 5e 18 00 78 9d 8c c8 f7 7f 00 00 e8 fb 25 c8 5e 5e 00 00 70 a0 8c c8 f7 7f 00 00 e8 eb 25 c8 5e 5e 00 00 d0 a0 8c c8 f7 7f 00 00 e8 db 25 c8 5e 5e 00 00 30 a1 8c c8 f7 7f 00 00 e8 cb 25 c8 5e 5e 00 00 90 a1 8c c8 f7 7f 00 00 e8 bb 25 c8 5e 5e 00 00 f0 a1 8c c8 f7 7f 00 00 e8 ab 25 c8 5e 5e 00 00 50 a2 8c c8 f7 7f 00 00 e8 9b 25 c8 5e 5e 00 00 b0 a2 8c c8 f7 7f 00 00 e8 8b 25 c8 5e 5e 00 00 10 a3 8c c8 f7 7f 00 00 e8 7b 25 c8 5e 5e 00 00 70 a3 8c c8 f7 7f 00 00 e8 6b 25 c8 5e 5e 00 00 d0 a3 8c c8 f7 7f 00 00 e8 5b 25 c8 5e 5e 00 0c e8 53 25 c8 5e 5e 01 0b e8 4b 25 c8 5e 5e 02 0a e8 43 25 c8 5e 5e 03 09 e8 3b 25 c8 5e 5e 04 08 e8 33 25 c8 5e 5e 05 07 e8 2b 25 c8 5e 5e 06 06 e8 23 25 c8 5e 5e 07 05 e8 1b 25 c8 5e 5e 08 04 e8 13 25 c8 5e 5e 09 03 e8 0b 25 c8 5e 5e 0a 02 e8 03 25 c8 5e 5e 0b 01 e8 fb 24 c8 5e 5e 0c 00 40 a4 8c c8 f7 7f 00 00 e8 eb 24 c8 5e 5e 00 00 c8 a5 8c c8 f7 7f 00 00 e8 db 24 c8 5e 5e 00 00 78 a6 8c c8 f7 7f 00 00 e8 cb 24 c8 5e 5e 00 00 d8 a6 8c c8 f7 7f 00 00 e8 bb 24 c8 5e 5e 00 00 38 a7 8c c8 f7 7f 00 00 e8 ab 24 c8 5e 5e 00 00 98 a7 8c c8 f7 7f 00 00 e8 9b 24 c8 5e 5e 00 00 f8 a7 8c c8 f7 7f 00 00 e8 8b 24 c8 5e 5e 00 00 58 a8 8c c8 f7 7f 00 00 e8 7b 24 c8 5e 5e 00 00 b8 a8 8c c8 f7 7f 00 00 e8 6b 24 c8 5e 5e 00 00 18 a9 8c c8 f7 7f 00 00 e8 5b 24 c8 5e 5e 00 00 78 a9 8c c8 f7 7f 00 00 e8 4b 24 c8 5e 5e 00 00 d8 a9 8c c8 f7 7f 00 00 e8 3b 24 c8 5e 5e 00 00 38 aa 8c c8 f7 7f 00 00 e8 2b 24 c8 5e 5e 00 00 98 aa 8c c8 f7 7f 00 00 e8 1b 24 c8 5e 5e 00 00 f8 aa 8c c8 f7 7f 00 00 e8 0b 24 c8 5e 5e 00 00 58 ab 8c c8 f7 7f 00 00 e8 fb 23 c8 5e 5e 00 0c e8 f3 23 c8 5e 5e 01 0b e8 eb 23 c8 5e 5e 02 0a e8 e3 23 c8 5e 5e 03 09 e8 db 23 c8 5e 5e 04 08 e8 d3 23 c8 5e 5e 05 07 e8 cb 23 c8 5e 5e 06 06 e8 c3 23 c8 5e 5e 07 05 e8 bb 23 c8 5e 5e 08 04 e8 b3 23 c8 5e 5e 09 03 e8 ab 23 c8 5e 5e 0a 02 e8 a3 23 c8 5e 5e 0b 01 e8 9b 23 c8 5e 5e 0c 00 e8 ab 8c c8 f7 7f 00 00 e8 8b 23 c8 5e 5e 00 00 70 ad 8c c8 f7 7f 00 00 00 00 00 00 00 00 00 00
60        | 7ff7c85e32d0h   | 51      | hex://intrinsics/bitpack?pack32x8#pack32x8_g[8u](uspan8u,32i)                                                 | uint pack32x8<byte>(ReadOnlySpan<byte> src, int offset)                                                       | c5 f8 77 66 90 48 8b 01 48 63 d2 48 03 c2 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
61        | 7ff7c85e3310h   | 51      | hex://intrinsics/bitpack?pack32x8#pack32x8_g[8i](uspan8i,32i)                                                 | uint pack32x8<sbyte>(ReadOnlySpan<sbyte> src, int offset)                                                     | c5 f8 77 66 90 48 8b 01 48 63 d2 48 03 c2 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
62        | 7ff7c85e3350h   | 51      | hex://intrinsics/bitpack?pack32x8#pack32x8_g[16u](uspan16u,32i)                                               | uint pack32x8<ushort>(ReadOnlySpan<ushort> src, int offset)                                                   | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 50 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
63        | 7ff7c85e3390h   | 51      | hex://intrinsics/bitpack?pack32x8#pack32x8_g[16i](uspan16i,32i)                                               | uint pack32x8<short>(ReadOnlySpan<short> src, int offset)                                                     | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 50 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
64        | 7ff7c85e33d0h   | 51      | hex://intrinsics/bitpack?pack32x8#pack32x8_g[32u](uspan32u,32i)                                               | uint pack32x8<uint>(ReadOnlySpan<uint> src, int offset)                                                       | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 90 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
65        | 7ff7c85e3410h   | 51      | hex://intrinsics/bitpack?pack32x8#pack32x8_g[32i](uspan32i,32i)                                               | uint pack32x8<int>(ReadOnlySpan<int> src, int offset)                                                         | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 90 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
66        | 7ff7c85e3450h   | 51      | hex://intrinsics/bitpack?pack32x8#pack32x8_g[64u](uspan64u,32i)                                               | uint pack32x8<ulong>(ReadOnlySpan<ulong> src, int offset)                                                     | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 d0 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
67        | 7ff7c85e3490h   | 51      | hex://intrinsics/bitpack?pack32x8#pack32x8_g[64i](uspan64i,32i)                                               | uint pack32x8<long>(ReadOnlySpan<long> src, int offset)                                                       | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 d0 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 c5 f8 77 c3 cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
68        | 7ff7c85e34d0h   | 87      | hex://intrinsics/bitpack?pack64x8#pack64x8_g[8u](uspan8u,32i)                                                 | ulong pack64x8<byte>(ReadOnlySpan<byte> src, int offset)                                                      | c5 f8 77 66 90 48 8b 01 48 63 d2 48 03 c2 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 20 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
69        | 7ff7c85e3530h   | 87      | hex://intrinsics/bitpack?pack64x8#pack64x8_g[8i](uspan8i,32i)                                                 | ulong pack64x8<sbyte>(ReadOnlySpan<sbyte> src, int offset)                                                    | c5 f8 77 66 90 48 8b 01 48 63 d2 48 03 c2 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 20 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
70        | 7ff7c85e3590h   | 87      | hex://intrinsics/bitpack?pack64x8#pack64x8_g[16u](uspan16u,32i)                                               | ulong pack64x8<ushort>(ReadOnlySpan<ushort> src, int offset)                                                  | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 50 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 40 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
71        | 7ff7c85e35f0h   | 87      | hex://intrinsics/bitpack?pack64x8#pack64x8_g[16i](uspan16i,32i)                                               | ulong pack64x8<short>(ReadOnlySpan<short> src, int offset)                                                    | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 50 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 83 c0 40 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
72        | 7ff7c85e3650h   | 439     | hex://intrinsics/bitpack?pack64x8#pack64x8_g[32u](uspan32u,32i)                                               | ulong pack64x8<uint>(ReadOnlySpan<uint> src, int offset)                                                      | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 b0 0c 8d c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 18 0d 8d c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 80 0d 8d c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 0f 8d c8 f7 7f 00 00 c5 f8 77 66 90 c5 f9 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
73        | 7ff7c85e36b0h   | 343     | hex://intrinsics/bitpack?pack64x8#pack64x8_g[32i](uspan32i,32i)                                               | ulong pack64x8<int>(ReadOnlySpan<int> src, int offset)                                                        | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 90 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 80 00 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 18 0d 8d c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 80 0d 8d c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 0f 8d c8 f7 7f 00 00 c5 f8 77 66 90 c5 f9 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
74        | 7ff7c85e3710h   | 247     | hex://intrinsics/bitpack?pack64x8#pack64x8_g[64u](uspan64u,32i)                                               | ulong pack64x8<ulong>(ReadOnlySpan<ulong> src, int offset)                                                    | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 80 0d 8d c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 0f 8d c8 f7 7f 00 00 c5 f8 77 66 90 c5 f9 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
75        | 7ff7c85e3770h   | 151     | hex://intrinsics/bitpack?pack64x8#pack64x8_g[64i](uspan64i,32i)                                               | ulong pack64x8<long>(ReadOnlySpan<long> src, int offset)                                                      | c5 f8 77 66 90 48 8b 01 48 63 d2 48 8d 04 d0 48 8b d0 c5 ff f0 02 c5 fd 73 f0 07 c5 fd d7 d0 8b d2 48 05 00 01 00 00 c5 ff f0 00 c5 fd 73 f0 07 c5 fd d7 c0 8b c0 48 c1 e0 20 48 0b d0 48 8b c2 c5 f8 77 c3 cc cc cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 0f 8d c8 f7 7f 00 00 c5 f8 77 66 90 c5 f9 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
76        | 7ff7c85e37d0h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[8u](v128x8u,8u)                                                        | ushort pack8<byte>(Vector128<byte> src, byte index)                                                           | c5 f8 77 66 90 c5 f9 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
77        | 7ff7c85e3810h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[8i](v128x8i,8u)                                                        | ushort pack8<sbyte>(Vector128<sbyte> src, byte index)                                                         | c5 f8 77 66 90 c5 f9 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
78        | 7ff7c85e3850h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[16u](v128x16u,8u)                                                      | ushort pack8<ushort>(Vector128<ushort> src, byte index)                                                       | c5 f8 77 66 90 c5 f9 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
79        | 7ff7c85e3890h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[16i](v128x16i,8u)                                                      | ushort pack8<short>(Vector128<short> src, byte index)                                                         | c5 f8 77 66 90 c5 f9 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
80        | 7ff7c85e38d0h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[32u](v128x32u,8u)                                                      | ushort pack8<uint>(Vector128<uint> src, byte index)                                                           | c5 f8 77 66 90 c5 f9 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
81        | 7ff7c85e3910h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[32i](v128x32i,8u)                                                      | ushort pack8<int>(Vector128<int> src, byte index)                                                             | c5 f8 77 66 90 c5 f9 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
82        | 7ff7c85e3950h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[64u](v128x64u,8u)                                                      | ushort pack8<ulong>(Vector128<ulong> src, byte index)                                                         | c5 f8 77 66 90 c5 f9 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
83        | 7ff7c85e3990h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[64i](v128x64i,8u)                                                      | ushort pack8<long>(Vector128<long> src, byte index)                                                           | c5 f8 77 66 90 c5 f9 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
84        | 7ff7c85e39d0h   | 1143    | hex://intrinsics/bitpack?pack8#pack8_g[8u](v256x8u,8u)                                                        | uint pack8<byte>(Vector256<byte> src, byte index)                                                             | c5 f8 77 66 90 c5 fd 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 33 1c c8 5e 5e 00 00 20 ae 8c c8 f7 7f 00 00 e8 23 1c c8 5e 5e 00 00 80 ae 8c c8 f7 7f 00 00 e8 13 1c c8 5e 5e 00 00 e0 ae 8c c8 f7 7f 00 00 e8 03 1c c8 5e 5e 00 00 40 af 8c c8 f7 7f 00 00 e8 f3 1b c8 5e 5e 00 00 a0 af 8c c8 f7 7f 00 00 e8 e3 1b c8 5e 5e 00 00 00 b0 8c c8 f7 7f 00 00 e8 d3 1b c8 5e 5e 00 00 60 b0 8c c8 f7 7f 00 00 e8 c3 1b c8 5e 5e 00 00 c0 b0 8c c8 f7 7f 00 00 e8 b3 1b c8 5e 5e 00 00 20 b1 8c c8 f7 7f 00 00 e8 a3 1b c8 5e 5e 00 00 80 b1 8c c8 f7 7f 00 00 e8 93 1b c8 5e 5e 00 00 e0 b1 8c c8 f7 7f 00 00 e8 83 1b c8 5e 5e 00 00 40 b2 8c c8 f7 7f 00 00 e8 73 1b c8 5e 5e 00 00 a0 b2 8c c8 f7 7f 00 00 e8 63 1b c8 5e 5e 00 00 00 b3 8c c8 f7 7f 00 00 e8 53 1b c8 5e 5e 00 0c e8 4b 1b c8 5e 5e 01 0b e8 43 1b c8 5e 5e 02 0a e8 3b 1b c8 5e 5e 03 09 e8 33 1b c8 5e 5e 04 08 e8 2b 1b c8 5e 5e 05 07 e8 23 1b c8 5e 5e 06 06 e8 1b 1b c8 5e 5e 07 05 e8 13 1b c8 5e 5e 08 04 e8 0b 1b c8 5e 5e 09 03 e8 03 1b c8 5e 5e 0a 02 e8 fb 1a c8 5e 5e 0b 01 e8 f3 1a c8 5e 5e 0c 00 70 b3 8c c8 f7 7f 00 00 e8 e3 1a c8 5e 5e 00 00 f8 b4 8c c8 f7 7f 00 00 e8 d3 1a c8 5e 5e 00 00 a8 b5 8c c8 f7 7f 00 00 e8 c3 1a c8 5e 5e 00 00 08 b6 8c c8 f7 7f 00 00 e8 b3 1a c8 5e 5e 00 00 68 b6 8c c8 f7 7f 00 00 e8 a3 1a c8 5e 5e 00 00 c8 b6 8c c8 f7 7f 00 00 e8 93 1a c8 5e 5e 00 00 28 b7 8c c8 f7 7f 00 00 e8 83 1a c8 5e 5e 00 00 88 b7 8c c8 f7 7f 00 00 e8 73 1a c8 5e 5e 00 00 e8 b7 8c c8 f7 7f 00 00 e8 63 1a c8 5e 5e 00 00 48 b8 8c c8 f7 7f 00 00 e8 53 1a c8 5e 5e 00 00 a8 b8 8c c8 f7 7f 00 00 e8 43 1a c8 5e 5e 00 00 08 b9 8c c8 f7 7f 00 00 e8 33 1a c8 5e 5e 00 00 68 b9 8c c8 f7 7f 00 00 e8 23 1a c8 5e 5e 00 00 c8 b9 8c c8 f7 7f 00 00 e8 13 1a c8 5e 5e 00 00 28 ba 8c c8 f7 7f 00 00 e8 03 1a c8 5e 5e 00 0c e8 fb 19 c8 5e 5e 01 0b e8 f3 19 c8 5e 5e 02 0a e8 eb 19 c8 5e 5e 03 09 e8 e3 19 c8 5e 5e 04 08 e8 db 19 c8 5e 5e 05 07 e8 d3 19 c8 5e 5e 06 06 e8 cb 19 c8 5e 5e 07 05 e8 c3 19 c8 5e 5e 08 04 e8 bb 19 c8 5e 5e 09 03 e8 b3 19 c8 5e 5e 0a 02 e8 ab 19 c8 5e 5e 0b 01 e8 a3 19 c8 5e 5e 0c 00 b8 ba 8c c8 f7 7f 00 00 e8 93 19 c8 5e 5e 00 00 40 bc 8c c8 f7 7f 00 00 e8 83 19 c8 5e 5e 00 00 f0 bc 8c c8 f7 7f 00 00 e8 73 19 c8 5e 5e 00 00 50 bd 8c c8 f7 7f 00 00 e8 63 19 c8 5e 5e 00 00 b0 bd 8c c8 f7 7f 00 00 e8 53 19 c8 5e 5e 00 00 10 be 8c c8 f7 7f 00 00 e8 43 19 c8 5e 5e 00 00 70 be 8c c8 f7 7f 00 00 e8 33 19 c8 5e 5e 00 00 d0 be 8c c8 f7 7f 00 00 e8 23 19 c8 5e 5e 00 00 30 bf 8c c8 f7 7f 00 00 e8 13 19 c8 5e 5e 00 00 90 bf 8c c8 f7 7f 00 00 e8 03 19 c8 5e 5e 00 00 f0 bf 8c c8 f7 7f 00 00 e8 f3 18 c8 5e 5e 00 00 50 c0 8c c8 f7 7f 00 00 e8 e3 18 c8 5e 5e 00 00 b0 c0 8c c8 f7 7f 00 00 e8 d3 18 c8 5e 5e 00 00 10 c1 8c c8 f7 7f 00 00 e8 c3 18 c8 5e 5e 00 00 70 c1 8c c8 f7 7f 00 00 e8 b3 18 c8 5e 5e 00 0c e8 ab 18 c8 5e 5e 01 0b e8 a3 18 c8 5e 5e 02 0a e8 9b 18 c8 5e 5e 03 09 e8 93 18 c8 5e 5e 04 08 e8 8b 18 c8 5e 5e 05 07 e8 83 18 c8 5e 5e 06 06 e8 7b 18 c8 5e 5e 07 05 e8 73 18 c8 5e 5e 08 04 e8 6b 18 c8 5e 5e 09 03 e8 63 18 c8 5e 5e 0a 02 e8 5b 18 c8 5e 5e 0b 01 e8 53 18 c8 5e 5e 0c 00 e0 c1 8c c8 f7 7f 00 00 e8 43 18 c8 5e 5e 00 00 68 c3 8c c8 f7 7f 00 00 80 14 8d c8 f7 7f 00 00 c5 f8 77 66 90 c5 fd 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
85        | 7ff7c85e3e10h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[8i](v256x8i,8u)                                                        | uint pack8<sbyte>(Vector256<sbyte> src, byte index)                                                           | c5 f8 77 66 90 c5 fd 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
86        | 7ff7c85e3e50h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[16u](v256x16u,8u)                                                      | uint pack8<ushort>(Vector256<ushort> src, byte index)                                                         | c5 f8 77 66 90 c5 fd 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
87        | 7ff7c85e3e90h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[16i](v256x16i,8u)                                                      | uint pack8<short>(Vector256<short> src, byte index)                                                           | c5 f8 77 66 90 c5 fd 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
88        | 7ff7c85e3ed0h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[32u](v256x32u,8u)                                                      | uint pack8<uint>(Vector256<uint> src, byte index)                                                             | c5 f8 77 66 90 c5 fd 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
89        | 7ff7c85e3f10h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[32i](v256x32i,8u)                                                      | uint pack8<int>(Vector256<int> src, byte index)                                                               | c5 f8 77 66 90 c5 fd 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
90        | 7ff7c85e3f50h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[64u](v256x64u,8u)                                                      | uint pack8<ulong>(Vector256<ulong> src, byte index)                                                           | c5 f8 77 66 90 c5 fd 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
91        | 7ff7c85e3f90h   | 55      | hex://intrinsics/bitpack?pack8#pack8_g[64i](v256x64i,8u)                                                      | uint pack8<long>(Vector256<long> src, byte index)                                                             | c5 f8 77 66 90 c5 fd 10 01 0f b6 c2 f7 d8 83 c0 07 0f b6 c0 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
92        | 7ff7c85e3fd0h   | 35      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[8u](v128x8u)                                                     | ushort packmsb8<byte>(Vector128<byte> src)                                                                    | c5 f8 77 66 90 c5 f9 10 01 c5 f9 d7 c0 0f b7 c0 c3 cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
93        | 7ff7c85e4000h   | 35      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[8i](v128x8i)                                                     | ushort packmsb8<sbyte>(Vector128<sbyte> src)                                                                  | c5 f8 77 66 90 c5 f9 10 01 c5 f9 d7 c0 0f b7 c0 c3 cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
94        | 7ff7c85e4030h   | 35      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[16u](v128x16u)                                                   | ushort packmsb8<ushort>(Vector128<ushort> src)                                                                | c5 f8 77 66 90 c5 f9 10 01 c5 f9 d7 c0 0f b7 c0 c3 cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
95        | 7ff7c85e4060h   | 35      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[16i](v128x16i)                                                   | ushort packmsb8<short>(Vector128<short> src)                                                                  | c5 f8 77 66 90 c5 f9 10 01 c5 f9 d7 c0 0f b7 c0 c3 cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
96        | 7ff7c85e4090h   | 35      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[32u](v128x32u)                                                   | ushort packmsb8<uint>(Vector128<uint> src)                                                                    | c5 f8 77 66 90 c5 f9 10 01 c5 f9 d7 c0 0f b7 c0 c3 cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
97        | 7ff7c85e40c0h   | 35      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[32i](v128x32i)                                                   | ushort packmsb8<int>(Vector128<int> src)                                                                      | c5 f8 77 66 90 c5 f9 10 01 c5 f9 d7 c0 0f b7 c0 c3 cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
98        | 7ff7c85e40f0h   | 35      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[64u](v128x64u)                                                   | ushort packmsb8<ulong>(Vector128<ulong> src)                                                                  | c5 f8 77 66 90 c5 f9 10 01 c5 f9 d7 c0 0f b7 c0 c3 cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
99        | 7ff7c85e4120h   | 35      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[64i](v128x64i)                                                   | ushort packmsb8<long>(Vector128<long> src)                                                                    | c5 f8 77 66 90 c5 f9 10 01 c5 f9 d7 c0 0f b7 c0 c3 cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
100       | 7ff7c85e4150h   | 39      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[8u](v256x8u)                                                     | ulong packmsb8<byte>(Vector256<byte> src)                                                                     | c5 f8 77 66 90 c5 fd 10 01 c5 fd d7 c0 8b c0 c5 f8 77 c3 cc cc 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
101       | 7ff7c85e4180h   | 39      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[8i](v256x8i)                                                     | ulong packmsb8<sbyte>(Vector256<sbyte> src)                                                                   | c5 f8 77 66 90 c5 fd 10 01 c5 fd d7 c0 8b c0 c5 f8 77 c3 cc cc 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
102       | 7ff7c85e41b0h   | 39      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[16u](v256x16u)                                                   | ulong packmsb8<ushort>(Vector256<ushort> src)                                                                 | c5 f8 77 66 90 c5 fd 10 01 c5 fd d7 c0 8b c0 c5 f8 77 c3 cc cc 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
103       | 7ff7c85e41e0h   | 39      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[16i](v256x16i)                                                   | ulong packmsb8<short>(Vector256<short> src)                                                                   | c5 f8 77 66 90 c5 fd 10 01 c5 fd d7 c0 8b c0 c5 f8 77 c3 cc cc 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
104       | 7ff7c85e4210h   | 39      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[32u](v256x32u)                                                   | ulong packmsb8<uint>(Vector256<uint> src)                                                                     | c5 f8 77 66 90 c5 fd 10 01 c5 fd d7 c0 8b c0 c5 f8 77 c3 cc cc 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
105       | 7ff7c85e4240h   | 39      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[32i](v256x32i)                                                   | ulong packmsb8<int>(Vector256<int> src)                                                                       | c5 f8 77 66 90 c5 fd 10 01 c5 fd d7 c0 8b c0 c5 f8 77 c3 cc cc 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
106       | 7ff7c85e4270h   | 39      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[64u](v256x64u)                                                   | ulong packmsb8<ulong>(Vector256<ulong> src)                                                                   | c5 f8 77 66 90 c5 fd 10 01 c5 fd d7 c0 8b c0 c5 f8 77 c3 cc cc 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
107       | 7ff7c85e42a0h   | 39      | hex://intrinsics/bitpack?packmsb8#packmsb8_g[64i](v256x64i)                                                   | ulong packmsb8<long>(Vector256<long> src)                                                                     | c5 f8 77 66 90 c5 fd 10 01 c5 fd d7 c0 8b c0 c5 f8 77 c3 cc cc 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
108       | 7ff7c85e42d0h   | 1139    | hex://intrinsics/bitpack?packlsb8#packlsb8_g[8u](v128x8u)                                                     | ushort packlsb8<byte>(Vector128<byte> src)                                                                    | c5 f8 77 66 90 c5 f9 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 33 13 c8 5e 5e 00 00 18 c4 8c c8 f7 7f 00 00 e8 23 13 c8 5e 5e 00 00 78 c4 8c c8 f7 7f 00 00 e8 13 13 c8 5e 5e 00 00 d8 c4 8c c8 f7 7f 00 00 e8 03 13 c8 5e 5e 00 00 38 c5 8c c8 f7 7f 00 00 e8 f3 12 c8 5e 5e 00 00 98 c5 8c c8 f7 7f 00 00 e8 e3 12 c8 5e 5e 00 00 f8 c5 8c c8 f7 7f 00 00 e8 d3 12 c8 5e 5e 00 00 58 c6 8c c8 f7 7f 00 00 e8 c3 12 c8 5e 5e 00 0c e8 bb 12 c8 5e 5e 01 0b e8 b3 12 c8 5e 5e 02 0a e8 ab 12 c8 5e 5e 03 09 e8 a3 12 c8 5e 5e 04 08 e8 9b 12 c8 5e 5e 05 07 e8 93 12 c8 5e 5e 06 06 e8 8b 12 c8 5e 5e 07 05 e8 83 12 c8 5e 5e 08 04 e8 7b 12 c8 5e 5e 09 03 e8 73 12 c8 5e 5e 0a 02 e8 6b 12 c8 5e 5e 0b 01 e8 63 12 c8 5e 5e 0c 00 e8 c6 8c c8 f7 7f 00 00 e8 53 12 c8 5e 5e 00 00 70 c8 8c c8 f7 7f 00 00 e8 43 12 c8 5e 5e 00 00 20 c9 8c c8 f7 7f 00 00 e8 33 12 c8 5e 5e 00 00 80 c9 8c c8 f7 7f 00 00 e8 23 12 c8 5e 5e 00 00 e0 c9 8c c8 f7 7f 00 00 e8 13 12 c8 5e 5e 00 00 40 ca 8c c8 f7 7f 00 00 e8 03 12 c8 5e 5e 00 00 a0 ca 8c c8 f7 7f 00 00 e8 f3 11 c8 5e 5e 00 00 00 cb 8c c8 f7 7f 00 00 e8 e3 11 c8 5e 5e 00 00 60 cb 8c c8 f7 7f 00 00 e8 d3 11 c8 5e 5e 00 01 e8 cb 11 c8 5e 5e 01 00 c8 cc 8c c8 f7 7f 00 00 e8 bb 11 c8 5e 5e 00 18 e8 b3 11 c8 5e 5e 01 17 e8 ab 11 c8 5e 5e 02 16 e8 a3 11 c8 5e 5e 03 15 e8 9b 11 c8 5e 5e 04 14 e8 93 11 c8 5e 5e 05 13 e8 8b 11 c8 5e 5e 06 12 e8 83 11 c8 5e 5e 07 11 e8 7b 11 c8 5e 5e 08 10 e8 73 11 c8 5e 5e 09 0f e8 6b 11 c8 5e 5e 0a 0e e8 63 11 c8 5e 5e 0b 0d e8 5b 11 c8 5e 5e 0c 0c e8 53 11 c8 5e 5e 0d 0b e8 4b 11 c8 5e 5e 0e 0a e8 43 11 c8 5e 5e 0f 09 e8 3b 11 c8 5e 5e 10 08 e8 33 11 c8 5e 5e 11 07 e8 2b 11 c8 5e 5e 12 06 e8 23 11 c8 5e 5e 13 05 e8 1b 11 c8 5e 5e 14 04 e8 13 11 c8 5e 5e 15 03 e8 0b 11 c8 5e 5e 16 02 e8 03 11 c8 5e 5e 17 01 e8 fb 10 c8 5e 5e 18 00 d0 cb 8c c8 f7 7f 00 00 e8 eb 10 c8 5e 5e 00 00 c8 ce 8c c8 f7 7f 00 00 e8 db 10 c8 5e 5e 00 00 28 cf 8c c8 f7 7f 00 00 e8 cb 10 c8 5e 5e 00 00 88 cf 8c c8 f7 7f 00 00 e8 bb 10 c8 5e 5e 00 00 e8 cf 8c c8 f7 7f 00 00 e8 ab 10 c8 5e 5e 00 00 48 d0 8c c8 f7 7f 00 00 e8 9b 10 c8 5e 5e 00 00 a8 d0 8c c8 f7 7f 00 00 e8 8b 10 c8 5e 5e 00 00 08 d1 8c c8 f7 7f 00 00 e8 7b 10 c8 5e 5e 00 00 68 d1 8c c8 f7 7f 00 00 e8 6b 10 c8 5e 5e 00 00 c8 d1 8c c8 f7 7f 00 00 e8 5b 10 c8 5e 5e 00 00 28 d2 8c c8 f7 7f 00 00 e8 4b 10 c8 5e 5e 00 00 88 d2 8c c8 f7 7f 00 00 e8 3b 10 c8 5e 5e 00 00 e8 d2 8c c8 f7 7f 00 00 e8 2b 10 c8 5e 5e 00 00 48 d3 8c c8 f7 7f 00 00 e8 1b 10 c8 5e 5e 00 00 a8 d3 8c c8 f7 7f 00 00 e8 0b 10 c8 5e 5e 00 00 08 d4 8c c8 f7 7f 00 00 e8 fb 0f c8 5e 5e 00 00 68 d4 8c c8 f7 7f 00 00 e8 eb 0f c8 5e 5e 00 00 c8 d4 8c c8 f7 7f 00 00 e8 db 0f c8 5e 5e 00 00 28 d5 8c c8 f7 7f 00 00 e8 cb 0f c8 5e 5e 00 01 e8 c3 0f c8 5e 5e 01 00 90 d6 8c c8 f7 7f 00 00 e8 b3 0f c8 5e 5e 00 00 90 d8 8c c8 f7 7f 00 00 e8 a3 0f c8 5e 5e 00 00 f0 d8 8c c8 f7 7f 00 00 e8 93 0f c8 5e 5e 00 00 50 d9 8c c8 f7 7f 00 00 e8 83 0f c8 5e 5e 00 00 b0 d9 8c c8 f7 7f 00 00 e8 73 0f c8 5e 5e 00 00 10 da 8c c8 f7 7f 00 00 e8 63 0f c8 5e 5e 00 00 70 da 8c c8 f7 7f 00 00 e8 53 0f c8 5e 5e 00 00 d0 da 8c c8 f7 7f 00 00 e8 43 0f c8 5e 5e 00 00 30 db 8c c8 f7 7f 00 00 38 23 8d c8 f7 7f 00 00 c5 f8 77 66 90 c5 f9 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
109       | 7ff7c85e4710h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[8i](v128x8i)                                                     | ushort packlsb8<sbyte>(Vector128<sbyte> src)                                                                  | c5 f8 77 66 90 c5 f9 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
110       | 7ff7c85e4750h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[16u](v128x16u)                                                   | ushort packlsb8<ushort>(Vector128<ushort> src)                                                                | c5 f8 77 66 90 c5 f9 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
111       | 7ff7c85e4790h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[16i](v128x16i)                                                   | ushort packlsb8<short>(Vector128<short> src)                                                                  | c5 f8 77 66 90 c5 f9 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
112       | 7ff7c85e47d0h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[32u](v128x32u)                                                   | ushort packlsb8<uint>(Vector128<uint> src)                                                                    | c5 f8 77 66 90 c5 f9 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
113       | 7ff7c85e4810h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[32i](v128x32i)                                                   | ushort packlsb8<int>(Vector128<int> src)                                                                      | c5 f8 77 66 90 c5 f9 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
114       | 7ff7c85e4850h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[64u](v128x64u)                                                   | ushort packlsb8<ulong>(Vector128<ulong> src)                                                                  | c5 f8 77 66 90 c5 f9 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
115       | 7ff7c85e4890h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[64i](v128x64i)                                                   | ushort packlsb8<long>(Vector128<long> src)                                                                    | c5 f8 77 66 90 c5 f9 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
116       | 7ff7c85e48d0h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[8u](v256x8u)                                                     | uint packlsb8<byte>(Vector256<byte> src)                                                                      | c5 f8 77 66 90 c5 fd 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
117       | 7ff7c85e4910h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[8i](v256x8i)                                                     | uint packlsb8<sbyte>(Vector256<sbyte> src)                                                                    | c5 f8 77 66 90 c5 fd 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
118       | 7ff7c85e4950h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[16u](v256x16u)                                                   | uint packlsb8<ushort>(Vector256<ushort> src)                                                                  | c5 f8 77 66 90 c5 fd 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
119       | 7ff7c85e4990h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[16i](v256x16i)                                                   | uint packlsb8<short>(Vector256<short> src)                                                                    | c5 f8 77 66 90 c5 fd 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
120       | 7ff7c85e49d0h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[32u](v256x32u)                                                   | uint packlsb8<uint>(Vector256<uint> src)                                                                      | c5 f8 77 66 90 c5 fd 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
121       | 7ff7c85e4a10h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[32i](v256x32i)                                                   | uint packlsb8<int>(Vector256<int> src)                                                                        | c5 f8 77 66 90 c5 fd 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
122       | 7ff7c85e4a50h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[64u](v256x64u)                                                   | uint packlsb8<ulong>(Vector256<ulong> src)                                                                    | c5 f8 77 66 90 c5 fd 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
123       | 7ff7c85e4a90h   | 51      | hex://intrinsics/bitpack?packlsb8#packlsb8_g[64i](v256x64i)                                                   | uint packlsb8<long>(Vector256<long> src)                                                                      | c5 f8 77 66 90 c5 fd 10 01 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 c3 cc cc cc cc 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
124       | 7ff7c85e4ad0h   | 179     | hex://intrinsics/bitpack?unpack32#unpack32_g[8u](uspan8u,b256x32u~in)                                         | void unpack32<byte>(ReadOnlySpan<byte> src, in Block256<uint> dst)                                            | 56 48 83 ec 30 c5 f8 77 33 c0 48 89 44 24 28 8b 42 08 44 8b c0 41 c1 f8 1f 41 83 e0 07 41 03 c0 c1 f8 03 48 8b 09 45 33 c0 85 c0 7e 62 4d 63 c8 46 0f b6 0c 09 45 8b d0 41 c1 e2 03 45 8b da 49 83 c3 08 8b 72 08 4c 3b de 77 4d 4c 8b 1a 4d 63 d2 4f 8d 14 93 45 33 db 4c 89 5c 24 28 4c 89 5c 24 28 4c 8d 5c 24 28 45 0f b6 c9 48 be 01 01 01 01 01 01 01 01 c4 62 b3 f5 ce 4d 89 0b c4 c2 7d 31 03 c4 c1 7e 7f 02 41 ff c0 44 3b c0 7c 9e c5 f8 77 48 83 c4 30 5e c3 e8 cb fe 16 ff cc 00 00 19 05 02 00 05 52 01 60 40 00 00 00 00 00 00 00 00 00 00
125       | 7ff7c85e4b90h   | 888     | hex://intrinsics/bitpack?unpack32#unpack32_g[16u](uspan16u,b256x32u~in)                                       | void unpack32<ushort>(ReadOnlySpan<ushort> src, in Block256<uint> dst)                                        | 56 48 83 ec 30 c5 f8 77 33 c0 48 89 44 24 28 8b 42 08 44 8b c0 41 c1 f8 1f 41 83 e0 07 41 03 c0 c1 f8 03 4c 8b 01 8b 49 08 6b c9 02 70 6f 33 c9 85 c0 7e 60 4c 63 c9 47 0f b6 0c 08 44 8b d1 41 c1 e2 03 45 8b da 49 83 c3 08 8b 72 08 4c 3b de 77 50 4c 8b 1a 4d 63 d2 4f 8d 14 93 45 33 db 4c 89 5c 24 28 4c 89 5c 24 28 4c 8d 5c 24 28 45 0f b6 c9 48 be 01 01 01 01 01 01 01 01 c4 62 b3 f5 ce 4d 89 0b c4 c2 7d 31 03 c4 c1 7e 7f 02 ff c1 3b c8 7c a0 c5 f8 77 48 83 c4 30 5e c3 e8 ee af da 5e e8 01 fe 16 ff cc 19 05 02 00 05 52 01 60 40 00 00 00 00 00 00 00 d8 2d 8d c8 f7 7f 00 00 56 48 83 ec 30 c5 f8 77 33 c0 48 89 44 24 28 8b 42 08 44 8b c0 41 c1 f8 1f 41 83 e0 07 41 03 c0 c1 f8 03 4c 8b 01 8b 49 08 6b c9 04 70 6f 33 c9 85 c0 7e 60 4c 63 c9 47 0f b6 0c 08 44 8b d1 41 c1 e2 03 45 8b da 49 83 c3 08 8b 72 08 4c 3b de 77 50 4c 8b 1a 4d 63 d2 4f 8d 14 93 45 33 db 4c 89 5c 24 28 4c 89 5c 24 28 4c 8d 5c 24 28 45 0f b6 c9 48 be 01 01 01 01 01 01 01 01 c4 62 b3 f5 ce 4d 89 0b c4 c2 7d 31 03 c4 c1 7e 7f 02 ff c1 3b c8 7c a0 c5 f8 77 48 83 c4 30 5e c3 e8 2e af da 5e e8 41 fd 16 ff cc 19 05 02 00 05 52 01 60 40 00 00 00 00 00 00 00 c8 2e 8d c8 f7 7f 00 00 56 48 83 ec 30 c5 f8 77 33 c0 48 89 44 24 28 8b 42 08 44 8b c0 41 c1 f8 1f 41 83 e0 07 41 03 c0 c1 f8 03 4c 8b 01 8b 49 08 6b c9 08 70 6f 33 c9 85 c0 7e 60 4c 63 c9 47 0f b6 0c 08 44 8b d1 41 c1 e2 03 45 8b da 49 83 c3 08 8b 72 08 4c 3b de 77 50 4c 8b 1a 4d 63 d2 4f 8d 14 93 45 33 db 4c 89 5c 24 28 4c 89 5c 24 28 4c 8d 5c 24 28 45 0f b6 c9 48 be 01 01 01 01 01 01 01 01 c4 62 b3 f5 ce 4d 89 0b c4 c2 7d 31 03 c4 c1 7e 7f 02 ff c1 3b c8 7c a0 c5 f8 77 48 83 c4 30 5e c3 e8 6e ae da 5e e8 81 fc 16 ff cc 19 05 02 00 05 52 01 60 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 6b 08 c8 5e 5e 00 18 e8 63 08 c8 5e 5e 01 17 e8 5b 08 c8 5e 5e 02 16 e8 53 08 c8 5e 5e 03 15 e8 4b 08 c8 5e 5e 04 14 e8 43 08 c8 5e 5e 05 13 e8 3b 08 c8 5e 5e 06 12 e8 33 08 c8 5e 5e 07 11 e8 2b 08 c8 5e 5e 08 10 e8 23 08 c8 5e 5e 09 0f e8 1b 08 c8 5e 5e 0a 0e e8 13 08 c8 5e 5e 0b 0d e8 0b 08 c8 5e 5e 0c 0c e8 03 08 c8 5e 5e 0d 0b e8 fb 07 c8 5e 5e 0e 0a e8 f3 07 c8 5e 5e 0f 09 e8 eb 07 c8 5e 5e 10 08 e8 e3 07 c8 5e 5e 11 07 e8 db 07 c8 5e 5e 12 06 e8 d3 07 c8 5e 5e 13 05 e8 cb 07 c8 5e 5e 14 04 e8 c3 07 c8 5e 5e 15 03 e8 bb 07 c8 5e 5e 16 02 e8 b3 07 c8 5e 5e 17 01 e8 ab 07 c8 5e 5e 18 00 98 d5 8c c8 f7 7f 00 00 e8 9b 07 c8 5e 5e 00 00 90 db 8c c8 f7 7f 00 00 e8 8b 07 c8 5e 5e 00 00 f0 db 8c c8 f7 7f 00 00 e8 7b 07 c8 5e 5e 00 00 50 dc 8c c8 f7 7f 00 00 e8 6b 07 c8 5e 5e 00 00 b0 dc 8c c8 f7 7f 00 00 e8 5b 07 c8 5e 5e 00 00 10 dd 8c c8 f7 7f 00 00 e8 4b 07 c8 5e 5e 00 00 70 dd 8c c8 f7 7f 00 00 00 00 00 00 00 00 00 00
126       | 7ff7c85e4c50h   | 696     | hex://intrinsics/bitpack?unpack32#unpack32_g[32u](uspan32u,b256x32u~in)                                       | void unpack32<uint>(ReadOnlySpan<uint> src, in Block256<uint> dst)                                            | 56 48 83 ec 30 c5 f8 77 33 c0 48 89 44 24 28 8b 42 08 44 8b c0 41 c1 f8 1f 41 83 e0 07 41 03 c0 c1 f8 03 4c 8b 01 8b 49 08 6b c9 04 70 6f 33 c9 85 c0 7e 60 4c 63 c9 47 0f b6 0c 08 44 8b d1 41 c1 e2 03 45 8b da 49 83 c3 08 8b 72 08 4c 3b de 77 50 4c 8b 1a 4d 63 d2 4f 8d 14 93 45 33 db 4c 89 5c 24 28 4c 89 5c 24 28 4c 8d 5c 24 28 45 0f b6 c9 48 be 01 01 01 01 01 01 01 01 c4 62 b3 f5 ce 4d 89 0b c4 c2 7d 31 03 c4 c1 7e 7f 02 ff c1 3b c8 7c a0 c5 f8 77 48 83 c4 30 5e c3 e8 2e af da 5e e8 41 fd 16 ff cc 19 05 02 00 05 52 01 60 40 00 00 00 00 00 00 00 c8 2e 8d c8 f7 7f 00 00 56 48 83 ec 30 c5 f8 77 33 c0 48 89 44 24 28 8b 42 08 44 8b c0 41 c1 f8 1f 41 83 e0 07 41 03 c0 c1 f8 03 4c 8b 01 8b 49 08 6b c9 08 70 6f 33 c9 85 c0 7e 60 4c 63 c9 47 0f b6 0c 08 44 8b d1 41 c1 e2 03 45 8b da 49 83 c3 08 8b 72 08 4c 3b de 77 50 4c 8b 1a 4d 63 d2 4f 8d 14 93 45 33 db 4c 89 5c 24 28 4c 89 5c 24 28 4c 8d 5c 24 28 45 0f b6 c9 48 be 01 01 01 01 01 01 01 01 c4 62 b3 f5 ce 4d 89 0b c4 c2 7d 31 03 c4 c1 7e 7f 02 ff c1 3b c8 7c a0 c5 f8 77 48 83 c4 30 5e c3 e8 6e ae da 5e e8 81 fc 16 ff cc 19 05 02 00 05 52 01 60 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 6b 08 c8 5e 5e 00 18 e8 63 08 c8 5e 5e 01 17 e8 5b 08 c8 5e 5e 02 16 e8 53 08 c8 5e 5e 03 15 e8 4b 08 c8 5e 5e 04 14 e8 43 08 c8 5e 5e 05 13 e8 3b 08 c8 5e 5e 06 12 e8 33 08 c8 5e 5e 07 11 e8 2b 08 c8 5e 5e 08 10 e8 23 08 c8 5e 5e 09 0f e8 1b 08 c8 5e 5e 0a 0e e8 13 08 c8 5e 5e 0b 0d e8 0b 08 c8 5e 5e 0c 0c e8 03 08 c8 5e 5e 0d 0b e8 fb 07 c8 5e 5e 0e 0a e8 f3 07 c8 5e 5e 0f 09 e8 eb 07 c8 5e 5e 10 08 e8 e3 07 c8 5e 5e 11 07 e8 db 07 c8 5e 5e 12 06 e8 d3 07 c8 5e 5e 13 05 e8 cb 07 c8 5e 5e 14 04 e8 c3 07 c8 5e 5e 15 03 e8 bb 07 c8 5e 5e 16 02 e8 b3 07 c8 5e 5e 17 01 e8 ab 07 c8 5e 5e 18 00 98 d5 8c c8 f7 7f 00 00 e8 9b 07 c8 5e 5e 00 00 90 db 8c c8 f7 7f 00 00 e8 8b 07 c8 5e 5e 00 00 f0 db 8c c8 f7 7f 00 00 e8 7b 07 c8 5e 5e 00 00 50 dc 8c c8 f7 7f 00 00 e8 6b 07 c8 5e 5e 00 00 b0 dc 8c c8 f7 7f 00 00 e8 5b 07 c8 5e 5e 00 00 10 dd 8c c8 f7 7f 00 00 e8 4b 07 c8 5e 5e 00 00 70 dd 8c c8 f7 7f 00 00 00 00 00 00 00 00 00 00
127       | 7ff7c85e4d10h   | 504     | hex://intrinsics/bitpack?unpack32#unpack32_g[64u](uspan64u,b256x32u~in)                                       | void unpack32<ulong>(ReadOnlySpan<ulong> src, in Block256<uint> dst)                                          | 56 48 83 ec 30 c5 f8 77 33 c0 48 89 44 24 28 8b 42 08 44 8b c0 41 c1 f8 1f 41 83 e0 07 41 03 c0 c1 f8 03 4c 8b 01 8b 49 08 6b c9 08 70 6f 33 c9 85 c0 7e 60 4c 63 c9 47 0f b6 0c 08 44 8b d1 41 c1 e2 03 45 8b da 49 83 c3 08 8b 72 08 4c 3b de 77 50 4c 8b 1a 4d 63 d2 4f 8d 14 93 45 33 db 4c 89 5c 24 28 4c 89 5c 24 28 4c 8d 5c 24 28 45 0f b6 c9 48 be 01 01 01 01 01 01 01 01 c4 62 b3 f5 ce 4d 89 0b c4 c2 7d 31 03 c4 c1 7e 7f 02 ff c1 3b c8 7c a0 c5 f8 77 48 83 c4 30 5e c3 e8 6e ae da 5e e8 81 fc 16 ff cc 19 05 02 00 05 52 01 60 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 6b 08 c8 5e 5e 00 18 e8 63 08 c8 5e 5e 01 17 e8 5b 08 c8 5e 5e 02 16 e8 53 08 c8 5e 5e 03 15 e8 4b 08 c8 5e 5e 04 14 e8 43 08 c8 5e 5e 05 13 e8 3b 08 c8 5e 5e 06 12 e8 33 08 c8 5e 5e 07 11 e8 2b 08 c8 5e 5e 08 10 e8 23 08 c8 5e 5e 09 0f e8 1b 08 c8 5e 5e 0a 0e e8 13 08 c8 5e 5e 0b 0d e8 0b 08 c8 5e 5e 0c 0c e8 03 08 c8 5e 5e 0d 0b e8 fb 07 c8 5e 5e 0e 0a e8 f3 07 c8 5e 5e 0f 09 e8 eb 07 c8 5e 5e 10 08 e8 e3 07 c8 5e 5e 11 07 e8 db 07 c8 5e 5e 12 06 e8 d3 07 c8 5e 5e 13 05 e8 cb 07 c8 5e 5e 14 04 e8 c3 07 c8 5e 5e 15 03 e8 bb 07 c8 5e 5e 16 02 e8 b3 07 c8 5e 5e 17 01 e8 ab 07 c8 5e 5e 18 00 98 d5 8c c8 f7 7f 00 00 e8 9b 07 c8 5e 5e 00 00 90 db 8c c8 f7 7f 00 00 e8 8b 07 c8 5e 5e 00 00 f0 db 8c c8 f7 7f 00 00 e8 7b 07 c8 5e 5e 00 00 50 dc 8c c8 f7 7f 00 00 e8 6b 07 c8 5e 5e 00 00 b0 dc 8c c8 f7 7f 00 00 e8 5b 07 c8 5e 5e 00 00 10 dd 8c c8 f7 7f 00 00 e8 4b 07 c8 5e 5e 00 00 70 dd 8c c8 f7 7f 00 00 00 00 00 00 00 00 00 00
128       | 7ff7c85e51e0h   | 135     | hex://intrinsics/bitpack?unpack32#unpack32_g[8u](uspan8u,b256x32u~in,32i)                                     | ref Block256<uint> unpack32<byte>(ReadOnlySpan<byte> src, in Block256<uint> dst, int block)                   | 48 83 ec 28 c5 f8 77 48 8b 01 49 63 c8 0f b6 04 08 41 c1 e0 03 41 8b c8 48 83 c1 08 44 8b 4a 08 49 3b c9 77 47 48 8b 0a 4d 63 c0 4a 8d 0c 81 0f b6 c0 45 33 c0 4c 89 44 24 20 4c 89 44 24 20 4c 8d 44 24 20 8b c0 49 b9 01 01 01 01 01 01 01 01 c4 c2 fb f5 c1 49 89 00 c4 c2 7d 31 00 c5 fe 7f 01 48 8b c2 c5 f8 77 48 83 c4 28 c3 e8 e7 f7 16 ff cc cc 00 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 00 00 00
129       | 7ff7c85e5270h   | 419     | hex://intrinsics/bitpack?unpack32#unpack32_g[16u](uspan16u,b256x32u~in,32i)                                   | ref Block256<uint> unpack32<ushort>(ReadOnlySpan<ushort> src, in Block256<uint> dst, int block)               | 48 83 ec 28 c5 f8 77 48 8b 01 49 63 c8 0f b7 04 48 41 c1 e0 03 41 8b c8 48 83 c1 08 44 8b 4a 08 49 3b c9 77 6b 48 8b 0a 4d 63 c0 4a 8d 0c 81 0f b7 c0 45 33 c0 4c 89 44 24 20 4c 89 44 24 20 4c 8d 44 24 20 44 0f b6 c8 49 ba 01 01 01 01 01 01 01 01 c4 42 b3 f5 ca 4d 89 08 4d 8b c8 c4 c2 7d 31 01 4c 8b c9 c4 c1 7e 7f 01 c1 f8 08 0f b6 c0 c4 c2 fb f5 c2 49 89 00 c4 c2 7d 31 00 48 83 c1 20 c5 fe 7f 01 48 8b c2 c5 f8 77 48 83 c4 28 c3 e8 33 f7 16 ff cc cc 00 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 50 32 8d c8 f7 7f 00 00 48 83 ec 28 c5 f8 77 48 8b 01 49 63 c8 8b 04 88 41 c1 e0 03 41 8b c8 48 83 c1 08 44 8b 4a 08 49 3b c9 0f 87 b0 00 00 00 48 8b 0a 4d 63 c0 4a 8d 0c 81 45 33 c0 4c 89 44 24 20 4c 89 44 24 20 4c 8d 44 24 20 44 0f b6 c8 49 ba 01 01 01 01 01 01 01 01 c4 42 b3 f5 ca 4d 89 08 4d 8b c8 c4 c2 7d 31 01 4c 8b c9 c4 c1 7e 7f 01 44 8b c8 41 c1 e9 08 45 0f b6 c9 c4 42 b3 f5 ca 4d 89 08 4d 8b c8 c4 c2 7d 31 01 4c 8d 49 20 c4 c1 7e 7f 01 44 8b c8 41 c1 e9 10 45 0f b6 c9 c4 42 b3 f5 ca 4d 89 08 4d 8b c8 c4 c2 7d 31 01 4c 8d 49 40 c4 c1 7e 7f 01 c1 e8 18 0f b6 c0 c4 c2 fb f5 c2 49 89 00 c4 c2 7d 31 00 48 83 c1 60 c5 fe 7f 01 48 8b c2 c5 f8 77 48 83 c4 28 c3 e8 3b f6 16 ff cc cc 00 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 00 00 00
130       | 7ff7c85e5320h   | 243     | hex://intrinsics/bitpack?unpack32#unpack32_g[32u](uspan32u,b256x32u~in,32i)                                   | ref Block256<uint> unpack32<uint>(ReadOnlySpan<uint> src, in Block256<uint> dst, int block)                   | 48 83 ec 28 c5 f8 77 48 8b 01 49 63 c8 8b 04 88 41 c1 e0 03 41 8b c8 48 83 c1 08 44 8b 4a 08 49 3b c9 0f 87 b0 00 00 00 48 8b 0a 4d 63 c0 4a 8d 0c 81 45 33 c0 4c 89 44 24 20 4c 89 44 24 20 4c 8d 44 24 20 44 0f b6 c8 49 ba 01 01 01 01 01 01 01 01 c4 42 b3 f5 ca 4d 89 08 4d 8b c8 c4 c2 7d 31 01 4c 8b c9 c4 c1 7e 7f 01 44 8b c8 41 c1 e9 08 45 0f b6 c9 c4 42 b3 f5 ca 4d 89 08 4d 8b c8 c4 c2 7d 31 01 4c 8d 49 20 c4 c1 7e 7f 01 44 8b c8 41 c1 e9 10 45 0f b6 c9 c4 42 b3 f5 ca 4d 89 08 4d 8b c8 c4 c2 7d 31 01 4c 8d 49 40 c4 c1 7e 7f 01 c1 e8 18 0f b6 c0 c4 c2 fb f5 c2 49 89 00 c4 c2 7d 31 00 48 83 c1 60 c5 fe 7f 01 48 8b c2 c5 f8 77 48 83 c4 28 c3 e8 3b f6 16 ff cc cc 00 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 00 00 00
131       | 7ff7c85e5420h   | 403     | hex://intrinsics/bitpack?unpack32#unpack32_g[64u](uspan64u,b256x32u~in,32i)                                   | ref Block256<uint> unpack32<ulong>(ReadOnlySpan<ulong> src, in Block256<uint> dst, int block)                 | 48 83 ec 28 c5 f8 77 48 8b 01 49 63 c8 48 8b 04 c8 41 c1 e0 03 41 8b c8 48 83 c1 08 44 8b 4a 08 49 3b c9 0f 87 4d 01 00 00 48 8b 0a 4d 63 c0 4a 8d 0c 81 45 33 c0 4c 89 44 24 20 4c 89 44 24 20 4c 8d 44 24 20 44 0f b6 c8 49 ba 01 01 01 01 01 01 01 01 c4 42 b3 f5 ca 4d 89 08 4d 8b c8 c4 c2 7d 31 01 4c 8b c9 c4 c1 7e 7f 01 4c 8b c8 49 c1 e9 08 45 0f b6 c9 c4 42 b3 f5 ca 4d 89 08 4d 8b c8 c4 c2 7d 31 01 4c 8d 49 20 c4 c1 7e 7f 01 4c 8b c8 49 c1 e9 10 45 0f b6 c9 c4 42 b3 f5 ca 4d 89 08 4d 8b c8 c4 c2 7d 31 01 4c 8d 49 40 c4 c1 7e 7f 01 4c 8b c8 49 c1 e9 18 45 0f b6 c9 c4 42 b3 f5 ca 4d 89 08 4d 8b c8 c4 c2 7d 31 01 4c 8d 49 60 c4 c1 7e 7f 01 4c 8b c8 49 c1 e9 20 45 0f b6 c9 c4 42 b3 f5 ca 4d 89 08 4d 8b c8 c4 c2 7d 31 01 4c 8d 89 80 00 00 00 c4 c1 7e 7f 01 4c 8b c8 49 c1 e9 28 45 0f b6 c9 c4 42 b3 f5 ca 4d 89 08 4d 8b c8 c4 c2 7d 31 01 4c 8d 89 a0 00 00 00 c4 c1 7e 7f 01 4c 8b c8 49 c1 e9 30 45 0f b6 c9 c4 42 b3 f5 ca 4d 89 08 4d 8b c8 c4 c2 7d 31 01 4c 8d 89 c0 00 00 00 c4 c1 7e 7f 01 48 c1 e8 38 0f b6 c0 c4 c2 fb f5 c2 49 89 00 c4 c2 7d 31 00 48 81 c1 e0 00 00 00 c5 fe 7f 01 48 8b c2 c5 f8 77 48 83 c4 28 c3 e8 9d f4 16 ff cc cc 00 00 00 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 00 00 00
132       | 7ff7c85e55c0h   | 147     | hex://intrinsics/bitpack?pack32#pack32_(32u~in,n8)                                                            | byte pack32(in uint src, N8 n)                                                                                | 50 c5 f8 77 90 c5 ff f0 01 c4 e3 7d 19 c1 00 c4 e3 7d 19 c0 01 c7 44 24 04 ff ff 00 00 48 8d 44 24 04 c4 e2 79 58 54 24 04 c5 f1 db ca c5 f9 db c2 c4 e2 71 2b c0 c5 f0 57 c9 c7 04 24 ff 00 00 00 48 8d 04 24 c4 e2 79 79 14 24 c5 f9 db c2 c5 f1 db ca c5 f9 67 c1 b8 07 00 00 00 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 0f b6 c0 c5 f8 77 48 83 c4 08 c3 cc cc cc cc cc cc cc cc cc cc 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
133       | 7ff7c85e5660h   | 375     | hex://intrinsics/bitpack?pack32#pack32_(32u~in,n16)                                                           | ushort pack32(in uint src, N16 n)                                                                             | 50 c5 f8 77 90 48 8b c1 c5 ff f0 00 48 83 c1 20 c5 ff f0 09 c7 44 24 04 ff ff 00 00 48 8d 44 24 04 c4 e2 7d 58 54 24 04 c5 fd db c2 c5 f5 db ca c4 e2 7d 2b c1 c4 e3 fd 00 c0 d8 c4 e3 7d 19 c1 00 c4 e3 7d 19 c0 01 c7 04 24 ff 00 00 00 48 8d 04 24 c4 e2 79 79 14 24 c5 f1 db ca c5 f9 db c2 c5 f1 67 c0 b8 07 00 00 00 c5 f9 6e c8 c5 f9 f3 c1 c5 f9 d7 c0 0f b7 c0 c5 f8 77 48 83 c4 08 c3 cc cc cc cc cc cc cc cc cc cc 00 00 19 01 01 00 01 02 00 00 40 00 00 00 08 34 8d c8 f7 7f 00 00 48 83 ec 18 c5 f8 77 48 8b c1 c5 ff f0 00 48 8d 41 20 c5 ff f0 08 c7 44 24 14 ff ff 00 00 48 8d 44 24 14 c4 e2 7d 58 54 24 14 c5 fd db c2 c5 f5 db ca c4 e2 7d 2b c1 c4 e3 fd 00 c0 d8 48 8d 41 40 c5 ff f0 08 48 83 c1 60 c5 ff f0 11 c7 44 24 10 ff ff 00 00 48 8d 44 24 10 c4 e2 7d 58 5c 24 10 c5 f5 db cb c5 ed db d3 c4 e2 75 2b ca c4 e3 fd 00 c9 d8 c7 44 24 0c ff 00 00 00 48 8d 44 24 0c c4 e2 7d 79 54 24 0c c5 fd db c2 c5 f5 db ca c5 fd 67 c1 c4 e3 fd 00 c0 d8 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 48 83 c4 18 c3 cc cc cc cc cc cc cc cc cc cc cc cc cc cc 00 00 00 19 04 01 00 04 22 00 00 40 00 00 00 00 00 00 00 00 00 00
134       | 7ff7c85e5700h   | 215     | hex://intrinsics/bitpack?pack32#pack32_(32u~in,n32)                                                           | uint pack32(in uint src, N32 n)                                                                               | 48 83 ec 18 c5 f8 77 48 8b c1 c5 ff f0 00 48 8d 41 20 c5 ff f0 08 c7 44 24 14 ff ff 00 00 48 8d 44 24 14 c4 e2 7d 58 54 24 14 c5 fd db c2 c5 f5 db ca c4 e2 7d 2b c1 c4 e3 fd 00 c0 d8 48 8d 41 40 c5 ff f0 08 48 83 c1 60 c5 ff f0 11 c7 44 24 10 ff ff 00 00 48 8d 44 24 10 c4 e2 7d 58 5c 24 10 c5 f5 db cb c5 ed db d3 c4 e2 75 2b ca c4 e3 fd 00 c9 d8 c7 44 24 0c ff 00 00 00 48 8d 44 24 0c c4 e2 7d 79 54 24 0c c5 fd db c2 c5 f5 db ca c5 fd 67 c1 c4 e3 fd 00 c0 d8 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 c5 f8 77 48 83 c4 18 c3 cc cc cc cc cc cc cc cc cc cc cc cc cc cc 00 00 00 19 04 01 00 04 22 00 00 40 00 00 00 00 00 00 00 00 00 00
135       | 7ff7c85e57e0h   | 531     | hex://intrinsics/bitpack?pack32#pack32_(32u~in,n64)                                                           | ulong pack32(in uint src, N64 n)                                                                              | 48 83 ec 18 c5 f8 77 48 8b c1 c5 ff f0 00 48 8d 41 20 c5 ff f0 08 c7 44 24 14 ff ff 00 00 48 8d 44 24 14 c4 e2 7d 58 54 24 14 c5 fd db c2 c5 f5 db ca c4 e2 7d 2b c1 c4 e3 fd 00 c0 d8 48 8d 41 40 c5 ff f0 08 48 8d 41 60 c5 ff f0 10 c7 44 24 10 ff ff 00 00 48 8d 44 24 10 c4 e2 7d 58 5c 24 10 c5 f5 db cb c5 ed db d3 c4 e2 75 2b ca c4 e3 fd 00 c9 d8 c7 44 24 0c ff 00 00 00 48 8d 44 24 0c c4 e2 7d 79 54 24 0c c5 fd db c2 c5 f5 db ca c5 fd 67 c1 c4 e3 fd 00 c0 d8 b8 07 00 00 00 c5 f9 6e c8 c5 fd f3 c1 c5 fd d7 c0 8b c0 48 8d 91 80 00 00 00 c5 ff f0 0a 48 8d 91 a0 00 00 00 c5 ff f0 12 c7 44 24 08 ff ff 00 00 48 8d 54 24 08 c4 e2 7d 58 44 24 08 c5 f5 db c8 c5 ed db c0 c4 e2 75 2b c0 c4 e3 fd 00 c0 d8 48 8d 91 c0 00 00 00 c5 ff f0 0a 48 81 c1 e0 00 00 00 c5 ff f0 11 c7 44 24 04 ff ff 00 00 48 8d 54 24 04 c4 e2 7d 58 5c 24 04 c5 f5 db cb c5 ed db d3 c4 e2 75 2b ca c4 e3 fd 00 c9 d8 c7 04 24 ff 00 00 00 48 8d 14 24 c4 e2 7d 79 14 24 c5 fd db c2 c5 f5 db ca c5 fd 67 c1 c4 e3 fd 00 c0 d8 ba 07 00 00 00 c5 f9 6e ca c5 fd f3 c1 c5 fd d7 d0 8b d2 48 c1 e2 20 48 0b c2 c5 f8 77 48 83 c4 18 c3 cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc cc 19 04 01 00 04 22 00 00 40 00 00 00 00 00 00 00 b0 34 8d c8 f7 7f 00 00 50 c5 f8 77 33 c0 48 89 04 24 33 c0 48 89 04 24 48 8d 04 24 45 33 c9 85 d2 7e 3d 4d 63 d1 46 0f b6 14 11 49 bb 01 01 01 01 01 01 01 01 c4 42 ab f5 d3 4c 89 10 4c 8b d0 c4 c2 7d 31 02 45 8b d1 41 c1 e2 03 4d 63 d2 4f 8d 14 90 c4 c1 7e 7f 02 41 ff c1 44 3b ca 7c c3 c5 f8 77 48 83 c4 08 c3 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
136       | 7ff7c85e5980h   | 115     | hex://intrinsics/bitpack?unpack32#unpack32_(8u~in,32i,32u~ref)                                                | void unpack32(in byte src, int count, ref uint target)                                                        | 50 c5 f8 77 33 c0 48 89 04 24 33 c0 48 89 04 24 48 8d 04 24 45 33 c9 85 d2 7e 3d 4d 63 d1 46 0f b6 14 11 49 bb 01 01 01 01 01 01 01 01 c4 42 ab f5 d3 4c 89 10 4c 8b d0 c4 c2 7d 31 02 45 8b d1 41 c1 e2 03 4d 63 d2 4f 8d 14 90 c4 c1 7e 7f 02 41 ff c1 44 3b ca 7c c3 c5 f8 77 48 83 c4 08 c3 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
137       | 7ff7c85e5a00h   | 119     | hex://intrinsics/bitpack?unpack32#unpack32_(8u~in,32i,b256x32u~in)                                            | void unpack32(in byte src, int blocks, in Block256<uint> target)                                              | 50 c5 f8 77 33 c0 48 89 04 24 33 c0 48 89 04 24 48 8d 04 24 45 33 c9 85 d2 7e 40 4d 63 d1 46 0f b6 14 11 49 bb 01 01 01 01 01 01 01 01 c4 42 ab f5 d3 4c 89 10 4c 8b d0 c4 c2 7d 31 02 4d 8b 10 45 8b d9 41 c1 e3 03 4d 63 db 4f 8d 14 9a c4 c1 7e 7f 02 41 ff c1 44 3b ca 7c c0 c5 f8 77 48 83 c4 08 c3 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
138       | 7ff7c85e5a80h   | 231     | hex://intrinsics/bitpack?unpack8#unpack8_(8u,8u~ref)                                                          | void unpack8(byte packed, ref byte unpacked)                                                                  | 0f 1f 44 00 00 0f b6 c1 48 b9 01 01 01 01 01 01 01 01 c4 e2 fb f5 c1 48 89 02 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 08 36 8d c8 f7 7f 00 00 0f 1f 44 00 00 0f b7 c1 0f b6 c8 49 b8 01 01 01 01 01 01 01 01 c4 c2 f3 f5 c8 48 89 0a 48 83 c2 08 c1 f8 08 0f b6 c0 c4 c2 fb f5 c0 48 89 02 c3 19 00 00 00 40 00 00 00 60 36 8d c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 49 b8 01 01 01 01 01 01 01 01 c4 c2 fb f5 c0 48 89 02 48 8d 42 08 44 8b c1 41 c1 e8 08 45 0f b6 c0 49 b9 01 01 01 01 01 01 01 01 c4 42 bb f5 c1 4c 89 00 48 8d 42 10 44 8b c1 41 c1 e8 10 45 0f b6 c0 c4 42 bb f5 c1 4c 89 00 48 83 c2 18 c1 e9 18 0f b6 c1 c4 c2 fb f5 c1 48 89 02 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
139       | 7ff7c85e5ab0h   | 183     | hex://intrinsics/bitpack?unpack8#unpack8_(16u,8u~ref)                                                         | void unpack8(ushort packed, ref byte unpacked)                                                                | 0f 1f 44 00 00 0f b7 c1 0f b6 c8 49 b8 01 01 01 01 01 01 01 01 c4 c2 f3 f5 c8 48 89 0a 48 83 c2 08 c1 f8 08 0f b6 c0 c4 c2 fb f5 c0 48 89 02 c3 19 00 00 00 40 00 00 00 60 36 8d c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 49 b8 01 01 01 01 01 01 01 01 c4 c2 fb f5 c0 48 89 02 48 8d 42 08 44 8b c1 41 c1 e8 08 45 0f b6 c0 49 b9 01 01 01 01 01 01 01 01 c4 42 bb f5 c1 4c 89 00 48 8d 42 10 44 8b c1 41 c1 e8 10 45 0f b6 c0 c4 42 bb f5 c1 4c 89 00 48 83 c2 18 c1 e9 18 0f b6 c1 c4 c2 fb f5 c1 48 89 02 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
140       | 7ff7c85e5af0h   | 119     | hex://intrinsics/bitpack?unpack8#unpack8_(32u,8u~ref)                                                         | void unpack8(uint packed, ref byte unpacked)                                                                  | 0f 1f 44 00 00 0f b6 c1 49 b8 01 01 01 01 01 01 01 01 c4 c2 fb f5 c0 48 89 02 48 8d 42 08 44 8b c1 41 c1 e8 08 45 0f b6 c0 49 b9 01 01 01 01 01 01 01 01 c4 42 bb f5 c1 4c 89 00 48 8d 42 10 44 8b c1 41 c1 e8 10 45 0f b6 c0 c4 42 bb f5 c1 4c 89 00 48 83 c2 18 c1 e9 18 0f b6 c1 c4 c2 fb f5 c1 48 89 02 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
141       | 7ff7c85e5b70h   | 323     | hex://intrinsics/bitpack?unpack8#unpack8_(64u,8u~ref)                                                         | void unpack8(ulong packed, ref byte unpacked)                                                                 | 0f 1f 44 00 00 8b c1 44 0f b6 c0 49 b9 01 01 01 01 01 01 01 01 c4 42 bb f5 c1 4c 89 02 4c 8d 42 08 44 8b c8 41 c1 e9 08 45 0f b6 c9 49 ba 01 01 01 01 01 01 01 01 c4 42 b3 f5 ca 4d 89 08 4c 8d 42 10 44 8b c8 41 c1 e9 10 45 0f b6 c9 c4 42 b3 f5 ca 4d 89 08 4c 8d 42 18 c1 e8 18 0f b6 c0 c4 c2 fb f5 c2 49 89 00 48 c1 e9 20 8b c1 48 83 c2 20 0f b6 c8 c4 c2 f3 f5 ca 48 89 0a 48 8d 4a 08 44 8b c0 41 c1 e8 08 45 0f b6 c0 c4 42 bb f5 c2 4c 89 01 48 8d 4a 10 44 8b c0 41 c1 e8 10 45 0f b6 c0 c4 42 bb f5 c2 4c 89 01 48 83 c2 18 c1 e8 18 0f b6 c0 c4 c2 fb f5 c2 48 89 02 c3 00 00 00 19 00 00 00 40 00 00 00 10 37 8d c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 02 0f b6 d1 48 b9 01 01 01 01 01 01 01 01 c4 e2 eb f5 d1 48 89 10 c3 00 00 19 00 00 00 40 00 00 00 68 37 8d c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 02 0f b7 d1 0f b6 ca 49 b8 01 01 01 01 01 01 01 01 c4 c2 f3 f5 c8 48 89 08 48 83 c0 08 c1 fa 08 0f b6 d2 c4 c2 eb f5 d0 48 89 10 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
142       | 7ff7c85e5c40h   | 115     | hex://intrinsics/bitpack?unpack8#unpack8_(8u,span8u)                                                          | void unpack8(byte packed, Span<byte> unpacked)                                                                | 0f 1f 44 00 00 48 8b 02 0f b6 d1 48 b9 01 01 01 01 01 01 01 01 c4 e2 eb f5 d1 48 89 10 c3 00 00 19 00 00 00 40 00 00 00 68 37 8d c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 02 0f b7 d1 0f b6 ca 49 b8 01 01 01 01 01 01 01 01 c4 c2 f3 f5 c8 48 89 08 48 83 c0 08 c1 fa 08 0f b6 d2 c4 c2 eb f5 d0 48 89 10 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
143       | 7ff7c85e5c70h   | 67      | hex://intrinsics/bitpack?unpack8#unpack8_(16u,span8u)                                                         | void unpack8(ushort packed, Span<byte> unpacked)                                                              | 0f 1f 44 00 00 48 8b 02 0f b7 d1 0f b6 ca 49 b8 01 01 01 01 01 01 01 01 c4 c2 f3 f5 c8 48 89 08 48 83 c0 08 c1 fa 08 0f b6 d2 c4 c2 eb f5 d0 48 89 10 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
144       | 7ff7c85e5cc0h   | 119     | hex://intrinsics/bitpack?unpack8#unpack8_(32u,span8u)                                                         | void unpack8(uint packed, Span<byte> unpacked)                                                                | 0f 1f 44 00 00 48 8b 02 0f b6 d1 49 b8 01 01 01 01 01 01 01 01 c4 c2 eb f5 d0 48 89 10 48 8d 50 08 44 8b c1 41 c1 e8 08 45 0f b6 c0 49 b9 01 01 01 01 01 01 01 01 c4 42 bb f5 c1 4c 89 02 48 8d 50 10 44 8b c1 41 c1 e8 10 45 0f b6 c0 c4 42 bb f5 c1 4c 89 02 48 83 c0 18 c1 e9 18 0f b6 d1 c4 c2 eb f5 d1 48 89 10 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
