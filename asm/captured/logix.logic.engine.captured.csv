Sequence  | Address         | Length  | Uri                                                                                                           | OpSig                                                                                                         | Data
0         | 7ff7c8672ff0h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[8u]()                                                         | bit eval<byte>(ILogicExpr<byte> expr)                                                                         | 0f 1f 44 00 00 48 b8 70 47 de c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
1         | 7ff7c8673020h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[8i]()                                                         | bit eval<sbyte>(ILogicExpr<sbyte> expr)                                                                       | 0f 1f 44 00 00 48 b8 70 47 de c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
2         | 7ff7c8673050h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[16u]()                                                        | bit eval<ushort>(ILogicExpr<ushort> expr)                                                                     | 0f 1f 44 00 00 48 b8 70 47 de c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
3         | 7ff7c8673080h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[16i]()                                                        | bit eval<short>(ILogicExpr<short> expr)                                                                       | 0f 1f 44 00 00 48 b8 70 47 de c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
4         | 7ff7c86730b0h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[32u]()                                                        | bit eval<uint>(ILogicExpr<uint> expr)                                                                         | 0f 1f 44 00 00 48 b8 70 47 de c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
5         | 7ff7c86730e0h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[32i]()                                                        | bit eval<int>(ILogicExpr<int> expr)                                                                           | 0f 1f 44 00 00 48 b8 70 47 de c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
6         | 7ff7c8673110h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[64u]()                                                        | bit eval<ulong>(ILogicExpr<ulong> expr)                                                                       | 0f 1f 44 00 00 48 b8 70 47 de c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
7         | 7ff7c8673140h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[64i]()                                                        | bit eval<long>(ILogicExpr<long> expr)                                                                         | 0f 1f 44 00 00 48 b8 70 47 de c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
8         | 7ff7c8673170h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[8u]()                                                        | LiteralExpr<byte> eval<byte>(IExpr<byte> expr)                                                                | 0f 1f 44 00 00 48 b8 78 2c 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
9         | 7ff7c86731a0h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[8i]()                                                        | LiteralExpr<sbyte> eval<sbyte>(IExpr<sbyte> expr)                                                             | 0f 1f 44 00 00 48 b8 a8 2c 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
10        | 7ff7c86731d0h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[16u]()                                                       | LiteralExpr<ushort> eval<ushort>(IExpr<ushort> expr)                                                          | 0f 1f 44 00 00 48 b8 c8 2c 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
11        | 7ff7c8673200h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[16i]()                                                       | LiteralExpr<short> eval<short>(IExpr<short> expr)                                                             | 0f 1f 44 00 00 48 b8 e8 2c 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
12        | 7ff7c8673230h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[32u]()                                                       | LiteralExpr<uint> eval<uint>(IExpr<uint> expr)                                                                | 0f 1f 44 00 00 48 b8 08 2d 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
13        | 7ff7c8673260h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[32i]()                                                       | LiteralExpr<int> eval<int>(IExpr<int> expr)                                                                   | 0f 1f 44 00 00 48 b8 28 2d 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
14        | 7ff7c8673290h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[64u]()                                                       | LiteralExpr<ulong> eval<ulong>(IExpr<ulong> expr)                                                             | 0f 1f 44 00 00 48 b8 48 2d 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
15        | 7ff7c86732c0h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[64i]()                                                       | LiteralExpr<long> eval<long>(IExpr<long> expr)                                                                | 0f 1f 44 00 00 48 b8 68 2d 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
16        | 7ff7c86732f0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[8u]()                                                           | LiteralExpr<byte> eval<byte>(IComparisonExpr<byte> expr)                                                      | 0f 1f 44 00 00 48 b8 00 03 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
17        | 7ff7c8673320h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[8i]()                                                           | LiteralExpr<sbyte> eval<sbyte>(IComparisonExpr<sbyte> expr)                                                   | 0f 1f 44 00 00 48 b8 f0 03 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
18        | 7ff7c8673350h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[16u]()                                                          | LiteralExpr<ushort> eval<ushort>(IComparisonExpr<ushort> expr)                                                | 0f 1f 44 00 00 48 b8 b0 04 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
19        | 7ff7c8673380h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[16i]()                                                          | LiteralExpr<short> eval<short>(IComparisonExpr<short> expr)                                                   | 0f 1f 44 00 00 48 b8 70 05 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
20        | 7ff7c86733b0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[32u]()                                                          | LiteralExpr<uint> eval<uint>(IComparisonExpr<uint> expr)                                                      | 0f 1f 44 00 00 48 b8 30 06 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
21        | 7ff7c86733e0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[32i]()                                                          | LiteralExpr<int> eval<int>(IComparisonExpr<int> expr)                                                         | 0f 1f 44 00 00 48 b8 f0 06 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
22        | 7ff7c8673410h   | 1064    | hex://logix/logic.engine?eval#eval_cmp_expr_g[64i]()                                                          | LiteralExpr<long> eval<long>(IComparisonExpr<long> expr)                                                      | 0f 1f 44 00 00 48 b8 b0 07 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 03 22 bf 5e 5e 00 0c e8 fb 21 bf 5e 5e 01 0b e8 f3 21 bf 5e 5e 02 0a e8 eb 21 bf 5e 5e 03 09 e8 e3 21 bf 5e 5e 04 08 e8 db 21 bf 5e 5e 05 07 e8 d3 21 bf 5e 5e 06 06 e8 cb 21 bf 5e 5e 07 05 e8 c3 21 bf 5e 5e 08 04 e8 bb 21 bf 5e 5e 09 03 e8 b3 21 bf 5e 5e 0a 02 e8 ab 21 bf 5e 5e 0b 01 e8 a3 21 bf 5e 5e 0c 00 08 bf ae c8 f7 7f 00 00 e8 93 21 bf 5e 5e 00 0a e8 8b 21 bf 5e 5e 01 09 e8 83 21 bf 5e 5e 02 08 e8 7b 21 bf 5e 5e 03 07 e8 73 21 bf 5e 5e 04 06 e8 6b 21 bf 5e 5e 05 05 e8 63 21 bf 5e 5e 06 04 e8 5b 21 bf 5e 5e 07 03 e8 53 21 bf 5e 5e 08 02 e8 4b 21 bf 5e 5e 09 01 e8 43 21 bf 5e 5e 0a 00 40 c1 ae c8 f7 7f 00 00 e8 33 21 bf 5e 5e 00 03 e8 2b 21 bf 5e 5e 01 02 e8 23 21 bf 5e 5e 02 01 e8 1b 21 bf 5e 5e 03 00 f8 c3 ae c8 f7 7f 00 00 e8 0b 21 bf 5e 5e 00 00 50 c5 ae c8 f7 7f 00 00 e8 fb 20 bf 5e 5e 00 00 b0 c5 ae c8 f7 7f 00 00 e8 eb 20 bf 5e 5e 00 00 10 c6 ae c8 f7 7f 00 00 e8 db 20 bf 5e 5e 00 00 70 c6 ae c8 f7 7f 00 00 e8 cb 20 bf 5e 5e 00 00 d0 c6 ae c8 f7 7f 00 00 e8 bb 20 bf 5e 5e 00 00 30 c7 ae c8 f7 7f 00 00 e8 ab 20 bf 5e 5e 00 00 90 c7 ae c8 f7 7f 00 00 e8 9b 20 bf 5e 5e 00 0c e8 93 20 bf 5e 5e 01 0b e8 8b 20 bf 5e 5e 02 0a e8 83 20 bf 5e 5e 03 09 e8 7b 20 bf 5e 5e 04 08 e8 73 20 bf 5e 5e 05 07 e8 6b 20 bf 5e 5e 06 06 e8 63 20 bf 5e 5e 07 05 e8 5b 20 bf 5e 5e 08 04 e8 53 20 bf 5e 5e 09 03 e8 4b 20 bf 5e 5e 0a 02 e8 43 20 bf 5e 5e 0b 01 e8 3b 20 bf 5e 5e 0c 00 20 c8 ae c8 f7 7f 00 00 e8 2b 20 bf 5e 5e 00 00 a8 c9 ae c8 f7 7f 00 00 e8 1b 20 bf 5e 5e 00 0a e8 13 20 bf 5e 5e 01 09 e8 0b 20 bf 5e 5e 02 08 e8 03 20 bf 5e 5e 03 07 e8 fb 1f bf 5e 5e 04 06 e8 f3 1f bf 5e 5e 05 05 e8 eb 1f bf 5e 5e 06 04 e8 e3 1f bf 5e 5e 07 03 e8 db 1f bf 5e 5e 08 02 e8 d3 1f bf 5e 5e 09 01 e8 cb 1f bf 5e 5e 0a 00 58 ca ae c8 f7 7f 00 00 e8 bb 1f bf 5e 5e 00 00 d8 cb ae c8 f7 7f 00 00 e8 ab 1f bf 5e 5e 00 03 e8 a3 1f bf 5e 5e 01 02 e8 9b 1f bf 5e 5e 02 01 e8 93 1f bf 5e 5e 03 00 10 cd ae c8 f7 7f 00 00 e8 83 1f bf 5e 5e 00 00 08 ce ae c8 f7 7f 00 00 e8 73 1f bf 5e 5e 00 00 68 ce ae c8 f7 7f 00 00 e8 63 1f bf 5e 5e 00 00 c8 ce ae c8 f7 7f 00 00 e8 53 1f bf 5e 5e 00 00 28 cf ae c8 f7 7f 00 00 e8 43 1f bf 5e 5e 00 00 88 cf ae c8 f7 7f 00 00 e8 33 1f bf 5e 5e 00 00 e8 cf ae c8 f7 7f 00 00 e8 23 1f bf 5e 5e 00 00 48 d0 ae c8 f7 7f 00 00 e8 13 1f bf 5e 5e 00 00 a8 d0 ae c8 f7 7f 00 00 e8 03 1f bf 5e 5e 00 03 e8 fb 1e bf 5e 5e 01 02 e8 f3 1e bf 5e 5e 02 01 e8 eb 1e bf 5e 5e 03 00 80 d1 ae c8 f7 7f 00 00 e8 db 1e bf 5e 5e 00 00 f0 d2 ae c8 f7 7f 00 00 e8 cb 1e bf 5e 5e 00 00 50 d3 ae c8 f7 7f 00 00 e8 bb 1e bf 5e 5e 00 00 b0 d3 ae c8 f7 7f 00 00 e8 ab 1e bf 5e 5e 00 00 10 d4 ae c8 f7 7f 00 00 e8 9b 1e bf 5e 5e 00 00 70 d4 ae c8 f7 7f 00 00 e8 8b 1e bf 5e 5e 00 00 d0 d4 ae c8 f7 7f 00 00 e8 7b 1e bf 5e 5e 00 00 30 d5 ae c8 f7 7f 00 00 e8 6b 1e bf 5e 5e 00 00 90 d5 ae c8 f7 7f 00 00 e8 5b 1e bf 5e 5e 00 00 88 d7 ae c8 f7 7f 00 00 e8 4b 1e bf 5e 5e 00 00 58 d9 ae c8 f7 7f 00 00 e8 3b 1e bf 5e 5e 00 00 b8 d9 ae c8 f7 7f 00 00 e8 2b 1e bf 5e 5e 00 00 18 da ae c8 f7 7f 00 00 e8 1b 1e bf 5e 5e 00 00 58 db ae c8 f7 7f 00 00 00 00 00 00 00 00 00 00
23        | 7ff7c8673840h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[8u]()                                                       | LiteralExpr<Vector128<byte>> eval<byte>(IComparisonExpr<Vector128<byte>> expr)                                | 0f 1f 44 00 00 48 b8 40 11 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
24        | 7ff7c8673870h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[8i]()                                                       | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IComparisonExpr<Vector128<sbyte>> expr)                             | 0f 1f 44 00 00 48 b8 40 16 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
25        | 7ff7c86738a0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[16u]()                                                      | LiteralExpr<Vector128<ushort>> eval<ushort>(IComparisonExpr<Vector128<ushort>> expr)                          | 0f 1f 44 00 00 48 b8 30 17 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
26        | 7ff7c86738d0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[16i]()                                                      | LiteralExpr<Vector128<short>> eval<short>(IComparisonExpr<Vector128<short>> expr)                             | 0f 1f 44 00 00 48 b8 20 18 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
27        | 7ff7c8673900h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[32u]()                                                      | LiteralExpr<Vector128<uint>> eval<uint>(IComparisonExpr<Vector128<uint>> expr)                                | 0f 1f 44 00 00 48 b8 10 19 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
28        | 7ff7c8673930h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[32i]()                                                      | LiteralExpr<Vector128<int>> eval<int>(IComparisonExpr<Vector128<int>> expr)                                   | 0f 1f 44 00 00 48 b8 10 1e 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
29        | 7ff7c8673960h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[64i]()                                                      | LiteralExpr<Vector128<long>> eval<long>(IComparisonExpr<Vector128<long>> expr)                                | 0f 1f 44 00 00 48 b8 00 1f 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
30        | 7ff7c8673990h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[8u]()                                                       | LiteralExpr<Vector256<byte>> eval<byte>(IComparisonExpr<Vector256<byte>> expr)                                | 0f 1f 44 00 00 48 b8 f0 1f 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
31        | 7ff7c86739c0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[8i]()                                                       | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IComparisonExpr<Vector256<sbyte>> expr)                             | 0f 1f 44 00 00 48 b8 20 25 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
32        | 7ff7c86739f0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[16u]()                                                      | LiteralExpr<Vector256<ushort>> eval<ushort>(IComparisonExpr<Vector256<ushort>> expr)                          | 0f 1f 44 00 00 48 b8 40 26 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
33        | 7ff7c8673a20h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[16i]()                                                      | LiteralExpr<Vector256<short>> eval<short>(IComparisonExpr<Vector256<short>> expr)                             | 0f 1f 44 00 00 48 b8 60 27 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
34        | 7ff7c8673a50h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[32u]()                                                      | LiteralExpr<Vector256<uint>> eval<uint>(IComparisonExpr<Vector256<uint>> expr)                                | 0f 1f 44 00 00 48 b8 80 28 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
35        | 7ff7c8673a80h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[32i]()                                                      | LiteralExpr<Vector256<int>> eval<int>(IComparisonExpr<Vector256<int>> expr)                                   | 0f 1f 44 00 00 48 b8 a0 29 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
36        | 7ff7c8673ab0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[64i]()                                                      | LiteralExpr<Vector256<long>> eval<long>(IComparisonExpr<Vector256<long>> expr)                                | 0f 1f 44 00 00 48 b8 d0 2e 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
37        | 7ff7c8673ae0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[8u]()                                                           | bit eval<byte>(IComparisonPred<byte> expr)                                                                    | 0f 1f 44 00 00 48 b8 70 0c 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
38        | 7ff7c8673b10h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[8i]()                                                           | bit eval<sbyte>(IComparisonPred<sbyte> expr)                                                                  | 0f 1f 44 00 00 48 b8 20 0d 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
39        | 7ff7c8673b40h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[16u]()                                                          | bit eval<ushort>(IComparisonPred<ushort> expr)                                                                | 0f 1f 44 00 00 48 b8 d0 0d 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
40        | 7ff7c8673b70h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[16i]()                                                          | bit eval<short>(IComparisonPred<short> expr)                                                                  | 0f 1f 44 00 00 48 b8 80 0e 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
41        | 7ff7c8673ba0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[32u]()                                                          | bit eval<uint>(IComparisonPred<uint> expr)                                                                    | 0f 1f 44 00 00 48 b8 30 0f 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
42        | 7ff7c8673bd0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[32i]()                                                          | bit eval<int>(IComparisonPred<int> expr)                                                                      | 0f 1f 44 00 00 48 b8 e0 0f 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
43        | 7ff7c8673c00h   | 1107    | hex://logix/logic.engine?eval#eval_cmp_pred_g[64i]()                                                          | bit eval<long>(IComparisonPred<long> expr)                                                                    | 0f 1f 44 00 00 48 b8 90 10 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 13 1a bf 5e 5e 00 0a e8 0b 1a bf 5e 5e 01 09 e8 03 1a bf 5e 5e 02 08 e8 fb 19 bf 5e 5e 03 07 e8 f3 19 bf 5e 5e 04 06 e8 eb 19 bf 5e 5e 05 05 e8 e3 19 bf 5e 5e 06 04 e8 db 19 bf 5e 5e 07 03 e8 d3 19 bf 5e 5e 08 02 e8 cb 19 bf 5e 5e 09 01 e8 c3 19 bf 5e 5e 0a 00 f0 d5 ae c8 f7 7f 00 00 e8 b3 19 bf 5e 5e 00 02 e8 ab 19 bf 5e 5e 01 01 e8 a3 19 bf 5e 5e 02 00 68 da ae c8 f7 7f 00 00 e8 93 19 bf 5e 5e 00 00 b8 db ae c8 f7 7f 00 00 e8 83 19 bf 5e 5e 00 02 e8 7b 19 bf 5e 5e 01 01 e8 73 19 bf 5e 5e 02 00 08 dc ae c8 f7 7f 00 00 e8 63 19 bf 5e 5e 00 00 f8 dc ae c8 f7 7f 00 00 e8 53 19 bf 5e 5e 00 00 58 dd ae c8 f7 7f 00 00 e8 43 19 bf 5e 5e 00 02 e8 3b 19 bf 5e 5e 01 01 e8 33 19 bf 5e 5e 02 00 a8 dd ae c8 f7 7f 00 00 e8 23 19 bf 5e 5e 00 00 98 de ae c8 f7 7f 00 00 e8 13 19 bf 5e 5e 00 00 f8 de ae c8 f7 7f 00 00 e8 03 19 bf 5e 5e 00 02 e8 fb 18 bf 5e 5e 01 01 e8 f3 18 bf 5e 5e 02 00 48 df ae c8 f7 7f 00 00 e8 e3 18 bf 5e 5e 00 00 38 e0 ae c8 f7 7f 00 00 e8 d3 18 bf 5e 5e 00 00 98 e0 ae c8 f7 7f 00 00 e8 c3 18 bf 5e 5e 00 02 e8 bb 18 bf 5e 5e 01 01 e8 b3 18 bf 5e 5e 02 00 e8 e0 ae c8 f7 7f 00 00 e8 a3 18 bf 5e 5e 00 00 d8 e1 ae c8 f7 7f 00 00 e8 93 18 bf 5e 5e 00 00 38 e2 ae c8 f7 7f 00 00 e8 83 18 bf 5e 5e 00 02 e8 7b 18 bf 5e 5e 01 01 e8 73 18 bf 5e 5e 02 00 88 e2 ae c8 f7 7f 00 00 e8 63 18 bf 5e 5e 00 00 78 e3 ae c8 f7 7f 00 00 e8 53 18 bf 5e 5e 00 00 d8 e3 ae c8 f7 7f 00 00 e8 43 18 bf 5e 5e 00 02 e8 3b 18 bf 5e 5e 01 01 e8 33 18 bf 5e 5e 02 00 28 e4 ae c8 f7 7f 00 00 e8 23 18 bf 5e 5e 00 00 18 e5 ae c8 f7 7f 00 00 e8 13 18 bf 5e 5e 00 00 78 e5 ae c8 f7 7f 00 00 e8 03 18 bf 5e 5e 00 02 e8 fb 17 bf 5e 5e 01 01 e8 f3 17 bf 5e 5e 02 00 c8 e5 ae c8 f7 7f 00 00 e8 e3 17 bf 5e 5e 00 0c e8 db 17 bf 5e 5e 01 0b e8 d3 17 bf 5e 5e 02 0a e8 cb 17 bf 5e 5e 03 09 e8 c3 17 bf 5e 5e 04 08 e8 bb 17 bf 5e 5e 05 07 e8 b3 17 bf 5e 5e 06 06 e8 ab 17 bf 5e 5e 07 05 e8 a3 17 bf 5e 5e 08 04 e8 9b 17 bf 5e 5e 09 03 e8 93 17 bf 5e 5e 0a 02 e8 8b 17 bf 5e 5e 0b 01 e8 83 17 bf 5e 5e 0c 00 c8 e6 ae c8 f7 7f 00 00 e8 73 17 bf 5e 5e 00 00 50 e8 ae c8 f7 7f 00 00 e8 63 17 bf 5e 5e 00 0a e8 5b 17 bf 5e 5e 01 09 e8 53 17 bf 5e 5e 02 08 e8 4b 17 bf 5e 5e 03 07 e8 43 17 bf 5e 5e 04 06 e8 3b 17 bf 5e 5e 05 05 e8 33 17 bf 5e 5e 06 04 e8 2b 17 bf 5e 5e 07 03 e8 23 17 bf 5e 5e 08 02 e8 1b 17 bf 5e 5e 09 01 e8 13 17 bf 5e 5e 0a 00 00 e9 ae c8 f7 7f 00 00 e8 03 17 bf 5e 5e 00 00 80 ea ae c8 f7 7f 00 00 e8 f3 16 bf 5e 5e 00 00 c8 eb ae c8 f7 7f 00 00 e8 e3 16 bf 5e 5e 00 0a e8 db 16 bf 5e 5e 01 09 e8 d3 16 bf 5e 5e 02 08 e8 cb 16 bf 5e 5e 03 07 e8 c3 16 bf 5e 5e 04 06 e8 bb 16 bf 5e 5e 05 05 e8 b3 16 bf 5e 5e 06 04 e8 ab 16 bf 5e 5e 07 03 e8 a3 16 bf 5e 5e 08 02 e8 9b 16 bf 5e 5e 09 01 e8 93 16 bf 5e 5e 0a 00 28 ec ae c8 f7 7f 00 00 e8 83 16 bf 5e 5e 00 00 a8 ed ae c8 f7 7f 00 00 e8 73 16 bf 5e 5e 00 00 f0 ee ae c8 f7 7f 00 00 e8 63 16 bf 5e 5e 00 00 08 f1 ae c8 f7 7f 00 00 e8 53 16 bf 5e 5e 00 00 38 f3 ae c8 f7 7f 00 00 e8 43 16 bf 5e 5e 00 00 80 f4 ae c8 f7 7f 00 00 e8 33 16 bf 5e 5e 00 00 60 f6 ae c8 f7 7f 00 00 e8 23 16 bf 5e 5e 00 00 a8 f7 ae c8 f7 7f 00 00 98 cb ad c8 f7 7f 00 00 0f 1f 44 00 00 48 b8 00 38 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
44        | 7ff7c8674030h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[8u]()                                                         | LiteralExpr<byte> eval<byte>(IArithmeticExpr<byte> expr)                                                      | 0f 1f 44 00 00 48 b8 00 38 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
45        | 7ff7c8674060h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[8i]()                                                         | LiteralExpr<sbyte> eval<sbyte>(IArithmeticExpr<sbyte> expr)                                                   | 0f 1f 44 00 00 48 b8 a8 3c 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
46        | 7ff7c8674090h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[16u]()                                                        | LiteralExpr<ushort> eval<ushort>(IArithmeticExpr<ushort> expr)                                                | 0f 1f 44 00 00 48 b8 e8 3c 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
47        | 7ff7c86740c0h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[16i]()                                                        | LiteralExpr<short> eval<short>(IArithmeticExpr<short> expr)                                                   | 0f 1f 44 00 00 48 b8 28 3d 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
48        | 7ff7c86740f0h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[32u]()                                                        | LiteralExpr<uint> eval<uint>(IArithmeticExpr<uint> expr)                                                      | 0f 1f 44 00 00 48 b8 68 3d 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
49        | 7ff7c8674120h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[32i]()                                                        | LiteralExpr<int> eval<int>(IArithmeticExpr<int> expr)                                                         | 0f 1f 44 00 00 48 b8 a8 3d 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
50        | 7ff7c8674150h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[64u]()                                                        | LiteralExpr<ulong> eval<ulong>(IArithmeticExpr<ulong> expr)                                                   | 0f 1f 44 00 00 48 b8 e8 3d 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
51        | 7ff7c8674180h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[64i]()                                                        | LiteralExpr<long> eval<long>(IArithmeticExpr<long> expr)                                                      | 0f 1f 44 00 00 48 b8 28 3e 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
52        | 7ff7c86741b0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[8u]()                                                     | LiteralExpr<Vector128<byte>> eval<byte>(IExpr<Vector128<byte>> expr)                                          | 0f 1f 44 00 00 48 b8 d8 0b 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
53        | 7ff7c86741e0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[8i]()                                                     | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IExpr<Vector128<sbyte>> expr)                                       | 0f 1f 44 00 00 48 b8 98 12 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
54        | 7ff7c8674210h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[16u]()                                                    | LiteralExpr<Vector128<ushort>> eval<ushort>(IExpr<Vector128<ushort>> expr)                                    | 0f 1f 44 00 00 48 b8 80 13 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
55        | 7ff7c8674240h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[16i]()                                                    | LiteralExpr<Vector128<short>> eval<short>(IExpr<Vector128<short>> expr)                                       | 0f 1f 44 00 00 48 b8 68 14 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
56        | 7ff7c8674270h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[32u]()                                                    | LiteralExpr<Vector128<uint>> eval<uint>(IExpr<Vector128<uint>> expr)                                          | 0f 1f 44 00 00 48 b8 50 15 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
57        | 7ff7c86742a0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[32i]()                                                    | LiteralExpr<Vector128<int>> eval<int>(IExpr<Vector128<int>> expr)                                             | 0f 1f 44 00 00 48 b8 10 1a 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
58        | 7ff7c86742d0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[64u]()                                                    | LiteralExpr<Vector128<ulong>> eval<ulong>(IExpr<Vector128<ulong>> expr)                                       | 0f 1f 44 00 00 48 b8 c8 3f 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
59        | 7ff7c8674300h   | 1107    | hex://logix/logic.engine?eval#eval_vector_expr128_g[64i]()                                                    | LiteralExpr<Vector128<long>> eval<long>(IExpr<Vector128<long>> expr)                                          | 0f 1f 44 00 00 48 b8 f8 1a 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 13 13 bf 5e 5e 00 0c e8 0b 13 bf 5e 5e 01 0b e8 03 13 bf 5e 5e 02 0a e8 fb 12 bf 5e 5e 03 09 e8 f3 12 bf 5e 5e 04 08 e8 eb 12 bf 5e 5e 05 07 e8 e3 12 bf 5e 5e 06 06 e8 db 12 bf 5e 5e 07 05 e8 d3 12 bf 5e 5e 08 04 e8 cb 12 bf 5e 5e 09 03 e8 c3 12 bf 5e 5e 0a 02 e8 bb 12 bf 5e 5e 0b 01 e8 b3 12 bf 5e 5e 0c 00 80 ef ae c8 f7 7f 00 00 e8 a3 12 bf 5e 5e 00 0a e8 9b 12 bf 5e 5e 01 09 e8 93 12 bf 5e 5e 02 08 e8 8b 12 bf 5e 5e 03 07 e8 83 12 bf 5e 5e 04 06 e8 7b 12 bf 5e 5e 05 05 e8 73 12 bf 5e 5e 06 04 e8 6b 12 bf 5e 5e 07 03 e8 63 12 bf 5e 5e 08 02 e8 5b 12 bf 5e 5e 09 01 e8 53 12 bf 5e 5e 0a 00 b8 f1 ae c8 f7 7f 00 00 e8 43 12 bf 5e 5e 00 0a e8 3b 12 bf 5e 5e 01 09 e8 33 12 bf 5e 5e 02 08 e8 2b 12 bf 5e 5e 03 07 e8 23 12 bf 5e 5e 04 06 e8 1b 12 bf 5e 5e 05 05 e8 13 12 bf 5e 5e 06 04 e8 0b 12 bf 5e 5e 07 03 e8 03 12 bf 5e 5e 08 02 e8 fb 11 bf 5e 5e 09 01 e8 f3 11 bf 5e 5e 0a 00 e0 f4 ae c8 f7 7f 00 00 e8 e3 11 bf 5e 5e 00 09 e8 db 11 bf 5e 5e 01 08 e8 d3 11 bf 5e 5e 02 07 e8 cb 11 bf 5e 5e 03 06 e8 c3 11 bf 5e 5e 04 05 e8 bb 11 bf 5e 5e 05 04 e8 b3 11 bf 5e 5e 06 03 e8 ab 11 bf 5e 5e 07 02 e8 a3 11 bf 5e 5e 08 01 e8 9b 11 bf 5e 5e 09 00 38 f8 ae c8 f7 7f 00 00 e8 8b 11 bf 5e 5e 00 03 e8 83 11 bf 5e 5e 01 02 e8 7b 11 bf 5e 5e 02 01 e8 73 11 bf 5e 5e 03 00 d0 f9 ae c8 f7 7f 00 00 e8 63 11 bf 5e 5e 00 00 40 fb ae c8 f7 7f 00 00 e8 53 11 bf 5e 5e 00 09 e8 4b 11 bf 5e 5e 01 08 e8 43 11 bf 5e 5e 02 07 e8 3b 11 bf 5e 5e 03 06 e8 33 11 bf 5e 5e 04 05 e8 2b 11 bf 5e 5e 05 04 e8 23 11 bf 5e 5e 06 03 e8 1b 11 bf 5e 5e 07 02 e8 13 11 bf 5e 5e 08 01 e8 0b 11 bf 5e 5e 09 00 d0 fb ae c8 f7 7f 00 00 e8 fb 10 bf 5e 5e 00 00 78 fd ae c8 f7 7f 00 00 e8 eb 10 bf 5e 5e 00 0a e8 e3 10 bf 5e 5e 01 09 e8 db 10 bf 5e 5e 02 08 e8 d3 10 bf 5e 5e 03 07 e8 cb 10 bf 5e 5e 04 06 e8 c3 10 bf 5e 5e 05 05 e8 bb 10 bf 5e 5e 06 04 e8 b3 10 bf 5e 5e 07 03 e8 ab 10 bf 5e 5e 08 02 e8 a3 10 bf 5e 5e 09 01 e8 9b 10 bf 5e 5e 0a 00 d8 fd ae c8 f7 7f 00 00 e8 8b 10 bf 5e 5e 00 00 70 ff ae c8 f7 7f 00 00 e8 7b 10 bf 5e 5e 00 00 60 00 af c8 f7 7f 00 00 e8 6b 10 bf 5e 5e 00 00 c0 00 af c8 f7 7f 00 00 e8 5b 10 bf 5e 5e 00 00 20 01 af c8 f7 7f 00 00 e8 4b 10 bf 5e 5e 00 09 e8 43 10 bf 5e 5e 01 08 e8 3b 10 bf 5e 5e 02 07 e8 33 10 bf 5e 5e 03 06 e8 2b 10 bf 5e 5e 04 05 e8 23 10 bf 5e 5e 05 04 e8 1b 10 bf 5e 5e 06 03 e8 13 10 bf 5e 5e 07 02 e8 0b 10 bf 5e 5e 08 01 e8 03 10 bf 5e 5e 09 00 b0 01 af c8 f7 7f 00 00 e8 f3 0f bf 5e 5e 00 00 58 03 af c8 f7 7f 00 00 e8 e3 0f bf 5e 5e 00 09 e8 db 0f bf 5e 5e 01 08 e8 d3 0f bf 5e 5e 02 07 e8 cb 0f bf 5e 5e 03 06 e8 c3 0f bf 5e 5e 04 05 e8 bb 0f bf 5e 5e 05 04 e8 b3 0f bf 5e 5e 06 03 e8 ab 0f bf 5e 5e 07 02 e8 a3 0f bf 5e 5e 08 01 e8 9b 0f bf 5e 5e 09 00 e8 03 af c8 f7 7f 00 00 e8 8b 0f bf 5e 5e 00 00 90 05 af c8 f7 7f 00 00 e8 7b 0f bf 5e 5e 00 09 e8 73 0f bf 5e 5e 01 08 e8 6b 0f bf 5e 5e 02 07 e8 63 0f bf 5e 5e 03 06 e8 5b 0f bf 5e 5e 04 05 e8 53 0f bf 5e 5e 05 04 e8 4b 0f bf 5e 5e 06 03 e8 43 0f bf 5e 5e 07 02 e8 3b 0f bf 5e 5e 08 01 e8 33 0f bf 5e 5e 09 00 20 06 af c8 f7 7f 00 00 e8 23 0f bf 5e 5e 00 00 c8 07 af c8 f7 7f 00 00 a8 dd ad c8 f7 7f 00 00 0f 1f 44 00 00 48 b8 28 1d 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
60        | 7ff7c8674730h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[8u]()                                                     | LiteralExpr<Vector256<byte>> eval<byte>(IExpr<Vector256<byte>> expr)                                          | 0f 1f 44 00 00 48 b8 28 1d 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
61        | 7ff7c8674760h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[8i]()                                                     | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IExpr<Vector256<sbyte>> expr)                                       | 0f 1f 44 00 00 48 b8 30 21 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
62        | 7ff7c8674790h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[16u]()                                                    | LiteralExpr<Vector256<ushort>> eval<ushort>(IExpr<Vector256<ushort>> expr)                                    | 0f 1f 44 00 00 48 b8 18 22 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
63        | 7ff7c86747c0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[16i]()                                                    | LiteralExpr<Vector256<short>> eval<short>(IExpr<Vector256<short>> expr)                                       | 0f 1f 44 00 00 48 b8 00 23 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
64        | 7ff7c86747f0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[32u]()                                                    | LiteralExpr<Vector256<uint>> eval<uint>(IExpr<Vector256<uint>> expr)                                          | 0f 1f 44 00 00 48 b8 e8 23 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
65        | 7ff7c8674820h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[32i]()                                                    | LiteralExpr<Vector256<int>> eval<int>(IExpr<Vector256<int>> expr)                                             | 0f 1f 44 00 00 48 b8 d0 24 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
66        | 7ff7c8674850h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[64u]()                                                    | LiteralExpr<Vector256<ulong>> eval<ulong>(IExpr<Vector256<ulong>> expr)                                       | 0f 1f 44 00 00 48 b8 18 40 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
67        | 7ff7c8674880h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[64i]()                                                    | LiteralExpr<Vector256<long>> eval<long>(IExpr<Vector256<long>> expr)                                          | 0f 1f 44 00 00 48 b8 68 2b 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
68        | 7ff7c86748b0h   | 231     | hex://logix/logic.engine?satisfied#satisfied_g[8u](8u,8u)                                                     | bit satisfied<byte>(ComparisonExpr<byte> expr, byte a, byte b)                                                | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 10 ea 71 c7 f7 7f 00 00 ba 02 00 00 00 e8 0d 25 bf 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 31 fc ff ff 48 8b ce e8 11 ba ff ff 0f b6 40 08 0f b6 c0 3c ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 20 e7 ad c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 71 c7 f7 7f 00 00 ba 02 00 00 00 e8 9d 24 bf 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 c9 fc ff ff 48 8b ce e8 91 ba ff ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
69        | 7ff7c8674920h   | 119     | hex://logix/logic.engine?satisfied#satisfied_g[8i](8i,8i)                                                     | bit satisfied<sbyte>(ComparisonExpr<sbyte> expr, sbyte a, sbyte b)                                            | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 71 c7 f7 7f 00 00 ba 02 00 00 00 e8 9d 24 bf 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 c9 fc ff ff 48 8b ce e8 91 ba ff ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
70        | 7ff7c86749a0h   | 119     | hex://logix/logic.engine?satisfied#satisfied_g[16u](16u,16u)                                                  | bit satisfied<ushort>(ComparisonExpr<ushort> expr, ushort a, ushort b)                                        | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 c0 7f 17 c8 f7 7f 00 00 ba 02 00 00 00 e8 1d 24 bf 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 b0 fc ff ff 48 8b ce e8 d0 ba ff ff 0f b7 40 08 0f b7 c0 0f b7 c0 3d ff ff 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
71        | 7ff7c8674a20h   | 1607    | hex://logix/logic.engine?satisfied#satisfied_g[16i](16i,16i)                                                  | bit satisfied<short>(ComparisonExpr<short> expr, short a, short b)                                            | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 60 3c 3e c8 f7 7f 00 00 ba 02 00 00 00 e8 9d 23 bf 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 98 fc ff ff 48 8b ce e8 10 bb ff ff 48 0f bf 40 08 48 0f bf c0 48 0f bf c0 3d ff 7f 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 a3 0b bf 5e 5e 00 09 e8 9b 0b bf 5e 5e 01 08 e8 93 0b bf 5e 5e 02 07 e8 8b 0b bf 5e 5e 03 06 e8 83 0b bf 5e 5e 04 05 e8 7b 0b bf 5e 5e 05 04 e8 73 0b bf 5e 5e 06 03 e8 6b 0b bf 5e 5e 07 02 e8 63 0b bf 5e 5e 08 01 e8 5b 0b bf 5e 5e 09 00 58 08 af c8 f7 7f 00 00 e8 4b 0b bf 5e 5e 00 00 00 0a af c8 f7 7f 00 00 e8 3b 0b bf 5e 5e 00 09 e8 33 0b bf 5e 5e 01 08 e8 2b 0b bf 5e 5e 02 07 e8 23 0b bf 5e 5e 03 06 e8 1b 0b bf 5e 5e 04 05 e8 13 0b bf 5e 5e 05 04 e8 0b 0b bf 5e 5e 06 03 e8 03 0b bf 5e 5e 07 02 e8 fb 0a bf 5e 5e 08 01 e8 f3 0a bf 5e 5e 09 00 90 0a af c8 f7 7f 00 00 e8 e3 0a bf 5e 5e 00 00 38 0c af c8 f7 7f 00 00 e8 d3 0a bf 5e 5e 00 09 e8 cb 0a bf 5e 5e 01 08 e8 c3 0a bf 5e 5e 02 07 e8 bb 0a bf 5e 5e 03 06 e8 b3 0a bf 5e 5e 04 05 e8 ab 0a bf 5e 5e 05 04 e8 a3 0a bf 5e 5e 06 03 e8 9b 0a bf 5e 5e 07 02 e8 93 0a bf 5e 5e 08 01 e8 8b 0a bf 5e 5e 09 00 c8 0c af c8 f7 7f 00 00 e8 7b 0a bf 5e 5e 00 00 70 0e af c8 f7 7f 00 00 e8 6b 0a bf 5e 5e 00 00 d0 0e af c8 f7 7f 00 00 e8 5b 0a bf 5e 5e 00 00 30 0f af c8 f7 7f 00 00 e8 4b 0a bf 5e 5e 00 09 e8 43 0a bf 5e 5e 01 08 e8 3b 0a bf 5e 5e 02 07 e8 33 0a bf 5e 5e 03 06 e8 2b 0a bf 5e 5e 04 05 e8 23 0a bf 5e 5e 05 04 e8 1b 0a bf 5e 5e 06 03 e8 13 0a bf 5e 5e 07 02 e8 0b 0a bf 5e 5e 08 01 e8 03 0a bf 5e 5e 09 00 c0 0f af c8 f7 7f 00 00 e8 f3 09 bf 5e 5e 00 0c e8 eb 09 bf 5e 5e 01 0b e8 e3 09 bf 5e 5e 02 0a e8 db 09 bf 5e 5e 03 09 e8 d3 09 bf 5e 5e 04 08 e8 cb 09 bf 5e 5e 05 07 e8 c3 09 bf 5e 5e 06 06 e8 bb 09 bf 5e 5e 07 05 e8 b3 09 bf 5e 5e 08 04 e8 ab 09 bf 5e 5e 09 03 e8 a3 09 bf 5e 5e 0a 02 e8 9b 09 bf 5e 5e 0b 01 e8 93 09 bf 5e 5e 0c 00 78 11 af c8 f7 7f 00 00 e8 83 09 bf 5e 5e 00 00 00 13 af c8 f7 7f 00 00 e8 73 09 bf 5e 5e 00 09 e8 6b 09 bf 5e 5e 01 08 e8 63 09 bf 5e 5e 02 07 e8 5b 09 bf 5e 5e 03 06 e8 53 09 bf 5e 5e 04 05 e8 4b 09 bf 5e 5e 05 04 e8 43 09 bf 5e 5e 06 03 e8 3b 09 bf 5e 5e 07 02 e8 33 09 bf 5e 5e 08 01 e8 2b 09 bf 5e 5e 09 00 e0 13 af c8 f7 7f 00 00 e8 1b 09 bf 5e 5e 00 03 e8 13 09 bf 5e 5e 01 02 e8 0b 09 bf 5e 5e 02 01 e8 03 09 bf 5e 5e 03 00 78 15 af c8 f7 7f 00 00 e8 f3 08 bf 5e 5e 00 00 e8 16 af c8 f7 7f 00 00 e8 e3 08 bf 5e 5e 00 09 e8 db 08 bf 5e 5e 01 08 e8 d3 08 bf 5e 5e 02 07 e8 cb 08 bf 5e 5e 03 06 e8 c3 08 bf 5e 5e 04 05 e8 bb 08 bf 5e 5e 05 04 e8 b3 08 bf 5e 5e 06 03 e8 ab 08 bf 5e 5e 07 02 e8 a3 08 bf 5e 5e 08 01 e8 9b 08 bf 5e 5e 09 00 78 17 af c8 f7 7f 00 00 e8 8b 08 bf 5e 5e 00 03 e8 83 08 bf 5e 5e 03 02 e8 7b 08 bf 5e 5e 06 01 e8 73 08 bf 5e 5e 09 00 58 1a af c8 f7 7f 00 00 e8 63 08 bf 5e 5e 00 00 28 1b af c8 f7 7f 00 00 e8 53 08 bf 5e 5e 00 0a e8 4b 08 bf 5e 5e 01 09 e8 43 08 bf 5e 5e 02 08 e8 3b 08 bf 5e 5e 03 07 e8 33 08 bf 5e 5e 04 06 e8 2b 08 bf 5e 5e 05 05 e8 23 08 bf 5e 5e 06 04 e8 1b 08 bf 5e 5e 07 03 e8 13 08 bf 5e 5e 08 02 e8 0b 08 bf 5e 5e 09 01 e8 03 08 bf 5e 5e 0a 00 88 1b af c8 f7 7f 00 00 e8 f3 07 bf 5e 5e 00 00 08 1d af c8 f7 7f 00 00 e8 e3 07 bf 5e 5e 00 00 d8 1d af c8 f7 7f 00 00 e8 d3 07 bf 5e 5e 00 00 38 1e af c8 f7 7f 00 00 e8 c3 07 bf 5e 5e 00 00 98 1e af c8 f7 7f 00 00 e8 b3 07 bf 5e 5e 00 00 d8 22 af c8 f7 7f 00 00 68 ea ad c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 58 6f 17 c8 f7 7f 00 00 ba 02 00 00 00 e8 1d 1f bf 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 f2 fb ff ff 48 8b ce e8 52 b7 ff ff 8b 40 08 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 80 eb ad c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 48 5f 7e c7 f7 7f 00 00 ba 02 00 00 00 e8 ad 1e bf 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 ea fb ff ff 48 8b ce e8 a2 b7 ff ff 8b 40 08 3d ff ff ff 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 c8 ec ad c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 e0 2f ba c7 f7 7f 00 00 ba 02 00 00 00 e8 3c 1e bf 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 df fb ff ff 48 8b ce e8 0f fc ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 e0 ed ad c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 e0 64 3e c8 f7 7f 00 00 ba 02 00 00 00 e8 cc 1d bf 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 f7 fb ff ff 48 8b ce e8 7f b7 ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
72        | 7ff7c8674ea0h   | 455     | hex://logix/logic.engine?satisfied#satisfied_g[32u](32u,32u)                                                  | bit satisfied<uint>(ComparisonExpr<uint> expr, uint a, uint b)                                                | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 58 6f 17 c8 f7 7f 00 00 ba 02 00 00 00 e8 1d 1f bf 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 f2 fb ff ff 48 8b ce e8 52 b7 ff ff 8b 40 08 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 80 eb ad c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 48 5f 7e c7 f7 7f 00 00 ba 02 00 00 00 e8 ad 1e bf 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 ea fb ff ff 48 8b ce e8 a2 b7 ff ff 8b 40 08 3d ff ff ff 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 c8 ec ad c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 e0 2f ba c7 f7 7f 00 00 ba 02 00 00 00 e8 3c 1e bf 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 df fb ff ff 48 8b ce e8 0f fc ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 e0 ed ad c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 e0 64 3e c8 f7 7f 00 00 ba 02 00 00 00 e8 cc 1d bf 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 f7 fb ff ff 48 8b ce e8 7f b7 ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
73        | 7ff7c8674f10h   | 343     | hex://logix/logic.engine?satisfied#satisfied_g[32i](32i,32i)                                                  | bit satisfied<int>(ComparisonExpr<int> expr, int a, int b)                                                    | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 48 5f 7e c7 f7 7f 00 00 ba 02 00 00 00 e8 ad 1e bf 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 ea fb ff ff 48 8b ce e8 a2 b7 ff ff 8b 40 08 3d ff ff ff 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 c8 ec ad c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 e0 2f ba c7 f7 7f 00 00 ba 02 00 00 00 e8 3c 1e bf 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 df fb ff ff 48 8b ce e8 0f fc ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 e0 ed ad c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 e0 64 3e c8 f7 7f 00 00 ba 02 00 00 00 e8 cc 1d bf 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 f7 fb ff ff 48 8b ce e8 7f b7 ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
74        | 7ff7c8674f80h   | 231     | hex://logix/logic.engine?satisfied#satisfied_g[64u](64u,64u)                                                  | bit satisfied<ulong>(ComparisonExpr<ulong> expr, ulong a, ulong b)                                            | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 e0 2f ba c7 f7 7f 00 00 ba 02 00 00 00 e8 3c 1e bf 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 df fb ff ff 48 8b ce e8 0f fc ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 e0 ed ad c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 e0 64 3e c8 f7 7f 00 00 ba 02 00 00 00 e8 cc 1d bf 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 f7 fb ff ff 48 8b ce e8 7f b7 ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
75        | 7ff7c8674ff0h   | 119     | hex://logix/logic.engine?satisfied#satisfied_g[64i](64i,64i)                                                  | bit satisfied<long>(ComparisonExpr<long> expr, long a, long b)                                                | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 e0 64 3e c8 f7 7f 00 00 ba 02 00 00 00 e8 cc 1d bf 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 f7 fb ff ff 48 8b ce e8 7f b7 ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
76        | 7ff7c8675070h   | 1331    | hex://logix/logic.engine?satisfied#satisfied_g[8u](v128x8u,v128x8u)                                           | bit satisfied<byte>(ComparisonExpr<Vector128<byte>> expr, Vector128<byte> a, Vector128<byte> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 70 19 af c8 f7 7f 00 00 ba 02 00 00 00 e8 49 1d bf 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 d2 fc ff ff 48 8b cb e8 82 c0 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 33 05 bf 5e 5e 00 09 e8 2b 05 bf 5e 5e 01 08 e8 23 05 bf 5e 5e 02 07 e8 1b 05 bf 5e 5e 03 06 e8 13 05 bf 5e 5e 04 05 e8 0b 05 bf 5e 5e 05 04 e8 03 05 bf 5e 5e 06 03 e8 fb 04 bf 5e 5e 07 02 e8 f3 04 bf 5e 5e 08 01 e8 eb 04 bf 5e 5e 09 00 28 1f af c8 f7 7f 00 00 e8 db 04 bf 5e 5e 00 03 e8 d3 04 bf 5e 5e 03 02 e8 cb 04 bf 5e 5e 06 01 e8 c3 04 bf 5e 5e 09 00 08 22 af c8 f7 7f 00 00 e8 b3 04 bf 5e 5e 00 09 e8 ab 04 bf 5e 5e 01 08 e8 a3 04 bf 5e 5e 02 07 e8 9b 04 bf 5e 5e 03 06 e8 93 04 bf 5e 5e 04 05 e8 8b 04 bf 5e 5e 05 04 e8 83 04 bf 5e 5e 06 03 e8 7b 04 bf 5e 5e 07 02 e8 73 04 bf 5e 5e 08 01 e8 6b 04 bf 5e 5e 09 00 68 23 af c8 f7 7f 00 00 e8 5b 04 bf 5e 5e 00 03 e8 53 04 bf 5e 5e 03 02 e8 4b 04 bf 5e 5e 06 01 e8 43 04 bf 5e 5e 09 00 48 26 af c8 f7 7f 00 00 e8 33 04 bf 5e 5e 00 00 18 27 af c8 f7 7f 00 00 e8 23 04 bf 5e 5e 00 09 e8 1b 04 bf 5e 5e 01 08 e8 13 04 bf 5e 5e 02 07 e8 0b 04 bf 5e 5e 03 06 e8 03 04 bf 5e 5e 04 05 e8 fb 03 bf 5e 5e 05 04 e8 f3 03 bf 5e 5e 06 03 e8 eb 03 bf 5e 5e 07 02 e8 e3 03 bf 5e 5e 08 01 e8 db 03 bf 5e 5e 09 00 a8 27 af c8 f7 7f 00 00 e8 cb 03 bf 5e 5e 00 03 e8 c3 03 bf 5e 5e 03 02 e8 bb 03 bf 5e 5e 06 01 e8 b3 03 bf 5e 5e 09 00 88 2a af c8 f7 7f 00 00 e8 a3 03 bf 5e 5e 00 00 58 2b af c8 f7 7f 00 00 e8 93 03 bf 5e 5e 00 09 e8 8b 03 bf 5e 5e 01 08 e8 83 03 bf 5e 5e 02 07 e8 7b 03 bf 5e 5e 03 06 e8 73 03 bf 5e 5e 04 05 e8 6b 03 bf 5e 5e 05 04 e8 63 03 bf 5e 5e 06 03 e8 5b 03 bf 5e 5e 07 02 e8 53 03 bf 5e 5e 08 01 e8 4b 03 bf 5e 5e 09 00 e8 2b af c8 f7 7f 00 00 e8 3b 03 bf 5e 5e 00 03 e8 33 03 bf 5e 5e 03 02 e8 2b 03 bf 5e 5e 06 01 e8 23 03 bf 5e 5e 09 00 c8 2e af c8 f7 7f 00 00 e8 13 03 bf 5e 5e 00 00 98 2f af c8 f7 7f 00 00 e8 03 03 bf 5e 5e 00 09 e8 fb 02 bf 5e 5e 01 08 e8 f3 02 bf 5e 5e 02 07 e8 eb 02 bf 5e 5e 03 06 e8 e3 02 bf 5e 5e 04 05 e8 db 02 bf 5e 5e 05 04 e8 d3 02 bf 5e 5e 06 03 e8 cb 02 bf 5e 5e 07 02 e8 c3 02 bf 5e 5e 08 01 e8 bb 02 bf 5e 5e 09 00 28 30 af c8 f7 7f 00 00 e8 ab 02 bf 5e 5e 00 03 e8 a3 02 bf 5e 5e 03 02 e8 9b 02 bf 5e 5e 06 01 e8 93 02 bf 5e 5e 09 00 08 33 af c8 f7 7f 00 00 e8 83 02 bf 5e 5e 00 00 d8 33 af c8 f7 7f 00 00 e8 73 02 bf 5e 5e 00 09 e8 6b 02 bf 5e 5e 01 08 e8 63 02 bf 5e 5e 02 07 e8 5b 02 bf 5e 5e 03 06 e8 53 02 bf 5e 5e 04 05 e8 4b 02 bf 5e 5e 05 04 e8 43 02 bf 5e 5e 06 03 e8 3b 02 bf 5e 5e 07 02 e8 33 02 bf 5e 5e 08 01 e8 2b 02 bf 5e 5e 09 00 68 34 af c8 f7 7f 00 00 e8 1b 02 bf 5e 5e 00 03 e8 13 02 bf 5e 5e 01 02 e8 0b 02 bf 5e 5e 02 01 e8 03 02 bf 5e 5e 03 00 00 36 af c8 f7 7f 00 00 e8 f3 01 bf 5e 5e 00 03 e8 eb 01 bf 5e 5e 03 02 e8 e3 01 bf 5e 5e 06 01 e8 db 01 bf 5e 5e 09 00 30 38 af c8 f7 7f 00 00 e8 cb 01 bf 5e 5e 00 00 00 39 af c8 f7 7f 00 00 e8 bb 01 bf 5e 5e 00 00 60 39 af c8 f7 7f 00 00 e8 ab 01 bf 5e 5e 00 00 c0 39 af c8 f7 7f 00 00 e8 9b 01 bf 5e 5e 00 09 e8 93 01 bf 5e 5e 01 08 e8 8b 01 bf 5e 5e 02 07 e8 83 01 bf 5e 5e 03 06 e8 7b 01 bf 5e 5e 04 05 e8 73 01 bf 5e 5e 05 04 e8 6b 01 bf 5e 5e 06 03 e8 63 01 bf 5e 5e 07 02 e8 5b 01 bf 5e 5e 08 01 e8 53 01 bf 5e 5e 09 00 50 3a af c8 f7 7f 00 00 e8 43 01 bf 5e 5e 00 00 b8 3f af c8 f7 7f 00 00 10 f5 ad c8 f7 7f 00 00 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 20 21 af c8 f7 7f 00 00 ba 02 00 00 00 e8 a9 18 bf 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 e2 c0 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
77        | 7ff7c8675510h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[8i](v128x8i,v128x8i)                                           | bit satisfied<sbyte>(ComparisonExpr<Vector128<sbyte>> expr, Vector128<sbyte> a, Vector128<sbyte> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 20 21 af c8 f7 7f 00 00 ba 02 00 00 00 e8 a9 18 bf 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 e2 c0 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
78        | 7ff7c86755b0h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[16u](v128x16u,v128x16u)                                        | bit satisfied<ushort>(ComparisonExpr<Vector128<ushort>> expr, Vector128<ushort> a, Vector128<ushort> b)       | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 60 25 af c8 f7 7f 00 00 ba 02 00 00 00 e8 09 18 bf 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 c2 fb ff ff 48 8b cb e8 32 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
79        | 7ff7c8675650h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[16i](v128x16i,v128x16i)                                        | bit satisfied<short>(ComparisonExpr<Vector128<short>> expr, Vector128<short> a, Vector128<short> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 a0 29 af c8 f7 7f 00 00 ba 02 00 00 00 e8 69 17 bf 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 b2 fb ff ff 48 8b cb e8 82 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
80        | 7ff7c86756f0h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[32u](v128x32u,v128x32u)                                        | bit satisfied<uint>(ComparisonExpr<Vector128<uint>> expr, Vector128<uint> a, Vector128<uint> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 e0 2d af c8 f7 7f 00 00 ba 02 00 00 00 e8 c9 16 bf 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 a2 fb ff ff 48 8b cb e8 d2 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
81        | 7ff7c8675790h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[32i](v128x32i,v128x32i)                                        | bit satisfied<int>(ComparisonExpr<Vector128<int>> expr, Vector128<int> a, Vector128<int> b)                   | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 20 32 af c8 f7 7f 00 00 ba 02 00 00 00 e8 29 16 bf 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 92 fb ff ff 48 8b cb e8 32 c6 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
82        | 7ff7c8675830h   | 1176    | hex://logix/logic.engine?satisfied#satisfied_g[64u](v128x64u,v128x64u)                                        | bit satisfied<ulong>(ComparisonExpr<Vector128<ulong>> expr, Vector128<ulong> a, Vector128<ulong> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 48 37 af c8 f7 7f 00 00 ba 02 00 00 00 e8 89 15 bf 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 82 fb ff ff 48 8b cb e8 02 fc ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 73 fd be 5e 5e 00 03 e8 6b fd be 5e 5e 03 02 e8 63 fd be 5e 5e 06 01 e8 5b fd be 5e 5e 09 00 30 3d af c8 f7 7f 00 00 e8 4b fd be 5e 5e 00 0c e8 43 fd be 5e 5e 01 0b e8 3b fd be 5e 5e 02 0a e8 33 fd be 5e 5e 03 09 e8 2b fd be 5e 5e 04 08 e8 23 fd be 5e 5e 05 07 e8 1b fd be 5e 5e 06 06 e8 13 fd be 5e 5e 07 05 e8 0b fd be 5e 5e 08 04 e8 03 fd be 5e 5e 09 03 e8 fb fc be 5e 5e 0a 02 e8 f3 fc be 5e 5e 0b 01 e8 eb fc be 5e 5e 0c 00 30 3e af c8 f7 7f 00 00 e8 db fc be 5e 5e 00 09 e8 d3 fc be 5e 5e 01 08 e8 cb fc be 5e 5e 02 07 e8 c3 fc be 5e 5e 03 06 e8 bb fc be 5e 5e 04 05 e8 b3 fc be 5e 5e 05 04 e8 ab fc be 5e 5e 06 03 e8 a3 fc be 5e 5e 07 02 e8 9b fc be 5e 5e 08 01 e8 93 fc be 5e 5e 09 00 98 40 af c8 f7 7f 00 00 e8 83 fc be 5e 5e 00 03 e8 7b fc be 5e 5e 01 02 e8 73 fc be 5e 5e 02 01 e8 6b fc be 5e 5e 03 00 30 42 af c8 f7 7f 00 00 e8 5b fc be 5e 5e 00 00 a0 43 af c8 f7 7f 00 00 e8 4b fc be 5e 5e 00 09 e8 43 fc be 5e 5e 01 08 e8 3b fc be 5e 5e 02 07 e8 33 fc be 5e 5e 03 06 e8 2b fc be 5e 5e 04 05 e8 23 fc be 5e 5e 05 04 e8 1b fc be 5e 5e 06 03 e8 13 fc be 5e 5e 07 02 e8 0b fc be 5e 5e 08 01 e8 03 fc be 5e 5e 09 00 30 44 af c8 f7 7f 00 00 e8 f3 fb be 5e 5e 00 03 e8 eb fb be 5e 5e 03 02 e8 e3 fb be 5e 5e 06 01 e8 db fb be 5e 5e 09 00 10 47 af c8 f7 7f 00 00 e8 cb fb be 5e 5e 00 00 e0 47 af c8 f7 7f 00 00 e8 bb fb be 5e 5e 00 0a e8 b3 fb be 5e 5e 01 09 e8 ab fb be 5e 5e 02 08 e8 a3 fb be 5e 5e 03 07 e8 9b fb be 5e 5e 04 06 e8 93 fb be 5e 5e 05 05 e8 8b fb be 5e 5e 06 04 e8 83 fb be 5e 5e 07 03 e8 7b fb be 5e 5e 08 02 e8 73 fb be 5e 5e 09 01 e8 6b fb be 5e 5e 0a 00 40 48 af c8 f7 7f 00 00 e8 5b fb be 5e 5e 00 00 c0 49 af c8 f7 7f 00 00 e8 4b fb be 5e 5e 00 00 90 4a af c8 f7 7f 00 00 e8 3b fb be 5e 5e 00 00 f0 4a af c8 f7 7f 00 00 e8 2b fb be 5e 5e 00 00 50 4b af c8 f7 7f 00 00 e8 1b fb be 5e 5e 00 09 e8 13 fb be 5e 5e 01 08 e8 0b fb be 5e 5e 02 07 e8 03 fb be 5e 5e 03 06 e8 fb fa be 5e 5e 04 05 e8 f3 fa be 5e 5e 05 04 e8 eb fa be 5e 5e 06 03 e8 e3 fa be 5e 5e 07 02 e8 db fa be 5e 5e 08 01 e8 d3 fa be 5e 5e 09 00 e0 4b af c8 f7 7f 00 00 e8 c3 fa be 5e 5e 00 03 e8 bb fa be 5e 5e 03 02 e8 b3 fa be 5e 5e 06 01 e8 ab fa be 5e 5e 09 00 c0 4e af c8 f7 7f 00 00 e8 9b fa be 5e 5e 00 00 90 4f af c8 f7 7f 00 00 e8 8b fa be 5e 5e 00 09 e8 83 fa be 5e 5e 01 08 e8 7b fa be 5e 5e 02 07 e8 73 fa be 5e 5e 03 06 e8 6b fa be 5e 5e 04 05 e8 63 fa be 5e 5e 05 04 e8 5b fa be 5e 5e 06 03 e8 53 fa be 5e 5e 07 02 e8 4b fa be 5e 5e 08 01 e8 43 fa be 5e 5e 09 00 20 50 af c8 f7 7f 00 00 e8 33 fa be 5e 5e 00 03 e8 2b fa be 5e 5e 03 02 e8 23 fa be 5e 5e 06 01 e8 1b fa be 5e 5e 09 00 00 53 af c8 f7 7f 00 00 e8 0b fa be 5e 5e 00 00 d0 53 af c8 f7 7f 00 00 e8 fb f9 be 5e 5e 00 09 e8 f3 f9 be 5e 5e 01 08 e8 eb f9 be 5e 5e 02 07 e8 e3 f9 be 5e 5e 03 06 e8 db f9 be 5e 5e 04 05 e8 d3 f9 be 5e 5e 05 04 e8 cb f9 be 5e 5e 06 03 e8 c3 f9 be 5e 5e 07 02 e8 bb f9 be 5e 5e 08 01 e8 b3 f9 be 5e 5e 09 00 60 54 af c8 f7 7f 00 00 e8 a3 f9 be 5e 5e 00 03 e8 9b f9 be 5e 5e 03 02 e8 93 f9 be 5e 5e 06 01 e8 8b f9 be 5e 5e 09 00 40 57 af c8 f7 7f 00 00 00 00 00 00 00 00 00 00
83        | 7ff7c8675cd0h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[64i](v128x64i,v128x64i)                                        | bit satisfied<long>(ComparisonExpr<Vector128<long>> expr, Vector128<long> a, Vector128<long> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 48 3c af c8 f7 7f 00 00 ba 02 00 00 00 e8 e9 10 bf 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 ba f7 ff ff 48 8b cb e8 e2 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
84        | 7ff7c8675d70h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[8u](v256x8u,v256x8u)                                           | bit satisfied<byte>(ComparisonExpr<Vector256<byte>> expr, Vector256<byte> a, Vector256<byte> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 28 46 af c8 f7 7f 00 00 ba 02 00 00 00 e8 49 10 bf 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 6a fc ff ff 48 8b cb e8 32 c2 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
85        | 7ff7c8675e10h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[8i](v256x8i,v256x8i)                                           | bit satisfied<sbyte>(ComparisonExpr<Vector256<sbyte>> expr, Vector256<sbyte> a, Vector256<sbyte> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 d8 4d af c8 f7 7f 00 00 ba 02 00 00 00 e8 a9 0f bf 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 fa fc ff ff 48 8b cb e8 c2 c6 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
86        | 7ff7c8675eb0h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[16u](v256x16u,v256x16u)                                        | bit satisfied<ushort>(ComparisonExpr<Vector256<ushort>> expr, Vector256<ushort> a, Vector256<ushort> b)       | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 18 52 af c8 f7 7f 00 00 ba 02 00 00 00 e8 09 0f bf 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 ea fc ff ff 48 8b cb e8 42 c7 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
87        | 7ff7c8675f50h   | 840     | hex://logix/logic.engine?satisfied#satisfied_g[16i](v256x16i,v256x16i)                                        | bit satisfied<short>(ComparisonExpr<Vector256<short>> expr, Vector256<short> a, Vector256<short> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 58 56 af c8 f7 7f 00 00 ba 02 00 00 00 e8 69 0e bf 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 da fc ff ff 48 8b cb e8 c2 c7 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 53 f6 be 5e 5e 00 00 10 58 af c8 f7 7f 00 00 e8 43 f6 be 5e 5e 00 09 e8 3b f6 be 5e 5e 01 08 e8 33 f6 be 5e 5e 02 07 e8 2b f6 be 5e 5e 03 06 e8 23 f6 be 5e 5e 04 05 e8 1b f6 be 5e 5e 05 04 e8 13 f6 be 5e 5e 06 03 e8 0b f6 be 5e 5e 07 02 e8 03 f6 be 5e 5e 08 01 e8 fb f5 be 5e 5e 09 00 a0 58 af c8 f7 7f 00 00 e8 eb f5 be 5e 5e 00 03 e8 e3 f5 be 5e 5e 03 02 e8 db f5 be 5e 5e 06 01 e8 d3 f5 be 5e 5e 09 00 80 5b af c8 f7 7f 00 00 e8 c3 f5 be 5e 5e 00 00 50 5c af c8 f7 7f 00 00 e8 b3 f5 be 5e 5e 00 09 e8 ab f5 be 5e 5e 01 08 e8 a3 f5 be 5e 5e 02 07 e8 9b f5 be 5e 5e 03 06 e8 93 f5 be 5e 5e 04 05 e8 8b f5 be 5e 5e 05 04 e8 83 f5 be 5e 5e 06 03 e8 7b f5 be 5e 5e 07 02 e8 73 f5 be 5e 5e 08 01 e8 6b f5 be 5e 5e 09 00 e0 5c af c8 f7 7f 00 00 e8 5b f5 be 5e 5e 00 03 e8 53 f5 be 5e 5e 03 02 e8 4b f5 be 5e 5e 06 01 e8 43 f5 be 5e 5e 09 00 c0 5f af c8 f7 7f 00 00 e8 33 f5 be 5e 5e 00 00 90 60 af c8 f7 7f 00 00 e8 23 f5 be 5e 5e 00 09 e8 1b f5 be 5e 5e 01 08 e8 13 f5 be 5e 5e 02 07 e8 0b f5 be 5e 5e 03 06 e8 03 f5 be 5e 5e 04 05 e8 fb f4 be 5e 5e 05 04 e8 f3 f4 be 5e 5e 06 03 e8 eb f4 be 5e 5e 07 02 e8 e3 f4 be 5e 5e 08 01 e8 db f4 be 5e 5e 09 00 20 61 af c8 f7 7f 00 00 e8 cb f4 be 5e 5e 00 03 e8 c3 f4 be 5e 5e 01 02 e8 bb f4 be 5e 5e 02 01 e8 b3 f4 be 5e 5e 03 00 b8 62 af c8 f7 7f 00 00 e8 a3 f4 be 5e 5e 00 03 e8 9b f4 be 5e 5e 03 02 e8 93 f4 be 5e 5e 06 01 e8 8b f4 be 5e 5e 09 00 e8 64 af c8 f7 7f 00 00 e8 7b f4 be 5e 5e 00 00 b8 65 af c8 f7 7f 00 00 e8 6b f4 be 5e 5e 00 00 18 66 af c8 f7 7f 00 00 e8 5b f4 be 5e 5e 00 00 78 66 af c8 f7 7f 00 00 e8 4b f4 be 5e 5e 00 09 e8 43 f4 be 5e 5e 01 08 e8 3b f4 be 5e 5e 02 07 e8 33 f4 be 5e 5e 03 06 e8 2b f4 be 5e 5e 04 05 e8 23 f4 be 5e 5e 05 04 e8 1b f4 be 5e 5e 06 03 e8 13 f4 be 5e 5e 07 02 e8 0b f4 be 5e 5e 08 01 e8 03 f4 be 5e 5e 09 00 08 67 af c8 f7 7f 00 00 e8 f3 f3 be 5e 5e 00 03 e8 eb f3 be 5e 5e 03 02 e8 e3 f3 be 5e 5e 06 01 e8 db f3 be 5e 5e 09 00 e8 69 af c8 f7 7f 00 00 e8 cb f3 be 5e 5e 00 00 d0 6c af c8 f7 7f 00 00 e8 bb f3 be 5e 5e 00 00 48 6d af c8 f7 7f 00 00 00 00 00 00 00 00 00 00
88        | 7ff7c86763f0h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[32u](v256x32u,v256x32u)                                        | bit satisfied<uint>(ComparisonExpr<Vector256<uint>> expr, Vector256<uint> a, Vector256<uint> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 98 5a af c8 f7 7f 00 00 ba 02 00 00 00 e8 c9 09 bf 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 f2 fb ff ff 48 8b cb e8 42 c4 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
89        | 7ff7c8676490h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[32i](v256x32i,v256x32i)                                        | bit satisfied<int>(ComparisonExpr<Vector256<int>> expr, Vector256<int> a, Vector256<int> b)                   | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 d8 5e af c8 f7 7f 00 00 ba 02 00 00 00 e8 29 09 bf 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 c2 c4 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
90        | 7ff7c8676530h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[64u](v256x64u,v256x64u)                                        | bit satisfied<ulong>(ComparisonExpr<Vector256<ulong>> expr, Vector256<ulong> a, Vector256<ulong> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 00 64 af c8 f7 7f 00 00 ba 02 00 00 00 e8 89 08 bf 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 d2 fb ff ff 48 8b cb e8 52 fc ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
91        | 7ff7c86765d0h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[64i](v256x64i,v256x64i)                                        | bit satisfied<long>(ComparisonExpr<Vector256<long>> expr, Vector256<long> a, Vector256<long> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 00 69 af c8 f7 7f 00 00 ba 02 00 00 00 e8 e9 07 bf 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 0a fc ff ff 48 8b cb e8 b2 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
92        | 7ff7c8676670h   | 35      | hex://logix/logic.engine?eval#eval_()                                                                         | bit eval(ILogicExpr expr)                                                                                     | 0f 1f 44 00 00 48 b8 70 47 de c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
93        | 7ff7c86766a0h   | 659     | hex://logix/logic.engine?satisfied#satisfied_(1u,1u)                                                          | bit satisfied(ComparisonExpr expr, bit a, bit b)                                                              | 57 56 48 83 ec 28 48 8b f1 41 8b f8 8b 0e 48 8b 4e 18 83 79 08 00 76 54 48 8b 49 10 49 bb e8 0d 62 c7 f7 7f 00 00 48 b8 e8 0d 62 c7 f7 7f 00 00 39 09 ff 10 48 8b 4e 18 83 79 08 01 76 2e 48 8b 49 18 8b d7 49 bb f0 0d 62 c7 f7 7f 00 00 48 b8 f0 0d 62 c7 f7 7f 00 00 39 09 ff 10 48 8b ce e8 6c e0 76 ff 90 48 83 c4 28 5e 5f c3 e8 bf 96 d1 5e cc 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 c0 10 b0 c8 f7 7f 00 00 55 41 57 41 56 57 56 53 48 83 ec 48 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 4e 10 48 8b 5f 10 41 be b6 00 00 00 41 bf 01 00 00 00 8b 49 08 3b 4b 08 0f 85 e9 00 00 00 e8 70 e8 76 ff 48 8b c8 49 bb f8 0d 62 c7 f7 7f 00 00 48 b8 f8 0d 62 c7 f7 7f 00 00 39 09 ff 10 48 89 45 c8 48 8b 4d c8 49 bb 00 0e 62 c7 f7 7f 00 00 48 b8 00 0e 62 c7 f7 7f 00 00 39 09 ff 10 85 c0 74 5d 48 8b 4d c8 49 bb 08 0e 62 c7 f7 7f 00 00 48 b8 08 0e 62 c7 f7 7f 00 00 39 09 ff 10 48 8b d0 48 8b ce e8 ea f5 76 ff 48 8b ce e8 92 df 76 ff 8b d8 48 8b cf e8 88 df 76 ff 3b d8 75 3e 48 8b 4d c8 49 bb 00 0e 62 c7 f7 7f 00 00 48 b8 00 0e 62 c7 f7 7f 00 00 39 09 ff 10 85 c0 75 a3 48 8b 4d c8 49 bb 10 0e 62 c7 f7 7f 00 00 48 b8 10 0e 62 c7 f7 7f 00 00 39 09 ff 10 eb 18 48 8b cc e8 7e 00 00 00 90 33 c0 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 8b f1 8b 7b 08 b9 19 02 00 00 48 ba 08 98 bb c7 f7 7f 00 00 e8 43 9d d1 5e 48 8b d8 b9 25 02 00 00 48 ba 08 98 bb c7 f7 7f 00 00 e8 2c 9d d1 5e 4c 8b c8 4c 8d 45 d0 45 88 38 45 89 70 04 4c 8b c3 8b ce 8b d7 48 8b 45 d0 48 89 44 24 20 e8 f9 dc 0d ff 48 8b c8 e8 51 50 b6 5e cc 55 41 57 41 56 57 56 53 48 83 ec 38 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c8 00 74 1c 48 8b 4d c8 49 bb 10 0e 62 c7 f7 7f 00 00 48 b8 10 0e 62 c7 f7 7f 00 00 39 09 ff 10 90 48 83 c4 38 5b 5e 5f 41 5e 41 5f 5d c3 00 00 19 0c 07 00 0c 82 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 19 0c 07 00 0c 62 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 00 00 00 00 00 00 00
94        | 7ff7c8676730h   | 515     | hex://logix/logic.engine?equal#equal_()                                                                       | bit equal(VariedLogicExpr a, VariedLogicExpr b)                                                               | 55 41 57 41 56 57 56 53 48 83 ec 48 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 4e 10 48 8b 5f 10 41 be b6 00 00 00 41 bf 01 00 00 00 8b 49 08 3b 4b 08 0f 85 e9 00 00 00 e8 70 e8 76 ff 48 8b c8 49 bb f8 0d 62 c7 f7 7f 00 00 48 b8 f8 0d 62 c7 f7 7f 00 00 39 09 ff 10 48 89 45 c8 48 8b 4d c8 49 bb 00 0e 62 c7 f7 7f 00 00 48 b8 00 0e 62 c7 f7 7f 00 00 39 09 ff 10 85 c0 74 5d 48 8b 4d c8 49 bb 08 0e 62 c7 f7 7f 00 00 48 b8 08 0e 62 c7 f7 7f 00 00 39 09 ff 10 48 8b d0 48 8b ce e8 ea f5 76 ff 48 8b ce e8 92 df 76 ff 8b d8 48 8b cf e8 88 df 76 ff 3b d8 75 3e 48 8b 4d c8 49 bb 00 0e 62 c7 f7 7f 00 00 48 b8 00 0e 62 c7 f7 7f 00 00 39 09 ff 10 85 c0 75 a3 48 8b 4d c8 49 bb 10 0e 62 c7 f7 7f 00 00 48 b8 10 0e 62 c7 f7 7f 00 00 39 09 ff 10 eb 18 48 8b cc e8 7e 00 00 00 90 33 c0 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 8b f1 8b 7b 08 b9 19 02 00 00 48 ba 08 98 bb c7 f7 7f 00 00 e8 43 9d d1 5e 48 8b d8 b9 25 02 00 00 48 ba 08 98 bb c7 f7 7f 00 00 e8 2c 9d d1 5e 4c 8b c8 4c 8d 45 d0 45 88 38 45 89 70 04 4c 8b c3 8b ce 8b d7 48 8b 45 d0 48 89 44 24 20 e8 f9 dc 0d ff 48 8b c8 e8 51 50 b6 5e cc 55 41 57 41 56 57 56 53 48 83 ec 38 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c8 00 74 1c 48 8b 4d c8 49 bb 10 0e 62 c7 f7 7f 00 00 48 b8 10 0e 62 c7 f7 7f 00 00 39 09 ff 10 90 48 83 c4 38 5b 5e 5f 41 5e 41 5f 5d c3 00 00 19 0c 07 00 0c 82 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 19 0c 07 00 0c 62 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 00 00 00 00 00 00 00
