Sequence  | Address         | Length  | Uri                                                                                                           | OpSig                                                                                                         | Data
0         | 7ff7c85f5150h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[8u]()                                                         | bit eval<byte>(ILogicExpr<byte> expr)                                                                         | 0f 1f 44 00 00 48 b8 a8 96 db c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
1         | 7ff7c85f5180h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[8i]()                                                         | bit eval<sbyte>(ILogicExpr<sbyte> expr)                                                                       | 0f 1f 44 00 00 48 b8 a8 96 db c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
2         | 7ff7c85f51b0h   | 1107    | hex://logix/logic.engine?eval#eval_logic_expr_g[16u]()                                                        | bit eval<ushort>(ILogicExpr<ushort> expr)                                                                     | 0f 1f 44 00 00 48 b8 a8 96 db c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 63 04 c7 5e 5e 00 00 c0 0b 9e c8 f7 7f 00 00 e8 53 04 c7 5e 5e 00 00 a8 0c 9e c8 f7 7f 00 00 e8 43 04 c7 5e 5e 00 00 90 0d 9e c8 f7 7f 00 00 e8 33 04 c7 5e 5e 00 00 78 0e 9e c8 f7 7f 00 00 e8 23 04 c7 5e 5e 00 00 60 0f 9e c8 f7 7f 00 00 e8 13 04 c7 5e 5e 00 0a e8 0b 04 c7 5e 5e 01 09 e8 03 04 c7 5e 5e 02 08 e8 fb 03 c7 5e 5e 03 07 e8 f3 03 c7 5e 5e 04 06 e8 eb 03 c7 5e 5e 05 05 e8 e3 03 c7 5e 5e 06 04 e8 db 03 c7 5e 5e 07 03 e8 d3 03 c7 5e 5e 08 02 e8 cb 03 c7 5e 5e 09 01 e8 c3 03 c7 5e 5e 0a 00 48 10 9e c8 f7 7f 00 00 e8 b3 03 c7 5e 5e 00 00 e0 11 9e c8 f7 7f 00 00 e8 a3 03 c7 5e 5e 00 00 28 13 9e c8 f7 7f 00 00 e8 93 03 c7 5e 5e 00 00 88 13 9e c8 f7 7f 00 00 e8 83 03 c7 5e 5e 00 00 e8 13 9e c8 f7 7f 00 00 e8 73 03 c7 5e 5e 00 00 48 14 9e c8 f7 7f 00 00 e8 63 03 c7 5e 5e 00 00 a8 14 9e c8 f7 7f 00 00 e8 53 03 c7 5e 5e 00 00 08 15 9e c8 f7 7f 00 00 e8 43 03 c7 5e 5e 00 00 68 15 9e c8 f7 7f 00 00 e8 33 03 c7 5e 5e 00 00 c8 15 9e c8 f7 7f 00 00 e8 23 03 c7 5e 5e 00 00 28 16 9e c8 f7 7f 00 00 e8 13 03 c7 5e 5e 00 00 88 16 9e c8 f7 7f 00 00 e8 03 03 c7 5e 5e 00 00 e8 16 9e c8 f7 7f 00 00 e8 f3 02 c7 5e 5e 00 00 48 17 9e c8 f7 7f 00 00 e8 e3 02 c7 5e 5e 00 00 a8 17 9e c8 f7 7f 00 00 e8 d3 02 c7 5e 5e 00 00 08 18 9e c8 f7 7f 00 00 e8 c3 02 c7 5e 5e 00 00 68 18 9e c8 f7 7f 00 00 e8 b3 02 c7 5e 5e 00 00 c8 18 9e c8 f7 7f 00 00 e8 a3 02 c7 5e 5e 00 00 28 19 9e c8 f7 7f 00 00 e8 93 02 c7 5e 5e 00 0a e8 8b 02 c7 5e 5e 01 09 e8 83 02 c7 5e 5e 02 08 e8 7b 02 c7 5e 5e 03 07 e8 73 02 c7 5e 5e 04 06 e8 6b 02 c7 5e 5e 05 05 e8 63 02 c7 5e 5e 06 04 e8 5b 02 c7 5e 5e 07 03 e8 53 02 c7 5e 5e 08 02 e8 4b 02 c7 5e 5e 09 01 e8 43 02 c7 5e 5e 0a 00 88 19 9e c8 f7 7f 00 00 e8 33 02 c7 5e 5e 00 00 20 1b 9e c8 f7 7f 00 00 e8 23 02 c7 5e 5e 00 03 e8 1b 02 c7 5e 5e 01 02 e8 13 02 c7 5e 5e 02 01 e8 0b 02 c7 5e 5e 03 00 58 1c 9e c8 f7 7f 00 00 e8 fb 01 c7 5e 5e 00 00 50 1d 9e c8 f7 7f 00 00 e8 eb 01 c7 5e 5e 00 00 b0 1d 9e c8 f7 7f 00 00 e8 db 01 c7 5e 5e 00 00 10 1e 9e c8 f7 7f 00 00 e8 cb 01 c7 5e 5e 00 00 70 1e 9e c8 f7 7f 00 00 e8 bb 01 c7 5e 5e 00 00 d0 1e 9e c8 f7 7f 00 00 e8 ab 01 c7 5e 5e 00 00 30 1f 9e c8 f7 7f 00 00 e8 9b 01 c7 5e 5e 00 00 90 1f 9e c8 f7 7f 00 00 e8 8b 01 c7 5e 5e 00 00 f0 1f 9e c8 f7 7f 00 00 e8 7b 01 c7 5e 5e 00 0c e8 73 01 c7 5e 5e 01 0b e8 6b 01 c7 5e 5e 02 0a e8 63 01 c7 5e 5e 03 09 e8 5b 01 c7 5e 5e 04 08 e8 53 01 c7 5e 5e 05 07 e8 4b 01 c7 5e 5e 06 06 e8 43 01 c7 5e 5e 07 05 e8 3b 01 c7 5e 5e 08 04 e8 33 01 c7 5e 5e 09 03 e8 2b 01 c7 5e 5e 0a 02 e8 23 01 c7 5e 5e 0b 01 e8 1b 01 c7 5e 5e 0c 00 60 20 9e c8 f7 7f 00 00 e8 0b 01 c7 5e 5e 00 00 e8 21 9e c8 f7 7f 00 00 e8 fb 00 c7 5e 5e 00 0a e8 f3 00 c7 5e 5e 01 09 e8 eb 00 c7 5e 5e 02 08 e8 e3 00 c7 5e 5e 03 07 e8 db 00 c7 5e 5e 04 06 e8 d3 00 c7 5e 5e 05 05 e8 cb 00 c7 5e 5e 06 04 e8 c3 00 c7 5e 5e 07 03 e8 bb 00 c7 5e 5e 08 02 e8 b3 00 c7 5e 5e 09 01 e8 ab 00 c7 5e 5e 0a 00 98 22 9e c8 f7 7f 00 00 e8 9b 00 c7 5e 5e 00 00 18 24 9e c8 f7 7f 00 00 e8 8b 00 c7 5e 5e 00 03 e8 83 00 c7 5e 5e 01 02 e8 7b 00 c7 5e 5e 02 01 e8 73 00 c7 5e 5e 03 00 50 25 9e c8 f7 7f 00 00 38 11 9d c8 f7 7f 00 00 0f 1f 44 00 00 48 b8 a8 96 db c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
3         | 7ff7c85f55e0h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[16i]()                                                        | bit eval<short>(ILogicExpr<short> expr)                                                                       | 0f 1f 44 00 00 48 b8 a8 96 db c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
4         | 7ff7c85f5610h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[32u]()                                                        | bit eval<uint>(ILogicExpr<uint> expr)                                                                         | 0f 1f 44 00 00 48 b8 a8 96 db c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
5         | 7ff7c85f5640h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[32i]()                                                        | bit eval<int>(ILogicExpr<int> expr)                                                                           | 0f 1f 44 00 00 48 b8 a8 96 db c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
6         | 7ff7c85f5670h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[64u]()                                                        | bit eval<ulong>(ILogicExpr<ulong> expr)                                                                       | 0f 1f 44 00 00 48 b8 a8 96 db c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
7         | 7ff7c85f56a0h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[64i]()                                                        | bit eval<long>(ILogicExpr<long> expr)                                                                         | 0f 1f 44 00 00 48 b8 a8 96 db c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
8         | 7ff7c85f56d0h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[8u]()                                                        | LiteralExpr<byte> eval<byte>(IExpr<byte> expr)                                                                | 0f 1f 44 00 00 48 b8 a8 52 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
9         | 7ff7c85f5700h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[8i]()                                                        | LiteralExpr<sbyte> eval<sbyte>(IExpr<sbyte> expr)                                                             | 0f 1f 44 00 00 48 b8 d8 52 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
10        | 7ff7c85f5730h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[16u]()                                                       | LiteralExpr<ushort> eval<ushort>(IExpr<ushort> expr)                                                          | 0f 1f 44 00 00 48 b8 f8 52 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
11        | 7ff7c85f5760h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[16i]()                                                       | LiteralExpr<short> eval<short>(IExpr<short> expr)                                                             | 0f 1f 44 00 00 48 b8 18 53 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
12        | 7ff7c85f5790h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[32u]()                                                       | LiteralExpr<uint> eval<uint>(IExpr<uint> expr)                                                                | 0f 1f 44 00 00 48 b8 38 53 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
13        | 7ff7c85f57c0h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[32i]()                                                       | LiteralExpr<int> eval<int>(IExpr<int> expr)                                                                   | 0f 1f 44 00 00 48 b8 58 53 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
14        | 7ff7c85f57f0h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[64u]()                                                       | LiteralExpr<ulong> eval<ulong>(IExpr<ulong> expr)                                                             | 0f 1f 44 00 00 48 b8 78 53 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
15        | 7ff7c85f5820h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[64i]()                                                       | LiteralExpr<long> eval<long>(IExpr<long> expr)                                                                | 0f 1f 44 00 00 48 b8 98 53 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
16        | 7ff7c85f5850h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[8u]()                                                           | LiteralExpr<byte> eval<byte>(IComparisonExpr<byte> expr)                                                      | 0f 1f 44 00 00 48 b8 70 28 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
17        | 7ff7c85f5880h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[8i]()                                                           | LiteralExpr<sbyte> eval<sbyte>(IComparisonExpr<sbyte> expr)                                                   | 0f 1f 44 00 00 48 b8 60 29 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
18        | 7ff7c85f58b0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[16u]()                                                          | LiteralExpr<ushort> eval<ushort>(IComparisonExpr<ushort> expr)                                                | 0f 1f 44 00 00 48 b8 20 2a 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
19        | 7ff7c85f58e0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[16i]()                                                          | LiteralExpr<short> eval<short>(IComparisonExpr<short> expr)                                                   | 0f 1f 44 00 00 48 b8 e0 2a 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
20        | 7ff7c85f5910h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[32u]()                                                          | LiteralExpr<uint> eval<uint>(IComparisonExpr<uint> expr)                                                      | 0f 1f 44 00 00 48 b8 a0 2b 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
21        | 7ff7c85f5940h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[32i]()                                                          | LiteralExpr<int> eval<int>(IComparisonExpr<int> expr)                                                         | 0f 1f 44 00 00 48 b8 60 2c 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
22        | 7ff7c85f5970h   | 1107    | hex://logix/logic.engine?eval#eval_cmp_expr_g[64i]()                                                          | LiteralExpr<long> eval<long>(IComparisonExpr<long> expr)                                                      | 0f 1f 44 00 00 48 b8 20 2d 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 a3 fc c6 5e 5e 00 00 48 26 9e c8 f7 7f 00 00 e8 93 fc c6 5e 5e 00 00 a8 26 9e c8 f7 7f 00 00 e8 83 fc c6 5e 5e 00 00 08 27 9e c8 f7 7f 00 00 e8 73 fc c6 5e 5e 00 00 68 27 9e c8 f7 7f 00 00 e8 63 fc c6 5e 5e 00 00 c8 27 9e c8 f7 7f 00 00 e8 53 fc c6 5e 5e 00 00 28 28 9e c8 f7 7f 00 00 e8 43 fc c6 5e 5e 00 00 88 28 9e c8 f7 7f 00 00 e8 33 fc c6 5e 5e 00 00 e8 28 9e c8 f7 7f 00 00 e8 23 fc c6 5e 5e 00 0c e8 1b fc c6 5e 5e 01 0b e8 13 fc c6 5e 5e 02 0a e8 0b fc c6 5e 5e 03 09 e8 03 fc c6 5e 5e 04 08 e8 fb fb c6 5e 5e 05 07 e8 f3 fb c6 5e 5e 06 06 e8 eb fb c6 5e 5e 07 05 e8 e3 fb c6 5e 5e 08 04 e8 db fb c6 5e 5e 09 03 e8 d3 fb c6 5e 5e 0a 02 e8 cb fb c6 5e 5e 0b 01 e8 c3 fb c6 5e 5e 0c 00 78 29 9e c8 f7 7f 00 00 e8 b3 fb c6 5e 5e 00 00 00 2b 9e c8 f7 7f 00 00 e8 a3 fb c6 5e 5e 00 0a e8 9b fb c6 5e 5e 01 09 e8 93 fb c6 5e 5e 02 08 e8 8b fb c6 5e 5e 03 07 e8 83 fb c6 5e 5e 04 06 e8 7b fb c6 5e 5e 05 05 e8 73 fb c6 5e 5e 06 04 e8 6b fb c6 5e 5e 07 03 e8 63 fb c6 5e 5e 08 02 e8 5b fb c6 5e 5e 09 01 e8 53 fb c6 5e 5e 0a 00 b0 2b 9e c8 f7 7f 00 00 e8 43 fb c6 5e 5e 00 00 30 2d 9e c8 f7 7f 00 00 e8 33 fb c6 5e 5e 00 03 e8 2b fb c6 5e 5e 01 02 e8 23 fb c6 5e 5e 02 01 e8 1b fb c6 5e 5e 03 00 68 2e 9e c8 f7 7f 00 00 e8 0b fb c6 5e 5e 00 00 60 2f 9e c8 f7 7f 00 00 e8 fb fa c6 5e 5e 00 00 c0 2f 9e c8 f7 7f 00 00 e8 eb fa c6 5e 5e 00 00 20 30 9e c8 f7 7f 00 00 e8 db fa c6 5e 5e 00 00 80 30 9e c8 f7 7f 00 00 e8 cb fa c6 5e 5e 00 00 e0 30 9e c8 f7 7f 00 00 e8 bb fa c6 5e 5e 00 00 40 31 9e c8 f7 7f 00 00 e8 ab fa c6 5e 5e 00 00 a0 31 9e c8 f7 7f 00 00 e8 9b fa c6 5e 5e 00 00 00 32 9e c8 f7 7f 00 00 e8 8b fa c6 5e 5e 00 03 e8 83 fa c6 5e 5e 01 02 e8 7b fa c6 5e 5e 02 01 e8 73 fa c6 5e 5e 03 00 d8 32 9e c8 f7 7f 00 00 e8 63 fa c6 5e 5e 00 00 48 34 9e c8 f7 7f 00 00 e8 53 fa c6 5e 5e 00 00 a8 34 9e c8 f7 7f 00 00 e8 43 fa c6 5e 5e 00 00 08 35 9e c8 f7 7f 00 00 e8 33 fa c6 5e 5e 00 00 68 35 9e c8 f7 7f 00 00 e8 23 fa c6 5e 5e 00 00 c8 35 9e c8 f7 7f 00 00 e8 13 fa c6 5e 5e 00 00 28 36 9e c8 f7 7f 00 00 e8 03 fa c6 5e 5e 00 00 88 36 9e c8 f7 7f 00 00 e8 f3 f9 c6 5e 5e 00 00 e8 36 9e c8 f7 7f 00 00 e8 e3 f9 c6 5e 5e 00 0a e8 db f9 c6 5e 5e 01 09 e8 d3 f9 c6 5e 5e 02 08 e8 cb f9 c6 5e 5e 03 07 e8 c3 f9 c6 5e 5e 04 06 e8 bb f9 c6 5e 5e 05 05 e8 b3 f9 c6 5e 5e 06 04 e8 ab f9 c6 5e 5e 07 03 e8 a3 f9 c6 5e 5e 08 02 e8 9b f9 c6 5e 5e 09 01 e8 93 f9 c6 5e 5e 0a 00 48 37 9e c8 f7 7f 00 00 e8 83 f9 c6 5e 5e 00 00 e0 38 9e c8 f7 7f 00 00 e8 73 f9 c6 5e 5e 00 00 b0 3a 9e c8 f7 7f 00 00 e8 63 f9 c6 5e 5e 00 00 10 3b 9e c8 f7 7f 00 00 e8 53 f9 c6 5e 5e 00 00 70 3b 9e c8 f7 7f 00 00 e8 43 f9 c6 5e 5e 00 02 e8 3b f9 c6 5e 5e 01 01 e8 33 f9 c6 5e 5e 02 00 c0 3b 9e c8 f7 7f 00 00 e8 23 f9 c6 5e 5e 00 00 b0 3c 9e c8 f7 7f 00 00 e8 13 f9 c6 5e 5e 00 00 10 3d 9e c8 f7 7f 00 00 e8 03 f9 c6 5e 5e 00 02 e8 fb f8 c6 5e 5e 01 01 e8 f3 f8 c6 5e 5e 02 00 60 3d 9e c8 f7 7f 00 00 e8 e3 f8 c6 5e 5e 00 00 50 3e 9e c8 f7 7f 00 00 e8 d3 f8 c6 5e 5e 00 00 b0 3e 9e c8 f7 7f 00 00 e8 c3 f8 c6 5e 5e 00 02 e8 bb f8 c6 5e 5e 01 01 e8 b3 f8 c6 5e 5e 02 00 00 3f 9e c8 f7 7f 00 00 30 24 9d c8 f7 7f 00 00 0f 1f 44 00 00 48 b8 b0 36 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
23        | 7ff7c85f5da0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[8u]()                                                       | LiteralExpr<Vector128<byte>> eval<byte>(IComparisonExpr<Vector128<byte>> expr)                                | 0f 1f 44 00 00 48 b8 b0 36 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
24        | 7ff7c85f5dd0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[8i]()                                                       | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IComparisonExpr<Vector128<sbyte>> expr)                             | 0f 1f 44 00 00 48 b8 a0 37 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
25        | 7ff7c85f5e00h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[16u]()                                                      | LiteralExpr<Vector128<ushort>> eval<ushort>(IComparisonExpr<Vector128<ushort>> expr)                          | 0f 1f 44 00 00 48 b8 a0 3c 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
26        | 7ff7c85f5e30h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[16i]()                                                      | LiteralExpr<Vector128<short>> eval<short>(IComparisonExpr<Vector128<short>> expr)                             | 0f 1f 44 00 00 48 b8 90 3d 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
27        | 7ff7c85f5e60h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[32u]()                                                      | LiteralExpr<Vector128<uint>> eval<uint>(IComparisonExpr<Vector128<uint>> expr)                                | 0f 1f 44 00 00 48 b8 80 3e 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
28        | 7ff7c85f5e90h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[32i]()                                                      | LiteralExpr<Vector128<int>> eval<int>(IComparisonExpr<Vector128<int>> expr)                                   | 0f 1f 44 00 00 48 b8 70 3f 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
29        | 7ff7c85f5ec0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[64i]()                                                      | LiteralExpr<Vector128<long>> eval<long>(IComparisonExpr<Vector128<long>> expr)                                | 0f 1f 44 00 00 48 b8 70 44 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
30        | 7ff7c85f5ef0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[8u]()                                                       | LiteralExpr<Vector256<byte>> eval<byte>(IComparisonExpr<Vector256<byte>> expr)                                | 0f 1f 44 00 00 48 b8 60 45 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
31        | 7ff7c85f5f20h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[8i]()                                                       | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IComparisonExpr<Vector256<sbyte>> expr)                             | 0f 1f 44 00 00 48 b8 80 46 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
32        | 7ff7c85f5f50h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[16u]()                                                      | LiteralExpr<Vector256<ushort>> eval<ushort>(IComparisonExpr<Vector256<ushort>> expr)                          | 0f 1f 44 00 00 48 b8 b0 4b 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
33        | 7ff7c85f5f80h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[16i]()                                                      | LiteralExpr<Vector256<short>> eval<short>(IComparisonExpr<Vector256<short>> expr)                             | 0f 1f 44 00 00 48 b8 d0 4c 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
34        | 7ff7c85f5fb0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[32u]()                                                      | LiteralExpr<Vector256<uint>> eval<uint>(IComparisonExpr<Vector256<uint>> expr)                                | 0f 1f 44 00 00 48 b8 f0 4d 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
35        | 7ff7c85f5fe0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[32i]()                                                      | LiteralExpr<Vector256<int>> eval<int>(IComparisonExpr<Vector256<int>> expr)                                   | 0f 1f 44 00 00 48 b8 10 4f 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
36        | 7ff7c85f6010h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[64i]()                                                      | LiteralExpr<Vector256<long>> eval<long>(IComparisonExpr<Vector256<long>> expr)                                | 0f 1f 44 00 00 48 b8 30 50 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
37        | 7ff7c85f6040h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[8u]()                                                           | bit eval<byte>(IComparisonPred<byte> expr)                                                                    | 0f 1f 44 00 00 48 b8 e0 2d 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
38        | 7ff7c85f6070h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[8i]()                                                           | bit eval<sbyte>(IComparisonPred<sbyte> expr)                                                                  | 0f 1f 44 00 00 48 b8 90 2e 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
39        | 7ff7c85f60a0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[16u]()                                                          | bit eval<ushort>(IComparisonPred<ushort> expr)                                                                | 0f 1f 44 00 00 48 b8 40 2f 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
40        | 7ff7c85f60d0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[16i]()                                                          | bit eval<short>(IComparisonPred<short> expr)                                                                  | 0f 1f 44 00 00 48 b8 f0 33 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
41        | 7ff7c85f6100h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[32u]()                                                          | bit eval<uint>(IComparisonPred<uint> expr)                                                                    | 0f 1f 44 00 00 48 b8 a0 34 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
42        | 7ff7c85f6130h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[32i]()                                                          | bit eval<int>(IComparisonPred<int> expr)                                                                      | 0f 1f 44 00 00 48 b8 50 35 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
43        | 7ff7c85f6160h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[64i]()                                                          | bit eval<long>(IComparisonPred<long> expr)                                                                    | 0f 1f 44 00 00 48 b8 00 36 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
44        | 7ff7c85f6190h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[8u]()                                                         | LiteralExpr<byte> eval<byte>(IArithmeticExpr<byte> expr)                                                      | 0f 1f 44 00 00 48 b8 d8 5c 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
45        | 7ff7c85f61c0h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[8i]()                                                         | LiteralExpr<sbyte> eval<sbyte>(IArithmeticExpr<sbyte> expr)                                                   | 0f 1f 44 00 00 48 b8 28 5d 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
46        | 7ff7c85f61f0h   | 1107    | hex://logix/logic.engine?eval#eval_arith_expr_g[16u]()                                                        | LiteralExpr<ushort> eval<ushort>(IArithmeticExpr<ushort> expr)                                                | 0f 1f 44 00 00 48 b8 68 5d 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 23 f4 c6 5e 5e 00 00 f0 3f 9e c8 f7 7f 00 00 e8 13 f4 c6 5e 5e 00 00 50 40 9e c8 f7 7f 00 00 e8 03 f4 c6 5e 5e 00 02 e8 fb f3 c6 5e 5e 01 01 e8 f3 f3 c6 5e 5e 02 00 a0 40 9e c8 f7 7f 00 00 e8 e3 f3 c6 5e 5e 00 00 90 41 9e c8 f7 7f 00 00 e8 d3 f3 c6 5e 5e 00 00 f0 41 9e c8 f7 7f 00 00 e8 c3 f3 c6 5e 5e 00 02 e8 bb f3 c6 5e 5e 01 01 e8 b3 f3 c6 5e 5e 02 00 40 42 9e c8 f7 7f 00 00 e8 a3 f3 c6 5e 5e 00 00 30 43 9e c8 f7 7f 00 00 e8 93 f3 c6 5e 5e 00 00 90 43 9e c8 f7 7f 00 00 e8 83 f3 c6 5e 5e 00 02 e8 7b f3 c6 5e 5e 01 01 e8 73 f3 c6 5e 5e 02 00 e0 43 9e c8 f7 7f 00 00 e8 63 f3 c6 5e 5e 00 00 d0 44 9e c8 f7 7f 00 00 e8 53 f3 c6 5e 5e 00 00 30 45 9e c8 f7 7f 00 00 e8 43 f3 c6 5e 5e 00 02 e8 3b f3 c6 5e 5e 01 01 e8 33 f3 c6 5e 5e 02 00 80 45 9e c8 f7 7f 00 00 e8 23 f3 c6 5e 5e 00 00 70 46 9e c8 f7 7f 00 00 e8 13 f3 c6 5e 5e 00 00 d0 46 9e c8 f7 7f 00 00 e8 03 f3 c6 5e 5e 00 02 e8 fb f2 c6 5e 5e 01 01 e8 f3 f2 c6 5e 5e 02 00 20 47 9e c8 f7 7f 00 00 e8 e3 f2 c6 5e 5e 00 0c e8 db f2 c6 5e 5e 01 0b e8 d3 f2 c6 5e 5e 02 0a e8 cb f2 c6 5e 5e 03 09 e8 c3 f2 c6 5e 5e 04 08 e8 bb f2 c6 5e 5e 05 07 e8 b3 f2 c6 5e 5e 06 06 e8 ab f2 c6 5e 5e 07 05 e8 a3 f2 c6 5e 5e 08 04 e8 9b f2 c6 5e 5e 09 03 e8 93 f2 c6 5e 5e 0a 02 e8 8b f2 c6 5e 5e 0b 01 e8 83 f2 c6 5e 5e 0c 00 20 48 9e c8 f7 7f 00 00 e8 73 f2 c6 5e 5e 00 00 a8 49 9e c8 f7 7f 00 00 e8 63 f2 c6 5e 5e 00 0a e8 5b f2 c6 5e 5e 01 09 e8 53 f2 c6 5e 5e 02 08 e8 4b f2 c6 5e 5e 03 07 e8 43 f2 c6 5e 5e 04 06 e8 3b f2 c6 5e 5e 05 05 e8 33 f2 c6 5e 5e 06 04 e8 2b f2 c6 5e 5e 07 03 e8 23 f2 c6 5e 5e 08 02 e8 1b f2 c6 5e 5e 09 01 e8 13 f2 c6 5e 5e 0a 00 58 4a 9e c8 f7 7f 00 00 e8 03 f2 c6 5e 5e 00 00 d8 4b 9e c8 f7 7f 00 00 e8 f3 f1 c6 5e 5e 00 00 20 4d 9e c8 f7 7f 00 00 e8 e3 f1 c6 5e 5e 00 0a e8 db f1 c6 5e 5e 01 09 e8 d3 f1 c6 5e 5e 02 08 e8 cb f1 c6 5e 5e 03 07 e8 c3 f1 c6 5e 5e 04 06 e8 bb f1 c6 5e 5e 05 05 e8 b3 f1 c6 5e 5e 06 04 e8 ab f1 c6 5e 5e 07 03 e8 a3 f1 c6 5e 5e 08 02 e8 9b f1 c6 5e 5e 09 01 e8 93 f1 c6 5e 5e 0a 00 80 4d 9e c8 f7 7f 00 00 e8 83 f1 c6 5e 5e 00 00 00 4f 9e c8 f7 7f 00 00 e8 73 f1 c6 5e 5e 00 00 48 50 9e c8 f7 7f 00 00 e8 63 f1 c6 5e 5e 00 0c e8 5b f1 c6 5e 5e 01 0b e8 53 f1 c6 5e 5e 02 0a e8 4b f1 c6 5e 5e 03 09 e8 43 f1 c6 5e 5e 04 08 e8 3b f1 c6 5e 5e 05 07 e8 33 f1 c6 5e 5e 06 06 e8 2b f1 c6 5e 5e 07 05 e8 23 f1 c6 5e 5e 08 04 e8 1b f1 c6 5e 5e 09 03 e8 13 f1 c6 5e 5e 0a 02 e8 0b f1 c6 5e 5e 0b 01 e8 03 f1 c6 5e 5e 0c 00 d8 50 9e c8 f7 7f 00 00 e8 f3 f0 c6 5e 5e 00 00 60 52 9e c8 f7 7f 00 00 e8 e3 f0 c6 5e 5e 00 0a e8 db f0 c6 5e 5e 01 09 e8 d3 f0 c6 5e 5e 02 08 e8 cb f0 c6 5e 5e 03 07 e8 c3 f0 c6 5e 5e 04 06 e8 bb f0 c6 5e 5e 05 05 e8 b3 f0 c6 5e 5e 06 04 e8 ab f0 c6 5e 5e 07 03 e8 a3 f0 c6 5e 5e 08 02 e8 9b f0 c6 5e 5e 09 01 e8 93 f0 c6 5e 5e 0a 00 10 53 9e c8 f7 7f 00 00 e8 83 f0 c6 5e 5e 00 00 90 54 9e c8 f7 7f 00 00 e8 73 f0 c6 5e 5e 00 00 d8 55 9e c8 f7 7f 00 00 e8 63 f0 c6 5e 5e 00 00 b8 57 9e c8 f7 7f 00 00 e8 53 f0 c6 5e 5e 00 00 00 59 9e c8 f7 7f 00 00 e8 43 f0 c6 5e 5e 00 00 98 5c 9e c8 f7 7f 00 00 e8 33 f0 c6 5e 5e 00 00 d0 5e 9e c8 f7 7f 00 00 a0 48 9d c8 f7 7f 00 00 0f 1f 44 00 00 48 b8 28 62 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
47        | 7ff7c85f6620h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[16i]()                                                        | LiteralExpr<short> eval<short>(IArithmeticExpr<short> expr)                                                   | 0f 1f 44 00 00 48 b8 28 62 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
48        | 7ff7c85f6650h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[32u]()                                                        | LiteralExpr<uint> eval<uint>(IArithmeticExpr<uint> expr)                                                      | 0f 1f 44 00 00 48 b8 68 62 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
49        | 7ff7c85f6680h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[32i]()                                                        | LiteralExpr<int> eval<int>(IArithmeticExpr<int> expr)                                                         | 0f 1f 44 00 00 48 b8 a8 62 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
50        | 7ff7c85f66b0h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[64u]()                                                        | LiteralExpr<ulong> eval<ulong>(IArithmeticExpr<ulong> expr)                                                   | 0f 1f 44 00 00 48 b8 e8 62 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
51        | 7ff7c85f66e0h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[64i]()                                                        | LiteralExpr<long> eval<long>(IArithmeticExpr<long> expr)                                                      | 0f 1f 44 00 00 48 b8 28 63 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
52        | 7ff7c85f6710h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[8u]()                                                     | LiteralExpr<Vector128<byte>> eval<byte>(IExpr<Vector128<byte>> expr)                                          | 0f 1f 44 00 00 48 b8 78 32 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
53        | 7ff7c85f6740h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[8i]()                                                     | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IExpr<Vector128<sbyte>> expr)                                       | 0f 1f 44 00 00 48 b8 70 33 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
54        | 7ff7c85f6770h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[16u]()                                                    | LiteralExpr<Vector128<ushort>> eval<ushort>(IExpr<Vector128<ushort>> expr)                                    | 0f 1f 44 00 00 48 b8 00 39 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
55        | 7ff7c85f67a0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[16i]()                                                    | LiteralExpr<Vector128<short>> eval<short>(IExpr<Vector128<short>> expr)                                       | 0f 1f 44 00 00 48 b8 e8 39 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
56        | 7ff7c85f67d0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[32u]()                                                    | LiteralExpr<Vector128<uint>> eval<uint>(IExpr<Vector128<uint>> expr)                                          | 0f 1f 44 00 00 48 b8 d0 3a 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
57        | 7ff7c85f6800h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[32i]()                                                    | LiteralExpr<Vector128<int>> eval<int>(IExpr<Vector128<int>> expr)                                             | 0f 1f 44 00 00 48 b8 b8 3b 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
58        | 7ff7c85f6830h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[64u]()                                                    | LiteralExpr<Vector128<ulong>> eval<ulong>(IExpr<Vector128<ulong>> expr)                                       | 0f 1f 44 00 00 48 b8 c8 64 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
59        | 7ff7c85f6860h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[64i]()                                                    | LiteralExpr<Vector128<long>> eval<long>(IExpr<Vector128<long>> expr)                                          | 0f 1f 44 00 00 48 b8 70 40 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
60        | 7ff7c85f6890h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[8u]()                                                     | LiteralExpr<Vector256<byte>> eval<byte>(IExpr<Vector256<byte>> expr)                                          | 0f 1f 44 00 00 48 b8 a0 42 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
61        | 7ff7c85f68c0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[8i]()                                                     | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IExpr<Vector256<sbyte>> expr)                                       | 0f 1f 44 00 00 48 b8 98 43 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
62        | 7ff7c85f68f0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[16u]()                                                    | LiteralExpr<Vector256<ushort>> eval<ushort>(IExpr<Vector256<ushort>> expr)                                    | 0f 1f 44 00 00 48 b8 c0 47 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
63        | 7ff7c85f6920h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[16i]()                                                    | LiteralExpr<Vector256<short>> eval<short>(IExpr<Vector256<short>> expr)                                       | 0f 1f 44 00 00 48 b8 a8 48 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
64        | 7ff7c85f6950h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[32u]()                                                    | LiteralExpr<Vector256<uint>> eval<uint>(IExpr<Vector256<uint>> expr)                                          | 0f 1f 44 00 00 48 b8 90 49 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
65        | 7ff7c85f6980h   | 1107    | hex://logix/logic.engine?eval#eval_vector_expr256_g[32i]()                                                    | LiteralExpr<Vector256<int>> eval<int>(IExpr<Vector256<int>> expr)                                             | 0f 1f 44 00 00 48 b8 78 4a 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 93 ec c6 5e 5e 00 0a e8 8b ec c6 5e 5e 01 09 e8 83 ec c6 5e 5e 02 08 e8 7b ec c6 5e 5e 03 07 e8 73 ec c6 5e 5e 04 06 e8 6b ec c6 5e 5e 05 05 e8 63 ec c6 5e 5e 06 04 e8 5b ec c6 5e 5e 07 03 e8 53 ec c6 5e 5e 08 02 e8 4b ec c6 5e 5e 09 01 e8 43 ec c6 5e 5e 0a 00 38 56 9e c8 f7 7f 00 00 e8 33 ec c6 5e 5e 00 09 e8 2b ec c6 5e 5e 01 08 e8 23 ec c6 5e 5e 02 07 e8 1b ec c6 5e 5e 03 06 e8 13 ec c6 5e 5e 04 05 e8 0b ec c6 5e 5e 05 04 e8 03 ec c6 5e 5e 06 03 e8 fb eb c6 5e 5e 07 02 e8 f3 eb c6 5e 5e 08 01 e8 eb eb c6 5e 5e 09 00 90 59 9e c8 f7 7f 00 00 e8 db eb c6 5e 5e 00 03 e8 d3 eb c6 5e 5e 01 02 e8 cb eb c6 5e 5e 02 01 e8 c3 eb c6 5e 5e 03 00 28 5b 9e c8 f7 7f 00 00 e8 b3 eb c6 5e 5e 00 09 e8 ab eb c6 5e 5e 01 08 e8 a3 eb c6 5e 5e 02 07 e8 9b eb c6 5e 5e 03 06 e8 93 eb c6 5e 5e 04 05 e8 8b eb c6 5e 5e 05 04 e8 83 eb c6 5e 5e 06 03 e8 7b eb c6 5e 5e 07 02 e8 73 eb c6 5e 5e 08 01 e8 6b eb c6 5e 5e 09 00 28 5d 9e c8 f7 7f 00 00 e8 5b eb c6 5e 5e 00 0a e8 53 eb c6 5e 5e 01 09 e8 4b eb c6 5e 5e 02 08 e8 43 eb c6 5e 5e 03 07 e8 3b eb c6 5e 5e 04 06 e8 33 eb c6 5e 5e 05 05 e8 2b eb c6 5e 5e 06 04 e8 23 eb c6 5e 5e 07 03 e8 1b eb c6 5e 5e 08 02 e8 13 eb c6 5e 5e 09 01 e8 0b eb c6 5e 5e 0a 00 30 5f 9e c8 f7 7f 00 00 e8 fb ea c6 5e 5e 00 00 c8 60 9e c8 f7 7f 00 00 e8 eb ea c6 5e 5e 00 00 98 61 9e c8 f7 7f 00 00 e8 db ea c6 5e 5e 00 00 f8 61 9e c8 f7 7f 00 00 e8 cb ea c6 5e 5e 00 00 58 62 9e c8 f7 7f 00 00 e8 bb ea c6 5e 5e 00 09 e8 b3 ea c6 5e 5e 01 08 e8 ab ea c6 5e 5e 02 07 e8 a3 ea c6 5e 5e 03 06 e8 9b ea c6 5e 5e 04 05 e8 93 ea c6 5e 5e 05 04 e8 8b ea c6 5e 5e 06 03 e8 83 ea c6 5e 5e 07 02 e8 7b ea c6 5e 5e 08 01 e8 73 ea c6 5e 5e 09 00 e8 62 9e c8 f7 7f 00 00 e8 63 ea c6 5e 5e 00 00 90 64 9e c8 f7 7f 00 00 e8 53 ea c6 5e 5e 00 09 e8 4b ea c6 5e 5e 01 08 e8 43 ea c6 5e 5e 02 07 e8 3b ea c6 5e 5e 03 06 e8 33 ea c6 5e 5e 04 05 e8 2b ea c6 5e 5e 05 04 e8 23 ea c6 5e 5e 06 03 e8 1b ea c6 5e 5e 07 02 e8 13 ea c6 5e 5e 08 01 e8 0b ea c6 5e 5e 09 00 20 65 9e c8 f7 7f 00 00 e8 fb e9 c6 5e 5e 00 00 c8 66 9e c8 f7 7f 00 00 e8 eb e9 c6 5e 5e 00 09 e8 e3 e9 c6 5e 5e 01 08 e8 db e9 c6 5e 5e 02 07 e8 d3 e9 c6 5e 5e 03 06 e8 cb e9 c6 5e 5e 04 05 e8 c3 e9 c6 5e 5e 05 04 e8 bb e9 c6 5e 5e 06 03 e8 b3 e9 c6 5e 5e 07 02 e8 ab e9 c6 5e 5e 08 01 e8 a3 e9 c6 5e 5e 09 00 58 67 9e c8 f7 7f 00 00 e8 93 e9 c6 5e 5e 00 00 00 69 9e c8 f7 7f 00 00 e8 83 e9 c6 5e 5e 00 09 e8 7b e9 c6 5e 5e 01 08 e8 73 e9 c6 5e 5e 02 07 e8 6b e9 c6 5e 5e 03 06 e8 63 e9 c6 5e 5e 04 05 e8 5b e9 c6 5e 5e 05 04 e8 53 e9 c6 5e 5e 06 03 e8 4b e9 c6 5e 5e 07 02 e8 43 e9 c6 5e 5e 08 01 e8 3b e9 c6 5e 5e 09 00 90 69 9e c8 f7 7f 00 00 e8 2b e9 c6 5e 5e 00 00 38 6b 9e c8 f7 7f 00 00 e8 1b e9 c6 5e 5e 00 09 e8 13 e9 c6 5e 5e 01 08 e8 0b e9 c6 5e 5e 02 07 e8 03 e9 c6 5e 5e 03 06 e8 fb e8 c6 5e 5e 04 05 e8 f3 e8 c6 5e 5e 05 04 e8 eb e8 c6 5e 5e 06 03 e8 e3 e8 c6 5e 5e 07 02 e8 db e8 c6 5e 5e 08 01 e8 d3 e8 c6 5e 5e 09 00 c8 6b 9e c8 f7 7f 00 00 e8 c3 e8 c6 5e 5e 00 00 70 6d 9e c8 f7 7f 00 00 e8 b3 e8 c6 5e 5e 00 00 a8 6f 9e c8 f7 7f 00 00 e8 a3 e8 c6 5e 5e 00 00 08 70 9e c8 f7 7f 00 00 50 5b 9d c8 f7 7f 00 00 0f 1f 44 00 00 48 b8 e8 65 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
66        | 7ff7c85f6db0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[64u]()                                                    | LiteralExpr<Vector256<ulong>> eval<ulong>(IExpr<Vector256<ulong>> expr)                                       | 0f 1f 44 00 00 48 b8 e8 65 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
67        | 7ff7c85f6de0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[64i]()                                                    | LiteralExpr<Vector256<long>> eval<long>(IExpr<Vector256<long>> expr)                                          | 0f 1f 44 00 00 48 b8 60 4b 5f c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
68        | 7ff7c85f6e10h   | 231     | hex://logix/logic.engine?satisfied#satisfied_g[8u](8u,8u)                                                     | bit satisfied<byte>(ComparisonExpr<byte> expr, byte a, byte b)                                                | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 10 ea 70 c7 f7 7f 00 00 ba 02 00 00 00 e8 ad ff c6 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 71 fc ff ff 48 8b ce e8 21 ba ff ff 0f b6 40 08 0f b6 c0 3c ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 f8 60 9d c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 70 c7 f7 7f 00 00 ba 02 00 00 00 e8 3d ff c6 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 f9 fc ff ff 48 8b ce e8 a1 ba ff ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
69        | 7ff7c85f6e80h   | 119     | hex://logix/logic.engine?satisfied#satisfied_g[8i](8i,8i)                                                     | bit satisfied<sbyte>(ComparisonExpr<sbyte> expr, sbyte a, sbyte b)                                            | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 70 c7 f7 7f 00 00 ba 02 00 00 00 e8 3d ff c6 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 f9 fc ff ff 48 8b ce e8 a1 ba ff ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
70        | 7ff7c85f6f00h   | 119     | hex://logix/logic.engine?satisfied#satisfied_g[16u](16u,16u)                                                  | bit satisfied<ushort>(ComparisonExpr<ushort> expr, ushort a, ushort b)                                        | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 60 33 18 c8 f7 7f 00 00 ba 02 00 00 00 e8 bd fe c6 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 e0 fc ff ff 48 8b ce e8 e0 ba ff ff 0f b7 40 08 0f b7 c0 0f b7 c0 3d ff ff 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
71        | 7ff7c85f6f80h   | 119     | hex://logix/logic.engine?satisfied#satisfied_g[16i](16i,16i)                                                  | bit satisfied<short>(ComparisonExpr<short> expr, short a, short b)                                            | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 20 6a 2f c8 f7 7f 00 00 ba 02 00 00 00 e8 3d fe c6 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 c8 fc ff ff 48 8b ce e8 20 bb ff ff 48 0f bf 40 08 48 0f bf c0 48 0f bf c0 3d ff 7f 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
72        | 7ff7c85f7000h   | 1248    | hex://logix/logic.engine?satisfied#satisfied_g[32u](32u,32u)                                                  | bit satisfied<uint>(ComparisonExpr<uint> expr, uint a, uint b)                                                | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 f8 22 18 c8 f7 7f 00 00 ba 02 00 00 00 e8 bd fd c6 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 b2 fc ff ff 48 8b ce e8 62 bb ff ff 8b 40 08 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 58 65 9d c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 48 5f 7d c7 f7 7f 00 00 ba 02 00 00 00 e8 4d fd c6 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 aa fc ff ff 48 8b ce e8 b2 bb ff ff 8b 40 08 3d ff ff ff 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 5b e5 c6 5e 5e 00 09 e8 53 e5 c6 5e 5e 01 08 e8 4b e5 c6 5e 5e 02 07 e8 43 e5 c6 5e 5e 03 06 e8 3b e5 c6 5e 5e 04 05 e8 33 e5 c6 5e 5e 05 04 e8 2b e5 c6 5e 5e 06 03 e8 23 e5 c6 5e 5e 07 02 e8 1b e5 c6 5e 5e 08 01 e8 13 e5 c6 5e 5e 09 00 00 6e 9e c8 f7 7f 00 00 e8 03 e5 c6 5e 5e 00 00 68 70 9e c8 f7 7f 00 00 e8 f3 e4 c6 5e 5e 00 09 e8 eb e4 c6 5e 5e 01 08 e8 e3 e4 c6 5e 5e 02 07 e8 db e4 c6 5e 5e 03 06 e8 d3 e4 c6 5e 5e 04 05 e8 cb e4 c6 5e 5e 05 04 e8 c3 e4 c6 5e 5e 06 03 e8 bb e4 c6 5e 5e 07 02 e8 b3 e4 c6 5e 5e 08 01 e8 ab e4 c6 5e 5e 09 00 f8 70 9e c8 f7 7f 00 00 e8 9b e4 c6 5e 5e 00 0c e8 93 e4 c6 5e 5e 01 0b e8 8b e4 c6 5e 5e 02 0a e8 83 e4 c6 5e 5e 03 09 e8 7b e4 c6 5e 5e 04 08 e8 73 e4 c6 5e 5e 05 07 e8 6b e4 c6 5e 5e 06 06 e8 63 e4 c6 5e 5e 07 05 e8 5b e4 c6 5e 5e 08 04 e8 53 e4 c6 5e 5e 09 03 e8 4b e4 c6 5e 5e 0a 02 e8 43 e4 c6 5e 5e 0b 01 e8 3b e4 c6 5e 5e 0c 00 b0 72 9e c8 f7 7f 00 00 e8 2b e4 c6 5e 5e 00 00 38 74 9e c8 f7 7f 00 00 e8 1b e4 c6 5e 5e 00 09 e8 13 e4 c6 5e 5e 01 08 e8 0b e4 c6 5e 5e 02 07 e8 03 e4 c6 5e 5e 03 06 e8 fb e3 c6 5e 5e 04 05 e8 f3 e3 c6 5e 5e 05 04 e8 eb e3 c6 5e 5e 06 03 e8 e3 e3 c6 5e 5e 07 02 e8 db e3 c6 5e 5e 08 01 e8 d3 e3 c6 5e 5e 09 00 18 75 9e c8 f7 7f 00 00 e8 c3 e3 c6 5e 5e 00 03 e8 bb e3 c6 5e 5e 01 02 e8 b3 e3 c6 5e 5e 02 01 e8 ab e3 c6 5e 5e 03 00 b0 76 9e c8 f7 7f 00 00 e8 9b e3 c6 5e 5e 00 00 20 78 9e c8 f7 7f 00 00 e8 8b e3 c6 5e 5e 00 09 e8 83 e3 c6 5e 5e 01 08 e8 7b e3 c6 5e 5e 02 07 e8 73 e3 c6 5e 5e 03 06 e8 6b e3 c6 5e 5e 04 05 e8 63 e3 c6 5e 5e 05 04 e8 5b e3 c6 5e 5e 06 03 e8 53 e3 c6 5e 5e 07 02 e8 4b e3 c6 5e 5e 08 01 e8 43 e3 c6 5e 5e 09 00 b0 78 9e c8 f7 7f 00 00 e8 33 e3 c6 5e 5e 00 03 e8 2b e3 c6 5e 5e 03 02 e8 23 e3 c6 5e 5e 06 01 e8 1b e3 c6 5e 5e 09 00 90 7b 9e c8 f7 7f 00 00 e8 0b e3 c6 5e 5e 00 00 60 7c 9e c8 f7 7f 00 00 e8 fb e2 c6 5e 5e 00 0a e8 f3 e2 c6 5e 5e 01 09 e8 eb e2 c6 5e 5e 02 08 e8 e3 e2 c6 5e 5e 03 07 e8 db e2 c6 5e 5e 04 06 e8 d3 e2 c6 5e 5e 05 05 e8 cb e2 c6 5e 5e 06 04 e8 c3 e2 c6 5e 5e 07 03 e8 bb e2 c6 5e 5e 08 02 e8 b3 e2 c6 5e 5e 09 01 e8 ab e2 c6 5e 5e 0a 00 c0 7c 9e c8 f7 7f 00 00 e8 9b e2 c6 5e 5e 00 00 40 7e 9e c8 f7 7f 00 00 e8 8b e2 c6 5e 5e 00 00 10 7f 9e c8 f7 7f 00 00 e8 7b e2 c6 5e 5e 00 00 70 7f 9e c8 f7 7f 00 00 e8 6b e2 c6 5e 5e 00 00 d0 7f 9e c8 f7 7f 00 00 e8 5b e2 c6 5e 5e 00 09 e8 53 e2 c6 5e 5e 01 08 e8 4b e2 c6 5e 5e 02 07 e8 43 e2 c6 5e 5e 03 06 e8 3b e2 c6 5e 5e 04 05 e8 33 e2 c6 5e 5e 05 04 e8 2b e2 c6 5e 5e 06 03 e8 23 e2 c6 5e 5e 07 02 e8 1b e2 c6 5e 5e 08 01 e8 13 e2 c6 5e 5e 09 00 60 80 9e c8 f7 7f 00 00 e8 03 e2 c6 5e 5e 00 03 e8 fb e1 c6 5e 5e 03 02 e8 f3 e1 c6 5e 5e 06 01 e8 eb e1 c6 5e 5e 09 00 40 83 9e c8 f7 7f 00 00 e8 db e1 c6 5e 5e 00 00 10 84 9e c8 f7 7f 00 00 e8 cb e1 c6 5e 5e 00 09 e8 c3 e1 c6 5e 5e 01 08 e8 bb e1 c6 5e 5e 02 07 e8 b3 e1 c6 5e 5e 03 06 e8 ab e1 c6 5e 5e 04 05 e8 a3 e1 c6 5e 5e 05 04 e8 9b e1 c6 5e 5e 06 03 e8 93 e1 c6 5e 5e 07 02 e8 8b e1 c6 5e 5e 08 01 e8 83 e1 c6 5e 5e 09 00 a0 84 9e c8 f7 7f 00 00 e8 73 e1 c6 5e 5e 00 00 50 88 9e c8 f7 7f 00 00 00 00 00 00 00 00 00 00
73        | 7ff7c85f7070h   | 1136    | hex://logix/logic.engine?satisfied#satisfied_g[32i](32i,32i)                                                  | bit satisfied<int>(ComparisonExpr<int> expr, int a, int b)                                                    | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 48 5f 7d c7 f7 7f 00 00 ba 02 00 00 00 e8 4d fd c6 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 aa fc ff ff 48 8b ce e8 b2 bb ff ff 8b 40 08 3d ff ff ff 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 5b e5 c6 5e 5e 00 09 e8 53 e5 c6 5e 5e 01 08 e8 4b e5 c6 5e 5e 02 07 e8 43 e5 c6 5e 5e 03 06 e8 3b e5 c6 5e 5e 04 05 e8 33 e5 c6 5e 5e 05 04 e8 2b e5 c6 5e 5e 06 03 e8 23 e5 c6 5e 5e 07 02 e8 1b e5 c6 5e 5e 08 01 e8 13 e5 c6 5e 5e 09 00 00 6e 9e c8 f7 7f 00 00 e8 03 e5 c6 5e 5e 00 00 68 70 9e c8 f7 7f 00 00 e8 f3 e4 c6 5e 5e 00 09 e8 eb e4 c6 5e 5e 01 08 e8 e3 e4 c6 5e 5e 02 07 e8 db e4 c6 5e 5e 03 06 e8 d3 e4 c6 5e 5e 04 05 e8 cb e4 c6 5e 5e 05 04 e8 c3 e4 c6 5e 5e 06 03 e8 bb e4 c6 5e 5e 07 02 e8 b3 e4 c6 5e 5e 08 01 e8 ab e4 c6 5e 5e 09 00 f8 70 9e c8 f7 7f 00 00 e8 9b e4 c6 5e 5e 00 0c e8 93 e4 c6 5e 5e 01 0b e8 8b e4 c6 5e 5e 02 0a e8 83 e4 c6 5e 5e 03 09 e8 7b e4 c6 5e 5e 04 08 e8 73 e4 c6 5e 5e 05 07 e8 6b e4 c6 5e 5e 06 06 e8 63 e4 c6 5e 5e 07 05 e8 5b e4 c6 5e 5e 08 04 e8 53 e4 c6 5e 5e 09 03 e8 4b e4 c6 5e 5e 0a 02 e8 43 e4 c6 5e 5e 0b 01 e8 3b e4 c6 5e 5e 0c 00 b0 72 9e c8 f7 7f 00 00 e8 2b e4 c6 5e 5e 00 00 38 74 9e c8 f7 7f 00 00 e8 1b e4 c6 5e 5e 00 09 e8 13 e4 c6 5e 5e 01 08 e8 0b e4 c6 5e 5e 02 07 e8 03 e4 c6 5e 5e 03 06 e8 fb e3 c6 5e 5e 04 05 e8 f3 e3 c6 5e 5e 05 04 e8 eb e3 c6 5e 5e 06 03 e8 e3 e3 c6 5e 5e 07 02 e8 db e3 c6 5e 5e 08 01 e8 d3 e3 c6 5e 5e 09 00 18 75 9e c8 f7 7f 00 00 e8 c3 e3 c6 5e 5e 00 03 e8 bb e3 c6 5e 5e 01 02 e8 b3 e3 c6 5e 5e 02 01 e8 ab e3 c6 5e 5e 03 00 b0 76 9e c8 f7 7f 00 00 e8 9b e3 c6 5e 5e 00 00 20 78 9e c8 f7 7f 00 00 e8 8b e3 c6 5e 5e 00 09 e8 83 e3 c6 5e 5e 01 08 e8 7b e3 c6 5e 5e 02 07 e8 73 e3 c6 5e 5e 03 06 e8 6b e3 c6 5e 5e 04 05 e8 63 e3 c6 5e 5e 05 04 e8 5b e3 c6 5e 5e 06 03 e8 53 e3 c6 5e 5e 07 02 e8 4b e3 c6 5e 5e 08 01 e8 43 e3 c6 5e 5e 09 00 b0 78 9e c8 f7 7f 00 00 e8 33 e3 c6 5e 5e 00 03 e8 2b e3 c6 5e 5e 03 02 e8 23 e3 c6 5e 5e 06 01 e8 1b e3 c6 5e 5e 09 00 90 7b 9e c8 f7 7f 00 00 e8 0b e3 c6 5e 5e 00 00 60 7c 9e c8 f7 7f 00 00 e8 fb e2 c6 5e 5e 00 0a e8 f3 e2 c6 5e 5e 01 09 e8 eb e2 c6 5e 5e 02 08 e8 e3 e2 c6 5e 5e 03 07 e8 db e2 c6 5e 5e 04 06 e8 d3 e2 c6 5e 5e 05 05 e8 cb e2 c6 5e 5e 06 04 e8 c3 e2 c6 5e 5e 07 03 e8 bb e2 c6 5e 5e 08 02 e8 b3 e2 c6 5e 5e 09 01 e8 ab e2 c6 5e 5e 0a 00 c0 7c 9e c8 f7 7f 00 00 e8 9b e2 c6 5e 5e 00 00 40 7e 9e c8 f7 7f 00 00 e8 8b e2 c6 5e 5e 00 00 10 7f 9e c8 f7 7f 00 00 e8 7b e2 c6 5e 5e 00 00 70 7f 9e c8 f7 7f 00 00 e8 6b e2 c6 5e 5e 00 00 d0 7f 9e c8 f7 7f 00 00 e8 5b e2 c6 5e 5e 00 09 e8 53 e2 c6 5e 5e 01 08 e8 4b e2 c6 5e 5e 02 07 e8 43 e2 c6 5e 5e 03 06 e8 3b e2 c6 5e 5e 04 05 e8 33 e2 c6 5e 5e 05 04 e8 2b e2 c6 5e 5e 06 03 e8 23 e2 c6 5e 5e 07 02 e8 1b e2 c6 5e 5e 08 01 e8 13 e2 c6 5e 5e 09 00 60 80 9e c8 f7 7f 00 00 e8 03 e2 c6 5e 5e 00 03 e8 fb e1 c6 5e 5e 03 02 e8 f3 e1 c6 5e 5e 06 01 e8 eb e1 c6 5e 5e 09 00 40 83 9e c8 f7 7f 00 00 e8 db e1 c6 5e 5e 00 00 10 84 9e c8 f7 7f 00 00 e8 cb e1 c6 5e 5e 00 09 e8 c3 e1 c6 5e 5e 01 08 e8 bb e1 c6 5e 5e 02 07 e8 b3 e1 c6 5e 5e 03 06 e8 ab e1 c6 5e 5e 04 05 e8 a3 e1 c6 5e 5e 05 04 e8 9b e1 c6 5e 5e 06 03 e8 93 e1 c6 5e 5e 07 02 e8 8b e1 c6 5e 5e 08 01 e8 83 e1 c6 5e 5e 09 00 a0 84 9e c8 f7 7f 00 00 e8 73 e1 c6 5e 5e 00 00 50 88 9e c8 f7 7f 00 00 00 00 00 00 00 00 00 00
74        | 7ff7c85f74f0h   | 231     | hex://logix/logic.engine?satisfied#satisfied_g[64u](64u,64u)                                                  | bit satisfied<ulong>(ComparisonExpr<ulong> expr, ulong a, ulong b)                                            | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 e8 95 b9 c7 f7 7f 00 00 ba 02 00 00 00 e8 cc f8 c6 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 e7 fb ff ff 48 8b ce e8 67 f8 ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 b8 67 9d c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 a0 92 2f c8 f7 7f 00 00 ba 02 00 00 00 e8 5c f8 c6 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 df fb ff ff 48 8b ce e8 7f b7 ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
75        | 7ff7c85f7560h   | 119     | hex://logix/logic.engine?satisfied#satisfied_g[64i](64i,64i)                                                  | bit satisfied<long>(ComparisonExpr<long> expr, long a, long b)                                                | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 a0 92 2f c8 f7 7f 00 00 ba 02 00 00 00 e8 5c f8 c6 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 df fb ff ff 48 8b ce e8 7f b7 ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
76        | 7ff7c85f75e0h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[8u](v128x8u,v128x8u)                                           | bit satisfied<byte>(ComparisonExpr<Vector128<byte>> expr, Vector128<byte> a, Vector128<byte> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 a8 7a 9e c8 f7 7f 00 00 ba 02 00 00 00 e8 d9 f7 c6 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 ba fc ff ff 48 8b cb e8 82 c0 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
77        | 7ff7c85f7680h   | 1176    | hex://logix/logic.engine?satisfied#satisfied_g[8i](v128x8i,v128x8i)                                           | bit satisfied<sbyte>(ComparisonExpr<Vector128<sbyte>> expr, Vector128<sbyte> a, Vector128<sbyte> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 58 82 9e c8 f7 7f 00 00 ba 02 00 00 00 e8 39 f7 c6 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 4a fd ff ff 48 8b cb e8 d2 c0 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 23 df c6 5e 5e 00 03 e8 1b df c6 5e 5e 03 02 e8 13 df c6 5e 5e 06 01 e8 0b df c6 5e 5e 09 00 80 87 9e c8 f7 7f 00 00 e8 fb de c6 5e 5e 00 09 e8 f3 de c6 5e 5e 01 08 e8 eb de c6 5e 5e 02 07 e8 e3 de c6 5e 5e 03 06 e8 db de c6 5e 5e 04 05 e8 d3 de c6 5e 5e 05 04 e8 cb de c6 5e 5e 06 03 e8 c3 de c6 5e 5e 07 02 e8 bb de c6 5e 5e 08 01 e8 b3 de c6 5e 5e 09 00 e0 88 9e c8 f7 7f 00 00 e8 a3 de c6 5e 5e 00 03 e8 9b de c6 5e 5e 03 02 e8 93 de c6 5e 5e 06 01 e8 8b de c6 5e 5e 09 00 c0 8b 9e c8 f7 7f 00 00 e8 7b de c6 5e 5e 00 00 90 8c 9e c8 f7 7f 00 00 e8 6b de c6 5e 5e 00 09 e8 63 de c6 5e 5e 01 08 e8 5b de c6 5e 5e 02 07 e8 53 de c6 5e 5e 03 06 e8 4b de c6 5e 5e 04 05 e8 43 de c6 5e 5e 05 04 e8 3b de c6 5e 5e 06 03 e8 33 de c6 5e 5e 07 02 e8 2b de c6 5e 5e 08 01 e8 23 de c6 5e 5e 09 00 20 8d 9e c8 f7 7f 00 00 e8 13 de c6 5e 5e 00 03 e8 0b de c6 5e 5e 03 02 e8 03 de c6 5e 5e 06 01 e8 fb dd c6 5e 5e 09 00 00 90 9e c8 f7 7f 00 00 e8 eb dd c6 5e 5e 00 00 d0 90 9e c8 f7 7f 00 00 e8 db dd c6 5e 5e 00 09 e8 d3 dd c6 5e 5e 01 08 e8 cb dd c6 5e 5e 02 07 e8 c3 dd c6 5e 5e 03 06 e8 bb dd c6 5e 5e 04 05 e8 b3 dd c6 5e 5e 05 04 e8 ab dd c6 5e 5e 06 03 e8 a3 dd c6 5e 5e 07 02 e8 9b dd c6 5e 5e 08 01 e8 93 dd c6 5e 5e 09 00 60 91 9e c8 f7 7f 00 00 e8 83 dd c6 5e 5e 00 03 e8 7b dd c6 5e 5e 03 02 e8 73 dd c6 5e 5e 06 01 e8 6b dd c6 5e 5e 09 00 40 94 9e c8 f7 7f 00 00 e8 5b dd c6 5e 5e 00 00 10 95 9e c8 f7 7f 00 00 e8 4b dd c6 5e 5e 00 09 e8 43 dd c6 5e 5e 01 08 e8 3b dd c6 5e 5e 02 07 e8 33 dd c6 5e 5e 03 06 e8 2b dd c6 5e 5e 04 05 e8 23 dd c6 5e 5e 05 04 e8 1b dd c6 5e 5e 06 03 e8 13 dd c6 5e 5e 07 02 e8 0b dd c6 5e 5e 08 01 e8 03 dd c6 5e 5e 09 00 a0 95 9e c8 f7 7f 00 00 e8 f3 dc c6 5e 5e 00 03 e8 eb dc c6 5e 5e 01 02 e8 e3 dc c6 5e 5e 02 01 e8 db dc c6 5e 5e 03 00 38 97 9e c8 f7 7f 00 00 e8 cb dc c6 5e 5e 00 03 e8 c3 dc c6 5e 5e 03 02 e8 bb dc c6 5e 5e 06 01 e8 b3 dc c6 5e 5e 09 00 68 99 9e c8 f7 7f 00 00 e8 a3 dc c6 5e 5e 00 00 38 9a 9e c8 f7 7f 00 00 e8 93 dc c6 5e 5e 00 00 98 9a 9e c8 f7 7f 00 00 e8 83 dc c6 5e 5e 00 00 f8 9a 9e c8 f7 7f 00 00 e8 73 dc c6 5e 5e 00 09 e8 6b dc c6 5e 5e 01 08 e8 63 dc c6 5e 5e 02 07 e8 5b dc c6 5e 5e 03 06 e8 53 dc c6 5e 5e 04 05 e8 4b dc c6 5e 5e 05 04 e8 43 dc c6 5e 5e 06 03 e8 3b dc c6 5e 5e 07 02 e8 33 dc c6 5e 5e 08 01 e8 2b dc c6 5e 5e 09 00 88 9b 9e c8 f7 7f 00 00 e8 1b dc c6 5e 5e 00 03 e8 13 dc c6 5e 5e 03 02 e8 0b dc c6 5e 5e 06 01 e8 03 dc c6 5e 5e 09 00 68 9e 9e c8 f7 7f 00 00 e8 f3 db c6 5e 5e 00 0c e8 eb db c6 5e 5e 01 0b e8 e3 db c6 5e 5e 02 0a e8 db db c6 5e 5e 03 09 e8 d3 db c6 5e 5e 04 08 e8 cb db c6 5e 5e 05 07 e8 c3 db c6 5e 5e 06 06 e8 bb db c6 5e 5e 07 05 e8 b3 db c6 5e 5e 08 04 e8 ab db c6 5e 5e 09 03 e8 a3 db c6 5e 5e 0a 02 e8 9b db c6 5e 5e 0b 01 e8 93 db c6 5e 5e 0c 00 68 9f 9e c8 f7 7f 00 00 e8 83 db c6 5e 5e 00 00 f0 a0 9e c8 f7 7f 00 00 e8 73 db c6 5e 5e 00 03 e8 6b db c6 5e 5e 01 02 e8 63 db c6 5e 5e 02 01 e8 5b db c6 5e 5e 03 00 68 a3 9e c8 f7 7f 00 00 e8 4b db c6 5e 5e 00 00 d8 a4 9e c8 f7 7f 00 00 e8 3b db c6 5e 5e 00 00 18 a9 9e c8 f7 7f 00 00 00 00 00 00 00 00 00 00
78        | 7ff7c85f7b20h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[16u](v128x16u,v128x16u)                                        | bit satisfied<ushort>(ComparisonExpr<Vector128<ushort>> expr, Vector128<ushort> a, Vector128<ushort> b)       | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 98 86 9e c8 f7 7f 00 00 ba 02 00 00 00 e8 99 f2 c6 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 3a f9 ff ff 48 8b cb e8 32 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
79        | 7ff7c85f7bc0h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[16i](v128x16i,v128x16i)                                        | bit satisfied<short>(ComparisonExpr<Vector128<short>> expr, Vector128<short> a, Vector128<short> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 d8 8a 9e c8 f7 7f 00 00 ba 02 00 00 00 e8 f9 f1 c6 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 6a fb ff ff 48 8b cb e8 82 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
80        | 7ff7c85f7c60h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[32u](v128x32u,v128x32u)                                        | bit satisfied<uint>(ComparisonExpr<Vector128<uint>> expr, Vector128<uint> a, Vector128<uint> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 18 8f 9e c8 f7 7f 00 00 ba 02 00 00 00 e8 59 f1 c6 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 5a fb ff ff 48 8b cb e8 d2 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
81        | 7ff7c85f7d00h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[32i](v128x32i,v128x32i)                                        | bit satisfied<int>(ComparisonExpr<Vector128<int>> expr, Vector128<int> a, Vector128<int> b)                   | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 58 93 9e c8 f7 7f 00 00 ba 02 00 00 00 e8 b9 f0 c6 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 4a fb ff ff 48 8b cb e8 22 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
82        | 7ff7c85f7da0h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[64u](v128x64u,v128x64u)                                        | bit satisfied<ulong>(ComparisonExpr<Vector128<ulong>> expr, Vector128<ulong> a, Vector128<ulong> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 80 98 9e c8 f7 7f 00 00 ba 02 00 00 00 e8 19 f0 c6 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 3a fb ff ff 48 8b cb e8 ba fb ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
83        | 7ff7c85f7e40h   | 1335    | hex://logix/logic.engine?satisfied#satisfied_g[64i](v128x64i,v128x64i)                                        | bit satisfied<long>(ComparisonExpr<Vector128<long>> expr, Vector128<long> a, Vector128<long> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 80 9d 9e c8 f7 7f 00 00 ba 02 00 00 00 e8 79 ef c6 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 72 fb ff ff 48 8b cb e8 e2 c5 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 63 d7 c6 5e 5e 00 09 e8 5b d7 c6 5e 5e 01 08 e8 53 d7 c6 5e 5e 02 07 e8 4b d7 c6 5e 5e 03 06 e8 43 d7 c6 5e 5e 04 05 e8 3b d7 c6 5e 5e 05 04 e8 33 d7 c6 5e 5e 06 03 e8 2b d7 c6 5e 5e 07 02 e8 23 d7 c6 5e 5e 08 01 e8 1b d7 c6 5e 5e 09 00 d0 a1 9e c8 f7 7f 00 00 e8 0b d7 c6 5e 5e 00 09 e8 03 d7 c6 5e 5e 01 08 e8 fb d6 c6 5e 5e 02 07 e8 f3 d6 c6 5e 5e 03 06 e8 eb d6 c6 5e 5e 04 05 e8 e3 d6 c6 5e 5e 05 04 e8 db d6 c6 5e 5e 06 03 e8 d3 d6 c6 5e 5e 07 02 e8 cb d6 c6 5e 5e 08 01 e8 c3 d6 c6 5e 5e 09 00 68 a5 9e c8 f7 7f 00 00 e8 b3 d6 c6 5e 5e 00 03 e8 ab d6 c6 5e 5e 03 02 e8 a3 d6 c6 5e 5e 06 01 e8 9b d6 c6 5e 5e 09 00 48 a8 9e c8 f7 7f 00 00 e8 8b d6 c6 5e 5e 00 0a e8 83 d6 c6 5e 5e 01 09 e8 7b d6 c6 5e 5e 02 08 e8 73 d6 c6 5e 5e 03 07 e8 6b d6 c6 5e 5e 04 06 e8 63 d6 c6 5e 5e 05 05 e8 5b d6 c6 5e 5e 06 04 e8 53 d6 c6 5e 5e 07 03 e8 4b d6 c6 5e 5e 08 02 e8 43 d6 c6 5e 5e 09 01 e8 3b d6 c6 5e 5e 0a 00 78 a9 9e c8 f7 7f 00 00 e8 2b d6 c6 5e 5e 00 00 f8 aa 9e c8 f7 7f 00 00 e8 1b d6 c6 5e 5e 00 00 c8 ab 9e c8 f7 7f 00 00 e8 0b d6 c6 5e 5e 00 00 28 ac 9e c8 f7 7f 00 00 e8 fb d5 c6 5e 5e 00 00 88 ac 9e c8 f7 7f 00 00 e8 eb d5 c6 5e 5e 00 09 e8 e3 d5 c6 5e 5e 01 08 e8 db d5 c6 5e 5e 02 07 e8 d3 d5 c6 5e 5e 03 06 e8 cb d5 c6 5e 5e 04 05 e8 c3 d5 c6 5e 5e 05 04 e8 bb d5 c6 5e 5e 06 03 e8 b3 d5 c6 5e 5e 07 02 e8 ab d5 c6 5e 5e 08 01 e8 a3 d5 c6 5e 5e 09 00 18 ad 9e c8 f7 7f 00 00 e8 93 d5 c6 5e 5e 00 03 e8 8b d5 c6 5e 5e 03 02 e8 83 d5 c6 5e 5e 06 01 e8 7b d5 c6 5e 5e 09 00 f8 af 9e c8 f7 7f 00 00 e8 6b d5 c6 5e 5e 00 00 c8 b0 9e c8 f7 7f 00 00 e8 5b d5 c6 5e 5e 00 09 e8 53 d5 c6 5e 5e 01 08 e8 4b d5 c6 5e 5e 02 07 e8 43 d5 c6 5e 5e 03 06 e8 3b d5 c6 5e 5e 04 05 e8 33 d5 c6 5e 5e 05 04 e8 2b d5 c6 5e 5e 06 03 e8 23 d5 c6 5e 5e 07 02 e8 1b d5 c6 5e 5e 08 01 e8 13 d5 c6 5e 5e 09 00 58 b1 9e c8 f7 7f 00 00 e8 03 d5 c6 5e 5e 00 03 e8 fb d4 c6 5e 5e 03 02 e8 f3 d4 c6 5e 5e 06 01 e8 eb d4 c6 5e 5e 09 00 38 b4 9e c8 f7 7f 00 00 e8 db d4 c6 5e 5e 00 00 08 b5 9e c8 f7 7f 00 00 e8 cb d4 c6 5e 5e 00 09 e8 c3 d4 c6 5e 5e 01 08 e8 bb d4 c6 5e 5e 02 07 e8 b3 d4 c6 5e 5e 03 06 e8 ab d4 c6 5e 5e 04 05 e8 a3 d4 c6 5e 5e 05 04 e8 9b d4 c6 5e 5e 06 03 e8 93 d4 c6 5e 5e 07 02 e8 8b d4 c6 5e 5e 08 01 e8 83 d4 c6 5e 5e 09 00 98 b5 9e c8 f7 7f 00 00 e8 73 d4 c6 5e 5e 00 03 e8 6b d4 c6 5e 5e 03 02 e8 63 d4 c6 5e 5e 06 01 e8 5b d4 c6 5e 5e 09 00 78 b8 9e c8 f7 7f 00 00 e8 4b d4 c6 5e 5e 00 00 48 b9 9e c8 f7 7f 00 00 e8 3b d4 c6 5e 5e 00 09 e8 33 d4 c6 5e 5e 01 08 e8 2b d4 c6 5e 5e 02 07 e8 23 d4 c6 5e 5e 03 06 e8 1b d4 c6 5e 5e 04 05 e8 13 d4 c6 5e 5e 05 04 e8 0b d4 c6 5e 5e 06 03 e8 03 d4 c6 5e 5e 07 02 e8 fb d3 c6 5e 5e 08 01 e8 f3 d3 c6 5e 5e 09 00 d8 b9 9e c8 f7 7f 00 00 e8 e3 d3 c6 5e 5e 00 03 e8 db d3 c6 5e 5e 03 02 e8 d3 d3 c6 5e 5e 06 01 e8 cb d3 c6 5e 5e 09 00 b8 bc 9e c8 f7 7f 00 00 e8 bb d3 c6 5e 5e 00 00 88 bd 9e c8 f7 7f 00 00 e8 ab d3 c6 5e 5e 00 03 e8 a3 d3 c6 5e 5e 03 02 e8 9b d3 c6 5e 5e 06 01 e8 93 d3 c6 5e 5e 09 00 f8 c0 9e c8 f7 7f 00 00 e8 83 d3 c6 5e 5e 00 00 c8 c1 9e c8 f7 7f 00 00 e8 73 d3 c6 5e 5e 00 00 f0 c6 9e c8 f7 7f 00 00 90 7d 9d c8 f7 7f 00 00 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 60 a7 9e c8 f7 7f 00 00 ba 02 00 00 00 e8 d9 ea c6 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 3a fc ff ff 48 8b cb e8 32 c2 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
84        | 7ff7c85f82e0h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[8u](v256x8u,v256x8u)                                           | bit satisfied<byte>(ComparisonExpr<Vector256<byte>> expr, Vector256<byte> a, Vector256<byte> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 60 a7 9e c8 f7 7f 00 00 ba 02 00 00 00 e8 d9 ea c6 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 3a fc ff ff 48 8b cb e8 32 c2 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
85        | 7ff7c85f8380h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[8i](v256x8i,v256x8i)                                           | bit satisfied<sbyte>(ComparisonExpr<Vector256<sbyte>> expr, Vector256<sbyte> a, Vector256<sbyte> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 10 af 9e c8 f7 7f 00 00 ba 02 00 00 00 e8 39 ea c6 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 ba fc ff ff 48 8b cb e8 b2 c2 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
86        | 7ff7c85f8420h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[16u](v256x16u,v256x16u)                                        | bit satisfied<ushort>(ComparisonExpr<Vector256<ushort>> expr, Vector256<ushort> a, Vector256<ushort> b)       | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 50 b3 9e c8 f7 7f 00 00 ba 02 00 00 00 e8 99 e9 c6 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 aa fc ff ff 48 8b cb e8 42 c7 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
87        | 7ff7c85f84c0h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[16i](v256x16i,v256x16i)                                        | bit satisfied<short>(ComparisonExpr<Vector256<short>> expr, Vector256<short> a, Vector256<short> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 90 b7 9e c8 f7 7f 00 00 ba 02 00 00 00 e8 f9 e8 c6 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 9a fc ff ff 48 8b cb e8 c2 c7 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
88        | 7ff7c85f8560h   | 888     | hex://logix/logic.engine?satisfied#satisfied_g[32u](v256x32u,v256x32u)                                        | bit satisfied<uint>(ComparisonExpr<Vector256<uint>> expr, Vector256<uint> a, Vector256<uint> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 d0 bb 9e c8 f7 7f 00 00 ba 02 00 00 00 e8 59 e8 c6 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 8a fc ff ff 48 8b cb e8 42 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 43 d0 c6 5e 5e 00 09 e8 3b d0 c6 5e 5e 01 08 e8 33 d0 c6 5e 5e 02 07 e8 2b d0 c6 5e 5e 03 06 e8 23 d0 c6 5e 5e 04 05 e8 1b d0 c6 5e 5e 05 04 e8 13 d0 c6 5e 5e 06 03 e8 0b d0 c6 5e 5e 07 02 e8 03 d0 c6 5e 5e 08 01 e8 fb cf c6 5e 5e 09 00 18 be 9e c8 f7 7f 00 00 e8 eb cf c6 5e 5e 00 09 e8 e3 cf c6 5e 5e 01 08 e8 db cf c6 5e 5e 02 07 e8 d3 cf c6 5e 5e 03 06 e8 cb cf c6 5e 5e 04 05 e8 c3 cf c6 5e 5e 05 04 e8 bb cf c6 5e 5e 06 03 e8 b3 cf c6 5e 5e 07 02 e8 ab cf c6 5e 5e 08 01 e8 a3 cf c6 5e 5e 09 00 58 c2 9e c8 f7 7f 00 00 e8 93 cf c6 5e 5e 00 03 e8 8b cf c6 5e 5e 01 02 e8 83 cf c6 5e 5e 02 01 e8 7b cf c6 5e 5e 03 00 f0 c3 9e c8 f7 7f 00 00 e8 6b cf c6 5e 5e 00 03 e8 63 cf c6 5e 5e 03 02 e8 5b cf c6 5e 5e 06 01 e8 53 cf c6 5e 5e 09 00 20 c6 9e c8 f7 7f 00 00 e8 43 cf c6 5e 5e 00 00 50 c7 9e c8 f7 7f 00 00 e8 33 cf c6 5e 5e 00 00 b0 c7 9e c8 f7 7f 00 00 e8 23 cf c6 5e 5e 00 09 e8 1b cf c6 5e 5e 01 08 e8 13 cf c6 5e 5e 02 07 e8 0b cf c6 5e 5e 03 06 e8 03 cf c6 5e 5e 04 05 e8 fb ce c6 5e 5e 05 04 e8 f3 ce c6 5e 5e 06 03 e8 eb ce c6 5e 5e 07 02 e8 e3 ce c6 5e 5e 08 01 e8 db ce c6 5e 5e 09 00 40 c8 9e c8 f7 7f 00 00 e8 cb ce c6 5e 5e 00 03 e8 c3 ce c6 5e 5e 03 02 e8 bb ce c6 5e 5e 06 01 e8 b3 ce c6 5e 5e 09 00 20 cb 9e c8 f7 7f 00 00 e8 a3 ce c6 5e 5e 00 00 f0 ce 9e c8 f7 7f 00 00 e8 93 ce c6 5e 5e 00 00 68 cf 9e c8 f7 7f 00 00 e8 83 ce c6 5e 5e 00 00 88 d0 9e c8 f7 7f 00 00 49 ba 98 d2 9e c8 f7 7f 00 00 40 e9 c8 d1 c6 5e 49 ba 70 d3 9e c8 f7 7f 00 00 40 e9 b8 d1 c6 5e e8 53 ce c6 5e 5e 00 01 e8 4b ce c6 5e 5e 01 00 48 d5 9e c8 f7 7f 00 00 e8 3b ce c6 5e 5e 00 18 e8 33 ce c6 5e 5e 01 17 e8 2b ce c6 5e 5e 02 16 e8 23 ce c6 5e 5e 03 15 e8 1b ce c6 5e 5e 04 14 e8 13 ce c6 5e 5e 05 13 e8 0b ce c6 5e 5e 06 12 e8 03 ce c6 5e 5e 07 11 e8 fb cd c6 5e 5e 08 10 e8 f3 cd c6 5e 5e 09 0f e8 eb cd c6 5e 5e 0a 0e e8 e3 cd c6 5e 5e 0b 0d e8 db cd c6 5e 5e 0c 0c e8 d3 cd c6 5e 5e 0d 0b e8 cb cd c6 5e 5e 0e 0a e8 c3 cd c6 5e 5e 0f 09 e8 bb cd c6 5e 5e 10 08 e8 b3 cd c6 5e 5e 11 07 e8 ab cd c6 5e 5e 12 06 e8 a3 cd c6 5e 5e 13 05 e8 9b cd c6 5e 5e 14 04 e8 93 cd c6 5e 5e 15 03 e8 8b cd c6 5e 5e 16 02 e8 83 cd c6 5e 5e 17 01 e8 7b cd c6 5e 5e 18 00 50 d4 9e c8 f7 7f 00 00 00 00 00 00 00 00 00 00
89        | 7ff7c85f8a00h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[32i](v256x32i,v256x32i)                                        | bit satisfied<int>(ComparisonExpr<Vector256<int>> expr, Vector256<int> a, Vector256<int> b)                   | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 10 c0 9e c8 f7 7f 00 00 ba 02 00 00 00 e8 b9 e3 c6 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 c2 c4 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
90        | 7ff7c85f8aa0h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[64u](v256x64u,v256x64u)                                        | bit satisfied<ulong>(ComparisonExpr<Vector256<ulong>> expr, Vector256<ulong> a, Vector256<ulong> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 38 c5 9e c8 f7 7f 00 00 ba 02 00 00 00 e8 19 e3 c6 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 9a fb ff ff 48 8b cb e8 0a fc ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
91        | 7ff7c85f8b40h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[64i](v256x64i,v256x64i)                                        | bit satisfied<long>(ComparisonExpr<Vector256<long>> expr, Vector256<long> a, Vector256<long> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 38 ca 9e c8 f7 7f 00 00 ba 02 00 00 00 e8 79 e2 c6 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 c2 fb ff ff 48 8b cb e8 a2 c4 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
92        | 7ff7c85f8be0h   | 35      | hex://logix/logic.engine?eval#eval_()                                                                         | bit eval(ILogicExpr expr)                                                                                     | 0f 1f 44 00 00 48 b8 a8 96 db c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
93        | 7ff7c85f8c10h   | 759     | hex://logix/logic.engine?satisfied#satisfied_(1u,1u)                                                          | bit satisfied(ComparisonExpr expr, bit a, bit b)                                                              | 57 56 48 83 ec 28 48 8b f1 41 8b f8 8b 0e 48 8b 4e 18 83 79 08 00 76 54 48 8b 49 10 49 bb 18 0e 61 c7 f7 7f 00 00 48 b8 18 0e 61 c7 f7 7f 00 00 39 09 ff 10 48 8b 4e 18 83 79 08 01 76 2e 48 8b 49 18 8b d7 49 bb 20 0e 61 c7 f7 7f 00 00 48 b8 20 0e 61 c7 f7 7f 00 00 39 09 ff 10 48 8b ce e8 34 0a 7c ff 90 48 83 c4 28 5e 5f c3 e8 4f 71 d9 5e cc 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 c0 8d 9d c8 f7 7f 00 00 55 41 57 41 56 41 54 57 56 53 48 83 ec 40 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 5e 10 48 8b 4f 10 48 85 c9 75 05 45 33 f6 eb 04 44 8b 71 08 41 bf b7 00 00 00 41 bc 01 00 00 00 48 8b cb 49 bb 48 0e 61 c7 f7 7f 00 00 48 b8 48 0e 61 c7 f7 7f 00 00 39 09 ff 10 41 3b c6 0f 85 0a 01 00 00 48 8b cb 49 bb 50 0e 61 c7 f7 7f 00 00 48 b8 50 0e 61 c7 f7 7f 00 00 39 09 ff 10 8b c8 e8 5b 14 7c ff 48 8b c8 49 bb 28 0e 61 c7 f7 7f 00 00 48 b8 28 0e 61 c7 f7 7f 00 00 39 09 ff 10 48 89 45 c0 48 8b 4d c0 49 bb 30 0e 61 c7 f7 7f 00 00 48 b8 30 0e 61 c7 f7 7f 00 00 39 09 ff 10 85 c0 74 5d 48 8b 4d c0 49 bb 38 0e 61 c7 f7 7f 00 00 48 b8 38 0e 61 c7 f7 7f 00 00 39 09 ff 10 48 8b d0 48 8b ce e8 5d 1f 7c ff 48 8b ce e8 15 09 7c ff 8b d8 48 8b cf e8 0b 09 7c ff 3b d8 75 3e 48 8b 4d c0 49 bb 30 0e 61 c7 f7 7f 00 00 48 b8 30 0e 61 c7 f7 7f 00 00 39 09 ff 10 85 c0 75 a3 48 8b 4d c0 49 bb 40 0e 61 c7 f7 7f 00 00 48 b8 40 0e 61 c7 f7 7f 00 00 39 09 ff 10 eb 1a 48 8b cc e8 9b 00 00 00 90 33 c0 48 8d 65 d0 5b 5e 5f 41 5c 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d0 5b 5e 5f 41 5c 41 5e 41 5f 5d c3 48 8b cb 49 bb 58 0e 61 c7 f7 7f 00 00 48 b8 58 0e 61 c7 f7 7f 00 00 39 09 ff 10 8b f0 b9 19 02 00 00 48 ba a8 80 bb c7 f7 7f 00 00 e8 72 77 d9 5e 48 8b f8 b9 25 02 00 00 48 ba a8 80 bb c7 f7 7f 00 00 e8 5b 77 d9 5e 4c 8b c8 4c 8d 45 c8 45 88 20 45 89 78 04 4c 8b c7 8b ce 41 8b d6 48 8b 45 c8 48 89 44 24 20 e8 97 b7 14 ff 48 8b c8 e8 7f 2a be 5e cc 55 41 57 41 56 41 54 57 56 53 48 83 ec 30 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c0 00 74 1c 48 8b 4d c0 49 bb 40 0e 61 c7 f7 7f 00 00 48 b8 40 0e 61 c7 f7 7f 00 00 39 09 ff 10 90 48 83 c4 30 5b 5e 5f 41 5c 41 5e 41 5f 5d c3 19 0e 08 00 0e 72 0a 30 09 60 08 70 07 c0 05 e0 03 f0 01 50 40 00 00 00 19 0e 08 00 0e 52 0a 30 09 60 08 70 07 c0 05 e0 03 f0 01 50 40 00 00 00 00 00 00 00 00 00 00
94        | 7ff7c85f8ca0h   | 615     | hex://logix/logic.engine?equal#equal_()                                                                       | bit equal(VariedLogicExpr a, VariedLogicExpr b)                                                               | 55 41 57 41 56 41 54 57 56 53 48 83 ec 40 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 5e 10 48 8b 4f 10 48 85 c9 75 05 45 33 f6 eb 04 44 8b 71 08 41 bf b7 00 00 00 41 bc 01 00 00 00 48 8b cb 49 bb 48 0e 61 c7 f7 7f 00 00 48 b8 48 0e 61 c7 f7 7f 00 00 39 09 ff 10 41 3b c6 0f 85 0a 01 00 00 48 8b cb 49 bb 50 0e 61 c7 f7 7f 00 00 48 b8 50 0e 61 c7 f7 7f 00 00 39 09 ff 10 8b c8 e8 5b 14 7c ff 48 8b c8 49 bb 28 0e 61 c7 f7 7f 00 00 48 b8 28 0e 61 c7 f7 7f 00 00 39 09 ff 10 48 89 45 c0 48 8b 4d c0 49 bb 30 0e 61 c7 f7 7f 00 00 48 b8 30 0e 61 c7 f7 7f 00 00 39 09 ff 10 85 c0 74 5d 48 8b 4d c0 49 bb 38 0e 61 c7 f7 7f 00 00 48 b8 38 0e 61 c7 f7 7f 00 00 39 09 ff 10 48 8b d0 48 8b ce e8 5d 1f 7c ff 48 8b ce e8 15 09 7c ff 8b d8 48 8b cf e8 0b 09 7c ff 3b d8 75 3e 48 8b 4d c0 49 bb 30 0e 61 c7 f7 7f 00 00 48 b8 30 0e 61 c7 f7 7f 00 00 39 09 ff 10 85 c0 75 a3 48 8b 4d c0 49 bb 40 0e 61 c7 f7 7f 00 00 48 b8 40 0e 61 c7 f7 7f 00 00 39 09 ff 10 eb 1a 48 8b cc e8 9b 00 00 00 90 33 c0 48 8d 65 d0 5b 5e 5f 41 5c 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d0 5b 5e 5f 41 5c 41 5e 41 5f 5d c3 48 8b cb 49 bb 58 0e 61 c7 f7 7f 00 00 48 b8 58 0e 61 c7 f7 7f 00 00 39 09 ff 10 8b f0 b9 19 02 00 00 48 ba a8 80 bb c7 f7 7f 00 00 e8 72 77 d9 5e 48 8b f8 b9 25 02 00 00 48 ba a8 80 bb c7 f7 7f 00 00 e8 5b 77 d9 5e 4c 8b c8 4c 8d 45 c8 45 88 20 45 89 78 04 4c 8b c7 8b ce 41 8b d6 48 8b 45 c8 48 89 44 24 20 e8 97 b7 14 ff 48 8b c8 e8 7f 2a be 5e cc 55 41 57 41 56 41 54 57 56 53 48 83 ec 30 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c0 00 74 1c 48 8b 4d c0 49 bb 40 0e 61 c7 f7 7f 00 00 48 b8 40 0e 61 c7 f7 7f 00 00 39 09 ff 10 90 48 83 c4 30 5b 5e 5f 41 5c 41 5e 41 5f 5d c3 19 0e 08 00 0e 72 0a 30 09 60 08 70 07 c0 05 e0 03 f0 01 50 40 00 00 00 19 0e 08 00 0e 52 0a 30 09 60 08 70 07 c0 05 e0 03 f0 01 50 40 00 00 00 00 00 00 00 00 00 00
