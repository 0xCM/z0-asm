Sequence  | Address         | Length  | Uri                                                                                                           | OpSig                                                                                                         | Data
0         | 7ff7c85e4e90h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[8u]()                                                          | bit eval<byte>(ILogicExpr<byte> expr)                                                                         | 0f 1f 44 00 00 48 b8 98 23 db c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
1         | 7ff7c85e4ec0h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[8i]()                                                          | bit eval<sbyte>(ILogicExpr<sbyte> expr)                                                                       | 0f 1f 44 00 00 48 b8 98 23 db c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
2         | 7ff7c85e4ef0h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[16u]()                                                         | bit eval<ushort>(ILogicExpr<ushort> expr)                                                                     | 0f 1f 44 00 00 48 b8 98 23 db c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
3         | 7ff7c85e4f20h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[16i]()                                                         | bit eval<short>(ILogicExpr<short> expr)                                                                       | 0f 1f 44 00 00 48 b8 98 23 db c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
4         | 7ff7c85e4f50h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[32u]()                                                         | bit eval<uint>(ILogicExpr<uint> expr)                                                                         | 0f 1f 44 00 00 48 b8 98 23 db c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
5         | 7ff7c85e4f80h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[32i]()                                                         | bit eval<int>(ILogicExpr<int> expr)                                                                           | 0f 1f 44 00 00 48 b8 98 23 db c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
6         | 7ff7c85e4fb0h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[64u]()                                                         | bit eval<ulong>(ILogicExpr<ulong> expr)                                                                       | 0f 1f 44 00 00 48 b8 98 23 db c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
7         | 7ff7c85e4fe0h   | 1064    | hex://logix/LogicEngine?eval#eval_logic_expr_g[64i]()                                                         | bit eval<long>(ILogicExpr<long> expr)                                                                         | 0f 1f 44 00 00 48 b8 98 23 db c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 33 06 c8 5e 5e 00 00 d0 ed a4 c8 f7 7f 00 00 e8 23 06 c8 5e 5e 00 00 30 ee a4 c8 f7 7f 00 00 e8 13 06 c8 5e 5e 00 00 90 ee a4 c8 f7 7f 00 00 e8 03 06 c8 5e 5e 00 00 f0 ee a4 c8 f7 7f 00 00 e8 f3 05 c8 5e 5e 00 00 50 ef a4 c8 f7 7f 00 00 e8 e3 05 c8 5e 5e 00 00 b0 ef a4 c8 f7 7f 00 00 e8 d3 05 c8 5e 5e 00 00 10 f0 a4 c8 f7 7f 00 00 e8 c3 05 c8 5e 5e 00 00 70 f0 a4 c8 f7 7f 00 00 e8 b3 05 c8 5e 5e 00 00 d0 f0 a4 c8 f7 7f 00 00 e8 a3 05 c8 5e 5e 00 00 30 f1 a4 c8 f7 7f 00 00 e8 93 05 c8 5e 5e 00 00 90 f1 a4 c8 f7 7f 00 00 e8 83 05 c8 5e 5e 00 00 f0 f1 a4 c8 f7 7f 00 00 e8 73 05 c8 5e 5e 00 00 50 f2 a4 c8 f7 7f 00 00 e8 63 05 c8 5e 5e 00 00 b0 f2 a4 c8 f7 7f 00 00 e8 53 05 c8 5e 5e 00 00 10 f3 a4 c8 f7 7f 00 00 e8 43 05 c8 5e 5e 00 00 70 f3 a4 c8 f7 7f 00 00 e8 33 05 c8 5e 5e 00 0a e8 2b 05 c8 5e 5e 01 09 e8 23 05 c8 5e 5e 02 08 e8 1b 05 c8 5e 5e 03 07 e8 13 05 c8 5e 5e 04 06 e8 0b 05 c8 5e 5e 05 05 e8 03 05 c8 5e 5e 06 04 e8 fb 04 c8 5e 5e 07 03 e8 f3 04 c8 5e 5e 08 02 e8 eb 04 c8 5e 5e 09 01 e8 e3 04 c8 5e 5e 0a 00 d0 f3 a4 c8 f7 7f 00 00 e8 d3 04 c8 5e 5e 00 00 68 f5 a4 c8 f7 7f 00 00 e8 c3 04 c8 5e 5e 00 03 e8 bb 04 c8 5e 5e 01 02 e8 b3 04 c8 5e 5e 02 01 e8 ab 04 c8 5e 5e 03 00 a0 f6 a4 c8 f7 7f 00 00 e8 9b 04 c8 5e 5e 00 00 98 f7 a4 c8 f7 7f 00 00 e8 8b 04 c8 5e 5e 00 00 f8 f7 a4 c8 f7 7f 00 00 e8 7b 04 c8 5e 5e 00 00 58 f8 a4 c8 f7 7f 00 00 e8 6b 04 c8 5e 5e 00 00 b8 f8 a4 c8 f7 7f 00 00 e8 5b 04 c8 5e 5e 00 00 18 f9 a4 c8 f7 7f 00 00 e8 4b 04 c8 5e 5e 00 00 78 f9 a4 c8 f7 7f 00 00 e8 3b 04 c8 5e 5e 00 00 d8 f9 a4 c8 f7 7f 00 00 e8 2b 04 c8 5e 5e 00 00 38 fa a4 c8 f7 7f 00 00 e8 1b 04 c8 5e 5e 00 0c e8 13 04 c8 5e 5e 01 0b e8 0b 04 c8 5e 5e 02 0a e8 03 04 c8 5e 5e 03 09 e8 fb 03 c8 5e 5e 04 08 e8 f3 03 c8 5e 5e 05 07 e8 eb 03 c8 5e 5e 06 06 e8 e3 03 c8 5e 5e 07 05 e8 db 03 c8 5e 5e 08 04 e8 d3 03 c8 5e 5e 09 03 e8 cb 03 c8 5e 5e 0a 02 e8 c3 03 c8 5e 5e 0b 01 e8 bb 03 c8 5e 5e 0c 00 a8 fa a4 c8 f7 7f 00 00 e8 ab 03 c8 5e 5e 00 00 30 fc a4 c8 f7 7f 00 00 e8 9b 03 c8 5e 5e 00 0a e8 93 03 c8 5e 5e 01 09 e8 8b 03 c8 5e 5e 02 08 e8 83 03 c8 5e 5e 03 07 e8 7b 03 c8 5e 5e 04 06 e8 73 03 c8 5e 5e 05 05 e8 6b 03 c8 5e 5e 06 04 e8 63 03 c8 5e 5e 07 03 e8 5b 03 c8 5e 5e 08 02 e8 53 03 c8 5e 5e 09 01 e8 4b 03 c8 5e 5e 0a 00 e0 fc a4 c8 f7 7f 00 00 e8 3b 03 c8 5e 5e 00 00 60 fe a4 c8 f7 7f 00 00 e8 2b 03 c8 5e 5e 00 03 e8 23 03 c8 5e 5e 01 02 e8 1b 03 c8 5e 5e 02 01 e8 13 03 c8 5e 5e 03 00 98 ff a4 c8 f7 7f 00 00 e8 03 03 c8 5e 5e 00 00 f8 00 a6 c8 f7 7f 00 00 e8 f3 02 c8 5e 5e 00 00 58 01 a6 c8 f7 7f 00 00 e8 e3 02 c8 5e 5e 00 00 b8 01 a6 c8 f7 7f 00 00 e8 d3 02 c8 5e 5e 00 00 18 02 a6 c8 f7 7f 00 00 e8 c3 02 c8 5e 5e 00 00 78 02 a6 c8 f7 7f 00 00 e8 b3 02 c8 5e 5e 00 00 d8 02 a6 c8 f7 7f 00 00 e8 a3 02 c8 5e 5e 00 00 38 03 a6 c8 f7 7f 00 00 e8 93 02 c8 5e 5e 00 00 98 03 a6 c8 f7 7f 00 00 e8 83 02 c8 5e 5e 00 00 b0 05 a6 c8 f7 7f 00 00 e8 73 02 c8 5e 5e 00 00 e0 07 a6 c8 f7 7f 00 00 e8 63 02 c8 5e 5e 00 03 e8 5b 02 c8 5e 5e 01 02 e8 53 02 c8 5e 5e 02 01 e8 4b 02 c8 5e 5e 03 00 18 09 a6 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
8         | 7ff7c85e5410h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[8u]()                                                         | LiteralExpr<byte> eval<byte>(IExpr<byte> expr)                                                                | 0f 1f 44 00 00 48 b8 08 50 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
9         | 7ff7c85e5440h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[8i]()                                                         | LiteralExpr<sbyte> eval<sbyte>(IExpr<sbyte> expr)                                                             | 0f 1f 44 00 00 48 b8 38 50 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
10        | 7ff7c85e5470h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[16u]()                                                        | LiteralExpr<ushort> eval<ushort>(IExpr<ushort> expr)                                                          | 0f 1f 44 00 00 48 b8 58 50 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
11        | 7ff7c85e54a0h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[16i]()                                                        | LiteralExpr<short> eval<short>(IExpr<short> expr)                                                             | 0f 1f 44 00 00 48 b8 78 50 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
12        | 7ff7c85e54d0h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[32u]()                                                        | LiteralExpr<uint> eval<uint>(IExpr<uint> expr)                                                                | 0f 1f 44 00 00 48 b8 98 50 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
13        | 7ff7c85e5500h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[32i]()                                                        | LiteralExpr<int> eval<int>(IExpr<int> expr)                                                                   | 0f 1f 44 00 00 48 b8 b8 50 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
14        | 7ff7c85e5530h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[64u]()                                                        | LiteralExpr<ulong> eval<ulong>(IExpr<ulong> expr)                                                             | 0f 1f 44 00 00 48 b8 d8 50 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
15        | 7ff7c85e5560h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[64i]()                                                        | LiteralExpr<long> eval<long>(IExpr<long> expr)                                                                | 0f 1f 44 00 00 48 b8 f8 50 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
16        | 7ff7c85e5590h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_expr_g[8u]()                                                            | LiteralExpr<byte> eval<byte>(IComparisonExpr<byte> expr)                                                      | 0f 1f 44 00 00 48 b8 90 27 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
17        | 7ff7c85e55c0h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_expr_g[8i]()                                                            | LiteralExpr<sbyte> eval<sbyte>(IComparisonExpr<sbyte> expr)                                                   | 0f 1f 44 00 00 48 b8 70 28 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
18        | 7ff7c85e55f0h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_expr_g[16u]()                                                           | LiteralExpr<ushort> eval<ushort>(IComparisonExpr<ushort> expr)                                                | 0f 1f 44 00 00 48 b8 20 29 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
19        | 7ff7c85e5620h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_expr_g[16i]()                                                           | LiteralExpr<short> eval<short>(IComparisonExpr<short> expr)                                                   | 0f 1f 44 00 00 48 b8 d0 29 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
20        | 7ff7c85e5650h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_expr_g[32u]()                                                           | LiteralExpr<uint> eval<uint>(IComparisonExpr<uint> expr)                                                      | 0f 1f 44 00 00 48 b8 80 2a 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
21        | 7ff7c85e5680h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_expr_g[32i]()                                                           | LiteralExpr<int> eval<int>(IComparisonExpr<int> expr)                                                         | 0f 1f 44 00 00 48 b8 20 2b 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
22        | 7ff7c85e56b0h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_expr_g[64i]()                                                           | LiteralExpr<long> eval<long>(IComparisonExpr<long> expr)                                                      | 0f 1f 44 00 00 48 b8 c0 2b 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
23        | 7ff7c85e56e0h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[8u]()                                                        | LiteralExpr<Vector128<byte>> eval<byte>(IComparisonExpr<Vector128<byte>> expr)                                | 0f 1f 44 00 00 48 b8 d0 34 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
24        | 7ff7c85e5710h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[8i]()                                                        | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IComparisonExpr<Vector128<sbyte>> expr)                             | 0f 1f 44 00 00 48 b8 b0 35 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
25        | 7ff7c85e5740h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[16u]()                                                       | LiteralExpr<Vector128<ushort>> eval<ushort>(IComparisonExpr<Vector128<ushort>> expr)                          | 0f 1f 44 00 00 48 b8 90 36 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
26        | 7ff7c85e5770h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[16i]()                                                       | LiteralExpr<Vector128<short>> eval<short>(IComparisonExpr<Vector128<short>> expr)                             | 0f 1f 44 00 00 48 b8 80 3b 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
27        | 7ff7c85e57a0h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[32u]()                                                       | LiteralExpr<Vector128<uint>> eval<uint>(IComparisonExpr<Vector128<uint>> expr)                                | 0f 1f 44 00 00 48 b8 60 3c 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
28        | 7ff7c85e57d0h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[32i]()                                                       | LiteralExpr<Vector128<int>> eval<int>(IComparisonExpr<Vector128<int>> expr)                                   | 0f 1f 44 00 00 48 b8 40 3d 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
29        | 7ff7c85e5800h   | 1064    | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[64i]()                                                       | LiteralExpr<Vector128<long>> eval<long>(IComparisonExpr<Vector128<long>> expr)                                | 0f 1f 44 00 00 48 b8 20 3e 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 13 fe c7 5e 5e 00 0c e8 0b fe c7 5e 5e 01 0b e8 03 fe c7 5e 5e 02 0a e8 fb fd c7 5e 5e 03 09 e8 f3 fd c7 5e 5e 04 08 e8 eb fd c7 5e 5e 05 07 e8 e3 fd c7 5e 5e 06 06 e8 db fd c7 5e 5e 07 05 e8 d3 fd c7 5e 5e 08 04 e8 cb fd c7 5e 5e 09 03 e8 c3 fd c7 5e 5e 0a 02 e8 bb fd c7 5e 5e 0b 01 e8 b3 fd c7 5e 5e 0c 00 28 04 a6 c8 f7 7f 00 00 e8 a3 fd c7 5e 5e 00 0a e8 9b fd c7 5e 5e 01 09 e8 93 fd c7 5e 5e 02 08 e8 8b fd c7 5e 5e 03 07 e8 83 fd c7 5e 5e 04 06 e8 7b fd c7 5e 5e 05 05 e8 73 fd c7 5e 5e 06 04 e8 6b fd c7 5e 5e 07 03 e8 63 fd c7 5e 5e 08 02 e8 5b fd c7 5e 5e 09 01 e8 53 fd c7 5e 5e 0a 00 60 06 a6 c8 f7 7f 00 00 e8 43 fd c7 5e 5e 00 00 10 0a a6 c8 f7 7f 00 00 e8 33 fd c7 5e 5e 00 00 70 0a a6 c8 f7 7f 00 00 e8 23 fd c7 5e 5e 00 00 d0 0a a6 c8 f7 7f 00 00 e8 13 fd c7 5e 5e 00 00 30 0b a6 c8 f7 7f 00 00 e8 03 fd c7 5e 5e 00 00 90 0b a6 c8 f7 7f 00 00 e8 f3 fc c7 5e 5e 00 00 f0 0b a6 c8 f7 7f 00 00 e8 e3 fc c7 5e 5e 00 00 50 0c a6 c8 f7 7f 00 00 e8 d3 fc c7 5e 5e 00 00 b0 0c a6 c8 f7 7f 00 00 e8 c3 fc c7 5e 5e 00 03 e8 bb fc c7 5e 5e 01 02 e8 b3 fc c7 5e 5e 02 01 e8 ab fc c7 5e 5e 03 00 88 0d a6 c8 f7 7f 00 00 e8 9b fc c7 5e 5e 00 00 f8 0e a6 c8 f7 7f 00 00 e8 8b fc c7 5e 5e 00 00 58 0f a6 c8 f7 7f 00 00 e8 7b fc c7 5e 5e 00 00 b8 0f a6 c8 f7 7f 00 00 e8 6b fc c7 5e 5e 00 00 18 10 a6 c8 f7 7f 00 00 e8 5b fc c7 5e 5e 00 00 78 10 a6 c8 f7 7f 00 00 e8 4b fc c7 5e 5e 00 00 d8 10 a6 c8 f7 7f 00 00 e8 3b fc c7 5e 5e 00 00 38 11 a6 c8 f7 7f 00 00 e8 2b fc c7 5e 5e 00 00 98 11 a6 c8 f7 7f 00 00 e8 1b fc c7 5e 5e 00 0a e8 13 fc c7 5e 5e 01 09 e8 0b fc c7 5e 5e 02 08 e8 03 fc c7 5e 5e 03 07 e8 fb fb c7 5e 5e 04 06 e8 f3 fb c7 5e 5e 05 05 e8 eb fb c7 5e 5e 06 04 e8 e3 fb c7 5e 5e 07 03 e8 db fb c7 5e 5e 08 02 e8 d3 fb c7 5e 5e 09 01 e8 cb fb c7 5e 5e 0a 00 f8 11 a6 c8 f7 7f 00 00 e8 bb fb c7 5e 5e 00 00 90 13 a6 c8 f7 7f 00 00 e8 ab fb c7 5e 5e 00 00 60 15 a6 c8 f7 7f 00 00 e8 9b fb c7 5e 5e 00 00 c0 15 a6 c8 f7 7f 00 00 e8 8b fb c7 5e 5e 00 00 20 16 a6 c8 f7 7f 00 00 e8 7b fb c7 5e 5e 00 02 e8 73 fb c7 5e 5e 01 01 e8 6b fb c7 5e 5e 02 00 70 16 a6 c8 f7 7f 00 00 e8 5b fb c7 5e 5e 00 00 60 17 a6 c8 f7 7f 00 00 e8 4b fb c7 5e 5e 00 00 c0 17 a6 c8 f7 7f 00 00 e8 3b fb c7 5e 5e 00 02 e8 33 fb c7 5e 5e 01 01 e8 2b fb c7 5e 5e 02 00 10 18 a6 c8 f7 7f 00 00 e8 1b fb c7 5e 5e 00 00 00 19 a6 c8 f7 7f 00 00 e8 0b fb c7 5e 5e 00 00 60 19 a6 c8 f7 7f 00 00 e8 fb fa c7 5e 5e 00 02 e8 f3 fa c7 5e 5e 01 01 e8 eb fa c7 5e 5e 02 00 b0 19 a6 c8 f7 7f 00 00 e8 db fa c7 5e 5e 00 00 a0 1a a6 c8 f7 7f 00 00 e8 cb fa c7 5e 5e 00 00 00 1b a6 c8 f7 7f 00 00 e8 bb fa c7 5e 5e 00 02 e8 b3 fa c7 5e 5e 01 01 e8 ab fa c7 5e 5e 02 00 50 1b a6 c8 f7 7f 00 00 e8 9b fa c7 5e 5e 00 00 40 1c a6 c8 f7 7f 00 00 e8 8b fa c7 5e 5e 00 00 a0 1c a6 c8 f7 7f 00 00 e8 7b fa c7 5e 5e 00 02 e8 73 fa c7 5e 5e 01 01 e8 6b fa c7 5e 5e 02 00 f0 1c a6 c8 f7 7f 00 00 e8 5b fa c7 5e 5e 00 00 e0 1d a6 c8 f7 7f 00 00 e8 4b fa c7 5e 5e 00 00 40 1e a6 c8 f7 7f 00 00 e8 3b fa c7 5e 5e 00 02 e8 33 fa c7 5e 5e 01 01 e8 2b fa c7 5e 5e 02 00 90 1e a6 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
30        | 7ff7c85e5c30h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[8u]()                                                        | LiteralExpr<Vector256<byte>> eval<byte>(IComparisonExpr<Vector256<byte>> expr)                                | 0f 1f 44 00 00 48 b8 10 43 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
31        | 7ff7c85e5c60h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[8i]()                                                        | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IComparisonExpr<Vector256<sbyte>> expr)                             | 0f 1f 44 00 00 48 b8 20 44 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
32        | 7ff7c85e5c90h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[16u]()                                                       | LiteralExpr<Vector256<ushort>> eval<ushort>(IComparisonExpr<Vector256<ushort>> expr)                          | 0f 1f 44 00 00 48 b8 30 45 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
33        | 7ff7c85e5cc0h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[16i]()                                                       | LiteralExpr<Vector256<short>> eval<short>(IComparisonExpr<Vector256<short>> expr)                             | 0f 1f 44 00 00 48 b8 50 4a 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
34        | 7ff7c85e5cf0h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[32u]()                                                       | LiteralExpr<Vector256<uint>> eval<uint>(IComparisonExpr<Vector256<uint>> expr)                                | 0f 1f 44 00 00 48 b8 60 4b 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
35        | 7ff7c85e5d20h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[32i]()                                                       | LiteralExpr<Vector256<int>> eval<int>(IComparisonExpr<Vector256<int>> expr)                                   | 0f 1f 44 00 00 48 b8 70 4c 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
36        | 7ff7c85e5d50h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[64i]()                                                       | LiteralExpr<Vector256<long>> eval<long>(IComparisonExpr<Vector256<long>> expr)                                | 0f 1f 44 00 00 48 b8 80 4d 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
37        | 7ff7c85e5d80h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_pred_g[8u]()                                                            | bit eval<byte>(IComparisonPred<byte> expr)                                                                    | 0f 1f 44 00 00 48 b8 70 2c 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
38        | 7ff7c85e5db0h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_pred_g[8i]()                                                            | bit eval<sbyte>(IComparisonPred<sbyte> expr)                                                                  | 0f 1f 44 00 00 48 b8 10 2d 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
39        | 7ff7c85e5de0h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_pred_g[16u]()                                                           | bit eval<ushort>(IComparisonPred<ushort> expr)                                                                | 0f 1f 44 00 00 48 b8 b0 2d 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
40        | 7ff7c85e5e10h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_pred_g[16i]()                                                           | bit eval<short>(IComparisonPred<short> expr)                                                                  | 0f 1f 44 00 00 48 b8 50 2e 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
41        | 7ff7c85e5e40h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_pred_g[32u]()                                                           | bit eval<uint>(IComparisonPred<uint> expr)                                                                    | 0f 1f 44 00 00 48 b8 f0 2e 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
42        | 7ff7c85e5e70h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_pred_g[32i]()                                                           | bit eval<int>(IComparisonPred<int> expr)                                                                      | 0f 1f 44 00 00 48 b8 90 2f 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
43        | 7ff7c85e5ea0h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_pred_g[64i]()                                                           | bit eval<long>(IComparisonPred<long> expr)                                                                    | 0f 1f 44 00 00 48 b8 30 30 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
44        | 7ff7c85e5ed0h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[8u]()                                                          | LiteralExpr<byte> eval<byte>(IArithmeticExpr<byte> expr)                                                      | 0f 1f 44 00 00 48 b8 a0 5a 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
45        | 7ff7c85e5f00h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[8i]()                                                          | LiteralExpr<sbyte> eval<sbyte>(IArithmeticExpr<sbyte> expr)                                                   | 0f 1f 44 00 00 48 b8 f0 5a 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
46        | 7ff7c85e5f30h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[16u]()                                                         | LiteralExpr<ushort> eval<ushort>(IArithmeticExpr<ushort> expr)                                                | 0f 1f 44 00 00 48 b8 30 5b 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
47        | 7ff7c85e5f60h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[16i]()                                                         | LiteralExpr<short> eval<short>(IArithmeticExpr<short> expr)                                                   | 0f 1f 44 00 00 48 b8 70 5b 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
48        | 7ff7c85e5f90h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[32u]()                                                         | LiteralExpr<uint> eval<uint>(IArithmeticExpr<uint> expr)                                                      | 0f 1f 44 00 00 48 b8 b0 5b 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
49        | 7ff7c85e5fc0h   | 1107    | hex://logix/LogicEngine?eval#eval_arith_expr_g[32i]()                                                         | LiteralExpr<int> eval<int>(IArithmeticExpr<int> expr)                                                         | 0f 1f 44 00 00 48 b8 f0 5b 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 53 f6 c7 5e 5e 00 00 80 1f a6 c8 f7 7f 00 00 e8 43 f6 c7 5e 5e 00 00 e0 1f a6 c8 f7 7f 00 00 e8 33 f6 c7 5e 5e 00 02 e8 2b f6 c7 5e 5e 01 01 e8 23 f6 c7 5e 5e 02 00 30 20 a6 c8 f7 7f 00 00 e8 13 f6 c7 5e 5e 00 00 20 21 a6 c8 f7 7f 00 00 e8 03 f6 c7 5e 5e 00 00 80 21 a6 c8 f7 7f 00 00 e8 f3 f5 c7 5e 5e 00 02 e8 eb f5 c7 5e 5e 01 01 e8 e3 f5 c7 5e 5e 02 00 d0 21 a6 c8 f7 7f 00 00 e8 d3 f5 c7 5e 5e 00 0c e8 cb f5 c7 5e 5e 01 0b e8 c3 f5 c7 5e 5e 02 0a e8 bb f5 c7 5e 5e 03 09 e8 b3 f5 c7 5e 5e 04 08 e8 ab f5 c7 5e 5e 05 07 e8 a3 f5 c7 5e 5e 06 06 e8 9b f5 c7 5e 5e 07 05 e8 93 f5 c7 5e 5e 08 04 e8 8b f5 c7 5e 5e 09 03 e8 83 f5 c7 5e 5e 0a 02 e8 7b f5 c7 5e 5e 0b 01 e8 73 f5 c7 5e 5e 0c 00 d0 22 a6 c8 f7 7f 00 00 e8 63 f5 c7 5e 5e 00 00 58 24 a6 c8 f7 7f 00 00 e8 53 f5 c7 5e 5e 00 0a e8 4b f5 c7 5e 5e 01 09 e8 43 f5 c7 5e 5e 02 08 e8 3b f5 c7 5e 5e 03 07 e8 33 f5 c7 5e 5e 04 06 e8 2b f5 c7 5e 5e 05 05 e8 23 f5 c7 5e 5e 06 04 e8 1b f5 c7 5e 5e 07 03 e8 13 f5 c7 5e 5e 08 02 e8 0b f5 c7 5e 5e 09 01 e8 03 f5 c7 5e 5e 0a 00 08 25 a6 c8 f7 7f 00 00 e8 f3 f4 c7 5e 5e 00 00 88 26 a6 c8 f7 7f 00 00 e8 e3 f4 c7 5e 5e 00 00 d0 27 a6 c8 f7 7f 00 00 e8 d3 f4 c7 5e 5e 00 0a e8 cb f4 c7 5e 5e 01 09 e8 c3 f4 c7 5e 5e 02 08 e8 bb f4 c7 5e 5e 03 07 e8 b3 f4 c7 5e 5e 04 06 e8 ab f4 c7 5e 5e 05 05 e8 a3 f4 c7 5e 5e 06 04 e8 9b f4 c7 5e 5e 07 03 e8 93 f4 c7 5e 5e 08 02 e8 8b f4 c7 5e 5e 09 01 e8 83 f4 c7 5e 5e 0a 00 30 28 a6 c8 f7 7f 00 00 e8 73 f4 c7 5e 5e 00 00 b0 29 a6 c8 f7 7f 00 00 e8 63 f4 c7 5e 5e 00 00 f8 2a a6 c8 f7 7f 00 00 e8 53 f4 c7 5e 5e 00 0c e8 4b f4 c7 5e 5e 01 0b e8 43 f4 c7 5e 5e 02 0a e8 3b f4 c7 5e 5e 03 09 e8 33 f4 c7 5e 5e 04 08 e8 2b f4 c7 5e 5e 05 07 e8 23 f4 c7 5e 5e 06 06 e8 1b f4 c7 5e 5e 07 05 e8 13 f4 c7 5e 5e 08 04 e8 0b f4 c7 5e 5e 09 03 e8 03 f4 c7 5e 5e 0a 02 e8 fb f3 c7 5e 5e 0b 01 e8 f3 f3 c7 5e 5e 0c 00 88 2b a6 c8 f7 7f 00 00 e8 e3 f3 c7 5e 5e 00 00 10 2d a6 c8 f7 7f 00 00 e8 d3 f3 c7 5e 5e 00 0a e8 cb f3 c7 5e 5e 01 09 e8 c3 f3 c7 5e 5e 02 08 e8 bb f3 c7 5e 5e 03 07 e8 b3 f3 c7 5e 5e 04 06 e8 ab f3 c7 5e 5e 05 05 e8 a3 f3 c7 5e 5e 06 04 e8 9b f3 c7 5e 5e 07 03 e8 93 f3 c7 5e 5e 08 02 e8 8b f3 c7 5e 5e 09 01 e8 83 f3 c7 5e 5e 0a 00 c0 2d a6 c8 f7 7f 00 00 e8 73 f3 c7 5e 5e 00 00 40 2f a6 c8 f7 7f 00 00 e8 63 f3 c7 5e 5e 00 00 88 30 a6 c8 f7 7f 00 00 e8 53 f3 c7 5e 5e 00 0a e8 4b f3 c7 5e 5e 01 09 e8 43 f3 c7 5e 5e 02 08 e8 3b f3 c7 5e 5e 03 07 e8 33 f3 c7 5e 5e 04 06 e8 2b f3 c7 5e 5e 05 05 e8 23 f3 c7 5e 5e 06 04 e8 1b f3 c7 5e 5e 07 03 e8 13 f3 c7 5e 5e 08 02 e8 0b f3 c7 5e 5e 09 01 e8 03 f3 c7 5e 5e 0a 00 e8 30 a6 c8 f7 7f 00 00 e8 f3 f2 c7 5e 5e 00 00 68 32 a6 c8 f7 7f 00 00 e8 e3 f2 c7 5e 5e 00 00 b0 33 a6 c8 f7 7f 00 00 e8 d3 f2 c7 5e 5e 00 09 e8 cb f2 c7 5e 5e 01 08 e8 c3 f2 c7 5e 5e 02 07 e8 bb f2 c7 5e 5e 03 06 e8 b3 f2 c7 5e 5e 04 05 e8 ab f2 c7 5e 5e 05 04 e8 a3 f2 c7 5e 5e 06 03 e8 9b f2 c7 5e 5e 07 02 e8 93 f2 c7 5e 5e 08 01 e8 8b f2 c7 5e 5e 09 00 40 34 a6 c8 f7 7f 00 00 e8 7b f2 c7 5e 5e 00 03 e8 73 f2 c7 5e 5e 01 02 e8 6b f2 c7 5e 5e 02 01 e8 63 f2 c7 5e 5e 03 00 d8 35 a6 c8 f7 7f 00 00 68 47 a5 c8 f7 7f 00 00 0f 1f 44 00 00 48 b8 f8 5f 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
50        | 7ff7c85e63f0h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[64u]()                                                         | LiteralExpr<ulong> eval<ulong>(IArithmeticExpr<ulong> expr)                                                   | 0f 1f 44 00 00 48 b8 f8 5f 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
51        | 7ff7c85e6420h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[64i]()                                                         | LiteralExpr<long> eval<long>(IArithmeticExpr<long> expr)                                                      | 0f 1f 44 00 00 48 b8 38 60 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
52        | 7ff7c85e6450h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[8u]()                                                      | LiteralExpr<Vector128<byte>> eval<byte>(IExpr<Vector128<byte>> expr)                                          | 0f 1f 44 00 00 48 b8 78 32 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
53        | 7ff7c85e6480h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[8i]()                                                      | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IExpr<Vector128<sbyte>> expr)                                       | 0f 1f 44 00 00 48 b8 70 33 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
54        | 7ff7c85e64b0h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[16u]()                                                     | LiteralExpr<Vector128<ushort>> eval<ushort>(IExpr<Vector128<ushort>> expr)                                    | 0f 1f 44 00 00 48 b8 58 34 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
55        | 7ff7c85e64e0h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[16i]()                                                     | LiteralExpr<Vector128<short>> eval<short>(IExpr<Vector128<short>> expr)                                       | 0f 1f 44 00 00 48 b8 f0 37 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
56        | 7ff7c85e6510h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[32u]()                                                     | LiteralExpr<Vector128<uint>> eval<uint>(IExpr<Vector128<uint>> expr)                                          | 0f 1f 44 00 00 48 b8 d8 38 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
57        | 7ff7c85e6540h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[32i]()                                                     | LiteralExpr<Vector128<int>> eval<int>(IExpr<Vector128<int>> expr)                                             | 0f 1f 44 00 00 48 b8 c0 39 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
58        | 7ff7c85e6570h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[64u]()                                                     | LiteralExpr<Vector128<ulong>> eval<ulong>(IExpr<Vector128<ulong>> expr)                                       | 0f 1f 44 00 00 48 b8 d8 61 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
59        | 7ff7c85e65a0h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[64i]()                                                     | LiteralExpr<Vector128<long>> eval<long>(IExpr<Vector128<long>> expr)                                          | 0f 1f 44 00 00 48 b8 a8 3a 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
60        | 7ff7c85e65d0h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[8u]()                                                      | LiteralExpr<Vector256<byte>> eval<byte>(IExpr<Vector256<byte>> expr)                                          | 0f 1f 44 00 00 48 b8 68 40 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
61        | 7ff7c85e6600h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[8i]()                                                      | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IExpr<Vector256<sbyte>> expr)                                       | 0f 1f 44 00 00 48 b8 60 41 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
62        | 7ff7c85e6630h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[16u]()                                                     | LiteralExpr<Vector256<ushort>> eval<ushort>(IExpr<Vector256<ushort>> expr)                                    | 0f 1f 44 00 00 48 b8 48 42 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
63        | 7ff7c85e6660h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[16i]()                                                     | LiteralExpr<Vector256<short>> eval<short>(IExpr<Vector256<short>> expr)                                       | 0f 1f 44 00 00 48 b8 70 46 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
64        | 7ff7c85e6690h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[32u]()                                                     | LiteralExpr<Vector256<uint>> eval<uint>(IExpr<Vector256<uint>> expr)                                          | 0f 1f 44 00 00 48 b8 58 47 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
65        | 7ff7c85e66c0h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[32i]()                                                     | LiteralExpr<Vector256<int>> eval<int>(IExpr<Vector256<int>> expr)                                             | 0f 1f 44 00 00 48 b8 40 48 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
66        | 7ff7c85e66f0h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[64u]()                                                     | LiteralExpr<Vector256<ulong>> eval<ulong>(IExpr<Vector256<ulong>> expr)                                       | 0f 1f 44 00 00 48 b8 58 63 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
67        | 7ff7c85e6720h   | 1303    | hex://logix/LogicEngine?eval#eval_vector_expr256_g[64i]()                                                     | LiteralExpr<Vector256<long>> eval<long>(IExpr<Vector256<long>> expr)                                          | 0f 1f 44 00 00 48 b8 28 49 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 f3 ee c7 5e 5e 00 00 48 37 a6 c8 f7 7f 00 00 e8 e3 ee c7 5e 5e 00 09 e8 db ee c7 5e 5e 01 08 e8 d3 ee c7 5e 5e 02 07 e8 cb ee c7 5e 5e 03 06 e8 c3 ee c7 5e 5e 04 05 e8 bb ee c7 5e 5e 05 04 e8 b3 ee c7 5e 5e 06 03 e8 ab ee c7 5e 5e 07 02 e8 a3 ee c7 5e 5e 08 01 e8 9b ee c7 5e 5e 09 00 d8 37 a6 c8 f7 7f 00 00 e8 8b ee c7 5e 5e 00 00 80 39 a6 c8 f7 7f 00 00 e8 7b ee c7 5e 5e 00 0a e8 73 ee c7 5e 5e 01 09 e8 6b ee c7 5e 5e 02 08 e8 63 ee c7 5e 5e 03 07 e8 5b ee c7 5e 5e 04 06 e8 53 ee c7 5e 5e 05 05 e8 4b ee c7 5e 5e 06 04 e8 43 ee c7 5e 5e 07 03 e8 3b ee c7 5e 5e 08 02 e8 33 ee c7 5e 5e 09 01 e8 2b ee c7 5e 5e 0a 00 e0 39 a6 c8 f7 7f 00 00 e8 1b ee c7 5e 5e 00 00 78 3b a6 c8 f7 7f 00 00 e8 0b ee c7 5e 5e 00 00 48 3c a6 c8 f7 7f 00 00 e8 fb ed c7 5e 5e 00 00 a8 3c a6 c8 f7 7f 00 00 e8 eb ed c7 5e 5e 00 00 08 3d a6 c8 f7 7f 00 00 e8 db ed c7 5e 5e 00 09 e8 d3 ed c7 5e 5e 01 08 e8 cb ed c7 5e 5e 02 07 e8 c3 ed c7 5e 5e 03 06 e8 bb ed c7 5e 5e 04 05 e8 b3 ed c7 5e 5e 05 04 e8 ab ed c7 5e 5e 06 03 e8 a3 ed c7 5e 5e 07 02 e8 9b ed c7 5e 5e 08 01 e8 93 ed c7 5e 5e 09 00 98 3d a6 c8 f7 7f 00 00 e8 83 ed c7 5e 5e 00 00 40 3f a6 c8 f7 7f 00 00 e8 73 ed c7 5e 5e 00 09 e8 6b ed c7 5e 5e 01 08 e8 63 ed c7 5e 5e 02 07 e8 5b ed c7 5e 5e 03 06 e8 53 ed c7 5e 5e 04 05 e8 4b ed c7 5e 5e 05 04 e8 43 ed c7 5e 5e 06 03 e8 3b ed c7 5e 5e 07 02 e8 33 ed c7 5e 5e 08 01 e8 2b ed c7 5e 5e 09 00 d0 3f a6 c8 f7 7f 00 00 e8 1b ed c7 5e 5e 00 00 78 41 a6 c8 f7 7f 00 00 e8 0b ed c7 5e 5e 00 09 e8 03 ed c7 5e 5e 01 08 e8 fb ec c7 5e 5e 02 07 e8 f3 ec c7 5e 5e 03 06 e8 eb ec c7 5e 5e 04 05 e8 e3 ec c7 5e 5e 05 04 e8 db ec c7 5e 5e 06 03 e8 d3 ec c7 5e 5e 07 02 e8 cb ec c7 5e 5e 08 01 e8 c3 ec c7 5e 5e 09 00 08 42 a6 c8 f7 7f 00 00 e8 b3 ec c7 5e 5e 00 00 b0 43 a6 c8 f7 7f 00 00 e8 a3 ec c7 5e 5e 00 09 e8 9b ec c7 5e 5e 01 08 e8 93 ec c7 5e 5e 02 07 e8 8b ec c7 5e 5e 03 06 e8 83 ec c7 5e 5e 04 05 e8 7b ec c7 5e 5e 05 04 e8 73 ec c7 5e 5e 06 03 e8 6b ec c7 5e 5e 07 02 e8 63 ec c7 5e 5e 08 01 e8 5b ec c7 5e 5e 09 00 40 44 a6 c8 f7 7f 00 00 e8 4b ec c7 5e 5e 00 00 e8 45 a6 c8 f7 7f 00 00 e8 3b ec c7 5e 5e 00 09 e8 33 ec c7 5e 5e 01 08 e8 2b ec c7 5e 5e 02 07 e8 23 ec c7 5e 5e 03 06 e8 1b ec c7 5e 5e 04 05 e8 13 ec c7 5e 5e 05 04 e8 0b ec c7 5e 5e 06 03 e8 03 ec c7 5e 5e 07 02 e8 fb eb c7 5e 5e 08 01 e8 f3 eb c7 5e 5e 09 00 78 46 a6 c8 f7 7f 00 00 e8 e3 eb c7 5e 5e 00 00 20 48 a6 c8 f7 7f 00 00 e8 d3 eb c7 5e 5e 00 09 e8 cb eb c7 5e 5e 01 08 e8 c3 eb c7 5e 5e 02 07 e8 bb eb c7 5e 5e 03 06 e8 b3 eb c7 5e 5e 04 05 e8 ab eb c7 5e 5e 05 04 e8 a3 eb c7 5e 5e 06 03 e8 9b eb c7 5e 5e 07 02 e8 93 eb c7 5e 5e 08 01 e8 8b eb c7 5e 5e 09 00 b0 48 a6 c8 f7 7f 00 00 e8 7b eb c7 5e 5e 00 00 58 4a a6 c8 f7 7f 00 00 e8 6b eb c7 5e 5e 00 00 b8 4a a6 c8 f7 7f 00 00 e8 5b eb c7 5e 5e 00 00 18 4b a6 c8 f7 7f 00 00 e8 4b eb c7 5e 5e 00 09 e8 43 eb c7 5e 5e 01 08 e8 3b eb c7 5e 5e 02 07 e8 33 eb c7 5e 5e 03 06 e8 2b eb c7 5e 5e 04 05 e8 23 eb c7 5e 5e 05 04 e8 1b eb c7 5e 5e 06 03 e8 13 eb c7 5e 5e 07 02 e8 0b eb c7 5e 5e 08 01 e8 03 eb c7 5e 5e 09 00 a8 4b a6 c8 f7 7f 00 00 78 5b a5 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 10 ea 70 c7 f7 7f 00 00 ba 02 00 00 00 e8 6d 02 c8 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 01 fc ff ff 48 8b ce e8 01 bc ff ff 0f b6 40 08 0f b6 c0 3c ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 90 5c a5 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 70 c7 f7 7f 00 00 ba 02 00 00 00 e8 fd 01 c8 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 99 fc ff ff 48 8b ce e8 71 bc ff ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
68        | 7ff7c85e6b50h   | 231     | hex://logix/LogicEngine?satisfied#satisfied_g[8u](8u,8u)                                                      | bit satisfied<byte>(ComparisonExpr<byte> expr, byte a, byte b)                                                | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 10 ea 70 c7 f7 7f 00 00 ba 02 00 00 00 e8 6d 02 c8 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 01 fc ff ff 48 8b ce e8 01 bc ff ff 0f b6 40 08 0f b6 c0 3c ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 90 5c a5 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 70 c7 f7 7f 00 00 ba 02 00 00 00 e8 fd 01 c8 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 99 fc ff ff 48 8b ce e8 71 bc ff ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
69        | 7ff7c85e6bc0h   | 119     | hex://logix/LogicEngine?satisfied#satisfied_g[8i](8i,8i)                                                      | bit satisfied<sbyte>(ComparisonExpr<sbyte> expr, sbyte a, sbyte b)                                            | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 70 c7 f7 7f 00 00 ba 02 00 00 00 e8 fd 01 c8 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 99 fc ff ff 48 8b ce e8 71 bc ff ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
70        | 7ff7c85e6c40h   | 119     | hex://logix/LogicEngine?satisfied#satisfied_g[16u](16u,16u)                                                   | bit satisfied<ushort>(ComparisonExpr<ushort> expr, ushort a, ushort b)                                        | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 a0 79 12 c8 f7 7f 00 00 ba 02 00 00 00 e8 7d 01 c8 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 80 fc ff ff 48 8b ce e8 a0 bc ff ff 0f b7 40 08 0f b7 c0 0f b7 c0 3d ff ff 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
71        | 7ff7c85e6cc0h   | 119     | hex://logix/LogicEngine?satisfied#satisfied_g[16i](16i,16i)                                                   | bit satisfied<short>(ComparisonExpr<short> expr, short a, short b)                                            | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 20 0b 36 c8 f7 7f 00 00 ba 02 00 00 00 e8 fd 00 c8 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 68 fc ff ff 48 8b ce e8 d0 bc ff ff 48 0f bf 40 08 48 0f bf c0 48 0f bf c0 3d ff 7f 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
72        | 7ff7c85e6d40h   | 1635    | hex://logix/LogicEngine?satisfied#satisfied_g[32u](32u,32u)                                                   | bit satisfied<uint>(ComparisonExpr<uint> expr, uint a, uint b)                                                | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 38 69 12 c8 f7 7f 00 00 ba 02 00 00 00 e8 7d 00 c8 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 52 fc ff ff 48 8b ce e8 02 bd ff ff 8b 40 08 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 f0 60 a5 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 48 5f 7d c7 f7 7f 00 00 ba 02 00 00 00 e8 0d 00 c8 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 4a fc ff ff 48 8b ce e8 32 bd ff ff 8b 40 08 3d ff ff ff 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 38 62 a5 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 f8 af a8 c7 f7 7f 00 00 ba 02 00 00 00 e8 9c ff c7 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 3f fc ff ff 48 8b ce e8 6f fc ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 50 63 a5 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 88 19 36 c8 f7 7f 00 00 ba 02 00 00 00 e8 2c ff c7 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 57 fc ff ff 48 8b ce e8 ef bc ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 33 e7 c7 5e 5e 00 0c e8 2b e7 c7 5e 5e 01 0b e8 23 e7 c7 5e 5e 02 0a e8 1b e7 c7 5e 5e 03 09 e8 13 e7 c7 5e 5e 04 08 e8 0b e7 c7 5e 5e 05 07 e8 03 e7 c7 5e 5e 06 06 e8 fb e6 c7 5e 5e 07 05 e8 f3 e6 c7 5e 5e 08 04 e8 eb e6 c7 5e 5e 09 03 e8 e3 e6 c7 5e 5e 0a 02 e8 db e6 c7 5e 5e 0b 01 e8 d3 e6 c7 5e 5e 0c 00 60 4d a6 c8 f7 7f 00 00 e8 c3 e6 c7 5e 5e 00 00 e8 4e a6 c8 f7 7f 00 00 e8 b3 e6 c7 5e 5e 00 09 e8 ab e6 c7 5e 5e 01 08 e8 a3 e6 c7 5e 5e 02 07 e8 9b e6 c7 5e 5e 03 06 e8 93 e6 c7 5e 5e 04 05 e8 8b e6 c7 5e 5e 05 04 e8 83 e6 c7 5e 5e 06 03 e8 7b e6 c7 5e 5e 07 02 e8 73 e6 c7 5e 5e 08 01 e8 6b e6 c7 5e 5e 09 00 c8 4f a6 c8 f7 7f 00 00 e8 5b e6 c7 5e 5e 00 03 e8 53 e6 c7 5e 5e 01 02 e8 4b e6 c7 5e 5e 02 01 e8 43 e6 c7 5e 5e 03 00 60 51 a6 c8 f7 7f 00 00 e8 33 e6 c7 5e 5e 00 00 d0 52 a6 c8 f7 7f 00 00 e8 23 e6 c7 5e 5e 00 09 e8 1b e6 c7 5e 5e 01 08 e8 13 e6 c7 5e 5e 02 07 e8 0b e6 c7 5e 5e 03 06 e8 03 e6 c7 5e 5e 04 05 e8 fb e5 c7 5e 5e 05 04 e8 f3 e5 c7 5e 5e 06 03 e8 eb e5 c7 5e 5e 07 02 e8 e3 e5 c7 5e 5e 08 01 e8 db e5 c7 5e 5e 09 00 60 53 a6 c8 f7 7f 00 00 e8 cb e5 c7 5e 5e 00 03 e8 c3 e5 c7 5e 5e 03 02 e8 bb e5 c7 5e 5e 06 01 e8 b3 e5 c7 5e 5e 09 00 40 56 a6 c8 f7 7f 00 00 e8 a3 e5 c7 5e 5e 00 00 10 57 a6 c8 f7 7f 00 00 e8 93 e5 c7 5e 5e 00 0a e8 8b e5 c7 5e 5e 01 09 e8 83 e5 c7 5e 5e 02 08 e8 7b e5 c7 5e 5e 03 07 e8 73 e5 c7 5e 5e 04 06 e8 6b e5 c7 5e 5e 05 05 e8 63 e5 c7 5e 5e 06 04 e8 5b e5 c7 5e 5e 07 03 e8 53 e5 c7 5e 5e 08 02 e8 4b e5 c7 5e 5e 09 01 e8 43 e5 c7 5e 5e 0a 00 70 57 a6 c8 f7 7f 00 00 e8 33 e5 c7 5e 5e 00 00 f0 58 a6 c8 f7 7f 00 00 e8 23 e5 c7 5e 5e 00 00 c0 59 a6 c8 f7 7f 00 00 e8 13 e5 c7 5e 5e 00 00 20 5a a6 c8 f7 7f 00 00 e8 03 e5 c7 5e 5e 00 00 80 5a a6 c8 f7 7f 00 00 e8 f3 e4 c7 5e 5e 00 09 e8 eb e4 c7 5e 5e 01 08 e8 e3 e4 c7 5e 5e 02 07 e8 db e4 c7 5e 5e 03 06 e8 d3 e4 c7 5e 5e 04 05 e8 cb e4 c7 5e 5e 05 04 e8 c3 e4 c7 5e 5e 06 03 e8 bb e4 c7 5e 5e 07 02 e8 b3 e4 c7 5e 5e 08 01 e8 ab e4 c7 5e 5e 09 00 10 5b a6 c8 f7 7f 00 00 e8 9b e4 c7 5e 5e 00 03 e8 93 e4 c7 5e 5e 03 02 e8 8b e4 c7 5e 5e 06 01 e8 83 e4 c7 5e 5e 09 00 f0 5d a6 c8 f7 7f 00 00 e8 73 e4 c7 5e 5e 00 00 c0 5e a6 c8 f7 7f 00 00 e8 63 e4 c7 5e 5e 00 09 e8 5b e4 c7 5e 5e 01 08 e8 53 e4 c7 5e 5e 02 07 e8 4b e4 c7 5e 5e 03 06 e8 43 e4 c7 5e 5e 04 05 e8 3b e4 c7 5e 5e 05 04 e8 33 e4 c7 5e 5e 06 03 e8 2b e4 c7 5e 5e 07 02 e8 23 e4 c7 5e 5e 08 01 e8 1b e4 c7 5e 5e 09 00 50 5f a6 c8 f7 7f 00 00 e8 0b e4 c7 5e 5e 00 03 e8 03 e4 c7 5e 5e 03 02 e8 fb e3 c7 5e 5e 06 01 e8 f3 e3 c7 5e 5e 09 00 30 62 a6 c8 f7 7f 00 00 e8 e3 e3 c7 5e 5e 00 00 00 63 a6 c8 f7 7f 00 00 e8 d3 e3 c7 5e 5e 00 09 e8 cb e3 c7 5e 5e 01 08 e8 c3 e3 c7 5e 5e 02 07 e8 bb e3 c7 5e 5e 03 06 e8 b3 e3 c7 5e 5e 04 05 e8 ab e3 c7 5e 5e 05 04 e8 a3 e3 c7 5e 5e 06 03 e8 9b e3 c7 5e 5e 07 02 e8 93 e3 c7 5e 5e 08 01 e8 8b e3 c7 5e 5e 09 00 90 63 a6 c8 f7 7f 00 00 e8 7b e3 c7 5e 5e 00 03 e8 73 e3 c7 5e 5e 03 02 e8 6b e3 c7 5e 5e 06 01 e8 63 e3 c7 5e 5e 09 00 70 66 a6 c8 f7 7f 00 00 e8 53 e3 c7 5e 5e 00 00 40 67 a6 c8 f7 7f 00 00 e8 43 e3 c7 5e 5e 00 00 80 6b a6 c8 f7 7f 00 00 28 69 a5 c8 f7 7f 00 00 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 58 55 a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 a9 fa c7 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 f2 fc ff ff 48 8b cb e8 72 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
73        | 7ff7c85e6db0h   | 1523    | hex://logix/LogicEngine?satisfied#satisfied_g[32i](32i,32i)                                                   | bit satisfied<int>(ComparisonExpr<int> expr, int a, int b)                                                    | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 48 5f 7d c7 f7 7f 00 00 ba 02 00 00 00 e8 0d 00 c8 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 4a fc ff ff 48 8b ce e8 32 bd ff ff 8b 40 08 3d ff ff ff 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 38 62 a5 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 f8 af a8 c7 f7 7f 00 00 ba 02 00 00 00 e8 9c ff c7 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 3f fc ff ff 48 8b ce e8 6f fc ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 50 63 a5 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 88 19 36 c8 f7 7f 00 00 ba 02 00 00 00 e8 2c ff c7 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 57 fc ff ff 48 8b ce e8 ef bc ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 33 e7 c7 5e 5e 00 0c e8 2b e7 c7 5e 5e 01 0b e8 23 e7 c7 5e 5e 02 0a e8 1b e7 c7 5e 5e 03 09 e8 13 e7 c7 5e 5e 04 08 e8 0b e7 c7 5e 5e 05 07 e8 03 e7 c7 5e 5e 06 06 e8 fb e6 c7 5e 5e 07 05 e8 f3 e6 c7 5e 5e 08 04 e8 eb e6 c7 5e 5e 09 03 e8 e3 e6 c7 5e 5e 0a 02 e8 db e6 c7 5e 5e 0b 01 e8 d3 e6 c7 5e 5e 0c 00 60 4d a6 c8 f7 7f 00 00 e8 c3 e6 c7 5e 5e 00 00 e8 4e a6 c8 f7 7f 00 00 e8 b3 e6 c7 5e 5e 00 09 e8 ab e6 c7 5e 5e 01 08 e8 a3 e6 c7 5e 5e 02 07 e8 9b e6 c7 5e 5e 03 06 e8 93 e6 c7 5e 5e 04 05 e8 8b e6 c7 5e 5e 05 04 e8 83 e6 c7 5e 5e 06 03 e8 7b e6 c7 5e 5e 07 02 e8 73 e6 c7 5e 5e 08 01 e8 6b e6 c7 5e 5e 09 00 c8 4f a6 c8 f7 7f 00 00 e8 5b e6 c7 5e 5e 00 03 e8 53 e6 c7 5e 5e 01 02 e8 4b e6 c7 5e 5e 02 01 e8 43 e6 c7 5e 5e 03 00 60 51 a6 c8 f7 7f 00 00 e8 33 e6 c7 5e 5e 00 00 d0 52 a6 c8 f7 7f 00 00 e8 23 e6 c7 5e 5e 00 09 e8 1b e6 c7 5e 5e 01 08 e8 13 e6 c7 5e 5e 02 07 e8 0b e6 c7 5e 5e 03 06 e8 03 e6 c7 5e 5e 04 05 e8 fb e5 c7 5e 5e 05 04 e8 f3 e5 c7 5e 5e 06 03 e8 eb e5 c7 5e 5e 07 02 e8 e3 e5 c7 5e 5e 08 01 e8 db e5 c7 5e 5e 09 00 60 53 a6 c8 f7 7f 00 00 e8 cb e5 c7 5e 5e 00 03 e8 c3 e5 c7 5e 5e 03 02 e8 bb e5 c7 5e 5e 06 01 e8 b3 e5 c7 5e 5e 09 00 40 56 a6 c8 f7 7f 00 00 e8 a3 e5 c7 5e 5e 00 00 10 57 a6 c8 f7 7f 00 00 e8 93 e5 c7 5e 5e 00 0a e8 8b e5 c7 5e 5e 01 09 e8 83 e5 c7 5e 5e 02 08 e8 7b e5 c7 5e 5e 03 07 e8 73 e5 c7 5e 5e 04 06 e8 6b e5 c7 5e 5e 05 05 e8 63 e5 c7 5e 5e 06 04 e8 5b e5 c7 5e 5e 07 03 e8 53 e5 c7 5e 5e 08 02 e8 4b e5 c7 5e 5e 09 01 e8 43 e5 c7 5e 5e 0a 00 70 57 a6 c8 f7 7f 00 00 e8 33 e5 c7 5e 5e 00 00 f0 58 a6 c8 f7 7f 00 00 e8 23 e5 c7 5e 5e 00 00 c0 59 a6 c8 f7 7f 00 00 e8 13 e5 c7 5e 5e 00 00 20 5a a6 c8 f7 7f 00 00 e8 03 e5 c7 5e 5e 00 00 80 5a a6 c8 f7 7f 00 00 e8 f3 e4 c7 5e 5e 00 09 e8 eb e4 c7 5e 5e 01 08 e8 e3 e4 c7 5e 5e 02 07 e8 db e4 c7 5e 5e 03 06 e8 d3 e4 c7 5e 5e 04 05 e8 cb e4 c7 5e 5e 05 04 e8 c3 e4 c7 5e 5e 06 03 e8 bb e4 c7 5e 5e 07 02 e8 b3 e4 c7 5e 5e 08 01 e8 ab e4 c7 5e 5e 09 00 10 5b a6 c8 f7 7f 00 00 e8 9b e4 c7 5e 5e 00 03 e8 93 e4 c7 5e 5e 03 02 e8 8b e4 c7 5e 5e 06 01 e8 83 e4 c7 5e 5e 09 00 f0 5d a6 c8 f7 7f 00 00 e8 73 e4 c7 5e 5e 00 00 c0 5e a6 c8 f7 7f 00 00 e8 63 e4 c7 5e 5e 00 09 e8 5b e4 c7 5e 5e 01 08 e8 53 e4 c7 5e 5e 02 07 e8 4b e4 c7 5e 5e 03 06 e8 43 e4 c7 5e 5e 04 05 e8 3b e4 c7 5e 5e 05 04 e8 33 e4 c7 5e 5e 06 03 e8 2b e4 c7 5e 5e 07 02 e8 23 e4 c7 5e 5e 08 01 e8 1b e4 c7 5e 5e 09 00 50 5f a6 c8 f7 7f 00 00 e8 0b e4 c7 5e 5e 00 03 e8 03 e4 c7 5e 5e 03 02 e8 fb e3 c7 5e 5e 06 01 e8 f3 e3 c7 5e 5e 09 00 30 62 a6 c8 f7 7f 00 00 e8 e3 e3 c7 5e 5e 00 00 00 63 a6 c8 f7 7f 00 00 e8 d3 e3 c7 5e 5e 00 09 e8 cb e3 c7 5e 5e 01 08 e8 c3 e3 c7 5e 5e 02 07 e8 bb e3 c7 5e 5e 03 06 e8 b3 e3 c7 5e 5e 04 05 e8 ab e3 c7 5e 5e 05 04 e8 a3 e3 c7 5e 5e 06 03 e8 9b e3 c7 5e 5e 07 02 e8 93 e3 c7 5e 5e 08 01 e8 8b e3 c7 5e 5e 09 00 90 63 a6 c8 f7 7f 00 00 e8 7b e3 c7 5e 5e 00 03 e8 73 e3 c7 5e 5e 03 02 e8 6b e3 c7 5e 5e 06 01 e8 63 e3 c7 5e 5e 09 00 70 66 a6 c8 f7 7f 00 00 e8 53 e3 c7 5e 5e 00 00 40 67 a6 c8 f7 7f 00 00 e8 43 e3 c7 5e 5e 00 00 80 6b a6 c8 f7 7f 00 00 28 69 a5 c8 f7 7f 00 00 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 58 55 a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 a9 fa c7 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 f2 fc ff ff 48 8b cb e8 72 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
74        | 7ff7c85e6e20h   | 1411    | hex://logix/LogicEngine?satisfied#satisfied_g[64u](64u,64u)                                                   | bit satisfied<ulong>(ComparisonExpr<ulong> expr, ulong a, ulong b)                                            | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 f8 af a8 c7 f7 7f 00 00 ba 02 00 00 00 e8 9c ff c7 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 3f fc ff ff 48 8b ce e8 6f fc ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 50 63 a5 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 88 19 36 c8 f7 7f 00 00 ba 02 00 00 00 e8 2c ff c7 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 57 fc ff ff 48 8b ce e8 ef bc ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 33 e7 c7 5e 5e 00 0c e8 2b e7 c7 5e 5e 01 0b e8 23 e7 c7 5e 5e 02 0a e8 1b e7 c7 5e 5e 03 09 e8 13 e7 c7 5e 5e 04 08 e8 0b e7 c7 5e 5e 05 07 e8 03 e7 c7 5e 5e 06 06 e8 fb e6 c7 5e 5e 07 05 e8 f3 e6 c7 5e 5e 08 04 e8 eb e6 c7 5e 5e 09 03 e8 e3 e6 c7 5e 5e 0a 02 e8 db e6 c7 5e 5e 0b 01 e8 d3 e6 c7 5e 5e 0c 00 60 4d a6 c8 f7 7f 00 00 e8 c3 e6 c7 5e 5e 00 00 e8 4e a6 c8 f7 7f 00 00 e8 b3 e6 c7 5e 5e 00 09 e8 ab e6 c7 5e 5e 01 08 e8 a3 e6 c7 5e 5e 02 07 e8 9b e6 c7 5e 5e 03 06 e8 93 e6 c7 5e 5e 04 05 e8 8b e6 c7 5e 5e 05 04 e8 83 e6 c7 5e 5e 06 03 e8 7b e6 c7 5e 5e 07 02 e8 73 e6 c7 5e 5e 08 01 e8 6b e6 c7 5e 5e 09 00 c8 4f a6 c8 f7 7f 00 00 e8 5b e6 c7 5e 5e 00 03 e8 53 e6 c7 5e 5e 01 02 e8 4b e6 c7 5e 5e 02 01 e8 43 e6 c7 5e 5e 03 00 60 51 a6 c8 f7 7f 00 00 e8 33 e6 c7 5e 5e 00 00 d0 52 a6 c8 f7 7f 00 00 e8 23 e6 c7 5e 5e 00 09 e8 1b e6 c7 5e 5e 01 08 e8 13 e6 c7 5e 5e 02 07 e8 0b e6 c7 5e 5e 03 06 e8 03 e6 c7 5e 5e 04 05 e8 fb e5 c7 5e 5e 05 04 e8 f3 e5 c7 5e 5e 06 03 e8 eb e5 c7 5e 5e 07 02 e8 e3 e5 c7 5e 5e 08 01 e8 db e5 c7 5e 5e 09 00 60 53 a6 c8 f7 7f 00 00 e8 cb e5 c7 5e 5e 00 03 e8 c3 e5 c7 5e 5e 03 02 e8 bb e5 c7 5e 5e 06 01 e8 b3 e5 c7 5e 5e 09 00 40 56 a6 c8 f7 7f 00 00 e8 a3 e5 c7 5e 5e 00 00 10 57 a6 c8 f7 7f 00 00 e8 93 e5 c7 5e 5e 00 0a e8 8b e5 c7 5e 5e 01 09 e8 83 e5 c7 5e 5e 02 08 e8 7b e5 c7 5e 5e 03 07 e8 73 e5 c7 5e 5e 04 06 e8 6b e5 c7 5e 5e 05 05 e8 63 e5 c7 5e 5e 06 04 e8 5b e5 c7 5e 5e 07 03 e8 53 e5 c7 5e 5e 08 02 e8 4b e5 c7 5e 5e 09 01 e8 43 e5 c7 5e 5e 0a 00 70 57 a6 c8 f7 7f 00 00 e8 33 e5 c7 5e 5e 00 00 f0 58 a6 c8 f7 7f 00 00 e8 23 e5 c7 5e 5e 00 00 c0 59 a6 c8 f7 7f 00 00 e8 13 e5 c7 5e 5e 00 00 20 5a a6 c8 f7 7f 00 00 e8 03 e5 c7 5e 5e 00 00 80 5a a6 c8 f7 7f 00 00 e8 f3 e4 c7 5e 5e 00 09 e8 eb e4 c7 5e 5e 01 08 e8 e3 e4 c7 5e 5e 02 07 e8 db e4 c7 5e 5e 03 06 e8 d3 e4 c7 5e 5e 04 05 e8 cb e4 c7 5e 5e 05 04 e8 c3 e4 c7 5e 5e 06 03 e8 bb e4 c7 5e 5e 07 02 e8 b3 e4 c7 5e 5e 08 01 e8 ab e4 c7 5e 5e 09 00 10 5b a6 c8 f7 7f 00 00 e8 9b e4 c7 5e 5e 00 03 e8 93 e4 c7 5e 5e 03 02 e8 8b e4 c7 5e 5e 06 01 e8 83 e4 c7 5e 5e 09 00 f0 5d a6 c8 f7 7f 00 00 e8 73 e4 c7 5e 5e 00 00 c0 5e a6 c8 f7 7f 00 00 e8 63 e4 c7 5e 5e 00 09 e8 5b e4 c7 5e 5e 01 08 e8 53 e4 c7 5e 5e 02 07 e8 4b e4 c7 5e 5e 03 06 e8 43 e4 c7 5e 5e 04 05 e8 3b e4 c7 5e 5e 05 04 e8 33 e4 c7 5e 5e 06 03 e8 2b e4 c7 5e 5e 07 02 e8 23 e4 c7 5e 5e 08 01 e8 1b e4 c7 5e 5e 09 00 50 5f a6 c8 f7 7f 00 00 e8 0b e4 c7 5e 5e 00 03 e8 03 e4 c7 5e 5e 03 02 e8 fb e3 c7 5e 5e 06 01 e8 f3 e3 c7 5e 5e 09 00 30 62 a6 c8 f7 7f 00 00 e8 e3 e3 c7 5e 5e 00 00 00 63 a6 c8 f7 7f 00 00 e8 d3 e3 c7 5e 5e 00 09 e8 cb e3 c7 5e 5e 01 08 e8 c3 e3 c7 5e 5e 02 07 e8 bb e3 c7 5e 5e 03 06 e8 b3 e3 c7 5e 5e 04 05 e8 ab e3 c7 5e 5e 05 04 e8 a3 e3 c7 5e 5e 06 03 e8 9b e3 c7 5e 5e 07 02 e8 93 e3 c7 5e 5e 08 01 e8 8b e3 c7 5e 5e 09 00 90 63 a6 c8 f7 7f 00 00 e8 7b e3 c7 5e 5e 00 03 e8 73 e3 c7 5e 5e 03 02 e8 6b e3 c7 5e 5e 06 01 e8 63 e3 c7 5e 5e 09 00 70 66 a6 c8 f7 7f 00 00 e8 53 e3 c7 5e 5e 00 00 40 67 a6 c8 f7 7f 00 00 e8 43 e3 c7 5e 5e 00 00 80 6b a6 c8 f7 7f 00 00 28 69 a5 c8 f7 7f 00 00 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 58 55 a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 a9 fa c7 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 f2 fc ff ff 48 8b cb e8 72 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
75        | 7ff7c85e6e90h   | 1299    | hex://logix/LogicEngine?satisfied#satisfied_g[64i](64i,64i)                                                   | bit satisfied<long>(ComparisonExpr<long> expr, long a, long b)                                                | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 88 19 36 c8 f7 7f 00 00 ba 02 00 00 00 e8 2c ff c7 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 57 fc ff ff 48 8b ce e8 ef bc ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 33 e7 c7 5e 5e 00 0c e8 2b e7 c7 5e 5e 01 0b e8 23 e7 c7 5e 5e 02 0a e8 1b e7 c7 5e 5e 03 09 e8 13 e7 c7 5e 5e 04 08 e8 0b e7 c7 5e 5e 05 07 e8 03 e7 c7 5e 5e 06 06 e8 fb e6 c7 5e 5e 07 05 e8 f3 e6 c7 5e 5e 08 04 e8 eb e6 c7 5e 5e 09 03 e8 e3 e6 c7 5e 5e 0a 02 e8 db e6 c7 5e 5e 0b 01 e8 d3 e6 c7 5e 5e 0c 00 60 4d a6 c8 f7 7f 00 00 e8 c3 e6 c7 5e 5e 00 00 e8 4e a6 c8 f7 7f 00 00 e8 b3 e6 c7 5e 5e 00 09 e8 ab e6 c7 5e 5e 01 08 e8 a3 e6 c7 5e 5e 02 07 e8 9b e6 c7 5e 5e 03 06 e8 93 e6 c7 5e 5e 04 05 e8 8b e6 c7 5e 5e 05 04 e8 83 e6 c7 5e 5e 06 03 e8 7b e6 c7 5e 5e 07 02 e8 73 e6 c7 5e 5e 08 01 e8 6b e6 c7 5e 5e 09 00 c8 4f a6 c8 f7 7f 00 00 e8 5b e6 c7 5e 5e 00 03 e8 53 e6 c7 5e 5e 01 02 e8 4b e6 c7 5e 5e 02 01 e8 43 e6 c7 5e 5e 03 00 60 51 a6 c8 f7 7f 00 00 e8 33 e6 c7 5e 5e 00 00 d0 52 a6 c8 f7 7f 00 00 e8 23 e6 c7 5e 5e 00 09 e8 1b e6 c7 5e 5e 01 08 e8 13 e6 c7 5e 5e 02 07 e8 0b e6 c7 5e 5e 03 06 e8 03 e6 c7 5e 5e 04 05 e8 fb e5 c7 5e 5e 05 04 e8 f3 e5 c7 5e 5e 06 03 e8 eb e5 c7 5e 5e 07 02 e8 e3 e5 c7 5e 5e 08 01 e8 db e5 c7 5e 5e 09 00 60 53 a6 c8 f7 7f 00 00 e8 cb e5 c7 5e 5e 00 03 e8 c3 e5 c7 5e 5e 03 02 e8 bb e5 c7 5e 5e 06 01 e8 b3 e5 c7 5e 5e 09 00 40 56 a6 c8 f7 7f 00 00 e8 a3 e5 c7 5e 5e 00 00 10 57 a6 c8 f7 7f 00 00 e8 93 e5 c7 5e 5e 00 0a e8 8b e5 c7 5e 5e 01 09 e8 83 e5 c7 5e 5e 02 08 e8 7b e5 c7 5e 5e 03 07 e8 73 e5 c7 5e 5e 04 06 e8 6b e5 c7 5e 5e 05 05 e8 63 e5 c7 5e 5e 06 04 e8 5b e5 c7 5e 5e 07 03 e8 53 e5 c7 5e 5e 08 02 e8 4b e5 c7 5e 5e 09 01 e8 43 e5 c7 5e 5e 0a 00 70 57 a6 c8 f7 7f 00 00 e8 33 e5 c7 5e 5e 00 00 f0 58 a6 c8 f7 7f 00 00 e8 23 e5 c7 5e 5e 00 00 c0 59 a6 c8 f7 7f 00 00 e8 13 e5 c7 5e 5e 00 00 20 5a a6 c8 f7 7f 00 00 e8 03 e5 c7 5e 5e 00 00 80 5a a6 c8 f7 7f 00 00 e8 f3 e4 c7 5e 5e 00 09 e8 eb e4 c7 5e 5e 01 08 e8 e3 e4 c7 5e 5e 02 07 e8 db e4 c7 5e 5e 03 06 e8 d3 e4 c7 5e 5e 04 05 e8 cb e4 c7 5e 5e 05 04 e8 c3 e4 c7 5e 5e 06 03 e8 bb e4 c7 5e 5e 07 02 e8 b3 e4 c7 5e 5e 08 01 e8 ab e4 c7 5e 5e 09 00 10 5b a6 c8 f7 7f 00 00 e8 9b e4 c7 5e 5e 00 03 e8 93 e4 c7 5e 5e 03 02 e8 8b e4 c7 5e 5e 06 01 e8 83 e4 c7 5e 5e 09 00 f0 5d a6 c8 f7 7f 00 00 e8 73 e4 c7 5e 5e 00 00 c0 5e a6 c8 f7 7f 00 00 e8 63 e4 c7 5e 5e 00 09 e8 5b e4 c7 5e 5e 01 08 e8 53 e4 c7 5e 5e 02 07 e8 4b e4 c7 5e 5e 03 06 e8 43 e4 c7 5e 5e 04 05 e8 3b e4 c7 5e 5e 05 04 e8 33 e4 c7 5e 5e 06 03 e8 2b e4 c7 5e 5e 07 02 e8 23 e4 c7 5e 5e 08 01 e8 1b e4 c7 5e 5e 09 00 50 5f a6 c8 f7 7f 00 00 e8 0b e4 c7 5e 5e 00 03 e8 03 e4 c7 5e 5e 03 02 e8 fb e3 c7 5e 5e 06 01 e8 f3 e3 c7 5e 5e 09 00 30 62 a6 c8 f7 7f 00 00 e8 e3 e3 c7 5e 5e 00 00 00 63 a6 c8 f7 7f 00 00 e8 d3 e3 c7 5e 5e 00 09 e8 cb e3 c7 5e 5e 01 08 e8 c3 e3 c7 5e 5e 02 07 e8 bb e3 c7 5e 5e 03 06 e8 b3 e3 c7 5e 5e 04 05 e8 ab e3 c7 5e 5e 05 04 e8 a3 e3 c7 5e 5e 06 03 e8 9b e3 c7 5e 5e 07 02 e8 93 e3 c7 5e 5e 08 01 e8 8b e3 c7 5e 5e 09 00 90 63 a6 c8 f7 7f 00 00 e8 7b e3 c7 5e 5e 00 03 e8 73 e3 c7 5e 5e 03 02 e8 6b e3 c7 5e 5e 06 01 e8 63 e3 c7 5e 5e 09 00 70 66 a6 c8 f7 7f 00 00 e8 53 e3 c7 5e 5e 00 00 40 67 a6 c8 f7 7f 00 00 e8 43 e3 c7 5e 5e 00 00 80 6b a6 c8 f7 7f 00 00 28 69 a5 c8 f7 7f 00 00 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 58 55 a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 a9 fa c7 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 f2 fc ff ff 48 8b cb e8 72 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
76        | 7ff7c85e7310h   | 147     | hex://logix/LogicEngine?satisfied#satisfied_g[8u](v128x8u,v128x8u)                                            | bit satisfied<byte>(ComparisonExpr<Vector128<byte>> expr, Vector128<byte> a, Vector128<byte> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 58 55 a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 a9 fa c7 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 f2 fc ff ff 48 8b cb e8 72 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
77        | 7ff7c85e73b0h   | 147     | hex://logix/LogicEngine?satisfied#satisfied_g[8i](v128x8i,v128x8i)                                            | bit satisfied<sbyte>(ComparisonExpr<Vector128<sbyte>> expr, Vector128<sbyte> a, Vector128<sbyte> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 08 5d a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 09 fa c7 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 82 fd ff ff 48 8b cb e8 b2 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
78        | 7ff7c85e7450h   | 147     | hex://logix/LogicEngine?satisfied#satisfied_g[16u](v128x16u,v128x16u)                                         | bit satisfied<ushort>(ComparisonExpr<Vector128<ushort>> expr, Vector128<ushort> a, Vector128<ushort> b)       | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 48 61 a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 69 f9 c7 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 72 fd ff ff 48 8b cb e8 f2 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
79        | 7ff7c85e74f0h   | 1176    | hex://logix/LogicEngine?satisfied#satisfied_g[16i](v128x16i,v128x16i)                                         | bit satisfied<short>(ComparisonExpr<Vector128<short>> expr, Vector128<short> a, Vector128<short> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 88 65 a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 c9 f8 c7 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 62 fd ff ff 48 8b cb e8 42 c6 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 b3 e0 c7 5e 5e 00 09 e8 ab e0 c7 5e 5e 01 08 e8 a3 e0 c7 5e 5e 02 07 e8 9b e0 c7 5e 5e 03 06 e8 93 e0 c7 5e 5e 04 05 e8 8b e0 c7 5e 5e 05 04 e8 83 e0 c7 5e 5e 06 03 e8 7b e0 c7 5e 5e 07 02 e8 73 e0 c7 5e 5e 08 01 e8 6b e0 c7 5e 5e 09 00 d0 67 a6 c8 f7 7f 00 00 e8 5b e0 c7 5e 5e 00 03 e8 53 e0 c7 5e 5e 03 02 e8 4b e0 c7 5e 5e 06 01 e8 43 e0 c7 5e 5e 09 00 b0 6a a6 c8 f7 7f 00 00 e8 33 e0 c7 5e 5e 00 09 e8 2b e0 c7 5e 5e 01 08 e8 23 e0 c7 5e 5e 02 07 e8 1b e0 c7 5e 5e 03 06 e8 13 e0 c7 5e 5e 04 05 e8 0b e0 c7 5e 5e 05 04 e8 03 e0 c7 5e 5e 06 03 e8 fb df c7 5e 5e 07 02 e8 f3 df c7 5e 5e 08 01 e8 eb df c7 5e 5e 09 00 10 6c a6 c8 f7 7f 00 00 e8 db df c7 5e 5e 00 03 e8 d3 df c7 5e 5e 03 02 e8 cb df c7 5e 5e 06 01 e8 c3 df c7 5e 5e 09 00 f0 6e a6 c8 f7 7f 00 00 e8 b3 df c7 5e 5e 00 00 c0 6f a6 c8 f7 7f 00 00 e8 a3 df c7 5e 5e 00 09 e8 9b df c7 5e 5e 01 08 e8 93 df c7 5e 5e 02 07 e8 8b df c7 5e 5e 03 06 e8 83 df c7 5e 5e 04 05 e8 7b df c7 5e 5e 05 04 e8 73 df c7 5e 5e 06 03 e8 6b df c7 5e 5e 07 02 e8 63 df c7 5e 5e 08 01 e8 5b df c7 5e 5e 09 00 50 70 a6 c8 f7 7f 00 00 e8 4b df c7 5e 5e 00 03 e8 43 df c7 5e 5e 01 02 e8 3b df c7 5e 5e 02 01 e8 33 df c7 5e 5e 03 00 e8 71 a6 c8 f7 7f 00 00 e8 23 df c7 5e 5e 00 03 e8 1b df c7 5e 5e 03 02 e8 13 df c7 5e 5e 06 01 e8 0b df c7 5e 5e 09 00 18 74 a6 c8 f7 7f 00 00 e8 fb de c7 5e 5e 00 00 e8 74 a6 c8 f7 7f 00 00 e8 eb de c7 5e 5e 00 00 48 75 a6 c8 f7 7f 00 00 e8 db de c7 5e 5e 00 00 a8 75 a6 c8 f7 7f 00 00 e8 cb de c7 5e 5e 00 09 e8 c3 de c7 5e 5e 01 08 e8 bb de c7 5e 5e 02 07 e8 b3 de c7 5e 5e 03 06 e8 ab de c7 5e 5e 04 05 e8 a3 de c7 5e 5e 05 04 e8 9b de c7 5e 5e 06 03 e8 93 de c7 5e 5e 07 02 e8 8b de c7 5e 5e 08 01 e8 83 de c7 5e 5e 09 00 38 76 a6 c8 f7 7f 00 00 e8 73 de c7 5e 5e 00 03 e8 6b de c7 5e 5e 03 02 e8 63 de c7 5e 5e 06 01 e8 5b de c7 5e 5e 09 00 18 79 a6 c8 f7 7f 00 00 e8 4b de c7 5e 5e 00 0c e8 43 de c7 5e 5e 01 0b e8 3b de c7 5e 5e 02 0a e8 33 de c7 5e 5e 03 09 e8 2b de c7 5e 5e 04 08 e8 23 de c7 5e 5e 05 07 e8 1b de c7 5e 5e 06 06 e8 13 de c7 5e 5e 07 05 e8 0b de c7 5e 5e 08 04 e8 03 de c7 5e 5e 09 03 e8 fb dd c7 5e 5e 0a 02 e8 f3 dd c7 5e 5e 0b 01 e8 eb dd c7 5e 5e 0c 00 18 7a a6 c8 f7 7f 00 00 e8 db dd c7 5e 5e 00 00 a0 7b a6 c8 f7 7f 00 00 e8 cb dd c7 5e 5e 00 09 e8 c3 dd c7 5e 5e 01 08 e8 bb dd c7 5e 5e 02 07 e8 b3 dd c7 5e 5e 03 06 e8 ab dd c7 5e 5e 04 05 e8 a3 dd c7 5e 5e 05 04 e8 9b dd c7 5e 5e 06 03 e8 93 dd c7 5e 5e 07 02 e8 8b dd c7 5e 5e 08 01 e8 83 dd c7 5e 5e 09 00 80 7c a6 c8 f7 7f 00 00 e8 73 dd c7 5e 5e 00 03 e8 6b dd c7 5e 5e 01 02 e8 63 dd c7 5e 5e 02 01 e8 5b dd c7 5e 5e 03 00 18 7e a6 c8 f7 7f 00 00 e8 4b dd c7 5e 5e 00 00 88 7f a6 c8 f7 7f 00 00 e8 3b dd c7 5e 5e 00 09 e8 33 dd c7 5e 5e 01 08 e8 2b dd c7 5e 5e 02 07 e8 23 dd c7 5e 5e 03 06 e8 1b dd c7 5e 5e 04 05 e8 13 dd c7 5e 5e 05 04 e8 0b dd c7 5e 5e 06 03 e8 03 dd c7 5e 5e 07 02 e8 fb dc c7 5e 5e 08 01 e8 f3 dc c7 5e 5e 09 00 18 80 a6 c8 f7 7f 00 00 e8 e3 dc c7 5e 5e 00 03 e8 db dc c7 5e 5e 03 02 e8 d3 dc c7 5e 5e 06 01 e8 cb dc c7 5e 5e 09 00 f8 82 a6 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
80        | 7ff7c85e7990h   | 147     | hex://logix/LogicEngine?satisfied#satisfied_g[32u](v128x32u,v128x32u)                                         | bit satisfied<uint>(ComparisonExpr<Vector128<uint>> expr, Vector128<uint> a, Vector128<uint> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 c8 69 a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 29 f4 c7 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 82 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
81        | 7ff7c85e7a30h   | 147     | hex://logix/LogicEngine?satisfied#satisfied_g[32i](v128x32i,v128x32i)                                         | bit satisfied<int>(ComparisonExpr<Vector128<int>> expr, Vector128<int> a, Vector128<int> b)                   | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 08 6e a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 89 f3 c7 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 c2 fb ff ff 48 8b cb e8 c2 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
82        | 7ff7c85e7ad0h   | 147     | hex://logix/LogicEngine?satisfied#satisfied_g[64u](v128x64u,v128x64u)                                         | bit satisfied<ulong>(ComparisonExpr<Vector128<ulong>> expr, Vector128<ulong> a, Vector128<ulong> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 30 73 a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 e9 f2 c7 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 b2 fb ff ff 48 8b cb e8 32 fc ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
83        | 7ff7c85e7b70h   | 1335    | hex://logix/LogicEngine?satisfied#satisfied_g[64i](v128x64i,v128x64i)                                         | bit satisfied<long>(ComparisonExpr<Vector128<long>> expr, Vector128<long> a, Vector128<long> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 30 78 a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 49 f2 c7 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 ea fb ff ff 48 8b cb e8 62 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 33 da c7 5e 5e 00 00 c8 83 a6 c8 f7 7f 00 00 e8 23 da c7 5e 5e 00 0a e8 1b da c7 5e 5e 01 09 e8 13 da c7 5e 5e 02 08 e8 0b da c7 5e 5e 03 07 e8 03 da c7 5e 5e 04 06 e8 fb d9 c7 5e 5e 05 05 e8 f3 d9 c7 5e 5e 06 04 e8 eb d9 c7 5e 5e 07 03 e8 e3 d9 c7 5e 5e 08 02 e8 db d9 c7 5e 5e 09 01 e8 d3 d9 c7 5e 5e 0a 00 28 84 a6 c8 f7 7f 00 00 e8 c3 d9 c7 5e 5e 00 00 a8 85 a6 c8 f7 7f 00 00 e8 b3 d9 c7 5e 5e 00 00 78 86 a6 c8 f7 7f 00 00 e8 a3 d9 c7 5e 5e 00 00 d8 86 a6 c8 f7 7f 00 00 e8 93 d9 c7 5e 5e 00 00 38 87 a6 c8 f7 7f 00 00 e8 83 d9 c7 5e 5e 00 09 e8 7b d9 c7 5e 5e 01 08 e8 73 d9 c7 5e 5e 02 07 e8 6b d9 c7 5e 5e 03 06 e8 63 d9 c7 5e 5e 04 05 e8 5b d9 c7 5e 5e 05 04 e8 53 d9 c7 5e 5e 06 03 e8 4b d9 c7 5e 5e 07 02 e8 43 d9 c7 5e 5e 08 01 e8 3b d9 c7 5e 5e 09 00 c8 87 a6 c8 f7 7f 00 00 e8 2b d9 c7 5e 5e 00 03 e8 23 d9 c7 5e 5e 03 02 e8 1b d9 c7 5e 5e 06 01 e8 13 d9 c7 5e 5e 09 00 a8 8a a6 c8 f7 7f 00 00 e8 03 d9 c7 5e 5e 00 00 78 8b a6 c8 f7 7f 00 00 e8 f3 d8 c7 5e 5e 00 09 e8 eb d8 c7 5e 5e 01 08 e8 e3 d8 c7 5e 5e 02 07 e8 db d8 c7 5e 5e 03 06 e8 d3 d8 c7 5e 5e 04 05 e8 cb d8 c7 5e 5e 05 04 e8 c3 d8 c7 5e 5e 06 03 e8 bb d8 c7 5e 5e 07 02 e8 b3 d8 c7 5e 5e 08 01 e8 ab d8 c7 5e 5e 09 00 08 8c a6 c8 f7 7f 00 00 e8 9b d8 c7 5e 5e 00 03 e8 93 d8 c7 5e 5e 03 02 e8 8b d8 c7 5e 5e 06 01 e8 83 d8 c7 5e 5e 09 00 e8 8e a6 c8 f7 7f 00 00 e8 73 d8 c7 5e 5e 00 00 b8 8f a6 c8 f7 7f 00 00 e8 63 d8 c7 5e 5e 00 09 e8 5b d8 c7 5e 5e 01 08 e8 53 d8 c7 5e 5e 02 07 e8 4b d8 c7 5e 5e 03 06 e8 43 d8 c7 5e 5e 04 05 e8 3b d8 c7 5e 5e 05 04 e8 33 d8 c7 5e 5e 06 03 e8 2b d8 c7 5e 5e 07 02 e8 23 d8 c7 5e 5e 08 01 e8 1b d8 c7 5e 5e 09 00 48 90 a6 c8 f7 7f 00 00 e8 0b d8 c7 5e 5e 00 03 e8 03 d8 c7 5e 5e 03 02 e8 fb d7 c7 5e 5e 06 01 e8 f3 d7 c7 5e 5e 09 00 28 93 a6 c8 f7 7f 00 00 e8 e3 d7 c7 5e 5e 00 00 f8 93 a6 c8 f7 7f 00 00 e8 d3 d7 c7 5e 5e 00 09 e8 cb d7 c7 5e 5e 01 08 e8 c3 d7 c7 5e 5e 02 07 e8 bb d7 c7 5e 5e 03 06 e8 b3 d7 c7 5e 5e 04 05 e8 ab d7 c7 5e 5e 05 04 e8 a3 d7 c7 5e 5e 06 03 e8 9b d7 c7 5e 5e 07 02 e8 93 d7 c7 5e 5e 08 01 e8 8b d7 c7 5e 5e 09 00 88 94 a6 c8 f7 7f 00 00 e8 7b d7 c7 5e 5e 00 03 e8 73 d7 c7 5e 5e 03 02 e8 6b d7 c7 5e 5e 06 01 e8 63 d7 c7 5e 5e 09 00 68 97 a6 c8 f7 7f 00 00 e8 53 d7 c7 5e 5e 00 00 38 98 a6 c8 f7 7f 00 00 e8 43 d7 c7 5e 5e 00 09 e8 3b d7 c7 5e 5e 01 08 e8 33 d7 c7 5e 5e 02 07 e8 2b d7 c7 5e 5e 03 06 e8 23 d7 c7 5e 5e 04 05 e8 1b d7 c7 5e 5e 05 04 e8 13 d7 c7 5e 5e 06 03 e8 0b d7 c7 5e 5e 07 02 e8 03 d7 c7 5e 5e 08 01 e8 fb d6 c7 5e 5e 09 00 c8 98 a6 c8 f7 7f 00 00 e8 eb d6 c7 5e 5e 00 03 e8 e3 d6 c7 5e 5e 03 02 e8 db d6 c7 5e 5e 06 01 e8 d3 d6 c7 5e 5e 09 00 a8 9b a6 c8 f7 7f 00 00 e8 c3 d6 c7 5e 5e 00 00 78 9c a6 c8 f7 7f 00 00 e8 b3 d6 c7 5e 5e 00 09 e8 ab d6 c7 5e 5e 01 08 e8 a3 d6 c7 5e 5e 02 07 e8 9b d6 c7 5e 5e 03 06 e8 93 d6 c7 5e 5e 04 05 e8 8b d6 c7 5e 5e 05 04 e8 83 d6 c7 5e 5e 06 03 e8 7b d6 c7 5e 5e 07 02 e8 73 d6 c7 5e 5e 08 01 e8 6b d6 c7 5e 5e 09 00 08 9d a6 c8 f7 7f 00 00 e8 5b d6 c7 5e 5e 00 03 e8 53 d6 c7 5e 5e 01 02 e8 4b d6 c7 5e 5e 02 01 e8 43 d6 c7 5e 5e 03 00 a0 9e a6 c8 f7 7f 00 00 28 79 a5 c8 f7 7f 00 00 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 10 82 a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 a9 ed c7 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 da f8 ff ff 48 8b cb e8 b2 c2 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
84        | 7ff7c85e8010h   | 151     | hex://logix/LogicEngine?satisfied#satisfied_g[8u](v256x8u,v256x8u)                                            | bit satisfied<byte>(ComparisonExpr<Vector256<byte>> expr, Vector256<byte> a, Vector256<byte> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 10 82 a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 a9 ed c7 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 da f8 ff ff 48 8b cb e8 b2 c2 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
85        | 7ff7c85e80b0h   | 151     | hex://logix/LogicEngine?satisfied#satisfied_g[8i](v256x8i,v256x8i)                                            | bit satisfied<sbyte>(ComparisonExpr<Vector256<sbyte>> expr, Vector256<sbyte> a, Vector256<sbyte> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 c0 89 a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 09 ed c7 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 f2 fb ff ff 48 8b cb e8 22 c3 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
86        | 7ff7c85e8150h   | 151     | hex://logix/LogicEngine?satisfied#satisfied_g[16u](v256x16u,v256x16u)                                         | bit satisfied<ushort>(ComparisonExpr<Vector256<ushort>> expr, Vector256<ushort> a, Vector256<ushort> b)       | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 00 8e a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 69 ec c7 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 92 c3 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
87        | 7ff7c85e81f0h   | 151     | hex://logix/LogicEngine?satisfied#satisfied_g[16i](v256x16i,v256x16i)                                         | bit satisfied<short>(ComparisonExpr<Vector256<short>> expr, Vector256<short> a, Vector256<short> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 40 92 a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 c9 eb c7 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 d2 fb ff ff 48 8b cb e8 12 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
88        | 7ff7c85e8290h   | 151     | hex://logix/LogicEngine?satisfied#satisfied_g[32u](v256x32u,v256x32u)                                         | bit satisfied<uint>(ComparisonExpr<Vector256<uint>> expr, Vector256<uint> a, Vector256<uint> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 80 96 a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 29 eb c7 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 c2 fb ff ff 48 8b cb e8 82 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
89        | 7ff7c85e8330h   | 408     | hex://logix/LogicEngine?satisfied#satisfied_g[32i](v256x32i,v256x32i)                                         | bit satisfied<int>(ComparisonExpr<Vector256<int>> expr, Vector256<int> a, Vector256<int> b)                   | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 c0 9a a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 89 ea c7 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 b2 fb ff ff 48 8b cb e8 f2 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 73 d2 c7 5e 5e 00 03 e8 6b d2 c7 5e 5e 03 02 e8 63 d2 c7 5e 5e 06 01 e8 5b d2 c7 5e 5e 09 00 d0 a0 a6 c8 f7 7f 00 00 e8 4b d2 c7 5e 5e 00 00 a0 a1 a6 c8 f7 7f 00 00 e8 3b d2 c7 5e 5e 00 00 00 a2 a6 c8 f7 7f 00 00 e8 2b d2 c7 5e 5e 00 00 60 a2 a6 c8 f7 7f 00 00 e8 1b d2 c7 5e 5e 00 09 e8 13 d2 c7 5e 5e 01 08 e8 0b d2 c7 5e 5e 02 07 e8 03 d2 c7 5e 5e 03 06 e8 fb d1 c7 5e 5e 04 05 e8 f3 d1 c7 5e 5e 05 04 e8 eb d1 c7 5e 5e 06 03 e8 e3 d1 c7 5e 5e 07 02 e8 db d1 c7 5e 5e 08 01 e8 d3 d1 c7 5e 5e 09 00 f0 a2 a6 c8 f7 7f 00 00 e8 c3 d1 c7 5e 5e 00 03 e8 bb d1 c7 5e 5e 03 02 e8 b3 d1 c7 5e 5e 06 01 e8 ab d1 c7 5e 5e 09 00 d0 a5 a6 c8 f7 7f 00 00 e8 9b d1 c7 5e 5e 00 00 b8 a8 a6 c8 f7 7f 00 00 e8 8b d1 c7 5e 5e 00 00 30 a9 a6 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
90        | 7ff7c85e87d0h   | 151     | hex://logix/LogicEngine?satisfied#satisfied_g[64u](v256x64u,v256x64u)                                         | bit satisfied<ulong>(ComparisonExpr<Vector256<ulong>> expr, Vector256<ulong> a, Vector256<ulong> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 e8 9f a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 e9 e5 c7 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 a2 f7 ff ff 48 8b cb e8 e2 fb ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
91        | 7ff7c85e8870h   | 151     | hex://logix/LogicEngine?satisfied#satisfied_g[64i](v256x64i,v256x64i)                                         | bit satisfied<long>(ComparisonExpr<Vector256<long>> expr, Vector256<long> a, Vector256<long> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 e8 a4 a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 49 e5 c7 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 9a fb ff ff 48 8b cb e8 c2 c4 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
92        | 7ff7c85e8910h   | 35      | hex://logix/LogicEngine?eval#eval_()                                                                          | bit eval(ILogicExpr expr)                                                                                     | 0f 1f 44 00 00 48 b8 98 23 db c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
93        | 7ff7c85e8940h   | 607     | hex://logix/LogicEngine?satisfied#satisfied_(1u,1u)                                                           | bit satisfied(ComparisonExpr expr, bit a, bit b)                                                              | 57 56 48 83 ec 28 48 8b f1 41 8b f8 8b 0e 48 8b 4e 18 83 79 08 00 76 48 48 8b 49 10 49 bb 80 0c 61 c7 f7 7f 00 00 39 09 ff 15 12 83 02 ff 48 8b 4e 18 83 79 08 01 76 28 48 8b 49 18 8b d7 49 bb 88 0c 61 c7 f7 7f 00 00 39 09 ff 15 f8 82 02 ff 48 8b ce e8 00 9a 7c ff 90 48 83 c4 28 5e 5f c3 e8 2b 74 da 5e cc 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 08 86 a5 c8 f7 7f 00 00 55 41 57 41 56 57 56 53 48 83 ec 48 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 4e 10 48 8b 5f 10 41 be b6 00 00 00 41 bf 01 00 00 00 8b 49 08 3b 4b 08 0f 85 cb 00 00 00 e8 70 a4 7c ff 48 8b c8 49 bb 90 0c 61 c7 f7 7f 00 00 39 09 ff 15 7b 82 02 ff 48 89 45 c8 48 8b 4d c8 49 bb 98 0c 61 c7 f7 7f 00 00 39 09 ff 15 69 82 02 ff 85 c0 74 51 48 8b 4d c8 49 bb a0 0c 61 c7 f7 7f 00 00 39 09 ff 15 57 82 02 ff 48 8b d0 48 8b ce e8 84 af 7c ff 48 8b ce e8 3c 99 7c ff 8b d8 48 8b cf e8 32 99 7c ff 3b d8 75 32 48 8b 4d c8 49 bb 98 0c 61 c7 f7 7f 00 00 39 09 ff 15 18 82 02 ff 85 c0 75 af 48 8b 4d c8 49 bb a8 0c 61 c7 f7 7f 00 00 39 09 ff 15 0e 82 02 ff eb 18 48 8b cc e8 7e 00 00 00 90 33 c0 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 8b f1 8b 7b 08 b9 19 02 00 00 48 ba 78 e6 aa c7 f7 7f 00 00 e8 d1 7a da 5e 48 8b d8 b9 25 02 00 00 48 ba 78 e6 aa c7 f7 7f 00 00 e8 ba 7a da 5e 4c 8b c8 4c 8d 45 d0 45 88 38 45 89 70 04 4c 8b c3 8b ce 8b d7 48 8b 45 d0 48 89 44 24 20 e8 d7 c3 15 ff 48 8b c8 e8 df 2d bf 5e cc 55 41 57 41 56 57 56 53 48 83 ec 38 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c8 00 74 16 48 8b 4d c8 49 bb a8 0c 61 c7 f7 7f 00 00 39 09 ff 15 50 81 02 ff 90 48 83 c4 38 5b 5e 5f 41 5e 41 5f 5d c3 00 00 19 0c 07 00 0c 82 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 19 0c 07 00 0c 62 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 00 00 00 00 00 00 00
94        | 7ff7c85e89c0h   | 479     | hex://logix/LogicEngine?equal#equal_()                                                                        | bit equal(VariedLogicExpr a, VariedLogicExpr b)                                                               | 55 41 57 41 56 57 56 53 48 83 ec 48 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 4e 10 48 8b 5f 10 41 be b6 00 00 00 41 bf 01 00 00 00 8b 49 08 3b 4b 08 0f 85 cb 00 00 00 e8 70 a4 7c ff 48 8b c8 49 bb 90 0c 61 c7 f7 7f 00 00 39 09 ff 15 7b 82 02 ff 48 89 45 c8 48 8b 4d c8 49 bb 98 0c 61 c7 f7 7f 00 00 39 09 ff 15 69 82 02 ff 85 c0 74 51 48 8b 4d c8 49 bb a0 0c 61 c7 f7 7f 00 00 39 09 ff 15 57 82 02 ff 48 8b d0 48 8b ce e8 84 af 7c ff 48 8b ce e8 3c 99 7c ff 8b d8 48 8b cf e8 32 99 7c ff 3b d8 75 32 48 8b 4d c8 49 bb 98 0c 61 c7 f7 7f 00 00 39 09 ff 15 18 82 02 ff 85 c0 75 af 48 8b 4d c8 49 bb a8 0c 61 c7 f7 7f 00 00 39 09 ff 15 0e 82 02 ff eb 18 48 8b cc e8 7e 00 00 00 90 33 c0 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 8b f1 8b 7b 08 b9 19 02 00 00 48 ba 78 e6 aa c7 f7 7f 00 00 e8 d1 7a da 5e 48 8b d8 b9 25 02 00 00 48 ba 78 e6 aa c7 f7 7f 00 00 e8 ba 7a da 5e 4c 8b c8 4c 8d 45 d0 45 88 38 45 89 70 04 4c 8b c3 8b ce 8b d7 48 8b 45 d0 48 89 44 24 20 e8 d7 c3 15 ff 48 8b c8 e8 df 2d bf 5e cc 55 41 57 41 56 57 56 53 48 83 ec 38 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c8 00 74 16 48 8b 4d c8 49 bb a8 0c 61 c7 f7 7f 00 00 39 09 ff 15 50 81 02 ff 90 48 83 c4 38 5b 5e 5f 41 5e 41 5f 5d c3 00 00 19 0c 07 00 0c 82 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 19 0c 07 00 0c 62 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 00 00 00 00 00 00 00
