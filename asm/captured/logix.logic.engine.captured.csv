Sequence  | Address         | Length  | Uri                                                                                                           | OpSig                                                                                                         | Data
0         | 7ff7c8542800h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[8u]()                                                         | bit eval<byte>(ILogicExpr<byte> expr)                                                                         | 0f 1f 44 00 00 48 b8 90 66 da c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
1         | 7ff7c8542830h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[8i]()                                                         | bit eval<sbyte>(ILogicExpr<sbyte> expr)                                                                       | 0f 1f 44 00 00 48 b8 90 66 da c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
2         | 7ff7c8542860h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[16u]()                                                        | bit eval<ushort>(ILogicExpr<ushort> expr)                                                                     | 0f 1f 44 00 00 48 b8 90 66 da c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
3         | 7ff7c8542890h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[16i]()                                                        | bit eval<short>(ILogicExpr<short> expr)                                                                       | 0f 1f 44 00 00 48 b8 90 66 da c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
4         | 7ff7c85428c0h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[32u]()                                                        | bit eval<uint>(ILogicExpr<uint> expr)                                                                         | 0f 1f 44 00 00 48 b8 90 66 da c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
5         | 7ff7c85428f0h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[32i]()                                                        | bit eval<int>(ILogicExpr<int> expr)                                                                           | 0f 1f 44 00 00 48 b8 90 66 da c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
6         | 7ff7c8542920h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[64u]()                                                        | bit eval<ulong>(ILogicExpr<ulong> expr)                                                                       | 0f 1f 44 00 00 48 b8 90 66 da c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
7         | 7ff7c8542950h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[64i]()                                                        | bit eval<long>(ILogicExpr<long> expr)                                                                         | 0f 1f 44 00 00 48 b8 90 66 da c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
8         | 7ff7c8542980h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[8u]()                                                        | LiteralExpr<byte> eval<byte>(IExpr<byte> expr)                                                                | 0f 1f 44 00 00 48 b8 88 24 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
9         | 7ff7c85429b0h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[8i]()                                                        | LiteralExpr<sbyte> eval<sbyte>(IExpr<sbyte> expr)                                                             | 0f 1f 44 00 00 48 b8 b8 24 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
10        | 7ff7c85429e0h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[16u]()                                                       | LiteralExpr<ushort> eval<ushort>(IExpr<ushort> expr)                                                          | 0f 1f 44 00 00 48 b8 d8 24 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
11        | 7ff7c8542a10h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[16i]()                                                       | LiteralExpr<short> eval<short>(IExpr<short> expr)                                                             | 0f 1f 44 00 00 48 b8 f8 24 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
12        | 7ff7c8542a40h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[32u]()                                                       | LiteralExpr<uint> eval<uint>(IExpr<uint> expr)                                                                | 0f 1f 44 00 00 48 b8 18 25 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
13        | 7ff7c8542a70h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[32i]()                                                       | LiteralExpr<int> eval<int>(IExpr<int> expr)                                                                   | 0f 1f 44 00 00 48 b8 38 25 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
14        | 7ff7c8542aa0h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[64u]()                                                       | LiteralExpr<ulong> eval<ulong>(IExpr<ulong> expr)                                                             | 0f 1f 44 00 00 48 b8 58 25 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
15        | 7ff7c8542ad0h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[64i]()                                                       | LiteralExpr<long> eval<long>(IExpr<long> expr)                                                                | 0f 1f 44 00 00 48 b8 78 25 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
16        | 7ff7c8542b00h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[8u]()                                                           | LiteralExpr<byte> eval<byte>(IComparisonExpr<byte> expr)                                                      | 0f 1f 44 00 00 48 b8 20 85 3c c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
17        | 7ff7c8542b30h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[8i]()                                                           | LiteralExpr<sbyte> eval<sbyte>(IComparisonExpr<sbyte> expr)                                                   | 0f 1f 44 00 00 48 b8 10 86 3c c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
18        | 7ff7c8542b60h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[16u]()                                                          | LiteralExpr<ushort> eval<ushort>(IComparisonExpr<ushort> expr)                                                | 0f 1f 44 00 00 48 b8 d0 86 3c c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
19        | 7ff7c8542b90h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[16i]()                                                          | LiteralExpr<short> eval<short>(IComparisonExpr<short> expr)                                                   | 0f 1f 44 00 00 48 b8 90 87 3c c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
20        | 7ff7c8542bc0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[32u]()                                                          | LiteralExpr<uint> eval<uint>(IComparisonExpr<uint> expr)                                                      | 0f 1f 44 00 00 48 b8 50 88 3c c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
21        | 7ff7c8542bf0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[32i]()                                                          | LiteralExpr<int> eval<int>(IComparisonExpr<int> expr)                                                         | 0f 1f 44 00 00 48 b8 30 48 78 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
22        | 7ff7c8542c20h   | 1064    | hex://logix/logic.engine?eval#eval_cmp_expr_g[64i]()                                                          | LiteralExpr<long> eval<long>(IComparisonExpr<long> expr)                                                      | 0f 1f 44 00 00 48 b8 f0 48 78 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 f3 29 d2 5e 5e 00 0c e8 eb 29 d2 5e 5e 01 0b e8 e3 29 d2 5e 5e 02 0a e8 db 29 d2 5e 5e 03 09 e8 d3 29 d2 5e 5e 04 08 e8 cb 29 d2 5e 5e 05 07 e8 c3 29 d2 5e 5e 06 06 e8 bb 29 d2 5e 5e 07 05 e8 b3 29 d2 5e 5e 08 04 e8 ab 29 d2 5e 5e 09 03 e8 a3 29 d2 5e 5e 0a 02 e8 9b 29 d2 5e 5e 0b 01 e8 93 29 d2 5e 5e 0c 00 f0 25 74 c8 f7 7f 00 00 e8 83 29 d2 5e 5e 00 0a e8 7b 29 d2 5e 5e 01 09 e8 73 29 d2 5e 5e 02 08 e8 6b 29 d2 5e 5e 03 07 e8 63 29 d2 5e 5e 04 06 e8 5b 29 d2 5e 5e 05 05 e8 53 29 d2 5e 5e 06 04 e8 4b 29 d2 5e 5e 07 03 e8 43 29 d2 5e 5e 08 02 e8 3b 29 d2 5e 5e 09 01 e8 33 29 d2 5e 5e 0a 00 28 28 74 c8 f7 7f 00 00 e8 23 29 d2 5e 5e 00 03 e8 1b 29 d2 5e 5e 01 02 e8 13 29 d2 5e 5e 02 01 e8 0b 29 d2 5e 5e 03 00 e0 2a 74 c8 f7 7f 00 00 e8 fb 28 d2 5e 5e 00 00 38 2c 74 c8 f7 7f 00 00 e8 eb 28 d2 5e 5e 00 00 98 2c 74 c8 f7 7f 00 00 e8 db 28 d2 5e 5e 00 00 f8 2c 74 c8 f7 7f 00 00 e8 cb 28 d2 5e 5e 00 00 58 2d 74 c8 f7 7f 00 00 e8 bb 28 d2 5e 5e 00 00 b8 2d 74 c8 f7 7f 00 00 e8 ab 28 d2 5e 5e 00 00 18 2e 74 c8 f7 7f 00 00 e8 9b 28 d2 5e 5e 00 00 78 2e 74 c8 f7 7f 00 00 e8 8b 28 d2 5e 5e 00 0c e8 83 28 d2 5e 5e 01 0b e8 7b 28 d2 5e 5e 02 0a e8 73 28 d2 5e 5e 03 09 e8 6b 28 d2 5e 5e 04 08 e8 63 28 d2 5e 5e 05 07 e8 5b 28 d2 5e 5e 06 06 e8 53 28 d2 5e 5e 07 05 e8 4b 28 d2 5e 5e 08 04 e8 43 28 d2 5e 5e 09 03 e8 3b 28 d2 5e 5e 0a 02 e8 33 28 d2 5e 5e 0b 01 e8 2b 28 d2 5e 5e 0c 00 08 2f 74 c8 f7 7f 00 00 e8 1b 28 d2 5e 5e 00 00 90 30 74 c8 f7 7f 00 00 e8 0b 28 d2 5e 5e 00 0a e8 03 28 d2 5e 5e 01 09 e8 fb 27 d2 5e 5e 02 08 e8 f3 27 d2 5e 5e 03 07 e8 eb 27 d2 5e 5e 04 06 e8 e3 27 d2 5e 5e 05 05 e8 db 27 d2 5e 5e 06 04 e8 d3 27 d2 5e 5e 07 03 e8 cb 27 d2 5e 5e 08 02 e8 c3 27 d2 5e 5e 09 01 e8 bb 27 d2 5e 5e 0a 00 40 31 74 c8 f7 7f 00 00 e8 ab 27 d2 5e 5e 00 00 c0 32 74 c8 f7 7f 00 00 e8 9b 27 d2 5e 5e 00 03 e8 93 27 d2 5e 5e 01 02 e8 8b 27 d2 5e 5e 02 01 e8 83 27 d2 5e 5e 03 00 f8 33 74 c8 f7 7f 00 00 e8 73 27 d2 5e 5e 00 00 f0 34 74 c8 f7 7f 00 00 e8 63 27 d2 5e 5e 00 00 50 35 74 c8 f7 7f 00 00 e8 53 27 d2 5e 5e 00 00 b0 35 74 c8 f7 7f 00 00 e8 43 27 d2 5e 5e 00 00 10 36 74 c8 f7 7f 00 00 e8 33 27 d2 5e 5e 00 00 70 36 74 c8 f7 7f 00 00 e8 23 27 d2 5e 5e 00 00 d0 36 74 c8 f7 7f 00 00 e8 13 27 d2 5e 5e 00 00 30 37 74 c8 f7 7f 00 00 e8 03 27 d2 5e 5e 00 00 90 37 74 c8 f7 7f 00 00 e8 f3 26 d2 5e 5e 00 03 e8 eb 26 d2 5e 5e 01 02 e8 e3 26 d2 5e 5e 02 01 e8 db 26 d2 5e 5e 03 00 68 38 74 c8 f7 7f 00 00 e8 cb 26 d2 5e 5e 00 00 d8 39 74 c8 f7 7f 00 00 e8 bb 26 d2 5e 5e 00 00 38 3a 74 c8 f7 7f 00 00 e8 ab 26 d2 5e 5e 00 00 98 3a 74 c8 f7 7f 00 00 e8 9b 26 d2 5e 5e 00 00 f8 3a 74 c8 f7 7f 00 00 e8 8b 26 d2 5e 5e 00 00 58 3b 74 c8 f7 7f 00 00 e8 7b 26 d2 5e 5e 00 00 b8 3b 74 c8 f7 7f 00 00 e8 6b 26 d2 5e 5e 00 00 18 3c 74 c8 f7 7f 00 00 e8 5b 26 d2 5e 5e 00 00 78 3c 74 c8 f7 7f 00 00 e8 4b 26 d2 5e 5e 00 00 70 3e 74 c8 f7 7f 00 00 e8 3b 26 d2 5e 5e 00 00 40 40 74 c8 f7 7f 00 00 e8 2b 26 d2 5e 5e 00 00 a0 40 74 c8 f7 7f 00 00 e8 1b 26 d2 5e 5e 00 00 00 41 74 c8 f7 7f 00 00 e8 0b 26 d2 5e 5e 00 00 40 42 74 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
23        | 7ff7c8543050h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[8u]()                                                       | LiteralExpr<Vector128<byte>> eval<byte>(IComparisonExpr<Vector128<byte>> expr)                                | 0f 1f 44 00 00 48 b8 50 09 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
24        | 7ff7c8543080h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[8i]()                                                       | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IComparisonExpr<Vector128<sbyte>> expr)                             | 0f 1f 44 00 00 48 b8 50 0e 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
25        | 7ff7c85430b0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[16u]()                                                      | LiteralExpr<Vector128<ushort>> eval<ushort>(IComparisonExpr<Vector128<ushort>> expr)                          | 0f 1f 44 00 00 48 b8 40 0f 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
26        | 7ff7c85430e0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[16i]()                                                      | LiteralExpr<Vector128<short>> eval<short>(IComparisonExpr<Vector128<short>> expr)                             | 0f 1f 44 00 00 48 b8 30 10 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
27        | 7ff7c8543110h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[32u]()                                                      | LiteralExpr<Vector128<uint>> eval<uint>(IComparisonExpr<Vector128<uint>> expr)                                | 0f 1f 44 00 00 48 b8 20 11 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
28        | 7ff7c8543140h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[32i]()                                                      | LiteralExpr<Vector128<int>> eval<int>(IComparisonExpr<Vector128<int>> expr)                                   | 0f 1f 44 00 00 48 b8 20 16 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
29        | 7ff7c8543170h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[64i]()                                                      | LiteralExpr<Vector128<long>> eval<long>(IComparisonExpr<Vector128<long>> expr)                                | 0f 1f 44 00 00 48 b8 10 17 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
30        | 7ff7c85431a0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[8u]()                                                       | LiteralExpr<Vector256<byte>> eval<byte>(IComparisonExpr<Vector256<byte>> expr)                                | 0f 1f 44 00 00 48 b8 00 18 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
31        | 7ff7c85431d0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[8i]()                                                       | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IComparisonExpr<Vector256<sbyte>> expr)                             | 0f 1f 44 00 00 48 b8 30 1d 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
32        | 7ff7c8543200h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[16u]()                                                      | LiteralExpr<Vector256<ushort>> eval<ushort>(IComparisonExpr<Vector256<ushort>> expr)                          | 0f 1f 44 00 00 48 b8 50 1e 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
33        | 7ff7c8543230h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[16i]()                                                      | LiteralExpr<Vector256<short>> eval<short>(IComparisonExpr<Vector256<short>> expr)                             | 0f 1f 44 00 00 48 b8 70 1f 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
34        | 7ff7c8543260h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[32u]()                                                      | LiteralExpr<Vector256<uint>> eval<uint>(IComparisonExpr<Vector256<uint>> expr)                                | 0f 1f 44 00 00 48 b8 90 20 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
35        | 7ff7c8543290h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[32i]()                                                      | LiteralExpr<Vector256<int>> eval<int>(IComparisonExpr<Vector256<int>> expr)                                   | 0f 1f 44 00 00 48 b8 b0 21 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
36        | 7ff7c85432c0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[64i]()                                                      | LiteralExpr<Vector256<long>> eval<long>(IComparisonExpr<Vector256<long>> expr)                                | 0f 1f 44 00 00 48 b8 e0 26 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
37        | 7ff7c85432f0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[8u]()                                                           | bit eval<byte>(IComparisonPred<byte> expr)                                                                    | 0f 1f 44 00 00 48 b8 80 04 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
38        | 7ff7c8543320h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[8i]()                                                           | bit eval<sbyte>(IComparisonPred<sbyte> expr)                                                                  | 0f 1f 44 00 00 48 b8 30 05 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
39        | 7ff7c8543350h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[16u]()                                                          | bit eval<ushort>(IComparisonPred<ushort> expr)                                                                | 0f 1f 44 00 00 48 b8 e0 05 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
40        | 7ff7c8543380h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[16i]()                                                          | bit eval<short>(IComparisonPred<short> expr)                                                                  | 0f 1f 44 00 00 48 b8 90 06 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
41        | 7ff7c85433b0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[32u]()                                                          | bit eval<uint>(IComparisonPred<uint> expr)                                                                    | 0f 1f 44 00 00 48 b8 40 07 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
42        | 7ff7c85433e0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[32i]()                                                          | bit eval<int>(IComparisonPred<int> expr)                                                                      | 0f 1f 44 00 00 48 b8 f0 07 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
43        | 7ff7c8543410h   | 1107    | hex://logix/logic.engine?eval#eval_cmp_pred_g[64i]()                                                          | bit eval<long>(IComparisonPred<long> expr)                                                                    | 0f 1f 44 00 00 48 b8 a0 08 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 03 22 d2 5e 5e 00 0a e8 fb 21 d2 5e 5e 01 09 e8 f3 21 d2 5e 5e 02 08 e8 eb 21 d2 5e 5e 03 07 e8 e3 21 d2 5e 5e 04 06 e8 db 21 d2 5e 5e 05 05 e8 d3 21 d2 5e 5e 06 04 e8 cb 21 d2 5e 5e 07 03 e8 c3 21 d2 5e 5e 08 02 e8 bb 21 d2 5e 5e 09 01 e8 b3 21 d2 5e 5e 0a 00 d8 3c 74 c8 f7 7f 00 00 e8 a3 21 d2 5e 5e 00 02 e8 9b 21 d2 5e 5e 01 01 e8 93 21 d2 5e 5e 02 00 50 41 74 c8 f7 7f 00 00 e8 83 21 d2 5e 5e 00 00 a0 42 74 c8 f7 7f 00 00 e8 73 21 d2 5e 5e 00 02 e8 6b 21 d2 5e 5e 01 01 e8 63 21 d2 5e 5e 02 00 f0 42 74 c8 f7 7f 00 00 e8 53 21 d2 5e 5e 00 00 e0 43 74 c8 f7 7f 00 00 e8 43 21 d2 5e 5e 00 00 40 44 74 c8 f7 7f 00 00 e8 33 21 d2 5e 5e 00 02 e8 2b 21 d2 5e 5e 01 01 e8 23 21 d2 5e 5e 02 00 90 44 74 c8 f7 7f 00 00 e8 13 21 d2 5e 5e 00 00 80 45 74 c8 f7 7f 00 00 e8 03 21 d2 5e 5e 00 00 e0 45 74 c8 f7 7f 00 00 e8 f3 20 d2 5e 5e 00 02 e8 eb 20 d2 5e 5e 01 01 e8 e3 20 d2 5e 5e 02 00 30 46 74 c8 f7 7f 00 00 e8 d3 20 d2 5e 5e 00 00 20 47 74 c8 f7 7f 00 00 e8 c3 20 d2 5e 5e 00 00 80 47 74 c8 f7 7f 00 00 e8 b3 20 d2 5e 5e 00 02 e8 ab 20 d2 5e 5e 01 01 e8 a3 20 d2 5e 5e 02 00 d0 47 74 c8 f7 7f 00 00 e8 93 20 d2 5e 5e 00 00 c0 48 74 c8 f7 7f 00 00 e8 83 20 d2 5e 5e 00 00 20 49 74 c8 f7 7f 00 00 e8 73 20 d2 5e 5e 00 02 e8 6b 20 d2 5e 5e 01 01 e8 63 20 d2 5e 5e 02 00 70 49 74 c8 f7 7f 00 00 e8 53 20 d2 5e 5e 00 00 60 4a 74 c8 f7 7f 00 00 e8 43 20 d2 5e 5e 00 00 c0 4a 74 c8 f7 7f 00 00 e8 33 20 d2 5e 5e 00 02 e8 2b 20 d2 5e 5e 01 01 e8 23 20 d2 5e 5e 02 00 10 4b 74 c8 f7 7f 00 00 e8 13 20 d2 5e 5e 00 00 00 4c 74 c8 f7 7f 00 00 e8 03 20 d2 5e 5e 00 00 60 4c 74 c8 f7 7f 00 00 e8 f3 1f d2 5e 5e 00 02 e8 eb 1f d2 5e 5e 01 01 e8 e3 1f d2 5e 5e 02 00 b0 4c 74 c8 f7 7f 00 00 e8 d3 1f d2 5e 5e 00 0c e8 cb 1f d2 5e 5e 01 0b e8 c3 1f d2 5e 5e 02 0a e8 bb 1f d2 5e 5e 03 09 e8 b3 1f d2 5e 5e 04 08 e8 ab 1f d2 5e 5e 05 07 e8 a3 1f d2 5e 5e 06 06 e8 9b 1f d2 5e 5e 07 05 e8 93 1f d2 5e 5e 08 04 e8 8b 1f d2 5e 5e 09 03 e8 83 1f d2 5e 5e 0a 02 e8 7b 1f d2 5e 5e 0b 01 e8 73 1f d2 5e 5e 0c 00 b0 4d 74 c8 f7 7f 00 00 e8 63 1f d2 5e 5e 00 00 38 4f 74 c8 f7 7f 00 00 e8 53 1f d2 5e 5e 00 0a e8 4b 1f d2 5e 5e 01 09 e8 43 1f d2 5e 5e 02 08 e8 3b 1f d2 5e 5e 03 07 e8 33 1f d2 5e 5e 04 06 e8 2b 1f d2 5e 5e 05 05 e8 23 1f d2 5e 5e 06 04 e8 1b 1f d2 5e 5e 07 03 e8 13 1f d2 5e 5e 08 02 e8 0b 1f d2 5e 5e 09 01 e8 03 1f d2 5e 5e 0a 00 e8 4f 74 c8 f7 7f 00 00 e8 f3 1e d2 5e 5e 00 00 68 51 74 c8 f7 7f 00 00 e8 e3 1e d2 5e 5e 00 00 b0 52 74 c8 f7 7f 00 00 e8 d3 1e d2 5e 5e 00 0a e8 cb 1e d2 5e 5e 01 09 e8 c3 1e d2 5e 5e 02 08 e8 bb 1e d2 5e 5e 03 07 e8 b3 1e d2 5e 5e 04 06 e8 ab 1e d2 5e 5e 05 05 e8 a3 1e d2 5e 5e 06 04 e8 9b 1e d2 5e 5e 07 03 e8 93 1e d2 5e 5e 08 02 e8 8b 1e d2 5e 5e 09 01 e8 83 1e d2 5e 5e 0a 00 10 53 74 c8 f7 7f 00 00 e8 73 1e d2 5e 5e 00 00 90 54 74 c8 f7 7f 00 00 e8 63 1e d2 5e 5e 00 00 d8 55 74 c8 f7 7f 00 00 e8 53 1e d2 5e 5e 00 00 f0 57 74 c8 f7 7f 00 00 e8 43 1e d2 5e 5e 00 00 20 5a 74 c8 f7 7f 00 00 e8 33 1e d2 5e 5e 00 00 68 5b 74 c8 f7 7f 00 00 e8 23 1e d2 5e 5e 00 00 48 5d 74 c8 f7 7f 00 00 e8 13 1e d2 5e 5e 00 00 90 5e 74 c8 f7 7f 00 00 e0 fd 53 c8 f7 7f 00 00 0f 1f 44 00 00 48 b8 10 30 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
44        | 7ff7c8543840h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[8u]()                                                         | LiteralExpr<byte> eval<byte>(IArithmeticExpr<byte> expr)                                                      | 0f 1f 44 00 00 48 b8 10 30 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
45        | 7ff7c8543870h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[8i]()                                                         | LiteralExpr<sbyte> eval<sbyte>(IArithmeticExpr<sbyte> expr)                                                   | 0f 1f 44 00 00 48 b8 b8 34 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
46        | 7ff7c85438a0h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[16u]()                                                        | LiteralExpr<ushort> eval<ushort>(IArithmeticExpr<ushort> expr)                                                | 0f 1f 44 00 00 48 b8 f8 34 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
47        | 7ff7c85438d0h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[16i]()                                                        | LiteralExpr<short> eval<short>(IArithmeticExpr<short> expr)                                                   | 0f 1f 44 00 00 48 b8 38 35 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
48        | 7ff7c8543900h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[32u]()                                                        | LiteralExpr<uint> eval<uint>(IArithmeticExpr<uint> expr)                                                      | 0f 1f 44 00 00 48 b8 78 35 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
49        | 7ff7c8543930h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[32i]()                                                        | LiteralExpr<int> eval<int>(IArithmeticExpr<int> expr)                                                         | 0f 1f 44 00 00 48 b8 b8 35 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
50        | 7ff7c8543960h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[64u]()                                                        | LiteralExpr<ulong> eval<ulong>(IArithmeticExpr<ulong> expr)                                                   | 0f 1f 44 00 00 48 b8 f8 35 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
51        | 7ff7c8543990h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[64i]()                                                        | LiteralExpr<long> eval<long>(IArithmeticExpr<long> expr)                                                      | 0f 1f 44 00 00 48 b8 38 36 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
52        | 7ff7c85439c0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[8u]()                                                     | LiteralExpr<Vector128<byte>> eval<byte>(IExpr<Vector128<byte>> expr)                                          | 0f 1f 44 00 00 48 b8 e8 03 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
53        | 7ff7c85439f0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[8i]()                                                     | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IExpr<Vector128<sbyte>> expr)                                       | 0f 1f 44 00 00 48 b8 a8 0a 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
54        | 7ff7c8543a20h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[16u]()                                                    | LiteralExpr<Vector128<ushort>> eval<ushort>(IExpr<Vector128<ushort>> expr)                                    | 0f 1f 44 00 00 48 b8 90 0b 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
55        | 7ff7c8543a50h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[16i]()                                                    | LiteralExpr<Vector128<short>> eval<short>(IExpr<Vector128<short>> expr)                                       | 0f 1f 44 00 00 48 b8 78 0c 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
56        | 7ff7c8543a80h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[32u]()                                                    | LiteralExpr<Vector128<uint>> eval<uint>(IExpr<Vector128<uint>> expr)                                          | 0f 1f 44 00 00 48 b8 60 0d 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
57        | 7ff7c8543ab0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[32i]()                                                    | LiteralExpr<Vector128<int>> eval<int>(IExpr<Vector128<int>> expr)                                             | 0f 1f 44 00 00 48 b8 20 12 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
58        | 7ff7c8543ae0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[64u]()                                                    | LiteralExpr<Vector128<ulong>> eval<ulong>(IExpr<Vector128<ulong>> expr)                                       | 0f 1f 44 00 00 48 b8 d8 37 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
59        | 7ff7c8543b10h   | 1107    | hex://logix/logic.engine?eval#eval_vector_expr128_g[64i]()                                                    | LiteralExpr<Vector128<long>> eval<long>(IExpr<Vector128<long>> expr)                                          | 0f 1f 44 00 00 48 b8 08 13 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 03 1b d2 5e 5e 00 0c e8 fb 1a d2 5e 5e 01 0b e8 f3 1a d2 5e 5e 02 0a e8 eb 1a d2 5e 5e 03 09 e8 e3 1a d2 5e 5e 04 08 e8 db 1a d2 5e 5e 05 07 e8 d3 1a d2 5e 5e 06 06 e8 cb 1a d2 5e 5e 07 05 e8 c3 1a d2 5e 5e 08 04 e8 bb 1a d2 5e 5e 09 03 e8 b3 1a d2 5e 5e 0a 02 e8 ab 1a d2 5e 5e 0b 01 e8 a3 1a d2 5e 5e 0c 00 68 56 74 c8 f7 7f 00 00 e8 93 1a d2 5e 5e 00 0a e8 8b 1a d2 5e 5e 01 09 e8 83 1a d2 5e 5e 02 08 e8 7b 1a d2 5e 5e 03 07 e8 73 1a d2 5e 5e 04 06 e8 6b 1a d2 5e 5e 05 05 e8 63 1a d2 5e 5e 06 04 e8 5b 1a d2 5e 5e 07 03 e8 53 1a d2 5e 5e 08 02 e8 4b 1a d2 5e 5e 09 01 e8 43 1a d2 5e 5e 0a 00 a0 58 74 c8 f7 7f 00 00 e8 33 1a d2 5e 5e 00 0a e8 2b 1a d2 5e 5e 01 09 e8 23 1a d2 5e 5e 02 08 e8 1b 1a d2 5e 5e 03 07 e8 13 1a d2 5e 5e 04 06 e8 0b 1a d2 5e 5e 05 05 e8 03 1a d2 5e 5e 06 04 e8 fb 19 d2 5e 5e 07 03 e8 f3 19 d2 5e 5e 08 02 e8 eb 19 d2 5e 5e 09 01 e8 e3 19 d2 5e 5e 0a 00 c8 5b 74 c8 f7 7f 00 00 e8 d3 19 d2 5e 5e 00 09 e8 cb 19 d2 5e 5e 01 08 e8 c3 19 d2 5e 5e 02 07 e8 bb 19 d2 5e 5e 03 06 e8 b3 19 d2 5e 5e 04 05 e8 ab 19 d2 5e 5e 05 04 e8 a3 19 d2 5e 5e 06 03 e8 9b 19 d2 5e 5e 07 02 e8 93 19 d2 5e 5e 08 01 e8 8b 19 d2 5e 5e 09 00 20 5f 74 c8 f7 7f 00 00 e8 7b 19 d2 5e 5e 00 03 e8 73 19 d2 5e 5e 01 02 e8 6b 19 d2 5e 5e 02 01 e8 63 19 d2 5e 5e 03 00 b8 60 74 c8 f7 7f 00 00 e8 53 19 d2 5e 5e 00 00 28 62 74 c8 f7 7f 00 00 e8 43 19 d2 5e 5e 00 09 e8 3b 19 d2 5e 5e 01 08 e8 33 19 d2 5e 5e 02 07 e8 2b 19 d2 5e 5e 03 06 e8 23 19 d2 5e 5e 04 05 e8 1b 19 d2 5e 5e 05 04 e8 13 19 d2 5e 5e 06 03 e8 0b 19 d2 5e 5e 07 02 e8 03 19 d2 5e 5e 08 01 e8 fb 18 d2 5e 5e 09 00 b8 62 74 c8 f7 7f 00 00 e8 eb 18 d2 5e 5e 00 00 60 64 74 c8 f7 7f 00 00 e8 db 18 d2 5e 5e 00 0a e8 d3 18 d2 5e 5e 01 09 e8 cb 18 d2 5e 5e 02 08 e8 c3 18 d2 5e 5e 03 07 e8 bb 18 d2 5e 5e 04 06 e8 b3 18 d2 5e 5e 05 05 e8 ab 18 d2 5e 5e 06 04 e8 a3 18 d2 5e 5e 07 03 e8 9b 18 d2 5e 5e 08 02 e8 93 18 d2 5e 5e 09 01 e8 8b 18 d2 5e 5e 0a 00 c0 64 74 c8 f7 7f 00 00 e8 7b 18 d2 5e 5e 00 00 58 66 74 c8 f7 7f 00 00 e8 6b 18 d2 5e 5e 00 00 28 67 74 c8 f7 7f 00 00 e8 5b 18 d2 5e 5e 00 00 88 67 74 c8 f7 7f 00 00 e8 4b 18 d2 5e 5e 00 00 e8 67 74 c8 f7 7f 00 00 e8 3b 18 d2 5e 5e 00 09 e8 33 18 d2 5e 5e 01 08 e8 2b 18 d2 5e 5e 02 07 e8 23 18 d2 5e 5e 03 06 e8 1b 18 d2 5e 5e 04 05 e8 13 18 d2 5e 5e 05 04 e8 0b 18 d2 5e 5e 06 03 e8 03 18 d2 5e 5e 07 02 e8 fb 17 d2 5e 5e 08 01 e8 f3 17 d2 5e 5e 09 00 78 68 74 c8 f7 7f 00 00 e8 e3 17 d2 5e 5e 00 00 20 6a 74 c8 f7 7f 00 00 e8 d3 17 d2 5e 5e 00 09 e8 cb 17 d2 5e 5e 01 08 e8 c3 17 d2 5e 5e 02 07 e8 bb 17 d2 5e 5e 03 06 e8 b3 17 d2 5e 5e 04 05 e8 ab 17 d2 5e 5e 05 04 e8 a3 17 d2 5e 5e 06 03 e8 9b 17 d2 5e 5e 07 02 e8 93 17 d2 5e 5e 08 01 e8 8b 17 d2 5e 5e 09 00 b0 6a 74 c8 f7 7f 00 00 e8 7b 17 d2 5e 5e 00 00 58 6c 74 c8 f7 7f 00 00 e8 6b 17 d2 5e 5e 00 09 e8 63 17 d2 5e 5e 01 08 e8 5b 17 d2 5e 5e 02 07 e8 53 17 d2 5e 5e 03 06 e8 4b 17 d2 5e 5e 04 05 e8 43 17 d2 5e 5e 05 04 e8 3b 17 d2 5e 5e 06 03 e8 33 17 d2 5e 5e 07 02 e8 2b 17 d2 5e 5e 08 01 e8 23 17 d2 5e 5e 09 00 e8 6c 74 c8 f7 7f 00 00 e8 13 17 d2 5e 5e 00 00 90 6e 74 c8 f7 7f 00 00 10 10 75 c8 f7 7f 00 00 0f 1f 44 00 00 48 b8 38 15 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
60        | 7ff7c8543f40h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[8u]()                                                     | LiteralExpr<Vector256<byte>> eval<byte>(IExpr<Vector256<byte>> expr)                                          | 0f 1f 44 00 00 48 b8 38 15 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
61        | 7ff7c8543f70h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[8i]()                                                     | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IExpr<Vector256<sbyte>> expr)                                       | 0f 1f 44 00 00 48 b8 40 19 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
62        | 7ff7c8543fa0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[16u]()                                                    | LiteralExpr<Vector256<ushort>> eval<ushort>(IExpr<Vector256<ushort>> expr)                                    | 0f 1f 44 00 00 48 b8 28 1a 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
63        | 7ff7c8543fd0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[16i]()                                                    | LiteralExpr<Vector256<short>> eval<short>(IExpr<Vector256<short>> expr)                                       | 0f 1f 44 00 00 48 b8 10 1b 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
64        | 7ff7c8544000h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[32u]()                                                    | LiteralExpr<Vector256<uint>> eval<uint>(IExpr<Vector256<uint>> expr)                                          | 0f 1f 44 00 00 48 b8 f8 1b 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
65        | 7ff7c8544030h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[32i]()                                                    | LiteralExpr<Vector256<int>> eval<int>(IExpr<Vector256<int>> expr)                                             | 0f 1f 44 00 00 48 b8 e0 1c 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
66        | 7ff7c8544060h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[64u]()                                                    | LiteralExpr<Vector256<ulong>> eval<ulong>(IExpr<Vector256<ulong>> expr)                                       | 0f 1f 44 00 00 48 b8 28 38 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
67        | 7ff7c8544090h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[64i]()                                                    | LiteralExpr<Vector256<long>> eval<long>(IExpr<Vector256<long>> expr)                                          | 0f 1f 44 00 00 48 b8 78 23 54 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
68        | 7ff7c85440c0h   | 231     | hex://logix/logic.engine?satisfied#satisfied_g[8u](8u,8u)                                                     | bit satisfied<byte>(ComparisonExpr<byte> expr, byte a, byte b)                                                | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 10 ea 72 c7 f7 7f 00 00 ba 02 00 00 00 e8 fd 2c d2 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 31 fc ff ff 48 8b ce e8 21 44 e8 ff 0f b6 40 08 0f b6 c0 3c ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 88 19 75 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 72 c7 f7 7f 00 00 ba 02 00 00 00 e8 8d 2c d2 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 c9 fc ff ff 48 8b ce e8 a1 44 e8 ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
69        | 7ff7c8544130h   | 119     | hex://logix/logic.engine?satisfied#satisfied_g[8i](8i,8i)                                                     | bit satisfied<sbyte>(ComparisonExpr<sbyte> expr, sbyte a, sbyte b)                                            | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 72 c7 f7 7f 00 00 ba 02 00 00 00 e8 8d 2c d2 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 c9 fc ff ff 48 8b ce e8 a1 44 e8 ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
70        | 7ff7c85441b0h   | 119     | hex://logix/logic.engine?satisfied#satisfied_g[16u](16u,16u)                                                  | bit satisfied<ushort>(ComparisonExpr<ushort> expr, ushort a, ushort b)                                        | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 60 3e fe c7 f7 7f 00 00 ba 02 00 00 00 e8 0d 2c d2 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 b0 fc ff ff 48 8b ce e8 e0 44 e8 ff 0f b7 40 08 0f b7 c0 0f b7 c0 3d ff ff 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
71        | 7ff7c8544230h   | 1607    | hex://logix/logic.engine?satisfied#satisfied_g[16i](16i,16i)                                                  | bit satisfied<short>(ComparisonExpr<short> expr, short a, short b)                                            | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 50 21 14 c8 f7 7f 00 00 ba 02 00 00 00 e8 8d 2b d2 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 98 fc ff ff 48 8b ce e8 20 45 e8 ff 48 0f bf 40 08 48 0f bf c0 48 0f bf c0 3d ff 7f 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 93 13 d2 5e 5e 00 09 e8 8b 13 d2 5e 5e 01 08 e8 83 13 d2 5e 5e 02 07 e8 7b 13 d2 5e 5e 03 06 e8 73 13 d2 5e 5e 04 05 e8 6b 13 d2 5e 5e 05 04 e8 63 13 d2 5e 5e 06 03 e8 5b 13 d2 5e 5e 07 02 e8 53 13 d2 5e 5e 08 01 e8 4b 13 d2 5e 5e 09 00 20 6f 74 c8 f7 7f 00 00 e8 3b 13 d2 5e 5e 00 00 c8 70 74 c8 f7 7f 00 00 e8 2b 13 d2 5e 5e 00 09 e8 23 13 d2 5e 5e 01 08 e8 1b 13 d2 5e 5e 02 07 e8 13 13 d2 5e 5e 03 06 e8 0b 13 d2 5e 5e 04 05 e8 03 13 d2 5e 5e 05 04 e8 fb 12 d2 5e 5e 06 03 e8 f3 12 d2 5e 5e 07 02 e8 eb 12 d2 5e 5e 08 01 e8 e3 12 d2 5e 5e 09 00 58 71 74 c8 f7 7f 00 00 e8 d3 12 d2 5e 5e 00 00 00 73 74 c8 f7 7f 00 00 e8 c3 12 d2 5e 5e 00 09 e8 bb 12 d2 5e 5e 01 08 e8 b3 12 d2 5e 5e 02 07 e8 ab 12 d2 5e 5e 03 06 e8 a3 12 d2 5e 5e 04 05 e8 9b 12 d2 5e 5e 05 04 e8 93 12 d2 5e 5e 06 03 e8 8b 12 d2 5e 5e 07 02 e8 83 12 d2 5e 5e 08 01 e8 7b 12 d2 5e 5e 09 00 90 73 74 c8 f7 7f 00 00 e8 6b 12 d2 5e 5e 00 00 38 75 74 c8 f7 7f 00 00 e8 5b 12 d2 5e 5e 00 00 98 75 74 c8 f7 7f 00 00 e8 4b 12 d2 5e 5e 00 00 f8 75 74 c8 f7 7f 00 00 e8 3b 12 d2 5e 5e 00 09 e8 33 12 d2 5e 5e 01 08 e8 2b 12 d2 5e 5e 02 07 e8 23 12 d2 5e 5e 03 06 e8 1b 12 d2 5e 5e 04 05 e8 13 12 d2 5e 5e 05 04 e8 0b 12 d2 5e 5e 06 03 e8 03 12 d2 5e 5e 07 02 e8 fb 11 d2 5e 5e 08 01 e8 f3 11 d2 5e 5e 09 00 88 76 74 c8 f7 7f 00 00 e8 e3 11 d2 5e 5e 00 0c e8 db 11 d2 5e 5e 01 0b e8 d3 11 d2 5e 5e 02 0a e8 cb 11 d2 5e 5e 03 09 e8 c3 11 d2 5e 5e 04 08 e8 bb 11 d2 5e 5e 05 07 e8 b3 11 d2 5e 5e 06 06 e8 ab 11 d2 5e 5e 07 05 e8 a3 11 d2 5e 5e 08 04 e8 9b 11 d2 5e 5e 09 03 e8 93 11 d2 5e 5e 0a 02 e8 8b 11 d2 5e 5e 0b 01 e8 83 11 d2 5e 5e 0c 00 40 78 74 c8 f7 7f 00 00 e8 73 11 d2 5e 5e 00 00 c8 79 74 c8 f7 7f 00 00 e8 63 11 d2 5e 5e 00 09 e8 5b 11 d2 5e 5e 01 08 e8 53 11 d2 5e 5e 02 07 e8 4b 11 d2 5e 5e 03 06 e8 43 11 d2 5e 5e 04 05 e8 3b 11 d2 5e 5e 05 04 e8 33 11 d2 5e 5e 06 03 e8 2b 11 d2 5e 5e 07 02 e8 23 11 d2 5e 5e 08 01 e8 1b 11 d2 5e 5e 09 00 a8 7a 74 c8 f7 7f 00 00 e8 0b 11 d2 5e 5e 00 03 e8 03 11 d2 5e 5e 01 02 e8 fb 10 d2 5e 5e 02 01 e8 f3 10 d2 5e 5e 03 00 40 7c 74 c8 f7 7f 00 00 e8 e3 10 d2 5e 5e 00 00 b0 7d 74 c8 f7 7f 00 00 e8 d3 10 d2 5e 5e 00 09 e8 cb 10 d2 5e 5e 01 08 e8 c3 10 d2 5e 5e 02 07 e8 bb 10 d2 5e 5e 03 06 e8 b3 10 d2 5e 5e 04 05 e8 ab 10 d2 5e 5e 05 04 e8 a3 10 d2 5e 5e 06 03 e8 9b 10 d2 5e 5e 07 02 e8 93 10 d2 5e 5e 08 01 e8 8b 10 d2 5e 5e 09 00 40 7e 74 c8 f7 7f 00 00 e8 7b 10 d2 5e 5e 00 03 e8 73 10 d2 5e 5e 03 02 e8 6b 10 d2 5e 5e 06 01 e8 63 10 d2 5e 5e 09 00 20 81 74 c8 f7 7f 00 00 e8 53 10 d2 5e 5e 00 00 f0 81 74 c8 f7 7f 00 00 e8 43 10 d2 5e 5e 00 0a e8 3b 10 d2 5e 5e 01 09 e8 33 10 d2 5e 5e 02 08 e8 2b 10 d2 5e 5e 03 07 e8 23 10 d2 5e 5e 04 06 e8 1b 10 d2 5e 5e 05 05 e8 13 10 d2 5e 5e 06 04 e8 0b 10 d2 5e 5e 07 03 e8 03 10 d2 5e 5e 08 02 e8 fb 0f d2 5e 5e 09 01 e8 f3 0f d2 5e 5e 0a 00 50 82 74 c8 f7 7f 00 00 e8 e3 0f d2 5e 5e 00 00 d0 83 74 c8 f7 7f 00 00 e8 d3 0f d2 5e 5e 00 00 a0 84 74 c8 f7 7f 00 00 e8 c3 0f d2 5e 5e 00 00 00 85 74 c8 f7 7f 00 00 e8 b3 0f d2 5e 5e 00 00 60 85 74 c8 f7 7f 00 00 e8 a3 0f d2 5e 5e 00 00 a0 89 74 c8 f7 7f 00 00 d0 1c 75 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 f8 2d fe c7 f7 7f 00 00 ba 02 00 00 00 e8 0d 27 d2 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 f2 fb ff ff 48 8b ce e8 62 41 e8 ff 8b 40 08 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 e8 1d 75 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 48 5f 7f c7 f7 7f 00 00 ba 02 00 00 00 e8 9d 26 d2 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 ea fb ff ff 48 8b ce e8 d2 00 24 ff 8b 40 08 3d ff ff ff 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 30 1f 75 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 b0 69 b6 c7 f7 7f 00 00 ba 02 00 00 00 e8 2c 26 d2 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 df fb ff ff 48 8b ce e8 0f fc ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 48 20 75 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 b8 4a 14 c8 f7 7f 00 00 ba 02 00 00 00 e8 bc 25 d2 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 f7 fb ff ff 48 8b ce e8 af 00 24 ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
72        | 7ff7c85446b0h   | 455     | hex://logix/logic.engine?satisfied#satisfied_g[32u](32u,32u)                                                  | bit satisfied<uint>(ComparisonExpr<uint> expr, uint a, uint b)                                                | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 f8 2d fe c7 f7 7f 00 00 ba 02 00 00 00 e8 0d 27 d2 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 f2 fb ff ff 48 8b ce e8 62 41 e8 ff 8b 40 08 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 e8 1d 75 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 48 5f 7f c7 f7 7f 00 00 ba 02 00 00 00 e8 9d 26 d2 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 ea fb ff ff 48 8b ce e8 d2 00 24 ff 8b 40 08 3d ff ff ff 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 30 1f 75 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 b0 69 b6 c7 f7 7f 00 00 ba 02 00 00 00 e8 2c 26 d2 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 df fb ff ff 48 8b ce e8 0f fc ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 48 20 75 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 b8 4a 14 c8 f7 7f 00 00 ba 02 00 00 00 e8 bc 25 d2 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 f7 fb ff ff 48 8b ce e8 af 00 24 ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
73        | 7ff7c8544720h   | 343     | hex://logix/logic.engine?satisfied#satisfied_g[32i](32i,32i)                                                  | bit satisfied<int>(ComparisonExpr<int> expr, int a, int b)                                                    | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 48 5f 7f c7 f7 7f 00 00 ba 02 00 00 00 e8 9d 26 d2 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 ea fb ff ff 48 8b ce e8 d2 00 24 ff 8b 40 08 3d ff ff ff 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 30 1f 75 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 b0 69 b6 c7 f7 7f 00 00 ba 02 00 00 00 e8 2c 26 d2 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 df fb ff ff 48 8b ce e8 0f fc ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 48 20 75 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 b8 4a 14 c8 f7 7f 00 00 ba 02 00 00 00 e8 bc 25 d2 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 f7 fb ff ff 48 8b ce e8 af 00 24 ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
74        | 7ff7c8544790h   | 231     | hex://logix/logic.engine?satisfied#satisfied_g[64u](64u,64u)                                                  | bit satisfied<ulong>(ComparisonExpr<ulong> expr, ulong a, ulong b)                                            | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 b0 69 b6 c7 f7 7f 00 00 ba 02 00 00 00 e8 2c 26 d2 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 df fb ff ff 48 8b ce e8 0f fc ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 48 20 75 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 b8 4a 14 c8 f7 7f 00 00 ba 02 00 00 00 e8 bc 25 d2 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 f7 fb ff ff 48 8b ce e8 af 00 24 ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
75        | 7ff7c8544800h   | 119     | hex://logix/logic.engine?satisfied#satisfied_g[64i](64i,64i)                                                  | bit satisfied<long>(ComparisonExpr<long> expr, long a, long b)                                                | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 b8 4a 14 c8 f7 7f 00 00 ba 02 00 00 00 e8 bc 25 d2 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 f7 fb ff ff 48 8b ce e8 af 00 24 ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
76        | 7ff7c8544880h   | 1331    | hex://logix/logic.engine?satisfied#satisfied_g[8u](v128x8u,v128x8u)                                           | bit satisfied<byte>(ComparisonExpr<Vector128<byte>> expr, Vector128<byte> a, Vector128<byte> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 38 80 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 39 25 d2 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 d2 fc ff ff 48 8b cb e8 82 c0 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 23 0d d2 5e 5e 00 09 e8 1b 0d d2 5e 5e 01 08 e8 13 0d d2 5e 5e 02 07 e8 0b 0d d2 5e 5e 03 06 e8 03 0d d2 5e 5e 04 05 e8 fb 0c d2 5e 5e 05 04 e8 f3 0c d2 5e 5e 06 03 e8 eb 0c d2 5e 5e 07 02 e8 e3 0c d2 5e 5e 08 01 e8 db 0c d2 5e 5e 09 00 f0 85 74 c8 f7 7f 00 00 e8 cb 0c d2 5e 5e 00 03 e8 c3 0c d2 5e 5e 03 02 e8 bb 0c d2 5e 5e 06 01 e8 b3 0c d2 5e 5e 09 00 d0 88 74 c8 f7 7f 00 00 e8 a3 0c d2 5e 5e 00 09 e8 9b 0c d2 5e 5e 01 08 e8 93 0c d2 5e 5e 02 07 e8 8b 0c d2 5e 5e 03 06 e8 83 0c d2 5e 5e 04 05 e8 7b 0c d2 5e 5e 05 04 e8 73 0c d2 5e 5e 06 03 e8 6b 0c d2 5e 5e 07 02 e8 63 0c d2 5e 5e 08 01 e8 5b 0c d2 5e 5e 09 00 30 8a 74 c8 f7 7f 00 00 e8 4b 0c d2 5e 5e 00 03 e8 43 0c d2 5e 5e 03 02 e8 3b 0c d2 5e 5e 06 01 e8 33 0c d2 5e 5e 09 00 10 8d 74 c8 f7 7f 00 00 e8 23 0c d2 5e 5e 00 00 e0 8d 74 c8 f7 7f 00 00 e8 13 0c d2 5e 5e 00 09 e8 0b 0c d2 5e 5e 01 08 e8 03 0c d2 5e 5e 02 07 e8 fb 0b d2 5e 5e 03 06 e8 f3 0b d2 5e 5e 04 05 e8 eb 0b d2 5e 5e 05 04 e8 e3 0b d2 5e 5e 06 03 e8 db 0b d2 5e 5e 07 02 e8 d3 0b d2 5e 5e 08 01 e8 cb 0b d2 5e 5e 09 00 70 8e 74 c8 f7 7f 00 00 e8 bb 0b d2 5e 5e 00 03 e8 b3 0b d2 5e 5e 03 02 e8 ab 0b d2 5e 5e 06 01 e8 a3 0b d2 5e 5e 09 00 50 91 74 c8 f7 7f 00 00 e8 93 0b d2 5e 5e 00 00 20 92 74 c8 f7 7f 00 00 e8 83 0b d2 5e 5e 00 09 e8 7b 0b d2 5e 5e 01 08 e8 73 0b d2 5e 5e 02 07 e8 6b 0b d2 5e 5e 03 06 e8 63 0b d2 5e 5e 04 05 e8 5b 0b d2 5e 5e 05 04 e8 53 0b d2 5e 5e 06 03 e8 4b 0b d2 5e 5e 07 02 e8 43 0b d2 5e 5e 08 01 e8 3b 0b d2 5e 5e 09 00 b0 92 74 c8 f7 7f 00 00 e8 2b 0b d2 5e 5e 00 03 e8 23 0b d2 5e 5e 03 02 e8 1b 0b d2 5e 5e 06 01 e8 13 0b d2 5e 5e 09 00 90 95 74 c8 f7 7f 00 00 e8 03 0b d2 5e 5e 00 00 60 96 74 c8 f7 7f 00 00 e8 f3 0a d2 5e 5e 00 09 e8 eb 0a d2 5e 5e 01 08 e8 e3 0a d2 5e 5e 02 07 e8 db 0a d2 5e 5e 03 06 e8 d3 0a d2 5e 5e 04 05 e8 cb 0a d2 5e 5e 05 04 e8 c3 0a d2 5e 5e 06 03 e8 bb 0a d2 5e 5e 07 02 e8 b3 0a d2 5e 5e 08 01 e8 ab 0a d2 5e 5e 09 00 f0 96 74 c8 f7 7f 00 00 e8 9b 0a d2 5e 5e 00 03 e8 93 0a d2 5e 5e 03 02 e8 8b 0a d2 5e 5e 06 01 e8 83 0a d2 5e 5e 09 00 d0 99 74 c8 f7 7f 00 00 e8 73 0a d2 5e 5e 00 00 a0 9a 74 c8 f7 7f 00 00 e8 63 0a d2 5e 5e 00 09 e8 5b 0a d2 5e 5e 01 08 e8 53 0a d2 5e 5e 02 07 e8 4b 0a d2 5e 5e 03 06 e8 43 0a d2 5e 5e 04 05 e8 3b 0a d2 5e 5e 05 04 e8 33 0a d2 5e 5e 06 03 e8 2b 0a d2 5e 5e 07 02 e8 23 0a d2 5e 5e 08 01 e8 1b 0a d2 5e 5e 09 00 30 9b 74 c8 f7 7f 00 00 e8 0b 0a d2 5e 5e 00 03 e8 03 0a d2 5e 5e 01 02 e8 fb 09 d2 5e 5e 02 01 e8 f3 09 d2 5e 5e 03 00 c8 9c 74 c8 f7 7f 00 00 e8 e3 09 d2 5e 5e 00 03 e8 db 09 d2 5e 5e 03 02 e8 d3 09 d2 5e 5e 06 01 e8 cb 09 d2 5e 5e 09 00 f8 9e 74 c8 f7 7f 00 00 e8 bb 09 d2 5e 5e 00 00 c8 9f 74 c8 f7 7f 00 00 e8 ab 09 d2 5e 5e 00 00 28 a0 74 c8 f7 7f 00 00 e8 9b 09 d2 5e 5e 00 00 88 a0 74 c8 f7 7f 00 00 e8 8b 09 d2 5e 5e 00 09 e8 83 09 d2 5e 5e 01 08 e8 7b 09 d2 5e 5e 02 07 e8 73 09 d2 5e 5e 03 06 e8 6b 09 d2 5e 5e 04 05 e8 63 09 d2 5e 5e 05 04 e8 5b 09 d2 5e 5e 06 03 e8 53 09 d2 5e 5e 07 02 e8 4b 09 d2 5e 5e 08 01 e8 43 09 d2 5e 5e 09 00 18 a1 74 c8 f7 7f 00 00 e8 33 09 d2 5e 5e 00 00 80 a6 74 c8 f7 7f 00 00 78 27 75 c8 f7 7f 00 00 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 e8 87 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 99 20 d2 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 e2 c0 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
77        | 7ff7c8544d20h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[8i](v128x8i,v128x8i)                                           | bit satisfied<sbyte>(ComparisonExpr<Vector128<sbyte>> expr, Vector128<sbyte> a, Vector128<sbyte> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 e8 87 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 99 20 d2 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 e2 c0 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
78        | 7ff7c8544dc0h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[16u](v128x16u,v128x16u)                                        | bit satisfied<ushort>(ComparisonExpr<Vector128<ushort>> expr, Vector128<ushort> a, Vector128<ushort> b)       | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 28 8c 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 f9 1f d2 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 c2 fb ff ff 48 8b cb e8 32 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
79        | 7ff7c8544e60h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[16i](v128x16i,v128x16i)                                        | bit satisfied<short>(ComparisonExpr<Vector128<short>> expr, Vector128<short> a, Vector128<short> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 68 90 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 59 1f d2 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 b2 fb ff ff 48 8b cb e8 82 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
80        | 7ff7c8544f00h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[32u](v128x32u,v128x32u)                                        | bit satisfied<uint>(ComparisonExpr<Vector128<uint>> expr, Vector128<uint> a, Vector128<uint> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 a8 94 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 b9 1e d2 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 a2 fb ff ff 48 8b cb e8 d2 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
81        | 7ff7c8544fa0h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[32i](v128x32i,v128x32i)                                        | bit satisfied<int>(ComparisonExpr<Vector128<int>> expr, Vector128<int> a, Vector128<int> b)                   | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 e8 98 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 19 1e d2 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 92 fb ff ff 48 8b cb e8 32 c6 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
82        | 7ff7c8545040h   | 1176    | hex://logix/logic.engine?satisfied#satisfied_g[64u](v128x64u,v128x64u)                                        | bit satisfied<ulong>(ComparisonExpr<Vector128<ulong>> expr, Vector128<ulong> a, Vector128<ulong> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 10 9e 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 79 1d d2 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 82 fb ff ff 48 8b cb e8 02 fc ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 63 05 d2 5e 5e 00 03 e8 5b 05 d2 5e 5e 03 02 e8 53 05 d2 5e 5e 06 01 e8 4b 05 d2 5e 5e 09 00 f8 a3 74 c8 f7 7f 00 00 e8 3b 05 d2 5e 5e 00 0c e8 33 05 d2 5e 5e 01 0b e8 2b 05 d2 5e 5e 02 0a e8 23 05 d2 5e 5e 03 09 e8 1b 05 d2 5e 5e 04 08 e8 13 05 d2 5e 5e 05 07 e8 0b 05 d2 5e 5e 06 06 e8 03 05 d2 5e 5e 07 05 e8 fb 04 d2 5e 5e 08 04 e8 f3 04 d2 5e 5e 09 03 e8 eb 04 d2 5e 5e 0a 02 e8 e3 04 d2 5e 5e 0b 01 e8 db 04 d2 5e 5e 0c 00 f8 a4 74 c8 f7 7f 00 00 e8 cb 04 d2 5e 5e 00 09 e8 c3 04 d2 5e 5e 01 08 e8 bb 04 d2 5e 5e 02 07 e8 b3 04 d2 5e 5e 03 06 e8 ab 04 d2 5e 5e 04 05 e8 a3 04 d2 5e 5e 05 04 e8 9b 04 d2 5e 5e 06 03 e8 93 04 d2 5e 5e 07 02 e8 8b 04 d2 5e 5e 08 01 e8 83 04 d2 5e 5e 09 00 60 a7 74 c8 f7 7f 00 00 e8 73 04 d2 5e 5e 00 03 e8 6b 04 d2 5e 5e 01 02 e8 63 04 d2 5e 5e 02 01 e8 5b 04 d2 5e 5e 03 00 f8 a8 74 c8 f7 7f 00 00 e8 4b 04 d2 5e 5e 00 00 68 aa 74 c8 f7 7f 00 00 e8 3b 04 d2 5e 5e 00 09 e8 33 04 d2 5e 5e 01 08 e8 2b 04 d2 5e 5e 02 07 e8 23 04 d2 5e 5e 03 06 e8 1b 04 d2 5e 5e 04 05 e8 13 04 d2 5e 5e 05 04 e8 0b 04 d2 5e 5e 06 03 e8 03 04 d2 5e 5e 07 02 e8 fb 03 d2 5e 5e 08 01 e8 f3 03 d2 5e 5e 09 00 f8 aa 74 c8 f7 7f 00 00 e8 e3 03 d2 5e 5e 00 03 e8 db 03 d2 5e 5e 03 02 e8 d3 03 d2 5e 5e 06 01 e8 cb 03 d2 5e 5e 09 00 d8 ad 74 c8 f7 7f 00 00 e8 bb 03 d2 5e 5e 00 00 a8 ae 74 c8 f7 7f 00 00 e8 ab 03 d2 5e 5e 00 0a e8 a3 03 d2 5e 5e 01 09 e8 9b 03 d2 5e 5e 02 08 e8 93 03 d2 5e 5e 03 07 e8 8b 03 d2 5e 5e 04 06 e8 83 03 d2 5e 5e 05 05 e8 7b 03 d2 5e 5e 06 04 e8 73 03 d2 5e 5e 07 03 e8 6b 03 d2 5e 5e 08 02 e8 63 03 d2 5e 5e 09 01 e8 5b 03 d2 5e 5e 0a 00 08 af 74 c8 f7 7f 00 00 e8 4b 03 d2 5e 5e 00 00 88 b0 74 c8 f7 7f 00 00 e8 3b 03 d2 5e 5e 00 00 58 b1 74 c8 f7 7f 00 00 e8 2b 03 d2 5e 5e 00 00 b8 b1 74 c8 f7 7f 00 00 e8 1b 03 d2 5e 5e 00 00 18 b2 74 c8 f7 7f 00 00 e8 0b 03 d2 5e 5e 00 09 e8 03 03 d2 5e 5e 01 08 e8 fb 02 d2 5e 5e 02 07 e8 f3 02 d2 5e 5e 03 06 e8 eb 02 d2 5e 5e 04 05 e8 e3 02 d2 5e 5e 05 04 e8 db 02 d2 5e 5e 06 03 e8 d3 02 d2 5e 5e 07 02 e8 cb 02 d2 5e 5e 08 01 e8 c3 02 d2 5e 5e 09 00 a8 b2 74 c8 f7 7f 00 00 e8 b3 02 d2 5e 5e 00 03 e8 ab 02 d2 5e 5e 03 02 e8 a3 02 d2 5e 5e 06 01 e8 9b 02 d2 5e 5e 09 00 88 b5 74 c8 f7 7f 00 00 e8 8b 02 d2 5e 5e 00 00 58 b6 74 c8 f7 7f 00 00 e8 7b 02 d2 5e 5e 00 09 e8 73 02 d2 5e 5e 01 08 e8 6b 02 d2 5e 5e 02 07 e8 63 02 d2 5e 5e 03 06 e8 5b 02 d2 5e 5e 04 05 e8 53 02 d2 5e 5e 05 04 e8 4b 02 d2 5e 5e 06 03 e8 43 02 d2 5e 5e 07 02 e8 3b 02 d2 5e 5e 08 01 e8 33 02 d2 5e 5e 09 00 e8 b6 74 c8 f7 7f 00 00 e8 23 02 d2 5e 5e 00 03 e8 1b 02 d2 5e 5e 03 02 e8 13 02 d2 5e 5e 06 01 e8 0b 02 d2 5e 5e 09 00 c8 b9 74 c8 f7 7f 00 00 e8 fb 01 d2 5e 5e 00 00 98 ba 74 c8 f7 7f 00 00 e8 eb 01 d2 5e 5e 00 09 e8 e3 01 d2 5e 5e 01 08 e8 db 01 d2 5e 5e 02 07 e8 d3 01 d2 5e 5e 03 06 e8 cb 01 d2 5e 5e 04 05 e8 c3 01 d2 5e 5e 05 04 e8 bb 01 d2 5e 5e 06 03 e8 b3 01 d2 5e 5e 07 02 e8 ab 01 d2 5e 5e 08 01 e8 a3 01 d2 5e 5e 09 00 28 bb 74 c8 f7 7f 00 00 e8 93 01 d2 5e 5e 00 03 e8 8b 01 d2 5e 5e 03 02 e8 83 01 d2 5e 5e 06 01 e8 7b 01 d2 5e 5e 09 00 08 be 74 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
83        | 7ff7c85454e0h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[64i](v128x64i,v128x64i)                                        | bit satisfied<long>(ComparisonExpr<Vector128<long>> expr, Vector128<long> a, Vector128<long> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 10 a3 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 d9 18 d2 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 ba f7 ff ff 48 8b cb e8 e2 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
84        | 7ff7c8545580h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[8u](v256x8u,v256x8u)                                           | bit satisfied<byte>(ComparisonExpr<Vector256<byte>> expr, Vector256<byte> a, Vector256<byte> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 f0 ac 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 39 18 d2 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 6a fc ff ff 48 8b cb e8 32 c2 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
85        | 7ff7c8545620h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[8i](v256x8i,v256x8i)                                           | bit satisfied<sbyte>(ComparisonExpr<Vector256<sbyte>> expr, Vector256<sbyte> a, Vector256<sbyte> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 a0 b4 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 99 17 d2 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 fa fc ff ff 48 8b cb e8 c2 c6 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
86        | 7ff7c85456c0h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[16u](v256x16u,v256x16u)                                        | bit satisfied<ushort>(ComparisonExpr<Vector256<ushort>> expr, Vector256<ushort> a, Vector256<ushort> b)       | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 e0 b8 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 f9 16 d2 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 ea fc ff ff 48 8b cb e8 42 c7 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
87        | 7ff7c8545760h   | 1120    | hex://logix/logic.engine?satisfied#satisfied_g[16i](v256x16i,v256x16i)                                        | bit satisfied<short>(ComparisonExpr<Vector256<short>> expr, Vector256<short> a, Vector256<short> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 20 bd 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 59 16 d2 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 da fc ff ff 48 8b cb e8 c2 c7 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 43 fe d1 5e 5e 00 00 d8 be 74 c8 f7 7f 00 00 e8 33 fe d1 5e 5e 00 09 e8 2b fe d1 5e 5e 01 08 e8 23 fe d1 5e 5e 02 07 e8 1b fe d1 5e 5e 03 06 e8 13 fe d1 5e 5e 04 05 e8 0b fe d1 5e 5e 05 04 e8 03 fe d1 5e 5e 06 03 e8 fb fd d1 5e 5e 07 02 e8 f3 fd d1 5e 5e 08 01 e8 eb fd d1 5e 5e 09 00 68 bf 74 c8 f7 7f 00 00 e8 db fd d1 5e 5e 00 03 e8 d3 fd d1 5e 5e 03 02 e8 cb fd d1 5e 5e 06 01 e8 c3 fd d1 5e 5e 09 00 48 c2 74 c8 f7 7f 00 00 e8 b3 fd d1 5e 5e 00 00 18 c3 74 c8 f7 7f 00 00 e8 a3 fd d1 5e 5e 00 09 e8 9b fd d1 5e 5e 01 08 e8 93 fd d1 5e 5e 02 07 e8 8b fd d1 5e 5e 03 06 e8 83 fd d1 5e 5e 04 05 e8 7b fd d1 5e 5e 05 04 e8 73 fd d1 5e 5e 06 03 e8 6b fd d1 5e 5e 07 02 e8 63 fd d1 5e 5e 08 01 e8 5b fd d1 5e 5e 09 00 a8 c3 74 c8 f7 7f 00 00 e8 4b fd d1 5e 5e 00 03 e8 43 fd d1 5e 5e 03 02 e8 3b fd d1 5e 5e 06 01 e8 33 fd d1 5e 5e 09 00 88 c6 74 c8 f7 7f 00 00 e8 23 fd d1 5e 5e 00 00 58 c7 74 c8 f7 7f 00 00 e8 13 fd d1 5e 5e 00 09 e8 0b fd d1 5e 5e 01 08 e8 03 fd d1 5e 5e 02 07 e8 fb fc d1 5e 5e 03 06 e8 f3 fc d1 5e 5e 04 05 e8 eb fc d1 5e 5e 05 04 e8 e3 fc d1 5e 5e 06 03 e8 db fc d1 5e 5e 07 02 e8 d3 fc d1 5e 5e 08 01 e8 cb fc d1 5e 5e 09 00 e8 c7 74 c8 f7 7f 00 00 e8 bb fc d1 5e 5e 00 03 e8 b3 fc d1 5e 5e 01 02 e8 ab fc d1 5e 5e 02 01 e8 a3 fc d1 5e 5e 03 00 80 c9 74 c8 f7 7f 00 00 e8 93 fc d1 5e 5e 00 03 e8 8b fc d1 5e 5e 03 02 e8 83 fc d1 5e 5e 06 01 e8 7b fc d1 5e 5e 09 00 b0 cb 74 c8 f7 7f 00 00 e8 6b fc d1 5e 5e 00 00 80 cc 74 c8 f7 7f 00 00 e8 5b fc d1 5e 5e 00 00 e0 cc 74 c8 f7 7f 00 00 e8 4b fc d1 5e 5e 00 00 40 cd 74 c8 f7 7f 00 00 e8 3b fc d1 5e 5e 00 09 e8 33 fc d1 5e 5e 01 08 e8 2b fc d1 5e 5e 02 07 e8 23 fc d1 5e 5e 03 06 e8 1b fc d1 5e 5e 04 05 e8 13 fc d1 5e 5e 05 04 e8 0b fc d1 5e 5e 06 03 e8 03 fc d1 5e 5e 07 02 e8 fb fb d1 5e 5e 08 01 e8 f3 fb d1 5e 5e 09 00 d0 cd 74 c8 f7 7f 00 00 e8 e3 fb d1 5e 5e 00 03 e8 db fb d1 5e 5e 03 02 e8 d3 fb d1 5e 5e 06 01 e8 cb fb d1 5e 5e 09 00 b0 d0 74 c8 f7 7f 00 00 e8 bb fb d1 5e 5e 00 00 80 d4 74 c8 f7 7f 00 00 e8 ab fb d1 5e 5e 00 00 f8 d4 74 c8 f7 7f 00 00 e8 9b fb d1 5e 5e 00 00 18 d6 74 c8 f7 7f 00 00 49 ba 28 d8 74 c8 f7 7f 00 00 40 e9 e0 fe d1 5e 49 ba 00 d9 74 c8 f7 7f 00 00 40 e9 d0 fe d1 5e e8 6b fb d1 5e 5e 00 01 e8 63 fb d1 5e 5e 01 00 d8 da 74 c8 f7 7f 00 00 e8 53 fb d1 5e 5e 00 18 e8 4b fb d1 5e 5e 01 17 e8 43 fb d1 5e 5e 02 16 e8 3b fb d1 5e 5e 03 15 e8 33 fb d1 5e 5e 04 14 e8 2b fb d1 5e 5e 05 13 e8 23 fb d1 5e 5e 06 12 e8 1b fb d1 5e 5e 07 11 e8 13 fb d1 5e 5e 08 10 e8 0b fb d1 5e 5e 09 0f e8 03 fb d1 5e 5e 0a 0e e8 fb fa d1 5e 5e 0b 0d e8 f3 fa d1 5e 5e 0c 0c e8 eb fa d1 5e 5e 0d 0b e8 e3 fa d1 5e 5e 0e 0a e8 db fa d1 5e 5e 0f 09 e8 d3 fa d1 5e 5e 10 08 e8 cb fa d1 5e 5e 11 07 e8 c3 fa d1 5e 5e 12 06 e8 bb fa d1 5e 5e 13 05 e8 b3 fa d1 5e 5e 14 04 e8 ab fa d1 5e 5e 15 03 e8 a3 fa d1 5e 5e 16 02 e8 9b fa d1 5e 5e 17 01 e8 93 fa d1 5e 5e 18 00 e0 d9 74 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
88        | 7ff7c8545c00h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[32u](v256x32u,v256x32u)                                        | bit satisfied<uint>(ComparisonExpr<Vector256<uint>> expr, Vector256<uint> a, Vector256<uint> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 60 c1 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 b9 11 d2 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 f2 fb ff ff 48 8b cb e8 42 c4 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
89        | 7ff7c8545ca0h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[32i](v256x32i,v256x32i)                                        | bit satisfied<int>(ComparisonExpr<Vector256<int>> expr, Vector256<int> a, Vector256<int> b)                   | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 a0 c5 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 19 11 d2 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 c2 c4 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
90        | 7ff7c8545d40h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[64u](v256x64u,v256x64u)                                        | bit satisfied<ulong>(ComparisonExpr<Vector256<ulong>> expr, Vector256<ulong> a, Vector256<ulong> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 c8 ca 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 79 10 d2 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 d2 fb ff ff 48 8b cb e8 52 fc ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
91        | 7ff7c8545de0h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[64i](v256x64i,v256x64i)                                        | bit satisfied<long>(ComparisonExpr<Vector256<long>> expr, Vector256<long> a, Vector256<long> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 c8 cf 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 d9 0f d2 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 0a fc ff ff 48 8b cb e8 b2 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
92        | 7ff7c8545e80h   | 35      | hex://logix/logic.engine?eval#eval_()                                                                         | bit eval(ILogicExpr expr)                                                                                     | 0f 1f 44 00 00 48 b8 90 66 da c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
93        | 7ff7c8545eb0h   | 759     | hex://logix/logic.engine?satisfied#satisfied_(1u,1u)                                                          | bit satisfied(ComparisonExpr expr, bit a, bit b)                                                              | 57 56 48 83 ec 28 48 8b f1 41 8b f8 8b 0e 48 8b 4e 18 83 79 08 00 76 54 48 8b 49 10 49 bb 58 0e 63 c7 f7 7f 00 00 48 b8 58 0e 63 c7 f7 7f 00 00 39 09 ff 10 48 8b 4e 18 83 79 08 01 76 2e 48 8b 49 18 8b d7 49 bb 60 0e 63 c7 f7 7f 00 00 48 b8 60 0e 63 c7 f7 7f 00 00 39 09 ff 10 48 8b ce e8 7c 07 86 ff 90 48 83 c4 28 5e 5f c3 e8 af 9e e4 5e cc 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 50 46 75 c8 f7 7f 00 00 55 41 57 41 56 41 54 57 56 53 48 83 ec 40 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 5e 10 48 8b 4f 10 48 85 c9 75 05 45 33 f6 eb 04 44 8b 71 08 41 bf b7 00 00 00 41 bc 01 00 00 00 48 8b cb 49 bb 88 0e 63 c7 f7 7f 00 00 48 b8 88 0e 63 c7 f7 7f 00 00 39 09 ff 10 41 3b c6 0f 85 0a 01 00 00 48 8b cb 49 bb 90 0e 63 c7 f7 7f 00 00 48 b8 90 0e 63 c7 f7 7f 00 00 39 09 ff 10 8b c8 e8 cb 11 86 ff 48 8b c8 49 bb 68 0e 63 c7 f7 7f 00 00 48 b8 68 0e 63 c7 f7 7f 00 00 39 09 ff 10 48 89 45 c0 48 8b 4d c0 49 bb 70 0e 63 c7 f7 7f 00 00 48 b8 70 0e 63 c7 f7 7f 00 00 39 09 ff 10 85 c0 74 5d 48 8b 4d c0 49 bb 78 0e 63 c7 f7 7f 00 00 48 b8 78 0e 63 c7 f7 7f 00 00 39 09 ff 10 48 8b d0 48 8b ce e8 bd 1c 86 ff 48 8b ce e8 5d 06 86 ff 8b d8 48 8b cf e8 53 06 86 ff 3b d8 75 3e 48 8b 4d c0 49 bb 70 0e 63 c7 f7 7f 00 00 48 b8 70 0e 63 c7 f7 7f 00 00 39 09 ff 10 85 c0 75 a3 48 8b 4d c0 49 bb 80 0e 63 c7 f7 7f 00 00 48 b8 80 0e 63 c7 f7 7f 00 00 39 09 ff 10 eb 1a 48 8b cc e8 9b 00 00 00 90 33 c0 48 8d 65 d0 5b 5e 5f 41 5c 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d0 5b 5e 5f 41 5c 41 5e 41 5f 5d c3 48 8b cb 49 bb 98 0e 63 c7 f7 7f 00 00 48 b8 98 0e 63 c7 f7 7f 00 00 39 09 ff 10 8b f0 b9 19 02 00 00 48 ba 20 00 c4 c7 f7 7f 00 00 e8 d2 a4 e4 5e 48 8b f8 b9 25 02 00 00 48 ba 20 00 c4 c7 f7 7f 00 00 e8 bb a4 e4 5e 4c 8b c8 4c 8d 45 c8 45 88 20 45 89 78 04 4c 8b c7 8b ce 41 8b d6 48 8b 45 c8 48 89 44 24 20 e8 e7 e4 21 ff 48 8b c8 e8 df 57 c9 5e cc 55 41 57 41 56 41 54 57 56 53 48 83 ec 30 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c0 00 74 1c 48 8b 4d c0 49 bb 80 0e 63 c7 f7 7f 00 00 48 b8 80 0e 63 c7 f7 7f 00 00 39 09 ff 10 90 48 83 c4 30 5b 5e 5f 41 5c 41 5e 41 5f 5d c3 19 0e 08 00 0e 72 0a 30 09 60 08 70 07 c0 05 e0 03 f0 01 50 40 00 00 00 19 0e 08 00 0e 52 0a 30 09 60 08 70 07 c0 05 e0 03 f0 01 50 40 00 00 00 00 00 00 00 00 00 00
94        | 7ff7c8545f40h   | 615     | hex://logix/logic.engine?equal#equal_()                                                                       | bit equal(VariedLogicExpr a, VariedLogicExpr b)                                                               | 55 41 57 41 56 41 54 57 56 53 48 83 ec 40 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 5e 10 48 8b 4f 10 48 85 c9 75 05 45 33 f6 eb 04 44 8b 71 08 41 bf b7 00 00 00 41 bc 01 00 00 00 48 8b cb 49 bb 88 0e 63 c7 f7 7f 00 00 48 b8 88 0e 63 c7 f7 7f 00 00 39 09 ff 10 41 3b c6 0f 85 0a 01 00 00 48 8b cb 49 bb 90 0e 63 c7 f7 7f 00 00 48 b8 90 0e 63 c7 f7 7f 00 00 39 09 ff 10 8b c8 e8 cb 11 86 ff 48 8b c8 49 bb 68 0e 63 c7 f7 7f 00 00 48 b8 68 0e 63 c7 f7 7f 00 00 39 09 ff 10 48 89 45 c0 48 8b 4d c0 49 bb 70 0e 63 c7 f7 7f 00 00 48 b8 70 0e 63 c7 f7 7f 00 00 39 09 ff 10 85 c0 74 5d 48 8b 4d c0 49 bb 78 0e 63 c7 f7 7f 00 00 48 b8 78 0e 63 c7 f7 7f 00 00 39 09 ff 10 48 8b d0 48 8b ce e8 bd 1c 86 ff 48 8b ce e8 5d 06 86 ff 8b d8 48 8b cf e8 53 06 86 ff 3b d8 75 3e 48 8b 4d c0 49 bb 70 0e 63 c7 f7 7f 00 00 48 b8 70 0e 63 c7 f7 7f 00 00 39 09 ff 10 85 c0 75 a3 48 8b 4d c0 49 bb 80 0e 63 c7 f7 7f 00 00 48 b8 80 0e 63 c7 f7 7f 00 00 39 09 ff 10 eb 1a 48 8b cc e8 9b 00 00 00 90 33 c0 48 8d 65 d0 5b 5e 5f 41 5c 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d0 5b 5e 5f 41 5c 41 5e 41 5f 5d c3 48 8b cb 49 bb 98 0e 63 c7 f7 7f 00 00 48 b8 98 0e 63 c7 f7 7f 00 00 39 09 ff 10 8b f0 b9 19 02 00 00 48 ba 20 00 c4 c7 f7 7f 00 00 e8 d2 a4 e4 5e 48 8b f8 b9 25 02 00 00 48 ba 20 00 c4 c7 f7 7f 00 00 e8 bb a4 e4 5e 4c 8b c8 4c 8d 45 c8 45 88 20 45 89 78 04 4c 8b c7 8b ce 41 8b d6 48 8b 45 c8 48 89 44 24 20 e8 e7 e4 21 ff 48 8b c8 e8 df 57 c9 5e cc 55 41 57 41 56 41 54 57 56 53 48 83 ec 30 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c0 00 74 1c 48 8b 4d c0 49 bb 80 0e 63 c7 f7 7f 00 00 48 b8 80 0e 63 c7 f7 7f 00 00 39 09 ff 10 90 48 83 c4 30 5b 5e 5f 41 5c 41 5e 41 5f 5d c3 19 0e 08 00 0e 72 0a 30 09 60 08 70 07 c0 05 e0 03 f0 01 50 40 00 00 00 19 0e 08 00 0e 52 0a 30 09 60 08 70 07 c0 05 e0 03 f0 01 50 40 00 00 00 00 00 00 00 00 00 00
