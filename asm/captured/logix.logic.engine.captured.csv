Sequence  | Address         | Length  | Uri                                                                                                           | OpSig                                                                                                         | Data
0         | 7ff7c8678440h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[8u]()                                                         | bit eval<byte>(ILogicExpr<byte> expr)                                                                         | 0f 1f 44 00 00 48 b8 a0 ee e0 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
1         | 7ff7c8678470h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[8i]()                                                         | bit eval<sbyte>(ILogicExpr<sbyte> expr)                                                                       | 0f 1f 44 00 00 48 b8 a0 ee e0 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
2         | 7ff7c86784a0h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[16u]()                                                        | bit eval<ushort>(ILogicExpr<ushort> expr)                                                                     | 0f 1f 44 00 00 48 b8 a0 ee e0 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
3         | 7ff7c86784d0h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[16i]()                                                        | bit eval<short>(ILogicExpr<short> expr)                                                                       | 0f 1f 44 00 00 48 b8 a0 ee e0 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
4         | 7ff7c8678500h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[32u]()                                                        | bit eval<uint>(ILogicExpr<uint> expr)                                                                         | 0f 1f 44 00 00 48 b8 a0 ee e0 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
5         | 7ff7c8678530h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[32i]()                                                        | bit eval<int>(ILogicExpr<int> expr)                                                                           | 0f 1f 44 00 00 48 b8 a0 ee e0 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
6         | 7ff7c8678560h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[64u]()                                                        | bit eval<ulong>(ILogicExpr<ulong> expr)                                                                       | 0f 1f 44 00 00 48 b8 a0 ee e0 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
7         | 7ff7c8678590h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[64i]()                                                        | bit eval<long>(ILogicExpr<long> expr)                                                                         | 0f 1f 44 00 00 48 b8 a0 ee e0 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
8         | 7ff7c86785c0h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[8u]()                                                        | LiteralExpr<byte> eval<byte>(IExpr<byte> expr)                                                                | 0f 1f 44 00 00 48 b8 20 80 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
9         | 7ff7c86785f0h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[8i]()                                                        | LiteralExpr<sbyte> eval<sbyte>(IExpr<sbyte> expr)                                                             | 0f 1f 44 00 00 48 b8 50 80 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
10        | 7ff7c8678620h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[16u]()                                                       | LiteralExpr<ushort> eval<ushort>(IExpr<ushort> expr)                                                          | 0f 1f 44 00 00 48 b8 70 80 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
11        | 7ff7c8678650h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[16i]()                                                       | LiteralExpr<short> eval<short>(IExpr<short> expr)                                                             | 0f 1f 44 00 00 48 b8 90 80 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
12        | 7ff7c8678680h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[32u]()                                                       | LiteralExpr<uint> eval<uint>(IExpr<uint> expr)                                                                | 0f 1f 44 00 00 48 b8 b0 80 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
13        | 7ff7c86786b0h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[32i]()                                                       | LiteralExpr<int> eval<int>(IExpr<int> expr)                                                                   | 0f 1f 44 00 00 48 b8 d0 80 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
14        | 7ff7c86786e0h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[64u]()                                                       | LiteralExpr<ulong> eval<ulong>(IExpr<ulong> expr)                                                             | 0f 1f 44 00 00 48 b8 f0 80 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
15        | 7ff7c8678710h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[64i]()                                                       | LiteralExpr<long> eval<long>(IExpr<long> expr)                                                                | 0f 1f 44 00 00 48 b8 10 81 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
16        | 7ff7c8678740h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[8u]()                                                           | LiteralExpr<byte> eval<byte>(IComparisonExpr<byte> expr)                                                      | 0f 1f 44 00 00 48 b8 50 57 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
17        | 7ff7c8678770h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[8i]()                                                           | LiteralExpr<sbyte> eval<sbyte>(IComparisonExpr<sbyte> expr)                                                   | 0f 1f 44 00 00 48 b8 40 58 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
18        | 7ff7c86787a0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[16u]()                                                          | LiteralExpr<ushort> eval<ushort>(IComparisonExpr<ushort> expr)                                                | 0f 1f 44 00 00 48 b8 00 59 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
19        | 7ff7c86787d0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[16i]()                                                          | LiteralExpr<short> eval<short>(IComparisonExpr<short> expr)                                                   | 0f 1f 44 00 00 48 b8 c0 59 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
20        | 7ff7c8678800h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[32u]()                                                          | LiteralExpr<uint> eval<uint>(IComparisonExpr<uint> expr)                                                      | 0f 1f 44 00 00 48 b8 80 5a 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
21        | 7ff7c8678830h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[32i]()                                                          | LiteralExpr<int> eval<int>(IComparisonExpr<int> expr)                                                         | 0f 1f 44 00 00 48 b8 40 5b 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
22        | 7ff7c8678860h   | 1107    | hex://logix/logic.engine?eval#eval_cmp_expr_g[64i]()                                                          | LiteralExpr<long> eval<long>(IComparisonExpr<long> expr)                                                      | 0f 1f 44 00 00 48 b8 00 5c 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 b3 cd be 5e 5e 00 0a e8 ab cd be 5e 5e 01 09 e8 a3 cd be 5e 5e 02 08 e8 9b cd be 5e 5e 03 07 e8 93 cd be 5e 5e 04 06 e8 8b cd be 5e 5e 05 05 e8 83 cd be 5e 5e 06 04 e8 7b cd be 5e 5e 07 03 e8 73 cd be 5e 5e 08 02 e8 6b cd be 5e 5e 09 01 e8 63 cd be 5e 5e 0a 00 50 ca ad c8 f7 7f 00 00 e8 53 cd be 5e 5e 00 00 c0 ce ad c8 f7 7f 00 00 e8 43 cd be 5e 5e 00 00 20 cf ad c8 f7 7f 00 00 e8 33 cd be 5e 5e 00 00 80 cf ad c8 f7 7f 00 00 e8 23 cd be 5e 5e 00 00 e0 cf ad c8 f7 7f 00 00 e8 13 cd be 5e 5e 00 00 40 d0 ad c8 f7 7f 00 00 e8 03 cd be 5e 5e 00 00 a0 d0 ad c8 f7 7f 00 00 e8 f3 cc be 5e 5e 00 0c e8 eb cc be 5e 5e 01 0b e8 e3 cc be 5e 5e 02 0a e8 db cc be 5e 5e 03 09 e8 d3 cc be 5e 5e 04 08 e8 cb cc be 5e 5e 05 07 e8 c3 cc be 5e 5e 06 06 e8 bb cc be 5e 5e 07 05 e8 b3 cc be 5e 5e 08 04 e8 ab cc be 5e 5e 09 03 e8 a3 cc be 5e 5e 0a 02 e8 9b cc be 5e 5e 0b 01 e8 93 cc be 5e 5e 0c 00 30 d1 ad c8 f7 7f 00 00 e8 83 cc be 5e 5e 00 00 b8 d2 ad c8 f7 7f 00 00 e8 73 cc be 5e 5e 00 0a e8 6b cc be 5e 5e 01 09 e8 63 cc be 5e 5e 02 08 e8 5b cc be 5e 5e 03 07 e8 53 cc be 5e 5e 04 06 e8 4b cc be 5e 5e 05 05 e8 43 cc be 5e 5e 06 04 e8 3b cc be 5e 5e 07 03 e8 33 cc be 5e 5e 08 02 e8 2b cc be 5e 5e 09 01 e8 23 cc be 5e 5e 0a 00 68 d3 ad c8 f7 7f 00 00 e8 13 cc be 5e 5e 00 00 e8 d4 ad c8 f7 7f 00 00 e8 03 cc be 5e 5e 00 03 e8 fb cb be 5e 5e 01 02 e8 f3 cb be 5e 5e 02 01 e8 eb cb be 5e 5e 03 00 20 d6 ad c8 f7 7f 00 00 e8 db cb be 5e 5e 00 00 18 d7 ad c8 f7 7f 00 00 e8 cb cb be 5e 5e 00 00 78 d7 ad c8 f7 7f 00 00 e8 bb cb be 5e 5e 00 00 d8 d7 ad c8 f7 7f 00 00 e8 ab cb be 5e 5e 00 00 38 d8 ad c8 f7 7f 00 00 e8 9b cb be 5e 5e 00 00 98 d8 ad c8 f7 7f 00 00 e8 8b cb be 5e 5e 00 00 f8 d8 ad c8 f7 7f 00 00 e8 7b cb be 5e 5e 00 00 58 d9 ad c8 f7 7f 00 00 e8 6b cb be 5e 5e 00 00 b8 d9 ad c8 f7 7f 00 00 e8 5b cb be 5e 5e 00 03 e8 53 cb be 5e 5e 01 02 e8 4b cb be 5e 5e 02 01 e8 43 cb be 5e 5e 03 00 90 da ad c8 f7 7f 00 00 e8 33 cb be 5e 5e 00 00 00 dc ad c8 f7 7f 00 00 e8 23 cb be 5e 5e 00 00 60 dc ad c8 f7 7f 00 00 e8 13 cb be 5e 5e 00 00 c0 dc ad c8 f7 7f 00 00 e8 03 cb be 5e 5e 00 00 20 dd ad c8 f7 7f 00 00 e8 f3 ca be 5e 5e 00 00 80 dd ad c8 f7 7f 00 00 e8 e3 ca be 5e 5e 00 00 e0 dd ad c8 f7 7f 00 00 e8 d3 ca be 5e 5e 00 00 40 de ad c8 f7 7f 00 00 e8 c3 ca be 5e 5e 00 00 a0 de ad c8 f7 7f 00 00 e8 b3 ca be 5e 5e 00 0a e8 ab ca be 5e 5e 01 09 e8 a3 ca be 5e 5e 02 08 e8 9b ca be 5e 5e 03 07 e8 93 ca be 5e 5e 04 06 e8 8b ca be 5e 5e 05 05 e8 83 ca be 5e 5e 06 04 e8 7b ca be 5e 5e 07 03 e8 73 ca be 5e 5e 08 02 e8 6b ca be 5e 5e 09 01 e8 63 ca be 5e 5e 0a 00 00 df ad c8 f7 7f 00 00 e8 53 ca be 5e 5e 00 00 98 e0 ad c8 f7 7f 00 00 e8 43 ca be 5e 5e 00 00 68 e2 ad c8 f7 7f 00 00 e8 33 ca be 5e 5e 00 00 c8 e2 ad c8 f7 7f 00 00 e8 23 ca be 5e 5e 00 00 28 e3 ad c8 f7 7f 00 00 e8 13 ca be 5e 5e 00 02 e8 0b ca be 5e 5e 01 01 e8 03 ca be 5e 5e 02 00 78 e3 ad c8 f7 7f 00 00 e8 f3 c9 be 5e 5e 00 00 68 e4 ad c8 f7 7f 00 00 e8 e3 c9 be 5e 5e 00 00 c8 e4 ad c8 f7 7f 00 00 e8 d3 c9 be 5e 5e 00 02 e8 cb c9 be 5e 5e 01 01 e8 c3 c9 be 5e 5e 02 00 18 e5 ad c8 f7 7f 00 00 d0 a5 ac c8 f7 7f 00 00 0f 1f 44 00 00 48 b8 90 65 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
23        | 7ff7c8678c90h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[8u]()                                                       | LiteralExpr<Vector128<byte>> eval<byte>(IComparisonExpr<Vector128<byte>> expr)                                | 0f 1f 44 00 00 48 b8 90 65 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
24        | 7ff7c8678cc0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[8i]()                                                       | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IComparisonExpr<Vector128<sbyte>> expr)                             | 0f 1f 44 00 00 48 b8 80 66 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
25        | 7ff7c8678cf0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[16u]()                                                      | LiteralExpr<Vector128<ushort>> eval<ushort>(IComparisonExpr<Vector128<ushort>> expr)                          | 0f 1f 44 00 00 48 b8 80 6b 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
26        | 7ff7c8678d20h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[16i]()                                                      | LiteralExpr<Vector128<short>> eval<short>(IComparisonExpr<Vector128<short>> expr)                             | 0f 1f 44 00 00 48 b8 70 6c 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
27        | 7ff7c8678d50h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[32u]()                                                      | LiteralExpr<Vector128<uint>> eval<uint>(IComparisonExpr<Vector128<uint>> expr)                                | 0f 1f 44 00 00 48 b8 60 6d 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
28        | 7ff7c8678d80h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[32i]()                                                      | LiteralExpr<Vector128<int>> eval<int>(IComparisonExpr<Vector128<int>> expr)                                   | 0f 1f 44 00 00 48 b8 50 6e 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
29        | 7ff7c8678db0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[64i]()                                                      | LiteralExpr<Vector128<long>> eval<long>(IComparisonExpr<Vector128<long>> expr)                                | 0f 1f 44 00 00 48 b8 50 73 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
30        | 7ff7c8678de0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[8u]()                                                       | LiteralExpr<Vector256<byte>> eval<byte>(IComparisonExpr<Vector256<byte>> expr)                                | 0f 1f 44 00 00 48 b8 40 74 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
31        | 7ff7c8678e10h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[8i]()                                                       | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IComparisonExpr<Vector256<sbyte>> expr)                             | 0f 1f 44 00 00 48 b8 60 75 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
32        | 7ff7c8678e40h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[16u]()                                                      | LiteralExpr<Vector256<ushort>> eval<ushort>(IComparisonExpr<Vector256<ushort>> expr)                          | 0f 1f 44 00 00 48 b8 90 7a 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
33        | 7ff7c8678e70h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[16i]()                                                      | LiteralExpr<Vector256<short>> eval<short>(IComparisonExpr<Vector256<short>> expr)                             | 0f 1f 44 00 00 48 b8 b0 7b 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
34        | 7ff7c8678ea0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[32u]()                                                      | LiteralExpr<Vector256<uint>> eval<uint>(IComparisonExpr<Vector256<uint>> expr)                                | 0f 1f 44 00 00 48 b8 d0 7c 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
35        | 7ff7c8678ed0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[32i]()                                                      | LiteralExpr<Vector256<int>> eval<int>(IComparisonExpr<Vector256<int>> expr)                                   | 0f 1f 44 00 00 48 b8 f0 7d 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
36        | 7ff7c8678f00h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[64i]()                                                      | LiteralExpr<Vector256<long>> eval<long>(IComparisonExpr<Vector256<long>> expr)                                | 0f 1f 44 00 00 48 b8 20 83 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
37        | 7ff7c8678f30h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[8u]()                                                           | bit eval<byte>(IComparisonPred<byte> expr)                                                                    | 0f 1f 44 00 00 48 b8 c0 5c 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
38        | 7ff7c8678f60h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[8i]()                                                           | bit eval<sbyte>(IComparisonPred<sbyte> expr)                                                                  | 0f 1f 44 00 00 48 b8 70 5d 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
39        | 7ff7c8678f90h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[16u]()                                                          | bit eval<ushort>(IComparisonPred<ushort> expr)                                                                | 0f 1f 44 00 00 48 b8 20 62 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
40        | 7ff7c8678fc0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[16i]()                                                          | bit eval<short>(IComparisonPred<short> expr)                                                                  | 0f 1f 44 00 00 48 b8 d0 62 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
41        | 7ff7c8678ff0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[32u]()                                                          | bit eval<uint>(IComparisonPred<uint> expr)                                                                    | 0f 1f 44 00 00 48 b8 80 63 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
42        | 7ff7c8679020h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[32i]()                                                          | bit eval<int>(IComparisonPred<int> expr)                                                                      | 0f 1f 44 00 00 48 b8 30 64 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
43        | 7ff7c8679050h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[64i]()                                                          | bit eval<long>(IComparisonPred<long> expr)                                                                    | 0f 1f 44 00 00 48 b8 e0 64 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
44        | 7ff7c8679080h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[8u]()                                                         | LiteralExpr<byte> eval<byte>(IArithmeticExpr<byte> expr)                                                      | 0f 1f 44 00 00 48 b8 08 8c 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
45        | 7ff7c86790b0h   | 1107    | hex://logix/logic.engine?eval#eval_arith_expr_g[8i]()                                                         | LiteralExpr<sbyte> eval<sbyte>(IArithmeticExpr<sbyte> expr)                                                   | 0f 1f 44 00 00 48 b8 58 8c 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 63 c5 be 5e 5e 00 00 08 e6 ad c8 f7 7f 00 00 e8 53 c5 be 5e 5e 00 00 68 e6 ad c8 f7 7f 00 00 e8 43 c5 be 5e 5e 00 02 e8 3b c5 be 5e 5e 01 01 e8 33 c5 be 5e 5e 02 00 b8 e6 ad c8 f7 7f 00 00 e8 23 c5 be 5e 5e 00 00 a8 e7 ad c8 f7 7f 00 00 e8 13 c5 be 5e 5e 00 00 08 e8 ad c8 f7 7f 00 00 e8 03 c5 be 5e 5e 00 02 e8 fb c4 be 5e 5e 01 01 e8 f3 c4 be 5e 5e 02 00 58 e8 ad c8 f7 7f 00 00 e8 e3 c4 be 5e 5e 00 00 48 e9 ad c8 f7 7f 00 00 e8 d3 c4 be 5e 5e 00 00 a8 e9 ad c8 f7 7f 00 00 e8 c3 c4 be 5e 5e 00 02 e8 bb c4 be 5e 5e 01 01 e8 b3 c4 be 5e 5e 02 00 f8 e9 ad c8 f7 7f 00 00 e8 a3 c4 be 5e 5e 00 00 e8 ea ad c8 f7 7f 00 00 e8 93 c4 be 5e 5e 00 00 48 eb ad c8 f7 7f 00 00 e8 83 c4 be 5e 5e 00 02 e8 7b c4 be 5e 5e 01 01 e8 73 c4 be 5e 5e 02 00 98 eb ad c8 f7 7f 00 00 e8 63 c4 be 5e 5e 00 00 88 ec ad c8 f7 7f 00 00 e8 53 c4 be 5e 5e 00 00 e8 ec ad c8 f7 7f 00 00 e8 43 c4 be 5e 5e 00 02 e8 3b c4 be 5e 5e 01 01 e8 33 c4 be 5e 5e 02 00 38 ed ad c8 f7 7f 00 00 e8 23 c4 be 5e 5e 00 00 28 ee ad c8 f7 7f 00 00 e8 13 c4 be 5e 5e 00 00 88 ee ad c8 f7 7f 00 00 e8 03 c4 be 5e 5e 00 02 e8 fb c3 be 5e 5e 01 01 e8 f3 c3 be 5e 5e 02 00 d8 ee ad c8 f7 7f 00 00 e8 e3 c3 be 5e 5e 00 0c e8 db c3 be 5e 5e 01 0b e8 d3 c3 be 5e 5e 02 0a e8 cb c3 be 5e 5e 03 09 e8 c3 c3 be 5e 5e 04 08 e8 bb c3 be 5e 5e 05 07 e8 b3 c3 be 5e 5e 06 06 e8 ab c3 be 5e 5e 07 05 e8 a3 c3 be 5e 5e 08 04 e8 9b c3 be 5e 5e 09 03 e8 93 c3 be 5e 5e 0a 02 e8 8b c3 be 5e 5e 0b 01 e8 83 c3 be 5e 5e 0c 00 d8 ef ad c8 f7 7f 00 00 e8 73 c3 be 5e 5e 00 00 60 f1 ad c8 f7 7f 00 00 e8 63 c3 be 5e 5e 00 0a e8 5b c3 be 5e 5e 01 09 e8 53 c3 be 5e 5e 02 08 e8 4b c3 be 5e 5e 03 07 e8 43 c3 be 5e 5e 04 06 e8 3b c3 be 5e 5e 05 05 e8 33 c3 be 5e 5e 06 04 e8 2b c3 be 5e 5e 07 03 e8 23 c3 be 5e 5e 08 02 e8 1b c3 be 5e 5e 09 01 e8 13 c3 be 5e 5e 0a 00 10 f2 ad c8 f7 7f 00 00 e8 03 c3 be 5e 5e 00 00 90 f3 ad c8 f7 7f 00 00 e8 f3 c2 be 5e 5e 00 00 d8 f4 ad c8 f7 7f 00 00 e8 e3 c2 be 5e 5e 00 0a e8 db c2 be 5e 5e 01 09 e8 d3 c2 be 5e 5e 02 08 e8 cb c2 be 5e 5e 03 07 e8 c3 c2 be 5e 5e 04 06 e8 bb c2 be 5e 5e 05 05 e8 b3 c2 be 5e 5e 06 04 e8 ab c2 be 5e 5e 07 03 e8 a3 c2 be 5e 5e 08 02 e8 9b c2 be 5e 5e 09 01 e8 93 c2 be 5e 5e 0a 00 38 f5 ad c8 f7 7f 00 00 e8 83 c2 be 5e 5e 00 00 b8 f6 ad c8 f7 7f 00 00 e8 73 c2 be 5e 5e 00 00 00 f8 ad c8 f7 7f 00 00 e8 63 c2 be 5e 5e 00 0c e8 5b c2 be 5e 5e 01 0b e8 53 c2 be 5e 5e 02 0a e8 4b c2 be 5e 5e 03 09 e8 43 c2 be 5e 5e 04 08 e8 3b c2 be 5e 5e 05 07 e8 33 c2 be 5e 5e 06 06 e8 2b c2 be 5e 5e 07 05 e8 23 c2 be 5e 5e 08 04 e8 1b c2 be 5e 5e 09 03 e8 13 c2 be 5e 5e 0a 02 e8 0b c2 be 5e 5e 0b 01 e8 03 c2 be 5e 5e 0c 00 90 f8 ad c8 f7 7f 00 00 e8 f3 c1 be 5e 5e 00 00 18 fa ad c8 f7 7f 00 00 e8 e3 c1 be 5e 5e 00 0a e8 db c1 be 5e 5e 01 09 e8 d3 c1 be 5e 5e 02 08 e8 cb c1 be 5e 5e 03 07 e8 c3 c1 be 5e 5e 04 06 e8 bb c1 be 5e 5e 05 05 e8 b3 c1 be 5e 5e 06 04 e8 ab c1 be 5e 5e 07 03 e8 a3 c1 be 5e 5e 08 02 e8 9b c1 be 5e 5e 09 01 e8 93 c1 be 5e 5e 0a 00 c8 fa ad c8 f7 7f 00 00 e8 83 c1 be 5e 5e 00 00 48 fc ad c8 f7 7f 00 00 e8 73 c1 be 5e 5e 00 00 90 fd ad c8 f7 7f 00 00 30 c9 ac c8 f7 7f 00 00 0f 1f 44 00 00 48 b8 e8 90 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
46        | 7ff7c86794e0h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[16u]()                                                        | LiteralExpr<ushort> eval<ushort>(IArithmeticExpr<ushort> expr)                                                | 0f 1f 44 00 00 48 b8 e8 90 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
47        | 7ff7c8679510h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[16i]()                                                        | LiteralExpr<short> eval<short>(IArithmeticExpr<short> expr)                                                   | 0f 1f 44 00 00 48 b8 28 91 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
48        | 7ff7c8679540h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[32u]()                                                        | LiteralExpr<uint> eval<uint>(IArithmeticExpr<uint> expr)                                                      | 0f 1f 44 00 00 48 b8 68 91 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
49        | 7ff7c8679570h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[32i]()                                                        | LiteralExpr<int> eval<int>(IArithmeticExpr<int> expr)                                                         | 0f 1f 44 00 00 48 b8 a8 91 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
50        | 7ff7c86795a0h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[64u]()                                                        | LiteralExpr<ulong> eval<ulong>(IArithmeticExpr<ulong> expr)                                                   | 0f 1f 44 00 00 48 b8 e8 91 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
51        | 7ff7c86795d0h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[64i]()                                                        | LiteralExpr<long> eval<long>(IArithmeticExpr<long> expr)                                                      | 0f 1f 44 00 00 48 b8 28 92 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
52        | 7ff7c8679600h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[8u]()                                                     | LiteralExpr<Vector128<byte>> eval<byte>(IExpr<Vector128<byte>> expr)                                          | 0f 1f 44 00 00 48 b8 d8 60 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
53        | 7ff7c8679630h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[8i]()                                                     | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IExpr<Vector128<sbyte>> expr)                                       | 0f 1f 44 00 00 48 b8 d0 61 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
54        | 7ff7c8679660h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[16u]()                                                    | LiteralExpr<Vector128<ushort>> eval<ushort>(IExpr<Vector128<ushort>> expr)                                    | 0f 1f 44 00 00 48 b8 18 68 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
55        | 7ff7c8679690h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[16i]()                                                    | LiteralExpr<Vector128<short>> eval<short>(IExpr<Vector128<short>> expr)                                       | 0f 1f 44 00 00 48 b8 00 69 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
56        | 7ff7c86796c0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[32u]()                                                    | LiteralExpr<Vector128<uint>> eval<uint>(IExpr<Vector128<uint>> expr)                                          | 0f 1f 44 00 00 48 b8 e8 69 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
57        | 7ff7c86796f0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[32i]()                                                    | LiteralExpr<Vector128<int>> eval<int>(IExpr<Vector128<int>> expr)                                             | 0f 1f 44 00 00 48 b8 d0 6a 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
58        | 7ff7c8679720h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[64u]()                                                    | LiteralExpr<Vector128<ulong>> eval<ulong>(IExpr<Vector128<ulong>> expr)                                       | 0f 1f 44 00 00 48 b8 c8 93 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
59        | 7ff7c8679750h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[64i]()                                                    | LiteralExpr<Vector128<long>> eval<long>(IExpr<Vector128<long>> expr)                                          | 0f 1f 44 00 00 48 b8 88 6f 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
60        | 7ff7c8679780h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[8u]()                                                     | LiteralExpr<Vector256<byte>> eval<byte>(IExpr<Vector256<byte>> expr)                                          | 0f 1f 44 00 00 48 b8 b8 71 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
61        | 7ff7c86797b0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[8i]()                                                     | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IExpr<Vector256<sbyte>> expr)                                       | 0f 1f 44 00 00 48 b8 b0 72 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
62        | 7ff7c86797e0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[16u]()                                                    | LiteralExpr<Vector256<ushort>> eval<ushort>(IExpr<Vector256<ushort>> expr)                                    | 0f 1f 44 00 00 48 b8 d8 76 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
63        | 7ff7c8679810h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[16i]()                                                    | LiteralExpr<Vector256<short>> eval<short>(IExpr<Vector256<short>> expr)                                       | 0f 1f 44 00 00 48 b8 c0 77 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
64        | 7ff7c8679840h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[32u]()                                                    | LiteralExpr<Vector256<uint>> eval<uint>(IExpr<Vector256<uint>> expr)                                          | 0f 1f 44 00 00 48 b8 a8 78 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
65        | 7ff7c8679870h   | 1064    | hex://logix/logic.engine?eval#eval_vector_expr256_g[32i]()                                                    | LiteralExpr<Vector256<int>> eval<int>(IExpr<Vector256<int>> expr)                                             | 0f 1f 44 00 00 48 b8 90 79 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 a3 bd be 5e 5e 00 0a e8 9b bd be 5e 5e 01 09 e8 93 bd be 5e 5e 02 08 e8 8b bd be 5e 5e 03 07 e8 83 bd be 5e 5e 04 06 e8 7b bd be 5e 5e 05 05 e8 73 bd be 5e 5e 06 04 e8 6b bd be 5e 5e 07 03 e8 63 bd be 5e 5e 08 02 e8 5b bd be 5e 5e 09 01 e8 53 bd be 5e 5e 0a 00 f0 fd ad c8 f7 7f 00 00 e8 43 bd be 5e 5e 00 00 70 ff ad c8 f7 7f 00 00 e8 33 bd be 5e 5e 00 00 d8 00 ae c8 f7 7f 00 00 e8 23 bd be 5e 5e 00 09 e8 1b bd be 5e 5e 01 08 e8 13 bd be 5e 5e 02 07 e8 0b bd be 5e 5e 03 06 e8 03 bd be 5e 5e 04 05 e8 fb bc be 5e 5e 05 04 e8 f3 bc be 5e 5e 06 03 e8 eb bc be 5e 5e 07 02 e8 e3 bc be 5e 5e 08 01 e8 db bc be 5e 5e 09 00 68 01 ae c8 f7 7f 00 00 e8 cb bc be 5e 5e 00 03 e8 c3 bc be 5e 5e 01 02 e8 bb bc be 5e 5e 02 01 e8 b3 bc be 5e 5e 03 00 00 03 ae c8 f7 7f 00 00 e8 a3 bc be 5e 5e 00 00 70 04 ae c8 f7 7f 00 00 e8 93 bc be 5e 5e 00 09 e8 8b bc be 5e 5e 01 08 e8 83 bc be 5e 5e 02 07 e8 7b bc be 5e 5e 03 06 e8 73 bc be 5e 5e 04 05 e8 6b bc be 5e 5e 05 04 e8 63 bc be 5e 5e 06 03 e8 5b bc be 5e 5e 07 02 e8 53 bc be 5e 5e 08 01 e8 4b bc be 5e 5e 09 00 00 05 ae c8 f7 7f 00 00 e8 3b bc be 5e 5e 00 00 a8 06 ae c8 f7 7f 00 00 e8 2b bc be 5e 5e 00 0a e8 23 bc be 5e 5e 01 09 e8 1b bc be 5e 5e 02 08 e8 13 bc be 5e 5e 03 07 e8 0b bc be 5e 5e 04 06 e8 03 bc be 5e 5e 05 05 e8 fb bb be 5e 5e 06 04 e8 f3 bb be 5e 5e 07 03 e8 eb bb be 5e 5e 08 02 e8 e3 bb be 5e 5e 09 01 e8 db bb be 5e 5e 0a 00 08 07 ae c8 f7 7f 00 00 e8 cb bb be 5e 5e 00 00 a0 08 ae c8 f7 7f 00 00 e8 bb bb be 5e 5e 00 00 70 09 ae c8 f7 7f 00 00 e8 ab bb be 5e 5e 00 00 d0 09 ae c8 f7 7f 00 00 e8 9b bb be 5e 5e 00 00 30 0a ae c8 f7 7f 00 00 e8 8b bb be 5e 5e 00 09 e8 83 bb be 5e 5e 01 08 e8 7b bb be 5e 5e 02 07 e8 73 bb be 5e 5e 03 06 e8 6b bb be 5e 5e 04 05 e8 63 bb be 5e 5e 05 04 e8 5b bb be 5e 5e 06 03 e8 53 bb be 5e 5e 07 02 e8 4b bb be 5e 5e 08 01 e8 43 bb be 5e 5e 09 00 c0 0a ae c8 f7 7f 00 00 e8 33 bb be 5e 5e 00 00 68 0c ae c8 f7 7f 00 00 e8 23 bb be 5e 5e 00 09 e8 1b bb be 5e 5e 01 08 e8 13 bb be 5e 5e 02 07 e8 0b bb be 5e 5e 03 06 e8 03 bb be 5e 5e 04 05 e8 fb ba be 5e 5e 05 04 e8 f3 ba be 5e 5e 06 03 e8 eb ba be 5e 5e 07 02 e8 e3 ba be 5e 5e 08 01 e8 db ba be 5e 5e 09 00 f8 0c ae c8 f7 7f 00 00 e8 cb ba be 5e 5e 00 00 a0 0e ae c8 f7 7f 00 00 e8 bb ba be 5e 5e 00 09 e8 b3 ba be 5e 5e 01 08 e8 ab ba be 5e 5e 02 07 e8 a3 ba be 5e 5e 03 06 e8 9b ba be 5e 5e 04 05 e8 93 ba be 5e 5e 05 04 e8 8b ba be 5e 5e 06 03 e8 83 ba be 5e 5e 07 02 e8 7b ba be 5e 5e 08 01 e8 73 ba be 5e 5e 09 00 30 0f ae c8 f7 7f 00 00 e8 63 ba be 5e 5e 00 00 d8 10 ae c8 f7 7f 00 00 e8 53 ba be 5e 5e 00 09 e8 4b ba be 5e 5e 01 08 e8 43 ba be 5e 5e 02 07 e8 3b ba be 5e 5e 03 06 e8 33 ba be 5e 5e 04 05 e8 2b ba be 5e 5e 05 04 e8 23 ba be 5e 5e 06 03 e8 1b ba be 5e 5e 07 02 e8 13 ba be 5e 5e 08 01 e8 0b ba be 5e 5e 09 00 68 11 ae c8 f7 7f 00 00 e8 fb b9 be 5e 5e 00 00 10 13 ae c8 f7 7f 00 00 e8 eb b9 be 5e 5e 00 00 48 15 ae c8 f7 7f 00 00 e8 db b9 be 5e 5e 00 00 80 17 ae c8 f7 7f 00 00 e8 cb b9 be 5e 5e 00 00 e0 17 ae c8 f7 7f 00 00 e8 bb b9 be 5e 5e 00 00 40 18 ae c8 f7 7f 00 00 00 00 00 00 00 00 00 00
66        | 7ff7c8679ca0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[64u]()                                                    | LiteralExpr<Vector256<ulong>> eval<ulong>(IExpr<Vector256<ulong>> expr)                                       | 0f 1f 44 00 00 48 b8 08 99 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
67        | 7ff7c8679cd0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[64i]()                                                    | LiteralExpr<Vector256<long>> eval<long>(IExpr<Vector256<long>> expr)                                          | 0f 1f 44 00 00 48 b8 10 7f 67 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
68        | 7ff7c8679d00h   | 231     | hex://logix/logic.engine?satisfied#satisfied_g[8u](8u,8u)                                                     | bit satisfied<byte>(ComparisonExpr<byte> expr, byte a, byte b)                                                | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 10 ea 73 c7 f7 7f 00 00 ba 02 00 00 00 e8 bd d0 be 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 a1 fc ff ff 48 8b ce e8 11 ba ff ff 0f b6 40 08 0f b6 c0 3c ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 98 e2 ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 73 c7 f7 7f 00 00 ba 02 00 00 00 e8 4d d0 be 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 39 fd ff ff 48 8b ce e8 91 ba ff ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
69        | 7ff7c8679d70h   | 119     | hex://logix/logic.engine?satisfied#satisfied_g[8i](8i,8i)                                                     | bit satisfied<sbyte>(ComparisonExpr<sbyte> expr, sbyte a, sbyte b)                                            | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 73 c7 f7 7f 00 00 ba 02 00 00 00 e8 4d d0 be 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 39 fd ff ff 48 8b ce e8 91 ba ff ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
70        | 7ff7c8679df0h   | 119     | hex://logix/logic.engine?satisfied#satisfied_g[16u](16u,16u)                                                  | bit satisfied<ushort>(ComparisonExpr<ushort> expr, ushort a, ushort b)                                        | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 68 d4 15 c8 f7 7f 00 00 ba 02 00 00 00 e8 cd cf be 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 20 fd ff ff 48 8b ce e8 d0 ba ff ff 0f b7 40 08 0f b7 c0 0f b7 c0 3d ff ff 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
71        | 7ff7c8679e70h   | 119     | hex://logix/logic.engine?satisfied#satisfied_g[16i](16i,16i)                                                  | bit satisfied<short>(ComparisonExpr<short> expr, short a, short b)                                            | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 20 43 3d c8 f7 7f 00 00 ba 02 00 00 00 e8 4d cf be 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 08 fd ff ff 48 8b ce e8 10 bb ff ff 48 0f bf 40 08 48 0f bf c0 48 0f bf c0 3d ff 7f 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
72        | 7ff7c8679ef0h   | 1144    | hex://logix/logic.engine?satisfied#satisfied_g[32u](32u,32u)                                                  | bit satisfied<uint>(ComparisonExpr<uint> expr, uint a, uint b)                                                | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 00 c4 15 c8 f7 7f 00 00 ba 02 00 00 00 e8 cd ce be 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 f2 fc ff ff 48 8b ce e8 52 bb ff ff 8b 40 08 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 db b6 be 5e 5e 00 09 e8 d3 b6 be 5e 5e 01 08 e8 cb b6 be 5e 5e 02 07 e8 c3 b6 be 5e 5e 03 06 e8 bb b6 be 5e 5e 04 05 e8 b3 b6 be 5e 5e 05 04 e8 ab b6 be 5e 5e 06 03 e8 a3 b6 be 5e 5e 07 02 e8 9b b6 be 5e 5e 08 01 e8 93 b6 be 5e 5e 09 00 a0 13 ae c8 f7 7f 00 00 e8 83 b6 be 5e 5e 00 09 e8 7b b6 be 5e 5e 01 08 e8 73 b6 be 5e 5e 02 07 e8 6b b6 be 5e 5e 03 06 e8 63 b6 be 5e 5e 04 05 e8 5b b6 be 5e 5e 05 04 e8 53 b6 be 5e 5e 06 03 e8 4b b6 be 5e 5e 07 02 e8 43 b6 be 5e 5e 08 01 e8 3b b6 be 5e 5e 09 00 d8 15 ae c8 f7 7f 00 00 e8 2b b6 be 5e 5e 00 09 e8 23 b6 be 5e 5e 01 08 e8 1b b6 be 5e 5e 02 07 e8 13 b6 be 5e 5e 03 06 e8 0b b6 be 5e 5e 04 05 e8 03 b6 be 5e 5e 05 04 e8 fb b5 be 5e 5e 06 03 e8 f3 b5 be 5e 5e 07 02 e8 eb b5 be 5e 5e 08 01 e8 e3 b5 be 5e 5e 09 00 d0 18 ae c8 f7 7f 00 00 e8 d3 b5 be 5e 5e 00 0c e8 cb b5 be 5e 5e 01 0b e8 c3 b5 be 5e 5e 02 0a e8 bb b5 be 5e 5e 03 09 e8 b3 b5 be 5e 5e 04 08 e8 ab b5 be 5e 5e 05 07 e8 a3 b5 be 5e 5e 06 06 e8 9b b5 be 5e 5e 07 05 e8 93 b5 be 5e 5e 08 04 e8 8b b5 be 5e 5e 09 03 e8 83 b5 be 5e 5e 0a 02 e8 7b b5 be 5e 5e 0b 01 e8 73 b5 be 5e 5e 0c 00 88 1a ae c8 f7 7f 00 00 e8 63 b5 be 5e 5e 00 00 10 1c ae c8 f7 7f 00 00 e8 53 b5 be 5e 5e 00 09 e8 4b b5 be 5e 5e 01 08 e8 43 b5 be 5e 5e 02 07 e8 3b b5 be 5e 5e 03 06 e8 33 b5 be 5e 5e 04 05 e8 2b b5 be 5e 5e 05 04 e8 23 b5 be 5e 5e 06 03 e8 1b b5 be 5e 5e 07 02 e8 13 b5 be 5e 5e 08 01 e8 0b b5 be 5e 5e 09 00 f0 1c ae c8 f7 7f 00 00 e8 fb b4 be 5e 5e 00 03 e8 f3 b4 be 5e 5e 01 02 e8 eb b4 be 5e 5e 02 01 e8 e3 b4 be 5e 5e 03 00 88 1e ae c8 f7 7f 00 00 e8 d3 b4 be 5e 5e 00 00 f8 1f ae c8 f7 7f 00 00 e8 c3 b4 be 5e 5e 00 09 e8 bb b4 be 5e 5e 01 08 e8 b3 b4 be 5e 5e 02 07 e8 ab b4 be 5e 5e 03 06 e8 a3 b4 be 5e 5e 04 05 e8 9b b4 be 5e 5e 05 04 e8 93 b4 be 5e 5e 06 03 e8 8b b4 be 5e 5e 07 02 e8 83 b4 be 5e 5e 08 01 e8 7b b4 be 5e 5e 09 00 88 20 ae c8 f7 7f 00 00 e8 6b b4 be 5e 5e 00 03 e8 63 b4 be 5e 5e 03 02 e8 5b b4 be 5e 5e 06 01 e8 53 b4 be 5e 5e 09 00 68 23 ae c8 f7 7f 00 00 e8 43 b4 be 5e 5e 00 00 38 24 ae c8 f7 7f 00 00 e8 33 b4 be 5e 5e 00 0a e8 2b b4 be 5e 5e 01 09 e8 23 b4 be 5e 5e 02 08 e8 1b b4 be 5e 5e 03 07 e8 13 b4 be 5e 5e 04 06 e8 0b b4 be 5e 5e 05 05 e8 03 b4 be 5e 5e 06 04 e8 fb b3 be 5e 5e 07 03 e8 f3 b3 be 5e 5e 08 02 e8 eb b3 be 5e 5e 09 01 e8 e3 b3 be 5e 5e 0a 00 98 24 ae c8 f7 7f 00 00 e8 d3 b3 be 5e 5e 00 00 18 26 ae c8 f7 7f 00 00 e8 c3 b3 be 5e 5e 00 00 e8 26 ae c8 f7 7f 00 00 e8 b3 b3 be 5e 5e 00 00 48 27 ae c8 f7 7f 00 00 e8 a3 b3 be 5e 5e 00 00 a8 27 ae c8 f7 7f 00 00 e8 93 b3 be 5e 5e 00 09 e8 8b b3 be 5e 5e 01 08 e8 83 b3 be 5e 5e 02 07 e8 7b b3 be 5e 5e 03 06 e8 73 b3 be 5e 5e 04 05 e8 6b b3 be 5e 5e 05 04 e8 63 b3 be 5e 5e 06 03 e8 5b b3 be 5e 5e 07 02 e8 53 b3 be 5e 5e 08 01 e8 4b b3 be 5e 5e 09 00 38 28 ae c8 f7 7f 00 00 e8 3b b3 be 5e 5e 00 03 e8 33 b3 be 5e 5e 03 02 e8 2b b3 be 5e 5e 06 01 e8 23 b3 be 5e 5e 09 00 18 2b ae c8 f7 7f 00 00 e8 13 b3 be 5e 5e 00 00 e8 2b ae c8 f7 7f 00 00 e8 03 b3 be 5e 5e 00 03 e8 fb b2 be 5e 5e 03 02 e8 f3 b2 be 5e 5e 06 01 e8 eb b2 be 5e 5e 09 00 58 2f ae c8 f7 7f 00 00 00 00 00 00 00 00 00 00
73        | 7ff7c867a370h   | 343     | hex://logix/logic.engine?satisfied#satisfied_g[32i](32i,32i)                                                  | bit satisfied<int>(ComparisonExpr<int> expr, int a, int b)                                                    | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 48 5f 80 c7 f7 7f 00 00 ba 02 00 00 00 e8 4d ca be 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 ea fb ff ff 48 8b ce e8 92 b7 ff ff 8b 40 08 3d ff ff ff 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 40 e8 ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 e0 2f bc c7 f7 7f 00 00 ba 02 00 00 00 e8 dc c9 be 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 cf fb ff ff 48 8b ce e8 4f f8 ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 58 e9 ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 a0 6b 3d c8 f7 7f 00 00 ba 02 00 00 00 e8 6c c9 be 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 b7 fb ff ff 48 8b ce e8 6f b7 ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
74        | 7ff7c867a3e0h   | 231     | hex://logix/logic.engine?satisfied#satisfied_g[64u](64u,64u)                                                  | bit satisfied<ulong>(ComparisonExpr<ulong> expr, ulong a, ulong b)                                            | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 e0 2f bc c7 f7 7f 00 00 ba 02 00 00 00 e8 dc c9 be 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 cf fb ff ff 48 8b ce e8 4f f8 ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 58 e9 ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 a0 6b 3d c8 f7 7f 00 00 ba 02 00 00 00 e8 6c c9 be 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 b7 fb ff ff 48 8b ce e8 6f b7 ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
75        | 7ff7c867a450h   | 119     | hex://logix/logic.engine?satisfied#satisfied_g[64i](64i,64i)                                                  | bit satisfied<long>(ComparisonExpr<long> expr, long a, long b)                                                | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 a0 6b 3d c8 f7 7f 00 00 ba 02 00 00 00 e8 6c c9 be 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 b7 fb ff ff 48 8b ce e8 6f b7 ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
76        | 7ff7c867a4d0h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[8u](v128x8u,v128x8u)                                           | bit satisfied<byte>(ComparisonExpr<Vector128<byte>> expr, Vector128<byte> a, Vector128<byte> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 80 22 ae c8 f7 7f 00 00 ba 02 00 00 00 e8 e9 c8 be 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 92 fc ff ff 48 8b cb e8 72 c0 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
77        | 7ff7c867a570h   | 1331    | hex://logix/logic.engine?satisfied#satisfied_g[8i](v128x8i,v128x8i)                                           | bit satisfied<sbyte>(ComparisonExpr<Vector128<sbyte>> expr, Vector128<sbyte> a, Vector128<sbyte> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 30 2a ae c8 f7 7f 00 00 ba 02 00 00 00 e8 49 c8 be 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 22 fd ff ff 48 8b cb e8 c2 c0 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 33 b0 be 5e 5e 00 09 e8 2b b0 be 5e 5e 01 08 e8 23 b0 be 5e 5e 02 07 e8 1b b0 be 5e 5e 03 06 e8 13 b0 be 5e 5e 04 05 e8 0b b0 be 5e 5e 05 04 e8 03 b0 be 5e 5e 06 03 e8 fb af be 5e 5e 07 02 e8 f3 af be 5e 5e 08 01 e8 eb af be 5e 5e 09 00 78 2c ae c8 f7 7f 00 00 e8 db af be 5e 5e 00 00 28 30 ae c8 f7 7f 00 00 e8 cb af be 5e 5e 00 09 e8 c3 af be 5e 5e 01 08 e8 bb af be 5e 5e 02 07 e8 b3 af be 5e 5e 03 06 e8 ab af be 5e 5e 04 05 e8 a3 af be 5e 5e 05 04 e8 9b af be 5e 5e 06 03 e8 93 af be 5e 5e 07 02 e8 8b af be 5e 5e 08 01 e8 83 af be 5e 5e 09 00 b8 30 ae c8 f7 7f 00 00 e8 73 af be 5e 5e 00 03 e8 6b af be 5e 5e 03 02 e8 63 af be 5e 5e 06 01 e8 5b af be 5e 5e 09 00 98 33 ae c8 f7 7f 00 00 e8 4b af be 5e 5e 00 00 68 34 ae c8 f7 7f 00 00 e8 3b af be 5e 5e 00 09 e8 33 af be 5e 5e 01 08 e8 2b af be 5e 5e 02 07 e8 23 af be 5e 5e 03 06 e8 1b af be 5e 5e 04 05 e8 13 af be 5e 5e 05 04 e8 0b af be 5e 5e 06 03 e8 03 af be 5e 5e 07 02 e8 fb ae be 5e 5e 08 01 e8 f3 ae be 5e 5e 09 00 f8 34 ae c8 f7 7f 00 00 e8 e3 ae be 5e 5e 00 03 e8 db ae be 5e 5e 03 02 e8 d3 ae be 5e 5e 06 01 e8 cb ae be 5e 5e 09 00 d8 37 ae c8 f7 7f 00 00 e8 bb ae be 5e 5e 00 00 a8 38 ae c8 f7 7f 00 00 e8 ab ae be 5e 5e 00 09 e8 a3 ae be 5e 5e 01 08 e8 9b ae be 5e 5e 02 07 e8 93 ae be 5e 5e 03 06 e8 8b ae be 5e 5e 04 05 e8 83 ae be 5e 5e 05 04 e8 7b ae be 5e 5e 06 03 e8 73 ae be 5e 5e 07 02 e8 6b ae be 5e 5e 08 01 e8 63 ae be 5e 5e 09 00 38 39 ae c8 f7 7f 00 00 e8 53 ae be 5e 5e 00 03 e8 4b ae be 5e 5e 03 02 e8 43 ae be 5e 5e 06 01 e8 3b ae be 5e 5e 09 00 18 3c ae c8 f7 7f 00 00 e8 2b ae be 5e 5e 00 00 e8 3c ae c8 f7 7f 00 00 e8 1b ae be 5e 5e 00 09 e8 13 ae be 5e 5e 01 08 e8 0b ae be 5e 5e 02 07 e8 03 ae be 5e 5e 03 06 e8 fb ad be 5e 5e 04 05 e8 f3 ad be 5e 5e 05 04 e8 eb ad be 5e 5e 06 03 e8 e3 ad be 5e 5e 07 02 e8 db ad be 5e 5e 08 01 e8 d3 ad be 5e 5e 09 00 78 3d ae c8 f7 7f 00 00 e8 c3 ad be 5e 5e 00 03 e8 bb ad be 5e 5e 01 02 e8 b3 ad be 5e 5e 02 01 e8 ab ad be 5e 5e 03 00 10 3f ae c8 f7 7f 00 00 e8 9b ad be 5e 5e 00 03 e8 93 ad be 5e 5e 03 02 e8 8b ad be 5e 5e 06 01 e8 83 ad be 5e 5e 09 00 40 41 ae c8 f7 7f 00 00 e8 73 ad be 5e 5e 00 00 10 42 ae c8 f7 7f 00 00 e8 63 ad be 5e 5e 00 00 70 42 ae c8 f7 7f 00 00 e8 53 ad be 5e 5e 00 00 d0 42 ae c8 f7 7f 00 00 e8 43 ad be 5e 5e 00 09 e8 3b ad be 5e 5e 01 08 e8 33 ad be 5e 5e 02 07 e8 2b ad be 5e 5e 03 06 e8 23 ad be 5e 5e 04 05 e8 1b ad be 5e 5e 05 04 e8 13 ad be 5e 5e 06 03 e8 0b ad be 5e 5e 07 02 e8 03 ad be 5e 5e 08 01 e8 fb ac be 5e 5e 09 00 60 43 ae c8 f7 7f 00 00 e8 eb ac be 5e 5e 00 03 e8 e3 ac be 5e 5e 03 02 e8 db ac be 5e 5e 06 01 e8 d3 ac be 5e 5e 09 00 40 46 ae c8 f7 7f 00 00 e8 c3 ac be 5e 5e 00 0c e8 bb ac be 5e 5e 01 0b e8 b3 ac be 5e 5e 02 0a e8 ab ac be 5e 5e 03 09 e8 a3 ac be 5e 5e 04 08 e8 9b ac be 5e 5e 05 07 e8 93 ac be 5e 5e 06 06 e8 8b ac be 5e 5e 07 05 e8 83 ac be 5e 5e 08 04 e8 7b ac be 5e 5e 09 03 e8 73 ac be 5e 5e 0a 02 e8 6b ac be 5e 5e 0b 01 e8 63 ac be 5e 5e 0c 00 40 47 ae c8 f7 7f 00 00 e8 53 ac be 5e 5e 00 00 c8 48 ae c8 f7 7f 00 00 e8 43 ac be 5e 5e 00 00 b0 4c ae c8 f7 7f 00 00 e0 f1 ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 70 2e ae c8 f7 7f 00 00 ba 02 00 00 00 e8 a9 c3 be 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 22 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
78        | 7ff7c867aa10h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[16u](v128x16u,v128x16u)                                        | bit satisfied<ushort>(ComparisonExpr<Vector128<ushort>> expr, Vector128<ushort> a, Vector128<ushort> b)       | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 70 2e ae c8 f7 7f 00 00 ba 02 00 00 00 e8 a9 c3 be 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 22 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
79        | 7ff7c867aab0h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[16i](v128x16i,v128x16i)                                        | bit satisfied<short>(ComparisonExpr<Vector128<short>> expr, Vector128<short> a, Vector128<short> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 b0 32 ae c8 f7 7f 00 00 ba 02 00 00 00 e8 09 c3 be 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 aa fb ff ff 48 8b cb e8 72 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
80        | 7ff7c867ab50h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[32u](v128x32u,v128x32u)                                        | bit satisfied<uint>(ComparisonExpr<Vector128<uint>> expr, Vector128<uint> a, Vector128<uint> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 f0 36 ae c8 f7 7f 00 00 ba 02 00 00 00 e8 69 c2 be 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 9a fb ff ff 48 8b cb e8 c2 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
81        | 7ff7c867abf0h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[32i](v128x32i,v128x32i)                                        | bit satisfied<int>(ComparisonExpr<Vector128<int>> expr, Vector128<int> a, Vector128<int> b)                   | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 30 3b ae c8 f7 7f 00 00 ba 02 00 00 00 e8 c9 c1 be 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 8a fb ff ff 48 8b cb e8 12 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
82        | 7ff7c867ac90h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[64u](v128x64u,v128x64u)                                        | bit satisfied<ulong>(ComparisonExpr<Vector128<ulong>> expr, Vector128<ulong> a, Vector128<ulong> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 58 40 ae c8 f7 7f 00 00 ba 02 00 00 00 e8 29 c1 be 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 7a fb ff ff 48 8b cb e8 fa fb ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
83        | 7ff7c867ad30h   | 1335    | hex://logix/logic.engine?satisfied#satisfied_g[64i](v128x64i,v128x64i)                                        | bit satisfied<long>(ComparisonExpr<Vector128<long>> expr, Vector128<long> a, Vector128<long> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 58 45 ae c8 f7 7f 00 00 ba 02 00 00 00 e8 89 c0 be 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 b2 fb ff ff 48 8b cb e8 d2 c5 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 73 a8 be 5e 5e 00 09 e8 6b a8 be 5e 5e 01 08 e8 63 a8 be 5e 5e 02 07 e8 5b a8 be 5e 5e 03 06 e8 53 a8 be 5e 5e 04 05 e8 4b a8 be 5e 5e 05 04 e8 43 a8 be 5e 5e 06 03 e8 3b a8 be 5e 5e 07 02 e8 33 a8 be 5e 5e 08 01 e8 2b a8 be 5e 5e 09 00 a8 49 ae c8 f7 7f 00 00 e8 1b a8 be 5e 5e 00 03 e8 13 a8 be 5e 5e 01 02 e8 0b a8 be 5e 5e 02 01 e8 03 a8 be 5e 5e 03 00 40 4b ae c8 f7 7f 00 00 e8 f3 a7 be 5e 5e 00 09 e8 eb a7 be 5e 5e 01 08 e8 e3 a7 be 5e 5e 02 07 e8 db a7 be 5e 5e 03 06 e8 d3 a7 be 5e 5e 04 05 e8 cb a7 be 5e 5e 05 04 e8 c3 a7 be 5e 5e 06 03 e8 bb a7 be 5e 5e 07 02 e8 b3 a7 be 5e 5e 08 01 e8 ab a7 be 5e 5e 09 00 40 4d ae c8 f7 7f 00 00 e8 9b a7 be 5e 5e 00 03 e8 93 a7 be 5e 5e 03 02 e8 8b a7 be 5e 5e 06 01 e8 83 a7 be 5e 5e 09 00 20 50 ae c8 f7 7f 00 00 e8 73 a7 be 5e 5e 00 00 f0 50 ae c8 f7 7f 00 00 e8 63 a7 be 5e 5e 00 0a e8 5b a7 be 5e 5e 01 09 e8 53 a7 be 5e 5e 02 08 e8 4b a7 be 5e 5e 03 07 e8 43 a7 be 5e 5e 04 06 e8 3b a7 be 5e 5e 05 05 e8 33 a7 be 5e 5e 06 04 e8 2b a7 be 5e 5e 07 03 e8 23 a7 be 5e 5e 08 02 e8 1b a7 be 5e 5e 09 01 e8 13 a7 be 5e 5e 0a 00 50 51 ae c8 f7 7f 00 00 e8 03 a7 be 5e 5e 00 00 d0 52 ae c8 f7 7f 00 00 e8 f3 a6 be 5e 5e 00 00 a0 53 ae c8 f7 7f 00 00 e8 e3 a6 be 5e 5e 00 00 00 54 ae c8 f7 7f 00 00 e8 d3 a6 be 5e 5e 00 00 60 54 ae c8 f7 7f 00 00 e8 c3 a6 be 5e 5e 00 09 e8 bb a6 be 5e 5e 01 08 e8 b3 a6 be 5e 5e 02 07 e8 ab a6 be 5e 5e 03 06 e8 a3 a6 be 5e 5e 04 05 e8 9b a6 be 5e 5e 05 04 e8 93 a6 be 5e 5e 06 03 e8 8b a6 be 5e 5e 07 02 e8 83 a6 be 5e 5e 08 01 e8 7b a6 be 5e 5e 09 00 f0 54 ae c8 f7 7f 00 00 e8 6b a6 be 5e 5e 00 03 e8 63 a6 be 5e 5e 03 02 e8 5b a6 be 5e 5e 06 01 e8 53 a6 be 5e 5e 09 00 d0 57 ae c8 f7 7f 00 00 e8 43 a6 be 5e 5e 00 00 a0 58 ae c8 f7 7f 00 00 e8 33 a6 be 5e 5e 00 09 e8 2b a6 be 5e 5e 01 08 e8 23 a6 be 5e 5e 02 07 e8 1b a6 be 5e 5e 03 06 e8 13 a6 be 5e 5e 04 05 e8 0b a6 be 5e 5e 05 04 e8 03 a6 be 5e 5e 06 03 e8 fb a5 be 5e 5e 07 02 e8 f3 a5 be 5e 5e 08 01 e8 eb a5 be 5e 5e 09 00 30 59 ae c8 f7 7f 00 00 e8 db a5 be 5e 5e 00 03 e8 d3 a5 be 5e 5e 03 02 e8 cb a5 be 5e 5e 06 01 e8 c3 a5 be 5e 5e 09 00 10 5c ae c8 f7 7f 00 00 e8 b3 a5 be 5e 5e 00 00 e0 5c ae c8 f7 7f 00 00 e8 a3 a5 be 5e 5e 00 09 e8 9b a5 be 5e 5e 01 08 e8 93 a5 be 5e 5e 02 07 e8 8b a5 be 5e 5e 03 06 e8 83 a5 be 5e 5e 04 05 e8 7b a5 be 5e 5e 05 04 e8 73 a5 be 5e 5e 06 03 e8 6b a5 be 5e 5e 07 02 e8 63 a5 be 5e 5e 08 01 e8 5b a5 be 5e 5e 09 00 70 5d ae c8 f7 7f 00 00 e8 4b a5 be 5e 5e 00 03 e8 43 a5 be 5e 5e 03 02 e8 3b a5 be 5e 5e 06 01 e8 33 a5 be 5e 5e 09 00 50 60 ae c8 f7 7f 00 00 e8 23 a5 be 5e 5e 00 00 20 61 ae c8 f7 7f 00 00 e8 13 a5 be 5e 5e 00 09 e8 0b a5 be 5e 5e 01 08 e8 03 a5 be 5e 5e 02 07 e8 fb a4 be 5e 5e 03 06 e8 f3 a4 be 5e 5e 04 05 e8 eb a4 be 5e 5e 05 04 e8 e3 a4 be 5e 5e 06 03 e8 db a4 be 5e 5e 07 02 e8 d3 a4 be 5e 5e 08 01 e8 cb a4 be 5e 5e 09 00 b0 61 ae c8 f7 7f 00 00 e8 bb a4 be 5e 5e 00 03 e8 b3 a4 be 5e 5e 03 02 e8 ab a4 be 5e 5e 06 01 e8 a3 a4 be 5e 5e 09 00 90 64 ae c8 f7 7f 00 00 e8 93 a4 be 5e 5e 00 00 60 65 ae c8 f7 7f 00 00 e8 83 a4 be 5e 5e 00 00 a0 69 ae c8 f7 7f 00 00 30 ff ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 38 4f ae c8 f7 7f 00 00 ba 02 00 00 00 e8 e9 bb be 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 62 fc ff ff 48 8b cb e8 22 c2 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
84        | 7ff7c867b1d0h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[8u](v256x8u,v256x8u)                                           | bit satisfied<byte>(ComparisonExpr<Vector256<byte>> expr, Vector256<byte> a, Vector256<byte> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 38 4f ae c8 f7 7f 00 00 ba 02 00 00 00 e8 e9 bb be 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 62 fc ff ff 48 8b cb e8 22 c2 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
85        | 7ff7c867b270h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[8i](v256x8i,v256x8i)                                           | bit satisfied<sbyte>(ComparisonExpr<Vector256<sbyte>> expr, Vector256<sbyte> a, Vector256<sbyte> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 e8 56 ae c8 f7 7f 00 00 ba 02 00 00 00 e8 49 bb be 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 f2 fc ff ff 48 8b cb e8 a2 c2 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
86        | 7ff7c867b310h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[16u](v256x16u,v256x16u)                                        | bit satisfied<ushort>(ComparisonExpr<Vector256<ushort>> expr, Vector256<ushort> a, Vector256<ushort> b)       | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 28 5b ae c8 f7 7f 00 00 ba 02 00 00 00 e8 a9 ba be 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 e2 fc ff ff 48 8b cb e8 32 c7 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
87        | 7ff7c867b3b0h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[16i](v256x16i,v256x16i)                                        | bit satisfied<short>(ComparisonExpr<Vector256<short>> expr, Vector256<short> a, Vector256<short> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 68 5f ae c8 f7 7f 00 00 ba 02 00 00 00 e8 09 ba be 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 d2 fc ff ff 48 8b cb e8 b2 c7 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
88        | 7ff7c867b450h   | 664     | hex://logix/logic.engine?satisfied#satisfied_g[32u](v256x32u,v256x32u)                                        | bit satisfied<uint>(ComparisonExpr<Vector256<uint>> expr, Vector256<uint> a, Vector256<uint> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 a8 63 ae c8 f7 7f 00 00 ba 02 00 00 00 e8 69 b9 be 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 c2 fc ff ff 48 8b cb e8 32 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 53 a1 be 5e 5e 00 09 e8 4b a1 be 5e 5e 01 08 e8 43 a1 be 5e 5e 02 07 e8 3b a1 be 5e 5e 03 06 e8 33 a1 be 5e 5e 04 05 e8 2b a1 be 5e 5e 05 04 e8 23 a1 be 5e 5e 06 03 e8 1b a1 be 5e 5e 07 02 e8 13 a1 be 5e 5e 08 01 e8 0b a1 be 5e 5e 09 00 f0 65 ae c8 f7 7f 00 00 e8 fb a0 be 5e 5e 00 03 e8 f3 a0 be 5e 5e 03 02 e8 eb a0 be 5e 5e 06 01 e8 e3 a0 be 5e 5e 09 00 d0 68 ae c8 f7 7f 00 00 e8 d3 a0 be 5e 5e 00 09 e8 cb a0 be 5e 5e 01 08 e8 c3 a0 be 5e 5e 02 07 e8 bb a0 be 5e 5e 03 06 e8 b3 a0 be 5e 5e 04 05 e8 ab a0 be 5e 5e 05 04 e8 a3 a0 be 5e 5e 06 03 e8 9b a0 be 5e 5e 07 02 e8 93 a0 be 5e 5e 08 01 e8 8b a0 be 5e 5e 09 00 30 6a ae c8 f7 7f 00 00 e8 7b a0 be 5e 5e 00 03 e8 73 a0 be 5e 5e 01 02 e8 6b a0 be 5e 5e 02 01 e8 63 a0 be 5e 5e 03 00 c8 6b ae c8 f7 7f 00 00 e8 53 a0 be 5e 5e 00 03 e8 4b a0 be 5e 5e 03 02 e8 43 a0 be 5e 5e 06 01 e8 3b a0 be 5e 5e 09 00 f8 6d ae c8 f7 7f 00 00 e8 2b a0 be 5e 5e 00 00 c8 6e ae c8 f7 7f 00 00 e8 1b a0 be 5e 5e 00 00 28 6f ae c8 f7 7f 00 00 e8 0b a0 be 5e 5e 00 00 88 6f ae c8 f7 7f 00 00 e8 fb 9f be 5e 5e 00 09 e8 f3 9f be 5e 5e 01 08 e8 eb 9f be 5e 5e 02 07 e8 e3 9f be 5e 5e 03 06 e8 db 9f be 5e 5e 04 05 e8 d3 9f be 5e 5e 05 04 e8 cb 9f be 5e 5e 06 03 e8 c3 9f be 5e 5e 07 02 e8 bb 9f be 5e 5e 08 01 e8 b3 9f be 5e 5e 09 00 18 70 ae c8 f7 7f 00 00 e8 a3 9f be 5e 5e 00 03 e8 9b 9f be 5e 5e 03 02 e8 93 9f be 5e 5e 06 01 e8 8b 9f be 5e 5e 09 00 f8 72 ae c8 f7 7f 00 00 e8 7b 9f be 5e 5e 00 00 e0 75 ae c8 f7 7f 00 00 e8 6b 9f be 5e 5e 00 00 58 76 ae c8 f7 7f 00 00 00 00 00 00 00 00 00 00
89        | 7ff7c867b8f0h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[32i](v256x32i,v256x32i)                                        | bit satisfied<int>(ComparisonExpr<Vector256<int>> expr, Vector256<int> a, Vector256<int> b)                   | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 e8 67 ae c8 f7 7f 00 00 ba 02 00 00 00 e8 c9 b4 be 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 b2 c4 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
90        | 7ff7c867b990h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[64u](v256x64u,v256x64u)                                        | bit satisfied<ulong>(ComparisonExpr<Vector256<ulong>> expr, Vector256<ulong> a, Vector256<ulong> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 10 6d ae c8 f7 7f 00 00 ba 02 00 00 00 e8 29 b4 be 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 c2 fb ff ff 48 8b cb e8 42 fc ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
91        | 7ff7c867ba30h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[64i](v256x64i,v256x64i)                                        | bit satisfied<long>(ComparisonExpr<Vector256<long>> expr, Vector256<long> a, Vector256<long> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 10 72 ae c8 f7 7f 00 00 ba 02 00 00 00 e8 89 b3 be 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 fa fb ff ff 48 8b cb e8 a2 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
92        | 7ff7c867bad0h   | 35      | hex://logix/logic.engine?eval#eval_()                                                                         | bit eval(ILogicExpr expr)                                                                                     | 0f 1f 44 00 00 48 b8 a0 ee e0 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
93        | 7ff7c867bb00h   | 659     | hex://logix/logic.engine?satisfied#satisfied_(1u,1u)                                                          | bit satisfied(ComparisonExpr expr, bit a, bit b)                                                              | 57 56 48 83 ec 28 48 8b f1 41 8b f8 8b 0e 48 8b 4e 18 83 79 08 00 76 54 48 8b 49 10 49 bb f8 0d 64 c7 f7 7f 00 00 48 b8 f8 0d 64 c7 f7 7f 00 00 39 09 ff 10 48 8b 4e 18 83 79 08 01 76 2e 48 8b 49 18 8b d7 49 bb 00 0e 64 c7 f7 7f 00 00 48 b8 00 0e 64 c7 f7 7f 00 00 39 09 ff 10 48 8b ce e8 3c 33 79 ff 90 48 83 c4 28 5e 5f c3 e8 5f 42 d1 5e cc 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 88 0c af c8 f7 7f 00 00 55 41 57 41 56 57 56 53 48 83 ec 48 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 4e 10 48 8b 5f 10 41 be b6 00 00 00 41 bf 01 00 00 00 8b 49 08 3b 4b 08 0f 85 e9 00 00 00 e8 40 3b 79 ff 48 8b c8 49 bb 08 0e 64 c7 f7 7f 00 00 48 b8 08 0e 64 c7 f7 7f 00 00 39 09 ff 10 48 89 45 c8 48 8b 4d c8 49 bb 10 0e 64 c7 f7 7f 00 00 48 b8 10 0e 64 c7 f7 7f 00 00 39 09 ff 10 85 c0 74 5d 48 8b 4d c8 49 bb 18 0e 64 c7 f7 7f 00 00 48 b8 18 0e 64 c7 f7 7f 00 00 39 09 ff 10 48 8b d0 48 8b ce e8 ba 48 79 ff 48 8b ce e8 62 32 79 ff 8b d8 48 8b cf e8 58 32 79 ff 3b d8 75 3e 48 8b 4d c8 49 bb 10 0e 64 c7 f7 7f 00 00 48 b8 10 0e 64 c7 f7 7f 00 00 39 09 ff 10 85 c0 75 a3 48 8b 4d c8 49 bb 20 0e 64 c7 f7 7f 00 00 48 b8 20 0e 64 c7 f7 7f 00 00 39 09 ff 10 eb 18 48 8b cc e8 7e 00 00 00 90 33 c0 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 8b f1 8b 7b 08 b9 19 02 00 00 48 ba 60 a3 bd c7 f7 7f 00 00 e8 e3 48 d1 5e 48 8b d8 b9 25 02 00 00 48 ba 60 a3 bd c7 f7 7f 00 00 e8 cc 48 d1 5e 4c 8b c8 4c 8d 45 d0 45 88 38 45 89 70 04 4c 8b c3 8b ce 8b d7 48 8b 45 d0 48 89 44 24 20 e8 99 88 0f ff 48 8b c8 e8 f1 fb b5 5e cc 55 41 57 41 56 57 56 53 48 83 ec 38 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c8 00 74 1c 48 8b 4d c8 49 bb 20 0e 64 c7 f7 7f 00 00 48 b8 20 0e 64 c7 f7 7f 00 00 39 09 ff 10 90 48 83 c4 38 5b 5e 5f 41 5e 41 5f 5d c3 00 00 19 0c 07 00 0c 82 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 19 0c 07 00 0c 62 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 00 00 00 00 00 00 00
94        | 7ff7c867bb90h   | 515     | hex://logix/logic.engine?equal#equal_()                                                                       | bit equal(VariedLogicExpr a, VariedLogicExpr b)                                                               | 55 41 57 41 56 57 56 53 48 83 ec 48 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 4e 10 48 8b 5f 10 41 be b6 00 00 00 41 bf 01 00 00 00 8b 49 08 3b 4b 08 0f 85 e9 00 00 00 e8 40 3b 79 ff 48 8b c8 49 bb 08 0e 64 c7 f7 7f 00 00 48 b8 08 0e 64 c7 f7 7f 00 00 39 09 ff 10 48 89 45 c8 48 8b 4d c8 49 bb 10 0e 64 c7 f7 7f 00 00 48 b8 10 0e 64 c7 f7 7f 00 00 39 09 ff 10 85 c0 74 5d 48 8b 4d c8 49 bb 18 0e 64 c7 f7 7f 00 00 48 b8 18 0e 64 c7 f7 7f 00 00 39 09 ff 10 48 8b d0 48 8b ce e8 ba 48 79 ff 48 8b ce e8 62 32 79 ff 8b d8 48 8b cf e8 58 32 79 ff 3b d8 75 3e 48 8b 4d c8 49 bb 10 0e 64 c7 f7 7f 00 00 48 b8 10 0e 64 c7 f7 7f 00 00 39 09 ff 10 85 c0 75 a3 48 8b 4d c8 49 bb 20 0e 64 c7 f7 7f 00 00 48 b8 20 0e 64 c7 f7 7f 00 00 39 09 ff 10 eb 18 48 8b cc e8 7e 00 00 00 90 33 c0 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 8b f1 8b 7b 08 b9 19 02 00 00 48 ba 60 a3 bd c7 f7 7f 00 00 e8 e3 48 d1 5e 48 8b d8 b9 25 02 00 00 48 ba 60 a3 bd c7 f7 7f 00 00 e8 cc 48 d1 5e 4c 8b c8 4c 8d 45 d0 45 88 38 45 89 70 04 4c 8b c3 8b ce 8b d7 48 8b 45 d0 48 89 44 24 20 e8 99 88 0f ff 48 8b c8 e8 f1 fb b5 5e cc 55 41 57 41 56 57 56 53 48 83 ec 38 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c8 00 74 1c 48 8b 4d c8 49 bb 20 0e 64 c7 f7 7f 00 00 48 b8 20 0e 64 c7 f7 7f 00 00 39 09 ff 10 90 48 83 c4 38 5b 5e 5f 41 5e 41 5f 5d c3 00 00 19 0c 07 00 0c 82 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 19 0c 07 00 0c 62 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 00 00 00 00 00 00 00
