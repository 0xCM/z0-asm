Sequence  | Address         | Length  | Uri                                                                                                           | OpSig                                                                                                         | Data
0         | 7ff7c864ee70h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[8u]()                                                          | bit eval<byte>(ILogicExpr<byte> expr)                                                                         | 0f 1f 44 00 00 48 b8 50 87 e3 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
1         | 7ff7c864eea0h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[8i]()                                                          | bit eval<sbyte>(ILogicExpr<sbyte> expr)                                                                       | 0f 1f 44 00 00 48 b8 50 87 e3 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
2         | 7ff7c864eed0h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[16u]()                                                         | bit eval<ushort>(ILogicExpr<ushort> expr)                                                                     | 0f 1f 44 00 00 48 b8 50 87 e3 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
3         | 7ff7c864ef00h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[16i]()                                                         | bit eval<short>(ILogicExpr<short> expr)                                                                       | 0f 1f 44 00 00 48 b8 50 87 e3 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
4         | 7ff7c864ef30h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[32u]()                                                         | bit eval<uint>(ILogicExpr<uint> expr)                                                                         | 0f 1f 44 00 00 48 b8 50 87 e3 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
5         | 7ff7c864ef60h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[32i]()                                                         | bit eval<int>(ILogicExpr<int> expr)                                                                           | 0f 1f 44 00 00 48 b8 50 87 e3 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
6         | 7ff7c864ef90h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[64u]()                                                         | bit eval<ulong>(ILogicExpr<ulong> expr)                                                                       | 0f 1f 44 00 00 48 b8 50 87 e3 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
7         | 7ff7c864efc0h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[64i]()                                                         | bit eval<long>(ILogicExpr<long> expr)                                                                         | 0f 1f 44 00 00 48 b8 50 87 e3 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
8         | 7ff7c864eff0h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[8u]()                                                         | LiteralExpr<byte> eval<byte>(IExpr<byte> expr)                                                                | 0f 1f 44 00 00 48 b8 c8 ea 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
9         | 7ff7c864f020h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[8i]()                                                         | LiteralExpr<sbyte> eval<sbyte>(IExpr<sbyte> expr)                                                             | 0f 1f 44 00 00 48 b8 f8 ea 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
10        | 7ff7c864f050h   | 1107    | hex://logix/LogicEngine?eval#eval_scalar_expr_g[16u]()                                                        | LiteralExpr<ushort> eval<ushort>(IExpr<ushort> expr)                                                          | 0f 1f 44 00 00 48 b8 18 eb 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 c3 65 c1 5e 5e 00 00 00 e0 ab c8 f7 7f 00 00 e8 b3 65 c1 5e 5e 00 00 60 e0 ab c8 f7 7f 00 00 e8 a3 65 c1 5e 5e 00 00 c0 e0 ab c8 f7 7f 00 00 e8 93 65 c1 5e 5e 00 00 20 e1 ab c8 f7 7f 00 00 e8 83 65 c1 5e 5e 00 00 80 e1 ab c8 f7 7f 00 00 e8 73 65 c1 5e 5e 00 00 e0 e1 ab c8 f7 7f 00 00 e8 63 65 c1 5e 5e 00 00 40 e2 ab c8 f7 7f 00 00 e8 53 65 c1 5e 5e 00 00 a0 e2 ab c8 f7 7f 00 00 e8 43 65 c1 5e 5e 00 00 00 e3 ab c8 f7 7f 00 00 e8 33 65 c1 5e 5e 00 00 60 e3 ab c8 f7 7f 00 00 e8 23 65 c1 5e 5e 00 0a e8 1b 65 c1 5e 5e 01 09 e8 13 65 c1 5e 5e 02 08 e8 0b 65 c1 5e 5e 03 07 e8 03 65 c1 5e 5e 04 06 e8 fb 64 c1 5e 5e 05 05 e8 f3 64 c1 5e 5e 06 04 e8 eb 64 c1 5e 5e 07 03 e8 e3 64 c1 5e 5e 08 02 e8 db 64 c1 5e 5e 09 01 e8 d3 64 c1 5e 5e 0a 00 c0 e3 ab c8 f7 7f 00 00 e8 c3 64 c1 5e 5e 00 00 58 e5 ab c8 f7 7f 00 00 e8 b3 64 c1 5e 5e 00 03 e8 ab 64 c1 5e 5e 01 02 e8 a3 64 c1 5e 5e 02 01 e8 9b 64 c1 5e 5e 03 00 90 e6 ab c8 f7 7f 00 00 e8 8b 64 c1 5e 5e 00 00 88 e7 ab c8 f7 7f 00 00 e8 7b 64 c1 5e 5e 00 00 e8 e7 ab c8 f7 7f 00 00 e8 6b 64 c1 5e 5e 00 00 48 e8 ab c8 f7 7f 00 00 e8 5b 64 c1 5e 5e 00 00 a8 e8 ab c8 f7 7f 00 00 e8 4b 64 c1 5e 5e 00 00 08 e9 ab c8 f7 7f 00 00 e8 3b 64 c1 5e 5e 00 00 68 e9 ab c8 f7 7f 00 00 e8 2b 64 c1 5e 5e 00 00 c8 e9 ab c8 f7 7f 00 00 e8 1b 64 c1 5e 5e 00 00 28 ea ab c8 f7 7f 00 00 e8 0b 64 c1 5e 5e 00 0c e8 03 64 c1 5e 5e 01 0b e8 fb 63 c1 5e 5e 02 0a e8 f3 63 c1 5e 5e 03 09 e8 eb 63 c1 5e 5e 04 08 e8 e3 63 c1 5e 5e 05 07 e8 db 63 c1 5e 5e 06 06 e8 d3 63 c1 5e 5e 07 05 e8 cb 63 c1 5e 5e 08 04 e8 c3 63 c1 5e 5e 09 03 e8 bb 63 c1 5e 5e 0a 02 e8 b3 63 c1 5e 5e 0b 01 e8 ab 63 c1 5e 5e 0c 00 98 ea ab c8 f7 7f 00 00 e8 9b 63 c1 5e 5e 00 00 20 ec ab c8 f7 7f 00 00 e8 8b 63 c1 5e 5e 00 0a e8 83 63 c1 5e 5e 01 09 e8 7b 63 c1 5e 5e 02 08 e8 73 63 c1 5e 5e 03 07 e8 6b 63 c1 5e 5e 04 06 e8 63 63 c1 5e 5e 05 05 e8 5b 63 c1 5e 5e 06 04 e8 53 63 c1 5e 5e 07 03 e8 4b 63 c1 5e 5e 08 02 e8 43 63 c1 5e 5e 09 01 e8 3b 63 c1 5e 5e 0a 00 d0 ec ab c8 f7 7f 00 00 e8 2b 63 c1 5e 5e 00 00 50 ee ab c8 f7 7f 00 00 e8 1b 63 c1 5e 5e 00 03 e8 13 63 c1 5e 5e 01 02 e8 0b 63 c1 5e 5e 02 01 e8 03 63 c1 5e 5e 03 00 88 ef ab c8 f7 7f 00 00 e8 f3 62 c1 5e 5e 00 00 80 f0 ab c8 f7 7f 00 00 e8 e3 62 c1 5e 5e 00 00 e0 f0 ab c8 f7 7f 00 00 e8 d3 62 c1 5e 5e 00 00 40 f1 ab c8 f7 7f 00 00 e8 c3 62 c1 5e 5e 00 00 a0 f1 ab c8 f7 7f 00 00 e8 b3 62 c1 5e 5e 00 00 00 f2 ab c8 f7 7f 00 00 e8 a3 62 c1 5e 5e 00 00 60 f2 ab c8 f7 7f 00 00 e8 93 62 c1 5e 5e 00 00 c0 f2 ab c8 f7 7f 00 00 e8 83 62 c1 5e 5e 00 00 20 f3 ab c8 f7 7f 00 00 e8 73 62 c1 5e 5e 00 0c e8 6b 62 c1 5e 5e 01 0b e8 63 62 c1 5e 5e 02 0a e8 5b 62 c1 5e 5e 03 09 e8 53 62 c1 5e 5e 04 08 e8 4b 62 c1 5e 5e 05 07 e8 43 62 c1 5e 5e 06 06 e8 3b 62 c1 5e 5e 07 05 e8 33 62 c1 5e 5e 08 04 e8 2b 62 c1 5e 5e 09 03 e8 23 62 c1 5e 5e 0a 02 e8 1b 62 c1 5e 5e 0b 01 e8 13 62 c1 5e 5e 0c 00 b0 f3 ab c8 f7 7f 00 00 e8 03 62 c1 5e 5e 00 00 38 f5 ab c8 f7 7f 00 00 e8 f3 61 c1 5e 5e 00 00 68 f7 ab c8 f7 7f 00 00 e8 e3 61 c1 5e 5e 00 00 98 f9 ab c8 f7 7f 00 00 e8 d3 61 c1 5e 5e 00 00 f8 f9 ab c8 f7 7f 00 00 d0 08 ac c8 f7 7f 00 00 0f 1f 44 00 00 48 b8 88 f0 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
11        | 7ff7c864f480h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[16i]()                                                        | LiteralExpr<short> eval<short>(IExpr<short> expr)                                                             | 0f 1f 44 00 00 48 b8 88 f0 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
12        | 7ff7c864f4b0h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[32u]()                                                        | LiteralExpr<uint> eval<uint>(IExpr<uint> expr)                                                                | 0f 1f 44 00 00 48 b8 a8 f0 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
13        | 7ff7c864f4e0h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[32i]()                                                        | LiteralExpr<int> eval<int>(IExpr<int> expr)                                                                   | 0f 1f 44 00 00 48 b8 c8 f0 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
14        | 7ff7c864f510h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[64u]()                                                        | LiteralExpr<ulong> eval<ulong>(IExpr<ulong> expr)                                                             | 0f 1f 44 00 00 48 b8 e8 f0 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
15        | 7ff7c864f540h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[64i]()                                                        | LiteralExpr<long> eval<long>(IExpr<long> expr)                                                                | 0f 1f 44 00 00 48 b8 08 f1 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
16        | 7ff7c864f570h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_expr_g[8u]()                                                            | LiteralExpr<byte> eval<byte>(IComparisonExpr<byte> expr)                                                      | 0f 1f 44 00 00 48 b8 70 c7 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
17        | 7ff7c864f5a0h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_expr_g[8i]()                                                            | LiteralExpr<sbyte> eval<sbyte>(IComparisonExpr<sbyte> expr)                                                   | 0f 1f 44 00 00 48 b8 50 c8 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
18        | 7ff7c864f5d0h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_expr_g[16u]()                                                           | LiteralExpr<ushort> eval<ushort>(IComparisonExpr<ushort> expr)                                                | 0f 1f 44 00 00 48 b8 00 c9 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
19        | 7ff7c864f600h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_expr_g[16i]()                                                           | LiteralExpr<short> eval<short>(IComparisonExpr<short> expr)                                                   | 0f 1f 44 00 00 48 b8 b0 c9 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
20        | 7ff7c864f630h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_expr_g[32u]()                                                           | LiteralExpr<uint> eval<uint>(IComparisonExpr<uint> expr)                                                      | 0f 1f 44 00 00 48 b8 60 ca 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
21        | 7ff7c864f660h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_expr_g[32i]()                                                           | LiteralExpr<int> eval<int>(IComparisonExpr<int> expr)                                                         | 0f 1f 44 00 00 48 b8 00 cb 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
22        | 7ff7c864f690h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_expr_g[64i]()                                                           | LiteralExpr<long> eval<long>(IComparisonExpr<long> expr)                                                      | 0f 1f 44 00 00 48 b8 a0 cb 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
23        | 7ff7c864f6c0h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[8u]()                                                        | LiteralExpr<Vector128<byte>> eval<byte>(IComparisonExpr<Vector128<byte>> expr)                                | 0f 1f 44 00 00 48 b8 b0 d4 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
24        | 7ff7c864f6f0h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[8i]()                                                        | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IComparisonExpr<Vector128<sbyte>> expr)                             | 0f 1f 44 00 00 48 b8 90 d5 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
25        | 7ff7c864f720h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[16u]()                                                       | LiteralExpr<Vector128<ushort>> eval<ushort>(IComparisonExpr<Vector128<ushort>> expr)                          | 0f 1f 44 00 00 48 b8 70 d6 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
26        | 7ff7c864f750h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[16i]()                                                       | LiteralExpr<Vector128<short>> eval<short>(IComparisonExpr<Vector128<short>> expr)                             | 0f 1f 44 00 00 48 b8 60 db 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
27        | 7ff7c864f780h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[32u]()                                                       | LiteralExpr<Vector128<uint>> eval<uint>(IComparisonExpr<Vector128<uint>> expr)                                | 0f 1f 44 00 00 48 b8 40 dc 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
28        | 7ff7c864f7b0h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[32i]()                                                       | LiteralExpr<Vector128<int>> eval<int>(IComparisonExpr<Vector128<int>> expr)                                   | 0f 1f 44 00 00 48 b8 20 dd 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
29        | 7ff7c864f7e0h   | 1107    | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[64i]()                                                       | LiteralExpr<Vector128<long>> eval<long>(IComparisonExpr<Vector128<long>> expr)                                | 0f 1f 44 00 00 48 b8 00 de 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 33 5e c1 5e 5e 00 0a e8 2b 5e c1 5e 5e 01 09 e8 23 5e c1 5e 5e 02 08 e8 1b 5e c1 5e 5e 03 07 e8 13 5e c1 5e 5e 04 06 e8 0b 5e c1 5e 5e 05 05 e8 03 5e c1 5e 5e 06 04 e8 fb 5d c1 5e 5e 07 03 e8 f3 5d c1 5e 5e 08 02 e8 eb 5d c1 5e 5e 09 01 e8 e3 5d c1 5e 5e 0a 00 e8 f5 ab c8 f7 7f 00 00 e8 d3 5d c1 5e 5e 00 03 e8 cb 5d c1 5e 5e 01 02 e8 c3 5d c1 5e 5e 02 01 e8 bb 5d c1 5e 5e 03 00 a0 f8 ab c8 f7 7f 00 00 e8 ab 5d c1 5e 5e 00 00 58 fa ab c8 f7 7f 00 00 e8 9b 5d c1 5e 5e 00 00 b8 fa ab c8 f7 7f 00 00 e8 8b 5d c1 5e 5e 00 00 18 fb ab c8 f7 7f 00 00 e8 7b 5d c1 5e 5e 00 00 78 fb ab c8 f7 7f 00 00 e8 6b 5d c1 5e 5e 00 00 d8 fb ab c8 f7 7f 00 00 e8 5b 5d c1 5e 5e 00 00 38 fc ab c8 f7 7f 00 00 e8 4b 5d c1 5e 5e 00 03 e8 43 5d c1 5e 5e 01 02 e8 3b 5d c1 5e 5e 02 01 e8 33 5d c1 5e 5e 03 00 10 fd ab c8 f7 7f 00 00 e8 23 5d c1 5e 5e 00 00 80 fe ab c8 f7 7f 00 00 e8 13 5d c1 5e 5e 00 00 e0 fe ab c8 f7 7f 00 00 e8 03 5d c1 5e 5e 00 00 40 ff ab c8 f7 7f 00 00 e8 f3 5c c1 5e 5e 00 00 a0 ff ab c8 f7 7f 00 00 e8 e3 5c c1 5e 5e 00 00 40 00 ad c8 f7 7f 00 00 e8 d3 5c c1 5e 5e 00 00 a0 00 ad c8 f7 7f 00 00 e8 c3 5c c1 5e 5e 00 00 00 01 ad c8 f7 7f 00 00 e8 b3 5c c1 5e 5e 00 00 60 01 ad c8 f7 7f 00 00 e8 a3 5c c1 5e 5e 00 0a e8 9b 5c c1 5e 5e 01 09 e8 93 5c c1 5e 5e 02 08 e8 8b 5c c1 5e 5e 03 07 e8 83 5c c1 5e 5e 04 06 e8 7b 5c c1 5e 5e 05 05 e8 73 5c c1 5e 5e 06 04 e8 6b 5c c1 5e 5e 07 03 e8 63 5c c1 5e 5e 08 02 e8 5b 5c c1 5e 5e 09 01 e8 53 5c c1 5e 5e 0a 00 c0 01 ad c8 f7 7f 00 00 e8 43 5c c1 5e 5e 00 00 58 03 ad c8 f7 7f 00 00 e8 33 5c c1 5e 5e 00 00 28 05 ad c8 f7 7f 00 00 e8 23 5c c1 5e 5e 00 00 88 05 ad c8 f7 7f 00 00 e8 13 5c c1 5e 5e 00 00 e8 05 ad c8 f7 7f 00 00 e8 03 5c c1 5e 5e 00 02 e8 fb 5b c1 5e 5e 01 01 e8 f3 5b c1 5e 5e 02 00 38 06 ad c8 f7 7f 00 00 e8 e3 5b c1 5e 5e 00 00 28 07 ad c8 f7 7f 00 00 e8 d3 5b c1 5e 5e 00 00 88 07 ad c8 f7 7f 00 00 e8 c3 5b c1 5e 5e 00 02 e8 bb 5b c1 5e 5e 01 01 e8 b3 5b c1 5e 5e 02 00 d8 07 ad c8 f7 7f 00 00 e8 a3 5b c1 5e 5e 00 00 c8 08 ad c8 f7 7f 00 00 e8 93 5b c1 5e 5e 00 00 28 09 ad c8 f7 7f 00 00 e8 83 5b c1 5e 5e 00 02 e8 7b 5b c1 5e 5e 01 01 e8 73 5b c1 5e 5e 02 00 78 09 ad c8 f7 7f 00 00 e8 63 5b c1 5e 5e 00 00 68 0a ad c8 f7 7f 00 00 e8 53 5b c1 5e 5e 00 00 c8 0a ad c8 f7 7f 00 00 e8 43 5b c1 5e 5e 00 02 e8 3b 5b c1 5e 5e 01 01 e8 33 5b c1 5e 5e 02 00 18 0b ad c8 f7 7f 00 00 e8 23 5b c1 5e 5e 00 00 08 0c ad c8 f7 7f 00 00 e8 13 5b c1 5e 5e 00 00 68 0c ad c8 f7 7f 00 00 e8 03 5b c1 5e 5e 00 02 e8 fb 5a c1 5e 5e 01 01 e8 f3 5a c1 5e 5e 02 00 b8 0c ad c8 f7 7f 00 00 e8 e3 5a c1 5e 5e 00 00 a8 0d ad c8 f7 7f 00 00 e8 d3 5a c1 5e 5e 00 00 08 0e ad c8 f7 7f 00 00 e8 c3 5a c1 5e 5e 00 02 e8 bb 5a c1 5e 5e 01 01 e8 b3 5a c1 5e 5e 02 00 58 0e ad c8 f7 7f 00 00 e8 a3 5a c1 5e 5e 00 00 48 0f ad c8 f7 7f 00 00 e8 93 5a c1 5e 5e 00 00 a8 0f ad c8 f7 7f 00 00 e8 83 5a c1 5e 5e 00 02 e8 7b 5a c1 5e 5e 01 01 e8 73 5a c1 5e 5e 02 00 f8 0f ad c8 f7 7f 00 00 e8 63 5a c1 5e 5e 00 00 e8 10 ad c8 f7 7f 00 00 e8 53 5a c1 5e 5e 00 00 48 11 ad c8 f7 7f 00 00 e8 43 5a c1 5e 5e 00 00 20 14 ad c8 f7 7f 00 00 c8 2a ac c8 f7 7f 00 00 0f 1f 44 00 00 48 b8 f0 e2 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
30        | 7ff7c864fc10h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[8u]()                                                        | LiteralExpr<Vector256<byte>> eval<byte>(IComparisonExpr<Vector256<byte>> expr)                                | 0f 1f 44 00 00 48 b8 f0 e2 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
31        | 7ff7c864fc40h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[8i]()                                                        | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IComparisonExpr<Vector256<sbyte>> expr)                             | 0f 1f 44 00 00 48 b8 00 e4 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
32        | 7ff7c864fc70h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[16u]()                                                       | LiteralExpr<Vector256<ushort>> eval<ushort>(IComparisonExpr<Vector256<ushort>> expr)                          | 0f 1f 44 00 00 48 b8 10 e5 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
33        | 7ff7c864fca0h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[16i]()                                                       | LiteralExpr<Vector256<short>> eval<short>(IComparisonExpr<Vector256<short>> expr)                             | 0f 1f 44 00 00 48 b8 20 e6 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
34        | 7ff7c864fcd0h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[32u]()                                                       | LiteralExpr<Vector256<uint>> eval<uint>(IComparisonExpr<Vector256<uint>> expr)                                | 0f 1f 44 00 00 48 b8 40 eb 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
35        | 7ff7c864fd00h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[32i]()                                                       | LiteralExpr<Vector256<int>> eval<int>(IComparisonExpr<Vector256<int>> expr)                                   | 0f 1f 44 00 00 48 b8 50 ec 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
36        | 7ff7c864fd30h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[64i]()                                                       | LiteralExpr<Vector256<long>> eval<long>(IComparisonExpr<Vector256<long>> expr)                                | 0f 1f 44 00 00 48 b8 60 ed 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
37        | 7ff7c864fd60h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_pred_g[8u]()                                                            | bit eval<byte>(IComparisonPred<byte> expr)                                                                    | 0f 1f 44 00 00 48 b8 50 cc 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
38        | 7ff7c864fd90h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_pred_g[8i]()                                                            | bit eval<sbyte>(IComparisonPred<sbyte> expr)                                                                  | 0f 1f 44 00 00 48 b8 f0 cc 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
39        | 7ff7c864fdc0h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_pred_g[16u]()                                                           | bit eval<ushort>(IComparisonPred<ushort> expr)                                                                | 0f 1f 44 00 00 48 b8 90 cd 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
40        | 7ff7c864fdf0h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_pred_g[16i]()                                                           | bit eval<short>(IComparisonPred<short> expr)                                                                  | 0f 1f 44 00 00 48 b8 30 ce 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
41        | 7ff7c864fe20h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_pred_g[32u]()                                                           | bit eval<uint>(IComparisonPred<uint> expr)                                                                    | 0f 1f 44 00 00 48 b8 d0 ce 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
42        | 7ff7c864fe50h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_pred_g[32i]()                                                           | bit eval<int>(IComparisonPred<int> expr)                                                                      | 0f 1f 44 00 00 48 b8 70 cf 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
43        | 7ff7c864fe80h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_pred_g[64i]()                                                           | bit eval<long>(IComparisonPred<long> expr)                                                                    | 0f 1f 44 00 00 48 b8 10 d0 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
44        | 7ff7c864feb0h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[8u]()                                                          | LiteralExpr<byte> eval<byte>(IArithmeticExpr<byte> expr)                                                      | 0f 1f 44 00 00 48 b8 18 fa 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
45        | 7ff7c864fee0h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[8i]()                                                          | LiteralExpr<sbyte> eval<sbyte>(IArithmeticExpr<sbyte> expr)                                                   | 0f 1f 44 00 00 48 b8 68 fa 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
46        | 7ff7c864ff10h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[16u]()                                                         | LiteralExpr<ushort> eval<ushort>(IArithmeticExpr<ushort> expr)                                                | 0f 1f 44 00 00 48 b8 a8 fa 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
47        | 7ff7c864ff40h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[16i]()                                                         | LiteralExpr<short> eval<short>(IArithmeticExpr<short> expr)                                                   | 0f 1f 44 00 00 48 b8 e8 fa 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
48        | 7ff7c864ff70h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[32u]()                                                         | LiteralExpr<uint> eval<uint>(IArithmeticExpr<uint> expr)                                                      | 0f 1f 44 00 00 48 b8 28 fb 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
49        | 7ff7c864ffa0h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[32i]()                                                         | LiteralExpr<int> eval<int>(IArithmeticExpr<int> expr)                                                         | 0f 1f 44 00 00 48 b8 68 fb 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
50        | 7ff7c864ffd0h   | 1064    | hex://logix/LogicEngine?eval#eval_arith_expr_g[64u]()                                                         | LiteralExpr<ulong> eval<ulong>(IArithmeticExpr<ulong> expr)                                                   | 0f 1f 44 00 00 48 b8 a8 fb 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 43 56 c1 5e 5e 00 02 e8 3b 56 c1 5e 5e 01 01 e8 33 56 c1 5e 5e 02 00 98 11 ad c8 f7 7f 00 00 e8 23 56 c1 5e 5e 00 0c e8 1b 56 c1 5e 5e 01 0b e8 13 56 c1 5e 5e 02 0a e8 0b 56 c1 5e 5e 03 09 e8 03 56 c1 5e 5e 04 08 e8 fb 55 c1 5e 5e 05 07 e8 f3 55 c1 5e 5e 06 06 e8 eb 55 c1 5e 5e 07 05 e8 e3 55 c1 5e 5e 08 04 e8 db 55 c1 5e 5e 09 03 e8 d3 55 c1 5e 5e 0a 02 e8 cb 55 c1 5e 5e 0b 01 e8 c3 55 c1 5e 5e 0c 00 98 12 ad c8 f7 7f 00 00 e8 b3 55 c1 5e 5e 00 0a e8 ab 55 c1 5e 5e 01 09 e8 a3 55 c1 5e 5e 02 08 e8 9b 55 c1 5e 5e 03 07 e8 93 55 c1 5e 5e 04 06 e8 8b 55 c1 5e 5e 05 05 e8 83 55 c1 5e 5e 06 04 e8 7b 55 c1 5e 5e 07 03 e8 73 55 c1 5e 5e 08 02 e8 6b 55 c1 5e 5e 09 01 e8 63 55 c1 5e 5e 0a 00 d0 14 ad c8 f7 7f 00 00 e8 53 55 c1 5e 5e 00 00 50 16 ad c8 f7 7f 00 00 e8 43 55 c1 5e 5e 00 00 98 17 ad c8 f7 7f 00 00 e8 33 55 c1 5e 5e 00 0a e8 2b 55 c1 5e 5e 01 09 e8 23 55 c1 5e 5e 02 08 e8 1b 55 c1 5e 5e 03 07 e8 13 55 c1 5e 5e 04 06 e8 0b 55 c1 5e 5e 05 05 e8 03 55 c1 5e 5e 06 04 e8 fb 54 c1 5e 5e 07 03 e8 f3 54 c1 5e 5e 08 02 e8 eb 54 c1 5e 5e 09 01 e8 e3 54 c1 5e 5e 0a 00 f8 17 ad c8 f7 7f 00 00 e8 d3 54 c1 5e 5e 00 00 78 19 ad c8 f7 7f 00 00 e8 c3 54 c1 5e 5e 00 00 c0 1a ad c8 f7 7f 00 00 e8 b3 54 c1 5e 5e 00 0c e8 ab 54 c1 5e 5e 01 0b e8 a3 54 c1 5e 5e 02 0a e8 9b 54 c1 5e 5e 03 09 e8 93 54 c1 5e 5e 04 08 e8 8b 54 c1 5e 5e 05 07 e8 83 54 c1 5e 5e 06 06 e8 7b 54 c1 5e 5e 07 05 e8 73 54 c1 5e 5e 08 04 e8 6b 54 c1 5e 5e 09 03 e8 63 54 c1 5e 5e 0a 02 e8 5b 54 c1 5e 5e 0b 01 e8 53 54 c1 5e 5e 0c 00 50 1b ad c8 f7 7f 00 00 e8 43 54 c1 5e 5e 00 00 d8 1c ad c8 f7 7f 00 00 e8 33 54 c1 5e 5e 00 0a e8 2b 54 c1 5e 5e 01 09 e8 23 54 c1 5e 5e 02 08 e8 1b 54 c1 5e 5e 03 07 e8 13 54 c1 5e 5e 04 06 e8 0b 54 c1 5e 5e 05 05 e8 03 54 c1 5e 5e 06 04 e8 fb 53 c1 5e 5e 07 03 e8 f3 53 c1 5e 5e 08 02 e8 eb 53 c1 5e 5e 09 01 e8 e3 53 c1 5e 5e 0a 00 88 1d ad c8 f7 7f 00 00 e8 d3 53 c1 5e 5e 00 00 08 1f ad c8 f7 7f 00 00 e8 c3 53 c1 5e 5e 00 00 50 20 ad c8 f7 7f 00 00 e8 b3 53 c1 5e 5e 00 0a e8 ab 53 c1 5e 5e 01 09 e8 a3 53 c1 5e 5e 02 08 e8 9b 53 c1 5e 5e 03 07 e8 93 53 c1 5e 5e 04 06 e8 8b 53 c1 5e 5e 05 05 e8 83 53 c1 5e 5e 06 04 e8 7b 53 c1 5e 5e 07 03 e8 73 53 c1 5e 5e 08 02 e8 6b 53 c1 5e 5e 09 01 e8 63 53 c1 5e 5e 0a 00 b0 20 ad c8 f7 7f 00 00 e8 53 53 c1 5e 5e 00 00 30 22 ad c8 f7 7f 00 00 e8 43 53 c1 5e 5e 00 00 78 23 ad c8 f7 7f 00 00 e8 33 53 c1 5e 5e 00 09 e8 2b 53 c1 5e 5e 01 08 e8 23 53 c1 5e 5e 02 07 e8 1b 53 c1 5e 5e 03 06 e8 13 53 c1 5e 5e 04 05 e8 0b 53 c1 5e 5e 05 04 e8 03 53 c1 5e 5e 06 03 e8 fb 52 c1 5e 5e 07 02 e8 f3 52 c1 5e 5e 08 01 e8 eb 52 c1 5e 5e 09 00 08 24 ad c8 f7 7f 00 00 e8 db 52 c1 5e 5e 00 03 e8 d3 52 c1 5e 5e 01 02 e8 cb 52 c1 5e 5e 02 01 e8 c3 52 c1 5e 5e 03 00 a0 25 ad c8 f7 7f 00 00 e8 b3 52 c1 5e 5e 00 00 10 27 ad c8 f7 7f 00 00 e8 a3 52 c1 5e 5e 00 09 e8 9b 52 c1 5e 5e 01 08 e8 93 52 c1 5e 5e 02 07 e8 8b 52 c1 5e 5e 03 06 e8 83 52 c1 5e 5e 04 05 e8 7b 52 c1 5e 5e 05 04 e8 73 52 c1 5e 5e 06 03 e8 6b 52 c1 5e 5e 07 02 e8 63 52 c1 5e 5e 08 01 e8 5b 52 c1 5e 5e 09 00 a0 27 ad c8 f7 7f 00 00 00 00 00 00 00 00 00 00
51        | 7ff7c8650400h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[64i]()                                                         | LiteralExpr<long> eval<long>(IArithmeticExpr<long> expr)                                                      | 0f 1f 44 00 00 48 b8 e8 fb 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
52        | 7ff7c8650430h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[8u]()                                                      | LiteralExpr<Vector128<byte>> eval<byte>(IExpr<Vector128<byte>> expr)                                          | 0f 1f 44 00 00 48 b8 00 d2 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
53        | 7ff7c8650460h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[8i]()                                                      | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IExpr<Vector128<sbyte>> expr)                                       | 0f 1f 44 00 00 48 b8 f8 d2 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
54        | 7ff7c8650490h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[16u]()                                                     | LiteralExpr<Vector128<ushort>> eval<ushort>(IExpr<Vector128<ushort>> expr)                                    | 0f 1f 44 00 00 48 b8 e0 d3 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
55        | 7ff7c86504c0h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[16i]()                                                     | LiteralExpr<Vector128<short>> eval<short>(IExpr<Vector128<short>> expr)                                       | 0f 1f 44 00 00 48 b8 70 d7 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
56        | 7ff7c86504f0h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[32u]()                                                     | LiteralExpr<Vector128<uint>> eval<uint>(IExpr<Vector128<uint>> expr)                                          | 0f 1f 44 00 00 48 b8 58 d8 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
57        | 7ff7c8650520h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[32i]()                                                     | LiteralExpr<Vector128<int>> eval<int>(IExpr<Vector128<int>> expr)                                             | 0f 1f 44 00 00 48 b8 40 d9 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
58        | 7ff7c8650550h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[64u]()                                                     | LiteralExpr<Vector128<ulong>> eval<ulong>(IExpr<Vector128<ulong>> expr)                                       | 0f 1f 44 00 00 48 b8 78 01 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
59        | 7ff7c8650580h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[64i]()                                                     | LiteralExpr<Vector128<long>> eval<long>(IExpr<Vector128<long>> expr)                                          | 0f 1f 44 00 00 48 b8 28 da 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
60        | 7ff7c86505b0h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[8u]()                                                      | LiteralExpr<Vector256<byte>> eval<byte>(IExpr<Vector256<byte>> expr)                                          | 0f 1f 44 00 00 48 b8 e8 df 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
61        | 7ff7c86505e0h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[8i]()                                                      | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IExpr<Vector256<sbyte>> expr)                                       | 0f 1f 44 00 00 48 b8 e0 e0 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
62        | 7ff7c8650610h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[16u]()                                                     | LiteralExpr<Vector256<ushort>> eval<ushort>(IExpr<Vector256<ushort>> expr)                                    | 0f 1f 44 00 00 48 b8 c8 e1 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
63        | 7ff7c8650640h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[16i]()                                                     | LiteralExpr<Vector256<short>> eval<short>(IExpr<Vector256<short>> expr)                                       | 0f 1f 44 00 00 48 b8 b0 e2 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
64        | 7ff7c8650670h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[32u]()                                                     | LiteralExpr<Vector256<uint>> eval<uint>(IExpr<Vector256<uint>> expr)                                          | 0f 1f 44 00 00 48 b8 e8 e7 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
65        | 7ff7c86506a0h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[32i]()                                                     | LiteralExpr<Vector256<int>> eval<int>(IExpr<Vector256<int>> expr)                                             | 0f 1f 44 00 00 48 b8 d0 e8 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
66        | 7ff7c86506d0h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[64u]()                                                     | LiteralExpr<Vector256<ulong>> eval<ulong>(IExpr<Vector256<ulong>> expr)                                       | 0f 1f 44 00 00 48 b8 f8 02 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
67        | 7ff7c8650700h   | 1303    | hex://logix/LogicEngine?eval#eval_vector_expr256_g[64i]()                                                     | LiteralExpr<Vector256<long>> eval<long>(IExpr<Vector256<long>> expr)                                          | 0f 1f 44 00 00 48 b8 b8 e9 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 13 4f c1 5e 5e 00 00 48 29 ad c8 f7 7f 00 00 e8 03 4f c1 5e 5e 00 0a e8 fb 4e c1 5e 5e 01 09 e8 f3 4e c1 5e 5e 02 08 e8 eb 4e c1 5e 5e 03 07 e8 e3 4e c1 5e 5e 04 06 e8 db 4e c1 5e 5e 05 05 e8 d3 4e c1 5e 5e 06 04 e8 cb 4e c1 5e 5e 07 03 e8 c3 4e c1 5e 5e 08 02 e8 bb 4e c1 5e 5e 09 01 e8 b3 4e c1 5e 5e 0a 00 a8 29 ad c8 f7 7f 00 00 e8 a3 4e c1 5e 5e 00 00 40 2b ad c8 f7 7f 00 00 e8 93 4e c1 5e 5e 00 00 10 2c ad c8 f7 7f 00 00 e8 83 4e c1 5e 5e 00 00 70 2c ad c8 f7 7f 00 00 e8 73 4e c1 5e 5e 00 00 d0 2c ad c8 f7 7f 00 00 e8 63 4e c1 5e 5e 00 09 e8 5b 4e c1 5e 5e 01 08 e8 53 4e c1 5e 5e 02 07 e8 4b 4e c1 5e 5e 03 06 e8 43 4e c1 5e 5e 04 05 e8 3b 4e c1 5e 5e 05 04 e8 33 4e c1 5e 5e 06 03 e8 2b 4e c1 5e 5e 07 02 e8 23 4e c1 5e 5e 08 01 e8 1b 4e c1 5e 5e 09 00 60 2d ad c8 f7 7f 00 00 e8 0b 4e c1 5e 5e 00 00 08 2f ad c8 f7 7f 00 00 e8 fb 4d c1 5e 5e 00 09 e8 f3 4d c1 5e 5e 01 08 e8 eb 4d c1 5e 5e 02 07 e8 e3 4d c1 5e 5e 03 06 e8 db 4d c1 5e 5e 04 05 e8 d3 4d c1 5e 5e 05 04 e8 cb 4d c1 5e 5e 06 03 e8 c3 4d c1 5e 5e 07 02 e8 bb 4d c1 5e 5e 08 01 e8 b3 4d c1 5e 5e 09 00 98 2f ad c8 f7 7f 00 00 e8 a3 4d c1 5e 5e 00 00 40 31 ad c8 f7 7f 00 00 e8 93 4d c1 5e 5e 00 09 e8 8b 4d c1 5e 5e 01 08 e8 83 4d c1 5e 5e 02 07 e8 7b 4d c1 5e 5e 03 06 e8 73 4d c1 5e 5e 04 05 e8 6b 4d c1 5e 5e 05 04 e8 63 4d c1 5e 5e 06 03 e8 5b 4d c1 5e 5e 07 02 e8 53 4d c1 5e 5e 08 01 e8 4b 4d c1 5e 5e 09 00 d0 31 ad c8 f7 7f 00 00 e8 3b 4d c1 5e 5e 00 00 78 33 ad c8 f7 7f 00 00 e8 2b 4d c1 5e 5e 00 09 e8 23 4d c1 5e 5e 01 08 e8 1b 4d c1 5e 5e 02 07 e8 13 4d c1 5e 5e 03 06 e8 0b 4d c1 5e 5e 04 05 e8 03 4d c1 5e 5e 05 04 e8 fb 4c c1 5e 5e 06 03 e8 f3 4c c1 5e 5e 07 02 e8 eb 4c c1 5e 5e 08 01 e8 e3 4c c1 5e 5e 09 00 08 34 ad c8 f7 7f 00 00 e8 d3 4c c1 5e 5e 00 00 b0 35 ad c8 f7 7f 00 00 e8 c3 4c c1 5e 5e 00 09 e8 bb 4c c1 5e 5e 01 08 e8 b3 4c c1 5e 5e 02 07 e8 ab 4c c1 5e 5e 03 06 e8 a3 4c c1 5e 5e 04 05 e8 9b 4c c1 5e 5e 05 04 e8 93 4c c1 5e 5e 06 03 e8 8b 4c c1 5e 5e 07 02 e8 83 4c c1 5e 5e 08 01 e8 7b 4c c1 5e 5e 09 00 40 36 ad c8 f7 7f 00 00 e8 6b 4c c1 5e 5e 00 00 e8 37 ad c8 f7 7f 00 00 e8 5b 4c c1 5e 5e 00 09 e8 53 4c c1 5e 5e 01 08 e8 4b 4c c1 5e 5e 02 07 e8 43 4c c1 5e 5e 03 06 e8 3b 4c c1 5e 5e 04 05 e8 33 4c c1 5e 5e 05 04 e8 2b 4c c1 5e 5e 06 03 e8 23 4c c1 5e 5e 07 02 e8 1b 4c c1 5e 5e 08 01 e8 13 4c c1 5e 5e 09 00 78 38 ad c8 f7 7f 00 00 e8 03 4c c1 5e 5e 00 00 20 3a ad c8 f7 7f 00 00 e8 f3 4b c1 5e 5e 00 00 80 3a ad c8 f7 7f 00 00 e8 e3 4b c1 5e 5e 00 00 e0 3a ad c8 f7 7f 00 00 e8 d3 4b c1 5e 5e 00 09 e8 cb 4b c1 5e 5e 01 08 e8 c3 4b c1 5e 5e 02 07 e8 bb 4b c1 5e 5e 03 06 e8 b3 4b c1 5e 5e 04 05 e8 ab 4b c1 5e 5e 05 04 e8 a3 4b c1 5e 5e 06 03 e8 9b 4b c1 5e 5e 07 02 e8 93 4b c1 5e 5e 08 01 e8 8b 4b c1 5e 5e 09 00 70 3b ad c8 f7 7f 00 00 e8 7b 4b c1 5e 5e 00 00 b0 3e ad c8 f7 7f 00 00 e8 6b 4b c1 5e 5e 00 09 e8 63 4b c1 5e 5e 01 08 e8 5b 4b c1 5e 5e 02 07 e8 53 4b c1 5e 5e 03 06 e8 4b 4b c1 5e 5e 04 05 e8 43 4b c1 5e 5e 05 04 e8 3b 4b c1 5e 5e 06 03 e8 33 4b c1 5e 5e 07 02 e8 2b 4b c1 5e 5e 08 01 e8 23 4b c1 5e 5e 09 00 90 3f ad c8 f7 7f 00 00 c0 4f ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 10 ea 70 c7 f7 7f 00 00 ba 02 00 00 00 e8 8d 62 c1 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 61 f8 ff ff 48 8b ce e8 01 bc ff ff 0f b6 40 08 0f b6 c0 3c ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 d8 50 ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 70 c7 f7 7f 00 00 ba 02 00 00 00 e8 1d 62 c1 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 31 fc ff ff 48 8b ce e8 71 bc ff ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
68        | 7ff7c8650b30h   | 231     | hex://logix/LogicEngine?satisfied#satisfied_g[8u](8u,8u)                                                      | bit satisfied<byte>(ComparisonExpr<byte> expr, byte a, byte b)                                                | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 10 ea 70 c7 f7 7f 00 00 ba 02 00 00 00 e8 8d 62 c1 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 61 f8 ff ff 48 8b ce e8 01 bc ff ff 0f b6 40 08 0f b6 c0 3c ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 d8 50 ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 70 c7 f7 7f 00 00 ba 02 00 00 00 e8 1d 62 c1 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 31 fc ff ff 48 8b ce e8 71 bc ff ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
69        | 7ff7c8650ba0h   | 119     | hex://logix/LogicEngine?satisfied#satisfied_g[8i](8i,8i)                                                      | bit satisfied<sbyte>(ComparisonExpr<sbyte> expr, sbyte a, sbyte b)                                            | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 70 c7 f7 7f 00 00 ba 02 00 00 00 e8 1d 62 c1 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 31 fc ff ff 48 8b ce e8 71 bc ff ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
70        | 7ff7c8650c20h   | 119     | hex://logix/LogicEngine?satisfied#satisfied_g[16u](16u,16u)                                                   | bit satisfied<ushort>(ComparisonExpr<ushort> expr, ushort a, ushort b)                                        | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 38 5e 15 c8 f7 7f 00 00 ba 02 00 00 00 e8 9d 61 c1 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 18 fc ff ff 48 8b ce e8 a0 bc ff ff 0f b7 40 08 0f b7 c0 0f b7 c0 3d ff ff 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
71        | 7ff7c8650ca0h   | 119     | hex://logix/LogicEngine?satisfied#satisfied_g[16i](16i,16i)                                                   | bit satisfied<short>(ComparisonExpr<short> expr, short a, short b)                                            | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 38 64 15 c8 f7 7f 00 00 ba 02 00 00 00 e8 1d 61 c1 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 00 fc ff ff 48 8b ce e8 d0 bc ff ff 48 0f bf 40 08 48 0f bf c0 48 0f bf c0 3d ff 7f 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
72        | 7ff7c8650d20h   | 1635    | hex://logix/LogicEngine?satisfied#satisfied_g[32u](32u,32u)                                                   | bit satisfied<uint>(ComparisonExpr<uint> expr, uint a, uint b)                                                | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 18 67 15 c8 f7 7f 00 00 ba 02 00 00 00 e8 9d 60 c1 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 ea fb ff ff 48 8b ce e8 02 bd ff ff 8b 40 08 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 38 55 ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 48 5f 7d c7 f7 7f 00 00 ba 02 00 00 00 e8 2d 60 c1 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 e2 fb ff ff 48 8b ce e8 32 bd ff ff 8b 40 08 3d ff ff ff 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 80 56 ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 20 0f a8 c7 f7 7f 00 00 ba 02 00 00 00 e8 bc 5f c1 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 d7 fb ff ff 48 8b ce e8 07 fc ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 98 57 ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 b8 6f 15 c8 f7 7f 00 00 ba 02 00 00 00 e8 4c 5f c1 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 ef fb ff ff 48 8b ce e8 ef bc ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 53 47 c1 5e 5e 00 0c e8 4b 47 c1 5e 5e 01 0b e8 43 47 c1 5e 5e 02 0a e8 3b 47 c1 5e 5e 03 09 e8 33 47 c1 5e 5e 04 08 e8 2b 47 c1 5e 5e 05 07 e8 23 47 c1 5e 5e 06 06 e8 1b 47 c1 5e 5e 07 05 e8 13 47 c1 5e 5e 08 04 e8 0b 47 c1 5e 5e 09 03 e8 03 47 c1 5e 5e 0a 02 e8 fb 46 c1 5e 5e 0b 01 e8 f3 46 c1 5e 5e 0c 00 28 3d ad c8 f7 7f 00 00 e8 e3 46 c1 5e 5e 00 03 e8 db 46 c1 5e 5e 01 02 e8 d3 46 c1 5e 5e 02 01 e8 cb 46 c1 5e 5e 03 00 28 41 ad c8 f7 7f 00 00 e8 bb 46 c1 5e 5e 00 00 98 42 ad c8 f7 7f 00 00 e8 ab 46 c1 5e 5e 00 09 e8 a3 46 c1 5e 5e 01 08 e8 9b 46 c1 5e 5e 02 07 e8 93 46 c1 5e 5e 03 06 e8 8b 46 c1 5e 5e 04 05 e8 83 46 c1 5e 5e 05 04 e8 7b 46 c1 5e 5e 06 03 e8 73 46 c1 5e 5e 07 02 e8 6b 46 c1 5e 5e 08 01 e8 63 46 c1 5e 5e 09 00 28 43 ad c8 f7 7f 00 00 e8 53 46 c1 5e 5e 00 03 e8 4b 46 c1 5e 5e 03 02 e8 43 46 c1 5e 5e 06 01 e8 3b 46 c1 5e 5e 09 00 08 46 ad c8 f7 7f 00 00 e8 2b 46 c1 5e 5e 00 00 d8 46 ad c8 f7 7f 00 00 e8 1b 46 c1 5e 5e 00 0a e8 13 46 c1 5e 5e 01 09 e8 0b 46 c1 5e 5e 02 08 e8 03 46 c1 5e 5e 03 07 e8 fb 45 c1 5e 5e 04 06 e8 f3 45 c1 5e 5e 05 05 e8 eb 45 c1 5e 5e 06 04 e8 e3 45 c1 5e 5e 07 03 e8 db 45 c1 5e 5e 08 02 e8 d3 45 c1 5e 5e 09 01 e8 cb 45 c1 5e 5e 0a 00 38 47 ad c8 f7 7f 00 00 e8 bb 45 c1 5e 5e 00 00 b8 48 ad c8 f7 7f 00 00 e8 ab 45 c1 5e 5e 00 00 88 49 ad c8 f7 7f 00 00 e8 9b 45 c1 5e 5e 00 00 e8 49 ad c8 f7 7f 00 00 e8 8b 45 c1 5e 5e 00 00 48 4a ad c8 f7 7f 00 00 e8 7b 45 c1 5e 5e 00 09 e8 73 45 c1 5e 5e 01 08 e8 6b 45 c1 5e 5e 02 07 e8 63 45 c1 5e 5e 03 06 e8 5b 45 c1 5e 5e 04 05 e8 53 45 c1 5e 5e 05 04 e8 4b 45 c1 5e 5e 06 03 e8 43 45 c1 5e 5e 07 02 e8 3b 45 c1 5e 5e 08 01 e8 33 45 c1 5e 5e 09 00 d8 4a ad c8 f7 7f 00 00 e8 23 45 c1 5e 5e 00 03 e8 1b 45 c1 5e 5e 03 02 e8 13 45 c1 5e 5e 06 01 e8 0b 45 c1 5e 5e 09 00 b8 4d ad c8 f7 7f 00 00 e8 fb 44 c1 5e 5e 00 00 88 4e ad c8 f7 7f 00 00 e8 eb 44 c1 5e 5e 00 09 e8 e3 44 c1 5e 5e 01 08 e8 db 44 c1 5e 5e 02 07 e8 d3 44 c1 5e 5e 03 06 e8 cb 44 c1 5e 5e 04 05 e8 c3 44 c1 5e 5e 05 04 e8 bb 44 c1 5e 5e 06 03 e8 b3 44 c1 5e 5e 07 02 e8 ab 44 c1 5e 5e 08 01 e8 a3 44 c1 5e 5e 09 00 18 4f ad c8 f7 7f 00 00 e8 93 44 c1 5e 5e 00 03 e8 8b 44 c1 5e 5e 03 02 e8 83 44 c1 5e 5e 06 01 e8 7b 44 c1 5e 5e 09 00 f8 51 ad c8 f7 7f 00 00 e8 6b 44 c1 5e 5e 00 00 c8 52 ad c8 f7 7f 00 00 e8 5b 44 c1 5e 5e 00 09 e8 53 44 c1 5e 5e 01 08 e8 4b 44 c1 5e 5e 02 07 e8 43 44 c1 5e 5e 03 06 e8 3b 44 c1 5e 5e 04 05 e8 33 44 c1 5e 5e 05 04 e8 2b 44 c1 5e 5e 06 03 e8 23 44 c1 5e 5e 07 02 e8 1b 44 c1 5e 5e 08 01 e8 13 44 c1 5e 5e 09 00 58 53 ad c8 f7 7f 00 00 e8 03 44 c1 5e 5e 00 03 e8 fb 43 c1 5e 5e 03 02 e8 f3 43 c1 5e 5e 06 01 e8 eb 43 c1 5e 5e 09 00 38 56 ad c8 f7 7f 00 00 e8 db 43 c1 5e 5e 00 00 08 57 ad c8 f7 7f 00 00 e8 cb 43 c1 5e 5e 00 09 e8 c3 43 c1 5e 5e 01 08 e8 bb 43 c1 5e 5e 02 07 e8 b3 43 c1 5e 5e 03 06 e8 ab 43 c1 5e 5e 04 05 e8 a3 43 c1 5e 5e 05 04 e8 9b 43 c1 5e 5e 06 03 e8 93 43 c1 5e 5e 07 02 e8 8b 43 c1 5e 5e 08 01 e8 83 43 c1 5e 5e 09 00 98 57 ad c8 f7 7f 00 00 e8 73 43 c1 5e 5e 00 00 48 5b ad c8 f7 7f 00 00 e8 63 43 c1 5e 5e 00 00 88 5f ad c8 f7 7f 00 00 70 5d ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 20 45 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 c9 5a c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 8a fc ff ff 48 8b cb e8 72 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
73        | 7ff7c8650d90h   | 1523    | hex://logix/LogicEngine?satisfied#satisfied_g[32i](32i,32i)                                                   | bit satisfied<int>(ComparisonExpr<int> expr, int a, int b)                                                    | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 48 5f 7d c7 f7 7f 00 00 ba 02 00 00 00 e8 2d 60 c1 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 e2 fb ff ff 48 8b ce e8 32 bd ff ff 8b 40 08 3d ff ff ff 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 80 56 ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 20 0f a8 c7 f7 7f 00 00 ba 02 00 00 00 e8 bc 5f c1 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 d7 fb ff ff 48 8b ce e8 07 fc ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 98 57 ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 b8 6f 15 c8 f7 7f 00 00 ba 02 00 00 00 e8 4c 5f c1 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 ef fb ff ff 48 8b ce e8 ef bc ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 53 47 c1 5e 5e 00 0c e8 4b 47 c1 5e 5e 01 0b e8 43 47 c1 5e 5e 02 0a e8 3b 47 c1 5e 5e 03 09 e8 33 47 c1 5e 5e 04 08 e8 2b 47 c1 5e 5e 05 07 e8 23 47 c1 5e 5e 06 06 e8 1b 47 c1 5e 5e 07 05 e8 13 47 c1 5e 5e 08 04 e8 0b 47 c1 5e 5e 09 03 e8 03 47 c1 5e 5e 0a 02 e8 fb 46 c1 5e 5e 0b 01 e8 f3 46 c1 5e 5e 0c 00 28 3d ad c8 f7 7f 00 00 e8 e3 46 c1 5e 5e 00 03 e8 db 46 c1 5e 5e 01 02 e8 d3 46 c1 5e 5e 02 01 e8 cb 46 c1 5e 5e 03 00 28 41 ad c8 f7 7f 00 00 e8 bb 46 c1 5e 5e 00 00 98 42 ad c8 f7 7f 00 00 e8 ab 46 c1 5e 5e 00 09 e8 a3 46 c1 5e 5e 01 08 e8 9b 46 c1 5e 5e 02 07 e8 93 46 c1 5e 5e 03 06 e8 8b 46 c1 5e 5e 04 05 e8 83 46 c1 5e 5e 05 04 e8 7b 46 c1 5e 5e 06 03 e8 73 46 c1 5e 5e 07 02 e8 6b 46 c1 5e 5e 08 01 e8 63 46 c1 5e 5e 09 00 28 43 ad c8 f7 7f 00 00 e8 53 46 c1 5e 5e 00 03 e8 4b 46 c1 5e 5e 03 02 e8 43 46 c1 5e 5e 06 01 e8 3b 46 c1 5e 5e 09 00 08 46 ad c8 f7 7f 00 00 e8 2b 46 c1 5e 5e 00 00 d8 46 ad c8 f7 7f 00 00 e8 1b 46 c1 5e 5e 00 0a e8 13 46 c1 5e 5e 01 09 e8 0b 46 c1 5e 5e 02 08 e8 03 46 c1 5e 5e 03 07 e8 fb 45 c1 5e 5e 04 06 e8 f3 45 c1 5e 5e 05 05 e8 eb 45 c1 5e 5e 06 04 e8 e3 45 c1 5e 5e 07 03 e8 db 45 c1 5e 5e 08 02 e8 d3 45 c1 5e 5e 09 01 e8 cb 45 c1 5e 5e 0a 00 38 47 ad c8 f7 7f 00 00 e8 bb 45 c1 5e 5e 00 00 b8 48 ad c8 f7 7f 00 00 e8 ab 45 c1 5e 5e 00 00 88 49 ad c8 f7 7f 00 00 e8 9b 45 c1 5e 5e 00 00 e8 49 ad c8 f7 7f 00 00 e8 8b 45 c1 5e 5e 00 00 48 4a ad c8 f7 7f 00 00 e8 7b 45 c1 5e 5e 00 09 e8 73 45 c1 5e 5e 01 08 e8 6b 45 c1 5e 5e 02 07 e8 63 45 c1 5e 5e 03 06 e8 5b 45 c1 5e 5e 04 05 e8 53 45 c1 5e 5e 05 04 e8 4b 45 c1 5e 5e 06 03 e8 43 45 c1 5e 5e 07 02 e8 3b 45 c1 5e 5e 08 01 e8 33 45 c1 5e 5e 09 00 d8 4a ad c8 f7 7f 00 00 e8 23 45 c1 5e 5e 00 03 e8 1b 45 c1 5e 5e 03 02 e8 13 45 c1 5e 5e 06 01 e8 0b 45 c1 5e 5e 09 00 b8 4d ad c8 f7 7f 00 00 e8 fb 44 c1 5e 5e 00 00 88 4e ad c8 f7 7f 00 00 e8 eb 44 c1 5e 5e 00 09 e8 e3 44 c1 5e 5e 01 08 e8 db 44 c1 5e 5e 02 07 e8 d3 44 c1 5e 5e 03 06 e8 cb 44 c1 5e 5e 04 05 e8 c3 44 c1 5e 5e 05 04 e8 bb 44 c1 5e 5e 06 03 e8 b3 44 c1 5e 5e 07 02 e8 ab 44 c1 5e 5e 08 01 e8 a3 44 c1 5e 5e 09 00 18 4f ad c8 f7 7f 00 00 e8 93 44 c1 5e 5e 00 03 e8 8b 44 c1 5e 5e 03 02 e8 83 44 c1 5e 5e 06 01 e8 7b 44 c1 5e 5e 09 00 f8 51 ad c8 f7 7f 00 00 e8 6b 44 c1 5e 5e 00 00 c8 52 ad c8 f7 7f 00 00 e8 5b 44 c1 5e 5e 00 09 e8 53 44 c1 5e 5e 01 08 e8 4b 44 c1 5e 5e 02 07 e8 43 44 c1 5e 5e 03 06 e8 3b 44 c1 5e 5e 04 05 e8 33 44 c1 5e 5e 05 04 e8 2b 44 c1 5e 5e 06 03 e8 23 44 c1 5e 5e 07 02 e8 1b 44 c1 5e 5e 08 01 e8 13 44 c1 5e 5e 09 00 58 53 ad c8 f7 7f 00 00 e8 03 44 c1 5e 5e 00 03 e8 fb 43 c1 5e 5e 03 02 e8 f3 43 c1 5e 5e 06 01 e8 eb 43 c1 5e 5e 09 00 38 56 ad c8 f7 7f 00 00 e8 db 43 c1 5e 5e 00 00 08 57 ad c8 f7 7f 00 00 e8 cb 43 c1 5e 5e 00 09 e8 c3 43 c1 5e 5e 01 08 e8 bb 43 c1 5e 5e 02 07 e8 b3 43 c1 5e 5e 03 06 e8 ab 43 c1 5e 5e 04 05 e8 a3 43 c1 5e 5e 05 04 e8 9b 43 c1 5e 5e 06 03 e8 93 43 c1 5e 5e 07 02 e8 8b 43 c1 5e 5e 08 01 e8 83 43 c1 5e 5e 09 00 98 57 ad c8 f7 7f 00 00 e8 73 43 c1 5e 5e 00 00 48 5b ad c8 f7 7f 00 00 e8 63 43 c1 5e 5e 00 00 88 5f ad c8 f7 7f 00 00 70 5d ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 20 45 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 c9 5a c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 8a fc ff ff 48 8b cb e8 72 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
74        | 7ff7c8650e00h   | 1411    | hex://logix/LogicEngine?satisfied#satisfied_g[64u](64u,64u)                                                   | bit satisfied<ulong>(ComparisonExpr<ulong> expr, ulong a, ulong b)                                            | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 20 0f a8 c7 f7 7f 00 00 ba 02 00 00 00 e8 bc 5f c1 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 d7 fb ff ff 48 8b ce e8 07 fc ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 98 57 ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 b8 6f 15 c8 f7 7f 00 00 ba 02 00 00 00 e8 4c 5f c1 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 ef fb ff ff 48 8b ce e8 ef bc ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 53 47 c1 5e 5e 00 0c e8 4b 47 c1 5e 5e 01 0b e8 43 47 c1 5e 5e 02 0a e8 3b 47 c1 5e 5e 03 09 e8 33 47 c1 5e 5e 04 08 e8 2b 47 c1 5e 5e 05 07 e8 23 47 c1 5e 5e 06 06 e8 1b 47 c1 5e 5e 07 05 e8 13 47 c1 5e 5e 08 04 e8 0b 47 c1 5e 5e 09 03 e8 03 47 c1 5e 5e 0a 02 e8 fb 46 c1 5e 5e 0b 01 e8 f3 46 c1 5e 5e 0c 00 28 3d ad c8 f7 7f 00 00 e8 e3 46 c1 5e 5e 00 03 e8 db 46 c1 5e 5e 01 02 e8 d3 46 c1 5e 5e 02 01 e8 cb 46 c1 5e 5e 03 00 28 41 ad c8 f7 7f 00 00 e8 bb 46 c1 5e 5e 00 00 98 42 ad c8 f7 7f 00 00 e8 ab 46 c1 5e 5e 00 09 e8 a3 46 c1 5e 5e 01 08 e8 9b 46 c1 5e 5e 02 07 e8 93 46 c1 5e 5e 03 06 e8 8b 46 c1 5e 5e 04 05 e8 83 46 c1 5e 5e 05 04 e8 7b 46 c1 5e 5e 06 03 e8 73 46 c1 5e 5e 07 02 e8 6b 46 c1 5e 5e 08 01 e8 63 46 c1 5e 5e 09 00 28 43 ad c8 f7 7f 00 00 e8 53 46 c1 5e 5e 00 03 e8 4b 46 c1 5e 5e 03 02 e8 43 46 c1 5e 5e 06 01 e8 3b 46 c1 5e 5e 09 00 08 46 ad c8 f7 7f 00 00 e8 2b 46 c1 5e 5e 00 00 d8 46 ad c8 f7 7f 00 00 e8 1b 46 c1 5e 5e 00 0a e8 13 46 c1 5e 5e 01 09 e8 0b 46 c1 5e 5e 02 08 e8 03 46 c1 5e 5e 03 07 e8 fb 45 c1 5e 5e 04 06 e8 f3 45 c1 5e 5e 05 05 e8 eb 45 c1 5e 5e 06 04 e8 e3 45 c1 5e 5e 07 03 e8 db 45 c1 5e 5e 08 02 e8 d3 45 c1 5e 5e 09 01 e8 cb 45 c1 5e 5e 0a 00 38 47 ad c8 f7 7f 00 00 e8 bb 45 c1 5e 5e 00 00 b8 48 ad c8 f7 7f 00 00 e8 ab 45 c1 5e 5e 00 00 88 49 ad c8 f7 7f 00 00 e8 9b 45 c1 5e 5e 00 00 e8 49 ad c8 f7 7f 00 00 e8 8b 45 c1 5e 5e 00 00 48 4a ad c8 f7 7f 00 00 e8 7b 45 c1 5e 5e 00 09 e8 73 45 c1 5e 5e 01 08 e8 6b 45 c1 5e 5e 02 07 e8 63 45 c1 5e 5e 03 06 e8 5b 45 c1 5e 5e 04 05 e8 53 45 c1 5e 5e 05 04 e8 4b 45 c1 5e 5e 06 03 e8 43 45 c1 5e 5e 07 02 e8 3b 45 c1 5e 5e 08 01 e8 33 45 c1 5e 5e 09 00 d8 4a ad c8 f7 7f 00 00 e8 23 45 c1 5e 5e 00 03 e8 1b 45 c1 5e 5e 03 02 e8 13 45 c1 5e 5e 06 01 e8 0b 45 c1 5e 5e 09 00 b8 4d ad c8 f7 7f 00 00 e8 fb 44 c1 5e 5e 00 00 88 4e ad c8 f7 7f 00 00 e8 eb 44 c1 5e 5e 00 09 e8 e3 44 c1 5e 5e 01 08 e8 db 44 c1 5e 5e 02 07 e8 d3 44 c1 5e 5e 03 06 e8 cb 44 c1 5e 5e 04 05 e8 c3 44 c1 5e 5e 05 04 e8 bb 44 c1 5e 5e 06 03 e8 b3 44 c1 5e 5e 07 02 e8 ab 44 c1 5e 5e 08 01 e8 a3 44 c1 5e 5e 09 00 18 4f ad c8 f7 7f 00 00 e8 93 44 c1 5e 5e 00 03 e8 8b 44 c1 5e 5e 03 02 e8 83 44 c1 5e 5e 06 01 e8 7b 44 c1 5e 5e 09 00 f8 51 ad c8 f7 7f 00 00 e8 6b 44 c1 5e 5e 00 00 c8 52 ad c8 f7 7f 00 00 e8 5b 44 c1 5e 5e 00 09 e8 53 44 c1 5e 5e 01 08 e8 4b 44 c1 5e 5e 02 07 e8 43 44 c1 5e 5e 03 06 e8 3b 44 c1 5e 5e 04 05 e8 33 44 c1 5e 5e 05 04 e8 2b 44 c1 5e 5e 06 03 e8 23 44 c1 5e 5e 07 02 e8 1b 44 c1 5e 5e 08 01 e8 13 44 c1 5e 5e 09 00 58 53 ad c8 f7 7f 00 00 e8 03 44 c1 5e 5e 00 03 e8 fb 43 c1 5e 5e 03 02 e8 f3 43 c1 5e 5e 06 01 e8 eb 43 c1 5e 5e 09 00 38 56 ad c8 f7 7f 00 00 e8 db 43 c1 5e 5e 00 00 08 57 ad c8 f7 7f 00 00 e8 cb 43 c1 5e 5e 00 09 e8 c3 43 c1 5e 5e 01 08 e8 bb 43 c1 5e 5e 02 07 e8 b3 43 c1 5e 5e 03 06 e8 ab 43 c1 5e 5e 04 05 e8 a3 43 c1 5e 5e 05 04 e8 9b 43 c1 5e 5e 06 03 e8 93 43 c1 5e 5e 07 02 e8 8b 43 c1 5e 5e 08 01 e8 83 43 c1 5e 5e 09 00 98 57 ad c8 f7 7f 00 00 e8 73 43 c1 5e 5e 00 00 48 5b ad c8 f7 7f 00 00 e8 63 43 c1 5e 5e 00 00 88 5f ad c8 f7 7f 00 00 70 5d ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 20 45 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 c9 5a c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 8a fc ff ff 48 8b cb e8 72 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
75        | 7ff7c8650e70h   | 1299    | hex://logix/LogicEngine?satisfied#satisfied_g[64i](64i,64i)                                                   | bit satisfied<long>(ComparisonExpr<long> expr, long a, long b)                                                | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 b8 6f 15 c8 f7 7f 00 00 ba 02 00 00 00 e8 4c 5f c1 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 ef fb ff ff 48 8b ce e8 ef bc ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 53 47 c1 5e 5e 00 0c e8 4b 47 c1 5e 5e 01 0b e8 43 47 c1 5e 5e 02 0a e8 3b 47 c1 5e 5e 03 09 e8 33 47 c1 5e 5e 04 08 e8 2b 47 c1 5e 5e 05 07 e8 23 47 c1 5e 5e 06 06 e8 1b 47 c1 5e 5e 07 05 e8 13 47 c1 5e 5e 08 04 e8 0b 47 c1 5e 5e 09 03 e8 03 47 c1 5e 5e 0a 02 e8 fb 46 c1 5e 5e 0b 01 e8 f3 46 c1 5e 5e 0c 00 28 3d ad c8 f7 7f 00 00 e8 e3 46 c1 5e 5e 00 03 e8 db 46 c1 5e 5e 01 02 e8 d3 46 c1 5e 5e 02 01 e8 cb 46 c1 5e 5e 03 00 28 41 ad c8 f7 7f 00 00 e8 bb 46 c1 5e 5e 00 00 98 42 ad c8 f7 7f 00 00 e8 ab 46 c1 5e 5e 00 09 e8 a3 46 c1 5e 5e 01 08 e8 9b 46 c1 5e 5e 02 07 e8 93 46 c1 5e 5e 03 06 e8 8b 46 c1 5e 5e 04 05 e8 83 46 c1 5e 5e 05 04 e8 7b 46 c1 5e 5e 06 03 e8 73 46 c1 5e 5e 07 02 e8 6b 46 c1 5e 5e 08 01 e8 63 46 c1 5e 5e 09 00 28 43 ad c8 f7 7f 00 00 e8 53 46 c1 5e 5e 00 03 e8 4b 46 c1 5e 5e 03 02 e8 43 46 c1 5e 5e 06 01 e8 3b 46 c1 5e 5e 09 00 08 46 ad c8 f7 7f 00 00 e8 2b 46 c1 5e 5e 00 00 d8 46 ad c8 f7 7f 00 00 e8 1b 46 c1 5e 5e 00 0a e8 13 46 c1 5e 5e 01 09 e8 0b 46 c1 5e 5e 02 08 e8 03 46 c1 5e 5e 03 07 e8 fb 45 c1 5e 5e 04 06 e8 f3 45 c1 5e 5e 05 05 e8 eb 45 c1 5e 5e 06 04 e8 e3 45 c1 5e 5e 07 03 e8 db 45 c1 5e 5e 08 02 e8 d3 45 c1 5e 5e 09 01 e8 cb 45 c1 5e 5e 0a 00 38 47 ad c8 f7 7f 00 00 e8 bb 45 c1 5e 5e 00 00 b8 48 ad c8 f7 7f 00 00 e8 ab 45 c1 5e 5e 00 00 88 49 ad c8 f7 7f 00 00 e8 9b 45 c1 5e 5e 00 00 e8 49 ad c8 f7 7f 00 00 e8 8b 45 c1 5e 5e 00 00 48 4a ad c8 f7 7f 00 00 e8 7b 45 c1 5e 5e 00 09 e8 73 45 c1 5e 5e 01 08 e8 6b 45 c1 5e 5e 02 07 e8 63 45 c1 5e 5e 03 06 e8 5b 45 c1 5e 5e 04 05 e8 53 45 c1 5e 5e 05 04 e8 4b 45 c1 5e 5e 06 03 e8 43 45 c1 5e 5e 07 02 e8 3b 45 c1 5e 5e 08 01 e8 33 45 c1 5e 5e 09 00 d8 4a ad c8 f7 7f 00 00 e8 23 45 c1 5e 5e 00 03 e8 1b 45 c1 5e 5e 03 02 e8 13 45 c1 5e 5e 06 01 e8 0b 45 c1 5e 5e 09 00 b8 4d ad c8 f7 7f 00 00 e8 fb 44 c1 5e 5e 00 00 88 4e ad c8 f7 7f 00 00 e8 eb 44 c1 5e 5e 00 09 e8 e3 44 c1 5e 5e 01 08 e8 db 44 c1 5e 5e 02 07 e8 d3 44 c1 5e 5e 03 06 e8 cb 44 c1 5e 5e 04 05 e8 c3 44 c1 5e 5e 05 04 e8 bb 44 c1 5e 5e 06 03 e8 b3 44 c1 5e 5e 07 02 e8 ab 44 c1 5e 5e 08 01 e8 a3 44 c1 5e 5e 09 00 18 4f ad c8 f7 7f 00 00 e8 93 44 c1 5e 5e 00 03 e8 8b 44 c1 5e 5e 03 02 e8 83 44 c1 5e 5e 06 01 e8 7b 44 c1 5e 5e 09 00 f8 51 ad c8 f7 7f 00 00 e8 6b 44 c1 5e 5e 00 00 c8 52 ad c8 f7 7f 00 00 e8 5b 44 c1 5e 5e 00 09 e8 53 44 c1 5e 5e 01 08 e8 4b 44 c1 5e 5e 02 07 e8 43 44 c1 5e 5e 03 06 e8 3b 44 c1 5e 5e 04 05 e8 33 44 c1 5e 5e 05 04 e8 2b 44 c1 5e 5e 06 03 e8 23 44 c1 5e 5e 07 02 e8 1b 44 c1 5e 5e 08 01 e8 13 44 c1 5e 5e 09 00 58 53 ad c8 f7 7f 00 00 e8 03 44 c1 5e 5e 00 03 e8 fb 43 c1 5e 5e 03 02 e8 f3 43 c1 5e 5e 06 01 e8 eb 43 c1 5e 5e 09 00 38 56 ad c8 f7 7f 00 00 e8 db 43 c1 5e 5e 00 00 08 57 ad c8 f7 7f 00 00 e8 cb 43 c1 5e 5e 00 09 e8 c3 43 c1 5e 5e 01 08 e8 bb 43 c1 5e 5e 02 07 e8 b3 43 c1 5e 5e 03 06 e8 ab 43 c1 5e 5e 04 05 e8 a3 43 c1 5e 5e 05 04 e8 9b 43 c1 5e 5e 06 03 e8 93 43 c1 5e 5e 07 02 e8 8b 43 c1 5e 5e 08 01 e8 83 43 c1 5e 5e 09 00 98 57 ad c8 f7 7f 00 00 e8 73 43 c1 5e 5e 00 00 48 5b ad c8 f7 7f 00 00 e8 63 43 c1 5e 5e 00 00 88 5f ad c8 f7 7f 00 00 70 5d ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 20 45 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 c9 5a c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 8a fc ff ff 48 8b cb e8 72 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
76        | 7ff7c86512f0h   | 147     | hex://logix/LogicEngine?satisfied#satisfied_g[8u](v128x8u,v128x8u)                                            | bit satisfied<byte>(ComparisonExpr<Vector128<byte>> expr, Vector128<byte> a, Vector128<byte> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 20 45 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 c9 5a c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 8a fc ff ff 48 8b cb e8 72 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
77        | 7ff7c8651390h   | 147     | hex://logix/LogicEngine?satisfied#satisfied_g[8i](v128x8i,v128x8i)                                            | bit satisfied<sbyte>(ComparisonExpr<Vector128<sbyte>> expr, Vector128<sbyte> a, Vector128<sbyte> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 d0 4c ad c8 f7 7f 00 00 ba 02 00 00 00 e8 29 5a c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 1a fd ff ff 48 8b cb e8 b2 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
78        | 7ff7c8651430h   | 147     | hex://logix/LogicEngine?satisfied#satisfied_g[16u](v128x16u,v128x16u)                                         | bit satisfied<ushort>(ComparisonExpr<Vector128<ushort>> expr, Vector128<ushort> a, Vector128<ushort> b)       | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 10 51 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 89 59 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 0a fd ff ff 48 8b cb e8 f2 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
79        | 7ff7c86514d0h   | 1331    | hex://logix/LogicEngine?satisfied#satisfied_g[16i](v128x16i,v128x16i)                                         | bit satisfied<short>(ComparisonExpr<Vector128<short>> expr, Vector128<short> a, Vector128<short> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 50 55 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 e9 58 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 fa fc ff ff 48 8b cb e8 42 c6 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 d3 40 c1 5e 5e 00 03 e8 cb 40 c1 5e 5e 03 02 e8 c3 40 c1 5e 5e 06 01 e8 bb 40 c1 5e 5e 09 00 78 5a ad c8 f7 7f 00 00 e8 ab 40 c1 5e 5e 00 09 e8 a3 40 c1 5e 5e 01 08 e8 9b 40 c1 5e 5e 02 07 e8 93 40 c1 5e 5e 03 06 e8 8b 40 c1 5e 5e 04 05 e8 83 40 c1 5e 5e 05 04 e8 7b 40 c1 5e 5e 06 03 e8 73 40 c1 5e 5e 07 02 e8 6b 40 c1 5e 5e 08 01 e8 63 40 c1 5e 5e 09 00 d8 5b ad c8 f7 7f 00 00 e8 53 40 c1 5e 5e 00 03 e8 4b 40 c1 5e 5e 03 02 e8 43 40 c1 5e 5e 06 01 e8 3b 40 c1 5e 5e 09 00 b8 5e ad c8 f7 7f 00 00 e8 2b 40 c1 5e 5e 00 09 e8 23 40 c1 5e 5e 01 08 e8 1b 40 c1 5e 5e 02 07 e8 13 40 c1 5e 5e 03 06 e8 0b 40 c1 5e 5e 04 05 e8 03 40 c1 5e 5e 05 04 e8 fb 3f c1 5e 5e 06 03 e8 f3 3f c1 5e 5e 07 02 e8 eb 3f c1 5e 5e 08 01 e8 e3 3f c1 5e 5e 09 00 18 60 ad c8 f7 7f 00 00 e8 d3 3f c1 5e 5e 00 03 e8 cb 3f c1 5e 5e 01 02 e8 c3 3f c1 5e 5e 02 01 e8 bb 3f c1 5e 5e 03 00 b0 61 ad c8 f7 7f 00 00 e8 ab 3f c1 5e 5e 00 03 e8 a3 3f c1 5e 5e 03 02 e8 9b 3f c1 5e 5e 06 01 e8 93 3f c1 5e 5e 09 00 e0 63 ad c8 f7 7f 00 00 e8 83 3f c1 5e 5e 00 00 b0 64 ad c8 f7 7f 00 00 e8 73 3f c1 5e 5e 00 00 10 65 ad c8 f7 7f 00 00 e8 63 3f c1 5e 5e 00 00 70 65 ad c8 f7 7f 00 00 e8 53 3f c1 5e 5e 00 09 e8 4b 3f c1 5e 5e 01 08 e8 43 3f c1 5e 5e 02 07 e8 3b 3f c1 5e 5e 03 06 e8 33 3f c1 5e 5e 04 05 e8 2b 3f c1 5e 5e 05 04 e8 23 3f c1 5e 5e 06 03 e8 1b 3f c1 5e 5e 07 02 e8 13 3f c1 5e 5e 08 01 e8 0b 3f c1 5e 5e 09 00 00 66 ad c8 f7 7f 00 00 e8 fb 3e c1 5e 5e 00 03 e8 f3 3e c1 5e 5e 03 02 e8 eb 3e c1 5e 5e 06 01 e8 e3 3e c1 5e 5e 09 00 e0 68 ad c8 f7 7f 00 00 e8 d3 3e c1 5e 5e 00 0c e8 cb 3e c1 5e 5e 01 0b e8 c3 3e c1 5e 5e 02 0a e8 bb 3e c1 5e 5e 03 09 e8 b3 3e c1 5e 5e 04 08 e8 ab 3e c1 5e 5e 05 07 e8 a3 3e c1 5e 5e 06 06 e8 9b 3e c1 5e 5e 07 05 e8 93 3e c1 5e 5e 08 04 e8 8b 3e c1 5e 5e 09 03 e8 83 3e c1 5e 5e 0a 02 e8 7b 3e c1 5e 5e 0b 01 e8 73 3e c1 5e 5e 0c 00 e0 69 ad c8 f7 7f 00 00 e8 63 3e c1 5e 5e 00 00 68 6b ad c8 f7 7f 00 00 e8 53 3e c1 5e 5e 00 09 e8 4b 3e c1 5e 5e 01 08 e8 43 3e c1 5e 5e 02 07 e8 3b 3e c1 5e 5e 03 06 e8 33 3e c1 5e 5e 04 05 e8 2b 3e c1 5e 5e 05 04 e8 23 3e c1 5e 5e 06 03 e8 1b 3e c1 5e 5e 07 02 e8 13 3e c1 5e 5e 08 01 e8 0b 3e c1 5e 5e 09 00 48 6c ad c8 f7 7f 00 00 e8 fb 3d c1 5e 5e 00 03 e8 f3 3d c1 5e 5e 01 02 e8 eb 3d c1 5e 5e 02 01 e8 e3 3d c1 5e 5e 03 00 e0 6d ad c8 f7 7f 00 00 e8 d3 3d c1 5e 5e 00 00 50 6f ad c8 f7 7f 00 00 e8 c3 3d c1 5e 5e 00 09 e8 bb 3d c1 5e 5e 01 08 e8 b3 3d c1 5e 5e 02 07 e8 ab 3d c1 5e 5e 03 06 e8 a3 3d c1 5e 5e 04 05 e8 9b 3d c1 5e 5e 05 04 e8 93 3d c1 5e 5e 06 03 e8 8b 3d c1 5e 5e 07 02 e8 83 3d c1 5e 5e 08 01 e8 7b 3d c1 5e 5e 09 00 e0 6f ad c8 f7 7f 00 00 e8 6b 3d c1 5e 5e 00 03 e8 63 3d c1 5e 5e 03 02 e8 5b 3d c1 5e 5e 06 01 e8 53 3d c1 5e 5e 09 00 c0 72 ad c8 f7 7f 00 00 e8 43 3d c1 5e 5e 00 00 90 73 ad c8 f7 7f 00 00 e8 33 3d c1 5e 5e 00 0a e8 2b 3d c1 5e 5e 01 09 e8 23 3d c1 5e 5e 02 08 e8 1b 3d c1 5e 5e 03 07 e8 13 3d c1 5e 5e 04 06 e8 0b 3d c1 5e 5e 05 05 e8 03 3d c1 5e 5e 06 04 e8 fb 3c c1 5e 5e 07 03 e8 f3 3c c1 5e 5e 08 02 e8 eb 3c c1 5e 5e 09 01 e8 e3 3c c1 5e 5e 0a 00 f0 73 ad c8 f7 7f 00 00 d0 62 ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 90 59 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 49 54 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 ea f8 ff ff 48 8b cb e8 82 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
80        | 7ff7c8651970h   | 147     | hex://logix/LogicEngine?satisfied#satisfied_g[32u](v128x32u,v128x32u)                                         | bit satisfied<uint>(ComparisonExpr<Vector128<uint>> expr, Vector128<uint> a, Vector128<uint> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 90 59 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 49 54 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 ea f8 ff ff 48 8b cb e8 82 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
81        | 7ff7c8651a10h   | 147     | hex://logix/LogicEngine?satisfied#satisfied_g[32i](v128x32i,v128x32i)                                         | bit satisfied<int>(ComparisonExpr<Vector128<int>> expr, Vector128<int> a, Vector128<int> b)                   | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 d0 5d ad c8 f7 7f 00 00 ba 02 00 00 00 e8 a9 53 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 6a fb ff ff 48 8b cb e8 c2 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
82        | 7ff7c8651ab0h   | 147     | hex://logix/LogicEngine?satisfied#satisfied_g[64u](v128x64u,v128x64u)                                         | bit satisfied<ulong>(ComparisonExpr<Vector128<ulong>> expr, Vector128<ulong> a, Vector128<ulong> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 f8 62 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 09 53 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 4a fb ff ff 48 8b cb e8 ca fb ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
83        | 7ff7c8651b50h   | 1176    | hex://logix/LogicEngine?satisfied#satisfied_g[64i](v128x64i,v128x64i)                                         | bit satisfied<long>(ComparisonExpr<Vector128<long>> expr, Vector128<long> a, Vector128<long> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 f8 67 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 69 52 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 82 fb ff ff 48 8b cb e8 62 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 53 3a c1 5e 5e 00 00 70 75 ad c8 f7 7f 00 00 e8 43 3a c1 5e 5e 00 00 40 76 ad c8 f7 7f 00 00 e8 33 3a c1 5e 5e 00 00 a0 76 ad c8 f7 7f 00 00 e8 23 3a c1 5e 5e 00 00 00 77 ad c8 f7 7f 00 00 e8 13 3a c1 5e 5e 00 09 e8 0b 3a c1 5e 5e 01 08 e8 03 3a c1 5e 5e 02 07 e8 fb 39 c1 5e 5e 03 06 e8 f3 39 c1 5e 5e 04 05 e8 eb 39 c1 5e 5e 05 04 e8 e3 39 c1 5e 5e 06 03 e8 db 39 c1 5e 5e 07 02 e8 d3 39 c1 5e 5e 08 01 e8 cb 39 c1 5e 5e 09 00 90 77 ad c8 f7 7f 00 00 e8 bb 39 c1 5e 5e 00 03 e8 b3 39 c1 5e 5e 03 02 e8 ab 39 c1 5e 5e 06 01 e8 a3 39 c1 5e 5e 09 00 70 7a ad c8 f7 7f 00 00 e8 93 39 c1 5e 5e 00 00 40 7b ad c8 f7 7f 00 00 e8 83 39 c1 5e 5e 00 09 e8 7b 39 c1 5e 5e 01 08 e8 73 39 c1 5e 5e 02 07 e8 6b 39 c1 5e 5e 03 06 e8 63 39 c1 5e 5e 04 05 e8 5b 39 c1 5e 5e 05 04 e8 53 39 c1 5e 5e 06 03 e8 4b 39 c1 5e 5e 07 02 e8 43 39 c1 5e 5e 08 01 e8 3b 39 c1 5e 5e 09 00 d0 7b ad c8 f7 7f 00 00 e8 2b 39 c1 5e 5e 00 03 e8 23 39 c1 5e 5e 03 02 e8 1b 39 c1 5e 5e 06 01 e8 13 39 c1 5e 5e 09 00 b0 7e ad c8 f7 7f 00 00 e8 03 39 c1 5e 5e 00 00 80 7f ad c8 f7 7f 00 00 e8 f3 38 c1 5e 5e 00 09 e8 eb 38 c1 5e 5e 01 08 e8 e3 38 c1 5e 5e 02 07 e8 db 38 c1 5e 5e 03 06 e8 d3 38 c1 5e 5e 04 05 e8 cb 38 c1 5e 5e 05 04 e8 c3 38 c1 5e 5e 06 03 e8 bb 38 c1 5e 5e 07 02 e8 b3 38 c1 5e 5e 08 01 e8 ab 38 c1 5e 5e 09 00 10 80 ad c8 f7 7f 00 00 e8 9b 38 c1 5e 5e 00 03 e8 93 38 c1 5e 5e 03 02 e8 8b 38 c1 5e 5e 06 01 e8 83 38 c1 5e 5e 09 00 f0 82 ad c8 f7 7f 00 00 e8 73 38 c1 5e 5e 00 00 c0 83 ad c8 f7 7f 00 00 e8 63 38 c1 5e 5e 00 09 e8 5b 38 c1 5e 5e 01 08 e8 53 38 c1 5e 5e 02 07 e8 4b 38 c1 5e 5e 03 06 e8 43 38 c1 5e 5e 04 05 e8 3b 38 c1 5e 5e 05 04 e8 33 38 c1 5e 5e 06 03 e8 2b 38 c1 5e 5e 07 02 e8 23 38 c1 5e 5e 08 01 e8 1b 38 c1 5e 5e 09 00 50 84 ad c8 f7 7f 00 00 e8 0b 38 c1 5e 5e 00 03 e8 03 38 c1 5e 5e 03 02 e8 fb 37 c1 5e 5e 06 01 e8 f3 37 c1 5e 5e 09 00 30 87 ad c8 f7 7f 00 00 e8 e3 37 c1 5e 5e 00 00 00 88 ad c8 f7 7f 00 00 e8 d3 37 c1 5e 5e 00 09 e8 cb 37 c1 5e 5e 01 08 e8 c3 37 c1 5e 5e 02 07 e8 bb 37 c1 5e 5e 03 06 e8 b3 37 c1 5e 5e 04 05 e8 ab 37 c1 5e 5e 05 04 e8 a3 37 c1 5e 5e 06 03 e8 9b 37 c1 5e 5e 07 02 e8 93 37 c1 5e 5e 08 01 e8 8b 37 c1 5e 5e 09 00 90 88 ad c8 f7 7f 00 00 e8 7b 37 c1 5e 5e 00 03 e8 73 37 c1 5e 5e 03 02 e8 6b 37 c1 5e 5e 06 01 e8 63 37 c1 5e 5e 09 00 70 8b ad c8 f7 7f 00 00 e8 53 37 c1 5e 5e 00 00 40 8c ad c8 f7 7f 00 00 e8 43 37 c1 5e 5e 00 09 e8 3b 37 c1 5e 5e 01 08 e8 33 37 c1 5e 5e 02 07 e8 2b 37 c1 5e 5e 03 06 e8 23 37 c1 5e 5e 04 05 e8 1b 37 c1 5e 5e 05 04 e8 13 37 c1 5e 5e 06 03 e8 0b 37 c1 5e 5e 07 02 e8 03 37 c1 5e 5e 08 01 e8 fb 36 c1 5e 5e 09 00 d0 8c ad c8 f7 7f 00 00 e8 eb 36 c1 5e 5e 00 03 e8 e3 36 c1 5e 5e 01 02 e8 db 36 c1 5e 5e 02 01 e8 d3 36 c1 5e 5e 03 00 68 8e ad c8 f7 7f 00 00 e8 c3 36 c1 5e 5e 00 03 e8 bb 36 c1 5e 5e 03 02 e8 b3 36 c1 5e 5e 06 01 e8 ab 36 c1 5e 5e 09 00 98 90 ad c8 f7 7f 00 00 e8 9b 36 c1 5e 5e 00 00 68 91 ad c8 f7 7f 00 00 e8 8b 36 c1 5e 5e 00 00 c8 91 ad c8 f7 7f 00 00 e8 7b 36 c1 5e 5e 00 00 28 92 ad c8 f7 7f 00 00 e8 6b 36 c1 5e 5e 00 00 80 98 ad c8 f7 7f 00 00 00 00 00 00 00 00 00 00
84        | 7ff7c8651ff0h   | 151     | hex://logix/LogicEngine?satisfied#satisfied_g[8u](v256x8u,v256x8u)                                            | bit satisfied<byte>(ComparisonExpr<Vector256<byte>> expr, Vector256<byte> a, Vector256<byte> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 d8 71 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 c9 4d c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 72 f8 ff ff 48 8b cb e8 b2 c2 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
85        | 7ff7c8652090h   | 151     | hex://logix/LogicEngine?satisfied#satisfied_g[8i](v256x8i,v256x8i)                                            | bit satisfied<sbyte>(ComparisonExpr<Vector256<sbyte>> expr, Vector256<sbyte> a, Vector256<sbyte> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 88 79 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 29 4d c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 82 fb ff ff 48 8b cb e8 22 c3 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
86        | 7ff7c8652130h   | 151     | hex://logix/LogicEngine?satisfied#satisfied_g[16u](v256x16u,v256x16u)                                         | bit satisfied<ushort>(ComparisonExpr<Vector256<ushort>> expr, Vector256<ushort> a, Vector256<ushort> b)       | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 c8 7d ad c8 f7 7f 00 00 ba 02 00 00 00 e8 89 4c c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 72 fb ff ff 48 8b cb e8 92 c3 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
87        | 7ff7c86521d0h   | 151     | hex://logix/LogicEngine?satisfied#satisfied_g[16i](v256x16i,v256x16i)                                         | bit satisfied<short>(ComparisonExpr<Vector256<short>> expr, Vector256<short> a, Vector256<short> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 08 82 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 e9 4b c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 62 fb ff ff 48 8b cb e8 02 c4 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
88        | 7ff7c8652270h   | 151     | hex://logix/LogicEngine?satisfied#satisfied_g[32u](v256x32u,v256x32u)                                         | bit satisfied<uint>(ComparisonExpr<Vector256<uint>> expr, Vector256<uint> a, Vector256<uint> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 48 86 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 49 4b c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 52 fb ff ff 48 8b cb e8 82 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
89        | 7ff7c8652310h   | 151     | hex://logix/LogicEngine?satisfied#satisfied_g[32i](v256x32i,v256x32i)                                         | bit satisfied<int>(ComparisonExpr<Vector256<int>> expr, Vector256<int> a, Vector256<int> b)                   | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 88 8a ad c8 f7 7f 00 00 ba 02 00 00 00 e8 a9 4a c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 42 fb ff ff 48 8b cb e8 f2 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
90        | 7ff7c86523b0h   | 304     | hex://logix/LogicEngine?satisfied#satisfied_g[64u](v256x64u,v256x64u)                                         | bit satisfied<ulong>(ComparisonExpr<Vector256<ulong>> expr, Vector256<ulong> a, Vector256<ulong> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 b0 8f ad c8 f7 7f 00 00 ba 02 00 00 00 e8 09 4a c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 32 fb ff ff 48 8b cb e8 b2 fb ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 f3 31 c1 5e 5e 00 09 e8 eb 31 c1 5e 5e 01 08 e8 e3 31 c1 5e 5e 02 07 e8 db 31 c1 5e 5e 03 06 e8 d3 31 c1 5e 5e 04 05 e8 cb 31 c1 5e 5e 05 04 e8 c3 31 c1 5e 5e 06 03 e8 bb 31 c1 5e 5e 07 02 e8 b3 31 c1 5e 5e 08 01 e8 ab 31 c1 5e 5e 09 00 b8 92 ad c8 f7 7f 00 00 e8 9b 31 c1 5e 5e 00 03 e8 93 31 c1 5e 5e 03 02 e8 8b 31 c1 5e 5e 06 01 e8 83 31 c1 5e 5e 09 00 98 95 ad c8 f7 7f 00 00 e8 73 31 c1 5e 5e 00 00 f8 98 ad c8 f7 7f 00 00 00 00 00 00 00 00 00 00
91        | 7ff7c8652850h   | 151     | hex://logix/LogicEngine?satisfied#satisfied_g[64i](v256x64i,v256x64i)                                         | bit satisfied<long>(ComparisonExpr<Vector256<long>> expr, Vector256<long> a, Vector256<long> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 b0 94 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 69 45 c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 c2 c4 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
92        | 7ff7c86528f0h   | 35      | hex://logix/LogicEngine?eval#eval_()                                                                          | bit eval(ILogicExpr expr)                                                                                     | 0f 1f 44 00 00 48 b8 50 87 e3 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
93        | 7ff7c8652920h   | 607     | hex://logix/LogicEngine?satisfied#satisfied_(1u,1u)                                                           | bit satisfied(ComparisonExpr expr, bit a, bit b)                                                              | 57 56 48 83 ec 28 48 8b f1 41 8b f8 8b 0e 48 8b 4e 18 83 79 08 00 76 48 48 8b 49 10 49 bb 60 0c 61 c7 f7 7f 00 00 39 09 ff 15 12 e3 fb fe 48 8b 4e 18 83 79 08 01 76 28 48 8b 49 18 8b d7 49 bb 68 0c 61 c7 f7 7f 00 00 39 09 ff 15 f8 e2 fb fe 48 8b ce e8 d8 5d 7e ff 90 48 83 c4 28 5e 5f c3 e8 4b d4 d3 5e cc 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 50 7a ac c8 f7 7f 00 00 55 41 57 41 56 57 56 53 48 83 ec 48 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 4e 10 48 8b 5f 10 41 be b6 00 00 00 41 bf 01 00 00 00 8b 49 08 3b 4b 08 0f 85 cb 00 00 00 e8 b8 65 7e ff 48 8b c8 49 bb 70 0c 61 c7 f7 7f 00 00 39 09 ff 15 7b e2 fb fe 48 89 45 c8 48 8b 4d c8 49 bb 78 0c 61 c7 f7 7f 00 00 39 09 ff 15 69 e2 fb fe 85 c0 74 51 48 8b 4d c8 49 bb 80 0c 61 c7 f7 7f 00 00 39 09 ff 15 57 e2 fb fe 48 8b d0 48 8b ce e8 54 73 7e ff 48 8b ce e8 14 5d 7e ff 8b d8 48 8b cf e8 0a 5d 7e ff 3b d8 75 32 48 8b 4d c8 49 bb 78 0c 61 c7 f7 7f 00 00 39 09 ff 15 18 e2 fb fe 85 c0 75 af 48 8b 4d c8 49 bb 88 0c 61 c7 f7 7f 00 00 39 09 ff 15 0e e2 fb fe eb 18 48 8b cc e8 7e 00 00 00 90 33 c0 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 8b f1 8b 7b 08 b9 19 02 00 00 48 ba f8 3e ac c7 f7 7f 00 00 e8 f1 da d3 5e 48 8b d8 b9 25 02 00 00 48 ba f8 3e ac c7 f7 7f 00 00 e8 da da d3 5e 4c 8b c8 4c 8d 45 d0 45 88 38 45 89 70 04 4c 8b c3 8b ce 8b d7 48 8b 45 d0 48 89 44 24 20 e8 f7 23 0f ff 48 8b c8 e8 ff 8d b8 5e cc 55 41 57 41 56 57 56 53 48 83 ec 38 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c8 00 74 16 48 8b 4d c8 49 bb 88 0c 61 c7 f7 7f 00 00 39 09 ff 15 50 e1 fb fe 90 48 83 c4 38 5b 5e 5f 41 5e 41 5f 5d c3 00 00 19 0c 07 00 0c 82 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 19 0c 07 00 0c 62 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 00 00 00 00 00 00 00
94        | 7ff7c86529a0h   | 479     | hex://logix/LogicEngine?equal#equal_()                                                                        | bit equal(VariedLogicExpr a, VariedLogicExpr b)                                                               | 55 41 57 41 56 57 56 53 48 83 ec 48 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 4e 10 48 8b 5f 10 41 be b6 00 00 00 41 bf 01 00 00 00 8b 49 08 3b 4b 08 0f 85 cb 00 00 00 e8 b8 65 7e ff 48 8b c8 49 bb 70 0c 61 c7 f7 7f 00 00 39 09 ff 15 7b e2 fb fe 48 89 45 c8 48 8b 4d c8 49 bb 78 0c 61 c7 f7 7f 00 00 39 09 ff 15 69 e2 fb fe 85 c0 74 51 48 8b 4d c8 49 bb 80 0c 61 c7 f7 7f 00 00 39 09 ff 15 57 e2 fb fe 48 8b d0 48 8b ce e8 54 73 7e ff 48 8b ce e8 14 5d 7e ff 8b d8 48 8b cf e8 0a 5d 7e ff 3b d8 75 32 48 8b 4d c8 49 bb 78 0c 61 c7 f7 7f 00 00 39 09 ff 15 18 e2 fb fe 85 c0 75 af 48 8b 4d c8 49 bb 88 0c 61 c7 f7 7f 00 00 39 09 ff 15 0e e2 fb fe eb 18 48 8b cc e8 7e 00 00 00 90 33 c0 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 8b f1 8b 7b 08 b9 19 02 00 00 48 ba f8 3e ac c7 f7 7f 00 00 e8 f1 da d3 5e 48 8b d8 b9 25 02 00 00 48 ba f8 3e ac c7 f7 7f 00 00 e8 da da d3 5e 4c 8b c8 4c 8d 45 d0 45 88 38 45 89 70 04 4c 8b c3 8b ce 8b d7 48 8b 45 d0 48 89 44 24 20 e8 f7 23 0f ff 48 8b c8 e8 ff 8d b8 5e cc 55 41 57 41 56 57 56 53 48 83 ec 38 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c8 00 74 16 48 8b 4d c8 49 bb 88 0c 61 c7 f7 7f 00 00 39 09 ff 15 50 e1 fb fe 90 48 83 c4 38 5b 5e 5f 41 5e 41 5f 5d c3 00 00 19 0c 07 00 0c 82 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 19 0c 07 00 0c 62 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 00 00 00 00 00 00 00
