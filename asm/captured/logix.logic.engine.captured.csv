Sequence  | Address         | Length  | Uri                                                                                                           | OpSig                                                                                                         | Data
0         | 7ff7c8606bc0h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[8u]()                                                         | bit eval<byte>(ILogicExpr<byte> expr)                                                                         | 0f 1f 44 00 00 48 b8 38 0f dd c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
1         | 7ff7c8606bf0h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[8i]()                                                         | bit eval<sbyte>(ILogicExpr<sbyte> expr)                                                                       | 0f 1f 44 00 00 48 b8 38 0f dd c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
2         | 7ff7c8606c20h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[16u]()                                                        | bit eval<ushort>(ILogicExpr<ushort> expr)                                                                     | 0f 1f 44 00 00 48 b8 38 0f dd c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
3         | 7ff7c8606c50h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[16i]()                                                        | bit eval<short>(ILogicExpr<short> expr)                                                                       | 0f 1f 44 00 00 48 b8 38 0f dd c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
4         | 7ff7c8606c80h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[32u]()                                                        | bit eval<uint>(ILogicExpr<uint> expr)                                                                         | 0f 1f 44 00 00 48 b8 38 0f dd c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
5         | 7ff7c8606cb0h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[32i]()                                                        | bit eval<int>(ILogicExpr<int> expr)                                                                           | 0f 1f 44 00 00 48 b8 38 0f dd c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
6         | 7ff7c8606ce0h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[64u]()                                                        | bit eval<ulong>(ILogicExpr<ulong> expr)                                                                       | 0f 1f 44 00 00 48 b8 38 0f dd c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
7         | 7ff7c8606d10h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[64i]()                                                        | bit eval<long>(ILogicExpr<long> expr)                                                                         | 0f 1f 44 00 00 48 b8 38 0f dd c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
8         | 7ff7c8606d40h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[8u]()                                                        | LiteralExpr<byte> eval<byte>(IExpr<byte> expr)                                                                | 0f 1f 44 00 00 48 b8 30 68 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
9         | 7ff7c8606d70h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[8i]()                                                        | LiteralExpr<sbyte> eval<sbyte>(IExpr<sbyte> expr)                                                             | 0f 1f 44 00 00 48 b8 60 68 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
10        | 7ff7c8606da0h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[16u]()                                                       | LiteralExpr<ushort> eval<ushort>(IExpr<ushort> expr)                                                          | 0f 1f 44 00 00 48 b8 80 68 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
11        | 7ff7c8606dd0h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[16i]()                                                       | LiteralExpr<short> eval<short>(IExpr<short> expr)                                                             | 0f 1f 44 00 00 48 b8 a0 68 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
12        | 7ff7c8606e00h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[32u]()                                                       | LiteralExpr<uint> eval<uint>(IExpr<uint> expr)                                                                | 0f 1f 44 00 00 48 b8 c0 68 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
13        | 7ff7c8606e30h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[32i]()                                                       | LiteralExpr<int> eval<int>(IExpr<int> expr)                                                                   | 0f 1f 44 00 00 48 b8 e0 68 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
14        | 7ff7c8606e60h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[64u]()                                                       | LiteralExpr<ulong> eval<ulong>(IExpr<ulong> expr)                                                             | 0f 1f 44 00 00 48 b8 00 69 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
15        | 7ff7c8606e90h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[64i]()                                                       | LiteralExpr<long> eval<long>(IExpr<long> expr)                                                                | 0f 1f 44 00 00 48 b8 20 69 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
16        | 7ff7c8606ec0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[8u]()                                                           | LiteralExpr<byte> eval<byte>(IComparisonExpr<byte> expr)                                                      | 0f 1f 44 00 00 48 b8 b0 40 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
17        | 7ff7c8606ef0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[8i]()                                                           | LiteralExpr<sbyte> eval<sbyte>(IComparisonExpr<sbyte> expr)                                                   | 0f 1f 44 00 00 48 b8 90 41 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
18        | 7ff7c8606f20h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[16u]()                                                          | LiteralExpr<ushort> eval<ushort>(IComparisonExpr<ushort> expr)                                                | 0f 1f 44 00 00 48 b8 40 42 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
19        | 7ff7c8606f50h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[16i]()                                                          | LiteralExpr<short> eval<short>(IComparisonExpr<short> expr)                                                   | 0f 1f 44 00 00 48 b8 f0 42 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
20        | 7ff7c8606f80h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[32u]()                                                          | LiteralExpr<uint> eval<uint>(IComparisonExpr<uint> expr)                                                      | 0f 1f 44 00 00 48 b8 a0 43 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
21        | 7ff7c8606fb0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[32i]()                                                          | LiteralExpr<int> eval<int>(IComparisonExpr<int> expr)                                                         | 0f 1f 44 00 00 48 b8 40 44 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
22        | 7ff7c8606fe0h   | 1107    | hex://logix/logic.engine?eval#eval_cmp_expr_g[64i]()                                                          | LiteralExpr<long> eval<long>(IComparisonExpr<long> expr)                                                      | 0f 1f 44 00 00 48 b8 e0 44 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 33 e6 c5 5e 5e 00 0c e8 2b e6 c5 5e 5e 01 0b e8 23 e6 c5 5e 5e 02 0a e8 1b e6 c5 5e 5e 03 09 e8 13 e6 c5 5e 5e 04 08 e8 0b e6 c5 5e 5e 05 07 e8 03 e6 c5 5e 5e 06 06 e8 fb e5 c5 5e 5e 07 05 e8 f3 e5 c5 5e 5e 08 04 e8 eb e5 c5 5e 5e 09 03 e8 e3 e5 c5 5e 5e 0a 02 e8 db e5 c5 5e 5e 0b 01 e8 d3 e5 c5 5e 5e 0c 00 18 0d a7 c8 f7 7f 00 00 e8 c3 e5 c5 5e 5e 00 0a e8 bb e5 c5 5e 5e 01 09 e8 b3 e5 c5 5e 5e 02 08 e8 ab e5 c5 5e 5e 03 07 e8 a3 e5 c5 5e 5e 04 06 e8 9b e5 c5 5e 5e 05 05 e8 93 e5 c5 5e 5e 06 04 e8 8b e5 c5 5e 5e 07 03 e8 83 e5 c5 5e 5e 08 02 e8 7b e5 c5 5e 5e 09 01 e8 73 e5 c5 5e 5e 0a 00 50 0f a7 c8 f7 7f 00 00 e8 63 e5 c5 5e 5e 00 00 60 13 a7 c8 f7 7f 00 00 e8 53 e5 c5 5e 5e 00 00 c0 13 a7 c8 f7 7f 00 00 e8 43 e5 c5 5e 5e 00 00 20 14 a7 c8 f7 7f 00 00 e8 33 e5 c5 5e 5e 00 00 80 14 a7 c8 f7 7f 00 00 e8 23 e5 c5 5e 5e 00 00 e0 14 a7 c8 f7 7f 00 00 e8 13 e5 c5 5e 5e 00 00 40 15 a7 c8 f7 7f 00 00 e8 03 e5 c5 5e 5e 00 00 a0 15 a7 c8 f7 7f 00 00 e8 f3 e4 c5 5e 5e 00 0c e8 eb e4 c5 5e 5e 01 0b e8 e3 e4 c5 5e 5e 02 0a e8 db e4 c5 5e 5e 03 09 e8 d3 e4 c5 5e 5e 04 08 e8 cb e4 c5 5e 5e 05 07 e8 c3 e4 c5 5e 5e 06 06 e8 bb e4 c5 5e 5e 07 05 e8 b3 e4 c5 5e 5e 08 04 e8 ab e4 c5 5e 5e 09 03 e8 a3 e4 c5 5e 5e 0a 02 e8 9b e4 c5 5e 5e 0b 01 e8 93 e4 c5 5e 5e 0c 00 30 16 a7 c8 f7 7f 00 00 e8 83 e4 c5 5e 5e 00 00 b8 17 a7 c8 f7 7f 00 00 e8 73 e4 c5 5e 5e 00 0a e8 6b e4 c5 5e 5e 01 09 e8 63 e4 c5 5e 5e 02 08 e8 5b e4 c5 5e 5e 03 07 e8 53 e4 c5 5e 5e 04 06 e8 4b e4 c5 5e 5e 05 05 e8 43 e4 c5 5e 5e 06 04 e8 3b e4 c5 5e 5e 07 03 e8 33 e4 c5 5e 5e 08 02 e8 2b e4 c5 5e 5e 09 01 e8 23 e4 c5 5e 5e 0a 00 68 18 a7 c8 f7 7f 00 00 e8 13 e4 c5 5e 5e 00 00 e8 19 a7 c8 f7 7f 00 00 e8 03 e4 c5 5e 5e 00 03 e8 fb e3 c5 5e 5e 01 02 e8 f3 e3 c5 5e 5e 02 01 e8 eb e3 c5 5e 5e 03 00 20 1b a7 c8 f7 7f 00 00 e8 db e3 c5 5e 5e 00 00 18 1c a7 c8 f7 7f 00 00 e8 cb e3 c5 5e 5e 00 00 78 1c a7 c8 f7 7f 00 00 e8 bb e3 c5 5e 5e 00 00 d8 1c a7 c8 f7 7f 00 00 e8 ab e3 c5 5e 5e 00 00 38 1d a7 c8 f7 7f 00 00 e8 9b e3 c5 5e 5e 00 00 98 1d a7 c8 f7 7f 00 00 e8 8b e3 c5 5e 5e 00 00 f8 1d a7 c8 f7 7f 00 00 e8 7b e3 c5 5e 5e 00 00 58 1e a7 c8 f7 7f 00 00 e8 6b e3 c5 5e 5e 00 00 b8 1e a7 c8 f7 7f 00 00 e8 5b e3 c5 5e 5e 00 03 e8 53 e3 c5 5e 5e 01 02 e8 4b e3 c5 5e 5e 02 01 e8 43 e3 c5 5e 5e 03 00 90 1f a7 c8 f7 7f 00 00 e8 33 e3 c5 5e 5e 00 00 00 21 a7 c8 f7 7f 00 00 e8 23 e3 c5 5e 5e 00 00 60 21 a7 c8 f7 7f 00 00 e8 13 e3 c5 5e 5e 00 00 c0 21 a7 c8 f7 7f 00 00 e8 03 e3 c5 5e 5e 00 00 20 22 a7 c8 f7 7f 00 00 e8 f3 e2 c5 5e 5e 00 00 80 22 a7 c8 f7 7f 00 00 e8 e3 e2 c5 5e 5e 00 00 e0 22 a7 c8 f7 7f 00 00 e8 d3 e2 c5 5e 5e 00 00 40 23 a7 c8 f7 7f 00 00 e8 c3 e2 c5 5e 5e 00 00 a0 23 a7 c8 f7 7f 00 00 e8 b3 e2 c5 5e 5e 00 0a e8 ab e2 c5 5e 5e 01 09 e8 a3 e2 c5 5e 5e 02 08 e8 9b e2 c5 5e 5e 03 07 e8 93 e2 c5 5e 5e 04 06 e8 8b e2 c5 5e 5e 05 05 e8 83 e2 c5 5e 5e 06 04 e8 7b e2 c5 5e 5e 07 03 e8 73 e2 c5 5e 5e 08 02 e8 6b e2 c5 5e 5e 09 01 e8 63 e2 c5 5e 5e 0a 00 00 24 a7 c8 f7 7f 00 00 e8 53 e2 c5 5e 5e 00 00 98 25 a7 c8 f7 7f 00 00 e8 43 e2 c5 5e 5e 00 00 68 27 a7 c8 f7 7f 00 00 88 8a a6 c8 f7 7f 00 00 0f 1f 44 00 00 48 b8 f0 4d 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
23        | 7ff7c8607410h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[8u]()                                                       | LiteralExpr<Vector128<byte>> eval<byte>(IComparisonExpr<Vector128<byte>> expr)                                | 0f 1f 44 00 00 48 b8 f0 4d 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
24        | 7ff7c8607440h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[8i]()                                                       | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IComparisonExpr<Vector128<sbyte>> expr)                             | 0f 1f 44 00 00 48 b8 e0 52 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
25        | 7ff7c8607470h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[16u]()                                                      | LiteralExpr<Vector128<ushort>> eval<ushort>(IComparisonExpr<Vector128<ushort>> expr)                          | 0f 1f 44 00 00 48 b8 c0 53 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
26        | 7ff7c86074a0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[16i]()                                                      | LiteralExpr<Vector128<short>> eval<short>(IComparisonExpr<Vector128<short>> expr)                             | 0f 1f 44 00 00 48 b8 a0 54 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
27        | 7ff7c86074d0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[32u]()                                                      | LiteralExpr<Vector128<uint>> eval<uint>(IComparisonExpr<Vector128<uint>> expr)                                | 0f 1f 44 00 00 48 b8 80 55 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
28        | 7ff7c8607500h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[32i]()                                                      | LiteralExpr<Vector128<int>> eval<int>(IComparisonExpr<Vector128<int>> expr)                                   | 0f 1f 44 00 00 48 b8 60 56 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
29        | 7ff7c8607530h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[64i]()                                                      | LiteralExpr<Vector128<long>> eval<long>(IComparisonExpr<Vector128<long>> expr)                                | 0f 1f 44 00 00 48 b8 50 5b 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
30        | 7ff7c8607560h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[8u]()                                                       | LiteralExpr<Vector256<byte>> eval<byte>(IComparisonExpr<Vector256<byte>> expr)                                | 0f 1f 44 00 00 48 b8 30 5c 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
31        | 7ff7c8607590h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[8i]()                                                       | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IComparisonExpr<Vector256<sbyte>> expr)                             | 0f 1f 44 00 00 48 b8 40 5d 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
32        | 7ff7c86075c0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[16u]()                                                      | LiteralExpr<Vector256<ushort>> eval<ushort>(IComparisonExpr<Vector256<ushort>> expr)                          | 0f 1f 44 00 00 48 b8 60 62 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
33        | 7ff7c86075f0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[16i]()                                                      | LiteralExpr<Vector256<short>> eval<short>(IComparisonExpr<Vector256<short>> expr)                             | 0f 1f 44 00 00 48 b8 70 63 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
34        | 7ff7c8607620h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[32u]()                                                      | LiteralExpr<Vector256<uint>> eval<uint>(IComparisonExpr<Vector256<uint>> expr)                                | 0f 1f 44 00 00 48 b8 80 64 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
35        | 7ff7c8607650h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[32i]()                                                      | LiteralExpr<Vector256<int>> eval<int>(IComparisonExpr<Vector256<int>> expr)                                   | 0f 1f 44 00 00 48 b8 90 65 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
36        | 7ff7c8607680h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[64i]()                                                      | LiteralExpr<Vector256<long>> eval<long>(IComparisonExpr<Vector256<long>> expr)                                | 0f 1f 44 00 00 48 b8 b0 6a 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
37        | 7ff7c86076b0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[8u]()                                                           | bit eval<byte>(IComparisonPred<byte> expr)                                                                    | 0f 1f 44 00 00 48 b8 90 49 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
38        | 7ff7c86076e0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[8i]()                                                           | bit eval<sbyte>(IComparisonPred<sbyte> expr)                                                                  | 0f 1f 44 00 00 48 b8 30 4a 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
39        | 7ff7c8607710h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[16u]()                                                          | bit eval<ushort>(IComparisonPred<ushort> expr)                                                                | 0f 1f 44 00 00 48 b8 d0 4a 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
40        | 7ff7c8607740h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[16i]()                                                          | bit eval<short>(IComparisonPred<short> expr)                                                                  | 0f 1f 44 00 00 48 b8 70 4b 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
41        | 7ff7c8607770h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[32u]()                                                          | bit eval<uint>(IComparisonPred<uint> expr)                                                                    | 0f 1f 44 00 00 48 b8 10 4c 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
42        | 7ff7c86077a0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[32i]()                                                          | bit eval<int>(IComparisonPred<int> expr)                                                                      | 0f 1f 44 00 00 48 b8 b0 4c 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
43        | 7ff7c86077d0h   | 1107    | hex://logix/logic.engine?eval#eval_cmp_pred_g[64i]()                                                          | bit eval<long>(IComparisonPred<long> expr)                                                                    | 0f 1f 44 00 00 48 b8 50 4d 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 43 de c5 5e 5e 00 00 c8 27 a7 c8 f7 7f 00 00 e8 33 de c5 5e 5e 00 00 28 28 a7 c8 f7 7f 00 00 e8 23 de c5 5e 5e 00 02 e8 1b de c5 5e 5e 01 01 e8 13 de c5 5e 5e 02 00 78 28 a7 c8 f7 7f 00 00 e8 03 de c5 5e 5e 00 00 68 29 a7 c8 f7 7f 00 00 e8 f3 dd c5 5e 5e 00 00 c8 29 a7 c8 f7 7f 00 00 e8 e3 dd c5 5e 5e 00 02 e8 db dd c5 5e 5e 01 01 e8 d3 dd c5 5e 5e 02 00 18 2a a7 c8 f7 7f 00 00 e8 c3 dd c5 5e 5e 00 00 08 2b a7 c8 f7 7f 00 00 e8 b3 dd c5 5e 5e 00 00 68 2b a7 c8 f7 7f 00 00 e8 a3 dd c5 5e 5e 00 02 e8 9b dd c5 5e 5e 01 01 e8 93 dd c5 5e 5e 02 00 b8 2b a7 c8 f7 7f 00 00 e8 83 dd c5 5e 5e 00 00 a8 2c a7 c8 f7 7f 00 00 e8 73 dd c5 5e 5e 00 00 08 2d a7 c8 f7 7f 00 00 e8 63 dd c5 5e 5e 00 02 e8 5b dd c5 5e 5e 01 01 e8 53 dd c5 5e 5e 02 00 58 2d a7 c8 f7 7f 00 00 e8 43 dd c5 5e 5e 00 00 48 2e a7 c8 f7 7f 00 00 e8 33 dd c5 5e 5e 00 00 a8 2e a7 c8 f7 7f 00 00 e8 23 dd c5 5e 5e 00 02 e8 1b dd c5 5e 5e 01 01 e8 13 dd c5 5e 5e 02 00 f8 2e a7 c8 f7 7f 00 00 e8 03 dd c5 5e 5e 00 00 e8 2f a7 c8 f7 7f 00 00 e8 f3 dc c5 5e 5e 00 00 48 30 a7 c8 f7 7f 00 00 e8 e3 dc c5 5e 5e 00 02 e8 db dc c5 5e 5e 01 01 e8 d3 dc c5 5e 5e 02 00 98 30 a7 c8 f7 7f 00 00 e8 c3 dc c5 5e 5e 00 00 88 31 a7 c8 f7 7f 00 00 e8 b3 dc c5 5e 5e 00 00 e8 31 a7 c8 f7 7f 00 00 e8 a3 dc c5 5e 5e 00 02 e8 9b dc c5 5e 5e 01 01 e8 93 dc c5 5e 5e 02 00 38 32 a7 c8 f7 7f 00 00 e8 83 dc c5 5e 5e 00 00 28 33 a7 c8 f7 7f 00 00 e8 73 dc c5 5e 5e 00 00 88 33 a7 c8 f7 7f 00 00 e8 63 dc c5 5e 5e 00 02 e8 5b dc c5 5e 5e 01 01 e8 53 dc c5 5e 5e 02 00 d8 33 a7 c8 f7 7f 00 00 e8 43 dc c5 5e 5e 00 0c e8 3b dc c5 5e 5e 01 0b e8 33 dc c5 5e 5e 02 0a e8 2b dc c5 5e 5e 03 09 e8 23 dc c5 5e 5e 04 08 e8 1b dc c5 5e 5e 05 07 e8 13 dc c5 5e 5e 06 06 e8 0b dc c5 5e 5e 07 05 e8 03 dc c5 5e 5e 08 04 e8 fb db c5 5e 5e 09 03 e8 f3 db c5 5e 5e 0a 02 e8 eb db c5 5e 5e 0b 01 e8 e3 db c5 5e 5e 0c 00 d8 34 a7 c8 f7 7f 00 00 e8 d3 db c5 5e 5e 00 00 60 36 a7 c8 f7 7f 00 00 e8 c3 db c5 5e 5e 00 0a e8 bb db c5 5e 5e 01 09 e8 b3 db c5 5e 5e 02 08 e8 ab db c5 5e 5e 03 07 e8 a3 db c5 5e 5e 04 06 e8 9b db c5 5e 5e 05 05 e8 93 db c5 5e 5e 06 04 e8 8b db c5 5e 5e 07 03 e8 83 db c5 5e 5e 08 02 e8 7b db c5 5e 5e 09 01 e8 73 db c5 5e 5e 0a 00 10 37 a7 c8 f7 7f 00 00 e8 63 db c5 5e 5e 00 00 90 38 a7 c8 f7 7f 00 00 e8 53 db c5 5e 5e 00 00 d8 39 a7 c8 f7 7f 00 00 e8 43 db c5 5e 5e 00 0a e8 3b db c5 5e 5e 01 09 e8 33 db c5 5e 5e 02 08 e8 2b db c5 5e 5e 03 07 e8 23 db c5 5e 5e 04 06 e8 1b db c5 5e 5e 05 05 e8 13 db c5 5e 5e 06 04 e8 0b db c5 5e 5e 07 03 e8 03 db c5 5e 5e 08 02 e8 fb da c5 5e 5e 09 01 e8 f3 da c5 5e 5e 0a 00 38 3a a7 c8 f7 7f 00 00 e8 e3 da c5 5e 5e 00 00 b8 3b a7 c8 f7 7f 00 00 e8 d3 da c5 5e 5e 00 00 00 3d a7 c8 f7 7f 00 00 e8 c3 da c5 5e 5e 00 0c e8 bb da c5 5e 5e 01 0b e8 b3 da c5 5e 5e 02 0a e8 ab da c5 5e 5e 03 09 e8 a3 da c5 5e 5e 04 08 e8 9b da c5 5e 5e 05 07 e8 93 da c5 5e 5e 06 06 e8 8b da c5 5e 5e 07 05 e8 83 da c5 5e 5e 08 04 e8 7b da c5 5e 5e 09 03 e8 73 da c5 5e 5e 0a 02 e8 6b da c5 5e 5e 0b 01 e8 63 da c5 5e 5e 0c 00 90 3d a7 c8 f7 7f 00 00 e8 53 da c5 5e 5e 00 00 18 3f a7 c8 f7 7f 00 00 c8 ab a6 c8 f7 7f 00 00 0f 1f 44 00 00 48 b8 f8 77 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
44        | 7ff7c8607c00h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[8u]()                                                         | LiteralExpr<byte> eval<byte>(IArithmeticExpr<byte> expr)                                                      | 0f 1f 44 00 00 48 b8 f8 77 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
45        | 7ff7c8607c30h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[8i]()                                                         | LiteralExpr<sbyte> eval<sbyte>(IArithmeticExpr<sbyte> expr)                                                   | 0f 1f 44 00 00 48 b8 48 78 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
46        | 7ff7c8607c60h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[16u]()                                                        | LiteralExpr<ushort> eval<ushort>(IArithmeticExpr<ushort> expr)                                                | 0f 1f 44 00 00 48 b8 88 78 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
47        | 7ff7c8607c90h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[16i]()                                                        | LiteralExpr<short> eval<short>(IArithmeticExpr<short> expr)                                                   | 0f 1f 44 00 00 48 b8 c8 78 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
48        | 7ff7c8607cc0h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[32u]()                                                        | LiteralExpr<uint> eval<uint>(IArithmeticExpr<uint> expr)                                                      | 0f 1f 44 00 00 48 b8 08 79 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
49        | 7ff7c8607cf0h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[32i]()                                                        | LiteralExpr<int> eval<int>(IArithmeticExpr<int> expr)                                                         | 0f 1f 44 00 00 48 b8 48 79 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
50        | 7ff7c8607d20h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[64u]()                                                        | LiteralExpr<ulong> eval<ulong>(IArithmeticExpr<ulong> expr)                                                   | 0f 1f 44 00 00 48 b8 88 79 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
51        | 7ff7c8607d50h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[64i]()                                                        | LiteralExpr<long> eval<long>(IArithmeticExpr<long> expr)                                                      | 0f 1f 44 00 00 48 b8 c8 79 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
52        | 7ff7c8607d80h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[8u]()                                                     | LiteralExpr<Vector128<byte>> eval<byte>(IExpr<Vector128<byte>> expr)                                          | 0f 1f 44 00 00 48 b8 c8 48 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
53        | 7ff7c8607db0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[8i]()                                                     | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IExpr<Vector128<sbyte>> expr)                                       | 0f 1f 44 00 00 48 b8 08 4f 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
54        | 7ff7c8607de0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[16u]()                                                    | LiteralExpr<Vector128<ushort>> eval<ushort>(IExpr<Vector128<ushort>> expr)                                    | 0f 1f 44 00 00 48 b8 f0 4f 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
55        | 7ff7c8607e10h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[16i]()                                                    | LiteralExpr<Vector128<short>> eval<short>(IExpr<Vector128<short>> expr)                                       | 0f 1f 44 00 00 48 b8 d8 50 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
56        | 7ff7c8607e40h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[32u]()                                                    | LiteralExpr<Vector128<uint>> eval<uint>(IExpr<Vector128<uint>> expr)                                          | 0f 1f 44 00 00 48 b8 c0 51 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
57        | 7ff7c8607e70h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[32i]()                                                    | LiteralExpr<Vector128<int>> eval<int>(IExpr<Vector128<int>> expr)                                             | 0f 1f 44 00 00 48 b8 a8 52 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
58        | 7ff7c8607ea0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[64u]()                                                    | LiteralExpr<Vector128<ulong>> eval<ulong>(IExpr<Vector128<ulong>> expr)                                       | 0f 1f 44 00 00 48 b8 68 7b 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
59        | 7ff7c8607ed0h   | 1107    | hex://logix/logic.engine?eval#eval_vector_expr128_g[64i]()                                                    | LiteralExpr<Vector128<long>> eval<long>(IExpr<Vector128<long>> expr)                                          | 0f 1f 44 00 00 48 b8 08 58 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 43 d7 c5 5e 5e 00 0a e8 3b d7 c5 5e 5e 01 09 e8 33 d7 c5 5e 5e 02 08 e8 2b d7 c5 5e 5e 03 07 e8 23 d7 c5 5e 5e 04 06 e8 1b d7 c5 5e 5e 05 05 e8 13 d7 c5 5e 5e 06 04 e8 0b d7 c5 5e 5e 07 03 e8 03 d7 c5 5e 5e 08 02 e8 fb d6 c5 5e 5e 09 01 e8 f3 d6 c5 5e 5e 0a 00 c8 3f a7 c8 f7 7f 00 00 e8 e3 d6 c5 5e 5e 00 00 48 41 a7 c8 f7 7f 00 00 e8 d3 d6 c5 5e 5e 00 00 90 42 a7 c8 f7 7f 00 00 e8 c3 d6 c5 5e 5e 00 0a e8 bb d6 c5 5e 5e 01 09 e8 b3 d6 c5 5e 5e 02 08 e8 ab d6 c5 5e 5e 03 07 e8 a3 d6 c5 5e 5e 04 06 e8 9b d6 c5 5e 5e 05 05 e8 93 d6 c5 5e 5e 06 04 e8 8b d6 c5 5e 5e 07 03 e8 83 d6 c5 5e 5e 08 02 e8 7b d6 c5 5e 5e 09 01 e8 73 d6 c5 5e 5e 0a 00 f0 42 a7 c8 f7 7f 00 00 e8 63 d6 c5 5e 5e 00 00 70 44 a7 c8 f7 7f 00 00 e8 53 d6 c5 5e 5e 00 00 b8 45 a7 c8 f7 7f 00 00 e8 43 d6 c5 5e 5e 00 09 e8 3b d6 c5 5e 5e 01 08 e8 33 d6 c5 5e 5e 02 07 e8 2b d6 c5 5e 5e 03 06 e8 23 d6 c5 5e 5e 04 05 e8 1b d6 c5 5e 5e 05 04 e8 13 d6 c5 5e 5e 06 03 e8 0b d6 c5 5e 5e 07 02 e8 03 d6 c5 5e 5e 08 01 e8 fb d5 c5 5e 5e 09 00 48 46 a7 c8 f7 7f 00 00 e8 eb d5 c5 5e 5e 00 03 e8 e3 d5 c5 5e 5e 01 02 e8 db d5 c5 5e 5e 02 01 e8 d3 d5 c5 5e 5e 03 00 e0 47 a7 c8 f7 7f 00 00 e8 c3 d5 c5 5e 5e 00 00 50 49 a7 c8 f7 7f 00 00 e8 b3 d5 c5 5e 5e 00 09 e8 ab d5 c5 5e 5e 01 08 e8 a3 d5 c5 5e 5e 02 07 e8 9b d5 c5 5e 5e 03 06 e8 93 d5 c5 5e 5e 04 05 e8 8b d5 c5 5e 5e 05 04 e8 83 d5 c5 5e 5e 06 03 e8 7b d5 c5 5e 5e 07 02 e8 73 d5 c5 5e 5e 08 01 e8 6b d5 c5 5e 5e 09 00 e0 49 a7 c8 f7 7f 00 00 e8 5b d5 c5 5e 5e 00 00 88 4b a7 c8 f7 7f 00 00 e8 4b d5 c5 5e 5e 00 0a e8 43 d5 c5 5e 5e 01 09 e8 3b d5 c5 5e 5e 02 08 e8 33 d5 c5 5e 5e 03 07 e8 2b d5 c5 5e 5e 04 06 e8 23 d5 c5 5e 5e 05 05 e8 1b d5 c5 5e 5e 06 04 e8 13 d5 c5 5e 5e 07 03 e8 0b d5 c5 5e 5e 08 02 e8 03 d5 c5 5e 5e 09 01 e8 fb d4 c5 5e 5e 0a 00 e8 4b a7 c8 f7 7f 00 00 e8 eb d4 c5 5e 5e 00 00 80 4d a7 c8 f7 7f 00 00 e8 db d4 c5 5e 5e 00 00 50 4e a7 c8 f7 7f 00 00 e8 cb d4 c5 5e 5e 00 00 b0 4e a7 c8 f7 7f 00 00 e8 bb d4 c5 5e 5e 00 00 10 4f a7 c8 f7 7f 00 00 e8 ab d4 c5 5e 5e 00 09 e8 a3 d4 c5 5e 5e 01 08 e8 9b d4 c5 5e 5e 02 07 e8 93 d4 c5 5e 5e 03 06 e8 8b d4 c5 5e 5e 04 05 e8 83 d4 c5 5e 5e 05 04 e8 7b d4 c5 5e 5e 06 03 e8 73 d4 c5 5e 5e 07 02 e8 6b d4 c5 5e 5e 08 01 e8 63 d4 c5 5e 5e 09 00 a0 4f a7 c8 f7 7f 00 00 e8 53 d4 c5 5e 5e 00 00 48 51 a7 c8 f7 7f 00 00 e8 43 d4 c5 5e 5e 00 09 e8 3b d4 c5 5e 5e 01 08 e8 33 d4 c5 5e 5e 02 07 e8 2b d4 c5 5e 5e 03 06 e8 23 d4 c5 5e 5e 04 05 e8 1b d4 c5 5e 5e 05 04 e8 13 d4 c5 5e 5e 06 03 e8 0b d4 c5 5e 5e 07 02 e8 03 d4 c5 5e 5e 08 01 e8 fb d3 c5 5e 5e 09 00 d8 51 a7 c8 f7 7f 00 00 e8 eb d3 c5 5e 5e 00 00 80 53 a7 c8 f7 7f 00 00 e8 db d3 c5 5e 5e 00 09 e8 d3 d3 c5 5e 5e 01 08 e8 cb d3 c5 5e 5e 02 07 e8 c3 d3 c5 5e 5e 03 06 e8 bb d3 c5 5e 5e 04 05 e8 b3 d3 c5 5e 5e 05 04 e8 ab d3 c5 5e 5e 06 03 e8 a3 d3 c5 5e 5e 07 02 e8 9b d3 c5 5e 5e 08 01 e8 93 d3 c5 5e 5e 09 00 10 54 a7 c8 f7 7f 00 00 e8 83 d3 c5 5e 5e 00 00 b8 55 a7 c8 f7 7f 00 00 e8 73 d3 c5 5e 5e 00 00 f0 57 a7 c8 f7 7f 00 00 e8 63 d3 c5 5e 5e 00 00 28 5a a7 c8 f7 7f 00 00 e8 53 d3 c5 5e 5e 00 00 60 5c a7 c8 f7 7f 00 00 d8 bd a6 c8 f7 7f 00 00 0f 1f 44 00 00 48 b8 38 5a 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
60        | 7ff7c8608300h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[8u]()                                                     | LiteralExpr<Vector256<byte>> eval<byte>(IExpr<Vector256<byte>> expr)                                          | 0f 1f 44 00 00 48 b8 38 5a 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
61        | 7ff7c8608330h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[8i]()                                                     | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IExpr<Vector256<sbyte>> expr)                                       | 0f 1f 44 00 00 48 b8 30 5b 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
62        | 7ff7c8608360h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[16u]()                                                    | LiteralExpr<Vector256<ushort>> eval<ushort>(IExpr<Vector256<ushort>> expr)                                    | 0f 1f 44 00 00 48 b8 28 5f 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
63        | 7ff7c8608390h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[16i]()                                                    | LiteralExpr<Vector256<short>> eval<short>(IExpr<Vector256<short>> expr)                                       | 0f 1f 44 00 00 48 b8 10 60 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
64        | 7ff7c86083c0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[32u]()                                                    | LiteralExpr<Vector256<uint>> eval<uint>(IExpr<Vector256<uint>> expr)                                          | 0f 1f 44 00 00 48 b8 f8 60 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
65        | 7ff7c86083f0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[32i]()                                                    | LiteralExpr<Vector256<int>> eval<int>(IExpr<Vector256<int>> expr)                                             | 0f 1f 44 00 00 48 b8 e0 61 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
66        | 7ff7c8608420h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[64u]()                                                    | LiteralExpr<Vector256<ulong>> eval<ulong>(IExpr<Vector256<ulong>> expr)                                       | 0f 1f 44 00 00 48 b8 e8 7f 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
67        | 7ff7c8608450h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[64i]()                                                    | LiteralExpr<Vector256<long>> eval<long>(IExpr<Vector256<long>> expr)                                          | 0f 1f 44 00 00 48 b8 20 67 60 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
68        | 7ff7c8608480h   | 231     | hex://logix/logic.engine?satisfied#satisfied_g[8u](8u,8u)                                                     | bit satisfied<byte>(ComparisonExpr<byte> expr, byte a, byte b)                                                | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 10 ea 72 c7 f7 7f 00 00 ba 02 00 00 00 e8 3d e9 c5 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 01 fc ff ff 48 8b ce e8 f1 bb ff ff 0f b6 40 08 0f b6 c0 3c ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 50 c7 a6 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 72 c7 f7 7f 00 00 ba 02 00 00 00 e8 cd e8 c5 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 99 fc ff ff 48 8b ce e8 61 bc ff ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
69        | 7ff7c86084f0h   | 119     | hex://logix/logic.engine?satisfied#satisfied_g[8i](8i,8i)                                                     | bit satisfied<sbyte>(ComparisonExpr<sbyte> expr, sbyte a, sbyte b)                                            | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 72 c7 f7 7f 00 00 ba 02 00 00 00 e8 cd e8 c5 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 99 fc ff ff 48 8b ce e8 61 bc ff ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
70        | 7ff7c8608570h   | 119     | hex://logix/logic.engine?satisfied#satisfied_g[16u](16u,16u)                                                  | bit satisfied<ushort>(ComparisonExpr<ushort> expr, ushort a, ushort b)                                        | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 f0 9f 12 c8 f7 7f 00 00 ba 02 00 00 00 e8 4d e8 c5 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 80 fc ff ff 48 8b ce e8 90 bc ff ff 0f b7 40 08 0f b7 c0 0f b7 c0 3d ff ff 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
71        | 7ff7c86085f0h   | 1144    | hex://logix/logic.engine?satisfied#satisfied_g[16i](16i,16i)                                                  | bit satisfied<short>(ComparisonExpr<short> expr, short a, short b)                                            | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 b0 22 38 c8 f7 7f 00 00 ba 02 00 00 00 e8 cd e7 c5 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 68 fc ff ff 48 8b ce e8 c0 bc ff ff 48 0f bf 40 08 48 0f bf c0 48 0f bf c0 3d ff 7f 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 d3 cf c5 5e 5e 00 09 e8 cb cf c5 5e 5e 01 08 e8 c3 cf c5 5e 5e 02 07 e8 bb cf c5 5e 5e 03 06 e8 b3 cf c5 5e 5e 04 05 e8 ab cf c5 5e 5e 05 04 e8 a3 cf c5 5e 5e 06 03 e8 9b cf c5 5e 5e 07 02 e8 93 cf c5 5e 5e 08 01 e8 8b cf c5 5e 5e 09 00 48 56 a7 c8 f7 7f 00 00 e8 7b cf c5 5e 5e 00 09 e8 73 cf c5 5e 5e 01 08 e8 6b cf c5 5e 5e 02 07 e8 63 cf c5 5e 5e 03 06 e8 5b cf c5 5e 5e 04 05 e8 53 cf c5 5e 5e 05 04 e8 4b cf c5 5e 5e 06 03 e8 43 cf c5 5e 5e 07 02 e8 3b cf c5 5e 5e 08 01 e8 33 cf c5 5e 5e 09 00 80 58 a7 c8 f7 7f 00 00 e8 23 cf c5 5e 5e 00 09 e8 1b cf c5 5e 5e 01 08 e8 13 cf c5 5e 5e 02 07 e8 0b cf c5 5e 5e 03 06 e8 03 cf c5 5e 5e 04 05 e8 fb ce c5 5e 5e 05 04 e8 f3 ce c5 5e 5e 06 03 e8 eb ce c5 5e 5e 07 02 e8 e3 ce c5 5e 5e 08 01 e8 db ce c5 5e 5e 09 00 b8 5a a7 c8 f7 7f 00 00 e8 cb ce c5 5e 5e 00 00 c0 5c a7 c8 f7 7f 00 00 e8 bb ce c5 5e 5e 00 00 20 5d a7 c8 f7 7f 00 00 e8 ab ce c5 5e 5e 00 09 e8 a3 ce c5 5e 5e 01 08 e8 9b ce c5 5e 5e 02 07 e8 93 ce c5 5e 5e 03 06 e8 8b ce c5 5e 5e 04 05 e8 83 ce c5 5e 5e 05 04 e8 7b ce c5 5e 5e 06 03 e8 73 ce c5 5e 5e 07 02 e8 6b ce c5 5e 5e 08 01 e8 63 ce c5 5e 5e 09 00 b0 5d a7 c8 f7 7f 00 00 e8 53 ce c5 5e 5e 00 0c e8 4b ce c5 5e 5e 01 0b e8 43 ce c5 5e 5e 02 0a e8 3b ce c5 5e 5e 03 09 e8 33 ce c5 5e 5e 04 08 e8 2b ce c5 5e 5e 05 07 e8 23 ce c5 5e 5e 06 06 e8 1b ce c5 5e 5e 07 05 e8 13 ce c5 5e 5e 08 04 e8 0b ce c5 5e 5e 09 03 e8 03 ce c5 5e 5e 0a 02 e8 fb cd c5 5e 5e 0b 01 e8 f3 cd c5 5e 5e 0c 00 68 5f a7 c8 f7 7f 00 00 e8 e3 cd c5 5e 5e 00 00 f0 60 a7 c8 f7 7f 00 00 e8 d3 cd c5 5e 5e 00 09 e8 cb cd c5 5e 5e 01 08 e8 c3 cd c5 5e 5e 02 07 e8 bb cd c5 5e 5e 03 06 e8 b3 cd c5 5e 5e 04 05 e8 ab cd c5 5e 5e 05 04 e8 a3 cd c5 5e 5e 06 03 e8 9b cd c5 5e 5e 07 02 e8 93 cd c5 5e 5e 08 01 e8 8b cd c5 5e 5e 09 00 d0 61 a7 c8 f7 7f 00 00 e8 7b cd c5 5e 5e 00 03 e8 73 cd c5 5e 5e 01 02 e8 6b cd c5 5e 5e 02 01 e8 63 cd c5 5e 5e 03 00 68 63 a7 c8 f7 7f 00 00 e8 53 cd c5 5e 5e 00 00 d8 64 a7 c8 f7 7f 00 00 e8 43 cd c5 5e 5e 00 09 e8 3b cd c5 5e 5e 01 08 e8 33 cd c5 5e 5e 02 07 e8 2b cd c5 5e 5e 03 06 e8 23 cd c5 5e 5e 04 05 e8 1b cd c5 5e 5e 05 04 e8 13 cd c5 5e 5e 06 03 e8 0b cd c5 5e 5e 07 02 e8 03 cd c5 5e 5e 08 01 e8 fb cc c5 5e 5e 09 00 68 65 a7 c8 f7 7f 00 00 e8 eb cc c5 5e 5e 00 03 e8 e3 cc c5 5e 5e 03 02 e8 db cc c5 5e 5e 06 01 e8 d3 cc c5 5e 5e 09 00 48 68 a7 c8 f7 7f 00 00 e8 c3 cc c5 5e 5e 00 00 18 69 a7 c8 f7 7f 00 00 e8 b3 cc c5 5e 5e 00 0a e8 ab cc c5 5e 5e 01 09 e8 a3 cc c5 5e 5e 02 08 e8 9b cc c5 5e 5e 03 07 e8 93 cc c5 5e 5e 04 06 e8 8b cc c5 5e 5e 05 05 e8 83 cc c5 5e 5e 06 04 e8 7b cc c5 5e 5e 07 03 e8 73 cc c5 5e 5e 08 02 e8 6b cc c5 5e 5e 09 01 e8 63 cc c5 5e 5e 0a 00 78 69 a7 c8 f7 7f 00 00 e8 53 cc c5 5e 5e 00 00 f8 6a a7 c8 f7 7f 00 00 e8 43 cc c5 5e 5e 00 00 c8 6b a7 c8 f7 7f 00 00 e8 33 cc c5 5e 5e 00 00 28 6c a7 c8 f7 7f 00 00 e8 23 cc c5 5e 5e 00 00 88 6c a7 c8 f7 7f 00 00 e8 13 cc c5 5e 5e 00 03 e8 0b cc c5 5e 5e 03 02 e8 03 cc c5 5e 5e 06 01 e8 fb cb c5 5e 5e 09 00 f8 6f a7 c8 f7 7f 00 00 e8 eb cb c5 5e 5e 00 00 c8 70 a7 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
72        | 7ff7c8608a70h   | 455     | hex://logix/logic.engine?satisfied#satisfied_g[32u](32u,32u)                                                  | bit satisfied<uint>(ComparisonExpr<uint> expr, uint a, uint b)                                                | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 88 8f 12 c8 f7 7f 00 00 ba 02 00 00 00 e8 4d e3 c5 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 f2 fb ff ff 48 8b ce e8 f2 b8 ff ff 8b 40 08 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 b0 cb a6 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 48 5f 7f c7 f7 7f 00 00 ba 02 00 00 00 e8 dd e2 c5 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 da fb ff ff 48 8b ce e8 22 b9 ff ff 8b 40 08 3d ff ff ff 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 f8 cc a6 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 18 b6 aa c7 f7 7f 00 00 ba 02 00 00 00 e8 6c e2 c5 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 bf fb ff ff 48 8b ce e8 df fb ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 10 ce a6 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 18 31 38 c8 f7 7f 00 00 ba 02 00 00 00 e8 fc e1 c5 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 c7 fb ff ff 48 8b ce e8 df b8 ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
73        | 7ff7c8608ae0h   | 343     | hex://logix/logic.engine?satisfied#satisfied_g[32i](32i,32i)                                                  | bit satisfied<int>(ComparisonExpr<int> expr, int a, int b)                                                    | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 48 5f 7f c7 f7 7f 00 00 ba 02 00 00 00 e8 dd e2 c5 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 da fb ff ff 48 8b ce e8 22 b9 ff ff 8b 40 08 3d ff ff ff 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 f8 cc a6 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 18 b6 aa c7 f7 7f 00 00 ba 02 00 00 00 e8 6c e2 c5 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 bf fb ff ff 48 8b ce e8 df fb ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 10 ce a6 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 18 31 38 c8 f7 7f 00 00 ba 02 00 00 00 e8 fc e1 c5 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 c7 fb ff ff 48 8b ce e8 df b8 ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
74        | 7ff7c8608b50h   | 231     | hex://logix/logic.engine?satisfied#satisfied_g[64u](64u,64u)                                                  | bit satisfied<ulong>(ComparisonExpr<ulong> expr, ulong a, ulong b)                                            | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 18 b6 aa c7 f7 7f 00 00 ba 02 00 00 00 e8 6c e2 c5 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 bf fb ff ff 48 8b ce e8 df fb ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 10 ce a6 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 18 31 38 c8 f7 7f 00 00 ba 02 00 00 00 e8 fc e1 c5 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 c7 fb ff ff 48 8b ce e8 df b8 ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
75        | 7ff7c8608bc0h   | 119     | hex://logix/logic.engine?satisfied#satisfied_g[64i](64i,64i)                                                  | bit satisfied<long>(ComparisonExpr<long> expr, long a, long b)                                                | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 18 31 38 c8 f7 7f 00 00 ba 02 00 00 00 e8 fc e1 c5 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 c7 fb ff ff 48 8b ce e8 df b8 ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
76        | 7ff7c8608c40h   | 1331    | hex://logix/logic.engine?satisfied#satisfied_g[8u](v128x8u,v128x8u)                                           | bit satisfied<byte>(ComparisonExpr<Vector128<byte>> expr, Vector128<byte> a, Vector128<byte> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 60 67 a7 c8 f7 7f 00 00 ba 02 00 00 00 e8 79 e1 c5 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 a2 fc ff ff 48 8b cb e8 62 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 63 c9 c5 5e 5e 00 09 e8 5b c9 c5 5e 5e 01 08 e8 53 c9 c5 5e 5e 02 07 e8 4b c9 c5 5e 5e 03 06 e8 43 c9 c5 5e 5e 04 05 e8 3b c9 c5 5e 5e 05 04 e8 33 c9 c5 5e 5e 06 03 e8 2b c9 c5 5e 5e 07 02 e8 23 c9 c5 5e 5e 08 01 e8 1b c9 c5 5e 5e 09 00 18 6d a7 c8 f7 7f 00 00 e8 0b c9 c5 5e 5e 00 09 e8 03 c9 c5 5e 5e 01 08 e8 fb c8 c5 5e 5e 02 07 e8 f3 c8 c5 5e 5e 03 06 e8 eb c8 c5 5e 5e 04 05 e8 e3 c8 c5 5e 5e 05 04 e8 db c8 c5 5e 5e 06 03 e8 d3 c8 c5 5e 5e 07 02 e8 cb c8 c5 5e 5e 08 01 e8 c3 c8 c5 5e 5e 09 00 58 71 a7 c8 f7 7f 00 00 e8 b3 c8 c5 5e 5e 00 03 e8 ab c8 c5 5e 5e 03 02 e8 a3 c8 c5 5e 5e 06 01 e8 9b c8 c5 5e 5e 09 00 38 74 a7 c8 f7 7f 00 00 e8 8b c8 c5 5e 5e 00 00 08 75 a7 c8 f7 7f 00 00 e8 7b c8 c5 5e 5e 00 09 e8 73 c8 c5 5e 5e 01 08 e8 6b c8 c5 5e 5e 02 07 e8 63 c8 c5 5e 5e 03 06 e8 5b c8 c5 5e 5e 04 05 e8 53 c8 c5 5e 5e 05 04 e8 4b c8 c5 5e 5e 06 03 e8 43 c8 c5 5e 5e 07 02 e8 3b c8 c5 5e 5e 08 01 e8 33 c8 c5 5e 5e 09 00 98 75 a7 c8 f7 7f 00 00 e8 23 c8 c5 5e 5e 00 03 e8 1b c8 c5 5e 5e 03 02 e8 13 c8 c5 5e 5e 06 01 e8 0b c8 c5 5e 5e 09 00 78 78 a7 c8 f7 7f 00 00 e8 fb c7 c5 5e 5e 00 00 48 79 a7 c8 f7 7f 00 00 e8 eb c7 c5 5e 5e 00 09 e8 e3 c7 c5 5e 5e 01 08 e8 db c7 c5 5e 5e 02 07 e8 d3 c7 c5 5e 5e 03 06 e8 cb c7 c5 5e 5e 04 05 e8 c3 c7 c5 5e 5e 05 04 e8 bb c7 c5 5e 5e 06 03 e8 b3 c7 c5 5e 5e 07 02 e8 ab c7 c5 5e 5e 08 01 e8 a3 c7 c5 5e 5e 09 00 d8 79 a7 c8 f7 7f 00 00 e8 93 c7 c5 5e 5e 00 03 e8 8b c7 c5 5e 5e 03 02 e8 83 c7 c5 5e 5e 06 01 e8 7b c7 c5 5e 5e 09 00 b8 7c a7 c8 f7 7f 00 00 e8 6b c7 c5 5e 5e 00 00 88 7d a7 c8 f7 7f 00 00 e8 5b c7 c5 5e 5e 00 09 e8 53 c7 c5 5e 5e 01 08 e8 4b c7 c5 5e 5e 02 07 e8 43 c7 c5 5e 5e 03 06 e8 3b c7 c5 5e 5e 04 05 e8 33 c7 c5 5e 5e 05 04 e8 2b c7 c5 5e 5e 06 03 e8 23 c7 c5 5e 5e 07 02 e8 1b c7 c5 5e 5e 08 01 e8 13 c7 c5 5e 5e 09 00 18 7e a7 c8 f7 7f 00 00 e8 03 c7 c5 5e 5e 00 03 e8 fb c6 c5 5e 5e 03 02 e8 f3 c6 c5 5e 5e 06 01 e8 eb c6 c5 5e 5e 09 00 f8 80 a7 c8 f7 7f 00 00 e8 db c6 c5 5e 5e 00 00 c8 81 a7 c8 f7 7f 00 00 e8 cb c6 c5 5e 5e 00 09 e8 c3 c6 c5 5e 5e 01 08 e8 bb c6 c5 5e 5e 02 07 e8 b3 c6 c5 5e 5e 03 06 e8 ab c6 c5 5e 5e 04 05 e8 a3 c6 c5 5e 5e 05 04 e8 9b c6 c5 5e 5e 06 03 e8 93 c6 c5 5e 5e 07 02 e8 8b c6 c5 5e 5e 08 01 e8 83 c6 c5 5e 5e 09 00 58 82 a7 c8 f7 7f 00 00 e8 73 c6 c5 5e 5e 00 03 e8 6b c6 c5 5e 5e 01 02 e8 63 c6 c5 5e 5e 02 01 e8 5b c6 c5 5e 5e 03 00 f0 83 a7 c8 f7 7f 00 00 e8 4b c6 c5 5e 5e 00 03 e8 43 c6 c5 5e 5e 03 02 e8 3b c6 c5 5e 5e 06 01 e8 33 c6 c5 5e 5e 09 00 20 86 a7 c8 f7 7f 00 00 e8 23 c6 c5 5e 5e 00 00 f0 86 a7 c8 f7 7f 00 00 e8 13 c6 c5 5e 5e 00 00 50 87 a7 c8 f7 7f 00 00 e8 03 c6 c5 5e 5e 00 00 b0 87 a7 c8 f7 7f 00 00 e8 f3 c5 c5 5e 5e 00 09 e8 eb c5 c5 5e 5e 01 08 e8 e3 c5 c5 5e 5e 02 07 e8 db c5 c5 5e 5e 03 06 e8 d3 c5 c5 5e 5e 04 05 e8 cb c5 c5 5e 5e 05 04 e8 c3 c5 c5 5e 5e 06 03 e8 bb c5 c5 5e 5e 07 02 e8 b3 c5 c5 5e 5e 08 01 e8 ab c5 c5 5e 5e 09 00 40 88 a7 c8 f7 7f 00 00 e8 9b c5 c5 5e 5e 00 03 e8 93 c5 c5 5e 5e 03 02 e8 8b c5 c5 5e 5e 06 01 e8 83 c5 c5 5e 5e 09 00 20 8b a7 c8 f7 7f 00 00 e8 73 c5 c5 5e 5e 00 00 a8 8d a7 c8 f7 7f 00 00 40 d5 a6 c8 f7 7f 00 00 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 10 6f a7 c8 f7 7f 00 00 ba 02 00 00 00 e8 d9 dc c5 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 b2 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
77        | 7ff7c86090e0h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[8i](v128x8i,v128x8i)                                           | bit satisfied<sbyte>(ComparisonExpr<Vector128<sbyte>> expr, Vector128<sbyte> a, Vector128<sbyte> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 10 6f a7 c8 f7 7f 00 00 ba 02 00 00 00 e8 d9 dc c5 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 b2 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
78        | 7ff7c8609180h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[16u](v128x16u,v128x16u)                                        | bit satisfied<ushort>(ComparisonExpr<Vector128<ushort>> expr, Vector128<ushort> a, Vector128<ushort> b)       | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 50 73 a7 c8 f7 7f 00 00 ba 02 00 00 00 e8 39 dc c5 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 9a fb ff ff 48 8b cb e8 f2 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
79        | 7ff7c8609220h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[16i](v128x16i,v128x16i)                                        | bit satisfied<short>(ComparisonExpr<Vector128<short>> expr, Vector128<short> a, Vector128<short> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 90 77 a7 c8 f7 7f 00 00 ba 02 00 00 00 e8 99 db c5 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 8a fb ff ff 48 8b cb e8 32 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
80        | 7ff7c86092c0h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[32u](v128x32u,v128x32u)                                        | bit satisfied<uint>(ComparisonExpr<Vector128<uint>> expr, Vector128<uint> a, Vector128<uint> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 d0 7b a7 c8 f7 7f 00 00 ba 02 00 00 00 e8 f9 da c5 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 7a fb ff ff 48 8b cb e8 72 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
81        | 7ff7c8609360h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[32i](v128x32i,v128x32i)                                        | bit satisfied<int>(ComparisonExpr<Vector128<int>> expr, Vector128<int> a, Vector128<int> b)                   | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 10 80 a7 c8 f7 7f 00 00 ba 02 00 00 00 e8 59 da c5 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 6a fb ff ff 48 8b cb e8 b2 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
82        | 7ff7c8609400h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[64u](v128x64u,v128x64u)                                        | bit satisfied<ulong>(ComparisonExpr<Vector128<ulong>> expr, Vector128<ulong> a, Vector128<ulong> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 38 85 a7 c8 f7 7f 00 00 ba 02 00 00 00 e8 b9 d9 c5 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 5a fb ff ff 48 8b cb e8 da fb ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
83        | 7ff7c86094a0h   | 1335    | hex://logix/logic.engine?satisfied#satisfied_g[64i](v128x64i,v128x64i)                                        | bit satisfied<long>(ComparisonExpr<Vector128<long>> expr, Vector128<long> a, Vector128<long> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 38 8a a7 c8 f7 7f 00 00 ba 02 00 00 00 e8 19 d9 c5 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 92 fb ff ff 48 8b cb e8 62 c6 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 03 c1 c5 5e 5e 00 0c e8 fb c0 c5 5e 5e 01 0b e8 f3 c0 c5 5e 5e 02 0a e8 eb c0 c5 5e 5e 03 09 e8 e3 c0 c5 5e 5e 04 08 e8 db c0 c5 5e 5e 05 07 e8 d3 c0 c5 5e 5e 06 06 e8 cb c0 c5 5e 5e 07 05 e8 c3 c0 c5 5e 5e 08 04 e8 bb c0 c5 5e 5e 09 03 e8 b3 c0 c5 5e 5e 0a 02 e8 ab c0 c5 5e 5e 0b 01 e8 a3 c0 c5 5e 5e 0c 00 20 8c a7 c8 f7 7f 00 00 e8 93 c0 c5 5e 5e 00 09 e8 8b c0 c5 5e 5e 01 08 e8 83 c0 c5 5e 5e 02 07 e8 7b c0 c5 5e 5e 03 06 e8 73 c0 c5 5e 5e 04 05 e8 6b c0 c5 5e 5e 05 04 e8 63 c0 c5 5e 5e 06 03 e8 5b c0 c5 5e 5e 07 02 e8 53 c0 c5 5e 5e 08 01 e8 4b c0 c5 5e 5e 09 00 88 8e a7 c8 f7 7f 00 00 e8 3b c0 c5 5e 5e 00 03 e8 33 c0 c5 5e 5e 01 02 e8 2b c0 c5 5e 5e 02 01 e8 23 c0 c5 5e 5e 03 00 20 90 a7 c8 f7 7f 00 00 e8 13 c0 c5 5e 5e 00 00 90 91 a7 c8 f7 7f 00 00 e8 03 c0 c5 5e 5e 00 09 e8 fb bf c5 5e 5e 01 08 e8 f3 bf c5 5e 5e 02 07 e8 eb bf c5 5e 5e 03 06 e8 e3 bf c5 5e 5e 04 05 e8 db bf c5 5e 5e 05 04 e8 d3 bf c5 5e 5e 06 03 e8 cb bf c5 5e 5e 07 02 e8 c3 bf c5 5e 5e 08 01 e8 bb bf c5 5e 5e 09 00 20 92 a7 c8 f7 7f 00 00 e8 ab bf c5 5e 5e 00 03 e8 a3 bf c5 5e 5e 03 02 e8 9b bf c5 5e 5e 06 01 e8 93 bf c5 5e 5e 09 00 00 95 a7 c8 f7 7f 00 00 e8 83 bf c5 5e 5e 00 00 d0 95 a7 c8 f7 7f 00 00 e8 73 bf c5 5e 5e 00 0a e8 6b bf c5 5e 5e 01 09 e8 63 bf c5 5e 5e 02 08 e8 5b bf c5 5e 5e 03 07 e8 53 bf c5 5e 5e 04 06 e8 4b bf c5 5e 5e 05 05 e8 43 bf c5 5e 5e 06 04 e8 3b bf c5 5e 5e 07 03 e8 33 bf c5 5e 5e 08 02 e8 2b bf c5 5e 5e 09 01 e8 23 bf c5 5e 5e 0a 00 30 96 a7 c8 f7 7f 00 00 e8 13 bf c5 5e 5e 00 00 b0 97 a7 c8 f7 7f 00 00 e8 03 bf c5 5e 5e 00 00 80 98 a7 c8 f7 7f 00 00 e8 f3 be c5 5e 5e 00 00 e0 98 a7 c8 f7 7f 00 00 e8 e3 be c5 5e 5e 00 00 40 99 a7 c8 f7 7f 00 00 e8 d3 be c5 5e 5e 00 09 e8 cb be c5 5e 5e 01 08 e8 c3 be c5 5e 5e 02 07 e8 bb be c5 5e 5e 03 06 e8 b3 be c5 5e 5e 04 05 e8 ab be c5 5e 5e 05 04 e8 a3 be c5 5e 5e 06 03 e8 9b be c5 5e 5e 07 02 e8 93 be c5 5e 5e 08 01 e8 8b be c5 5e 5e 09 00 d0 99 a7 c8 f7 7f 00 00 e8 7b be c5 5e 5e 00 03 e8 73 be c5 5e 5e 03 02 e8 6b be c5 5e 5e 06 01 e8 63 be c5 5e 5e 09 00 b0 9c a7 c8 f7 7f 00 00 e8 53 be c5 5e 5e 00 00 80 9d a7 c8 f7 7f 00 00 e8 43 be c5 5e 5e 00 09 e8 3b be c5 5e 5e 01 08 e8 33 be c5 5e 5e 02 07 e8 2b be c5 5e 5e 03 06 e8 23 be c5 5e 5e 04 05 e8 1b be c5 5e 5e 05 04 e8 13 be c5 5e 5e 06 03 e8 0b be c5 5e 5e 07 02 e8 03 be c5 5e 5e 08 01 e8 fb bd c5 5e 5e 09 00 10 9e a7 c8 f7 7f 00 00 e8 eb bd c5 5e 5e 00 03 e8 e3 bd c5 5e 5e 03 02 e8 db bd c5 5e 5e 06 01 e8 d3 bd c5 5e 5e 09 00 f0 a0 a7 c8 f7 7f 00 00 e8 c3 bd c5 5e 5e 00 00 c0 a1 a7 c8 f7 7f 00 00 e8 b3 bd c5 5e 5e 00 09 e8 ab bd c5 5e 5e 01 08 e8 a3 bd c5 5e 5e 02 07 e8 9b bd c5 5e 5e 03 06 e8 93 bd c5 5e 5e 04 05 e8 8b bd c5 5e 5e 05 04 e8 83 bd c5 5e 5e 06 03 e8 7b bd c5 5e 5e 07 02 e8 73 bd c5 5e 5e 08 01 e8 6b bd c5 5e 5e 09 00 50 a2 a7 c8 f7 7f 00 00 e8 5b bd c5 5e 5e 00 03 e8 53 bd c5 5e 5e 03 02 e8 4b bd c5 5e 5e 06 01 e8 43 bd c5 5e 5e 09 00 30 a5 a7 c8 f7 7f 00 00 e8 33 bd c5 5e 5e 00 00 00 a6 a7 c8 f7 7f 00 00 e8 23 bd c5 5e 5e 00 00 40 aa a7 c8 f7 7f 00 00 e8 13 bd c5 5e 5e 00 00 80 ae a7 c8 f7 7f 00 00 e8 e3 a6 c8 f7 7f 00 00 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 18 94 a7 c8 f7 7f 00 00 ba 02 00 00 00 e8 79 d4 c5 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 e2 fc ff ff 48 8b cb e8 a2 c2 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
84        | 7ff7c8609940h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[8u](v256x8u,v256x8u)                                           | bit satisfied<byte>(ComparisonExpr<Vector256<byte>> expr, Vector256<byte> a, Vector256<byte> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 18 94 a7 c8 f7 7f 00 00 ba 02 00 00 00 e8 79 d4 c5 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 e2 fc ff ff 48 8b cb e8 a2 c2 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
85        | 7ff7c86099e0h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[8i](v256x8i,v256x8i)                                           | bit satisfied<sbyte>(ComparisonExpr<Vector256<sbyte>> expr, Vector256<sbyte> a, Vector256<sbyte> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 c8 9b a7 c8 f7 7f 00 00 ba 02 00 00 00 e8 d9 d3 c5 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 72 fd ff ff 48 8b cb e8 12 c3 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
86        | 7ff7c8609a80h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[16u](v256x16u,v256x16u)                                        | bit satisfied<ushort>(ComparisonExpr<Vector256<ushort>> expr, Vector256<ushort> a, Vector256<ushort> b)       | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 08 a0 a7 c8 f7 7f 00 00 ba 02 00 00 00 e8 39 d3 c5 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 62 fd ff ff 48 8b cb e8 92 c7 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
87        | 7ff7c8609b20h   | 792     | hex://logix/logic.engine?satisfied#satisfied_g[16i](v256x16i,v256x16i)                                        | bit satisfied<short>(ComparisonExpr<Vector256<short>> expr, Vector256<short> a, Vector256<short> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 48 a4 a7 c8 f7 7f 00 00 ba 02 00 00 00 e8 99 d2 c5 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 52 fd ff ff 48 8b cb e8 02 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 83 ba c5 5e 5e 00 09 e8 7b ba c5 5e 5e 01 08 e8 73 ba c5 5e 5e 02 07 e8 6b ba c5 5e 5e 03 06 e8 63 ba c5 5e 5e 04 05 e8 5b ba c5 5e 5e 05 04 e8 53 ba c5 5e 5e 06 03 e8 4b ba c5 5e 5e 07 02 e8 43 ba c5 5e 5e 08 01 e8 3b ba c5 5e 5e 09 00 90 a6 a7 c8 f7 7f 00 00 e8 2b ba c5 5e 5e 00 03 e8 23 ba c5 5e 5e 03 02 e8 1b ba c5 5e 5e 06 01 e8 13 ba c5 5e 5e 09 00 70 a9 a7 c8 f7 7f 00 00 e8 03 ba c5 5e 5e 00 09 e8 fb b9 c5 5e 5e 01 08 e8 f3 b9 c5 5e 5e 02 07 e8 eb b9 c5 5e 5e 03 06 e8 e3 b9 c5 5e 5e 04 05 e8 db b9 c5 5e 5e 05 04 e8 d3 b9 c5 5e 5e 06 03 e8 cb b9 c5 5e 5e 07 02 e8 c3 b9 c5 5e 5e 08 01 e8 bb b9 c5 5e 5e 09 00 d0 aa a7 c8 f7 7f 00 00 e8 ab b9 c5 5e 5e 00 03 e8 a3 b9 c5 5e 5e 03 02 e8 9b b9 c5 5e 5e 06 01 e8 93 b9 c5 5e 5e 09 00 b0 ad a7 c8 f7 7f 00 00 e8 83 b9 c5 5e 5e 00 09 e8 7b b9 c5 5e 5e 01 08 e8 73 b9 c5 5e 5e 02 07 e8 6b b9 c5 5e 5e 03 06 e8 63 b9 c5 5e 5e 04 05 e8 5b b9 c5 5e 5e 05 04 e8 53 b9 c5 5e 5e 06 03 e8 4b b9 c5 5e 5e 07 02 e8 43 b9 c5 5e 5e 08 01 e8 3b b9 c5 5e 5e 09 00 10 af a7 c8 f7 7f 00 00 e8 2b b9 c5 5e 5e 00 03 e8 23 b9 c5 5e 5e 01 02 e8 1b b9 c5 5e 5e 02 01 e8 13 b9 c5 5e 5e 03 00 a8 b0 a7 c8 f7 7f 00 00 e8 03 b9 c5 5e 5e 00 03 e8 fb b8 c5 5e 5e 03 02 e8 f3 b8 c5 5e 5e 06 01 e8 eb b8 c5 5e 5e 09 00 d8 b2 a7 c8 f7 7f 00 00 e8 db b8 c5 5e 5e 00 00 a8 b3 a7 c8 f7 7f 00 00 e8 cb b8 c5 5e 5e 00 00 08 b4 a7 c8 f7 7f 00 00 e8 bb b8 c5 5e 5e 00 00 68 b4 a7 c8 f7 7f 00 00 e8 ab b8 c5 5e 5e 00 09 e8 a3 b8 c5 5e 5e 01 08 e8 9b b8 c5 5e 5e 02 07 e8 93 b8 c5 5e 5e 03 06 e8 8b b8 c5 5e 5e 04 05 e8 83 b8 c5 5e 5e 05 04 e8 7b b8 c5 5e 5e 06 03 e8 73 b8 c5 5e 5e 07 02 e8 6b b8 c5 5e 5e 08 01 e8 63 b8 c5 5e 5e 09 00 f8 b4 a7 c8 f7 7f 00 00 e8 53 b8 c5 5e 5e 00 03 e8 4b b8 c5 5e 5e 03 02 e8 43 b8 c5 5e 5e 06 01 e8 3b b8 c5 5e 5e 09 00 d8 b7 a7 c8 f7 7f 00 00 e8 2b b8 c5 5e 5e 00 00 c0 ba a7 c8 f7 7f 00 00 e8 1b b8 c5 5e 5e 00 00 38 bb a7 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
88        | 7ff7c8609fc0h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[32u](v256x32u,v256x32u)                                        | bit satisfied<uint>(ComparisonExpr<Vector256<uint>> expr, Vector256<uint> a, Vector256<uint> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 88 a8 a7 c8 f7 7f 00 00 ba 02 00 00 00 e8 f9 cd c5 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 72 c4 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
89        | 7ff7c860a060h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[32i](v256x32i,v256x32i)                                        | bit satisfied<int>(ComparisonExpr<Vector256<int>> expr, Vector256<int> a, Vector256<int> b)                   | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 c8 ac a7 c8 f7 7f 00 00 ba 02 00 00 00 e8 59 cd c5 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 c2 fb ff ff 48 8b cb e8 e2 c4 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
90        | 7ff7c860a100h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[64u](v256x64u,v256x64u)                                        | bit satisfied<ulong>(ComparisonExpr<Vector256<ulong>> expr, Vector256<ulong> a, Vector256<ulong> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 f0 b1 a7 c8 f7 7f 00 00 ba 02 00 00 00 e8 b9 cc c5 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 a2 fb ff ff 48 8b cb e8 22 fc ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
91        | 7ff7c860a1a0h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[64i](v256x64i,v256x64i)                                        | bit satisfied<long>(ComparisonExpr<Vector256<long>> expr, Vector256<long> a, Vector256<long> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 f0 b6 a7 c8 f7 7f 00 00 ba 02 00 00 00 e8 19 cc c5 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 da fb ff ff 48 8b cb e8 c2 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
92        | 7ff7c860a240h   | 35      | hex://logix/logic.engine?eval#eval_()                                                                         | bit eval(ILogicExpr expr)                                                                                     | 0f 1f 44 00 00 48 b8 38 0f dd c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
93        | 7ff7c860a270h   | 607     | hex://logix/logic.engine?satisfied#satisfied_(1u,1u)                                                          | bit satisfied(ComparisonExpr expr, bit a, bit b)                                                              | 57 56 48 83 ec 28 48 8b f1 41 8b f8 8b 0e 48 8b 4e 18 83 79 08 00 76 48 48 8b 49 10 49 bb c8 0c 63 c7 f7 7f 00 00 39 09 ff 15 2a 6a 02 ff 48 8b 4e 18 83 79 08 01 76 28 48 8b 49 18 8b d7 49 bb d0 0c 63 c7 f7 7f 00 00 39 09 ff 15 10 6a 02 ff 48 8b ce e8 70 6c 7c ff 90 48 83 c4 28 5e 5f c3 e8 fb 5a d8 5e cc 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 c8 f0 a6 c8 f7 7f 00 00 55 41 57 41 56 57 56 53 48 83 ec 48 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 4e 10 48 8b 5f 10 41 be b6 00 00 00 41 bf 01 00 00 00 8b 49 08 3b 4b 08 0f 85 cb 00 00 00 e8 e0 76 7c ff 48 8b c8 49 bb d8 0c 63 c7 f7 7f 00 00 39 09 ff 15 93 69 02 ff 48 89 45 c8 48 8b 4d c8 49 bb e0 0c 63 c7 f7 7f 00 00 39 09 ff 15 81 69 02 ff 85 c0 74 51 48 8b 4d c8 49 bb e8 0c 63 c7 f7 7f 00 00 39 09 ff 15 6f 69 02 ff 48 8b d0 48 8b ce e8 f4 81 7c ff 48 8b ce e8 ac 6b 7c ff 8b d8 48 8b cf e8 a2 6b 7c ff 3b d8 75 32 48 8b 4d c8 49 bb e0 0c 63 c7 f7 7f 00 00 39 09 ff 15 30 69 02 ff 85 c0 75 af 48 8b 4d c8 49 bb f0 0c 63 c7 f7 7f 00 00 39 09 ff 15 26 69 02 ff eb 18 48 8b cc e8 7e 00 00 00 90 33 c0 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 8b f1 8b 7b 08 b9 19 02 00 00 48 ba 40 ee ac c7 f7 7f 00 00 e8 a1 61 d8 5e 48 8b d8 b9 25 02 00 00 48 ba 40 ee ac c7 f7 7f 00 00 e8 8a 61 d8 5e 4c 8b c8 4c 8d 45 d0 45 88 38 45 89 70 04 4c 8b c3 8b ce 8b d7 48 8b 45 d0 48 89 44 24 20 e8 a7 aa 15 ff 48 8b c8 e8 af 14 bd 5e cc 55 41 57 41 56 57 56 53 48 83 ec 38 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c8 00 74 16 48 8b 4d c8 49 bb f0 0c 63 c7 f7 7f 00 00 39 09 ff 15 68 68 02 ff 90 48 83 c4 38 5b 5e 5f 41 5e 41 5f 5d c3 00 00 19 0c 07 00 0c 82 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 19 0c 07 00 0c 62 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 00 00 00 00 00 00 00
94        | 7ff7c860a2f0h   | 479     | hex://logix/logic.engine?equal#equal_()                                                                       | bit equal(VariedLogicExpr a, VariedLogicExpr b)                                                               | 55 41 57 41 56 57 56 53 48 83 ec 48 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 4e 10 48 8b 5f 10 41 be b6 00 00 00 41 bf 01 00 00 00 8b 49 08 3b 4b 08 0f 85 cb 00 00 00 e8 e0 76 7c ff 48 8b c8 49 bb d8 0c 63 c7 f7 7f 00 00 39 09 ff 15 93 69 02 ff 48 89 45 c8 48 8b 4d c8 49 bb e0 0c 63 c7 f7 7f 00 00 39 09 ff 15 81 69 02 ff 85 c0 74 51 48 8b 4d c8 49 bb e8 0c 63 c7 f7 7f 00 00 39 09 ff 15 6f 69 02 ff 48 8b d0 48 8b ce e8 f4 81 7c ff 48 8b ce e8 ac 6b 7c ff 8b d8 48 8b cf e8 a2 6b 7c ff 3b d8 75 32 48 8b 4d c8 49 bb e0 0c 63 c7 f7 7f 00 00 39 09 ff 15 30 69 02 ff 85 c0 75 af 48 8b 4d c8 49 bb f0 0c 63 c7 f7 7f 00 00 39 09 ff 15 26 69 02 ff eb 18 48 8b cc e8 7e 00 00 00 90 33 c0 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 8b f1 8b 7b 08 b9 19 02 00 00 48 ba 40 ee ac c7 f7 7f 00 00 e8 a1 61 d8 5e 48 8b d8 b9 25 02 00 00 48 ba 40 ee ac c7 f7 7f 00 00 e8 8a 61 d8 5e 4c 8b c8 4c 8d 45 d0 45 88 38 45 89 70 04 4c 8b c3 8b ce 8b d7 48 8b 45 d0 48 89 44 24 20 e8 a7 aa 15 ff 48 8b c8 e8 af 14 bd 5e cc 55 41 57 41 56 57 56 53 48 83 ec 38 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c8 00 74 16 48 8b 4d c8 49 bb f0 0c 63 c7 f7 7f 00 00 39 09 ff 15 68 68 02 ff 90 48 83 c4 38 5b 5e 5f 41 5e 41 5f 5d c3 00 00 19 0c 07 00 0c 82 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 19 0c 07 00 0c 62 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 00 00 00 00 00 00 00
