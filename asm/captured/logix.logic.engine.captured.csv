Sequence  | Address         | Length  | Uri                                                                                                           | OpSig                                                                                                         | Data
0         | 7ff7c8656ab0h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[8u]()                                                         | bit eval<byte>(ILogicExpr<byte> expr)                                                                         | 0f 1f 44 00 00 48 b8 50 34 de c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
1         | 7ff7c8656ae0h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[8i]()                                                         | bit eval<sbyte>(ILogicExpr<sbyte> expr)                                                                       | 0f 1f 44 00 00 48 b8 50 34 de c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
2         | 7ff7c8656b10h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[16u]()                                                        | bit eval<ushort>(ILogicExpr<ushort> expr)                                                                     | 0f 1f 44 00 00 48 b8 50 34 de c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
3         | 7ff7c8656b40h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[16i]()                                                        | bit eval<short>(ILogicExpr<short> expr)                                                                       | 0f 1f 44 00 00 48 b8 50 34 de c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
4         | 7ff7c8656b70h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[32u]()                                                        | bit eval<uint>(ILogicExpr<uint> expr)                                                                         | 0f 1f 44 00 00 48 b8 50 34 de c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
5         | 7ff7c8656ba0h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[32i]()                                                        | bit eval<int>(ILogicExpr<int> expr)                                                                           | 0f 1f 44 00 00 48 b8 50 34 de c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
6         | 7ff7c8656bd0h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[64u]()                                                        | bit eval<ulong>(ILogicExpr<ulong> expr)                                                                       | 0f 1f 44 00 00 48 b8 50 34 de c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
7         | 7ff7c8656c00h   | 1107    | hex://logix/logic.engine?eval#eval_logic_expr_g[64i]()                                                        | bit eval<long>(ILogicExpr<long> expr)                                                                         | 0f 1f 44 00 00 48 b8 50 34 de c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 13 ea c0 5e 5e 00 0a e8 0b ea c0 5e 5e 01 09 e8 03 ea c0 5e 5e 02 08 e8 fb e9 c0 5e 5e 03 07 e8 f3 e9 c0 5e 5e 04 06 e8 eb e9 c0 5e 5e 05 05 e8 e3 e9 c0 5e 5e 06 04 e8 db e9 c0 5e 5e 07 03 e8 d3 e9 c0 5e 5e 08 02 e8 cb e9 c0 5e 5e 09 01 e8 c3 e9 c0 5e 5e 0a 00 18 45 ab c8 f7 7f 00 00 e8 b3 e9 c0 5e 5e 00 00 b8 48 ab c8 f7 7f 00 00 e8 a3 e9 c0 5e 5e 00 00 18 49 ab c8 f7 7f 00 00 e8 93 e9 c0 5e 5e 00 00 78 49 ab c8 f7 7f 00 00 e8 83 e9 c0 5e 5e 00 00 d8 49 ab c8 f7 7f 00 00 e8 73 e9 c0 5e 5e 00 00 38 4a ab c8 f7 7f 00 00 e8 63 e9 c0 5e 5e 00 00 98 4a ab c8 f7 7f 00 00 e8 53 e9 c0 5e 5e 00 00 f8 4a ab c8 f7 7f 00 00 e8 43 e9 c0 5e 5e 00 00 58 4b ab c8 f7 7f 00 00 e8 33 e9 c0 5e 5e 00 00 b8 4b ab c8 f7 7f 00 00 e8 23 e9 c0 5e 5e 00 00 18 4c ab c8 f7 7f 00 00 e8 13 e9 c0 5e 5e 00 00 78 4c ab c8 f7 7f 00 00 e8 03 e9 c0 5e 5e 00 00 d8 4c ab c8 f7 7f 00 00 e8 f3 e8 c0 5e 5e 00 00 38 4d ab c8 f7 7f 00 00 e8 e3 e8 c0 5e 5e 00 00 98 4d ab c8 f7 7f 00 00 e8 d3 e8 c0 5e 5e 00 00 f8 4d ab c8 f7 7f 00 00 e8 c3 e8 c0 5e 5e 00 0a e8 bb e8 c0 5e 5e 01 09 e8 b3 e8 c0 5e 5e 02 08 e8 ab e8 c0 5e 5e 03 07 e8 a3 e8 c0 5e 5e 04 06 e8 9b e8 c0 5e 5e 05 05 e8 93 e8 c0 5e 5e 06 04 e8 8b e8 c0 5e 5e 07 03 e8 83 e8 c0 5e 5e 08 02 e8 7b e8 c0 5e 5e 09 01 e8 73 e8 c0 5e 5e 0a 00 58 4e ab c8 f7 7f 00 00 e8 63 e8 c0 5e 5e 00 00 f0 4f ab c8 f7 7f 00 00 e8 53 e8 c0 5e 5e 00 03 e8 4b e8 c0 5e 5e 01 02 e8 43 e8 c0 5e 5e 02 01 e8 3b e8 c0 5e 5e 03 00 28 51 ab c8 f7 7f 00 00 e8 2b e8 c0 5e 5e 00 00 20 52 ab c8 f7 7f 00 00 e8 1b e8 c0 5e 5e 00 00 80 52 ab c8 f7 7f 00 00 e8 0b e8 c0 5e 5e 00 00 e0 52 ab c8 f7 7f 00 00 e8 fb e7 c0 5e 5e 00 00 40 53 ab c8 f7 7f 00 00 e8 eb e7 c0 5e 5e 00 00 a0 53 ab c8 f7 7f 00 00 e8 db e7 c0 5e 5e 00 00 00 54 ab c8 f7 7f 00 00 e8 cb e7 c0 5e 5e 00 00 60 54 ab c8 f7 7f 00 00 e8 bb e7 c0 5e 5e 00 00 c0 54 ab c8 f7 7f 00 00 e8 ab e7 c0 5e 5e 00 0c e8 a3 e7 c0 5e 5e 01 0b e8 9b e7 c0 5e 5e 02 0a e8 93 e7 c0 5e 5e 03 09 e8 8b e7 c0 5e 5e 04 08 e8 83 e7 c0 5e 5e 05 07 e8 7b e7 c0 5e 5e 06 06 e8 73 e7 c0 5e 5e 07 05 e8 6b e7 c0 5e 5e 08 04 e8 63 e7 c0 5e 5e 09 03 e8 5b e7 c0 5e 5e 0a 02 e8 53 e7 c0 5e 5e 0b 01 e8 4b e7 c0 5e 5e 0c 00 30 55 ab c8 f7 7f 00 00 e8 3b e7 c0 5e 5e 00 00 b8 56 ab c8 f7 7f 00 00 e8 2b e7 c0 5e 5e 00 0a e8 23 e7 c0 5e 5e 01 09 e8 1b e7 c0 5e 5e 02 08 e8 13 e7 c0 5e 5e 03 07 e8 0b e7 c0 5e 5e 04 06 e8 03 e7 c0 5e 5e 05 05 e8 fb e6 c0 5e 5e 06 04 e8 f3 e6 c0 5e 5e 07 03 e8 eb e6 c0 5e 5e 08 02 e8 e3 e6 c0 5e 5e 09 01 e8 db e6 c0 5e 5e 0a 00 68 57 ab c8 f7 7f 00 00 e8 cb e6 c0 5e 5e 00 00 e8 58 ab c8 f7 7f 00 00 e8 bb e6 c0 5e 5e 00 03 e8 b3 e6 c0 5e 5e 01 02 e8 ab e6 c0 5e 5e 02 01 e8 a3 e6 c0 5e 5e 03 00 20 5a ab c8 f7 7f 00 00 e8 93 e6 c0 5e 5e 00 00 18 5b ab c8 f7 7f 00 00 e8 83 e6 c0 5e 5e 00 00 78 5b ab c8 f7 7f 00 00 e8 73 e6 c0 5e 5e 00 00 d8 5b ab c8 f7 7f 00 00 e8 63 e6 c0 5e 5e 00 00 38 5c ab c8 f7 7f 00 00 e8 53 e6 c0 5e 5e 00 00 98 5c ab c8 f7 7f 00 00 e8 43 e6 c0 5e 5e 00 00 f8 5c ab c8 f7 7f 00 00 e8 33 e6 c0 5e 5e 00 00 58 5d ab c8 f7 7f 00 00 e8 23 e6 c0 5e 5e 00 00 b8 5d ab c8 f7 7f 00 00 d0 b0 aa c8 f7 7f 00 00 0f 1f 44 00 00 48 b8 48 66 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
8         | 7ff7c8657030h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[8u]()                                                        | LiteralExpr<byte> eval<byte>(IExpr<byte> expr)                                                                | 0f 1f 44 00 00 48 b8 48 66 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
9         | 7ff7c8657060h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[8i]()                                                        | LiteralExpr<sbyte> eval<sbyte>(IExpr<sbyte> expr)                                                             | 0f 1f 44 00 00 48 b8 a8 6c 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
10        | 7ff7c8657090h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[16u]()                                                       | LiteralExpr<ushort> eval<ushort>(IExpr<ushort> expr)                                                          | 0f 1f 44 00 00 48 b8 c8 6c 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
11        | 7ff7c86570c0h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[16i]()                                                       | LiteralExpr<short> eval<short>(IExpr<short> expr)                                                             | 0f 1f 44 00 00 48 b8 e8 6c 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
12        | 7ff7c86570f0h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[32u]()                                                       | LiteralExpr<uint> eval<uint>(IExpr<uint> expr)                                                                | 0f 1f 44 00 00 48 b8 08 6d 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
13        | 7ff7c8657120h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[32i]()                                                       | LiteralExpr<int> eval<int>(IExpr<int> expr)                                                                   | 0f 1f 44 00 00 48 b8 28 6d 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
14        | 7ff7c8657150h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[64u]()                                                       | LiteralExpr<ulong> eval<ulong>(IExpr<ulong> expr)                                                             | 0f 1f 44 00 00 48 b8 48 6d 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
15        | 7ff7c8657180h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[64i]()                                                       | LiteralExpr<long> eval<long>(IExpr<long> expr)                                                                | 0f 1f 44 00 00 48 b8 68 6d 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
16        | 7ff7c86571b0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[8u]()                                                           | LiteralExpr<byte> eval<byte>(IComparisonExpr<byte> expr)                                                      | 0f 1f 44 00 00 48 b8 b0 43 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
17        | 7ff7c86571e0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[8i]()                                                           | LiteralExpr<sbyte> eval<sbyte>(IComparisonExpr<sbyte> expr)                                                   | 0f 1f 44 00 00 48 b8 90 44 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
18        | 7ff7c8657210h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[16u]()                                                          | LiteralExpr<ushort> eval<ushort>(IComparisonExpr<ushort> expr)                                                | 0f 1f 44 00 00 48 b8 40 45 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
19        | 7ff7c8657240h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[16i]()                                                          | LiteralExpr<short> eval<short>(IComparisonExpr<short> expr)                                                   | 0f 1f 44 00 00 48 b8 f0 45 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
20        | 7ff7c8657270h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[32u]()                                                          | LiteralExpr<uint> eval<uint>(IComparisonExpr<uint> expr)                                                      | 0f 1f 44 00 00 48 b8 a0 46 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
21        | 7ff7c86572a0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[32i]()                                                          | LiteralExpr<int> eval<int>(IComparisonExpr<int> expr)                                                         | 0f 1f 44 00 00 48 b8 40 47 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
22        | 7ff7c86572d0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[64i]()                                                          | LiteralExpr<long> eval<long>(IComparisonExpr<long> expr)                                                      | 0f 1f 44 00 00 48 b8 e0 47 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
23        | 7ff7c8657300h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[8u]()                                                       | LiteralExpr<Vector128<byte>> eval<byte>(IComparisonExpr<Vector128<byte>> expr)                                | 0f 1f 44 00 00 48 b8 f0 50 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
24        | 7ff7c8657330h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[8i]()                                                       | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IComparisonExpr<Vector128<sbyte>> expr)                             | 0f 1f 44 00 00 48 b8 d0 51 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
25        | 7ff7c8657360h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[16u]()                                                      | LiteralExpr<Vector128<ushort>> eval<ushort>(IComparisonExpr<Vector128<ushort>> expr)                          | 0f 1f 44 00 00 48 b8 b0 52 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
26        | 7ff7c8657390h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[16i]()                                                      | LiteralExpr<Vector128<short>> eval<short>(IComparisonExpr<Vector128<short>> expr)                             | 0f 1f 44 00 00 48 b8 a0 57 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
27        | 7ff7c86573c0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[32u]()                                                      | LiteralExpr<Vector128<uint>> eval<uint>(IComparisonExpr<Vector128<uint>> expr)                                | 0f 1f 44 00 00 48 b8 80 58 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
28        | 7ff7c86573f0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[32i]()                                                      | LiteralExpr<Vector128<int>> eval<int>(IComparisonExpr<Vector128<int>> expr)                                   | 0f 1f 44 00 00 48 b8 60 59 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
29        | 7ff7c8657420h   | 1107    | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[64i]()                                                      | LiteralExpr<Vector128<long>> eval<long>(IComparisonExpr<Vector128<long>> expr)                                | 0f 1f 44 00 00 48 b8 40 5a 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 f3 e1 c0 5e 5e 00 0c e8 eb e1 c0 5e 5e 01 0b e8 e3 e1 c0 5e 5e 02 0a e8 db e1 c0 5e 5e 03 09 e8 d3 e1 c0 5e 5e 04 08 e8 cb e1 c0 5e 5e 05 07 e8 c3 e1 c0 5e 5e 06 06 e8 bb e1 c0 5e 5e 07 05 e8 b3 e1 c0 5e 5e 08 04 e8 ab e1 c0 5e 5e 09 03 e8 a3 e1 c0 5e 5e 0a 02 e8 9b e1 c0 5e 5e 0b 01 e8 93 e1 c0 5e 5e 0c 00 48 5e ab c8 f7 7f 00 00 e8 83 e1 c0 5e 5e 00 00 d0 5f ab c8 f7 7f 00 00 e8 73 e1 c0 5e 5e 00 0a e8 6b e1 c0 5e 5e 01 09 e8 63 e1 c0 5e 5e 02 08 e8 5b e1 c0 5e 5e 03 07 e8 53 e1 c0 5e 5e 04 06 e8 4b e1 c0 5e 5e 05 05 e8 43 e1 c0 5e 5e 06 04 e8 3b e1 c0 5e 5e 07 03 e8 33 e1 c0 5e 5e 08 02 e8 2b e1 c0 5e 5e 09 01 e8 23 e1 c0 5e 5e 0a 00 80 60 ab c8 f7 7f 00 00 e8 13 e1 c0 5e 5e 00 00 00 62 ab c8 f7 7f 00 00 e8 03 e1 c0 5e 5e 00 03 e8 fb e0 c0 5e 5e 01 02 e8 f3 e0 c0 5e 5e 02 01 e8 eb e0 c0 5e 5e 03 00 38 63 ab c8 f7 7f 00 00 e8 db e0 c0 5e 5e 00 00 30 64 ab c8 f7 7f 00 00 e8 cb e0 c0 5e 5e 00 00 90 64 ab c8 f7 7f 00 00 e8 bb e0 c0 5e 5e 00 00 f0 64 ab c8 f7 7f 00 00 e8 ab e0 c0 5e 5e 00 00 50 65 ab c8 f7 7f 00 00 e8 9b e0 c0 5e 5e 00 00 b0 65 ab c8 f7 7f 00 00 e8 8b e0 c0 5e 5e 00 00 10 66 ab c8 f7 7f 00 00 e8 7b e0 c0 5e 5e 00 00 70 66 ab c8 f7 7f 00 00 e8 6b e0 c0 5e 5e 00 00 d0 66 ab c8 f7 7f 00 00 e8 5b e0 c0 5e 5e 00 03 e8 53 e0 c0 5e 5e 01 02 e8 4b e0 c0 5e 5e 02 01 e8 43 e0 c0 5e 5e 03 00 a8 67 ab c8 f7 7f 00 00 e8 33 e0 c0 5e 5e 00 00 18 69 ab c8 f7 7f 00 00 e8 23 e0 c0 5e 5e 00 00 78 69 ab c8 f7 7f 00 00 e8 13 e0 c0 5e 5e 00 00 d8 69 ab c8 f7 7f 00 00 e8 03 e0 c0 5e 5e 00 00 38 6a ab c8 f7 7f 00 00 e8 f3 df c0 5e 5e 00 00 98 6a ab c8 f7 7f 00 00 e8 e3 df c0 5e 5e 00 00 f8 6a ab c8 f7 7f 00 00 e8 d3 df c0 5e 5e 00 00 58 6b ab c8 f7 7f 00 00 e8 c3 df c0 5e 5e 00 00 b8 6b ab c8 f7 7f 00 00 e8 b3 df c0 5e 5e 00 0a e8 ab df c0 5e 5e 01 09 e8 a3 df c0 5e 5e 02 08 e8 9b df c0 5e 5e 03 07 e8 93 df c0 5e 5e 04 06 e8 8b df c0 5e 5e 05 05 e8 83 df c0 5e 5e 06 04 e8 7b df c0 5e 5e 07 03 e8 73 df c0 5e 5e 08 02 e8 6b df c0 5e 5e 09 01 e8 63 df c0 5e 5e 0a 00 18 6c ab c8 f7 7f 00 00 e8 53 df c0 5e 5e 00 00 b0 6d ab c8 f7 7f 00 00 e8 43 df c0 5e 5e 00 00 80 6f ab c8 f7 7f 00 00 e8 33 df c0 5e 5e 00 00 e0 6f ab c8 f7 7f 00 00 e8 23 df c0 5e 5e 00 00 40 70 ab c8 f7 7f 00 00 e8 13 df c0 5e 5e 00 02 e8 0b df c0 5e 5e 01 01 e8 03 df c0 5e 5e 02 00 90 70 ab c8 f7 7f 00 00 e8 f3 de c0 5e 5e 00 00 80 71 ab c8 f7 7f 00 00 e8 e3 de c0 5e 5e 00 00 e0 71 ab c8 f7 7f 00 00 e8 d3 de c0 5e 5e 00 02 e8 cb de c0 5e 5e 01 01 e8 c3 de c0 5e 5e 02 00 30 72 ab c8 f7 7f 00 00 e8 b3 de c0 5e 5e 00 00 20 73 ab c8 f7 7f 00 00 e8 a3 de c0 5e 5e 00 00 80 73 ab c8 f7 7f 00 00 e8 93 de c0 5e 5e 00 02 e8 8b de c0 5e 5e 01 01 e8 83 de c0 5e 5e 02 00 d0 73 ab c8 f7 7f 00 00 e8 73 de c0 5e 5e 00 00 c0 74 ab c8 f7 7f 00 00 e8 63 de c0 5e 5e 00 00 20 75 ab c8 f7 7f 00 00 e8 53 de c0 5e 5e 00 02 e8 4b de c0 5e 5e 01 01 e8 43 de c0 5e 5e 02 00 70 75 ab c8 f7 7f 00 00 e8 33 de c0 5e 5e 00 00 60 76 ab c8 f7 7f 00 00 e8 23 de c0 5e 5e 00 00 c0 76 ab c8 f7 7f 00 00 e8 13 de c0 5e 5e 00 02 e8 0b de c0 5e 5e 01 01 e8 03 de c0 5e 5e 02 00 10 77 ab c8 f7 7f 00 00 48 d4 aa c8 f7 7f 00 00 0f 1f 44 00 00 48 b8 30 5f 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
30        | 7ff7c8657850h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[8u]()                                                       | LiteralExpr<Vector256<byte>> eval<byte>(IComparisonExpr<Vector256<byte>> expr)                                | 0f 1f 44 00 00 48 b8 30 5f 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
31        | 7ff7c8657880h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[8i]()                                                       | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IComparisonExpr<Vector256<sbyte>> expr)                             | 0f 1f 44 00 00 48 b8 40 60 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
32        | 7ff7c86578b0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[16u]()                                                      | LiteralExpr<Vector256<ushort>> eval<ushort>(IComparisonExpr<Vector256<ushort>> expr)                          | 0f 1f 44 00 00 48 b8 50 61 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
33        | 7ff7c86578e0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[16i]()                                                      | LiteralExpr<Vector256<short>> eval<short>(IComparisonExpr<Vector256<short>> expr)                             | 0f 1f 44 00 00 48 b8 70 66 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
34        | 7ff7c8657910h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[32u]()                                                      | LiteralExpr<Vector256<uint>> eval<uint>(IComparisonExpr<Vector256<uint>> expr)                                | 0f 1f 44 00 00 48 b8 80 67 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
35        | 7ff7c8657940h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[32i]()                                                      | LiteralExpr<Vector256<int>> eval<int>(IComparisonExpr<Vector256<int>> expr)                                   | 0f 1f 44 00 00 48 b8 90 68 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
36        | 7ff7c8657970h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[64i]()                                                      | LiteralExpr<Vector256<long>> eval<long>(IComparisonExpr<Vector256<long>> expr)                                | 0f 1f 44 00 00 48 b8 a0 69 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
37        | 7ff7c86579a0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[8u]()                                                           | bit eval<byte>(IComparisonPred<byte> expr)                                                                    | 0f 1f 44 00 00 48 b8 90 48 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
38        | 7ff7c86579d0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[8i]()                                                           | bit eval<sbyte>(IComparisonPred<sbyte> expr)                                                                  | 0f 1f 44 00 00 48 b8 30 49 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
39        | 7ff7c8657a00h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[16u]()                                                          | bit eval<ushort>(IComparisonPred<ushort> expr)                                                                | 0f 1f 44 00 00 48 b8 d0 49 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
40        | 7ff7c8657a30h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[16i]()                                                          | bit eval<short>(IComparisonPred<short> expr)                                                                  | 0f 1f 44 00 00 48 b8 70 4a 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
41        | 7ff7c8657a60h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[32u]()                                                          | bit eval<uint>(IComparisonPred<uint> expr)                                                                    | 0f 1f 44 00 00 48 b8 10 4b 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
42        | 7ff7c8657a90h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[32i]()                                                          | bit eval<int>(IComparisonPred<int> expr)                                                                      | 0f 1f 44 00 00 48 b8 b0 4b 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
43        | 7ff7c8657ac0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[64i]()                                                          | bit eval<long>(IComparisonPred<long> expr)                                                                    | 0f 1f 44 00 00 48 b8 50 4c 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
44        | 7ff7c8657af0h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[8u]()                                                         | LiteralExpr<byte> eval<byte>(IArithmeticExpr<byte> expr)                                                      | 0f 1f 44 00 00 48 b8 08 77 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
45        | 7ff7c8657b20h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[8i]()                                                         | LiteralExpr<sbyte> eval<sbyte>(IArithmeticExpr<sbyte> expr)                                                   | 0f 1f 44 00 00 48 b8 58 77 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
46        | 7ff7c8657b50h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[16u]()                                                        | LiteralExpr<ushort> eval<ushort>(IArithmeticExpr<ushort> expr)                                                | 0f 1f 44 00 00 48 b8 98 77 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
47        | 7ff7c8657b80h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[16i]()                                                        | LiteralExpr<short> eval<short>(IArithmeticExpr<short> expr)                                                   | 0f 1f 44 00 00 48 b8 d8 77 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
48        | 7ff7c8657bb0h   | 1064    | hex://logix/logic.engine?eval#eval_arith_expr_g[32u]()                                                        | LiteralExpr<uint> eval<uint>(IArithmeticExpr<uint> expr)                                                      | 0f 1f 44 00 00 48 b8 18 78 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 63 da c0 5e 5e 00 00 00 78 ab c8 f7 7f 00 00 e8 53 da c0 5e 5e 00 00 60 78 ab c8 f7 7f 00 00 e8 43 da c0 5e 5e 00 02 e8 3b da c0 5e 5e 01 01 e8 33 da c0 5e 5e 02 00 b0 78 ab c8 f7 7f 00 00 e8 23 da c0 5e 5e 00 00 a0 79 ab c8 f7 7f 00 00 e8 13 da c0 5e 5e 00 00 00 7a ab c8 f7 7f 00 00 e8 03 da c0 5e 5e 00 02 e8 fb d9 c0 5e 5e 01 01 e8 f3 d9 c0 5e 5e 02 00 50 7a ab c8 f7 7f 00 00 e8 e3 d9 c0 5e 5e 00 00 40 7b ab c8 f7 7f 00 00 e8 d3 d9 c0 5e 5e 00 00 a0 7b ab c8 f7 7f 00 00 e8 c3 d9 c0 5e 5e 00 02 e8 bb d9 c0 5e 5e 01 01 e8 b3 d9 c0 5e 5e 02 00 f0 7b ab c8 f7 7f 00 00 e8 a3 d9 c0 5e 5e 00 0c e8 9b d9 c0 5e 5e 01 0b e8 93 d9 c0 5e 5e 02 0a e8 8b d9 c0 5e 5e 03 09 e8 83 d9 c0 5e 5e 04 08 e8 7b d9 c0 5e 5e 05 07 e8 73 d9 c0 5e 5e 06 06 e8 6b d9 c0 5e 5e 07 05 e8 63 d9 c0 5e 5e 08 04 e8 5b d9 c0 5e 5e 09 03 e8 53 d9 c0 5e 5e 0a 02 e8 4b d9 c0 5e 5e 0b 01 e8 43 d9 c0 5e 5e 0c 00 f0 7c ab c8 f7 7f 00 00 e8 33 d9 c0 5e 5e 00 00 78 7e ab c8 f7 7f 00 00 e8 23 d9 c0 5e 5e 00 0a e8 1b d9 c0 5e 5e 01 09 e8 13 d9 c0 5e 5e 02 08 e8 0b d9 c0 5e 5e 03 07 e8 03 d9 c0 5e 5e 04 06 e8 fb d8 c0 5e 5e 05 05 e8 f3 d8 c0 5e 5e 06 04 e8 eb d8 c0 5e 5e 07 03 e8 e3 d8 c0 5e 5e 08 02 e8 db d8 c0 5e 5e 09 01 e8 d3 d8 c0 5e 5e 0a 00 28 7f ab c8 f7 7f 00 00 e8 c3 d8 c0 5e 5e 00 00 a8 80 ab c8 f7 7f 00 00 e8 b3 d8 c0 5e 5e 00 00 f0 81 ab c8 f7 7f 00 00 e8 a3 d8 c0 5e 5e 00 0a e8 9b d8 c0 5e 5e 01 09 e8 93 d8 c0 5e 5e 02 08 e8 8b d8 c0 5e 5e 03 07 e8 83 d8 c0 5e 5e 04 06 e8 7b d8 c0 5e 5e 05 05 e8 73 d8 c0 5e 5e 06 04 e8 6b d8 c0 5e 5e 07 03 e8 63 d8 c0 5e 5e 08 02 e8 5b d8 c0 5e 5e 09 01 e8 53 d8 c0 5e 5e 0a 00 50 82 ab c8 f7 7f 00 00 e8 43 d8 c0 5e 5e 00 00 d0 83 ab c8 f7 7f 00 00 e8 33 d8 c0 5e 5e 00 00 18 85 ab c8 f7 7f 00 00 e8 23 d8 c0 5e 5e 00 0c e8 1b d8 c0 5e 5e 01 0b e8 13 d8 c0 5e 5e 02 0a e8 0b d8 c0 5e 5e 03 09 e8 03 d8 c0 5e 5e 04 08 e8 fb d7 c0 5e 5e 05 07 e8 f3 d7 c0 5e 5e 06 06 e8 eb d7 c0 5e 5e 07 05 e8 e3 d7 c0 5e 5e 08 04 e8 db d7 c0 5e 5e 09 03 e8 d3 d7 c0 5e 5e 0a 02 e8 cb d7 c0 5e 5e 0b 01 e8 c3 d7 c0 5e 5e 0c 00 a8 85 ab c8 f7 7f 00 00 e8 b3 d7 c0 5e 5e 00 00 30 87 ab c8 f7 7f 00 00 e8 a3 d7 c0 5e 5e 00 0a e8 9b d7 c0 5e 5e 01 09 e8 93 d7 c0 5e 5e 02 08 e8 8b d7 c0 5e 5e 03 07 e8 83 d7 c0 5e 5e 04 06 e8 7b d7 c0 5e 5e 05 05 e8 73 d7 c0 5e 5e 06 04 e8 6b d7 c0 5e 5e 07 03 e8 63 d7 c0 5e 5e 08 02 e8 5b d7 c0 5e 5e 09 01 e8 53 d7 c0 5e 5e 0a 00 e0 87 ab c8 f7 7f 00 00 e8 43 d7 c0 5e 5e 00 00 60 89 ab c8 f7 7f 00 00 e8 33 d7 c0 5e 5e 00 00 a8 8a ab c8 f7 7f 00 00 e8 23 d7 c0 5e 5e 00 0a e8 1b d7 c0 5e 5e 01 09 e8 13 d7 c0 5e 5e 02 08 e8 0b d7 c0 5e 5e 03 07 e8 03 d7 c0 5e 5e 04 06 e8 fb d6 c0 5e 5e 05 05 e8 f3 d6 c0 5e 5e 06 04 e8 eb d6 c0 5e 5e 07 03 e8 e3 d6 c0 5e 5e 08 02 e8 db d6 c0 5e 5e 09 01 e8 d3 d6 c0 5e 5e 0a 00 08 8b ab c8 f7 7f 00 00 e8 c3 d6 c0 5e 5e 00 00 88 8c ab c8 f7 7f 00 00 e8 b3 d6 c0 5e 5e 00 00 d0 8d ab c8 f7 7f 00 00 e8 a3 d6 c0 5e 5e 00 03 e8 9b d6 c0 5e 5e 01 02 e8 93 d6 c0 5e 5e 02 01 e8 8b d6 c0 5e 5e 03 00 f8 8f ab c8 f7 7f 00 00 e8 7b d6 c0 5e 5e 00 00 68 91 ab c8 f7 7f 00 00 00 00 00 00 00 00 00 00
49        | 7ff7c8657fe0h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[32i]()                                                        | LiteralExpr<int> eval<int>(IArithmeticExpr<int> expr)                                                         | 0f 1f 44 00 00 48 b8 e8 7b 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
50        | 7ff7c8658010h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[64u]()                                                        | LiteralExpr<ulong> eval<ulong>(IArithmeticExpr<ulong> expr)                                                   | 0f 1f 44 00 00 48 b8 28 7c 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
51        | 7ff7c8658040h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[64i]()                                                        | LiteralExpr<long> eval<long>(IArithmeticExpr<long> expr)                                                      | 0f 1f 44 00 00 48 b8 68 7c 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
52        | 7ff7c8658070h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[8u]()                                                     | LiteralExpr<Vector128<byte>> eval<byte>(IExpr<Vector128<byte>> expr)                                          | 0f 1f 44 00 00 48 b8 e8 4e 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
53        | 7ff7c86580a0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[8i]()                                                     | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IExpr<Vector128<sbyte>> expr)                                       | 0f 1f 44 00 00 48 b8 e0 4f 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
54        | 7ff7c86580d0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[16u]()                                                    | LiteralExpr<Vector128<ushort>> eval<ushort>(IExpr<Vector128<ushort>> expr)                                    | 0f 1f 44 00 00 48 b8 c8 50 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
55        | 7ff7c8658100h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[16i]()                                                    | LiteralExpr<Vector128<short>> eval<short>(IExpr<Vector128<short>> expr)                                       | 0f 1f 44 00 00 48 b8 58 54 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
56        | 7ff7c8658130h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[32u]()                                                    | LiteralExpr<Vector128<uint>> eval<uint>(IExpr<Vector128<uint>> expr)                                          | 0f 1f 44 00 00 48 b8 40 55 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
57        | 7ff7c8658160h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[32i]()                                                    | LiteralExpr<Vector128<int>> eval<int>(IExpr<Vector128<int>> expr)                                             | 0f 1f 44 00 00 48 b8 28 56 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
58        | 7ff7c8658190h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[64u]()                                                    | LiteralExpr<Vector128<ulong>> eval<ulong>(IExpr<Vector128<ulong>> expr)                                       | 0f 1f 44 00 00 48 b8 08 7e 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
59        | 7ff7c86581c0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[64i]()                                                    | LiteralExpr<Vector128<long>> eval<long>(IExpr<Vector128<long>> expr)                                          | 0f 1f 44 00 00 48 b8 10 57 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
60        | 7ff7c86581f0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[8u]()                                                     | LiteralExpr<Vector256<byte>> eval<byte>(IExpr<Vector256<byte>> expr)                                          | 0f 1f 44 00 00 48 b8 d0 5c 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
61        | 7ff7c8658220h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[8i]()                                                     | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IExpr<Vector256<sbyte>> expr)                                       | 0f 1f 44 00 00 48 b8 c8 5d 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
62        | 7ff7c8658250h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[16u]()                                                    | LiteralExpr<Vector256<ushort>> eval<ushort>(IExpr<Vector256<ushort>> expr)                                    | 0f 1f 44 00 00 48 b8 b0 5e 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
63        | 7ff7c8658280h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[16i]()                                                    | LiteralExpr<Vector256<short>> eval<short>(IExpr<Vector256<short>> expr)                                       | 0f 1f 44 00 00 48 b8 e0 62 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
64        | 7ff7c86582b0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[32u]()                                                    | LiteralExpr<Vector256<uint>> eval<uint>(IExpr<Vector256<uint>> expr)                                          | 0f 1f 44 00 00 48 b8 c8 63 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
65        | 7ff7c86582e0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[32i]()                                                    | LiteralExpr<Vector256<int>> eval<int>(IExpr<Vector256<int>> expr)                                             | 0f 1f 44 00 00 48 b8 b0 64 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
66        | 7ff7c8658310h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[64u]()                                                    | LiteralExpr<Vector256<ulong>> eval<ulong>(IExpr<Vector256<ulong>> expr)                                       | 0f 1f 44 00 00 48 b8 88 7f 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
67        | 7ff7c8658340h   | 1303    | hex://logix/logic.engine?eval#eval_vector_expr256_g[64i]()                                                    | LiteralExpr<Vector256<long>> eval<long>(IExpr<Vector256<long>> expr)                                          | 0f 1f 44 00 00 48 b8 98 65 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 d3 d2 c0 5e 5e 00 09 e8 cb d2 c0 5e 5e 01 08 e8 c3 d2 c0 5e 5e 02 07 e8 bb d2 c0 5e 5e 03 06 e8 b3 d2 c0 5e 5e 04 05 e8 ab d2 c0 5e 5e 05 04 e8 a3 d2 c0 5e 5e 06 03 e8 9b d2 c0 5e 5e 07 02 e8 93 d2 c0 5e 5e 08 01 e8 8b d2 c0 5e 5e 09 00 60 8e ab c8 f7 7f 00 00 e8 7b d2 c0 5e 5e 00 09 e8 73 d2 c0 5e 5e 01 08 e8 6b d2 c0 5e 5e 02 07 e8 63 d2 c0 5e 5e 03 06 e8 5b d2 c0 5e 5e 04 05 e8 53 d2 c0 5e 5e 05 04 e8 4b d2 c0 5e 5e 06 03 e8 43 d2 c0 5e 5e 07 02 e8 3b d2 c0 5e 5e 08 01 e8 33 d2 c0 5e 5e 09 00 f8 91 ab c8 f7 7f 00 00 e8 23 d2 c0 5e 5e 00 00 a0 93 ab c8 f7 7f 00 00 e8 13 d2 c0 5e 5e 00 0a e8 0b d2 c0 5e 5e 01 09 e8 03 d2 c0 5e 5e 02 08 e8 fb d1 c0 5e 5e 03 07 e8 f3 d1 c0 5e 5e 04 06 e8 eb d1 c0 5e 5e 05 05 e8 e3 d1 c0 5e 5e 06 04 e8 db d1 c0 5e 5e 07 03 e8 d3 d1 c0 5e 5e 08 02 e8 cb d1 c0 5e 5e 09 01 e8 c3 d1 c0 5e 5e 0a 00 00 94 ab c8 f7 7f 00 00 e8 b3 d1 c0 5e 5e 00 00 98 95 ab c8 f7 7f 00 00 e8 a3 d1 c0 5e 5e 00 00 68 96 ab c8 f7 7f 00 00 e8 93 d1 c0 5e 5e 00 00 c8 96 ab c8 f7 7f 00 00 e8 83 d1 c0 5e 5e 00 00 28 97 ab c8 f7 7f 00 00 e8 73 d1 c0 5e 5e 00 09 e8 6b d1 c0 5e 5e 01 08 e8 63 d1 c0 5e 5e 02 07 e8 5b d1 c0 5e 5e 03 06 e8 53 d1 c0 5e 5e 04 05 e8 4b d1 c0 5e 5e 05 04 e8 43 d1 c0 5e 5e 06 03 e8 3b d1 c0 5e 5e 07 02 e8 33 d1 c0 5e 5e 08 01 e8 2b d1 c0 5e 5e 09 00 b8 97 ab c8 f7 7f 00 00 e8 1b d1 c0 5e 5e 00 00 60 99 ab c8 f7 7f 00 00 e8 0b d1 c0 5e 5e 00 09 e8 03 d1 c0 5e 5e 01 08 e8 fb d0 c0 5e 5e 02 07 e8 f3 d0 c0 5e 5e 03 06 e8 eb d0 c0 5e 5e 04 05 e8 e3 d0 c0 5e 5e 05 04 e8 db d0 c0 5e 5e 06 03 e8 d3 d0 c0 5e 5e 07 02 e8 cb d0 c0 5e 5e 08 01 e8 c3 d0 c0 5e 5e 09 00 f0 99 ab c8 f7 7f 00 00 e8 b3 d0 c0 5e 5e 00 00 98 9b ab c8 f7 7f 00 00 e8 a3 d0 c0 5e 5e 00 09 e8 9b d0 c0 5e 5e 01 08 e8 93 d0 c0 5e 5e 02 07 e8 8b d0 c0 5e 5e 03 06 e8 83 d0 c0 5e 5e 04 05 e8 7b d0 c0 5e 5e 05 04 e8 73 d0 c0 5e 5e 06 03 e8 6b d0 c0 5e 5e 07 02 e8 63 d0 c0 5e 5e 08 01 e8 5b d0 c0 5e 5e 09 00 28 9c ab c8 f7 7f 00 00 e8 4b d0 c0 5e 5e 00 00 d0 9d ab c8 f7 7f 00 00 e8 3b d0 c0 5e 5e 00 09 e8 33 d0 c0 5e 5e 01 08 e8 2b d0 c0 5e 5e 02 07 e8 23 d0 c0 5e 5e 03 06 e8 1b d0 c0 5e 5e 04 05 e8 13 d0 c0 5e 5e 05 04 e8 0b d0 c0 5e 5e 06 03 e8 03 d0 c0 5e 5e 07 02 e8 fb cf c0 5e 5e 08 01 e8 f3 cf c0 5e 5e 09 00 60 9e ab c8 f7 7f 00 00 e8 e3 cf c0 5e 5e 00 00 08 a0 ab c8 f7 7f 00 00 e8 d3 cf c0 5e 5e 00 09 e8 cb cf c0 5e 5e 01 08 e8 c3 cf c0 5e 5e 02 07 e8 bb cf c0 5e 5e 03 06 e8 b3 cf c0 5e 5e 04 05 e8 ab cf c0 5e 5e 05 04 e8 a3 cf c0 5e 5e 06 03 e8 9b cf c0 5e 5e 07 02 e8 93 cf c0 5e 5e 08 01 e8 8b cf c0 5e 5e 09 00 98 a0 ab c8 f7 7f 00 00 e8 7b cf c0 5e 5e 00 00 40 a2 ab c8 f7 7f 00 00 e8 6b cf c0 5e 5e 00 09 e8 63 cf c0 5e 5e 01 08 e8 5b cf c0 5e 5e 02 07 e8 53 cf c0 5e 5e 03 06 e8 4b cf c0 5e 5e 04 05 e8 43 cf c0 5e 5e 05 04 e8 3b cf c0 5e 5e 06 03 e8 33 cf c0 5e 5e 07 02 e8 2b cf c0 5e 5e 08 01 e8 23 cf c0 5e 5e 09 00 d0 a2 ab c8 f7 7f 00 00 e8 13 cf c0 5e 5e 00 00 78 a4 ab c8 f7 7f 00 00 e8 03 cf c0 5e 5e 00 00 d8 a4 ab c8 f7 7f 00 00 e8 f3 ce c0 5e 5e 00 00 38 a5 ab c8 f7 7f 00 00 e8 e3 ce c0 5e 5e 00 00 08 a9 ab c8 f7 7f 00 00 40 f9 aa c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 10 ea 72 c7 f7 7f 00 00 ba 02 00 00 00 e8 4d e6 c0 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 49 fc ff ff 48 8b ce e8 01 bc ff ff 0f b6 40 08 0f b6 c0 3c ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 58 fa aa c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 72 c7 f7 7f 00 00 ba 02 00 00 00 e8 dd e5 c0 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 e1 fc ff ff 48 8b ce e8 71 bc ff ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
68        | 7ff7c8658770h   | 231     | hex://logix/logic.engine?satisfied#satisfied_g[8u](8u,8u)                                                     | bit satisfied<byte>(ComparisonExpr<byte> expr, byte a, byte b)                                                | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 10 ea 72 c7 f7 7f 00 00 ba 02 00 00 00 e8 4d e6 c0 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 49 fc ff ff 48 8b ce e8 01 bc ff ff 0f b6 40 08 0f b6 c0 3c ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 58 fa aa c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 72 c7 f7 7f 00 00 ba 02 00 00 00 e8 dd e5 c0 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 e1 fc ff ff 48 8b ce e8 71 bc ff ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
69        | 7ff7c86587e0h   | 119     | hex://logix/logic.engine?satisfied#satisfied_g[8i](8i,8i)                                                     | bit satisfied<sbyte>(ComparisonExpr<sbyte> expr, sbyte a, sbyte b)                                            | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 72 c7 f7 7f 00 00 ba 02 00 00 00 e8 dd e5 c0 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 e1 fc ff ff 48 8b ce e8 71 bc ff ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
70        | 7ff7c8658860h   | 119     | hex://logix/logic.engine?satisfied#satisfied_g[16u](16u,16u)                                                  | bit satisfied<ushort>(ComparisonExpr<ushort> expr, ushort a, ushort b)                                        | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 70 da 15 c8 f7 7f 00 00 ba 02 00 00 00 e8 5d e5 c0 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 c8 fc ff ff 48 8b ce e8 a0 bc ff ff 0f b7 40 08 0f b7 c0 0f b7 c0 3d ff ff 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
71        | 7ff7c86588e0h   | 119     | hex://logix/logic.engine?satisfied#satisfied_g[16i](16i,16i)                                                  | bit satisfied<short>(ComparisonExpr<short> expr, short a, short b)                                            | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 a0 59 3c c8 f7 7f 00 00 ba 02 00 00 00 e8 dd e4 c0 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 b0 fc ff ff 48 8b ce e8 d0 bc ff ff 48 0f bf 40 08 48 0f bf c0 48 0f bf c0 3d ff 7f 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
72        | 7ff7c8658960h   | 1368    | hex://logix/logic.engine?satisfied#satisfied_g[32u](32u,32u)                                                  | bit satisfied<uint>(ComparisonExpr<uint> expr, uint a, uint b)                                                | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 08 ca 15 c8 f7 7f 00 00 ba 02 00 00 00 e8 5d e4 c0 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 9a fc ff ff 48 8b ce e8 02 bd ff ff 8b 40 08 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 b8 fe aa c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 48 5f 7f c7 f7 7f 00 00 ba 02 00 00 00 e8 ed e3 c0 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 92 fc ff ff 48 8b ce e8 32 bd ff ff 8b 40 08 3d ff ff ff 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 20 00 ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 60 74 ad c7 f7 7f 00 00 ba 02 00 00 00 e8 7c e3 c0 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 87 fc ff ff 48 8b ce e8 b7 fc ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 8b cb c0 5e 5e 00 09 e8 83 cb c0 5e 5e 01 08 e8 7b cb c0 5e 5e 02 07 e8 73 cb c0 5e 5e 03 06 e8 6b cb c0 5e 5e 04 05 e8 63 cb c0 5e 5e 05 04 e8 5b cb c0 5e 5e 06 03 e8 53 cb c0 5e 5e 07 02 e8 4b cb c0 5e 5e 08 01 e8 43 cb c0 5e 5e 09 00 c8 a5 ab c8 f7 7f 00 00 e8 33 cb c0 5e 5e 00 0c e8 2b cb c0 5e 5e 01 0b e8 23 cb c0 5e 5e 02 0a e8 1b cb c0 5e 5e 03 09 e8 13 cb c0 5e 5e 04 08 e8 0b cb c0 5e 5e 05 07 e8 03 cb c0 5e 5e 06 06 e8 fb ca c0 5e 5e 07 05 e8 f3 ca c0 5e 5e 08 04 e8 eb ca c0 5e 5e 09 03 e8 e3 ca c0 5e 5e 0a 02 e8 db ca c0 5e 5e 0b 01 e8 d3 ca c0 5e 5e 0c 00 80 a7 ab c8 f7 7f 00 00 e8 c3 ca c0 5e 5e 00 09 e8 bb ca c0 5e 5e 01 08 e8 b3 ca c0 5e 5e 02 07 e8 ab ca c0 5e 5e 03 06 e8 a3 ca c0 5e 5e 04 05 e8 9b ca c0 5e 5e 05 04 e8 93 ca c0 5e 5e 06 03 e8 8b ca c0 5e 5e 07 02 e8 83 ca c0 5e 5e 08 01 e8 7b ca c0 5e 5e 09 00 e8 a9 ab c8 f7 7f 00 00 e8 6b ca c0 5e 5e 00 03 e8 63 ca c0 5e 5e 01 02 e8 5b ca c0 5e 5e 02 01 e8 53 ca c0 5e 5e 03 00 80 ab ab c8 f7 7f 00 00 e8 43 ca c0 5e 5e 00 00 f0 ac ab c8 f7 7f 00 00 e8 33 ca c0 5e 5e 00 09 e8 2b ca c0 5e 5e 01 08 e8 23 ca c0 5e 5e 02 07 e8 1b ca c0 5e 5e 03 06 e8 13 ca c0 5e 5e 04 05 e8 0b ca c0 5e 5e 05 04 e8 03 ca c0 5e 5e 06 03 e8 fb c9 c0 5e 5e 07 02 e8 f3 c9 c0 5e 5e 08 01 e8 eb c9 c0 5e 5e 09 00 80 ad ab c8 f7 7f 00 00 e8 db c9 c0 5e 5e 00 03 e8 d3 c9 c0 5e 5e 03 02 e8 cb c9 c0 5e 5e 06 01 e8 c3 c9 c0 5e 5e 09 00 60 b0 ab c8 f7 7f 00 00 e8 b3 c9 c0 5e 5e 00 00 30 b1 ab c8 f7 7f 00 00 e8 a3 c9 c0 5e 5e 00 0a e8 9b c9 c0 5e 5e 01 09 e8 93 c9 c0 5e 5e 02 08 e8 8b c9 c0 5e 5e 03 07 e8 83 c9 c0 5e 5e 04 06 e8 7b c9 c0 5e 5e 05 05 e8 73 c9 c0 5e 5e 06 04 e8 6b c9 c0 5e 5e 07 03 e8 63 c9 c0 5e 5e 08 02 e8 5b c9 c0 5e 5e 09 01 e8 53 c9 c0 5e 5e 0a 00 90 b1 ab c8 f7 7f 00 00 e8 43 c9 c0 5e 5e 00 00 10 b3 ab c8 f7 7f 00 00 e8 33 c9 c0 5e 5e 00 00 e0 b3 ab c8 f7 7f 00 00 e8 23 c9 c0 5e 5e 00 00 40 b4 ab c8 f7 7f 00 00 e8 13 c9 c0 5e 5e 00 00 a0 b4 ab c8 f7 7f 00 00 e8 03 c9 c0 5e 5e 00 09 e8 fb c8 c0 5e 5e 01 08 e8 f3 c8 c0 5e 5e 02 07 e8 eb c8 c0 5e 5e 03 06 e8 e3 c8 c0 5e 5e 04 05 e8 db c8 c0 5e 5e 05 04 e8 d3 c8 c0 5e 5e 06 03 e8 cb c8 c0 5e 5e 07 02 e8 c3 c8 c0 5e 5e 08 01 e8 bb c8 c0 5e 5e 09 00 30 b5 ab c8 f7 7f 00 00 e8 ab c8 c0 5e 5e 00 03 e8 a3 c8 c0 5e 5e 03 02 e8 9b c8 c0 5e 5e 06 01 e8 93 c8 c0 5e 5e 09 00 10 b8 ab c8 f7 7f 00 00 e8 83 c8 c0 5e 5e 00 00 e0 b8 ab c8 f7 7f 00 00 e8 73 c8 c0 5e 5e 00 09 e8 6b c8 c0 5e 5e 01 08 e8 63 c8 c0 5e 5e 02 07 e8 5b c8 c0 5e 5e 03 06 e8 53 c8 c0 5e 5e 04 05 e8 4b c8 c0 5e 5e 05 04 e8 43 c8 c0 5e 5e 06 03 e8 3b c8 c0 5e 5e 07 02 e8 33 c8 c0 5e 5e 08 01 e8 2b c8 c0 5e 5e 09 00 70 b9 ab c8 f7 7f 00 00 e8 1b c8 c0 5e 5e 00 03 e8 13 c8 c0 5e 5e 03 02 e8 0b c8 c0 5e 5e 06 01 e8 03 c8 c0 5e 5e 09 00 50 bc ab c8 f7 7f 00 00 e8 f3 c7 c0 5e 5e 00 00 20 bd ab c8 f7 7f 00 00 e8 e3 c7 c0 5e 5e 00 09 e8 db c7 c0 5e 5e 01 08 e8 d3 c7 c0 5e 5e 02 07 e8 cb c7 c0 5e 5e 03 06 e8 c3 c7 c0 5e 5e 04 05 e8 bb c7 c0 5e 5e 05 04 e8 b3 c7 c0 5e 5e 06 03 e8 ab c7 c0 5e 5e 07 02 e8 a3 c7 c0 5e 5e 08 01 e8 9b c7 c0 5e 5e 09 00 b0 bd ab c8 f7 7f 00 00 00 00 00 00 00 00 00 00
73        | 7ff7c86589d0h   | 1256    | hex://logix/logic.engine?satisfied#satisfied_g[32i](32i,32i)                                                  | bit satisfied<int>(ComparisonExpr<int> expr, int a, int b)                                                    | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 48 5f 7f c7 f7 7f 00 00 ba 02 00 00 00 e8 ed e3 c0 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 92 fc ff ff 48 8b ce e8 32 bd ff ff 8b 40 08 3d ff ff ff 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 20 00 ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 60 74 ad c7 f7 7f 00 00 ba 02 00 00 00 e8 7c e3 c0 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 87 fc ff ff 48 8b ce e8 b7 fc ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 8b cb c0 5e 5e 00 09 e8 83 cb c0 5e 5e 01 08 e8 7b cb c0 5e 5e 02 07 e8 73 cb c0 5e 5e 03 06 e8 6b cb c0 5e 5e 04 05 e8 63 cb c0 5e 5e 05 04 e8 5b cb c0 5e 5e 06 03 e8 53 cb c0 5e 5e 07 02 e8 4b cb c0 5e 5e 08 01 e8 43 cb c0 5e 5e 09 00 c8 a5 ab c8 f7 7f 00 00 e8 33 cb c0 5e 5e 00 0c e8 2b cb c0 5e 5e 01 0b e8 23 cb c0 5e 5e 02 0a e8 1b cb c0 5e 5e 03 09 e8 13 cb c0 5e 5e 04 08 e8 0b cb c0 5e 5e 05 07 e8 03 cb c0 5e 5e 06 06 e8 fb ca c0 5e 5e 07 05 e8 f3 ca c0 5e 5e 08 04 e8 eb ca c0 5e 5e 09 03 e8 e3 ca c0 5e 5e 0a 02 e8 db ca c0 5e 5e 0b 01 e8 d3 ca c0 5e 5e 0c 00 80 a7 ab c8 f7 7f 00 00 e8 c3 ca c0 5e 5e 00 09 e8 bb ca c0 5e 5e 01 08 e8 b3 ca c0 5e 5e 02 07 e8 ab ca c0 5e 5e 03 06 e8 a3 ca c0 5e 5e 04 05 e8 9b ca c0 5e 5e 05 04 e8 93 ca c0 5e 5e 06 03 e8 8b ca c0 5e 5e 07 02 e8 83 ca c0 5e 5e 08 01 e8 7b ca c0 5e 5e 09 00 e8 a9 ab c8 f7 7f 00 00 e8 6b ca c0 5e 5e 00 03 e8 63 ca c0 5e 5e 01 02 e8 5b ca c0 5e 5e 02 01 e8 53 ca c0 5e 5e 03 00 80 ab ab c8 f7 7f 00 00 e8 43 ca c0 5e 5e 00 00 f0 ac ab c8 f7 7f 00 00 e8 33 ca c0 5e 5e 00 09 e8 2b ca c0 5e 5e 01 08 e8 23 ca c0 5e 5e 02 07 e8 1b ca c0 5e 5e 03 06 e8 13 ca c0 5e 5e 04 05 e8 0b ca c0 5e 5e 05 04 e8 03 ca c0 5e 5e 06 03 e8 fb c9 c0 5e 5e 07 02 e8 f3 c9 c0 5e 5e 08 01 e8 eb c9 c0 5e 5e 09 00 80 ad ab c8 f7 7f 00 00 e8 db c9 c0 5e 5e 00 03 e8 d3 c9 c0 5e 5e 03 02 e8 cb c9 c0 5e 5e 06 01 e8 c3 c9 c0 5e 5e 09 00 60 b0 ab c8 f7 7f 00 00 e8 b3 c9 c0 5e 5e 00 00 30 b1 ab c8 f7 7f 00 00 e8 a3 c9 c0 5e 5e 00 0a e8 9b c9 c0 5e 5e 01 09 e8 93 c9 c0 5e 5e 02 08 e8 8b c9 c0 5e 5e 03 07 e8 83 c9 c0 5e 5e 04 06 e8 7b c9 c0 5e 5e 05 05 e8 73 c9 c0 5e 5e 06 04 e8 6b c9 c0 5e 5e 07 03 e8 63 c9 c0 5e 5e 08 02 e8 5b c9 c0 5e 5e 09 01 e8 53 c9 c0 5e 5e 0a 00 90 b1 ab c8 f7 7f 00 00 e8 43 c9 c0 5e 5e 00 00 10 b3 ab c8 f7 7f 00 00 e8 33 c9 c0 5e 5e 00 00 e0 b3 ab c8 f7 7f 00 00 e8 23 c9 c0 5e 5e 00 00 40 b4 ab c8 f7 7f 00 00 e8 13 c9 c0 5e 5e 00 00 a0 b4 ab c8 f7 7f 00 00 e8 03 c9 c0 5e 5e 00 09 e8 fb c8 c0 5e 5e 01 08 e8 f3 c8 c0 5e 5e 02 07 e8 eb c8 c0 5e 5e 03 06 e8 e3 c8 c0 5e 5e 04 05 e8 db c8 c0 5e 5e 05 04 e8 d3 c8 c0 5e 5e 06 03 e8 cb c8 c0 5e 5e 07 02 e8 c3 c8 c0 5e 5e 08 01 e8 bb c8 c0 5e 5e 09 00 30 b5 ab c8 f7 7f 00 00 e8 ab c8 c0 5e 5e 00 03 e8 a3 c8 c0 5e 5e 03 02 e8 9b c8 c0 5e 5e 06 01 e8 93 c8 c0 5e 5e 09 00 10 b8 ab c8 f7 7f 00 00 e8 83 c8 c0 5e 5e 00 00 e0 b8 ab c8 f7 7f 00 00 e8 73 c8 c0 5e 5e 00 09 e8 6b c8 c0 5e 5e 01 08 e8 63 c8 c0 5e 5e 02 07 e8 5b c8 c0 5e 5e 03 06 e8 53 c8 c0 5e 5e 04 05 e8 4b c8 c0 5e 5e 05 04 e8 43 c8 c0 5e 5e 06 03 e8 3b c8 c0 5e 5e 07 02 e8 33 c8 c0 5e 5e 08 01 e8 2b c8 c0 5e 5e 09 00 70 b9 ab c8 f7 7f 00 00 e8 1b c8 c0 5e 5e 00 03 e8 13 c8 c0 5e 5e 03 02 e8 0b c8 c0 5e 5e 06 01 e8 03 c8 c0 5e 5e 09 00 50 bc ab c8 f7 7f 00 00 e8 f3 c7 c0 5e 5e 00 00 20 bd ab c8 f7 7f 00 00 e8 e3 c7 c0 5e 5e 00 09 e8 db c7 c0 5e 5e 01 08 e8 d3 c7 c0 5e 5e 02 07 e8 cb c7 c0 5e 5e 03 06 e8 c3 c7 c0 5e 5e 04 05 e8 bb c7 c0 5e 5e 05 04 e8 b3 c7 c0 5e 5e 06 03 e8 ab c7 c0 5e 5e 07 02 e8 a3 c7 c0 5e 5e 08 01 e8 9b c7 c0 5e 5e 09 00 b0 bd ab c8 f7 7f 00 00 00 00 00 00 00 00 00 00
74        | 7ff7c8658a40h   | 1144    | hex://logix/logic.engine?satisfied#satisfied_g[64u](64u,64u)                                                  | bit satisfied<ulong>(ComparisonExpr<ulong> expr, ulong a, ulong b)                                            | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 60 74 ad c7 f7 7f 00 00 ba 02 00 00 00 e8 7c e3 c0 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 87 fc ff ff 48 8b ce e8 b7 fc ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 8b cb c0 5e 5e 00 09 e8 83 cb c0 5e 5e 01 08 e8 7b cb c0 5e 5e 02 07 e8 73 cb c0 5e 5e 03 06 e8 6b cb c0 5e 5e 04 05 e8 63 cb c0 5e 5e 05 04 e8 5b cb c0 5e 5e 06 03 e8 53 cb c0 5e 5e 07 02 e8 4b cb c0 5e 5e 08 01 e8 43 cb c0 5e 5e 09 00 c8 a5 ab c8 f7 7f 00 00 e8 33 cb c0 5e 5e 00 0c e8 2b cb c0 5e 5e 01 0b e8 23 cb c0 5e 5e 02 0a e8 1b cb c0 5e 5e 03 09 e8 13 cb c0 5e 5e 04 08 e8 0b cb c0 5e 5e 05 07 e8 03 cb c0 5e 5e 06 06 e8 fb ca c0 5e 5e 07 05 e8 f3 ca c0 5e 5e 08 04 e8 eb ca c0 5e 5e 09 03 e8 e3 ca c0 5e 5e 0a 02 e8 db ca c0 5e 5e 0b 01 e8 d3 ca c0 5e 5e 0c 00 80 a7 ab c8 f7 7f 00 00 e8 c3 ca c0 5e 5e 00 09 e8 bb ca c0 5e 5e 01 08 e8 b3 ca c0 5e 5e 02 07 e8 ab ca c0 5e 5e 03 06 e8 a3 ca c0 5e 5e 04 05 e8 9b ca c0 5e 5e 05 04 e8 93 ca c0 5e 5e 06 03 e8 8b ca c0 5e 5e 07 02 e8 83 ca c0 5e 5e 08 01 e8 7b ca c0 5e 5e 09 00 e8 a9 ab c8 f7 7f 00 00 e8 6b ca c0 5e 5e 00 03 e8 63 ca c0 5e 5e 01 02 e8 5b ca c0 5e 5e 02 01 e8 53 ca c0 5e 5e 03 00 80 ab ab c8 f7 7f 00 00 e8 43 ca c0 5e 5e 00 00 f0 ac ab c8 f7 7f 00 00 e8 33 ca c0 5e 5e 00 09 e8 2b ca c0 5e 5e 01 08 e8 23 ca c0 5e 5e 02 07 e8 1b ca c0 5e 5e 03 06 e8 13 ca c0 5e 5e 04 05 e8 0b ca c0 5e 5e 05 04 e8 03 ca c0 5e 5e 06 03 e8 fb c9 c0 5e 5e 07 02 e8 f3 c9 c0 5e 5e 08 01 e8 eb c9 c0 5e 5e 09 00 80 ad ab c8 f7 7f 00 00 e8 db c9 c0 5e 5e 00 03 e8 d3 c9 c0 5e 5e 03 02 e8 cb c9 c0 5e 5e 06 01 e8 c3 c9 c0 5e 5e 09 00 60 b0 ab c8 f7 7f 00 00 e8 b3 c9 c0 5e 5e 00 00 30 b1 ab c8 f7 7f 00 00 e8 a3 c9 c0 5e 5e 00 0a e8 9b c9 c0 5e 5e 01 09 e8 93 c9 c0 5e 5e 02 08 e8 8b c9 c0 5e 5e 03 07 e8 83 c9 c0 5e 5e 04 06 e8 7b c9 c0 5e 5e 05 05 e8 73 c9 c0 5e 5e 06 04 e8 6b c9 c0 5e 5e 07 03 e8 63 c9 c0 5e 5e 08 02 e8 5b c9 c0 5e 5e 09 01 e8 53 c9 c0 5e 5e 0a 00 90 b1 ab c8 f7 7f 00 00 e8 43 c9 c0 5e 5e 00 00 10 b3 ab c8 f7 7f 00 00 e8 33 c9 c0 5e 5e 00 00 e0 b3 ab c8 f7 7f 00 00 e8 23 c9 c0 5e 5e 00 00 40 b4 ab c8 f7 7f 00 00 e8 13 c9 c0 5e 5e 00 00 a0 b4 ab c8 f7 7f 00 00 e8 03 c9 c0 5e 5e 00 09 e8 fb c8 c0 5e 5e 01 08 e8 f3 c8 c0 5e 5e 02 07 e8 eb c8 c0 5e 5e 03 06 e8 e3 c8 c0 5e 5e 04 05 e8 db c8 c0 5e 5e 05 04 e8 d3 c8 c0 5e 5e 06 03 e8 cb c8 c0 5e 5e 07 02 e8 c3 c8 c0 5e 5e 08 01 e8 bb c8 c0 5e 5e 09 00 30 b5 ab c8 f7 7f 00 00 e8 ab c8 c0 5e 5e 00 03 e8 a3 c8 c0 5e 5e 03 02 e8 9b c8 c0 5e 5e 06 01 e8 93 c8 c0 5e 5e 09 00 10 b8 ab c8 f7 7f 00 00 e8 83 c8 c0 5e 5e 00 00 e0 b8 ab c8 f7 7f 00 00 e8 73 c8 c0 5e 5e 00 09 e8 6b c8 c0 5e 5e 01 08 e8 63 c8 c0 5e 5e 02 07 e8 5b c8 c0 5e 5e 03 06 e8 53 c8 c0 5e 5e 04 05 e8 4b c8 c0 5e 5e 05 04 e8 43 c8 c0 5e 5e 06 03 e8 3b c8 c0 5e 5e 07 02 e8 33 c8 c0 5e 5e 08 01 e8 2b c8 c0 5e 5e 09 00 70 b9 ab c8 f7 7f 00 00 e8 1b c8 c0 5e 5e 00 03 e8 13 c8 c0 5e 5e 03 02 e8 0b c8 c0 5e 5e 06 01 e8 03 c8 c0 5e 5e 09 00 50 bc ab c8 f7 7f 00 00 e8 f3 c7 c0 5e 5e 00 00 20 bd ab c8 f7 7f 00 00 e8 e3 c7 c0 5e 5e 00 09 e8 db c7 c0 5e 5e 01 08 e8 d3 c7 c0 5e 5e 02 07 e8 cb c7 c0 5e 5e 03 06 e8 c3 c7 c0 5e 5e 04 05 e8 bb c7 c0 5e 5e 05 04 e8 b3 c7 c0 5e 5e 06 03 e8 ab c7 c0 5e 5e 07 02 e8 a3 c7 c0 5e 5e 08 01 e8 9b c7 c0 5e 5e 09 00 b0 bd ab c8 f7 7f 00 00 00 00 00 00 00 00 00 00
75        | 7ff7c8658ec0h   | 119     | hex://logix/logic.engine?satisfied#satisfied_g[64i](64i,64i)                                                  | bit satisfied<long>(ComparisonExpr<long> expr, long a, long b)                                                | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 08 68 3c c8 f7 7f 00 00 ba 02 00 00 00 e8 fc de c0 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 e7 fb ff ff 48 8b ce e8 df b8 ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
76        | 7ff7c8658f40h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[8u](v128x8u,v128x8u)                                           | bit satisfied<byte>(ComparisonExpr<Vector128<byte>> expr, Vector128<byte> a, Vector128<byte> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 78 af ab c8 f7 7f 00 00 ba 02 00 00 00 e8 79 de c0 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 b2 fc ff ff 48 8b cb e8 62 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
77        | 7ff7c8658fe0h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[8i](v128x8i,v128x8i)                                           | bit satisfied<sbyte>(ComparisonExpr<Vector128<sbyte>> expr, Vector128<sbyte> a, Vector128<sbyte> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 28 b7 ab c8 f7 7f 00 00 ba 02 00 00 00 e8 d9 dd c0 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 42 fd ff ff 48 8b cb e8 a2 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
78        | 7ff7c8659080h   | 1176    | hex://logix/logic.engine?satisfied#satisfied_g[16u](v128x16u,v128x16u)                                        | bit satisfied<ushort>(ComparisonExpr<Vector128<ushort>> expr, Vector128<ushort> a, Vector128<ushort> b)       | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 68 bb ab c8 f7 7f 00 00 ba 02 00 00 00 e8 39 dd c0 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 32 fd ff ff 48 8b cb e8 e2 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 23 c5 c0 5e 5e 00 03 e8 1b c5 c0 5e 5e 03 02 e8 13 c5 c0 5e 5e 06 01 e8 0b c5 c0 5e 5e 09 00 90 c0 ab c8 f7 7f 00 00 e8 fb c4 c0 5e 5e 00 00 60 c1 ab c8 f7 7f 00 00 e8 eb c4 c0 5e 5e 00 09 e8 e3 c4 c0 5e 5e 01 08 e8 db c4 c0 5e 5e 02 07 e8 d3 c4 c0 5e 5e 03 06 e8 cb c4 c0 5e 5e 04 05 e8 c3 c4 c0 5e 5e 05 04 e8 bb c4 c0 5e 5e 06 03 e8 b3 c4 c0 5e 5e 07 02 e8 ab c4 c0 5e 5e 08 01 e8 a3 c4 c0 5e 5e 09 00 f0 c1 ab c8 f7 7f 00 00 e8 93 c4 c0 5e 5e 00 03 e8 8b c4 c0 5e 5e 03 02 e8 83 c4 c0 5e 5e 06 01 e8 7b c4 c0 5e 5e 09 00 d0 c4 ab c8 f7 7f 00 00 e8 6b c4 c0 5e 5e 00 00 a0 c5 ab c8 f7 7f 00 00 e8 5b c4 c0 5e 5e 00 09 e8 53 c4 c0 5e 5e 01 08 e8 4b c4 c0 5e 5e 02 07 e8 43 c4 c0 5e 5e 03 06 e8 3b c4 c0 5e 5e 04 05 e8 33 c4 c0 5e 5e 05 04 e8 2b c4 c0 5e 5e 06 03 e8 23 c4 c0 5e 5e 07 02 e8 1b c4 c0 5e 5e 08 01 e8 13 c4 c0 5e 5e 09 00 30 c6 ab c8 f7 7f 00 00 e8 03 c4 c0 5e 5e 00 03 e8 fb c3 c0 5e 5e 03 02 e8 f3 c3 c0 5e 5e 06 01 e8 eb c3 c0 5e 5e 09 00 10 c9 ab c8 f7 7f 00 00 e8 db c3 c0 5e 5e 00 00 e0 c9 ab c8 f7 7f 00 00 e8 cb c3 c0 5e 5e 00 09 e8 c3 c3 c0 5e 5e 01 08 e8 bb c3 c0 5e 5e 02 07 e8 b3 c3 c0 5e 5e 03 06 e8 ab c3 c0 5e 5e 04 05 e8 a3 c3 c0 5e 5e 05 04 e8 9b c3 c0 5e 5e 06 03 e8 93 c3 c0 5e 5e 07 02 e8 8b c3 c0 5e 5e 08 01 e8 83 c3 c0 5e 5e 09 00 70 ca ab c8 f7 7f 00 00 e8 73 c3 c0 5e 5e 00 03 e8 6b c3 c0 5e 5e 01 02 e8 63 c3 c0 5e 5e 02 01 e8 5b c3 c0 5e 5e 03 00 08 cc ab c8 f7 7f 00 00 e8 4b c3 c0 5e 5e 00 03 e8 43 c3 c0 5e 5e 03 02 e8 3b c3 c0 5e 5e 06 01 e8 33 c3 c0 5e 5e 09 00 38 ce ab c8 f7 7f 00 00 e8 23 c3 c0 5e 5e 00 00 08 cf ab c8 f7 7f 00 00 e8 13 c3 c0 5e 5e 00 00 68 cf ab c8 f7 7f 00 00 e8 03 c3 c0 5e 5e 00 00 c8 cf ab c8 f7 7f 00 00 e8 f3 c2 c0 5e 5e 00 09 e8 eb c2 c0 5e 5e 01 08 e8 e3 c2 c0 5e 5e 02 07 e8 db c2 c0 5e 5e 03 06 e8 d3 c2 c0 5e 5e 04 05 e8 cb c2 c0 5e 5e 05 04 e8 c3 c2 c0 5e 5e 06 03 e8 bb c2 c0 5e 5e 07 02 e8 b3 c2 c0 5e 5e 08 01 e8 ab c2 c0 5e 5e 09 00 58 d0 ab c8 f7 7f 00 00 e8 9b c2 c0 5e 5e 00 03 e8 93 c2 c0 5e 5e 03 02 e8 8b c2 c0 5e 5e 06 01 e8 83 c2 c0 5e 5e 09 00 38 d3 ab c8 f7 7f 00 00 e8 73 c2 c0 5e 5e 00 0c e8 6b c2 c0 5e 5e 01 0b e8 63 c2 c0 5e 5e 02 0a e8 5b c2 c0 5e 5e 03 09 e8 53 c2 c0 5e 5e 04 08 e8 4b c2 c0 5e 5e 05 07 e8 43 c2 c0 5e 5e 06 06 e8 3b c2 c0 5e 5e 07 05 e8 33 c2 c0 5e 5e 08 04 e8 2b c2 c0 5e 5e 09 03 e8 23 c2 c0 5e 5e 0a 02 e8 1b c2 c0 5e 5e 0b 01 e8 13 c2 c0 5e 5e 0c 00 38 d4 ab c8 f7 7f 00 00 e8 03 c2 c0 5e 5e 00 00 c0 d5 ab c8 f7 7f 00 00 e8 f3 c1 c0 5e 5e 00 09 e8 eb c1 c0 5e 5e 01 08 e8 e3 c1 c0 5e 5e 02 07 e8 db c1 c0 5e 5e 03 06 e8 d3 c1 c0 5e 5e 04 05 e8 cb c1 c0 5e 5e 05 04 e8 c3 c1 c0 5e 5e 06 03 e8 bb c1 c0 5e 5e 07 02 e8 b3 c1 c0 5e 5e 08 01 e8 ab c1 c0 5e 5e 09 00 a0 d6 ab c8 f7 7f 00 00 e8 9b c1 c0 5e 5e 00 03 e8 93 c1 c0 5e 5e 01 02 e8 8b c1 c0 5e 5e 02 01 e8 83 c1 c0 5e 5e 03 00 38 d8 ab c8 f7 7f 00 00 e8 73 c1 c0 5e 5e 00 00 a8 d9 ab c8 f7 7f 00 00 e8 63 c1 c0 5e 5e 00 03 e8 5b c1 c0 5e 5e 03 02 e8 53 c1 c0 5e 5e 06 01 e8 4b c1 c0 5e 5e 09 00 18 dd ab c8 f7 7f 00 00 e8 3b c1 c0 5e 5e 00 00 e8 dd ab c8 f7 7f 00 00 00 00 00 00 00 00 00 00
79        | 7ff7c8659520h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[16i](v128x16i,v128x16i)                                        | bit satisfied<short>(ComparisonExpr<Vector128<short>> expr, Vector128<short> a, Vector128<short> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 a8 bf ab c8 f7 7f 00 00 ba 02 00 00 00 e8 99 d8 c0 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 22 f9 ff ff 48 8b cb e8 32 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
80        | 7ff7c86595c0h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[32u](v128x32u,v128x32u)                                        | bit satisfied<uint>(ComparisonExpr<Vector128<uint>> expr, Vector128<uint> a, Vector128<uint> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 e8 c3 ab c8 f7 7f 00 00 ba 02 00 00 00 e8 f9 d7 c0 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 7a fb ff ff 48 8b cb e8 72 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
81        | 7ff7c8659660h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[32i](v128x32i,v128x32i)                                        | bit satisfied<int>(ComparisonExpr<Vector128<int>> expr, Vector128<int> a, Vector128<int> b)                   | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 28 c8 ab c8 f7 7f 00 00 ba 02 00 00 00 e8 59 d7 c0 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 6a fb ff ff 48 8b cb e8 b2 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
82        | 7ff7c8659700h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[64u](v128x64u,v128x64u)                                        | bit satisfied<ulong>(ComparisonExpr<Vector128<ulong>> expr, Vector128<ulong> a, Vector128<ulong> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 50 cd ab c8 f7 7f 00 00 ba 02 00 00 00 e8 b9 d6 c0 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 5a fb ff ff 48 8b cb e8 da fb ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
83        | 7ff7c86597a0h   | 1335    | hex://logix/logic.engine?satisfied#satisfied_g[64i](v128x64i,v128x64i)                                        | bit satisfied<long>(ComparisonExpr<Vector128<long>> expr, Vector128<long> a, Vector128<long> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 50 d2 ab c8 f7 7f 00 00 ba 02 00 00 00 e8 19 d6 c0 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 92 fb ff ff 48 8b cb e8 52 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 03 be c0 5e 5e 00 09 e8 fb bd c0 5e 5e 01 08 e8 f3 bd c0 5e 5e 02 07 e8 eb bd c0 5e 5e 03 06 e8 e3 bd c0 5e 5e 04 05 e8 db bd c0 5e 5e 05 04 e8 d3 bd c0 5e 5e 06 03 e8 cb bd c0 5e 5e 07 02 e8 c3 bd c0 5e 5e 08 01 e8 bb bd c0 5e 5e 09 00 38 da ab c8 f7 7f 00 00 e8 ab bd c0 5e 5e 00 0a e8 a3 bd c0 5e 5e 01 09 e8 9b bd c0 5e 5e 02 08 e8 93 bd c0 5e 5e 03 07 e8 8b bd c0 5e 5e 04 06 e8 83 bd c0 5e 5e 05 05 e8 7b bd c0 5e 5e 06 04 e8 73 bd c0 5e 5e 07 03 e8 6b bd c0 5e 5e 08 02 e8 63 bd c0 5e 5e 09 01 e8 5b bd c0 5e 5e 0a 00 48 de ab c8 f7 7f 00 00 e8 4b bd c0 5e 5e 00 00 c8 df ab c8 f7 7f 00 00 e8 3b bd c0 5e 5e 00 00 98 e0 ab c8 f7 7f 00 00 e8 2b bd c0 5e 5e 00 00 f8 e0 ab c8 f7 7f 00 00 e8 1b bd c0 5e 5e 00 00 58 e1 ab c8 f7 7f 00 00 e8 0b bd c0 5e 5e 00 09 e8 03 bd c0 5e 5e 01 08 e8 fb bc c0 5e 5e 02 07 e8 f3 bc c0 5e 5e 03 06 e8 eb bc c0 5e 5e 04 05 e8 e3 bc c0 5e 5e 05 04 e8 db bc c0 5e 5e 06 03 e8 d3 bc c0 5e 5e 07 02 e8 cb bc c0 5e 5e 08 01 e8 c3 bc c0 5e 5e 09 00 e8 e1 ab c8 f7 7f 00 00 e8 b3 bc c0 5e 5e 00 03 e8 ab bc c0 5e 5e 03 02 e8 a3 bc c0 5e 5e 06 01 e8 9b bc c0 5e 5e 09 00 c8 e4 ab c8 f7 7f 00 00 e8 8b bc c0 5e 5e 00 00 98 e5 ab c8 f7 7f 00 00 e8 7b bc c0 5e 5e 00 09 e8 73 bc c0 5e 5e 01 08 e8 6b bc c0 5e 5e 02 07 e8 63 bc c0 5e 5e 03 06 e8 5b bc c0 5e 5e 04 05 e8 53 bc c0 5e 5e 05 04 e8 4b bc c0 5e 5e 06 03 e8 43 bc c0 5e 5e 07 02 e8 3b bc c0 5e 5e 08 01 e8 33 bc c0 5e 5e 09 00 28 e6 ab c8 f7 7f 00 00 e8 23 bc c0 5e 5e 00 03 e8 1b bc c0 5e 5e 03 02 e8 13 bc c0 5e 5e 06 01 e8 0b bc c0 5e 5e 09 00 08 e9 ab c8 f7 7f 00 00 e8 fb bb c0 5e 5e 00 00 d8 e9 ab c8 f7 7f 00 00 e8 eb bb c0 5e 5e 00 09 e8 e3 bb c0 5e 5e 01 08 e8 db bb c0 5e 5e 02 07 e8 d3 bb c0 5e 5e 03 06 e8 cb bb c0 5e 5e 04 05 e8 c3 bb c0 5e 5e 05 04 e8 bb bb c0 5e 5e 06 03 e8 b3 bb c0 5e 5e 07 02 e8 ab bb c0 5e 5e 08 01 e8 a3 bb c0 5e 5e 09 00 68 ea ab c8 f7 7f 00 00 e8 93 bb c0 5e 5e 00 03 e8 8b bb c0 5e 5e 03 02 e8 83 bb c0 5e 5e 06 01 e8 7b bb c0 5e 5e 09 00 48 ed ab c8 f7 7f 00 00 e8 6b bb c0 5e 5e 00 00 18 ee ab c8 f7 7f 00 00 e8 5b bb c0 5e 5e 00 09 e8 53 bb c0 5e 5e 01 08 e8 4b bb c0 5e 5e 02 07 e8 43 bb c0 5e 5e 03 06 e8 3b bb c0 5e 5e 04 05 e8 33 bb c0 5e 5e 05 04 e8 2b bb c0 5e 5e 06 03 e8 23 bb c0 5e 5e 07 02 e8 1b bb c0 5e 5e 08 01 e8 13 bb c0 5e 5e 09 00 a8 ee ab c8 f7 7f 00 00 e8 03 bb c0 5e 5e 00 03 e8 fb ba c0 5e 5e 03 02 e8 f3 ba c0 5e 5e 06 01 e8 eb ba c0 5e 5e 09 00 88 f1 ab c8 f7 7f 00 00 e8 db ba c0 5e 5e 00 00 58 f2 ab c8 f7 7f 00 00 e8 cb ba c0 5e 5e 00 09 e8 c3 ba c0 5e 5e 01 08 e8 bb ba c0 5e 5e 02 07 e8 b3 ba c0 5e 5e 03 06 e8 ab ba c0 5e 5e 04 05 e8 a3 ba c0 5e 5e 05 04 e8 9b ba c0 5e 5e 06 03 e8 93 ba c0 5e 5e 07 02 e8 8b ba c0 5e 5e 08 01 e8 83 ba c0 5e 5e 09 00 e8 f2 ab c8 f7 7f 00 00 e8 73 ba c0 5e 5e 00 03 e8 6b ba c0 5e 5e 03 02 e8 63 ba c0 5e 5e 06 01 e8 5b ba c0 5e 5e 09 00 c8 f5 ab c8 f7 7f 00 00 e8 4b ba c0 5e 5e 00 00 98 f6 ab c8 f7 7f 00 00 e8 3b ba c0 5e 5e 00 03 e8 33 ba c0 5e 5e 01 02 e8 2b ba c0 5e 5e 02 01 e8 23 ba c0 5e 5e 03 00 c0 f8 ab c8 f7 7f 00 00 e8 13 ba c0 5e 5e 00 00 c0 fb ab c8 f7 7f 00 00 10 17 ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 30 dc ab c8 f7 7f 00 00 ba 02 00 00 00 e8 79 d1 c0 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 a2 c2 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
84        | 7ff7c8659c40h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[8u](v256x8u,v256x8u)                                           | bit satisfied<byte>(ComparisonExpr<Vector256<byte>> expr, Vector256<byte> a, Vector256<byte> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 30 dc ab c8 f7 7f 00 00 ba 02 00 00 00 e8 79 d1 c0 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 a2 c2 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
85        | 7ff7c8659ce0h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[8i](v256x8i,v256x8i)                                           | bit satisfied<sbyte>(ComparisonExpr<Vector256<sbyte>> expr, Vector256<sbyte> a, Vector256<sbyte> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 e0 e3 ab c8 f7 7f 00 00 ba 02 00 00 00 e8 d9 d0 c0 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 3a fc ff ff 48 8b cb e8 12 c3 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
86        | 7ff7c8659d80h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[16u](v256x16u,v256x16u)                                        | bit satisfied<ushort>(ComparisonExpr<Vector256<ushort>> expr, Vector256<ushort> a, Vector256<ushort> b)       | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 20 e8 ab c8 f7 7f 00 00 ba 02 00 00 00 e8 39 d0 c0 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 2a fc ff ff 48 8b cb e8 82 c3 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
87        | 7ff7c8659e20h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[16i](v256x16i,v256x16i)                                        | bit satisfied<short>(ComparisonExpr<Vector256<short>> expr, Vector256<short> a, Vector256<short> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 60 ec ab c8 f7 7f 00 00 ba 02 00 00 00 e8 99 cf c0 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 1a fc ff ff 48 8b cb e8 02 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
88        | 7ff7c8659ec0h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[32u](v256x32u,v256x32u)                                        | bit satisfied<uint>(ComparisonExpr<Vector256<uint>> expr, Vector256<uint> a, Vector256<uint> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 a0 f0 ab c8 f7 7f 00 00 ba 02 00 00 00 e8 f9 ce c0 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 0a fc ff ff 48 8b cb e8 72 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
89        | 7ff7c8659f60h   | 480     | hex://logix/logic.engine?satisfied#satisfied_g[32i](v256x32i,v256x32i)                                        | bit satisfied<int>(ComparisonExpr<Vector256<int>> expr, Vector256<int> a, Vector256<int> b)                   | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 e0 f4 ab c8 f7 7f 00 00 ba 02 00 00 00 e8 59 ce c0 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 fa fb ff ff 48 8b cb e8 e2 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 43 b6 c0 5e 5e 00 09 e8 3b b6 c0 5e 5e 01 08 e8 33 b6 c0 5e 5e 02 07 e8 2b b6 c0 5e 5e 03 06 e8 23 b6 c0 5e 5e 04 05 e8 1b b6 c0 5e 5e 05 04 e8 13 b6 c0 5e 5e 06 03 e8 0b b6 c0 5e 5e 07 02 e8 03 b6 c0 5e 5e 08 01 e8 fb b5 c0 5e 5e 09 00 28 f7 ab c8 f7 7f 00 00 e8 eb b5 c0 5e 5e 00 03 e8 e3 b5 c0 5e 5e 03 02 e8 db b5 c0 5e 5e 06 01 e8 d3 b5 c0 5e 5e 09 00 f0 fa ab c8 f7 7f 00 00 e8 c3 b5 c0 5e 5e 00 00 20 fc ab c8 f7 7f 00 00 e8 b3 b5 c0 5e 5e 00 00 80 fc ab c8 f7 7f 00 00 e8 a3 b5 c0 5e 5e 00 09 e8 9b b5 c0 5e 5e 01 08 e8 93 b5 c0 5e 5e 02 07 e8 8b b5 c0 5e 5e 03 06 e8 83 b5 c0 5e 5e 04 05 e8 7b b5 c0 5e 5e 05 04 e8 73 b5 c0 5e 5e 06 03 e8 6b b5 c0 5e 5e 07 02 e8 63 b5 c0 5e 5e 08 01 e8 5b b5 c0 5e 5e 09 00 10 fd ab c8 f7 7f 00 00 e8 4b b5 c0 5e 5e 00 03 e8 43 b5 c0 5e 5e 03 02 e8 3b b5 c0 5e 5e 06 01 e8 33 b5 c0 5e 5e 09 00 40 00 ad c8 f7 7f 00 00 e8 23 b5 c0 5e 5e 00 00 28 03 ad c8 f7 7f 00 00 e8 13 b5 c0 5e 5e 00 00 a0 03 ad c8 f7 7f 00 00 00 00 00 00 00 00 00 00
90        | 7ff7c865a400h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[64u](v256x64u,v256x64u)                                        | bit satisfied<ulong>(ComparisonExpr<Vector256<ulong>> expr, Vector256<ulong> a, Vector256<ulong> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 08 fa ab c8 f7 7f 00 00 ba 02 00 00 00 e8 b9 c9 c0 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 2a fc ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
91        | 7ff7c865a4a0h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[64i](v256x64i,v256x64i)                                        | bit satisfied<long>(ComparisonExpr<Vector256<long>> expr, Vector256<long> a, Vector256<long> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 08 ff ab c8 f7 7f 00 00 ba 02 00 00 00 e8 19 c9 c0 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 b2 c4 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
92        | 7ff7c865a540h   | 35      | hex://logix/logic.engine?eval#eval_()                                                                         | bit eval(ILogicExpr expr)                                                                                     | 0f 1f 44 00 00 48 b8 50 34 de c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
93        | 7ff7c865a570h   | 607     | hex://logix/logic.engine?satisfied#satisfied_(1u,1u)                                                          | bit satisfied(ComparisonExpr expr, bit a, bit b)                                                              | 57 56 48 83 ec 28 48 8b f1 41 8b f8 8b 0e 48 8b 4e 18 83 79 08 00 76 48 48 8b 49 10 49 bb 30 0d 63 c7 f7 7f 00 00 39 09 ff 15 92 67 fd fe 48 8b 4e 18 83 79 08 01 76 28 48 8b 49 18 8b d7 49 bb 38 0d 63 c7 f7 7f 00 00 39 09 ff 15 78 67 fd fe 48 8b ce e8 88 8e 78 ff 90 48 83 c4 28 5e 5f c3 e8 fb 57 d3 5e cc 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 f0 23 ac c8 f7 7f 00 00 55 41 57 41 56 57 56 53 48 83 ec 48 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 4e 10 48 8b 5f 10 41 be b6 00 00 00 41 bf 01 00 00 00 8b 49 08 3b 4b 08 0f 85 cb 00 00 00 e8 a8 96 78 ff 48 8b c8 49 bb 40 0d 63 c7 f7 7f 00 00 39 09 ff 15 fb 66 fd fe 48 89 45 c8 48 8b 4d c8 49 bb 48 0d 63 c7 f7 7f 00 00 39 09 ff 15 e9 66 fd fe 85 c0 74 51 48 8b 4d c8 49 bb 50 0d 63 c7 f7 7f 00 00 39 09 ff 15 d7 66 fd fe 48 8b d0 48 8b ce e8 1c a4 78 ff 48 8b ce e8 c4 8d 78 ff 8b d8 48 8b cf e8 ba 8d 78 ff 3b d8 75 32 48 8b 4d c8 49 bb 48 0d 63 c7 f7 7f 00 00 39 09 ff 15 98 66 fd fe 85 c0 75 af 48 8b 4d c8 49 bb 58 0d 63 c7 f7 7f 00 00 39 09 ff 15 8e 66 fd fe eb 18 48 8b cc e8 7e 00 00 00 90 33 c0 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 8b f1 8b 7b 08 b9 19 02 00 00 48 ba 50 c0 ae c7 f7 7f 00 00 e8 a1 5e d3 5e 48 8b d8 b9 25 02 00 00 48 ba 50 c0 ae c7 f7 7f 00 00 e8 8a 5e d3 5e 4c 8b c8 4c 8d 45 d0 45 88 38 45 89 70 04 4c 8b c3 8b ce 8b d7 48 8b 45 d0 48 89 44 24 20 e8 17 a7 10 ff 48 8b c8 e8 af 11 b8 5e cc 55 41 57 41 56 57 56 53 48 83 ec 38 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c8 00 74 16 48 8b 4d c8 49 bb 58 0d 63 c7 f7 7f 00 00 39 09 ff 15 d0 65 fd fe 90 48 83 c4 38 5b 5e 5f 41 5e 41 5f 5d c3 00 00 19 0c 07 00 0c 82 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 19 0c 07 00 0c 62 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 00 00 00 00 00 00 00
94        | 7ff7c865a5f0h   | 479     | hex://logix/logic.engine?equal#equal_()                                                                       | bit equal(VariedLogicExpr a, VariedLogicExpr b)                                                               | 55 41 57 41 56 57 56 53 48 83 ec 48 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 4e 10 48 8b 5f 10 41 be b6 00 00 00 41 bf 01 00 00 00 8b 49 08 3b 4b 08 0f 85 cb 00 00 00 e8 a8 96 78 ff 48 8b c8 49 bb 40 0d 63 c7 f7 7f 00 00 39 09 ff 15 fb 66 fd fe 48 89 45 c8 48 8b 4d c8 49 bb 48 0d 63 c7 f7 7f 00 00 39 09 ff 15 e9 66 fd fe 85 c0 74 51 48 8b 4d c8 49 bb 50 0d 63 c7 f7 7f 00 00 39 09 ff 15 d7 66 fd fe 48 8b d0 48 8b ce e8 1c a4 78 ff 48 8b ce e8 c4 8d 78 ff 8b d8 48 8b cf e8 ba 8d 78 ff 3b d8 75 32 48 8b 4d c8 49 bb 48 0d 63 c7 f7 7f 00 00 39 09 ff 15 98 66 fd fe 85 c0 75 af 48 8b 4d c8 49 bb 58 0d 63 c7 f7 7f 00 00 39 09 ff 15 8e 66 fd fe eb 18 48 8b cc e8 7e 00 00 00 90 33 c0 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 8b f1 8b 7b 08 b9 19 02 00 00 48 ba 50 c0 ae c7 f7 7f 00 00 e8 a1 5e d3 5e 48 8b d8 b9 25 02 00 00 48 ba 50 c0 ae c7 f7 7f 00 00 e8 8a 5e d3 5e 4c 8b c8 4c 8d 45 d0 45 88 38 45 89 70 04 4c 8b c3 8b ce 8b d7 48 8b 45 d0 48 89 44 24 20 e8 17 a7 10 ff 48 8b c8 e8 af 11 b8 5e cc 55 41 57 41 56 57 56 53 48 83 ec 38 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c8 00 74 16 48 8b 4d c8 49 bb 58 0d 63 c7 f7 7f 00 00 39 09 ff 15 d0 65 fd fe 90 48 83 c4 38 5b 5e 5f 41 5e 41 5f 5d c3 00 00 19 0c 07 00 0c 82 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 19 0c 07 00 0c 62 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 00 00 00 00 00 00 00
