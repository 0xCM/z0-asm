Sequence  | Address         | Length  | Uri                                                                                                           | OpSig                                                                                                         | Data
0         | 7ff7c8648530h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[8u]()                                                         | bit eval<byte>(ILogicExpr<byte> expr)                                                                         | 0f 1f 44 00 00 48 b8 70 31 dd c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
1         | 7ff7c8648560h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[8i]()                                                         | bit eval<sbyte>(ILogicExpr<sbyte> expr)                                                                       | 0f 1f 44 00 00 48 b8 70 31 dd c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
2         | 7ff7c8648590h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[16u]()                                                        | bit eval<ushort>(ILogicExpr<ushort> expr)                                                                     | 0f 1f 44 00 00 48 b8 70 31 dd c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
3         | 7ff7c86485c0h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[16i]()                                                        | bit eval<short>(ILogicExpr<short> expr)                                                                       | 0f 1f 44 00 00 48 b8 70 31 dd c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
4         | 7ff7c86485f0h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[32u]()                                                        | bit eval<uint>(ILogicExpr<uint> expr)                                                                         | 0f 1f 44 00 00 48 b8 70 31 dd c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
5         | 7ff7c8648620h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[32i]()                                                        | bit eval<int>(ILogicExpr<int> expr)                                                                           | 0f 1f 44 00 00 48 b8 70 31 dd c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
6         | 7ff7c8648650h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[64u]()                                                        | bit eval<ulong>(ILogicExpr<ulong> expr)                                                                       | 0f 1f 44 00 00 48 b8 70 31 dd c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
7         | 7ff7c8648680h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[64i]()                                                        | bit eval<long>(ILogicExpr<long> expr)                                                                         | 0f 1f 44 00 00 48 b8 70 31 dd c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
8         | 7ff7c86486b0h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[8u]()                                                        | LiteralExpr<byte> eval<byte>(IExpr<byte> expr)                                                                | 0f 1f 44 00 00 48 b8 f8 81 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
9         | 7ff7c86486e0h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[8i]()                                                        | LiteralExpr<sbyte> eval<sbyte>(IExpr<sbyte> expr)                                                             | 0f 1f 44 00 00 48 b8 28 82 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
10        | 7ff7c8648710h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[16u]()                                                       | LiteralExpr<ushort> eval<ushort>(IExpr<ushort> expr)                                                          | 0f 1f 44 00 00 48 b8 48 82 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
11        | 7ff7c8648740h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[16i]()                                                       | LiteralExpr<short> eval<short>(IExpr<short> expr)                                                             | 0f 1f 44 00 00 48 b8 68 82 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
12        | 7ff7c8648770h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[32u]()                                                       | LiteralExpr<uint> eval<uint>(IExpr<uint> expr)                                                                | 0f 1f 44 00 00 48 b8 88 82 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
13        | 7ff7c86487a0h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[32i]()                                                       | LiteralExpr<int> eval<int>(IExpr<int> expr)                                                                   | 0f 1f 44 00 00 48 b8 a8 82 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
14        | 7ff7c86487d0h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[64u]()                                                       | LiteralExpr<ulong> eval<ulong>(IExpr<ulong> expr)                                                             | 0f 1f 44 00 00 48 b8 c8 82 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
15        | 7ff7c8648800h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[64i]()                                                       | LiteralExpr<long> eval<long>(IExpr<long> expr)                                                                | 0f 1f 44 00 00 48 b8 e8 82 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
16        | 7ff7c8648830h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[8u]()                                                           | LiteralExpr<byte> eval<byte>(IComparisonExpr<byte> expr)                                                      | 0f 1f 44 00 00 48 b8 20 5a 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
17        | 7ff7c8648860h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[8i]()                                                           | LiteralExpr<sbyte> eval<sbyte>(IComparisonExpr<sbyte> expr)                                                   | 0f 1f 44 00 00 48 b8 00 5b 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
18        | 7ff7c8648890h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[16u]()                                                          | LiteralExpr<ushort> eval<ushort>(IComparisonExpr<ushort> expr)                                                | 0f 1f 44 00 00 48 b8 b0 5b 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
19        | 7ff7c86488c0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[16i]()                                                          | LiteralExpr<short> eval<short>(IComparisonExpr<short> expr)                                                   | 0f 1f 44 00 00 48 b8 60 5c 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
20        | 7ff7c86488f0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[32u]()                                                          | LiteralExpr<uint> eval<uint>(IComparisonExpr<uint> expr)                                                      | 0f 1f 44 00 00 48 b8 10 5d 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
21        | 7ff7c8648920h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[32i]()                                                          | LiteralExpr<int> eval<int>(IComparisonExpr<int> expr)                                                         | 0f 1f 44 00 00 48 b8 b0 5d 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
22        | 7ff7c8648950h   | 1064    | hex://logix/logic.engine?eval#eval_cmp_expr_g[64i]()                                                          | LiteralExpr<long> eval<long>(IComparisonExpr<long> expr)                                                      | 0f 1f 44 00 00 48 b8 50 5e 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 c3 cc c1 5e 5e 00 0c e8 bb cc c1 5e 5e 01 0b e8 b3 cc c1 5e 5e 02 0a e8 ab cc c1 5e 5e 03 09 e8 a3 cc c1 5e 5e 04 08 e8 9b cc c1 5e 5e 05 07 e8 93 cc c1 5e 5e 06 06 e8 8b cc c1 5e 5e 07 05 e8 83 cc c1 5e 5e 08 04 e8 7b cc c1 5e 5e 09 03 e8 73 cc c1 5e 5e 0a 02 e8 6b cc c1 5e 5e 0b 01 e8 63 cc c1 5e 5e 0c 00 50 a5 aa c8 f7 7f 00 00 e8 53 cc c1 5e 5e 00 00 d8 a6 aa c8 f7 7f 00 00 e8 43 cc c1 5e 5e 00 0a e8 3b cc c1 5e 5e 01 09 e8 33 cc c1 5e 5e 02 08 e8 2b cc c1 5e 5e 03 07 e8 23 cc c1 5e 5e 04 06 e8 1b cc c1 5e 5e 05 05 e8 13 cc c1 5e 5e 06 04 e8 0b cc c1 5e 5e 07 03 e8 03 cc c1 5e 5e 08 02 e8 fb cb c1 5e 5e 09 01 e8 f3 cb c1 5e 5e 0a 00 88 a7 aa c8 f7 7f 00 00 e8 e3 cb c1 5e 5e 00 00 08 a9 aa c8 f7 7f 00 00 e8 d3 cb c1 5e 5e 00 03 e8 cb cb c1 5e 5e 01 02 e8 c3 cb c1 5e 5e 02 01 e8 bb cb c1 5e 5e 03 00 40 aa aa c8 f7 7f 00 00 e8 ab cb c1 5e 5e 00 00 38 ab aa c8 f7 7f 00 00 e8 9b cb c1 5e 5e 00 00 98 ab aa c8 f7 7f 00 00 e8 8b cb c1 5e 5e 00 00 f8 ab aa c8 f7 7f 00 00 e8 7b cb c1 5e 5e 00 00 58 ac aa c8 f7 7f 00 00 e8 6b cb c1 5e 5e 00 00 b8 ac aa c8 f7 7f 00 00 e8 5b cb c1 5e 5e 00 00 18 ad aa c8 f7 7f 00 00 e8 4b cb c1 5e 5e 00 00 78 ad aa c8 f7 7f 00 00 e8 3b cb c1 5e 5e 00 00 d8 ad aa c8 f7 7f 00 00 e8 2b cb c1 5e 5e 00 0c e8 23 cb c1 5e 5e 01 0b e8 1b cb c1 5e 5e 02 0a e8 13 cb c1 5e 5e 03 09 e8 0b cb c1 5e 5e 04 08 e8 03 cb c1 5e 5e 05 07 e8 fb ca c1 5e 5e 06 06 e8 f3 ca c1 5e 5e 07 05 e8 eb ca c1 5e 5e 08 04 e8 e3 ca c1 5e 5e 09 03 e8 db ca c1 5e 5e 0a 02 e8 d3 ca c1 5e 5e 0b 01 e8 cb ca c1 5e 5e 0c 00 68 ae aa c8 f7 7f 00 00 e8 bb ca c1 5e 5e 00 00 f0 af aa c8 f7 7f 00 00 e8 ab ca c1 5e 5e 00 0a e8 a3 ca c1 5e 5e 01 09 e8 9b ca c1 5e 5e 02 08 e8 93 ca c1 5e 5e 03 07 e8 8b ca c1 5e 5e 04 06 e8 83 ca c1 5e 5e 05 05 e8 7b ca c1 5e 5e 06 04 e8 73 ca c1 5e 5e 07 03 e8 6b ca c1 5e 5e 08 02 e8 63 ca c1 5e 5e 09 01 e8 5b ca c1 5e 5e 0a 00 a0 b0 aa c8 f7 7f 00 00 e8 4b ca c1 5e 5e 00 00 20 b2 aa c8 f7 7f 00 00 e8 3b ca c1 5e 5e 00 03 e8 33 ca c1 5e 5e 01 02 e8 2b ca c1 5e 5e 02 01 e8 23 ca c1 5e 5e 03 00 58 b3 aa c8 f7 7f 00 00 e8 13 ca c1 5e 5e 00 00 50 b4 aa c8 f7 7f 00 00 e8 03 ca c1 5e 5e 00 00 b0 b4 aa c8 f7 7f 00 00 e8 f3 c9 c1 5e 5e 00 00 10 b5 aa c8 f7 7f 00 00 e8 e3 c9 c1 5e 5e 00 00 70 b5 aa c8 f7 7f 00 00 e8 d3 c9 c1 5e 5e 00 00 d0 b5 aa c8 f7 7f 00 00 e8 c3 c9 c1 5e 5e 00 00 30 b6 aa c8 f7 7f 00 00 e8 b3 c9 c1 5e 5e 00 00 90 b6 aa c8 f7 7f 00 00 e8 a3 c9 c1 5e 5e 00 00 f0 b6 aa c8 f7 7f 00 00 e8 93 c9 c1 5e 5e 00 03 e8 8b c9 c1 5e 5e 01 02 e8 83 c9 c1 5e 5e 02 01 e8 7b c9 c1 5e 5e 03 00 c8 b7 aa c8 f7 7f 00 00 e8 6b c9 c1 5e 5e 00 00 38 b9 aa c8 f7 7f 00 00 e8 5b c9 c1 5e 5e 00 00 98 b9 aa c8 f7 7f 00 00 e8 4b c9 c1 5e 5e 00 00 f8 b9 aa c8 f7 7f 00 00 e8 3b c9 c1 5e 5e 00 00 58 ba aa c8 f7 7f 00 00 e8 2b c9 c1 5e 5e 00 00 b8 ba aa c8 f7 7f 00 00 e8 1b c9 c1 5e 5e 00 00 18 bb aa c8 f7 7f 00 00 e8 0b c9 c1 5e 5e 00 00 78 bb aa c8 f7 7f 00 00 e8 fb c8 c1 5e 5e 00 00 d8 bb aa c8 f7 7f 00 00 e8 eb c8 c1 5e 5e 00 00 d0 bd aa c8 f7 7f 00 00 e8 db c8 c1 5e 5e 00 00 a0 bf aa c8 f7 7f 00 00 00 00 00 00 00 00 00 00
23        | 7ff7c8648d80h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[8u]()                                                       | LiteralExpr<Vector128<byte>> eval<byte>(IComparisonExpr<Vector128<byte>> expr)                                | 0f 1f 44 00 00 48 b8 60 67 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
24        | 7ff7c8648db0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[8i]()                                                       | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IComparisonExpr<Vector128<sbyte>> expr)                             | 0f 1f 44 00 00 48 b8 50 6c 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
25        | 7ff7c8648de0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[16u]()                                                      | LiteralExpr<Vector128<ushort>> eval<ushort>(IComparisonExpr<Vector128<ushort>> expr)                          | 0f 1f 44 00 00 48 b8 30 6d 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
26        | 7ff7c8648e10h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[16i]()                                                      | LiteralExpr<Vector128<short>> eval<short>(IComparisonExpr<Vector128<short>> expr)                             | 0f 1f 44 00 00 48 b8 10 6e 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
27        | 7ff7c8648e40h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[32u]()                                                      | LiteralExpr<Vector128<uint>> eval<uint>(IComparisonExpr<Vector128<uint>> expr)                                | 0f 1f 44 00 00 48 b8 f0 6e 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
28        | 7ff7c8648e70h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[32i]()                                                      | LiteralExpr<Vector128<int>> eval<int>(IComparisonExpr<Vector128<int>> expr)                                   | 0f 1f 44 00 00 48 b8 e0 73 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
29        | 7ff7c8648ea0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[64i]()                                                      | LiteralExpr<Vector128<long>> eval<long>(IComparisonExpr<Vector128<long>> expr)                                | 0f 1f 44 00 00 48 b8 c0 74 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
30        | 7ff7c8648ed0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[8u]()                                                       | LiteralExpr<Vector256<byte>> eval<byte>(IComparisonExpr<Vector256<byte>> expr)                                | 0f 1f 44 00 00 48 b8 a0 75 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
31        | 7ff7c8648f00h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[8i]()                                                       | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IComparisonExpr<Vector256<sbyte>> expr)                             | 0f 1f 44 00 00 48 b8 c0 7a 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
32        | 7ff7c8648f30h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[16u]()                                                      | LiteralExpr<Vector256<ushort>> eval<ushort>(IComparisonExpr<Vector256<ushort>> expr)                          | 0f 1f 44 00 00 48 b8 d0 7b 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
33        | 7ff7c8648f60h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[16i]()                                                      | LiteralExpr<Vector256<short>> eval<short>(IComparisonExpr<Vector256<short>> expr)                             | 0f 1f 44 00 00 48 b8 e0 7c 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
34        | 7ff7c8648f90h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[32u]()                                                      | LiteralExpr<Vector256<uint>> eval<uint>(IComparisonExpr<Vector256<uint>> expr)                                | 0f 1f 44 00 00 48 b8 f0 7d 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
35        | 7ff7c8648fc0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[32i]()                                                      | LiteralExpr<Vector256<int>> eval<int>(IComparisonExpr<Vector256<int>> expr)                                   | 0f 1f 44 00 00 48 b8 00 7f 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
36        | 7ff7c8648ff0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[64i]()                                                      | LiteralExpr<Vector256<long>> eval<long>(IComparisonExpr<Vector256<long>> expr)                                | 0f 1f 44 00 00 48 b8 20 84 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
37        | 7ff7c8649020h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[8u]()                                                           | bit eval<byte>(IComparisonPred<byte> expr)                                                                    | 0f 1f 44 00 00 48 b8 00 63 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
38        | 7ff7c8649050h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[8i]()                                                           | bit eval<sbyte>(IComparisonPred<sbyte> expr)                                                                  | 0f 1f 44 00 00 48 b8 a0 63 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
39        | 7ff7c8649080h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[16u]()                                                          | bit eval<ushort>(IComparisonPred<ushort> expr)                                                                | 0f 1f 44 00 00 48 b8 40 64 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
40        | 7ff7c86490b0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[16i]()                                                          | bit eval<short>(IComparisonPred<short> expr)                                                                  | 0f 1f 44 00 00 48 b8 e0 64 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
41        | 7ff7c86490e0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[32u]()                                                          | bit eval<uint>(IComparisonPred<uint> expr)                                                                    | 0f 1f 44 00 00 48 b8 80 65 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
42        | 7ff7c8649110h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[32i]()                                                          | bit eval<int>(IComparisonPred<int> expr)                                                                      | 0f 1f 44 00 00 48 b8 20 66 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
43        | 7ff7c8649140h   | 1107    | hex://logix/logic.engine?eval#eval_cmp_pred_g[64i]()                                                          | bit eval<long>(IComparisonPred<long> expr)                                                                    | 0f 1f 44 00 00 48 b8 c0 66 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 d3 c4 c1 5e 5e 00 0a e8 cb c4 c1 5e 5e 01 09 e8 c3 c4 c1 5e 5e 02 08 e8 bb c4 c1 5e 5e 03 07 e8 b3 c4 c1 5e 5e 04 06 e8 ab c4 c1 5e 5e 05 05 e8 a3 c4 c1 5e 5e 06 04 e8 9b c4 c1 5e 5e 07 03 e8 93 c4 c1 5e 5e 08 02 e8 8b c4 c1 5e 5e 09 01 e8 83 c4 c1 5e 5e 0a 00 38 bc aa c8 f7 7f 00 00 e8 73 c4 c1 5e 5e 00 00 00 c0 aa c8 f7 7f 00 00 e8 63 c4 c1 5e 5e 00 00 60 c0 aa c8 f7 7f 00 00 e8 53 c4 c1 5e 5e 00 02 e8 4b c4 c1 5e 5e 01 01 e8 43 c4 c1 5e 5e 02 00 b0 c0 aa c8 f7 7f 00 00 e8 33 c4 c1 5e 5e 00 00 a0 c1 aa c8 f7 7f 00 00 e8 23 c4 c1 5e 5e 00 00 00 c2 aa c8 f7 7f 00 00 e8 13 c4 c1 5e 5e 00 02 e8 0b c4 c1 5e 5e 01 01 e8 03 c4 c1 5e 5e 02 00 50 c2 aa c8 f7 7f 00 00 e8 f3 c3 c1 5e 5e 00 00 40 c3 aa c8 f7 7f 00 00 e8 e3 c3 c1 5e 5e 00 00 a0 c3 aa c8 f7 7f 00 00 e8 d3 c3 c1 5e 5e 00 02 e8 cb c3 c1 5e 5e 01 01 e8 c3 c3 c1 5e 5e 02 00 f0 c3 aa c8 f7 7f 00 00 e8 b3 c3 c1 5e 5e 00 00 e0 c4 aa c8 f7 7f 00 00 e8 a3 c3 c1 5e 5e 00 00 40 c5 aa c8 f7 7f 00 00 e8 93 c3 c1 5e 5e 00 02 e8 8b c3 c1 5e 5e 01 01 e8 83 c3 c1 5e 5e 02 00 90 c5 aa c8 f7 7f 00 00 e8 73 c3 c1 5e 5e 00 00 80 c6 aa c8 f7 7f 00 00 e8 63 c3 c1 5e 5e 00 00 e0 c6 aa c8 f7 7f 00 00 e8 53 c3 c1 5e 5e 00 02 e8 4b c3 c1 5e 5e 01 01 e8 43 c3 c1 5e 5e 02 00 30 c7 aa c8 f7 7f 00 00 e8 33 c3 c1 5e 5e 00 00 20 c8 aa c8 f7 7f 00 00 e8 23 c3 c1 5e 5e 00 00 80 c8 aa c8 f7 7f 00 00 e8 13 c3 c1 5e 5e 00 02 e8 0b c3 c1 5e 5e 01 01 e8 03 c3 c1 5e 5e 02 00 d0 c8 aa c8 f7 7f 00 00 e8 f3 c2 c1 5e 5e 00 00 c0 c9 aa c8 f7 7f 00 00 e8 e3 c2 c1 5e 5e 00 00 20 ca aa c8 f7 7f 00 00 e8 d3 c2 c1 5e 5e 00 02 e8 cb c2 c1 5e 5e 01 01 e8 c3 c2 c1 5e 5e 02 00 70 ca aa c8 f7 7f 00 00 e8 b3 c2 c1 5e 5e 00 00 60 cb aa c8 f7 7f 00 00 e8 a3 c2 c1 5e 5e 00 00 c0 cb aa c8 f7 7f 00 00 e8 93 c2 c1 5e 5e 00 02 e8 8b c2 c1 5e 5e 01 01 e8 83 c2 c1 5e 5e 02 00 10 cc aa c8 f7 7f 00 00 e8 73 c2 c1 5e 5e 00 0c e8 6b c2 c1 5e 5e 01 0b e8 63 c2 c1 5e 5e 02 0a e8 5b c2 c1 5e 5e 03 09 e8 53 c2 c1 5e 5e 04 08 e8 4b c2 c1 5e 5e 05 07 e8 43 c2 c1 5e 5e 06 06 e8 3b c2 c1 5e 5e 07 05 e8 33 c2 c1 5e 5e 08 04 e8 2b c2 c1 5e 5e 09 03 e8 23 c2 c1 5e 5e 0a 02 e8 1b c2 c1 5e 5e 0b 01 e8 13 c2 c1 5e 5e 0c 00 10 cd aa c8 f7 7f 00 00 e8 03 c2 c1 5e 5e 00 00 98 ce aa c8 f7 7f 00 00 e8 f3 c1 c1 5e 5e 00 0a e8 eb c1 c1 5e 5e 01 09 e8 e3 c1 c1 5e 5e 02 08 e8 db c1 c1 5e 5e 03 07 e8 d3 c1 c1 5e 5e 04 06 e8 cb c1 c1 5e 5e 05 05 e8 c3 c1 c1 5e 5e 06 04 e8 bb c1 c1 5e 5e 07 03 e8 b3 c1 c1 5e 5e 08 02 e8 ab c1 c1 5e 5e 09 01 e8 a3 c1 c1 5e 5e 0a 00 48 cf aa c8 f7 7f 00 00 e8 93 c1 c1 5e 5e 00 00 c8 d0 aa c8 f7 7f 00 00 e8 83 c1 c1 5e 5e 00 00 10 d2 aa c8 f7 7f 00 00 e8 73 c1 c1 5e 5e 00 0a e8 6b c1 c1 5e 5e 01 09 e8 63 c1 c1 5e 5e 02 08 e8 5b c1 c1 5e 5e 03 07 e8 53 c1 c1 5e 5e 04 06 e8 4b c1 c1 5e 5e 05 05 e8 43 c1 c1 5e 5e 06 04 e8 3b c1 c1 5e 5e 07 03 e8 33 c1 c1 5e 5e 08 02 e8 2b c1 c1 5e 5e 09 01 e8 23 c1 c1 5e 5e 0a 00 70 d2 aa c8 f7 7f 00 00 e8 13 c1 c1 5e 5e 00 00 f0 d3 aa c8 f7 7f 00 00 e8 03 c1 c1 5e 5e 00 00 38 d5 aa c8 f7 7f 00 00 e8 f3 c0 c1 5e 5e 00 00 50 d7 aa c8 f7 7f 00 00 e8 e3 c0 c1 5e 5e 00 00 80 d9 aa c8 f7 7f 00 00 c8 e3 a9 c8 f7 7f 00 00 0f 1f 44 00 00 48 b8 c8 91 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
44        | 7ff7c8649570h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[8u]()                                                         | LiteralExpr<byte> eval<byte>(IArithmeticExpr<byte> expr)                                                      | 0f 1f 44 00 00 48 b8 c8 91 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
45        | 7ff7c86495a0h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[8i]()                                                         | LiteralExpr<sbyte> eval<sbyte>(IArithmeticExpr<sbyte> expr)                                                   | 0f 1f 44 00 00 48 b8 18 92 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
46        | 7ff7c86495d0h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[16u]()                                                        | LiteralExpr<ushort> eval<ushort>(IArithmeticExpr<ushort> expr)                                                | 0f 1f 44 00 00 48 b8 58 92 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
47        | 7ff7c8649600h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[16i]()                                                        | LiteralExpr<short> eval<short>(IArithmeticExpr<short> expr)                                                   | 0f 1f 44 00 00 48 b8 98 92 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
48        | 7ff7c8649630h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[32u]()                                                        | LiteralExpr<uint> eval<uint>(IArithmeticExpr<uint> expr)                                                      | 0f 1f 44 00 00 48 b8 d8 92 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
49        | 7ff7c8649660h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[32i]()                                                        | LiteralExpr<int> eval<int>(IArithmeticExpr<int> expr)                                                         | 0f 1f 44 00 00 48 b8 18 93 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
50        | 7ff7c8649690h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[64u]()                                                        | LiteralExpr<ulong> eval<ulong>(IArithmeticExpr<ulong> expr)                                                   | 0f 1f 44 00 00 48 b8 58 93 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
51        | 7ff7c86496c0h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[64i]()                                                        | LiteralExpr<long> eval<long>(IArithmeticExpr<long> expr)                                                      | 0f 1f 44 00 00 48 b8 98 93 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
52        | 7ff7c86496f0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[8u]()                                                     | LiteralExpr<Vector128<byte>> eval<byte>(IExpr<Vector128<byte>> expr)                                          | 0f 1f 44 00 00 48 b8 90 62 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
53        | 7ff7c8649720h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[8i]()                                                     | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IExpr<Vector128<sbyte>> expr)                                       | 0f 1f 44 00 00 48 b8 d0 68 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
54        | 7ff7c8649750h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[16u]()                                                    | LiteralExpr<Vector128<ushort>> eval<ushort>(IExpr<Vector128<ushort>> expr)                                    | 0f 1f 44 00 00 48 b8 b8 69 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
55        | 7ff7c8649780h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[16i]()                                                    | LiteralExpr<Vector128<short>> eval<short>(IExpr<Vector128<short>> expr)                                       | 0f 1f 44 00 00 48 b8 a0 6a 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
56        | 7ff7c86497b0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[32u]()                                                    | LiteralExpr<Vector128<uint>> eval<uint>(IExpr<Vector128<uint>> expr)                                          | 0f 1f 44 00 00 48 b8 88 6b 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
57        | 7ff7c86497e0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[32i]()                                                    | LiteralExpr<Vector128<int>> eval<int>(IExpr<Vector128<int>> expr)                                             | 0f 1f 44 00 00 48 b8 00 70 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
58        | 7ff7c8649810h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[64u]()                                                    | LiteralExpr<Vector128<ulong>> eval<ulong>(IExpr<Vector128<ulong>> expr)                                       | 0f 1f 44 00 00 48 b8 38 95 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
59        | 7ff7c8649840h   | 1064    | hex://logix/logic.engine?eval#eval_vector_expr128_g[64i]()                                                    | LiteralExpr<Vector128<long>> eval<long>(IExpr<Vector128<long>> expr)                                          | 0f 1f 44 00 00 48 b8 e8 70 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 d3 bd c1 5e 5e 00 0c e8 cb bd c1 5e 5e 01 0b e8 c3 bd c1 5e 5e 02 0a e8 bb bd c1 5e 5e 03 09 e8 b3 bd c1 5e 5e 04 08 e8 ab bd c1 5e 5e 05 07 e8 a3 bd c1 5e 5e 06 06 e8 9b bd c1 5e 5e 07 05 e8 93 bd c1 5e 5e 08 04 e8 8b bd c1 5e 5e 09 03 e8 83 bd c1 5e 5e 0a 02 e8 7b bd c1 5e 5e 0b 01 e8 73 bd c1 5e 5e 0c 00 c8 d5 aa c8 f7 7f 00 00 e8 63 bd c1 5e 5e 00 0a e8 5b bd c1 5e 5e 01 09 e8 53 bd c1 5e 5e 02 08 e8 4b bd c1 5e 5e 03 07 e8 43 bd c1 5e 5e 04 06 e8 3b bd c1 5e 5e 05 05 e8 33 bd c1 5e 5e 06 04 e8 2b bd c1 5e 5e 07 03 e8 23 bd c1 5e 5e 08 02 e8 1b bd c1 5e 5e 09 01 e8 13 bd c1 5e 5e 0a 00 00 d8 aa c8 f7 7f 00 00 e8 03 bd c1 5e 5e 00 00 c8 da aa c8 f7 7f 00 00 e8 f3 bc c1 5e 5e 00 0a e8 eb bc c1 5e 5e 01 09 e8 e3 bc c1 5e 5e 02 08 e8 db bc c1 5e 5e 03 07 e8 d3 bc c1 5e 5e 04 06 e8 cb bc c1 5e 5e 05 05 e8 c3 bc c1 5e 5e 06 04 e8 bb bc c1 5e 5e 07 03 e8 b3 bc c1 5e 5e 08 02 e8 ab bc c1 5e 5e 09 01 e8 a3 bc c1 5e 5e 0a 00 28 db aa c8 f7 7f 00 00 e8 93 bc c1 5e 5e 00 00 a8 dc aa c8 f7 7f 00 00 e8 83 bc c1 5e 5e 00 00 f0 dd aa c8 f7 7f 00 00 e8 73 bc c1 5e 5e 00 09 e8 6b bc c1 5e 5e 01 08 e8 63 bc c1 5e 5e 02 07 e8 5b bc c1 5e 5e 03 06 e8 53 bc c1 5e 5e 04 05 e8 4b bc c1 5e 5e 05 04 e8 43 bc c1 5e 5e 06 03 e8 3b bc c1 5e 5e 07 02 e8 33 bc c1 5e 5e 08 01 e8 2b bc c1 5e 5e 09 00 80 de aa c8 f7 7f 00 00 e8 1b bc c1 5e 5e 00 03 e8 13 bc c1 5e 5e 01 02 e8 0b bc c1 5e 5e 02 01 e8 03 bc c1 5e 5e 03 00 18 e0 aa c8 f7 7f 00 00 e8 f3 bb c1 5e 5e 00 00 88 e1 aa c8 f7 7f 00 00 e8 e3 bb c1 5e 5e 00 09 e8 db bb c1 5e 5e 01 08 e8 d3 bb c1 5e 5e 02 07 e8 cb bb c1 5e 5e 03 06 e8 c3 bb c1 5e 5e 04 05 e8 bb bb c1 5e 5e 05 04 e8 b3 bb c1 5e 5e 06 03 e8 ab bb c1 5e 5e 07 02 e8 a3 bb c1 5e 5e 08 01 e8 9b bb c1 5e 5e 09 00 18 e2 aa c8 f7 7f 00 00 e8 8b bb c1 5e 5e 00 00 c0 e3 aa c8 f7 7f 00 00 e8 7b bb c1 5e 5e 00 0a e8 73 bb c1 5e 5e 01 09 e8 6b bb c1 5e 5e 02 08 e8 63 bb c1 5e 5e 03 07 e8 5b bb c1 5e 5e 04 06 e8 53 bb c1 5e 5e 05 05 e8 4b bb c1 5e 5e 06 04 e8 43 bb c1 5e 5e 07 03 e8 3b bb c1 5e 5e 08 02 e8 33 bb c1 5e 5e 09 01 e8 2b bb c1 5e 5e 0a 00 20 e4 aa c8 f7 7f 00 00 e8 1b bb c1 5e 5e 00 00 b8 e5 aa c8 f7 7f 00 00 e8 0b bb c1 5e 5e 00 00 88 e6 aa c8 f7 7f 00 00 e8 fb ba c1 5e 5e 00 00 e8 e6 aa c8 f7 7f 00 00 e8 eb ba c1 5e 5e 00 00 48 e7 aa c8 f7 7f 00 00 e8 db ba c1 5e 5e 00 09 e8 d3 ba c1 5e 5e 01 08 e8 cb ba c1 5e 5e 02 07 e8 c3 ba c1 5e 5e 03 06 e8 bb ba c1 5e 5e 04 05 e8 b3 ba c1 5e 5e 05 04 e8 ab ba c1 5e 5e 06 03 e8 a3 ba c1 5e 5e 07 02 e8 9b ba c1 5e 5e 08 01 e8 93 ba c1 5e 5e 09 00 d8 e7 aa c8 f7 7f 00 00 e8 83 ba c1 5e 5e 00 00 80 e9 aa c8 f7 7f 00 00 e8 73 ba c1 5e 5e 00 09 e8 6b ba c1 5e 5e 01 08 e8 63 ba c1 5e 5e 02 07 e8 5b ba c1 5e 5e 03 06 e8 53 ba c1 5e 5e 04 05 e8 4b ba c1 5e 5e 05 04 e8 43 ba c1 5e 5e 06 03 e8 3b ba c1 5e 5e 07 02 e8 33 ba c1 5e 5e 08 01 e8 2b ba c1 5e 5e 09 00 10 ea aa c8 f7 7f 00 00 e8 1b ba c1 5e 5e 00 00 b8 eb aa c8 f7 7f 00 00 e8 0b ba c1 5e 5e 00 00 f0 ed aa c8 f7 7f 00 00 e8 fb b9 c1 5e 5e 00 00 28 f0 aa c8 f7 7f 00 00 e8 eb b9 c1 5e 5e 00 00 60 f2 aa c8 f7 7f 00 00 00 00 00 00 00 00 00 00
60        | 7ff7c8649c70h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[8u]()                                                     | LiteralExpr<Vector256<byte>> eval<byte>(IExpr<Vector256<byte>> expr)                                          | 0f 1f 44 00 00 48 b8 18 73 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
61        | 7ff7c8649ca0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[8i]()                                                     | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IExpr<Vector256<sbyte>> expr)                                       | 0f 1f 44 00 00 48 b8 f8 76 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
62        | 7ff7c8649cd0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[16u]()                                                    | LiteralExpr<Vector256<ushort>> eval<ushort>(IExpr<Vector256<ushort>> expr)                                    | 0f 1f 44 00 00 48 b8 e0 77 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
63        | 7ff7c8649d00h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[16i]()                                                    | LiteralExpr<Vector256<short>> eval<short>(IExpr<Vector256<short>> expr)                                       | 0f 1f 44 00 00 48 b8 c8 78 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
64        | 7ff7c8649d30h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[32u]()                                                    | LiteralExpr<Vector256<uint>> eval<uint>(IExpr<Vector256<uint>> expr)                                          | 0f 1f 44 00 00 48 b8 b0 79 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
65        | 7ff7c8649d60h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[32i]()                                                    | LiteralExpr<Vector256<int>> eval<int>(IExpr<Vector256<int>> expr)                                             | 0f 1f 44 00 00 48 b8 98 7a 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
66        | 7ff7c8649d90h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[64u]()                                                    | LiteralExpr<Vector256<ulong>> eval<ulong>(IExpr<Vector256<ulong>> expr)                                       | 0f 1f 44 00 00 48 b8 b8 99 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
67        | 7ff7c8649dc0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[64i]()                                                    | LiteralExpr<Vector256<long>> eval<long>(IExpr<Vector256<long>> expr)                                          | 0f 1f 44 00 00 48 b8 e8 80 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
68        | 7ff7c8649df0h   | 231     | hex://logix/logic.engine?satisfied#satisfied_g[8u](8u,8u)                                                     | bit satisfied<byte>(ComparisonExpr<byte> expr, byte a, byte b)                                                | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 10 ea 72 c7 f7 7f 00 00 ba 02 00 00 00 e8 cd cf c1 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 61 fc ff ff 48 8b ce e8 f1 bb ff ff 0f b6 40 08 0f b6 c0 3c ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 50 ff a9 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 72 c7 f7 7f 00 00 ba 02 00 00 00 e8 5d cf c1 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 f9 fc ff ff 48 8b ce e8 61 bc ff ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
69        | 7ff7c8649e60h   | 119     | hex://logix/logic.engine?satisfied#satisfied_g[8i](8i,8i)                                                     | bit satisfied<sbyte>(ComparisonExpr<sbyte> expr, sbyte a, sbyte b)                                            | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 72 c7 f7 7f 00 00 ba 02 00 00 00 e8 5d cf c1 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 f9 fc ff ff 48 8b ce e8 61 bc ff ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
70        | 7ff7c8649ee0h   | 1144    | hex://logix/logic.engine?satisfied#satisfied_g[16u](16u,16u)                                                  | bit satisfied<ushort>(ComparisonExpr<ushort> expr, ushort a, ushort b)                                        | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 e0 35 1b c8 f7 7f 00 00 ba 02 00 00 00 e8 dd ce c1 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 e0 fc ff ff 48 8b ce e8 90 bc ff ff 0f b7 40 08 0f b7 c0 0f b7 c0 3d ff ff 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 e3 b6 c1 5e 5e 00 09 e8 db b6 c1 5e 5e 01 08 e8 d3 b6 c1 5e 5e 02 07 e8 cb b6 c1 5e 5e 03 06 e8 c3 b6 c1 5e 5e 04 05 e8 bb b6 c1 5e 5e 05 04 e8 b3 b6 c1 5e 5e 06 03 e8 ab b6 c1 5e 5e 07 02 e8 a3 b6 c1 5e 5e 08 01 e8 9b b6 c1 5e 5e 09 00 48 ec aa c8 f7 7f 00 00 e8 8b b6 c1 5e 5e 00 09 e8 83 b6 c1 5e 5e 01 08 e8 7b b6 c1 5e 5e 02 07 e8 73 b6 c1 5e 5e 03 06 e8 6b b6 c1 5e 5e 04 05 e8 63 b6 c1 5e 5e 05 04 e8 5b b6 c1 5e 5e 06 03 e8 53 b6 c1 5e 5e 07 02 e8 4b b6 c1 5e 5e 08 01 e8 43 b6 c1 5e 5e 09 00 80 ee aa c8 f7 7f 00 00 e8 33 b6 c1 5e 5e 00 09 e8 2b b6 c1 5e 5e 01 08 e8 23 b6 c1 5e 5e 02 07 e8 1b b6 c1 5e 5e 03 06 e8 13 b6 c1 5e 5e 04 05 e8 0b b6 c1 5e 5e 05 04 e8 03 b6 c1 5e 5e 06 03 e8 fb b5 c1 5e 5e 07 02 e8 f3 b5 c1 5e 5e 08 01 e8 eb b5 c1 5e 5e 09 00 b8 f0 aa c8 f7 7f 00 00 e8 db b5 c1 5e 5e 00 09 e8 d3 b5 c1 5e 5e 01 08 e8 cb b5 c1 5e 5e 02 07 e8 c3 b5 c1 5e 5e 03 06 e8 bb b5 c1 5e 5e 04 05 e8 b3 b5 c1 5e 5e 05 04 e8 ab b5 c1 5e 5e 06 03 e8 a3 b5 c1 5e 5e 07 02 e8 9b b5 c1 5e 5e 08 01 e8 93 b5 c1 5e 5e 09 00 f0 f2 aa c8 f7 7f 00 00 e8 83 b5 c1 5e 5e 00 00 98 f4 aa c8 f7 7f 00 00 e8 73 b5 c1 5e 5e 00 00 f8 f4 aa c8 f7 7f 00 00 e8 63 b5 c1 5e 5e 00 00 58 f5 aa c8 f7 7f 00 00 e8 53 b5 c1 5e 5e 00 09 e8 4b b5 c1 5e 5e 01 08 e8 43 b5 c1 5e 5e 02 07 e8 3b b5 c1 5e 5e 03 06 e8 33 b5 c1 5e 5e 04 05 e8 2b b5 c1 5e 5e 05 04 e8 23 b5 c1 5e 5e 06 03 e8 1b b5 c1 5e 5e 07 02 e8 13 b5 c1 5e 5e 08 01 e8 0b b5 c1 5e 5e 09 00 e8 f5 aa c8 f7 7f 00 00 e8 fb b4 c1 5e 5e 00 0c e8 f3 b4 c1 5e 5e 01 0b e8 eb b4 c1 5e 5e 02 0a e8 e3 b4 c1 5e 5e 03 09 e8 db b4 c1 5e 5e 04 08 e8 d3 b4 c1 5e 5e 05 07 e8 cb b4 c1 5e 5e 06 06 e8 c3 b4 c1 5e 5e 07 05 e8 bb b4 c1 5e 5e 08 04 e8 b3 b4 c1 5e 5e 09 03 e8 ab b4 c1 5e 5e 0a 02 e8 a3 b4 c1 5e 5e 0b 01 e8 9b b4 c1 5e 5e 0c 00 a0 f7 aa c8 f7 7f 00 00 e8 8b b4 c1 5e 5e 00 00 28 f9 aa c8 f7 7f 00 00 e8 7b b4 c1 5e 5e 00 09 e8 73 b4 c1 5e 5e 01 08 e8 6b b4 c1 5e 5e 02 07 e8 63 b4 c1 5e 5e 03 06 e8 5b b4 c1 5e 5e 04 05 e8 53 b4 c1 5e 5e 05 04 e8 4b b4 c1 5e 5e 06 03 e8 43 b4 c1 5e 5e 07 02 e8 3b b4 c1 5e 5e 08 01 e8 33 b4 c1 5e 5e 09 00 08 fa aa c8 f7 7f 00 00 e8 23 b4 c1 5e 5e 00 03 e8 1b b4 c1 5e 5e 01 02 e8 13 b4 c1 5e 5e 02 01 e8 0b b4 c1 5e 5e 03 00 a0 fb aa c8 f7 7f 00 00 e8 fb b3 c1 5e 5e 00 00 10 fd aa c8 f7 7f 00 00 e8 eb b3 c1 5e 5e 00 09 e8 e3 b3 c1 5e 5e 01 08 e8 db b3 c1 5e 5e 02 07 e8 d3 b3 c1 5e 5e 03 06 e8 cb b3 c1 5e 5e 04 05 e8 c3 b3 c1 5e 5e 05 04 e8 bb b3 c1 5e 5e 06 03 e8 b3 b3 c1 5e 5e 07 02 e8 ab b3 c1 5e 5e 08 01 e8 a3 b3 c1 5e 5e 09 00 a0 fd aa c8 f7 7f 00 00 e8 93 b3 c1 5e 5e 00 03 e8 8b b3 c1 5e 5e 03 02 e8 83 b3 c1 5e 5e 06 01 e8 7b b3 c1 5e 5e 09 00 88 01 ac c8 f7 7f 00 00 e8 6b b3 c1 5e 5e 00 00 58 02 ac c8 f7 7f 00 00 e8 5b b3 c1 5e 5e 00 0a e8 53 b3 c1 5e 5e 01 09 e8 4b b3 c1 5e 5e 02 08 e8 43 b3 c1 5e 5e 03 07 e8 3b b3 c1 5e 5e 04 06 e8 33 b3 c1 5e 5e 05 05 e8 2b b3 c1 5e 5e 06 04 e8 23 b3 c1 5e 5e 07 03 e8 1b b3 c1 5e 5e 08 02 e8 13 b3 c1 5e 5e 09 01 e8 0b b3 c1 5e 5e 0a 00 b8 02 ac c8 f7 7f 00 00 e8 fb b2 c1 5e 5e 00 00 38 04 ac c8 f7 7f 00 00 00 00 00 00 00 00 00 00
71        | 7ff7c864a360h   | 119     | hex://logix/logic.engine?satisfied#satisfied_g[16i](16i,16i)                                                  | bit satisfied<short>(ComparisonExpr<short> expr, short a, short b)                                            | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 d0 b5 3b c8 f7 7f 00 00 ba 02 00 00 00 e8 5d ca c1 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 f0 fb ff ff 48 8b ce e8 c0 b8 ff ff 48 0f bf 40 08 48 0f bf c0 48 0f bf c0 3d ff 7f 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
72        | 7ff7c864a3e0h   | 1635    | hex://logix/logic.engine?satisfied#satisfied_g[32u](32u,32u)                                                  | bit satisfied<uint>(ComparisonExpr<uint> expr, uint a, uint b)                                                | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 78 25 1b c8 f7 7f 00 00 ba 02 00 00 00 e8 dd c9 c1 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 ca fb ff ff 48 8b ce e8 f2 b8 ff ff 8b 40 08 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 08 04 ab c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 48 5f 7f c7 f7 7f 00 00 ba 02 00 00 00 e8 6d c9 c1 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 b2 fb ff ff 48 8b ce e8 22 b9 ff ff 8b 40 08 3d ff ff ff 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 50 05 ab c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 d0 6e ac c7 f7 7f 00 00 ba 02 00 00 00 e8 fc c8 c1 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 97 fb ff ff 48 8b ce e8 c7 fb ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 68 06 ab c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 38 c4 3b c8 f7 7f 00 00 ba 02 00 00 00 e8 8c c8 c1 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 af fb ff ff 48 8b ce e8 df b8 ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 93 b0 c1 5e 5e 00 00 08 05 ac c8 f7 7f 00 00 e8 83 b0 c1 5e 5e 00 00 68 05 ac c8 f7 7f 00 00 e8 73 b0 c1 5e 5e 00 00 c8 05 ac c8 f7 7f 00 00 e8 63 b0 c1 5e 5e 00 09 e8 5b b0 c1 5e 5e 01 08 e8 53 b0 c1 5e 5e 02 07 e8 4b b0 c1 5e 5e 03 06 e8 43 b0 c1 5e 5e 04 05 e8 3b b0 c1 5e 5e 05 04 e8 33 b0 c1 5e 5e 06 03 e8 2b b0 c1 5e 5e 07 02 e8 23 b0 c1 5e 5e 08 01 e8 1b b0 c1 5e 5e 09 00 58 06 ac c8 f7 7f 00 00 e8 0b b0 c1 5e 5e 00 03 e8 03 b0 c1 5e 5e 03 02 e8 fb af c1 5e 5e 06 01 e8 f3 af c1 5e 5e 09 00 38 09 ac c8 f7 7f 00 00 e8 e3 af c1 5e 5e 00 00 08 0a ac c8 f7 7f 00 00 e8 d3 af c1 5e 5e 00 09 e8 cb af c1 5e 5e 01 08 e8 c3 af c1 5e 5e 02 07 e8 bb af c1 5e 5e 03 06 e8 b3 af c1 5e 5e 04 05 e8 ab af c1 5e 5e 05 04 e8 a3 af c1 5e 5e 06 03 e8 9b af c1 5e 5e 07 02 e8 93 af c1 5e 5e 08 01 e8 8b af c1 5e 5e 09 00 98 0a ac c8 f7 7f 00 00 e8 7b af c1 5e 5e 00 03 e8 73 af c1 5e 5e 03 02 e8 6b af c1 5e 5e 06 01 e8 63 af c1 5e 5e 09 00 78 0d ac c8 f7 7f 00 00 e8 53 af c1 5e 5e 00 00 48 0e ac c8 f7 7f 00 00 e8 43 af c1 5e 5e 00 09 e8 3b af c1 5e 5e 01 08 e8 33 af c1 5e 5e 02 07 e8 2b af c1 5e 5e 03 06 e8 23 af c1 5e 5e 04 05 e8 1b af c1 5e 5e 05 04 e8 13 af c1 5e 5e 06 03 e8 0b af c1 5e 5e 07 02 e8 03 af c1 5e 5e 08 01 e8 fb ae c1 5e 5e 09 00 d8 0e ac c8 f7 7f 00 00 e8 eb ae c1 5e 5e 00 03 e8 e3 ae c1 5e 5e 03 02 e8 db ae c1 5e 5e 06 01 e8 d3 ae c1 5e 5e 09 00 b8 11 ac c8 f7 7f 00 00 e8 c3 ae c1 5e 5e 00 00 88 12 ac c8 f7 7f 00 00 e8 b3 ae c1 5e 5e 00 09 e8 ab ae c1 5e 5e 01 08 e8 a3 ae c1 5e 5e 02 07 e8 9b ae c1 5e 5e 03 06 e8 93 ae c1 5e 5e 04 05 e8 8b ae c1 5e 5e 05 04 e8 83 ae c1 5e 5e 06 03 e8 7b ae c1 5e 5e 07 02 e8 73 ae c1 5e 5e 08 01 e8 6b ae c1 5e 5e 09 00 18 13 ac c8 f7 7f 00 00 e8 5b ae c1 5e 5e 00 03 e8 53 ae c1 5e 5e 03 02 e8 4b ae c1 5e 5e 06 01 e8 43 ae c1 5e 5e 09 00 f8 15 ac c8 f7 7f 00 00 e8 33 ae c1 5e 5e 00 00 c8 16 ac c8 f7 7f 00 00 e8 23 ae c1 5e 5e 00 09 e8 1b ae c1 5e 5e 01 08 e8 13 ae c1 5e 5e 02 07 e8 0b ae c1 5e 5e 03 06 e8 03 ae c1 5e 5e 04 05 e8 fb ad c1 5e 5e 05 04 e8 f3 ad c1 5e 5e 06 03 e8 eb ad c1 5e 5e 07 02 e8 e3 ad c1 5e 5e 08 01 e8 db ad c1 5e 5e 09 00 58 17 ac c8 f7 7f 00 00 e8 cb ad c1 5e 5e 00 03 e8 c3 ad c1 5e 5e 03 02 e8 bb ad c1 5e 5e 06 01 e8 b3 ad c1 5e 5e 09 00 38 1a ac c8 f7 7f 00 00 e8 a3 ad c1 5e 5e 00 00 08 1b ac c8 f7 7f 00 00 e8 93 ad c1 5e 5e 00 09 e8 8b ad c1 5e 5e 01 08 e8 83 ad c1 5e 5e 02 07 e8 7b ad c1 5e 5e 03 06 e8 73 ad c1 5e 5e 04 05 e8 6b ad c1 5e 5e 05 04 e8 63 ad c1 5e 5e 06 03 e8 5b ad c1 5e 5e 07 02 e8 53 ad c1 5e 5e 08 01 e8 4b ad c1 5e 5e 09 00 98 1b ac c8 f7 7f 00 00 e8 3b ad c1 5e 5e 00 03 e8 33 ad c1 5e 5e 01 02 e8 2b ad c1 5e 5e 02 01 e8 23 ad c1 5e 5e 03 00 30 1d ac c8 f7 7f 00 00 e8 13 ad c1 5e 5e 00 03 e8 0b ad c1 5e 5e 03 02 e8 03 ad c1 5e 5e 06 01 e8 fb ac c1 5e 5e 09 00 60 1f ac c8 f7 7f 00 00 e8 eb ac c1 5e 5e 00 00 30 20 ac c8 f7 7f 00 00 e8 db ac c1 5e 5e 00 00 90 20 ac c8 f7 7f 00 00 e8 cb ac c1 5e 5e 00 00 f0 20 ac c8 f7 7f 00 00 e8 bb ac c1 5e 5e 00 03 e8 b3 ac c1 5e 5e 03 02 e8 ab ac c1 5e 5e 06 01 e8 a3 ac c1 5e 5e 09 00 60 24 ac c8 f7 7f 00 00 40 0c ab c8 f7 7f 00 00 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 a0 00 ac c8 f7 7f 00 00 ba 02 00 00 00 e8 09 c4 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 8a f8 ff ff 48 8b cb e8 62 bd ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
73        | 7ff7c864a450h   | 1523    | hex://logix/logic.engine?satisfied#satisfied_g[32i](32i,32i)                                                  | bit satisfied<int>(ComparisonExpr<int> expr, int a, int b)                                                    | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 48 5f 7f c7 f7 7f 00 00 ba 02 00 00 00 e8 6d c9 c1 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 b2 fb ff ff 48 8b ce e8 22 b9 ff ff 8b 40 08 3d ff ff ff 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 50 05 ab c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 d0 6e ac c7 f7 7f 00 00 ba 02 00 00 00 e8 fc c8 c1 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 97 fb ff ff 48 8b ce e8 c7 fb ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 68 06 ab c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 38 c4 3b c8 f7 7f 00 00 ba 02 00 00 00 e8 8c c8 c1 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 af fb ff ff 48 8b ce e8 df b8 ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 93 b0 c1 5e 5e 00 00 08 05 ac c8 f7 7f 00 00 e8 83 b0 c1 5e 5e 00 00 68 05 ac c8 f7 7f 00 00 e8 73 b0 c1 5e 5e 00 00 c8 05 ac c8 f7 7f 00 00 e8 63 b0 c1 5e 5e 00 09 e8 5b b0 c1 5e 5e 01 08 e8 53 b0 c1 5e 5e 02 07 e8 4b b0 c1 5e 5e 03 06 e8 43 b0 c1 5e 5e 04 05 e8 3b b0 c1 5e 5e 05 04 e8 33 b0 c1 5e 5e 06 03 e8 2b b0 c1 5e 5e 07 02 e8 23 b0 c1 5e 5e 08 01 e8 1b b0 c1 5e 5e 09 00 58 06 ac c8 f7 7f 00 00 e8 0b b0 c1 5e 5e 00 03 e8 03 b0 c1 5e 5e 03 02 e8 fb af c1 5e 5e 06 01 e8 f3 af c1 5e 5e 09 00 38 09 ac c8 f7 7f 00 00 e8 e3 af c1 5e 5e 00 00 08 0a ac c8 f7 7f 00 00 e8 d3 af c1 5e 5e 00 09 e8 cb af c1 5e 5e 01 08 e8 c3 af c1 5e 5e 02 07 e8 bb af c1 5e 5e 03 06 e8 b3 af c1 5e 5e 04 05 e8 ab af c1 5e 5e 05 04 e8 a3 af c1 5e 5e 06 03 e8 9b af c1 5e 5e 07 02 e8 93 af c1 5e 5e 08 01 e8 8b af c1 5e 5e 09 00 98 0a ac c8 f7 7f 00 00 e8 7b af c1 5e 5e 00 03 e8 73 af c1 5e 5e 03 02 e8 6b af c1 5e 5e 06 01 e8 63 af c1 5e 5e 09 00 78 0d ac c8 f7 7f 00 00 e8 53 af c1 5e 5e 00 00 48 0e ac c8 f7 7f 00 00 e8 43 af c1 5e 5e 00 09 e8 3b af c1 5e 5e 01 08 e8 33 af c1 5e 5e 02 07 e8 2b af c1 5e 5e 03 06 e8 23 af c1 5e 5e 04 05 e8 1b af c1 5e 5e 05 04 e8 13 af c1 5e 5e 06 03 e8 0b af c1 5e 5e 07 02 e8 03 af c1 5e 5e 08 01 e8 fb ae c1 5e 5e 09 00 d8 0e ac c8 f7 7f 00 00 e8 eb ae c1 5e 5e 00 03 e8 e3 ae c1 5e 5e 03 02 e8 db ae c1 5e 5e 06 01 e8 d3 ae c1 5e 5e 09 00 b8 11 ac c8 f7 7f 00 00 e8 c3 ae c1 5e 5e 00 00 88 12 ac c8 f7 7f 00 00 e8 b3 ae c1 5e 5e 00 09 e8 ab ae c1 5e 5e 01 08 e8 a3 ae c1 5e 5e 02 07 e8 9b ae c1 5e 5e 03 06 e8 93 ae c1 5e 5e 04 05 e8 8b ae c1 5e 5e 05 04 e8 83 ae c1 5e 5e 06 03 e8 7b ae c1 5e 5e 07 02 e8 73 ae c1 5e 5e 08 01 e8 6b ae c1 5e 5e 09 00 18 13 ac c8 f7 7f 00 00 e8 5b ae c1 5e 5e 00 03 e8 53 ae c1 5e 5e 03 02 e8 4b ae c1 5e 5e 06 01 e8 43 ae c1 5e 5e 09 00 f8 15 ac c8 f7 7f 00 00 e8 33 ae c1 5e 5e 00 00 c8 16 ac c8 f7 7f 00 00 e8 23 ae c1 5e 5e 00 09 e8 1b ae c1 5e 5e 01 08 e8 13 ae c1 5e 5e 02 07 e8 0b ae c1 5e 5e 03 06 e8 03 ae c1 5e 5e 04 05 e8 fb ad c1 5e 5e 05 04 e8 f3 ad c1 5e 5e 06 03 e8 eb ad c1 5e 5e 07 02 e8 e3 ad c1 5e 5e 08 01 e8 db ad c1 5e 5e 09 00 58 17 ac c8 f7 7f 00 00 e8 cb ad c1 5e 5e 00 03 e8 c3 ad c1 5e 5e 03 02 e8 bb ad c1 5e 5e 06 01 e8 b3 ad c1 5e 5e 09 00 38 1a ac c8 f7 7f 00 00 e8 a3 ad c1 5e 5e 00 00 08 1b ac c8 f7 7f 00 00 e8 93 ad c1 5e 5e 00 09 e8 8b ad c1 5e 5e 01 08 e8 83 ad c1 5e 5e 02 07 e8 7b ad c1 5e 5e 03 06 e8 73 ad c1 5e 5e 04 05 e8 6b ad c1 5e 5e 05 04 e8 63 ad c1 5e 5e 06 03 e8 5b ad c1 5e 5e 07 02 e8 53 ad c1 5e 5e 08 01 e8 4b ad c1 5e 5e 09 00 98 1b ac c8 f7 7f 00 00 e8 3b ad c1 5e 5e 00 03 e8 33 ad c1 5e 5e 01 02 e8 2b ad c1 5e 5e 02 01 e8 23 ad c1 5e 5e 03 00 30 1d ac c8 f7 7f 00 00 e8 13 ad c1 5e 5e 00 03 e8 0b ad c1 5e 5e 03 02 e8 03 ad c1 5e 5e 06 01 e8 fb ac c1 5e 5e 09 00 60 1f ac c8 f7 7f 00 00 e8 eb ac c1 5e 5e 00 00 30 20 ac c8 f7 7f 00 00 e8 db ac c1 5e 5e 00 00 90 20 ac c8 f7 7f 00 00 e8 cb ac c1 5e 5e 00 00 f0 20 ac c8 f7 7f 00 00 e8 bb ac c1 5e 5e 00 03 e8 b3 ac c1 5e 5e 03 02 e8 ab ac c1 5e 5e 06 01 e8 a3 ac c1 5e 5e 09 00 60 24 ac c8 f7 7f 00 00 40 0c ab c8 f7 7f 00 00 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 a0 00 ac c8 f7 7f 00 00 ba 02 00 00 00 e8 09 c4 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 8a f8 ff ff 48 8b cb e8 62 bd ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
74        | 7ff7c864a4c0h   | 1411    | hex://logix/logic.engine?satisfied#satisfied_g[64u](64u,64u)                                                  | bit satisfied<ulong>(ComparisonExpr<ulong> expr, ulong a, ulong b)                                            | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 d0 6e ac c7 f7 7f 00 00 ba 02 00 00 00 e8 fc c8 c1 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 97 fb ff ff 48 8b ce e8 c7 fb ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 68 06 ab c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 38 c4 3b c8 f7 7f 00 00 ba 02 00 00 00 e8 8c c8 c1 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 af fb ff ff 48 8b ce e8 df b8 ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 93 b0 c1 5e 5e 00 00 08 05 ac c8 f7 7f 00 00 e8 83 b0 c1 5e 5e 00 00 68 05 ac c8 f7 7f 00 00 e8 73 b0 c1 5e 5e 00 00 c8 05 ac c8 f7 7f 00 00 e8 63 b0 c1 5e 5e 00 09 e8 5b b0 c1 5e 5e 01 08 e8 53 b0 c1 5e 5e 02 07 e8 4b b0 c1 5e 5e 03 06 e8 43 b0 c1 5e 5e 04 05 e8 3b b0 c1 5e 5e 05 04 e8 33 b0 c1 5e 5e 06 03 e8 2b b0 c1 5e 5e 07 02 e8 23 b0 c1 5e 5e 08 01 e8 1b b0 c1 5e 5e 09 00 58 06 ac c8 f7 7f 00 00 e8 0b b0 c1 5e 5e 00 03 e8 03 b0 c1 5e 5e 03 02 e8 fb af c1 5e 5e 06 01 e8 f3 af c1 5e 5e 09 00 38 09 ac c8 f7 7f 00 00 e8 e3 af c1 5e 5e 00 00 08 0a ac c8 f7 7f 00 00 e8 d3 af c1 5e 5e 00 09 e8 cb af c1 5e 5e 01 08 e8 c3 af c1 5e 5e 02 07 e8 bb af c1 5e 5e 03 06 e8 b3 af c1 5e 5e 04 05 e8 ab af c1 5e 5e 05 04 e8 a3 af c1 5e 5e 06 03 e8 9b af c1 5e 5e 07 02 e8 93 af c1 5e 5e 08 01 e8 8b af c1 5e 5e 09 00 98 0a ac c8 f7 7f 00 00 e8 7b af c1 5e 5e 00 03 e8 73 af c1 5e 5e 03 02 e8 6b af c1 5e 5e 06 01 e8 63 af c1 5e 5e 09 00 78 0d ac c8 f7 7f 00 00 e8 53 af c1 5e 5e 00 00 48 0e ac c8 f7 7f 00 00 e8 43 af c1 5e 5e 00 09 e8 3b af c1 5e 5e 01 08 e8 33 af c1 5e 5e 02 07 e8 2b af c1 5e 5e 03 06 e8 23 af c1 5e 5e 04 05 e8 1b af c1 5e 5e 05 04 e8 13 af c1 5e 5e 06 03 e8 0b af c1 5e 5e 07 02 e8 03 af c1 5e 5e 08 01 e8 fb ae c1 5e 5e 09 00 d8 0e ac c8 f7 7f 00 00 e8 eb ae c1 5e 5e 00 03 e8 e3 ae c1 5e 5e 03 02 e8 db ae c1 5e 5e 06 01 e8 d3 ae c1 5e 5e 09 00 b8 11 ac c8 f7 7f 00 00 e8 c3 ae c1 5e 5e 00 00 88 12 ac c8 f7 7f 00 00 e8 b3 ae c1 5e 5e 00 09 e8 ab ae c1 5e 5e 01 08 e8 a3 ae c1 5e 5e 02 07 e8 9b ae c1 5e 5e 03 06 e8 93 ae c1 5e 5e 04 05 e8 8b ae c1 5e 5e 05 04 e8 83 ae c1 5e 5e 06 03 e8 7b ae c1 5e 5e 07 02 e8 73 ae c1 5e 5e 08 01 e8 6b ae c1 5e 5e 09 00 18 13 ac c8 f7 7f 00 00 e8 5b ae c1 5e 5e 00 03 e8 53 ae c1 5e 5e 03 02 e8 4b ae c1 5e 5e 06 01 e8 43 ae c1 5e 5e 09 00 f8 15 ac c8 f7 7f 00 00 e8 33 ae c1 5e 5e 00 00 c8 16 ac c8 f7 7f 00 00 e8 23 ae c1 5e 5e 00 09 e8 1b ae c1 5e 5e 01 08 e8 13 ae c1 5e 5e 02 07 e8 0b ae c1 5e 5e 03 06 e8 03 ae c1 5e 5e 04 05 e8 fb ad c1 5e 5e 05 04 e8 f3 ad c1 5e 5e 06 03 e8 eb ad c1 5e 5e 07 02 e8 e3 ad c1 5e 5e 08 01 e8 db ad c1 5e 5e 09 00 58 17 ac c8 f7 7f 00 00 e8 cb ad c1 5e 5e 00 03 e8 c3 ad c1 5e 5e 03 02 e8 bb ad c1 5e 5e 06 01 e8 b3 ad c1 5e 5e 09 00 38 1a ac c8 f7 7f 00 00 e8 a3 ad c1 5e 5e 00 00 08 1b ac c8 f7 7f 00 00 e8 93 ad c1 5e 5e 00 09 e8 8b ad c1 5e 5e 01 08 e8 83 ad c1 5e 5e 02 07 e8 7b ad c1 5e 5e 03 06 e8 73 ad c1 5e 5e 04 05 e8 6b ad c1 5e 5e 05 04 e8 63 ad c1 5e 5e 06 03 e8 5b ad c1 5e 5e 07 02 e8 53 ad c1 5e 5e 08 01 e8 4b ad c1 5e 5e 09 00 98 1b ac c8 f7 7f 00 00 e8 3b ad c1 5e 5e 00 03 e8 33 ad c1 5e 5e 01 02 e8 2b ad c1 5e 5e 02 01 e8 23 ad c1 5e 5e 03 00 30 1d ac c8 f7 7f 00 00 e8 13 ad c1 5e 5e 00 03 e8 0b ad c1 5e 5e 03 02 e8 03 ad c1 5e 5e 06 01 e8 fb ac c1 5e 5e 09 00 60 1f ac c8 f7 7f 00 00 e8 eb ac c1 5e 5e 00 00 30 20 ac c8 f7 7f 00 00 e8 db ac c1 5e 5e 00 00 90 20 ac c8 f7 7f 00 00 e8 cb ac c1 5e 5e 00 00 f0 20 ac c8 f7 7f 00 00 e8 bb ac c1 5e 5e 00 03 e8 b3 ac c1 5e 5e 03 02 e8 ab ac c1 5e 5e 06 01 e8 a3 ac c1 5e 5e 09 00 60 24 ac c8 f7 7f 00 00 40 0c ab c8 f7 7f 00 00 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 a0 00 ac c8 f7 7f 00 00 ba 02 00 00 00 e8 09 c4 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 8a f8 ff ff 48 8b cb e8 62 bd ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
75        | 7ff7c864a530h   | 1299    | hex://logix/logic.engine?satisfied#satisfied_g[64i](64i,64i)                                                  | bit satisfied<long>(ComparisonExpr<long> expr, long a, long b)                                                | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 38 c4 3b c8 f7 7f 00 00 ba 02 00 00 00 e8 8c c8 c1 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 af fb ff ff 48 8b ce e8 df b8 ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 93 b0 c1 5e 5e 00 00 08 05 ac c8 f7 7f 00 00 e8 83 b0 c1 5e 5e 00 00 68 05 ac c8 f7 7f 00 00 e8 73 b0 c1 5e 5e 00 00 c8 05 ac c8 f7 7f 00 00 e8 63 b0 c1 5e 5e 00 09 e8 5b b0 c1 5e 5e 01 08 e8 53 b0 c1 5e 5e 02 07 e8 4b b0 c1 5e 5e 03 06 e8 43 b0 c1 5e 5e 04 05 e8 3b b0 c1 5e 5e 05 04 e8 33 b0 c1 5e 5e 06 03 e8 2b b0 c1 5e 5e 07 02 e8 23 b0 c1 5e 5e 08 01 e8 1b b0 c1 5e 5e 09 00 58 06 ac c8 f7 7f 00 00 e8 0b b0 c1 5e 5e 00 03 e8 03 b0 c1 5e 5e 03 02 e8 fb af c1 5e 5e 06 01 e8 f3 af c1 5e 5e 09 00 38 09 ac c8 f7 7f 00 00 e8 e3 af c1 5e 5e 00 00 08 0a ac c8 f7 7f 00 00 e8 d3 af c1 5e 5e 00 09 e8 cb af c1 5e 5e 01 08 e8 c3 af c1 5e 5e 02 07 e8 bb af c1 5e 5e 03 06 e8 b3 af c1 5e 5e 04 05 e8 ab af c1 5e 5e 05 04 e8 a3 af c1 5e 5e 06 03 e8 9b af c1 5e 5e 07 02 e8 93 af c1 5e 5e 08 01 e8 8b af c1 5e 5e 09 00 98 0a ac c8 f7 7f 00 00 e8 7b af c1 5e 5e 00 03 e8 73 af c1 5e 5e 03 02 e8 6b af c1 5e 5e 06 01 e8 63 af c1 5e 5e 09 00 78 0d ac c8 f7 7f 00 00 e8 53 af c1 5e 5e 00 00 48 0e ac c8 f7 7f 00 00 e8 43 af c1 5e 5e 00 09 e8 3b af c1 5e 5e 01 08 e8 33 af c1 5e 5e 02 07 e8 2b af c1 5e 5e 03 06 e8 23 af c1 5e 5e 04 05 e8 1b af c1 5e 5e 05 04 e8 13 af c1 5e 5e 06 03 e8 0b af c1 5e 5e 07 02 e8 03 af c1 5e 5e 08 01 e8 fb ae c1 5e 5e 09 00 d8 0e ac c8 f7 7f 00 00 e8 eb ae c1 5e 5e 00 03 e8 e3 ae c1 5e 5e 03 02 e8 db ae c1 5e 5e 06 01 e8 d3 ae c1 5e 5e 09 00 b8 11 ac c8 f7 7f 00 00 e8 c3 ae c1 5e 5e 00 00 88 12 ac c8 f7 7f 00 00 e8 b3 ae c1 5e 5e 00 09 e8 ab ae c1 5e 5e 01 08 e8 a3 ae c1 5e 5e 02 07 e8 9b ae c1 5e 5e 03 06 e8 93 ae c1 5e 5e 04 05 e8 8b ae c1 5e 5e 05 04 e8 83 ae c1 5e 5e 06 03 e8 7b ae c1 5e 5e 07 02 e8 73 ae c1 5e 5e 08 01 e8 6b ae c1 5e 5e 09 00 18 13 ac c8 f7 7f 00 00 e8 5b ae c1 5e 5e 00 03 e8 53 ae c1 5e 5e 03 02 e8 4b ae c1 5e 5e 06 01 e8 43 ae c1 5e 5e 09 00 f8 15 ac c8 f7 7f 00 00 e8 33 ae c1 5e 5e 00 00 c8 16 ac c8 f7 7f 00 00 e8 23 ae c1 5e 5e 00 09 e8 1b ae c1 5e 5e 01 08 e8 13 ae c1 5e 5e 02 07 e8 0b ae c1 5e 5e 03 06 e8 03 ae c1 5e 5e 04 05 e8 fb ad c1 5e 5e 05 04 e8 f3 ad c1 5e 5e 06 03 e8 eb ad c1 5e 5e 07 02 e8 e3 ad c1 5e 5e 08 01 e8 db ad c1 5e 5e 09 00 58 17 ac c8 f7 7f 00 00 e8 cb ad c1 5e 5e 00 03 e8 c3 ad c1 5e 5e 03 02 e8 bb ad c1 5e 5e 06 01 e8 b3 ad c1 5e 5e 09 00 38 1a ac c8 f7 7f 00 00 e8 a3 ad c1 5e 5e 00 00 08 1b ac c8 f7 7f 00 00 e8 93 ad c1 5e 5e 00 09 e8 8b ad c1 5e 5e 01 08 e8 83 ad c1 5e 5e 02 07 e8 7b ad c1 5e 5e 03 06 e8 73 ad c1 5e 5e 04 05 e8 6b ad c1 5e 5e 05 04 e8 63 ad c1 5e 5e 06 03 e8 5b ad c1 5e 5e 07 02 e8 53 ad c1 5e 5e 08 01 e8 4b ad c1 5e 5e 09 00 98 1b ac c8 f7 7f 00 00 e8 3b ad c1 5e 5e 00 03 e8 33 ad c1 5e 5e 01 02 e8 2b ad c1 5e 5e 02 01 e8 23 ad c1 5e 5e 03 00 30 1d ac c8 f7 7f 00 00 e8 13 ad c1 5e 5e 00 03 e8 0b ad c1 5e 5e 03 02 e8 03 ad c1 5e 5e 06 01 e8 fb ac c1 5e 5e 09 00 60 1f ac c8 f7 7f 00 00 e8 eb ac c1 5e 5e 00 00 30 20 ac c8 f7 7f 00 00 e8 db ac c1 5e 5e 00 00 90 20 ac c8 f7 7f 00 00 e8 cb ac c1 5e 5e 00 00 f0 20 ac c8 f7 7f 00 00 e8 bb ac c1 5e 5e 00 03 e8 b3 ac c1 5e 5e 03 02 e8 ab ac c1 5e 5e 06 01 e8 a3 ac c1 5e 5e 09 00 60 24 ac c8 f7 7f 00 00 40 0c ab c8 f7 7f 00 00 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 a0 00 ac c8 f7 7f 00 00 ba 02 00 00 00 e8 09 c4 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 8a f8 ff ff 48 8b cb e8 62 bd ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
76        | 7ff7c864a9b0h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[8u](v128x8u,v128x8u)                                           | bit satisfied<byte>(ComparisonExpr<Vector128<byte>> expr, Vector128<byte> a, Vector128<byte> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 a0 00 ac c8 f7 7f 00 00 ba 02 00 00 00 e8 09 c4 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 8a f8 ff ff 48 8b cb e8 62 bd ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
77        | 7ff7c864aa50h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[8i](v128x8i,v128x8i)                                           | bit satisfied<sbyte>(ComparisonExpr<Vector128<sbyte>> expr, Vector128<sbyte> a, Vector128<sbyte> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 50 08 ac c8 f7 7f 00 00 ba 02 00 00 00 e8 69 c3 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 72 fb ff ff 48 8b cb e8 b2 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
78        | 7ff7c864aaf0h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[16u](v128x16u,v128x16u)                                        | bit satisfied<ushort>(ComparisonExpr<Vector128<ushort>> expr, Vector128<ushort> a, Vector128<ushort> b)       | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 90 0c ac c8 f7 7f 00 00 ba 02 00 00 00 e8 c9 c2 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 62 fb ff ff 48 8b cb e8 f2 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
79        | 7ff7c864ab90h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[16i](v128x16i,v128x16i)                                        | bit satisfied<short>(ComparisonExpr<Vector128<short>> expr, Vector128<short> a, Vector128<short> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 d0 10 ac c8 f7 7f 00 00 ba 02 00 00 00 e8 29 c2 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 52 fb ff ff 48 8b cb e8 32 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
80        | 7ff7c864ac30h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[32u](v128x32u,v128x32u)                                        | bit satisfied<uint>(ComparisonExpr<Vector128<uint>> expr, Vector128<uint> a, Vector128<uint> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 10 15 ac c8 f7 7f 00 00 ba 02 00 00 00 e8 89 c1 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 42 fb ff ff 48 8b cb e8 72 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
81        | 7ff7c864acd0h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[32i](v128x32i,v128x32i)                                        | bit satisfied<int>(ComparisonExpr<Vector128<int>> expr, Vector128<int> a, Vector128<int> b)                   | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 50 19 ac c8 f7 7f 00 00 ba 02 00 00 00 e8 e9 c0 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 32 fb ff ff 48 8b cb e8 c2 c6 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
82        | 7ff7c864ad70h   | 1331    | hex://logix/logic.engine?satisfied#satisfied_g[64u](v128x64u,v128x64u)                                        | bit satisfied<ulong>(ComparisonExpr<Vector128<ulong>> expr, Vector128<ulong> a, Vector128<ulong> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 78 1e ac c8 f7 7f 00 00 ba 02 00 00 00 e8 49 c0 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 22 fb ff ff 48 8b cb e8 a2 fb ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 33 a8 c1 5e 5e 00 09 e8 2b a8 c1 5e 5e 01 08 e8 23 a8 c1 5e 5e 02 07 e8 1b a8 c1 5e 5e 03 06 e8 13 a8 c1 5e 5e 04 05 e8 0b a8 c1 5e 5e 05 04 e8 03 a8 c1 5e 5e 06 03 e8 fb a7 c1 5e 5e 07 02 e8 f3 a7 c1 5e 5e 08 01 e8 eb a7 c1 5e 5e 09 00 80 21 ac c8 f7 7f 00 00 e8 db a7 c1 5e 5e 00 0c e8 d3 a7 c1 5e 5e 01 0b e8 cb a7 c1 5e 5e 02 0a e8 c3 a7 c1 5e 5e 03 09 e8 bb a7 c1 5e 5e 04 08 e8 b3 a7 c1 5e 5e 05 07 e8 ab a7 c1 5e 5e 06 06 e8 a3 a7 c1 5e 5e 07 05 e8 9b a7 c1 5e 5e 08 04 e8 93 a7 c1 5e 5e 09 03 e8 8b a7 c1 5e 5e 0a 02 e8 83 a7 c1 5e 5e 0b 01 e8 7b a7 c1 5e 5e 0c 00 60 25 ac c8 f7 7f 00 00 e8 6b a7 c1 5e 5e 00 00 e8 26 ac c8 f7 7f 00 00 e8 5b a7 c1 5e 5e 00 09 e8 53 a7 c1 5e 5e 01 08 e8 4b a7 c1 5e 5e 02 07 e8 43 a7 c1 5e 5e 03 06 e8 3b a7 c1 5e 5e 04 05 e8 33 a7 c1 5e 5e 05 04 e8 2b a7 c1 5e 5e 06 03 e8 23 a7 c1 5e 5e 07 02 e8 1b a7 c1 5e 5e 08 01 e8 13 a7 c1 5e 5e 09 00 c8 27 ac c8 f7 7f 00 00 e8 03 a7 c1 5e 5e 00 03 e8 fb a6 c1 5e 5e 01 02 e8 f3 a6 c1 5e 5e 02 01 e8 eb a6 c1 5e 5e 03 00 60 29 ac c8 f7 7f 00 00 e8 db a6 c1 5e 5e 00 00 d0 2a ac c8 f7 7f 00 00 e8 cb a6 c1 5e 5e 00 09 e8 c3 a6 c1 5e 5e 01 08 e8 bb a6 c1 5e 5e 02 07 e8 b3 a6 c1 5e 5e 03 06 e8 ab a6 c1 5e 5e 04 05 e8 a3 a6 c1 5e 5e 05 04 e8 9b a6 c1 5e 5e 06 03 e8 93 a6 c1 5e 5e 07 02 e8 8b a6 c1 5e 5e 08 01 e8 83 a6 c1 5e 5e 09 00 60 2b ac c8 f7 7f 00 00 e8 73 a6 c1 5e 5e 00 03 e8 6b a6 c1 5e 5e 03 02 e8 63 a6 c1 5e 5e 06 01 e8 5b a6 c1 5e 5e 09 00 40 2e ac c8 f7 7f 00 00 e8 4b a6 c1 5e 5e 00 00 10 2f ac c8 f7 7f 00 00 e8 3b a6 c1 5e 5e 00 0a e8 33 a6 c1 5e 5e 01 09 e8 2b a6 c1 5e 5e 02 08 e8 23 a6 c1 5e 5e 03 07 e8 1b a6 c1 5e 5e 04 06 e8 13 a6 c1 5e 5e 05 05 e8 0b a6 c1 5e 5e 06 04 e8 03 a6 c1 5e 5e 07 03 e8 fb a5 c1 5e 5e 08 02 e8 f3 a5 c1 5e 5e 09 01 e8 eb a5 c1 5e 5e 0a 00 70 2f ac c8 f7 7f 00 00 e8 db a5 c1 5e 5e 00 00 f0 30 ac c8 f7 7f 00 00 e8 cb a5 c1 5e 5e 00 00 c0 31 ac c8 f7 7f 00 00 e8 bb a5 c1 5e 5e 00 00 20 32 ac c8 f7 7f 00 00 e8 ab a5 c1 5e 5e 00 00 80 32 ac c8 f7 7f 00 00 e8 9b a5 c1 5e 5e 00 09 e8 93 a5 c1 5e 5e 01 08 e8 8b a5 c1 5e 5e 02 07 e8 83 a5 c1 5e 5e 03 06 e8 7b a5 c1 5e 5e 04 05 e8 73 a5 c1 5e 5e 05 04 e8 6b a5 c1 5e 5e 06 03 e8 63 a5 c1 5e 5e 07 02 e8 5b a5 c1 5e 5e 08 01 e8 53 a5 c1 5e 5e 09 00 10 33 ac c8 f7 7f 00 00 e8 43 a5 c1 5e 5e 00 03 e8 3b a5 c1 5e 5e 03 02 e8 33 a5 c1 5e 5e 06 01 e8 2b a5 c1 5e 5e 09 00 f0 35 ac c8 f7 7f 00 00 e8 1b a5 c1 5e 5e 00 00 c0 36 ac c8 f7 7f 00 00 e8 0b a5 c1 5e 5e 00 09 e8 03 a5 c1 5e 5e 01 08 e8 fb a4 c1 5e 5e 02 07 e8 f3 a4 c1 5e 5e 03 06 e8 eb a4 c1 5e 5e 04 05 e8 e3 a4 c1 5e 5e 05 04 e8 db a4 c1 5e 5e 06 03 e8 d3 a4 c1 5e 5e 07 02 e8 cb a4 c1 5e 5e 08 01 e8 c3 a4 c1 5e 5e 09 00 50 37 ac c8 f7 7f 00 00 e8 b3 a4 c1 5e 5e 00 03 e8 ab a4 c1 5e 5e 03 02 e8 a3 a4 c1 5e 5e 06 01 e8 9b a4 c1 5e 5e 09 00 30 3a ac c8 f7 7f 00 00 e8 8b a4 c1 5e 5e 00 00 00 3b ac c8 f7 7f 00 00 e8 7b a4 c1 5e 5e 00 03 e8 73 a4 c1 5e 5e 03 02 e8 6b a4 c1 5e 5e 06 01 e8 63 a4 c1 5e 5e 09 00 70 3e ac c8 f7 7f 00 00 e8 53 a4 c1 5e 5e 00 00 40 3f ac c8 f7 7f 00 00 e8 43 a4 c1 5e 5e 00 00 80 43 ac c8 f7 7f 00 00 68 16 ab c8 f7 7f 00 00 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 78 23 ac c8 f7 7f 00 00 ba 02 00 00 00 e8 a9 bb c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 62 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
83        | 7ff7c864b210h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[64i](v128x64i,v128x64i)                                        | bit satisfied<long>(ComparisonExpr<Vector128<long>> expr, Vector128<long> a, Vector128<long> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 78 23 ac c8 f7 7f 00 00 ba 02 00 00 00 e8 a9 bb c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 62 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
84        | 7ff7c864b2b0h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[8u](v256x8u,v256x8u)                                           | bit satisfied<byte>(ComparisonExpr<Vector256<byte>> expr, Vector256<byte> a, Vector256<byte> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 58 2d ac c8 f7 7f 00 00 ba 02 00 00 00 e8 09 bb c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 aa fc ff ff 48 8b cb e8 a2 c2 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
85        | 7ff7c864b350h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[8i](v256x8i,v256x8i)                                           | bit satisfied<sbyte>(ComparisonExpr<Vector256<sbyte>> expr, Vector256<sbyte> a, Vector256<sbyte> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 08 35 ac c8 f7 7f 00 00 ba 02 00 00 00 e8 69 ba c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 3a fd ff ff 48 8b cb e8 22 c7 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
86        | 7ff7c864b3f0h   | 896     | hex://logix/logic.engine?satisfied#satisfied_g[16u](v256x16u,v256x16u)                                        | bit satisfied<ushort>(ComparisonExpr<Vector256<ushort>> expr, Vector256<ushort> a, Vector256<ushort> b)       | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 48 39 ac c8 f7 7f 00 00 ba 02 00 00 00 e8 c9 b9 c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 2a fd ff ff 48 8b cb e8 92 c7 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 b3 a1 c1 5e 5e 00 09 e8 ab a1 c1 5e 5e 01 08 e8 a3 a1 c1 5e 5e 02 07 e8 9b a1 c1 5e 5e 03 06 e8 93 a1 c1 5e 5e 04 05 e8 8b a1 c1 5e 5e 05 04 e8 83 a1 c1 5e 5e 06 03 e8 7b a1 c1 5e 5e 07 02 e8 73 a1 c1 5e 5e 08 01 e8 6b a1 c1 5e 5e 09 00 90 3b ac c8 f7 7f 00 00 e8 5b a1 c1 5e 5e 00 09 e8 53 a1 c1 5e 5e 01 08 e8 4b a1 c1 5e 5e 02 07 e8 43 a1 c1 5e 5e 03 06 e8 3b a1 c1 5e 5e 04 05 e8 33 a1 c1 5e 5e 05 04 e8 2b a1 c1 5e 5e 06 03 e8 23 a1 c1 5e 5e 07 02 e8 1b a1 c1 5e 5e 08 01 e8 13 a1 c1 5e 5e 09 00 d0 3f ac c8 f7 7f 00 00 e8 03 a1 c1 5e 5e 00 03 e8 fb a0 c1 5e 5e 03 02 e8 f3 a0 c1 5e 5e 06 01 e8 eb a0 c1 5e 5e 09 00 b0 42 ac c8 f7 7f 00 00 e8 db a0 c1 5e 5e 00 09 e8 d3 a0 c1 5e 5e 01 08 e8 cb a0 c1 5e 5e 02 07 e8 c3 a0 c1 5e 5e 03 06 e8 bb a0 c1 5e 5e 04 05 e8 b3 a0 c1 5e 5e 05 04 e8 ab a0 c1 5e 5e 06 03 e8 a3 a0 c1 5e 5e 07 02 e8 9b a0 c1 5e 5e 08 01 e8 93 a0 c1 5e 5e 09 00 10 44 ac c8 f7 7f 00 00 e8 83 a0 c1 5e 5e 00 03 e8 7b a0 c1 5e 5e 03 02 e8 73 a0 c1 5e 5e 06 01 e8 6b a0 c1 5e 5e 09 00 f0 46 ac c8 f7 7f 00 00 e8 5b a0 c1 5e 5e 00 00 c0 47 ac c8 f7 7f 00 00 e8 4b a0 c1 5e 5e 00 09 e8 43 a0 c1 5e 5e 01 08 e8 3b a0 c1 5e 5e 02 07 e8 33 a0 c1 5e 5e 03 06 e8 2b a0 c1 5e 5e 04 05 e8 23 a0 c1 5e 5e 05 04 e8 1b a0 c1 5e 5e 06 03 e8 13 a0 c1 5e 5e 07 02 e8 0b a0 c1 5e 5e 08 01 e8 03 a0 c1 5e 5e 09 00 50 48 ac c8 f7 7f 00 00 e8 f3 9f c1 5e 5e 00 03 e8 eb 9f c1 5e 5e 01 02 e8 e3 9f c1 5e 5e 02 01 e8 db 9f c1 5e 5e 03 00 e8 49 ac c8 f7 7f 00 00 e8 cb 9f c1 5e 5e 00 03 e8 c3 9f c1 5e 5e 03 02 e8 bb 9f c1 5e 5e 06 01 e8 b3 9f c1 5e 5e 09 00 18 4c ac c8 f7 7f 00 00 e8 a3 9f c1 5e 5e 00 00 e8 4c ac c8 f7 7f 00 00 e8 93 9f c1 5e 5e 00 00 48 4d ac c8 f7 7f 00 00 e8 83 9f c1 5e 5e 00 00 a8 4d ac c8 f7 7f 00 00 e8 73 9f c1 5e 5e 00 09 e8 6b 9f c1 5e 5e 01 08 e8 63 9f c1 5e 5e 02 07 e8 5b 9f c1 5e 5e 03 06 e8 53 9f c1 5e 5e 04 05 e8 4b 9f c1 5e 5e 05 04 e8 43 9f c1 5e 5e 06 03 e8 3b 9f c1 5e 5e 07 02 e8 33 9f c1 5e 5e 08 01 e8 2b 9f c1 5e 5e 09 00 38 4e ac c8 f7 7f 00 00 e8 1b 9f c1 5e 5e 00 03 e8 13 9f c1 5e 5e 03 02 e8 0b 9f c1 5e 5e 06 01 e8 03 9f c1 5e 5e 09 00 18 51 ac c8 f7 7f 00 00 e8 f3 9e c1 5e 5e 00 00 00 54 ac c8 f7 7f 00 00 e8 e3 9e c1 5e 5e 00 00 78 54 ac c8 f7 7f 00 00 00 00 00 00 00 00 00 00
87        | 7ff7c864b890h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[16i](v256x16i,v256x16i)                                        | bit satisfied<short>(ComparisonExpr<Vector256<short>> expr, Vector256<short> a, Vector256<short> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 88 3d ac c8 f7 7f 00 00 ba 02 00 00 00 e8 29 b5 c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 02 c4 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
88        | 7ff7c864b930h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[32u](v256x32u,v256x32u)                                        | bit satisfied<uint>(ComparisonExpr<Vector256<uint>> expr, Vector256<uint> a, Vector256<uint> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 c8 41 ac c8 f7 7f 00 00 ba 02 00 00 00 e8 89 b4 c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 9a fb ff ff 48 8b cb e8 72 c4 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
89        | 7ff7c864b9d0h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[32i](v256x32i,v256x32i)                                        | bit satisfied<int>(ComparisonExpr<Vector256<int>> expr, Vector256<int> a, Vector256<int> b)                   | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 08 46 ac c8 f7 7f 00 00 ba 02 00 00 00 e8 e9 b3 c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 7a fb ff ff 48 8b cb e8 e2 c4 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
90        | 7ff7c864ba70h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[64u](v256x64u,v256x64u)                                        | bit satisfied<ulong>(ComparisonExpr<Vector256<ulong>> expr, Vector256<ulong> a, Vector256<ulong> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 30 4b ac c8 f7 7f 00 00 ba 02 00 00 00 e8 49 b3 c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 6a fb ff ff 48 8b cb e8 ea fb ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
91        | 7ff7c864bb10h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[64i](v256x64i,v256x64i)                                        | bit satisfied<long>(ComparisonExpr<Vector256<long>> expr, Vector256<long> a, Vector256<long> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 30 50 ac c8 f7 7f 00 00 ba 02 00 00 00 e8 a9 b2 c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 a2 fb ff ff 48 8b cb e8 c2 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
92        | 7ff7c864bbb0h   | 35      | hex://logix/logic.engine?eval#eval_()                                                                         | bit eval(ILogicExpr expr)                                                                                     | 0f 1f 44 00 00 48 b8 70 31 dd c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
93        | 7ff7c864bbe0h   | 607     | hex://logix/logic.engine?satisfied#satisfied_(1u,1u)                                                          | bit satisfied(ComparisonExpr expr, bit a, bit b)                                                              | 57 56 48 83 ec 28 48 8b f1 41 8b f8 8b 0e 48 8b 4e 18 83 79 08 00 76 48 48 8b 49 10 49 bb 20 0d 63 c7 f7 7f 00 00 39 09 ff 15 12 51 fe fe 48 8b 4e 18 83 79 08 01 76 28 48 8b 49 18 8b d7 49 bb 28 0d 63 c7 f7 7f 00 00 39 09 ff 15 f8 50 fe fe 48 8b ce e8 38 75 78 ff 90 48 83 c4 28 5e 5f c3 e8 8b 41 d4 5e cc 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 20 29 ab c8 f7 7f 00 00 55 41 57 41 56 57 56 53 48 83 ec 48 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 4e 10 48 8b 5f 10 41 be b6 00 00 00 41 bf 01 00 00 00 8b 49 08 3b 4b 08 0f 85 cb 00 00 00 e8 40 7d 78 ff 48 8b c8 49 bb 30 0d 63 c7 f7 7f 00 00 39 09 ff 15 7b 50 fe fe 48 89 45 c8 48 8b 4d c8 49 bb 38 0d 63 c7 f7 7f 00 00 39 09 ff 15 69 50 fe fe 85 c0 74 51 48 8b 4d c8 49 bb 40 0d 63 c7 f7 7f 00 00 39 09 ff 15 57 50 fe fe 48 8b d0 48 8b ce e8 cc 8a 78 ff 48 8b ce e8 74 74 78 ff 8b d8 48 8b cf e8 6a 74 78 ff 3b d8 75 32 48 8b 4d c8 49 bb 38 0d 63 c7 f7 7f 00 00 39 09 ff 15 18 50 fe fe 85 c0 75 af 48 8b 4d c8 49 bb 48 0d 63 c7 f7 7f 00 00 39 09 ff 15 0e 50 fe fe eb 18 48 8b cc e8 7e 00 00 00 90 33 c0 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 8b f1 8b 7b 08 b9 19 02 00 00 48 ba e8 b7 ad c7 f7 7f 00 00 e8 31 48 d4 5e 48 8b d8 b9 25 02 00 00 48 ba e8 b7 ad c7 f7 7f 00 00 e8 1a 48 d4 5e 4c 8b c8 4c 8d 45 d0 45 88 38 45 89 70 04 4c 8b c3 8b ce 8b d7 48 8b 45 d0 48 89 44 24 20 e8 c7 90 11 ff 48 8b c8 e8 3f fb b8 5e cc 55 41 57 41 56 57 56 53 48 83 ec 38 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c8 00 74 16 48 8b 4d c8 49 bb 48 0d 63 c7 f7 7f 00 00 39 09 ff 15 50 4f fe fe 90 48 83 c4 38 5b 5e 5f 41 5e 41 5f 5d c3 00 00 19 0c 07 00 0c 82 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 19 0c 07 00 0c 62 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 00 00 00 00 00 00 00
94        | 7ff7c864bc60h   | 479     | hex://logix/logic.engine?equal#equal_()                                                                       | bit equal(VariedLogicExpr a, VariedLogicExpr b)                                                               | 55 41 57 41 56 57 56 53 48 83 ec 48 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 4e 10 48 8b 5f 10 41 be b6 00 00 00 41 bf 01 00 00 00 8b 49 08 3b 4b 08 0f 85 cb 00 00 00 e8 40 7d 78 ff 48 8b c8 49 bb 30 0d 63 c7 f7 7f 00 00 39 09 ff 15 7b 50 fe fe 48 89 45 c8 48 8b 4d c8 49 bb 38 0d 63 c7 f7 7f 00 00 39 09 ff 15 69 50 fe fe 85 c0 74 51 48 8b 4d c8 49 bb 40 0d 63 c7 f7 7f 00 00 39 09 ff 15 57 50 fe fe 48 8b d0 48 8b ce e8 cc 8a 78 ff 48 8b ce e8 74 74 78 ff 8b d8 48 8b cf e8 6a 74 78 ff 3b d8 75 32 48 8b 4d c8 49 bb 38 0d 63 c7 f7 7f 00 00 39 09 ff 15 18 50 fe fe 85 c0 75 af 48 8b 4d c8 49 bb 48 0d 63 c7 f7 7f 00 00 39 09 ff 15 0e 50 fe fe eb 18 48 8b cc e8 7e 00 00 00 90 33 c0 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 8b f1 8b 7b 08 b9 19 02 00 00 48 ba e8 b7 ad c7 f7 7f 00 00 e8 31 48 d4 5e 48 8b d8 b9 25 02 00 00 48 ba e8 b7 ad c7 f7 7f 00 00 e8 1a 48 d4 5e 4c 8b c8 4c 8d 45 d0 45 88 38 45 89 70 04 4c 8b c3 8b ce 8b d7 48 8b 45 d0 48 89 44 24 20 e8 c7 90 11 ff 48 8b c8 e8 3f fb b8 5e cc 55 41 57 41 56 57 56 53 48 83 ec 38 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c8 00 74 16 48 8b 4d c8 49 bb 48 0d 63 c7 f7 7f 00 00 39 09 ff 15 50 4f fe fe 90 48 83 c4 38 5b 5e 5f 41 5e 41 5f 5d c3 00 00 19 0c 07 00 0c 82 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 19 0c 07 00 0c 62 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 00 00 00 00 00 00 00
