Sequence  | Address         | Length  | Uri                                                                                                           | OpSig                                                                                                         | Data
0         | 7ff7c8651330h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[8u]()                                                          | bit eval<byte>(ILogicExpr<byte> expr)                                                                         | 0f 1f 44 00 00 48 b8 00 86 e3 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
1         | 7ff7c8651360h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[8i]()                                                          | bit eval<sbyte>(ILogicExpr<sbyte> expr)                                                                       | 0f 1f 44 00 00 48 b8 00 86 e3 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
2         | 7ff7c8651390h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[16u]()                                                         | bit eval<ushort>(ILogicExpr<ushort> expr)                                                                     | 0f 1f 44 00 00 48 b8 00 86 e3 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
3         | 7ff7c86513c0h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[16i]()                                                         | bit eval<short>(ILogicExpr<short> expr)                                                                       | 0f 1f 44 00 00 48 b8 00 86 e3 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
4         | 7ff7c86513f0h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[32u]()                                                         | bit eval<uint>(ILogicExpr<uint> expr)                                                                         | 0f 1f 44 00 00 48 b8 00 86 e3 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
5         | 7ff7c8651420h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[32i]()                                                         | bit eval<int>(ILogicExpr<int> expr)                                                                           | 0f 1f 44 00 00 48 b8 00 86 e3 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
6         | 7ff7c8651450h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[64u]()                                                         | bit eval<ulong>(ILogicExpr<ulong> expr)                                                                       | 0f 1f 44 00 00 48 b8 00 86 e3 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
7         | 7ff7c8651480h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[64i]()                                                         | bit eval<long>(ILogicExpr<long> expr)                                                                         | 0f 1f 44 00 00 48 b8 00 86 e3 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
8         | 7ff7c86514b0h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[8u]()                                                         | LiteralExpr<byte> eval<byte>(IExpr<byte> expr)                                                                | 0f 1f 44 00 00 48 b8 f8 0e 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
9         | 7ff7c86514e0h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[8i]()                                                         | LiteralExpr<sbyte> eval<sbyte>(IExpr<sbyte> expr)                                                             | 0f 1f 44 00 00 48 b8 28 0f 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
10        | 7ff7c8651510h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[16u]()                                                        | LiteralExpr<ushort> eval<ushort>(IExpr<ushort> expr)                                                          | 0f 1f 44 00 00 48 b8 48 0f 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
11        | 7ff7c8651540h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[16i]()                                                        | LiteralExpr<short> eval<short>(IExpr<short> expr)                                                             | 0f 1f 44 00 00 48 b8 68 0f 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
12        | 7ff7c8651570h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[32u]()                                                        | LiteralExpr<uint> eval<uint>(IExpr<uint> expr)                                                                | 0f 1f 44 00 00 48 b8 88 0f 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
13        | 7ff7c86515a0h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[32i]()                                                        | LiteralExpr<int> eval<int>(IExpr<int> expr)                                                                   | 0f 1f 44 00 00 48 b8 a8 0f 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
14        | 7ff7c86515d0h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[64u]()                                                        | LiteralExpr<ulong> eval<ulong>(IExpr<ulong> expr)                                                             | 0f 1f 44 00 00 48 b8 c8 0f 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
15        | 7ff7c8651600h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[64i]()                                                        | LiteralExpr<long> eval<long>(IExpr<long> expr)                                                                | 0f 1f 44 00 00 48 b8 e8 0f 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
16        | 7ff7c8651630h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_expr_g[8u]()                                                            | LiteralExpr<byte> eval<byte>(IComparisonExpr<byte> expr)                                                      | 0f 1f 44 00 00 48 b8 20 e8 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
17        | 7ff7c8651660h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_expr_g[8i]()                                                            | LiteralExpr<sbyte> eval<sbyte>(IComparisonExpr<sbyte> expr)                                                   | 0f 1f 44 00 00 48 b8 00 e9 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
18        | 7ff7c8651690h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_expr_g[16u]()                                                           | LiteralExpr<ushort> eval<ushort>(IComparisonExpr<ushort> expr)                                                | 0f 1f 44 00 00 48 b8 b0 e9 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
19        | 7ff7c86516c0h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_expr_g[16i]()                                                           | LiteralExpr<short> eval<short>(IComparisonExpr<short> expr)                                                   | 0f 1f 44 00 00 48 b8 60 ea 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
20        | 7ff7c86516f0h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_expr_g[32u]()                                                           | LiteralExpr<uint> eval<uint>(IComparisonExpr<uint> expr)                                                      | 0f 1f 44 00 00 48 b8 10 eb 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
21        | 7ff7c8651720h   | 1064    | hex://logix/LogicEngine?eval#eval_cmp_expr_g[32i]()                                                           | LiteralExpr<int> eval<int>(IComparisonExpr<int> expr)                                                         | 0f 1f 44 00 00 48 b8 b0 eb 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 f3 3e c1 5e 5e 00 00 d8 1e ad c8 f7 7f 00 00 e8 e3 3e c1 5e 5e 00 0c e8 db 3e c1 5e 5e 01 0b e8 d3 3e c1 5e 5e 02 0a e8 cb 3e c1 5e 5e 03 09 e8 c3 3e c1 5e 5e 04 08 e8 bb 3e c1 5e 5e 05 07 e8 b3 3e c1 5e 5e 06 06 e8 ab 3e c1 5e 5e 07 05 e8 a3 3e c1 5e 5e 08 04 e8 9b 3e c1 5e 5e 09 03 e8 93 3e c1 5e 5e 0a 02 e8 8b 3e c1 5e 5e 0b 01 e8 83 3e c1 5e 5e 0c 00 48 1f ad c8 f7 7f 00 00 e8 73 3e c1 5e 5e 00 00 d0 20 ad c8 f7 7f 00 00 e8 63 3e c1 5e 5e 00 0a e8 5b 3e c1 5e 5e 01 09 e8 53 3e c1 5e 5e 02 08 e8 4b 3e c1 5e 5e 03 07 e8 43 3e c1 5e 5e 04 06 e8 3b 3e c1 5e 5e 05 05 e8 33 3e c1 5e 5e 06 04 e8 2b 3e c1 5e 5e 07 03 e8 23 3e c1 5e 5e 08 02 e8 1b 3e c1 5e 5e 09 01 e8 13 3e c1 5e 5e 0a 00 80 21 ad c8 f7 7f 00 00 e8 03 3e c1 5e 5e 00 00 00 23 ad c8 f7 7f 00 00 e8 f3 3d c1 5e 5e 00 03 e8 eb 3d c1 5e 5e 01 02 e8 e3 3d c1 5e 5e 02 01 e8 db 3d c1 5e 5e 03 00 38 24 ad c8 f7 7f 00 00 e8 cb 3d c1 5e 5e 00 00 30 25 ad c8 f7 7f 00 00 e8 bb 3d c1 5e 5e 00 00 90 25 ad c8 f7 7f 00 00 e8 ab 3d c1 5e 5e 00 00 f0 25 ad c8 f7 7f 00 00 e8 9b 3d c1 5e 5e 00 00 50 26 ad c8 f7 7f 00 00 e8 8b 3d c1 5e 5e 00 00 b0 26 ad c8 f7 7f 00 00 e8 7b 3d c1 5e 5e 00 00 10 27 ad c8 f7 7f 00 00 e8 6b 3d c1 5e 5e 00 00 70 27 ad c8 f7 7f 00 00 e8 5b 3d c1 5e 5e 00 00 d0 27 ad c8 f7 7f 00 00 e8 4b 3d c1 5e 5e 00 0c e8 43 3d c1 5e 5e 01 0b e8 3b 3d c1 5e 5e 02 0a e8 33 3d c1 5e 5e 03 09 e8 2b 3d c1 5e 5e 04 08 e8 23 3d c1 5e 5e 05 07 e8 1b 3d c1 5e 5e 06 06 e8 13 3d c1 5e 5e 07 05 e8 0b 3d c1 5e 5e 08 04 e8 03 3d c1 5e 5e 09 03 e8 fb 3c c1 5e 5e 0a 02 e8 f3 3c c1 5e 5e 0b 01 e8 eb 3c c1 5e 5e 0c 00 60 28 ad c8 f7 7f 00 00 e8 db 3c c1 5e 5e 00 00 e8 29 ad c8 f7 7f 00 00 e8 cb 3c c1 5e 5e 00 0a e8 c3 3c c1 5e 5e 01 09 e8 bb 3c c1 5e 5e 02 08 e8 b3 3c c1 5e 5e 03 07 e8 ab 3c c1 5e 5e 04 06 e8 a3 3c c1 5e 5e 05 05 e8 9b 3c c1 5e 5e 06 04 e8 93 3c c1 5e 5e 07 03 e8 8b 3c c1 5e 5e 08 02 e8 83 3c c1 5e 5e 09 01 e8 7b 3c c1 5e 5e 0a 00 98 2a ad c8 f7 7f 00 00 e8 6b 3c c1 5e 5e 00 00 18 2c ad c8 f7 7f 00 00 e8 5b 3c c1 5e 5e 00 03 e8 53 3c c1 5e 5e 01 02 e8 4b 3c c1 5e 5e 02 01 e8 43 3c c1 5e 5e 03 00 50 2d ad c8 f7 7f 00 00 e8 33 3c c1 5e 5e 00 00 48 2e ad c8 f7 7f 00 00 e8 23 3c c1 5e 5e 00 00 a8 2e ad c8 f7 7f 00 00 e8 13 3c c1 5e 5e 00 00 08 2f ad c8 f7 7f 00 00 e8 03 3c c1 5e 5e 00 00 68 2f ad c8 f7 7f 00 00 e8 f3 3b c1 5e 5e 00 00 c8 2f ad c8 f7 7f 00 00 e8 e3 3b c1 5e 5e 00 00 28 30 ad c8 f7 7f 00 00 e8 d3 3b c1 5e 5e 00 00 88 30 ad c8 f7 7f 00 00 e8 c3 3b c1 5e 5e 00 00 e8 30 ad c8 f7 7f 00 00 e8 b3 3b c1 5e 5e 00 03 e8 ab 3b c1 5e 5e 01 02 e8 a3 3b c1 5e 5e 02 01 e8 9b 3b c1 5e 5e 03 00 c0 31 ad c8 f7 7f 00 00 e8 8b 3b c1 5e 5e 00 00 30 33 ad c8 f7 7f 00 00 e8 7b 3b c1 5e 5e 00 00 90 33 ad c8 f7 7f 00 00 e8 6b 3b c1 5e 5e 00 00 f0 33 ad c8 f7 7f 00 00 e8 5b 3b c1 5e 5e 00 00 50 34 ad c8 f7 7f 00 00 e8 4b 3b c1 5e 5e 00 00 b0 34 ad c8 f7 7f 00 00 e8 3b 3b c1 5e 5e 00 00 10 35 ad c8 f7 7f 00 00 e8 2b 3b c1 5e 5e 00 00 70 35 ad c8 f7 7f 00 00 e8 1b 3b c1 5e 5e 00 00 d0 35 ad c8 f7 7f 00 00 e8 0b 3b c1 5e 5e 00 00 c8 37 ad c8 f7 7f 00 00 00 00 00 00 00 00 00 00
22        | 7ff7c8651b50h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_expr_g[64i]()                                                           | LiteralExpr<long> eval<long>(IComparisonExpr<long> expr)                                                      | 0f 1f 44 00 00 48 b8 50 ec 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
23        | 7ff7c8651b80h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[8u]()                                                        | LiteralExpr<Vector128<byte>> eval<byte>(IComparisonExpr<Vector128<byte>> expr)                                | 0f 1f 44 00 00 48 b8 60 f5 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
24        | 7ff7c8651bb0h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[8i]()                                                        | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IComparisonExpr<Vector128<sbyte>> expr)                             | 0f 1f 44 00 00 48 b8 50 fa 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
25        | 7ff7c8651be0h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[16u]()                                                       | LiteralExpr<Vector128<ushort>> eval<ushort>(IComparisonExpr<Vector128<ushort>> expr)                          | 0f 1f 44 00 00 48 b8 30 fb 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
26        | 7ff7c8651c10h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[16i]()                                                       | LiteralExpr<Vector128<short>> eval<short>(IComparisonExpr<Vector128<short>> expr)                             | 0f 1f 44 00 00 48 b8 10 fc 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
27        | 7ff7c8651c40h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[32u]()                                                       | LiteralExpr<Vector128<uint>> eval<uint>(IComparisonExpr<Vector128<uint>> expr)                                | 0f 1f 44 00 00 48 b8 f0 fc 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
28        | 7ff7c8651c70h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[32i]()                                                       | LiteralExpr<Vector128<int>> eval<int>(IComparisonExpr<Vector128<int>> expr)                                   | 0f 1f 44 00 00 48 b8 e0 01 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
29        | 7ff7c8651ca0h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[64i]()                                                       | LiteralExpr<Vector128<long>> eval<long>(IComparisonExpr<Vector128<long>> expr)                                | 0f 1f 44 00 00 48 b8 c0 02 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
30        | 7ff7c8651cd0h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[8u]()                                                        | LiteralExpr<Vector256<byte>> eval<byte>(IComparisonExpr<Vector256<byte>> expr)                                | 0f 1f 44 00 00 48 b8 a0 03 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
31        | 7ff7c8651d00h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[8i]()                                                        | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IComparisonExpr<Vector256<sbyte>> expr)                             | 0f 1f 44 00 00 48 b8 c0 08 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
32        | 7ff7c8651d30h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[16u]()                                                       | LiteralExpr<Vector256<ushort>> eval<ushort>(IComparisonExpr<Vector256<ushort>> expr)                          | 0f 1f 44 00 00 48 b8 d0 09 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
33        | 7ff7c8651d60h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[16i]()                                                       | LiteralExpr<Vector256<short>> eval<short>(IComparisonExpr<Vector256<short>> expr)                             | 0f 1f 44 00 00 48 b8 e0 0a 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
34        | 7ff7c8651d90h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[32u]()                                                       | LiteralExpr<Vector256<uint>> eval<uint>(IComparisonExpr<Vector256<uint>> expr)                                | 0f 1f 44 00 00 48 b8 f0 0b 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
35        | 7ff7c8651dc0h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[32i]()                                                       | LiteralExpr<Vector256<int>> eval<int>(IComparisonExpr<Vector256<int>> expr)                                   | 0f 1f 44 00 00 48 b8 10 11 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
36        | 7ff7c8651df0h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[64i]()                                                       | LiteralExpr<Vector256<long>> eval<long>(IComparisonExpr<Vector256<long>> expr)                                | 0f 1f 44 00 00 48 b8 20 12 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
37        | 7ff7c8651e20h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_pred_g[8u]()                                                            | bit eval<byte>(IComparisonPred<byte> expr)                                                                    | 0f 1f 44 00 00 48 b8 00 f1 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
38        | 7ff7c8651e50h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_pred_g[8i]()                                                            | bit eval<sbyte>(IComparisonPred<sbyte> expr)                                                                  | 0f 1f 44 00 00 48 b8 a0 f1 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
39        | 7ff7c8651e80h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_pred_g[16u]()                                                           | bit eval<ushort>(IComparisonPred<ushort> expr)                                                                | 0f 1f 44 00 00 48 b8 40 f2 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
40        | 7ff7c8651eb0h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_pred_g[16i]()                                                           | bit eval<short>(IComparisonPred<short> expr)                                                                  | 0f 1f 44 00 00 48 b8 e0 f2 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
41        | 7ff7c8651ee0h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_pred_g[32u]()                                                           | bit eval<uint>(IComparisonPred<uint> expr)                                                                    | 0f 1f 44 00 00 48 b8 80 f3 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
42        | 7ff7c8651f10h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_pred_g[32i]()                                                           | bit eval<int>(IComparisonPred<int> expr)                                                                      | 0f 1f 44 00 00 48 b8 20 f4 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
43        | 7ff7c8651f40h   | 1107    | hex://logix/LogicEngine?eval#eval_cmp_pred_g[64i]()                                                           | bit eval<long>(IComparisonPred<long> expr)                                                                    | 0f 1f 44 00 00 48 b8 c0 f4 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 d3 36 c1 5e 5e 00 0a e8 cb 36 c1 5e 5e 01 09 e8 c3 36 c1 5e 5e 02 08 e8 bb 36 c1 5e 5e 03 07 e8 b3 36 c1 5e 5e 04 06 e8 ab 36 c1 5e 5e 05 05 e8 a3 36 c1 5e 5e 06 04 e8 9b 36 c1 5e 5e 07 03 e8 93 36 c1 5e 5e 08 02 e8 8b 36 c1 5e 5e 09 01 e8 83 36 c1 5e 5e 0a 00 30 36 ad c8 f7 7f 00 00 e8 73 36 c1 5e 5e 00 00 98 39 ad c8 f7 7f 00 00 e8 63 36 c1 5e 5e 00 00 f8 39 ad c8 f7 7f 00 00 e8 53 36 c1 5e 5e 00 00 58 3a ad c8 f7 7f 00 00 e8 43 36 c1 5e 5e 00 02 e8 3b 36 c1 5e 5e 01 01 e8 33 36 c1 5e 5e 02 00 a8 3a ad c8 f7 7f 00 00 e8 23 36 c1 5e 5e 00 00 98 3b ad c8 f7 7f 00 00 e8 13 36 c1 5e 5e 00 00 f8 3b ad c8 f7 7f 00 00 e8 03 36 c1 5e 5e 00 02 e8 fb 35 c1 5e 5e 01 01 e8 f3 35 c1 5e 5e 02 00 48 3c ad c8 f7 7f 00 00 e8 e3 35 c1 5e 5e 00 00 38 3d ad c8 f7 7f 00 00 e8 d3 35 c1 5e 5e 00 00 98 3d ad c8 f7 7f 00 00 e8 c3 35 c1 5e 5e 00 02 e8 bb 35 c1 5e 5e 01 01 e8 b3 35 c1 5e 5e 02 00 e8 3d ad c8 f7 7f 00 00 e8 a3 35 c1 5e 5e 00 00 d8 3e ad c8 f7 7f 00 00 e8 93 35 c1 5e 5e 00 00 38 3f ad c8 f7 7f 00 00 e8 83 35 c1 5e 5e 00 02 e8 7b 35 c1 5e 5e 01 01 e8 73 35 c1 5e 5e 02 00 88 3f ad c8 f7 7f 00 00 e8 63 35 c1 5e 5e 00 00 78 40 ad c8 f7 7f 00 00 e8 53 35 c1 5e 5e 00 00 d8 40 ad c8 f7 7f 00 00 e8 43 35 c1 5e 5e 00 02 e8 3b 35 c1 5e 5e 01 01 e8 33 35 c1 5e 5e 02 00 28 41 ad c8 f7 7f 00 00 e8 23 35 c1 5e 5e 00 00 18 42 ad c8 f7 7f 00 00 e8 13 35 c1 5e 5e 00 00 78 42 ad c8 f7 7f 00 00 e8 03 35 c1 5e 5e 00 02 e8 fb 34 c1 5e 5e 01 01 e8 f3 34 c1 5e 5e 02 00 c8 42 ad c8 f7 7f 00 00 e8 e3 34 c1 5e 5e 00 00 b8 43 ad c8 f7 7f 00 00 e8 d3 34 c1 5e 5e 00 00 18 44 ad c8 f7 7f 00 00 e8 c3 34 c1 5e 5e 00 02 e8 bb 34 c1 5e 5e 01 01 e8 b3 34 c1 5e 5e 02 00 68 44 ad c8 f7 7f 00 00 e8 a3 34 c1 5e 5e 00 00 58 45 ad c8 f7 7f 00 00 e8 93 34 c1 5e 5e 00 00 b8 45 ad c8 f7 7f 00 00 e8 83 34 c1 5e 5e 00 02 e8 7b 34 c1 5e 5e 01 01 e8 73 34 c1 5e 5e 02 00 08 46 ad c8 f7 7f 00 00 e8 63 34 c1 5e 5e 00 0c e8 5b 34 c1 5e 5e 01 0b e8 53 34 c1 5e 5e 02 0a e8 4b 34 c1 5e 5e 03 09 e8 43 34 c1 5e 5e 04 08 e8 3b 34 c1 5e 5e 05 07 e8 33 34 c1 5e 5e 06 06 e8 2b 34 c1 5e 5e 07 05 e8 23 34 c1 5e 5e 08 04 e8 1b 34 c1 5e 5e 09 03 e8 13 34 c1 5e 5e 0a 02 e8 0b 34 c1 5e 5e 0b 01 e8 03 34 c1 5e 5e 0c 00 08 47 ad c8 f7 7f 00 00 e8 f3 33 c1 5e 5e 00 00 90 48 ad c8 f7 7f 00 00 e8 e3 33 c1 5e 5e 00 0a e8 db 33 c1 5e 5e 01 09 e8 d3 33 c1 5e 5e 02 08 e8 cb 33 c1 5e 5e 03 07 e8 c3 33 c1 5e 5e 04 06 e8 bb 33 c1 5e 5e 05 05 e8 b3 33 c1 5e 5e 06 04 e8 ab 33 c1 5e 5e 07 03 e8 a3 33 c1 5e 5e 08 02 e8 9b 33 c1 5e 5e 09 01 e8 93 33 c1 5e 5e 0a 00 40 49 ad c8 f7 7f 00 00 e8 83 33 c1 5e 5e 00 00 c0 4a ad c8 f7 7f 00 00 e8 73 33 c1 5e 5e 00 00 08 4c ad c8 f7 7f 00 00 e8 63 33 c1 5e 5e 00 0a e8 5b 33 c1 5e 5e 01 09 e8 53 33 c1 5e 5e 02 08 e8 4b 33 c1 5e 5e 03 07 e8 43 33 c1 5e 5e 04 06 e8 3b 33 c1 5e 5e 05 05 e8 33 33 c1 5e 5e 06 04 e8 2b 33 c1 5e 5e 07 03 e8 23 33 c1 5e 5e 08 02 e8 1b 33 c1 5e 5e 09 01 e8 13 33 c1 5e 5e 0a 00 68 4c ad c8 f7 7f 00 00 e8 03 33 c1 5e 5e 00 00 e8 4d ad c8 f7 7f 00 00 e8 f3 32 c1 5e 5e 00 00 30 4f ad c8 f7 7f 00 00 e8 e3 32 c1 5e 5e 00 00 48 51 ad c8 f7 7f 00 00 b8 3f ac c8 f7 7f 00 00 0f 1f 44 00 00 48 b8 d8 1f 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
44        | 7ff7c8652370h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[8u]()                                                          | LiteralExpr<byte> eval<byte>(IArithmeticExpr<byte> expr)                                                      | 0f 1f 44 00 00 48 b8 d8 1f 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
45        | 7ff7c86523a0h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[8i]()                                                          | LiteralExpr<sbyte> eval<sbyte>(IArithmeticExpr<sbyte> expr)                                                   | 0f 1f 44 00 00 48 b8 28 20 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
46        | 7ff7c86523d0h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[16u]()                                                         | LiteralExpr<ushort> eval<ushort>(IArithmeticExpr<ushort> expr)                                                | 0f 1f 44 00 00 48 b8 68 20 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
47        | 7ff7c8652400h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[16i]()                                                         | LiteralExpr<short> eval<short>(IArithmeticExpr<short> expr)                                                   | 0f 1f 44 00 00 48 b8 a8 20 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
48        | 7ff7c8652430h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[32u]()                                                         | LiteralExpr<uint> eval<uint>(IArithmeticExpr<uint> expr)                                                      | 0f 1f 44 00 00 48 b8 e8 20 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
49        | 7ff7c8652460h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[32i]()                                                         | LiteralExpr<int> eval<int>(IArithmeticExpr<int> expr)                                                         | 0f 1f 44 00 00 48 b8 28 21 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
50        | 7ff7c8652490h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[64u]()                                                         | LiteralExpr<ulong> eval<ulong>(IArithmeticExpr<ulong> expr)                                                   | 0f 1f 44 00 00 48 b8 68 21 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
51        | 7ff7c86524c0h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[64i]()                                                         | LiteralExpr<long> eval<long>(IArithmeticExpr<long> expr)                                                      | 0f 1f 44 00 00 48 b8 a8 21 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
52        | 7ff7c86524f0h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[8u]()                                                      | LiteralExpr<Vector128<byte>> eval<byte>(IExpr<Vector128<byte>> expr)                                          | 0f 1f 44 00 00 48 b8 a0 f0 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
53        | 7ff7c8652520h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[8i]()                                                      | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IExpr<Vector128<sbyte>> expr)                                       | 0f 1f 44 00 00 48 b8 e8 f6 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
54        | 7ff7c8652550h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[16u]()                                                     | LiteralExpr<Vector128<ushort>> eval<ushort>(IExpr<Vector128<ushort>> expr)                                    | 0f 1f 44 00 00 48 b8 d0 f7 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
55        | 7ff7c8652580h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[16i]()                                                     | LiteralExpr<Vector128<short>> eval<short>(IExpr<Vector128<short>> expr)                                       | 0f 1f 44 00 00 48 b8 b8 f8 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
56        | 7ff7c86525b0h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[32u]()                                                     | LiteralExpr<Vector128<uint>> eval<uint>(IExpr<Vector128<uint>> expr)                                          | 0f 1f 44 00 00 48 b8 a0 f9 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
57        | 7ff7c86525e0h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[32i]()                                                     | LiteralExpr<Vector128<int>> eval<int>(IExpr<Vector128<int>> expr)                                             | 0f 1f 44 00 00 48 b8 18 fe 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
58        | 7ff7c8652610h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[64u]()                                                     | LiteralExpr<Vector128<ulong>> eval<ulong>(IExpr<Vector128<ulong>> expr)                                       | 0f 1f 44 00 00 48 b8 48 23 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
59        | 7ff7c8652640h   | 1064    | hex://logix/LogicEngine?eval#eval_vector_expr128_g[64i]()                                                     | LiteralExpr<Vector128<long>> eval<long>(IExpr<Vector128<long>> expr)                                          | 0f 1f 44 00 00 48 b8 00 ff 64 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 d3 2f c1 5e 5e 00 0c e8 cb 2f c1 5e 5e 01 0b e8 c3 2f c1 5e 5e 02 0a e8 bb 2f c1 5e 5e 03 09 e8 b3 2f c1 5e 5e 04 08 e8 ab 2f c1 5e 5e 05 07 e8 a3 2f c1 5e 5e 06 06 e8 9b 2f c1 5e 5e 07 05 e8 93 2f c1 5e 5e 08 04 e8 8b 2f c1 5e 5e 09 03 e8 83 2f c1 5e 5e 0a 02 e8 7b 2f c1 5e 5e 0b 01 e8 73 2f c1 5e 5e 0c 00 c0 4f ad c8 f7 7f 00 00 e8 63 2f c1 5e 5e 00 0a e8 5b 2f c1 5e 5e 01 09 e8 53 2f c1 5e 5e 02 08 e8 4b 2f c1 5e 5e 03 07 e8 43 2f c1 5e 5e 04 06 e8 3b 2f c1 5e 5e 05 05 e8 33 2f c1 5e 5e 06 04 e8 2b 2f c1 5e 5e 07 03 e8 23 2f c1 5e 5e 08 02 e8 1b 2f c1 5e 5e 09 01 e8 13 2f c1 5e 5e 0a 00 f8 51 ad c8 f7 7f 00 00 e8 03 2f c1 5e 5e 00 00 78 53 ad c8 f7 7f 00 00 e8 f3 2e c1 5e 5e 00 00 c0 54 ad c8 f7 7f 00 00 e8 e3 2e c1 5e 5e 00 0a e8 db 2e c1 5e 5e 01 09 e8 d3 2e c1 5e 5e 02 08 e8 cb 2e c1 5e 5e 03 07 e8 c3 2e c1 5e 5e 04 06 e8 bb 2e c1 5e 5e 05 05 e8 b3 2e c1 5e 5e 06 04 e8 ab 2e c1 5e 5e 07 03 e8 a3 2e c1 5e 5e 08 02 e8 9b 2e c1 5e 5e 09 01 e8 93 2e c1 5e 5e 0a 00 20 55 ad c8 f7 7f 00 00 e8 83 2e c1 5e 5e 00 00 a0 56 ad c8 f7 7f 00 00 e8 73 2e c1 5e 5e 00 00 e8 57 ad c8 f7 7f 00 00 e8 63 2e c1 5e 5e 00 09 e8 5b 2e c1 5e 5e 01 08 e8 53 2e c1 5e 5e 02 07 e8 4b 2e c1 5e 5e 03 06 e8 43 2e c1 5e 5e 04 05 e8 3b 2e c1 5e 5e 05 04 e8 33 2e c1 5e 5e 06 03 e8 2b 2e c1 5e 5e 07 02 e8 23 2e c1 5e 5e 08 01 e8 1b 2e c1 5e 5e 09 00 78 58 ad c8 f7 7f 00 00 e8 0b 2e c1 5e 5e 00 03 e8 03 2e c1 5e 5e 01 02 e8 fb 2d c1 5e 5e 02 01 e8 f3 2d c1 5e 5e 03 00 10 5a ad c8 f7 7f 00 00 e8 e3 2d c1 5e 5e 00 00 80 5b ad c8 f7 7f 00 00 e8 d3 2d c1 5e 5e 00 09 e8 cb 2d c1 5e 5e 01 08 e8 c3 2d c1 5e 5e 02 07 e8 bb 2d c1 5e 5e 03 06 e8 b3 2d c1 5e 5e 04 05 e8 ab 2d c1 5e 5e 05 04 e8 a3 2d c1 5e 5e 06 03 e8 9b 2d c1 5e 5e 07 02 e8 93 2d c1 5e 5e 08 01 e8 8b 2d c1 5e 5e 09 00 10 5c ad c8 f7 7f 00 00 e8 7b 2d c1 5e 5e 00 00 b8 5d ad c8 f7 7f 00 00 e8 6b 2d c1 5e 5e 00 0a e8 63 2d c1 5e 5e 01 09 e8 5b 2d c1 5e 5e 02 08 e8 53 2d c1 5e 5e 03 07 e8 4b 2d c1 5e 5e 04 06 e8 43 2d c1 5e 5e 05 05 e8 3b 2d c1 5e 5e 06 04 e8 33 2d c1 5e 5e 07 03 e8 2b 2d c1 5e 5e 08 02 e8 23 2d c1 5e 5e 09 01 e8 1b 2d c1 5e 5e 0a 00 18 5e ad c8 f7 7f 00 00 e8 0b 2d c1 5e 5e 00 00 b0 5f ad c8 f7 7f 00 00 e8 fb 2c c1 5e 5e 00 00 80 60 ad c8 f7 7f 00 00 e8 eb 2c c1 5e 5e 00 00 e0 60 ad c8 f7 7f 00 00 e8 db 2c c1 5e 5e 00 00 40 61 ad c8 f7 7f 00 00 e8 cb 2c c1 5e 5e 00 09 e8 c3 2c c1 5e 5e 01 08 e8 bb 2c c1 5e 5e 02 07 e8 b3 2c c1 5e 5e 03 06 e8 ab 2c c1 5e 5e 04 05 e8 a3 2c c1 5e 5e 05 04 e8 9b 2c c1 5e 5e 06 03 e8 93 2c c1 5e 5e 07 02 e8 8b 2c c1 5e 5e 08 01 e8 83 2c c1 5e 5e 09 00 d0 61 ad c8 f7 7f 00 00 e8 73 2c c1 5e 5e 00 00 78 63 ad c8 f7 7f 00 00 e8 63 2c c1 5e 5e 00 09 e8 5b 2c c1 5e 5e 01 08 e8 53 2c c1 5e 5e 02 07 e8 4b 2c c1 5e 5e 03 06 e8 43 2c c1 5e 5e 04 05 e8 3b 2c c1 5e 5e 05 04 e8 33 2c c1 5e 5e 06 03 e8 2b 2c c1 5e 5e 07 02 e8 23 2c c1 5e 5e 08 01 e8 1b 2c c1 5e 5e 09 00 08 64 ad c8 f7 7f 00 00 e8 0b 2c c1 5e 5e 00 00 b0 65 ad c8 f7 7f 00 00 e8 fb 2b c1 5e 5e 00 00 e8 67 ad c8 f7 7f 00 00 e8 eb 2b c1 5e 5e 00 00 20 6a ad c8 f7 7f 00 00 00 00 00 00 00 00 00 00
60        | 7ff7c8652a70h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[8u]()                                                      | LiteralExpr<Vector256<byte>> eval<byte>(IExpr<Vector256<byte>> expr)                                          | 0f 1f 44 00 00 48 b8 30 01 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
61        | 7ff7c8652aa0h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[8i]()                                                      | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IExpr<Vector256<sbyte>> expr)                                       | 0f 1f 44 00 00 48 b8 08 05 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
62        | 7ff7c8652ad0h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[16u]()                                                     | LiteralExpr<Vector256<ushort>> eval<ushort>(IExpr<Vector256<ushort>> expr)                                    | 0f 1f 44 00 00 48 b8 f0 05 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
63        | 7ff7c8652b00h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[16i]()                                                     | LiteralExpr<Vector256<short>> eval<short>(IExpr<Vector256<short>> expr)                                       | 0f 1f 44 00 00 48 b8 d8 06 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
64        | 7ff7c8652b30h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[32u]()                                                     | LiteralExpr<Vector256<uint>> eval<uint>(IExpr<Vector256<uint>> expr)                                          | 0f 1f 44 00 00 48 b8 c0 07 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
65        | 7ff7c8652b60h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[32i]()                                                     | LiteralExpr<Vector256<int>> eval<int>(IExpr<Vector256<int>> expr)                                             | 0f 1f 44 00 00 48 b8 00 0d 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
66        | 7ff7c8652b90h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[64u]()                                                     | LiteralExpr<Vector256<ulong>> eval<ulong>(IExpr<Vector256<ulong>> expr)                                       | 0f 1f 44 00 00 48 b8 c8 27 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
67        | 7ff7c8652bc0h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[64i]()                                                     | LiteralExpr<Vector256<long>> eval<long>(IExpr<Vector256<long>> expr)                                          | 0f 1f 44 00 00 48 b8 e8 0d 65 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
68        | 7ff7c8652bf0h   | 231     | hex://logix/LogicEngine?satisfied#satisfied_g[8u](8u,8u)                                                      | bit satisfied<byte>(ComparisonExpr<byte> expr, byte a, byte b)                                                | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 10 ea 70 c7 f7 7f 00 00 ba 02 00 00 00 e8 cd 41 c1 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 71 fc ff ff 48 8b ce e8 f1 bb ff ff 0f b6 40 08 0f b6 c0 3c ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 40 5b ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 70 c7 f7 7f 00 00 ba 02 00 00 00 e8 5d 41 c1 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 09 fd ff ff 48 8b ce e8 61 bc ff ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
69        | 7ff7c8652c60h   | 119     | hex://logix/LogicEngine?satisfied#satisfied_g[8i](8i,8i)                                                      | bit satisfied<sbyte>(ComparisonExpr<sbyte> expr, sbyte a, sbyte b)                                            | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 70 c7 f7 7f 00 00 ba 02 00 00 00 e8 5d 41 c1 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 09 fd ff ff 48 8b ce e8 61 bc ff ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
70        | 7ff7c8652ce0h   | 1144    | hex://logix/LogicEngine?satisfied#satisfied_g[16u](16u,16u)                                                   | bit satisfied<ushort>(ComparisonExpr<ushort> expr, ushort a, ushort b)                                        | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 b8 69 0d c8 f7 7f 00 00 ba 02 00 00 00 e8 dd 40 c1 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 f0 fc ff ff 48 8b ce e8 90 bc ff ff 0f b7 40 08 0f b7 c0 0f b7 c0 3d ff ff 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 e3 28 c1 5e 5e 00 09 e8 db 28 c1 5e 5e 01 08 e8 d3 28 c1 5e 5e 02 07 e8 cb 28 c1 5e 5e 03 06 e8 c3 28 c1 5e 5e 04 05 e8 bb 28 c1 5e 5e 05 04 e8 b3 28 c1 5e 5e 06 03 e8 ab 28 c1 5e 5e 07 02 e8 a3 28 c1 5e 5e 08 01 e8 9b 28 c1 5e 5e 09 00 40 66 ad c8 f7 7f 00 00 e8 8b 28 c1 5e 5e 00 09 e8 83 28 c1 5e 5e 01 08 e8 7b 28 c1 5e 5e 02 07 e8 73 28 c1 5e 5e 03 06 e8 6b 28 c1 5e 5e 04 05 e8 63 28 c1 5e 5e 05 04 e8 5b 28 c1 5e 5e 06 03 e8 53 28 c1 5e 5e 07 02 e8 4b 28 c1 5e 5e 08 01 e8 43 28 c1 5e 5e 09 00 78 68 ad c8 f7 7f 00 00 e8 33 28 c1 5e 5e 00 09 e8 2b 28 c1 5e 5e 01 08 e8 23 28 c1 5e 5e 02 07 e8 1b 28 c1 5e 5e 03 06 e8 13 28 c1 5e 5e 04 05 e8 0b 28 c1 5e 5e 05 04 e8 03 28 c1 5e 5e 06 03 e8 fb 27 c1 5e 5e 07 02 e8 f3 27 c1 5e 5e 08 01 e8 eb 27 c1 5e 5e 09 00 b0 6a ad c8 f7 7f 00 00 e8 db 27 c1 5e 5e 00 00 58 6c ad c8 f7 7f 00 00 e8 cb 27 c1 5e 5e 00 09 e8 c3 27 c1 5e 5e 01 08 e8 bb 27 c1 5e 5e 02 07 e8 b3 27 c1 5e 5e 03 06 e8 ab 27 c1 5e 5e 04 05 e8 a3 27 c1 5e 5e 05 04 e8 9b 27 c1 5e 5e 06 03 e8 93 27 c1 5e 5e 07 02 e8 8b 27 c1 5e 5e 08 01 e8 83 27 c1 5e 5e 09 00 e8 6c ad c8 f7 7f 00 00 e8 73 27 c1 5e 5e 00 00 90 6e ad c8 f7 7f 00 00 e8 63 27 c1 5e 5e 00 00 f0 6e ad c8 f7 7f 00 00 e8 53 27 c1 5e 5e 00 00 50 6f ad c8 f7 7f 00 00 e8 43 27 c1 5e 5e 00 09 e8 3b 27 c1 5e 5e 01 08 e8 33 27 c1 5e 5e 02 07 e8 2b 27 c1 5e 5e 03 06 e8 23 27 c1 5e 5e 04 05 e8 1b 27 c1 5e 5e 05 04 e8 13 27 c1 5e 5e 06 03 e8 0b 27 c1 5e 5e 07 02 e8 03 27 c1 5e 5e 08 01 e8 fb 26 c1 5e 5e 09 00 e0 6f ad c8 f7 7f 00 00 e8 eb 26 c1 5e 5e 00 0c e8 e3 26 c1 5e 5e 01 0b e8 db 26 c1 5e 5e 02 0a e8 d3 26 c1 5e 5e 03 09 e8 cb 26 c1 5e 5e 04 08 e8 c3 26 c1 5e 5e 05 07 e8 bb 26 c1 5e 5e 06 06 e8 b3 26 c1 5e 5e 07 05 e8 ab 26 c1 5e 5e 08 04 e8 a3 26 c1 5e 5e 09 03 e8 9b 26 c1 5e 5e 0a 02 e8 93 26 c1 5e 5e 0b 01 e8 8b 26 c1 5e 5e 0c 00 98 71 ad c8 f7 7f 00 00 e8 7b 26 c1 5e 5e 00 00 20 73 ad c8 f7 7f 00 00 e8 6b 26 c1 5e 5e 00 09 e8 63 26 c1 5e 5e 01 08 e8 5b 26 c1 5e 5e 02 07 e8 53 26 c1 5e 5e 03 06 e8 4b 26 c1 5e 5e 04 05 e8 43 26 c1 5e 5e 05 04 e8 3b 26 c1 5e 5e 06 03 e8 33 26 c1 5e 5e 07 02 e8 2b 26 c1 5e 5e 08 01 e8 23 26 c1 5e 5e 09 00 00 74 ad c8 f7 7f 00 00 e8 13 26 c1 5e 5e 00 03 e8 0b 26 c1 5e 5e 01 02 e8 03 26 c1 5e 5e 02 01 e8 fb 25 c1 5e 5e 03 00 98 75 ad c8 f7 7f 00 00 e8 eb 25 c1 5e 5e 00 00 08 77 ad c8 f7 7f 00 00 e8 db 25 c1 5e 5e 00 09 e8 d3 25 c1 5e 5e 01 08 e8 cb 25 c1 5e 5e 02 07 e8 c3 25 c1 5e 5e 03 06 e8 bb 25 c1 5e 5e 04 05 e8 b3 25 c1 5e 5e 05 04 e8 ab 25 c1 5e 5e 06 03 e8 a3 25 c1 5e 5e 07 02 e8 9b 25 c1 5e 5e 08 01 e8 93 25 c1 5e 5e 09 00 98 77 ad c8 f7 7f 00 00 e8 83 25 c1 5e 5e 00 03 e8 7b 25 c1 5e 5e 03 02 e8 73 25 c1 5e 5e 06 01 e8 6b 25 c1 5e 5e 09 00 78 7a ad c8 f7 7f 00 00 e8 5b 25 c1 5e 5e 00 00 48 7b ad c8 f7 7f 00 00 e8 4b 25 c1 5e 5e 00 0a e8 43 25 c1 5e 5e 01 09 e8 3b 25 c1 5e 5e 02 08 e8 33 25 c1 5e 5e 03 07 e8 2b 25 c1 5e 5e 04 06 e8 23 25 c1 5e 5e 05 05 e8 1b 25 c1 5e 5e 06 04 e8 13 25 c1 5e 5e 07 03 e8 0b 25 c1 5e 5e 08 02 e8 03 25 c1 5e 5e 09 01 e8 fb 24 c1 5e 5e 0a 00 a8 7b ad c8 f7 7f 00 00 00 00 00 00 00 00 00 00
71        | 7ff7c8653160h   | 119     | hex://logix/LogicEngine?satisfied#satisfied_g[16i](16i,16i)                                                   | bit satisfied<short>(ComparisonExpr<short> expr, short a, short b)                                            | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 b8 6f 0d c8 f7 7f 00 00 ba 02 00 00 00 e8 5d 3c c1 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 f0 fb ff ff 48 8b ce e8 c0 b8 ff ff 48 0f bf 40 08 48 0f bf c0 48 0f bf c0 3d ff 7f 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
72        | 7ff7c86531e0h   | 1480    | hex://logix/LogicEngine?satisfied#satisfied_g[32u](32u,32u)                                                   | bit satisfied<uint>(ComparisonExpr<uint> expr, uint a, uint b)                                                | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 72 0d c8 f7 7f 00 00 ba 02 00 00 00 e8 dd 3b c1 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 ca fb ff ff 48 8b ce e8 f2 b8 ff ff 8b 40 08 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 a0 5f ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 48 5f 7d c7 f7 7f 00 00 ba 02 00 00 00 e8 6d 3b c1 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 b2 fb ff ff 48 8b ce e8 22 b9 ff ff 8b 40 08 3d ff ff ff 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 e8 60 ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 a8 14 a8 c7 f7 7f 00 00 ba 02 00 00 00 e8 fc 3a c1 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 a7 fb ff ff 48 8b ce e8 d7 fb ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 62 ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 38 7b 0d c8 f7 7f 00 00 ba 02 00 00 00 e8 8c 3a c1 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 bf fb ff ff 48 8b ce e8 df b8 ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 93 22 c1 5e 5e 00 00 28 7d ad c8 f7 7f 00 00 e8 83 22 c1 5e 5e 00 00 f8 7d ad c8 f7 7f 00 00 e8 73 22 c1 5e 5e 00 00 58 7e ad c8 f7 7f 00 00 e8 63 22 c1 5e 5e 00 00 b8 7e ad c8 f7 7f 00 00 e8 53 22 c1 5e 5e 00 09 e8 4b 22 c1 5e 5e 01 08 e8 43 22 c1 5e 5e 02 07 e8 3b 22 c1 5e 5e 03 06 e8 33 22 c1 5e 5e 04 05 e8 2b 22 c1 5e 5e 05 04 e8 23 22 c1 5e 5e 06 03 e8 1b 22 c1 5e 5e 07 02 e8 13 22 c1 5e 5e 08 01 e8 0b 22 c1 5e 5e 09 00 48 7f ad c8 f7 7f 00 00 e8 fb 21 c1 5e 5e 00 03 e8 f3 21 c1 5e 5e 03 02 e8 eb 21 c1 5e 5e 06 01 e8 e3 21 c1 5e 5e 09 00 28 82 ad c8 f7 7f 00 00 e8 d3 21 c1 5e 5e 00 00 f8 82 ad c8 f7 7f 00 00 e8 c3 21 c1 5e 5e 00 09 e8 bb 21 c1 5e 5e 01 08 e8 b3 21 c1 5e 5e 02 07 e8 ab 21 c1 5e 5e 03 06 e8 a3 21 c1 5e 5e 04 05 e8 9b 21 c1 5e 5e 05 04 e8 93 21 c1 5e 5e 06 03 e8 8b 21 c1 5e 5e 07 02 e8 83 21 c1 5e 5e 08 01 e8 7b 21 c1 5e 5e 09 00 88 83 ad c8 f7 7f 00 00 e8 6b 21 c1 5e 5e 00 03 e8 63 21 c1 5e 5e 03 02 e8 5b 21 c1 5e 5e 06 01 e8 53 21 c1 5e 5e 09 00 68 86 ad c8 f7 7f 00 00 e8 43 21 c1 5e 5e 00 00 38 87 ad c8 f7 7f 00 00 e8 33 21 c1 5e 5e 00 09 e8 2b 21 c1 5e 5e 01 08 e8 23 21 c1 5e 5e 02 07 e8 1b 21 c1 5e 5e 03 06 e8 13 21 c1 5e 5e 04 05 e8 0b 21 c1 5e 5e 05 04 e8 03 21 c1 5e 5e 06 03 e8 fb 20 c1 5e 5e 07 02 e8 f3 20 c1 5e 5e 08 01 e8 eb 20 c1 5e 5e 09 00 c8 87 ad c8 f7 7f 00 00 e8 db 20 c1 5e 5e 00 03 e8 d3 20 c1 5e 5e 03 02 e8 cb 20 c1 5e 5e 06 01 e8 c3 20 c1 5e 5e 09 00 a8 8a ad c8 f7 7f 00 00 e8 b3 20 c1 5e 5e 00 00 78 8b ad c8 f7 7f 00 00 e8 a3 20 c1 5e 5e 00 09 e8 9b 20 c1 5e 5e 01 08 e8 93 20 c1 5e 5e 02 07 e8 8b 20 c1 5e 5e 03 06 e8 83 20 c1 5e 5e 04 05 e8 7b 20 c1 5e 5e 05 04 e8 73 20 c1 5e 5e 06 03 e8 6b 20 c1 5e 5e 07 02 e8 63 20 c1 5e 5e 08 01 e8 5b 20 c1 5e 5e 09 00 08 8c ad c8 f7 7f 00 00 e8 4b 20 c1 5e 5e 00 03 e8 43 20 c1 5e 5e 03 02 e8 3b 20 c1 5e 5e 06 01 e8 33 20 c1 5e 5e 09 00 e8 8e ad c8 f7 7f 00 00 e8 23 20 c1 5e 5e 00 00 b8 8f ad c8 f7 7f 00 00 e8 13 20 c1 5e 5e 00 09 e8 0b 20 c1 5e 5e 01 08 e8 03 20 c1 5e 5e 02 07 e8 fb 1f c1 5e 5e 03 06 e8 f3 1f c1 5e 5e 04 05 e8 eb 1f c1 5e 5e 05 04 e8 e3 1f c1 5e 5e 06 03 e8 db 1f c1 5e 5e 07 02 e8 d3 1f c1 5e 5e 08 01 e8 cb 1f c1 5e 5e 09 00 48 90 ad c8 f7 7f 00 00 e8 bb 1f c1 5e 5e 00 03 e8 b3 1f c1 5e 5e 03 02 e8 ab 1f c1 5e 5e 06 01 e8 a3 1f c1 5e 5e 09 00 28 93 ad c8 f7 7f 00 00 e8 93 1f c1 5e 5e 00 00 f8 93 ad c8 f7 7f 00 00 e8 83 1f c1 5e 5e 00 09 e8 7b 1f c1 5e 5e 01 08 e8 73 1f c1 5e 5e 02 07 e8 6b 1f c1 5e 5e 03 06 e8 63 1f c1 5e 5e 04 05 e8 5b 1f c1 5e 5e 05 04 e8 53 1f c1 5e 5e 06 03 e8 4b 1f c1 5e 5e 07 02 e8 43 1f c1 5e 5e 08 01 e8 3b 1f c1 5e 5e 09 00 88 94 ad c8 f7 7f 00 00 e8 2b 1f c1 5e 5e 00 03 e8 23 1f c1 5e 5e 01 02 e8 1b 1f c1 5e 5e 02 01 e8 13 1f c1 5e 5e 03 00 20 96 ad c8 f7 7f 00 00 e8 03 1f c1 5e 5e 00 03 e8 fb 1e c1 5e 5e 03 02 e8 f3 1e c1 5e 5e 06 01 e8 eb 1e c1 5e 5e 09 00 50 98 ad c8 f7 7f 00 00 e8 db 1e c1 5e 5e 00 00 20 99 ad c8 f7 7f 00 00 e8 cb 1e c1 5e 5e 00 00 80 99 ad c8 f7 7f 00 00 e8 bb 1e c1 5e 5e 00 00 e0 99 ad c8 f7 7f 00 00 e8 ab 1e c1 5e 5e 00 00 d8 9f ad c8 f7 7f 00 00 00 00 00 00 00 00 00 00
73        | 7ff7c8653250h   | 1368    | hex://logix/LogicEngine?satisfied#satisfied_g[32i](32i,32i)                                                   | bit satisfied<int>(ComparisonExpr<int> expr, int a, int b)                                                    | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 48 5f 7d c7 f7 7f 00 00 ba 02 00 00 00 e8 6d 3b c1 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 b2 fb ff ff 48 8b ce e8 22 b9 ff ff 8b 40 08 3d ff ff ff 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 e8 60 ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 a8 14 a8 c7 f7 7f 00 00 ba 02 00 00 00 e8 fc 3a c1 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 a7 fb ff ff 48 8b ce e8 d7 fb ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 62 ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 38 7b 0d c8 f7 7f 00 00 ba 02 00 00 00 e8 8c 3a c1 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 bf fb ff ff 48 8b ce e8 df b8 ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 93 22 c1 5e 5e 00 00 28 7d ad c8 f7 7f 00 00 e8 83 22 c1 5e 5e 00 00 f8 7d ad c8 f7 7f 00 00 e8 73 22 c1 5e 5e 00 00 58 7e ad c8 f7 7f 00 00 e8 63 22 c1 5e 5e 00 00 b8 7e ad c8 f7 7f 00 00 e8 53 22 c1 5e 5e 00 09 e8 4b 22 c1 5e 5e 01 08 e8 43 22 c1 5e 5e 02 07 e8 3b 22 c1 5e 5e 03 06 e8 33 22 c1 5e 5e 04 05 e8 2b 22 c1 5e 5e 05 04 e8 23 22 c1 5e 5e 06 03 e8 1b 22 c1 5e 5e 07 02 e8 13 22 c1 5e 5e 08 01 e8 0b 22 c1 5e 5e 09 00 48 7f ad c8 f7 7f 00 00 e8 fb 21 c1 5e 5e 00 03 e8 f3 21 c1 5e 5e 03 02 e8 eb 21 c1 5e 5e 06 01 e8 e3 21 c1 5e 5e 09 00 28 82 ad c8 f7 7f 00 00 e8 d3 21 c1 5e 5e 00 00 f8 82 ad c8 f7 7f 00 00 e8 c3 21 c1 5e 5e 00 09 e8 bb 21 c1 5e 5e 01 08 e8 b3 21 c1 5e 5e 02 07 e8 ab 21 c1 5e 5e 03 06 e8 a3 21 c1 5e 5e 04 05 e8 9b 21 c1 5e 5e 05 04 e8 93 21 c1 5e 5e 06 03 e8 8b 21 c1 5e 5e 07 02 e8 83 21 c1 5e 5e 08 01 e8 7b 21 c1 5e 5e 09 00 88 83 ad c8 f7 7f 00 00 e8 6b 21 c1 5e 5e 00 03 e8 63 21 c1 5e 5e 03 02 e8 5b 21 c1 5e 5e 06 01 e8 53 21 c1 5e 5e 09 00 68 86 ad c8 f7 7f 00 00 e8 43 21 c1 5e 5e 00 00 38 87 ad c8 f7 7f 00 00 e8 33 21 c1 5e 5e 00 09 e8 2b 21 c1 5e 5e 01 08 e8 23 21 c1 5e 5e 02 07 e8 1b 21 c1 5e 5e 03 06 e8 13 21 c1 5e 5e 04 05 e8 0b 21 c1 5e 5e 05 04 e8 03 21 c1 5e 5e 06 03 e8 fb 20 c1 5e 5e 07 02 e8 f3 20 c1 5e 5e 08 01 e8 eb 20 c1 5e 5e 09 00 c8 87 ad c8 f7 7f 00 00 e8 db 20 c1 5e 5e 00 03 e8 d3 20 c1 5e 5e 03 02 e8 cb 20 c1 5e 5e 06 01 e8 c3 20 c1 5e 5e 09 00 a8 8a ad c8 f7 7f 00 00 e8 b3 20 c1 5e 5e 00 00 78 8b ad c8 f7 7f 00 00 e8 a3 20 c1 5e 5e 00 09 e8 9b 20 c1 5e 5e 01 08 e8 93 20 c1 5e 5e 02 07 e8 8b 20 c1 5e 5e 03 06 e8 83 20 c1 5e 5e 04 05 e8 7b 20 c1 5e 5e 05 04 e8 73 20 c1 5e 5e 06 03 e8 6b 20 c1 5e 5e 07 02 e8 63 20 c1 5e 5e 08 01 e8 5b 20 c1 5e 5e 09 00 08 8c ad c8 f7 7f 00 00 e8 4b 20 c1 5e 5e 00 03 e8 43 20 c1 5e 5e 03 02 e8 3b 20 c1 5e 5e 06 01 e8 33 20 c1 5e 5e 09 00 e8 8e ad c8 f7 7f 00 00 e8 23 20 c1 5e 5e 00 00 b8 8f ad c8 f7 7f 00 00 e8 13 20 c1 5e 5e 00 09 e8 0b 20 c1 5e 5e 01 08 e8 03 20 c1 5e 5e 02 07 e8 fb 1f c1 5e 5e 03 06 e8 f3 1f c1 5e 5e 04 05 e8 eb 1f c1 5e 5e 05 04 e8 e3 1f c1 5e 5e 06 03 e8 db 1f c1 5e 5e 07 02 e8 d3 1f c1 5e 5e 08 01 e8 cb 1f c1 5e 5e 09 00 48 90 ad c8 f7 7f 00 00 e8 bb 1f c1 5e 5e 00 03 e8 b3 1f c1 5e 5e 03 02 e8 ab 1f c1 5e 5e 06 01 e8 a3 1f c1 5e 5e 09 00 28 93 ad c8 f7 7f 00 00 e8 93 1f c1 5e 5e 00 00 f8 93 ad c8 f7 7f 00 00 e8 83 1f c1 5e 5e 00 09 e8 7b 1f c1 5e 5e 01 08 e8 73 1f c1 5e 5e 02 07 e8 6b 1f c1 5e 5e 03 06 e8 63 1f c1 5e 5e 04 05 e8 5b 1f c1 5e 5e 05 04 e8 53 1f c1 5e 5e 06 03 e8 4b 1f c1 5e 5e 07 02 e8 43 1f c1 5e 5e 08 01 e8 3b 1f c1 5e 5e 09 00 88 94 ad c8 f7 7f 00 00 e8 2b 1f c1 5e 5e 00 03 e8 23 1f c1 5e 5e 01 02 e8 1b 1f c1 5e 5e 02 01 e8 13 1f c1 5e 5e 03 00 20 96 ad c8 f7 7f 00 00 e8 03 1f c1 5e 5e 00 03 e8 fb 1e c1 5e 5e 03 02 e8 f3 1e c1 5e 5e 06 01 e8 eb 1e c1 5e 5e 09 00 50 98 ad c8 f7 7f 00 00 e8 db 1e c1 5e 5e 00 00 20 99 ad c8 f7 7f 00 00 e8 cb 1e c1 5e 5e 00 00 80 99 ad c8 f7 7f 00 00 e8 bb 1e c1 5e 5e 00 00 e0 99 ad c8 f7 7f 00 00 e8 ab 1e c1 5e 5e 00 00 d8 9f ad c8 f7 7f 00 00 00 00 00 00 00 00 00 00
74        | 7ff7c86532c0h   | 1256    | hex://logix/LogicEngine?satisfied#satisfied_g[64u](64u,64u)                                                   | bit satisfied<ulong>(ComparisonExpr<ulong> expr, ulong a, ulong b)                                            | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 a8 14 a8 c7 f7 7f 00 00 ba 02 00 00 00 e8 fc 3a c1 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 a7 fb ff ff 48 8b ce e8 d7 fb ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 62 ac c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 38 7b 0d c8 f7 7f 00 00 ba 02 00 00 00 e8 8c 3a c1 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 bf fb ff ff 48 8b ce e8 df b8 ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 93 22 c1 5e 5e 00 00 28 7d ad c8 f7 7f 00 00 e8 83 22 c1 5e 5e 00 00 f8 7d ad c8 f7 7f 00 00 e8 73 22 c1 5e 5e 00 00 58 7e ad c8 f7 7f 00 00 e8 63 22 c1 5e 5e 00 00 b8 7e ad c8 f7 7f 00 00 e8 53 22 c1 5e 5e 00 09 e8 4b 22 c1 5e 5e 01 08 e8 43 22 c1 5e 5e 02 07 e8 3b 22 c1 5e 5e 03 06 e8 33 22 c1 5e 5e 04 05 e8 2b 22 c1 5e 5e 05 04 e8 23 22 c1 5e 5e 06 03 e8 1b 22 c1 5e 5e 07 02 e8 13 22 c1 5e 5e 08 01 e8 0b 22 c1 5e 5e 09 00 48 7f ad c8 f7 7f 00 00 e8 fb 21 c1 5e 5e 00 03 e8 f3 21 c1 5e 5e 03 02 e8 eb 21 c1 5e 5e 06 01 e8 e3 21 c1 5e 5e 09 00 28 82 ad c8 f7 7f 00 00 e8 d3 21 c1 5e 5e 00 00 f8 82 ad c8 f7 7f 00 00 e8 c3 21 c1 5e 5e 00 09 e8 bb 21 c1 5e 5e 01 08 e8 b3 21 c1 5e 5e 02 07 e8 ab 21 c1 5e 5e 03 06 e8 a3 21 c1 5e 5e 04 05 e8 9b 21 c1 5e 5e 05 04 e8 93 21 c1 5e 5e 06 03 e8 8b 21 c1 5e 5e 07 02 e8 83 21 c1 5e 5e 08 01 e8 7b 21 c1 5e 5e 09 00 88 83 ad c8 f7 7f 00 00 e8 6b 21 c1 5e 5e 00 03 e8 63 21 c1 5e 5e 03 02 e8 5b 21 c1 5e 5e 06 01 e8 53 21 c1 5e 5e 09 00 68 86 ad c8 f7 7f 00 00 e8 43 21 c1 5e 5e 00 00 38 87 ad c8 f7 7f 00 00 e8 33 21 c1 5e 5e 00 09 e8 2b 21 c1 5e 5e 01 08 e8 23 21 c1 5e 5e 02 07 e8 1b 21 c1 5e 5e 03 06 e8 13 21 c1 5e 5e 04 05 e8 0b 21 c1 5e 5e 05 04 e8 03 21 c1 5e 5e 06 03 e8 fb 20 c1 5e 5e 07 02 e8 f3 20 c1 5e 5e 08 01 e8 eb 20 c1 5e 5e 09 00 c8 87 ad c8 f7 7f 00 00 e8 db 20 c1 5e 5e 00 03 e8 d3 20 c1 5e 5e 03 02 e8 cb 20 c1 5e 5e 06 01 e8 c3 20 c1 5e 5e 09 00 a8 8a ad c8 f7 7f 00 00 e8 b3 20 c1 5e 5e 00 00 78 8b ad c8 f7 7f 00 00 e8 a3 20 c1 5e 5e 00 09 e8 9b 20 c1 5e 5e 01 08 e8 93 20 c1 5e 5e 02 07 e8 8b 20 c1 5e 5e 03 06 e8 83 20 c1 5e 5e 04 05 e8 7b 20 c1 5e 5e 05 04 e8 73 20 c1 5e 5e 06 03 e8 6b 20 c1 5e 5e 07 02 e8 63 20 c1 5e 5e 08 01 e8 5b 20 c1 5e 5e 09 00 08 8c ad c8 f7 7f 00 00 e8 4b 20 c1 5e 5e 00 03 e8 43 20 c1 5e 5e 03 02 e8 3b 20 c1 5e 5e 06 01 e8 33 20 c1 5e 5e 09 00 e8 8e ad c8 f7 7f 00 00 e8 23 20 c1 5e 5e 00 00 b8 8f ad c8 f7 7f 00 00 e8 13 20 c1 5e 5e 00 09 e8 0b 20 c1 5e 5e 01 08 e8 03 20 c1 5e 5e 02 07 e8 fb 1f c1 5e 5e 03 06 e8 f3 1f c1 5e 5e 04 05 e8 eb 1f c1 5e 5e 05 04 e8 e3 1f c1 5e 5e 06 03 e8 db 1f c1 5e 5e 07 02 e8 d3 1f c1 5e 5e 08 01 e8 cb 1f c1 5e 5e 09 00 48 90 ad c8 f7 7f 00 00 e8 bb 1f c1 5e 5e 00 03 e8 b3 1f c1 5e 5e 03 02 e8 ab 1f c1 5e 5e 06 01 e8 a3 1f c1 5e 5e 09 00 28 93 ad c8 f7 7f 00 00 e8 93 1f c1 5e 5e 00 00 f8 93 ad c8 f7 7f 00 00 e8 83 1f c1 5e 5e 00 09 e8 7b 1f c1 5e 5e 01 08 e8 73 1f c1 5e 5e 02 07 e8 6b 1f c1 5e 5e 03 06 e8 63 1f c1 5e 5e 04 05 e8 5b 1f c1 5e 5e 05 04 e8 53 1f c1 5e 5e 06 03 e8 4b 1f c1 5e 5e 07 02 e8 43 1f c1 5e 5e 08 01 e8 3b 1f c1 5e 5e 09 00 88 94 ad c8 f7 7f 00 00 e8 2b 1f c1 5e 5e 00 03 e8 23 1f c1 5e 5e 01 02 e8 1b 1f c1 5e 5e 02 01 e8 13 1f c1 5e 5e 03 00 20 96 ad c8 f7 7f 00 00 e8 03 1f c1 5e 5e 00 03 e8 fb 1e c1 5e 5e 03 02 e8 f3 1e c1 5e 5e 06 01 e8 eb 1e c1 5e 5e 09 00 50 98 ad c8 f7 7f 00 00 e8 db 1e c1 5e 5e 00 00 20 99 ad c8 f7 7f 00 00 e8 cb 1e c1 5e 5e 00 00 80 99 ad c8 f7 7f 00 00 e8 bb 1e c1 5e 5e 00 00 e0 99 ad c8 f7 7f 00 00 e8 ab 1e c1 5e 5e 00 00 d8 9f ad c8 f7 7f 00 00 00 00 00 00 00 00 00 00
75        | 7ff7c8653330h   | 1144    | hex://logix/LogicEngine?satisfied#satisfied_g[64i](64i,64i)                                                   | bit satisfied<long>(ComparisonExpr<long> expr, long a, long b)                                                | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 38 7b 0d c8 f7 7f 00 00 ba 02 00 00 00 e8 8c 3a c1 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 bf fb ff ff 48 8b ce e8 df b8 ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 93 22 c1 5e 5e 00 00 28 7d ad c8 f7 7f 00 00 e8 83 22 c1 5e 5e 00 00 f8 7d ad c8 f7 7f 00 00 e8 73 22 c1 5e 5e 00 00 58 7e ad c8 f7 7f 00 00 e8 63 22 c1 5e 5e 00 00 b8 7e ad c8 f7 7f 00 00 e8 53 22 c1 5e 5e 00 09 e8 4b 22 c1 5e 5e 01 08 e8 43 22 c1 5e 5e 02 07 e8 3b 22 c1 5e 5e 03 06 e8 33 22 c1 5e 5e 04 05 e8 2b 22 c1 5e 5e 05 04 e8 23 22 c1 5e 5e 06 03 e8 1b 22 c1 5e 5e 07 02 e8 13 22 c1 5e 5e 08 01 e8 0b 22 c1 5e 5e 09 00 48 7f ad c8 f7 7f 00 00 e8 fb 21 c1 5e 5e 00 03 e8 f3 21 c1 5e 5e 03 02 e8 eb 21 c1 5e 5e 06 01 e8 e3 21 c1 5e 5e 09 00 28 82 ad c8 f7 7f 00 00 e8 d3 21 c1 5e 5e 00 00 f8 82 ad c8 f7 7f 00 00 e8 c3 21 c1 5e 5e 00 09 e8 bb 21 c1 5e 5e 01 08 e8 b3 21 c1 5e 5e 02 07 e8 ab 21 c1 5e 5e 03 06 e8 a3 21 c1 5e 5e 04 05 e8 9b 21 c1 5e 5e 05 04 e8 93 21 c1 5e 5e 06 03 e8 8b 21 c1 5e 5e 07 02 e8 83 21 c1 5e 5e 08 01 e8 7b 21 c1 5e 5e 09 00 88 83 ad c8 f7 7f 00 00 e8 6b 21 c1 5e 5e 00 03 e8 63 21 c1 5e 5e 03 02 e8 5b 21 c1 5e 5e 06 01 e8 53 21 c1 5e 5e 09 00 68 86 ad c8 f7 7f 00 00 e8 43 21 c1 5e 5e 00 00 38 87 ad c8 f7 7f 00 00 e8 33 21 c1 5e 5e 00 09 e8 2b 21 c1 5e 5e 01 08 e8 23 21 c1 5e 5e 02 07 e8 1b 21 c1 5e 5e 03 06 e8 13 21 c1 5e 5e 04 05 e8 0b 21 c1 5e 5e 05 04 e8 03 21 c1 5e 5e 06 03 e8 fb 20 c1 5e 5e 07 02 e8 f3 20 c1 5e 5e 08 01 e8 eb 20 c1 5e 5e 09 00 c8 87 ad c8 f7 7f 00 00 e8 db 20 c1 5e 5e 00 03 e8 d3 20 c1 5e 5e 03 02 e8 cb 20 c1 5e 5e 06 01 e8 c3 20 c1 5e 5e 09 00 a8 8a ad c8 f7 7f 00 00 e8 b3 20 c1 5e 5e 00 00 78 8b ad c8 f7 7f 00 00 e8 a3 20 c1 5e 5e 00 09 e8 9b 20 c1 5e 5e 01 08 e8 93 20 c1 5e 5e 02 07 e8 8b 20 c1 5e 5e 03 06 e8 83 20 c1 5e 5e 04 05 e8 7b 20 c1 5e 5e 05 04 e8 73 20 c1 5e 5e 06 03 e8 6b 20 c1 5e 5e 07 02 e8 63 20 c1 5e 5e 08 01 e8 5b 20 c1 5e 5e 09 00 08 8c ad c8 f7 7f 00 00 e8 4b 20 c1 5e 5e 00 03 e8 43 20 c1 5e 5e 03 02 e8 3b 20 c1 5e 5e 06 01 e8 33 20 c1 5e 5e 09 00 e8 8e ad c8 f7 7f 00 00 e8 23 20 c1 5e 5e 00 00 b8 8f ad c8 f7 7f 00 00 e8 13 20 c1 5e 5e 00 09 e8 0b 20 c1 5e 5e 01 08 e8 03 20 c1 5e 5e 02 07 e8 fb 1f c1 5e 5e 03 06 e8 f3 1f c1 5e 5e 04 05 e8 eb 1f c1 5e 5e 05 04 e8 e3 1f c1 5e 5e 06 03 e8 db 1f c1 5e 5e 07 02 e8 d3 1f c1 5e 5e 08 01 e8 cb 1f c1 5e 5e 09 00 48 90 ad c8 f7 7f 00 00 e8 bb 1f c1 5e 5e 00 03 e8 b3 1f c1 5e 5e 03 02 e8 ab 1f c1 5e 5e 06 01 e8 a3 1f c1 5e 5e 09 00 28 93 ad c8 f7 7f 00 00 e8 93 1f c1 5e 5e 00 00 f8 93 ad c8 f7 7f 00 00 e8 83 1f c1 5e 5e 00 09 e8 7b 1f c1 5e 5e 01 08 e8 73 1f c1 5e 5e 02 07 e8 6b 1f c1 5e 5e 03 06 e8 63 1f c1 5e 5e 04 05 e8 5b 1f c1 5e 5e 05 04 e8 53 1f c1 5e 5e 06 03 e8 4b 1f c1 5e 5e 07 02 e8 43 1f c1 5e 5e 08 01 e8 3b 1f c1 5e 5e 09 00 88 94 ad c8 f7 7f 00 00 e8 2b 1f c1 5e 5e 00 03 e8 23 1f c1 5e 5e 01 02 e8 1b 1f c1 5e 5e 02 01 e8 13 1f c1 5e 5e 03 00 20 96 ad c8 f7 7f 00 00 e8 03 1f c1 5e 5e 00 03 e8 fb 1e c1 5e 5e 03 02 e8 f3 1e c1 5e 5e 06 01 e8 eb 1e c1 5e 5e 09 00 50 98 ad c8 f7 7f 00 00 e8 db 1e c1 5e 5e 00 00 20 99 ad c8 f7 7f 00 00 e8 cb 1e c1 5e 5e 00 00 80 99 ad c8 f7 7f 00 00 e8 bb 1e c1 5e 5e 00 00 e0 99 ad c8 f7 7f 00 00 e8 ab 1e c1 5e 5e 00 00 d8 9f ad c8 f7 7f 00 00 00 00 00 00 00 00 00 00
76        | 7ff7c86537b0h   | 147     | hex://logix/LogicEngine?satisfied#satisfied_g[8u](v128x8u,v128x8u)                                            | bit satisfied<byte>(ComparisonExpr<Vector128<byte>> expr, Vector128<byte> a, Vector128<byte> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 90 79 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 09 36 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 9a f8 ff ff 48 8b cb e8 62 bd ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
77        | 7ff7c8653850h   | 147     | hex://logix/LogicEngine?satisfied#satisfied_g[8i](v128x8i,v128x8i)                                            | bit satisfied<sbyte>(ComparisonExpr<Vector128<sbyte>> expr, Vector128<sbyte> a, Vector128<sbyte> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 40 81 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 69 35 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 82 fb ff ff 48 8b cb e8 b2 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
78        | 7ff7c86538f0h   | 147     | hex://logix/LogicEngine?satisfied#satisfied_g[16u](v128x16u,v128x16u)                                         | bit satisfied<ushort>(ComparisonExpr<Vector128<ushort>> expr, Vector128<ushort> a, Vector128<ushort> b)       | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 80 85 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 c9 34 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 72 fb ff ff 48 8b cb e8 f2 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
79        | 7ff7c8653990h   | 147     | hex://logix/LogicEngine?satisfied#satisfied_g[16i](v128x16i,v128x16i)                                         | bit satisfied<short>(ComparisonExpr<Vector128<short>> expr, Vector128<short> a, Vector128<short> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 c0 89 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 29 34 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 62 fb ff ff 48 8b cb e8 32 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
80        | 7ff7c8653a30h   | 147     | hex://logix/LogicEngine?satisfied#satisfied_g[32u](v128x32u,v128x32u)                                         | bit satisfied<uint>(ComparisonExpr<Vector128<uint>> expr, Vector128<uint> a, Vector128<uint> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 00 8e ad c8 f7 7f 00 00 ba 02 00 00 00 e8 89 33 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 52 fb ff ff 48 8b cb e8 72 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
81        | 7ff7c8653ad0h   | 147     | hex://logix/LogicEngine?satisfied#satisfied_g[32i](v128x32i,v128x32i)                                         | bit satisfied<int>(ComparisonExpr<Vector128<int>> expr, Vector128<int> a, Vector128<int> b)                   | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 40 92 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 e9 32 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 42 fb ff ff 48 8b cb e8 c2 c6 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
82        | 7ff7c8653b70h   | 1176    | hex://logix/LogicEngine?satisfied#satisfied_g[64u](v128x64u,v128x64u)                                         | bit satisfied<ulong>(ComparisonExpr<Vector128<ulong>> expr, Vector128<ulong> a, Vector128<ulong> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 68 97 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 49 32 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 32 fb ff ff 48 8b cb e8 b2 fb ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 33 1a c1 5e 5e 00 09 e8 2b 1a c1 5e 5e 01 08 e8 23 1a c1 5e 5e 02 07 e8 1b 1a c1 5e 5e 03 06 e8 13 1a c1 5e 5e 04 05 e8 0b 1a c1 5e 5e 05 04 e8 03 1a c1 5e 5e 06 03 e8 fb 19 c1 5e 5e 07 02 e8 f3 19 c1 5e 5e 08 01 e8 eb 19 c1 5e 5e 09 00 70 9a ad c8 f7 7f 00 00 e8 db 19 c1 5e 5e 00 03 e8 d3 19 c1 5e 5e 03 02 e8 cb 19 c1 5e 5e 06 01 e8 c3 19 c1 5e 5e 09 00 50 9d ad c8 f7 7f 00 00 e8 b3 19 c1 5e 5e 00 0c e8 ab 19 c1 5e 5e 01 0b e8 a3 19 c1 5e 5e 02 0a e8 9b 19 c1 5e 5e 03 09 e8 93 19 c1 5e 5e 04 08 e8 8b 19 c1 5e 5e 05 07 e8 83 19 c1 5e 5e 06 06 e8 7b 19 c1 5e 5e 07 05 e8 73 19 c1 5e 5e 08 04 e8 6b 19 c1 5e 5e 09 03 e8 63 19 c1 5e 5e 0a 02 e8 5b 19 c1 5e 5e 0b 01 e8 53 19 c1 5e 5e 0c 00 50 9e ad c8 f7 7f 00 00 e8 43 19 c1 5e 5e 00 09 e8 3b 19 c1 5e 5e 01 08 e8 33 19 c1 5e 5e 02 07 e8 2b 19 c1 5e 5e 03 06 e8 23 19 c1 5e 5e 04 05 e8 1b 19 c1 5e 5e 05 04 e8 13 19 c1 5e 5e 06 03 e8 0b 19 c1 5e 5e 07 02 e8 03 19 c1 5e 5e 08 01 e8 fb 18 c1 5e 5e 09 00 b8 a0 ad c8 f7 7f 00 00 e8 eb 18 c1 5e 5e 00 03 e8 e3 18 c1 5e 5e 01 02 e8 db 18 c1 5e 5e 02 01 e8 d3 18 c1 5e 5e 03 00 50 a2 ad c8 f7 7f 00 00 e8 c3 18 c1 5e 5e 00 00 c0 a3 ad c8 f7 7f 00 00 e8 b3 18 c1 5e 5e 00 09 e8 ab 18 c1 5e 5e 01 08 e8 a3 18 c1 5e 5e 02 07 e8 9b 18 c1 5e 5e 03 06 e8 93 18 c1 5e 5e 04 05 e8 8b 18 c1 5e 5e 05 04 e8 83 18 c1 5e 5e 06 03 e8 7b 18 c1 5e 5e 07 02 e8 73 18 c1 5e 5e 08 01 e8 6b 18 c1 5e 5e 09 00 50 a4 ad c8 f7 7f 00 00 e8 5b 18 c1 5e 5e 00 03 e8 53 18 c1 5e 5e 03 02 e8 4b 18 c1 5e 5e 06 01 e8 43 18 c1 5e 5e 09 00 30 a7 ad c8 f7 7f 00 00 e8 33 18 c1 5e 5e 00 00 00 a8 ad c8 f7 7f 00 00 e8 23 18 c1 5e 5e 00 0a e8 1b 18 c1 5e 5e 01 09 e8 13 18 c1 5e 5e 02 08 e8 0b 18 c1 5e 5e 03 07 e8 03 18 c1 5e 5e 04 06 e8 fb 17 c1 5e 5e 05 05 e8 f3 17 c1 5e 5e 06 04 e8 eb 17 c1 5e 5e 07 03 e8 e3 17 c1 5e 5e 08 02 e8 db 17 c1 5e 5e 09 01 e8 d3 17 c1 5e 5e 0a 00 60 a8 ad c8 f7 7f 00 00 e8 c3 17 c1 5e 5e 00 00 e0 a9 ad c8 f7 7f 00 00 e8 b3 17 c1 5e 5e 00 00 b0 aa ad c8 f7 7f 00 00 e8 a3 17 c1 5e 5e 00 00 10 ab ad c8 f7 7f 00 00 e8 93 17 c1 5e 5e 00 00 70 ab ad c8 f7 7f 00 00 e8 83 17 c1 5e 5e 00 09 e8 7b 17 c1 5e 5e 01 08 e8 73 17 c1 5e 5e 02 07 e8 6b 17 c1 5e 5e 03 06 e8 63 17 c1 5e 5e 04 05 e8 5b 17 c1 5e 5e 05 04 e8 53 17 c1 5e 5e 06 03 e8 4b 17 c1 5e 5e 07 02 e8 43 17 c1 5e 5e 08 01 e8 3b 17 c1 5e 5e 09 00 00 ac ad c8 f7 7f 00 00 e8 2b 17 c1 5e 5e 00 03 e8 23 17 c1 5e 5e 03 02 e8 1b 17 c1 5e 5e 06 01 e8 13 17 c1 5e 5e 09 00 e0 ae ad c8 f7 7f 00 00 e8 03 17 c1 5e 5e 00 00 b0 af ad c8 f7 7f 00 00 e8 f3 16 c1 5e 5e 00 09 e8 eb 16 c1 5e 5e 01 08 e8 e3 16 c1 5e 5e 02 07 e8 db 16 c1 5e 5e 03 06 e8 d3 16 c1 5e 5e 04 05 e8 cb 16 c1 5e 5e 05 04 e8 c3 16 c1 5e 5e 06 03 e8 bb 16 c1 5e 5e 07 02 e8 b3 16 c1 5e 5e 08 01 e8 ab 16 c1 5e 5e 09 00 40 b0 ad c8 f7 7f 00 00 e8 9b 16 c1 5e 5e 00 03 e8 93 16 c1 5e 5e 03 02 e8 8b 16 c1 5e 5e 06 01 e8 83 16 c1 5e 5e 09 00 20 b3 ad c8 f7 7f 00 00 e8 73 16 c1 5e 5e 00 00 f0 b3 ad c8 f7 7f 00 00 e8 63 16 c1 5e 5e 00 03 e8 5b 16 c1 5e 5e 03 02 e8 53 16 c1 5e 5e 06 01 e8 4b 16 c1 5e 5e 09 00 60 b7 ad c8 f7 7f 00 00 00 00 00 00 00 00 00 00
83        | 7ff7c8654010h   | 147     | hex://logix/LogicEngine?satisfied#satisfied_g[64i](v128x64i,v128x64i)                                         | bit satisfied<long>(ComparisonExpr<Vector128<long>> expr, Vector128<long> a, Vector128<long> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 68 9c ad c8 f7 7f 00 00 ba 02 00 00 00 e8 a9 2d c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 62 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
84        | 7ff7c86540b0h   | 151     | hex://logix/LogicEngine?satisfied#satisfied_g[8u](v256x8u,v256x8u)                                            | bit satisfied<byte>(ComparisonExpr<Vector256<byte>> expr, Vector256<byte> a, Vector256<byte> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 48 a6 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 09 2d c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 c2 fc ff ff 48 8b cb e8 a2 c2 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
85        | 7ff7c8654150h   | 151     | hex://logix/LogicEngine?satisfied#satisfied_g[8i](v256x8i,v256x8i)                                            | bit satisfied<sbyte>(ComparisonExpr<Vector256<sbyte>> expr, Vector256<sbyte> a, Vector256<sbyte> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 f8 ad ad c8 f7 7f 00 00 ba 02 00 00 00 e8 69 2c c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 52 fd ff ff 48 8b cb e8 22 c7 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
86        | 7ff7c86541f0h   | 928     | hex://logix/LogicEngine?satisfied#satisfied_g[16u](v256x16u,v256x16u)                                         | bit satisfied<ushort>(ComparisonExpr<Vector256<ushort>> expr, Vector256<ushort> a, Vector256<ushort> b)       | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 38 b2 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 c9 2b c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 42 fd ff ff 48 8b cb e8 92 c7 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 b3 13 c1 5e 5e 00 09 e8 ab 13 c1 5e 5e 01 08 e8 a3 13 c1 5e 5e 02 07 e8 9b 13 c1 5e 5e 03 06 e8 93 13 c1 5e 5e 04 05 e8 8b 13 c1 5e 5e 05 04 e8 83 13 c1 5e 5e 06 03 e8 7b 13 c1 5e 5e 07 02 e8 73 13 c1 5e 5e 08 01 e8 6b 13 c1 5e 5e 09 00 80 b4 ad c8 f7 7f 00 00 e8 5b 13 c1 5e 5e 00 00 30 b8 ad c8 f7 7f 00 00 e8 4b 13 c1 5e 5e 00 09 e8 43 13 c1 5e 5e 01 08 e8 3b 13 c1 5e 5e 02 07 e8 33 13 c1 5e 5e 03 06 e8 2b 13 c1 5e 5e 04 05 e8 23 13 c1 5e 5e 05 04 e8 1b 13 c1 5e 5e 06 03 e8 13 13 c1 5e 5e 07 02 e8 0b 13 c1 5e 5e 08 01 e8 03 13 c1 5e 5e 09 00 c0 b8 ad c8 f7 7f 00 00 e8 f3 12 c1 5e 5e 00 03 e8 eb 12 c1 5e 5e 03 02 e8 e3 12 c1 5e 5e 06 01 e8 db 12 c1 5e 5e 09 00 a0 bb ad c8 f7 7f 00 00 e8 cb 12 c1 5e 5e 00 00 70 bc ad c8 f7 7f 00 00 e8 bb 12 c1 5e 5e 00 09 e8 b3 12 c1 5e 5e 01 08 e8 ab 12 c1 5e 5e 02 07 e8 a3 12 c1 5e 5e 03 06 e8 9b 12 c1 5e 5e 04 05 e8 93 12 c1 5e 5e 05 04 e8 8b 12 c1 5e 5e 06 03 e8 83 12 c1 5e 5e 07 02 e8 7b 12 c1 5e 5e 08 01 e8 73 12 c1 5e 5e 09 00 00 bd ad c8 f7 7f 00 00 e8 63 12 c1 5e 5e 00 03 e8 5b 12 c1 5e 5e 03 02 e8 53 12 c1 5e 5e 06 01 e8 4b 12 c1 5e 5e 09 00 e0 bf ad c8 f7 7f 00 00 e8 3b 12 c1 5e 5e 00 00 b0 c0 ad c8 f7 7f 00 00 e8 2b 12 c1 5e 5e 00 09 e8 23 12 c1 5e 5e 01 08 e8 1b 12 c1 5e 5e 02 07 e8 13 12 c1 5e 5e 03 06 e8 0b 12 c1 5e 5e 04 05 e8 03 12 c1 5e 5e 05 04 e8 fb 11 c1 5e 5e 06 03 e8 f3 11 c1 5e 5e 07 02 e8 eb 11 c1 5e 5e 08 01 e8 e3 11 c1 5e 5e 09 00 40 c1 ad c8 f7 7f 00 00 e8 d3 11 c1 5e 5e 00 03 e8 cb 11 c1 5e 5e 01 02 e8 c3 11 c1 5e 5e 02 01 e8 bb 11 c1 5e 5e 03 00 d8 c2 ad c8 f7 7f 00 00 e8 ab 11 c1 5e 5e 00 03 e8 a3 11 c1 5e 5e 03 02 e8 9b 11 c1 5e 5e 06 01 e8 93 11 c1 5e 5e 09 00 08 c5 ad c8 f7 7f 00 00 e8 83 11 c1 5e 5e 00 00 d8 c5 ad c8 f7 7f 00 00 e8 73 11 c1 5e 5e 00 00 38 c6 ad c8 f7 7f 00 00 e8 63 11 c1 5e 5e 00 00 98 c6 ad c8 f7 7f 00 00 e8 53 11 c1 5e 5e 00 09 e8 4b 11 c1 5e 5e 01 08 e8 43 11 c1 5e 5e 02 07 e8 3b 11 c1 5e 5e 03 06 e8 33 11 c1 5e 5e 04 05 e8 2b 11 c1 5e 5e 05 04 e8 23 11 c1 5e 5e 06 03 e8 1b 11 c1 5e 5e 07 02 e8 13 11 c1 5e 5e 08 01 e8 0b 11 c1 5e 5e 09 00 28 c7 ad c8 f7 7f 00 00 e8 fb 10 c1 5e 5e 00 03 e8 f3 10 c1 5e 5e 03 02 e8 eb 10 c1 5e 5e 06 01 e8 e3 10 c1 5e 5e 09 00 08 ca ad c8 f7 7f 00 00 e8 d3 10 c1 5e 5e 00 00 f0 cc ad c8 f7 7f 00 00 e8 c3 10 c1 5e 5e 00 00 68 cd ad c8 f7 7f 00 00 00 00 00 00 00 00 00 00
87        | 7ff7c8654690h   | 151     | hex://logix/LogicEngine?satisfied#satisfied_g[16i](v256x16i,v256x16i)                                         | bit satisfied<short>(ComparisonExpr<Vector256<short>> expr, Vector256<short> a, Vector256<short> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 78 b6 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 29 27 c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 02 c4 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
88        | 7ff7c8654730h   | 151     | hex://logix/LogicEngine?satisfied#satisfied_g[32u](v256x32u,v256x32u)                                         | bit satisfied<uint>(ComparisonExpr<Vector256<uint>> expr, Vector256<uint> a, Vector256<uint> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 b8 ba ad c8 f7 7f 00 00 ba 02 00 00 00 e8 89 26 c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 aa fb ff ff 48 8b cb e8 72 c4 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
89        | 7ff7c86547d0h   | 151     | hex://logix/LogicEngine?satisfied#satisfied_g[32i](v256x32i,v256x32i)                                         | bit satisfied<int>(ComparisonExpr<Vector256<int>> expr, Vector256<int> a, Vector256<int> b)                   | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 f8 be ad c8 f7 7f 00 00 ba 02 00 00 00 e8 e9 25 c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 9a fb ff ff 48 8b cb e8 f2 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
90        | 7ff7c8654870h   | 151     | hex://logix/LogicEngine?satisfied#satisfied_g[64u](v256x64u,v256x64u)                                         | bit satisfied<ulong>(ComparisonExpr<Vector256<ulong>> expr, Vector256<ulong> a, Vector256<ulong> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 20 c4 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 49 25 c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 8a fb ff ff 48 8b cb e8 0a fc ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
91        | 7ff7c8654910h   | 151     | hex://logix/LogicEngine?satisfied#satisfied_g[64i](v256x64i,v256x64i)                                         | bit satisfied<long>(ComparisonExpr<Vector256<long>> expr, Vector256<long> a, Vector256<long> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 20 c9 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 a9 24 c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 c2 fb ff ff 48 8b cb e8 c2 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
92        | 7ff7c86549b0h   | 35      | hex://logix/LogicEngine?eval#eval_()                                                                          | bit eval(ILogicExpr expr)                                                                                     | 0f 1f 44 00 00 48 b8 00 86 e3 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
93        | 7ff7c86549e0h   | 607     | hex://logix/LogicEngine?satisfied#satisfied_(1u,1u)                                                           | bit satisfied(ComparisonExpr expr, bit a, bit b)                                                              | 57 56 48 83 ec 28 48 8b f1 41 8b f8 8b 0e 48 8b 4e 18 83 79 08 00 76 48 48 8b 49 10 49 bb 88 0c 61 c7 f7 7f 00 00 39 09 ff 15 7a c2 fb fe 48 8b 4e 18 83 79 08 01 76 28 48 8b 49 18 8b d7 49 bb 90 0c 61 c7 f7 7f 00 00 39 09 ff 15 60 c2 fb fe 48 8b ce e8 c8 3b 7e ff 90 48 83 c4 28 5e 5f c3 e8 8b b3 d3 5e cc 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 b8 84 ac c8 f7 7f 00 00 55 41 57 41 56 57 56 53 48 83 ec 48 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 4e 10 48 8b 5f 10 41 be b6 00 00 00 41 bf 01 00 00 00 8b 49 08 3b 4b 08 0f 85 cb 00 00 00 e8 a8 43 7e ff 48 8b c8 49 bb 98 0c 61 c7 f7 7f 00 00 39 09 ff 15 e3 c1 fb fe 48 89 45 c8 48 8b 4d c8 49 bb a0 0c 61 c7 f7 7f 00 00 39 09 ff 15 d1 c1 fb fe 85 c0 74 51 48 8b 4d c8 49 bb a8 0c 61 c7 f7 7f 00 00 39 09 ff 15 bf c1 fb fe 48 8b d0 48 8b ce e8 44 51 7e ff 48 8b ce e8 04 3b 7e ff 8b d8 48 8b cf e8 fa 3a 7e ff 3b d8 75 32 48 8b 4d c8 49 bb a0 0c 61 c7 f7 7f 00 00 39 09 ff 15 80 c1 fb fe 85 c0 75 af 48 8b 4d c8 49 bb b0 0c 61 c7 f7 7f 00 00 39 09 ff 15 76 c1 fb fe eb 18 48 8b cc e8 7e 00 00 00 90 33 c0 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 8b f1 8b 7b 08 b9 19 02 00 00 48 ba 78 42 ac c7 f7 7f 00 00 e8 31 ba d3 5e 48 8b d8 b9 25 02 00 00 48 ba 78 42 ac c7 f7 7f 00 00 e8 1a ba d3 5e 4c 8b c8 4c 8d 45 d0 45 88 38 45 89 70 04 4c 8b c3 8b ce 8b d7 48 8b 45 d0 48 89 44 24 20 e8 37 03 0f ff 48 8b c8 e8 3f 6d b8 5e cc 55 41 57 41 56 57 56 53 48 83 ec 38 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c8 00 74 16 48 8b 4d c8 49 bb b0 0c 61 c7 f7 7f 00 00 39 09 ff 15 b8 c0 fb fe 90 48 83 c4 38 5b 5e 5f 41 5e 41 5f 5d c3 00 00 19 0c 07 00 0c 82 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 19 0c 07 00 0c 62 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 00 00 00 00 00 00 00
94        | 7ff7c8654a60h   | 479     | hex://logix/LogicEngine?equal#equal_()                                                                        | bit equal(VariedLogicExpr a, VariedLogicExpr b)                                                               | 55 41 57 41 56 57 56 53 48 83 ec 48 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 4e 10 48 8b 5f 10 41 be b6 00 00 00 41 bf 01 00 00 00 8b 49 08 3b 4b 08 0f 85 cb 00 00 00 e8 a8 43 7e ff 48 8b c8 49 bb 98 0c 61 c7 f7 7f 00 00 39 09 ff 15 e3 c1 fb fe 48 89 45 c8 48 8b 4d c8 49 bb a0 0c 61 c7 f7 7f 00 00 39 09 ff 15 d1 c1 fb fe 85 c0 74 51 48 8b 4d c8 49 bb a8 0c 61 c7 f7 7f 00 00 39 09 ff 15 bf c1 fb fe 48 8b d0 48 8b ce e8 44 51 7e ff 48 8b ce e8 04 3b 7e ff 8b d8 48 8b cf e8 fa 3a 7e ff 3b d8 75 32 48 8b 4d c8 49 bb a0 0c 61 c7 f7 7f 00 00 39 09 ff 15 80 c1 fb fe 85 c0 75 af 48 8b 4d c8 49 bb b0 0c 61 c7 f7 7f 00 00 39 09 ff 15 76 c1 fb fe eb 18 48 8b cc e8 7e 00 00 00 90 33 c0 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 8b f1 8b 7b 08 b9 19 02 00 00 48 ba 78 42 ac c7 f7 7f 00 00 e8 31 ba d3 5e 48 8b d8 b9 25 02 00 00 48 ba 78 42 ac c7 f7 7f 00 00 e8 1a ba d3 5e 4c 8b c8 4c 8d 45 d0 45 88 38 45 89 70 04 4c 8b c3 8b ce 8b d7 48 8b 45 d0 48 89 44 24 20 e8 37 03 0f ff 48 8b c8 e8 3f 6d b8 5e cc 55 41 57 41 56 57 56 53 48 83 ec 38 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c8 00 74 16 48 8b 4d c8 49 bb b0 0c 61 c7 f7 7f 00 00 39 09 ff 15 b8 c0 fb fe 90 48 83 c4 38 5b 5e 5f 41 5e 41 5f 5d c3 00 00 19 0c 07 00 0c 82 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 19 0c 07 00 0c 62 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 00 00 00 00 00 00 00
