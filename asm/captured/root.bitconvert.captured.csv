Sequence  | Address         | Length  | Uri                                                                                                           | OpSig                                                                                                         | Data
0         | 7ff7c8685700h   | 35      | hex://root/bitconvert?GetBytes#GetBytes_g[8u](8u~in)                                                          | Span<byte> GetBytes<byte>(in byte src)                                                                        | 0f 1f 44 00 00 48 89 11 c7 41 08 01 00 00 00 48 8b c1 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
1         | 7ff7c8685730h   | 35      | hex://root/bitconvert?GetBytes#GetBytes_g[8i](8i~in)                                                          | Span<byte> GetBytes<sbyte>(in sbyte src)                                                                      | 0f 1f 44 00 00 48 89 11 c7 41 08 01 00 00 00 48 8b c1 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
2         | 7ff7c8685760h   | 35      | hex://root/bitconvert?GetBytes#GetBytes_g[16u](16u~in)                                                        | Span<byte> GetBytes<ushort>(in ushort src)                                                                    | 0f 1f 44 00 00 48 89 11 c7 41 08 02 00 00 00 48 8b c1 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
3         | 7ff7c8685790h   | 35      | hex://root/bitconvert?GetBytes#GetBytes_g[16i](16i~in)                                                        | Span<byte> GetBytes<short>(in short src)                                                                      | 0f 1f 44 00 00 48 89 11 c7 41 08 02 00 00 00 48 8b c1 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
4         | 7ff7c86857c0h   | 35      | hex://root/bitconvert?GetBytes#GetBytes_g[32u](32u~in)                                                        | Span<byte> GetBytes<uint>(in uint src)                                                                        | 0f 1f 44 00 00 48 89 11 c7 41 08 04 00 00 00 48 8b c1 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
5         | 7ff7c86857f0h   | 35      | hex://root/bitconvert?GetBytes#GetBytes_g[32i](32i~in)                                                        | Span<byte> GetBytes<int>(in int src)                                                                          | 0f 1f 44 00 00 48 89 11 c7 41 08 04 00 00 00 48 8b c1 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
6         | 7ff7c8685820h   | 1064    | hex://root/bitconvert?GetBytes#GetBytes_g[64u](64u~in)                                                        | Span<byte> GetBytes<ulong>(in ulong src)                                                                      | 0f 1f 44 00 00 48 89 11 c7 41 08 08 00 00 00 48 8b c1 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 f3 fd bd 5e 5e 00 00 e0 26 c2 c8 f7 7f 00 00 e8 e3 fd bd 5e 5e 00 00 40 27 c2 c8 f7 7f 00 00 e8 d3 fd bd 5e 5e 00 00 a0 27 c2 c8 f7 7f 00 00 e8 c3 fd bd 5e 5e 00 00 00 28 c2 c8 f7 7f 00 00 e8 b3 fd bd 5e 5e 00 00 60 28 c2 c8 f7 7f 00 00 e8 a3 fd bd 5e 5e 00 00 c0 28 c2 c8 f7 7f 00 00 e8 93 fd bd 5e 5e 00 00 20 29 c2 c8 f7 7f 00 00 e8 83 fd bd 5e 5e 00 00 80 29 c2 c8 f7 7f 00 00 e8 73 fd bd 5e 5e 00 00 e0 29 c2 c8 f7 7f 00 00 e8 63 fd bd 5e 5e 00 00 40 2a c2 c8 f7 7f 00 00 e8 53 fd bd 5e 5e 00 00 a0 2a c2 c8 f7 7f 00 00 e8 43 fd bd 5e 5e 00 01 e8 3b fd bd 5e 5e 01 00 08 2c c2 c8 f7 7f 00 00 e8 2b fd bd 5e 5e 00 18 e8 23 fd bd 5e 5e 01 17 e8 1b fd bd 5e 5e 02 16 e8 13 fd bd 5e 5e 03 15 e8 0b fd bd 5e 5e 04 14 e8 03 fd bd 5e 5e 05 13 e8 fb fc bd 5e 5e 06 12 e8 f3 fc bd 5e 5e 07 11 e8 eb fc bd 5e 5e 08 10 e8 e3 fc bd 5e 5e 09 0f e8 db fc bd 5e 5e 0a 0e e8 d3 fc bd 5e 5e 0b 0d e8 cb fc bd 5e 5e 0c 0c e8 c3 fc bd 5e 5e 0d 0b e8 bb fc bd 5e 5e 0e 0a e8 b3 fc bd 5e 5e 0f 09 e8 ab fc bd 5e 5e 10 08 e8 a3 fc bd 5e 5e 11 07 e8 9b fc bd 5e 5e 12 06 e8 93 fc bd 5e 5e 13 05 e8 8b fc bd 5e 5e 14 04 e8 83 fc bd 5e 5e 15 03 e8 7b fc bd 5e 5e 16 02 e8 73 fc bd 5e 5e 17 01 e8 6b fc bd 5e 5e 18 00 10 2b c2 c8 f7 7f 00 00 e8 5b fc bd 5e 5e 00 00 08 2e c2 c8 f7 7f 00 00 e8 4b fc bd 5e 5e 00 00 68 2e c2 c8 f7 7f 00 00 e8 3b fc bd 5e 5e 00 00 c8 2e c2 c8 f7 7f 00 00 e8 2b fc bd 5e 5e 00 00 28 2f c2 c8 f7 7f 00 00 e8 1b fc bd 5e 5e 00 00 88 2f c2 c8 f7 7f 00 00 e8 0b fc bd 5e 5e 00 00 e8 2f c2 c8 f7 7f 00 00 e8 fb fb bd 5e 5e 00 00 48 30 c2 c8 f7 7f 00 00 e8 eb fb bd 5e 5e 00 00 a8 30 c2 c8 f7 7f 00 00 e8 db fb bd 5e 5e 00 00 08 31 c2 c8 f7 7f 00 00 e8 cb fb bd 5e 5e 00 00 68 31 c2 c8 f7 7f 00 00 e8 bb fb bd 5e 5e 00 00 c8 31 c2 c8 f7 7f 00 00 e8 ab fb bd 5e 5e 00 00 28 32 c2 c8 f7 7f 00 00 e8 9b fb bd 5e 5e 00 00 88 32 c2 c8 f7 7f 00 00 e8 8b fb bd 5e 5e 00 00 e8 32 c2 c8 f7 7f 00 00 e8 7b fb bd 5e 5e 00 00 48 33 c2 c8 f7 7f 00 00 e8 6b fb bd 5e 5e 00 00 a8 33 c2 c8 f7 7f 00 00 e8 5b fb bd 5e 5e 00 00 08 34 c2 c8 f7 7f 00 00 e8 4b fb bd 5e 5e 00 00 68 34 c2 c8 f7 7f 00 00 e8 3b fb bd 5e 5e 00 00 c8 34 c2 c8 f7 7f 00 00 e8 2b fb bd 5e 5e 00 00 28 35 c2 c8 f7 7f 00 00 e8 1b fb bd 5e 5e 00 00 88 35 c2 c8 f7 7f 00 00 e8 0b fb bd 5e 5e 00 00 e8 35 c2 c8 f7 7f 00 00 e8 fb fa bd 5e 5e 00 00 48 36 c2 c8 f7 7f 00 00 e8 eb fa bd 5e 5e 00 00 a8 36 c2 c8 f7 7f 00 00 e8 db fa bd 5e 5e 00 00 08 37 c2 c8 f7 7f 00 00 e8 cb fa bd 5e 5e 00 00 68 37 c2 c8 f7 7f 00 00 e8 bb fa bd 5e 5e 00 00 c8 37 c2 c8 f7 7f 00 00 e8 ab fa bd 5e 5e 00 00 28 38 c2 c8 f7 7f 00 00 e8 9b fa bd 5e 5e 00 00 88 38 c2 c8 f7 7f 00 00 e8 8b fa bd 5e 5e 00 00 e8 38 c2 c8 f7 7f 00 00 e8 7b fa bd 5e 5e 00 00 48 39 c2 c8 f7 7f 00 00 e8 6b fa bd 5e 5e 00 00 a8 39 c2 c8 f7 7f 00 00 e8 5b fa bd 5e 5e 00 00 08 3a c2 c8 f7 7f 00 00 e8 4b fa bd 5e 5e 00 00 68 3a c2 c8 f7 7f 00 00 e8 3b fa bd 5e 5e 00 00 c8 3a c2 c8 f7 7f 00 00 e8 2b fa bd 5e 5e 00 00 28 3b c2 c8 f7 7f 00 00 e8 1b fa bd 5e 5e 00 00 88 3b c2 c8 f7 7f 00 00 e8 0b fa bd 5e 5e 00 00 e8 3b c2 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
7         | 7ff7c8685c50h   | 35      | hex://root/bitconvert?GetBytes#GetBytes_g[64i](64i~in)                                                        | Span<byte> GetBytes<long>(in long src)                                                                        | 0f 1f 44 00 00 48 89 11 c7 41 08 08 00 00 00 48 8b c1 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
8         | 7ff7c8685c80h   | 35      | hex://root/bitconvert?GetBytes#GetBytes_g[32f](32f~in)                                                        | Span<byte> GetBytes<float>(in float src)                                                                      | 0f 1f 44 00 00 48 89 11 c7 41 08 04 00 00 00 48 8b c1 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
9         | 7ff7c8685cb0h   | 35      | hex://root/bitconvert?GetBytes#GetBytes_g[64f](64f~in)                                                        | Span<byte> GetBytes<double>(in double src)                                                                    | 0f 1f 44 00 00 48 89 11 c7 41 08 08 00 00 00 48 8b c1 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
10        | 7ff7c8685ce0h   | 243     | hex://root/bitconvert?GetBytes#GetBytes_g[8u](uspan8u,32i,32i)                                                | ReadOnlySpan<byte> GetBytes<byte>(ReadOnlySpan<byte> src, int offset, int count)                              | 48 83 ec 28 90 41 8b c0 45 8b d1 49 03 c2 44 8b 52 08 49 3b c2 77 18 48 8b 02 49 63 d0 48 03 c2 48 89 01 44 89 49 08 48 8b c1 48 83 c4 28 c3 e8 24 ed 0c ff cc 00 00 00 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 48 85 c1 c8 f7 7f 00 00 48 83 ec 28 90 41 8b c0 45 8b d1 49 03 c2 44 8b 52 08 49 3b c2 77 18 48 8b 02 49 63 d0 48 03 c2 48 89 01 44 89 49 08 48 8b c1 48 83 c4 28 c3 e8 d4 ec 0c ff cc 00 00 00 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 d0 85 c1 c8 f7 7f 00 00 48 83 ec 28 90 41 8b c0 45 8b d1 49 03 c2 44 8b 52 08 49 3b c2 77 23 48 8b 02 49 63 d0 48 8d 04 50 41 6b d1 02 70 0e 48 89 01 89 51 08 48 8b c1 48 83 c4 28 c3 e8 66 9e d0 5e e8 79 ec 0c ff cc 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 00 00 00
11        | 7ff7c8685d30h   | 163     | hex://root/bitconvert?GetBytes#GetBytes_g[8i](uspan8i,32i,32i)                                                | ReadOnlySpan<byte> GetBytes<sbyte>(ReadOnlySpan<sbyte> src, int offset, int count)                            | 48 83 ec 28 90 41 8b c0 45 8b d1 49 03 c2 44 8b 52 08 49 3b c2 77 18 48 8b 02 49 63 d0 48 03 c2 48 89 01 44 89 49 08 48 8b c1 48 83 c4 28 c3 e8 d4 ec 0c ff cc 00 00 00 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 d0 85 c1 c8 f7 7f 00 00 48 83 ec 28 90 41 8b c0 45 8b d1 49 03 c2 44 8b 52 08 49 3b c2 77 23 48 8b 02 49 63 d0 48 8d 04 50 41 6b d1 02 70 0e 48 89 01 89 51 08 48 8b c1 48 83 c4 28 c3 e8 66 9e d0 5e e8 79 ec 0c ff cc 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 00 00 00
12        | 7ff7c8685d80h   | 83      | hex://root/bitconvert?GetBytes#GetBytes_g[16u](uspan16u,32i,32i)                                              | ReadOnlySpan<byte> GetBytes<ushort>(ReadOnlySpan<ushort> src, int offset, int count)                          | 48 83 ec 28 90 41 8b c0 45 8b d1 49 03 c2 44 8b 52 08 49 3b c2 77 23 48 8b 02 49 63 d0 48 8d 04 50 41 6b d1 02 70 0e 48 89 01 89 51 08 48 8b c1 48 83 c4 28 c3 e8 66 9e d0 5e e8 79 ec 0c ff cc 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 00 00 00
13        | 7ff7c8685de0h   | 83      | hex://root/bitconvert?GetBytes#GetBytes_g[16i](uspan16i,32i,32i)                                              | ReadOnlySpan<byte> GetBytes<short>(ReadOnlySpan<short> src, int offset, int count)                            | 48 83 ec 28 90 41 8b c0 45 8b d1 49 03 c2 44 8b 52 08 49 3b c2 77 23 48 8b 02 49 63 d0 48 8d 04 50 41 6b d1 02 70 0e 48 89 01 89 51 08 48 8b c1 48 83 c4 28 c3 e8 06 9e d0 5e e8 19 ec 0c ff cc 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 00 00 00
14        | 7ff7c8685e40h   | 83      | hex://root/bitconvert?GetBytes#GetBytes_g[32u](uspan32u,32i,32i)                                              | ReadOnlySpan<byte> GetBytes<uint>(ReadOnlySpan<uint> src, int offset, int count)                              | 48 83 ec 28 90 41 8b c0 45 8b d1 49 03 c2 44 8b 52 08 49 3b c2 77 23 48 8b 02 49 63 d0 48 8d 04 90 41 6b d1 04 70 0e 48 89 01 89 51 08 48 8b c1 48 83 c4 28 c3 e8 a6 9d d0 5e e8 b9 eb 0c ff cc 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 00 00 00
15        | 7ff7c8685ea0h   | 83      | hex://root/bitconvert?GetBytes#GetBytes_g[32i](uspan32i,32i,32i)                                              | ReadOnlySpan<byte> GetBytes<int>(ReadOnlySpan<int> src, int offset, int count)                                | 48 83 ec 28 90 41 8b c0 45 8b d1 49 03 c2 44 8b 52 08 49 3b c2 77 23 48 8b 02 49 63 d0 48 8d 04 90 41 6b d1 04 70 0e 48 89 01 89 51 08 48 8b c1 48 83 c4 28 c3 e8 46 9d d0 5e e8 59 eb 0c ff cc 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 00 00 00
16        | 7ff7c8685f00h   | 83      | hex://root/bitconvert?GetBytes#GetBytes_g[64u](uspan64u,32i,32i)                                              | ReadOnlySpan<byte> GetBytes<ulong>(ReadOnlySpan<ulong> src, int offset, int count)                            | 48 83 ec 28 90 41 8b c0 45 8b d1 49 03 c2 44 8b 52 08 49 3b c2 77 23 48 8b 02 49 63 d0 48 8d 04 d0 41 6b d1 08 70 0e 48 89 01 89 51 08 48 8b c1 48 83 c4 28 c3 e8 e6 9c d0 5e e8 f9 ea 0c ff cc 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 00 00 00
17        | 7ff7c8685f60h   | 83      | hex://root/bitconvert?GetBytes#GetBytes_g[64i](uspan64i,32i,32i)                                              | ReadOnlySpan<byte> GetBytes<long>(ReadOnlySpan<long> src, int offset, int count)                              | 48 83 ec 28 90 41 8b c0 45 8b d1 49 03 c2 44 8b 52 08 49 3b c2 77 23 48 8b 02 49 63 d0 48 8d 04 d0 41 6b d1 08 70 0e 48 89 01 89 51 08 48 8b c1 48 83 c4 28 c3 e8 86 9c d0 5e e8 99 ea 0c ff cc 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 00 00 00
18        | 7ff7c8685fc0h   | 83      | hex://root/bitconvert?GetBytes#GetBytes_g[32f](uspan32f,32i,32i)                                              | ReadOnlySpan<byte> GetBytes<float>(ReadOnlySpan<float> src, int offset, int count)                            | 48 83 ec 28 90 41 8b c0 45 8b d1 49 03 c2 44 8b 52 08 49 3b c2 77 23 48 8b 02 49 63 d0 48 8d 04 90 41 6b d1 04 70 0e 48 89 01 89 51 08 48 8b c1 48 83 c4 28 c3 e8 26 9c d0 5e e8 39 ea 0c ff cc 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 00 00 00
19        | 7ff7c8686020h   | 83      | hex://root/bitconvert?GetBytes#GetBytes_g[64f](uspan64f,32i,32i)                                              | ReadOnlySpan<byte> GetBytes<double>(ReadOnlySpan<double> src, int offset, int count)                          | 48 83 ec 28 90 41 8b c0 45 8b d1 49 03 c2 44 8b 52 08 49 3b c2 77 23 48 8b 02 49 63 d0 48 8d 04 d0 41 6b d1 08 70 0e 48 89 01 89 51 08 48 8b c1 48 83 c4 28 c3 e8 c6 9b d0 5e e8 d9 e9 0c ff cc 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 00 00 00
20        | 7ff7c8686080h   | 472     | hex://root/bitconvert?GetBytes#GetBytes_g[8u](8u~in,span8u)                                                   | void GetBytes<byte>(in byte src, Span<byte> dst)                                                              | 0f 1f 44 00 00 48 8b 02 0f b6 11 88 10 c3 00 00 19 00 00 00 40 00 00 00 80 8c c1 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 02 48 0f be 11 88 10 c3 00 19 00 00 00 40 00 00 00 08 8d c1 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 02 0f b7 11 66 89 10 c3 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 5b f5 bd 5e 5e 00 00 48 3c c2 c8 f7 7f 00 00 e8 4b f5 bd 5e 5e 00 00 a8 3c c2 c8 f7 7f 00 00 e8 3b f5 bd 5e 5e 00 00 08 3d c2 c8 f7 7f 00 00 e8 2b f5 bd 5e 5e 00 00 68 3d c2 c8 f7 7f 00 00 e8 1b f5 bd 5e 5e 00 00 c8 3d c2 c8 f7 7f 00 00 e8 0b f5 bd 5e 5e 00 00 28 3e c2 c8 f7 7f 00 00 e8 fb f4 bd 5e 5e 00 00 88 3e c2 c8 f7 7f 00 00 e8 eb f4 bd 5e 5e 00 00 e8 3e c2 c8 f7 7f 00 00 e8 db f4 bd 5e 5e 00 00 48 3f c2 c8 f7 7f 00 00 e8 cb f4 bd 5e 5e 00 00 a8 3f c2 c8 f7 7f 00 00 e8 bb f4 bd 5e 5e 00 00 08 40 c2 c8 f7 7f 00 00 e8 ab f4 bd 5e 5e 00 00 68 40 c2 c8 f7 7f 00 00 e8 9b f4 bd 5e 5e 00 00 c8 40 c2 c8 f7 7f 00 00 e8 8b f4 bd 5e 5e 00 00 28 41 c2 c8 f7 7f 00 00 e8 7b f4 bd 5e 5e 00 00 88 41 c2 c8 f7 7f 00 00 e8 6b f4 bd 5e 5e 00 00 e8 41 c2 c8 f7 7f 00 00 e8 5b f4 bd 5e 5e 00 00 48 42 c2 c8 f7 7f 00 00 e8 4b f4 bd 5e 5e 00 00 a8 42 c2 c8 f7 7f 00 00 e8 3b f4 bd 5e 5e 00 00 08 43 c2 c8 f7 7f 00 00 e8 2b f4 bd 5e 5e 00 00 68 43 c2 c8 f7 7f 00 00 e8 1b f4 bd 5e 5e 00 00 c8 43 c2 c8 f7 7f 00 00 e8 0b f4 bd 5e 5e 00 00 28 44 c2 c8 f7 7f 00 00 e8 fb f3 bd 5e 5e 00 00 88 44 c2 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
21        | 7ff7c86860a0h   | 440     | hex://root/bitconvert?GetBytes#GetBytes_g[8i](8i~in,span8u)                                                   | void GetBytes<sbyte>(in sbyte src, Span<byte> dst)                                                            | 0f 1f 44 00 00 48 8b 02 48 0f be 11 88 10 c3 00 19 00 00 00 40 00 00 00 08 8d c1 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 02 0f b7 11 66 89 10 c3 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 5b f5 bd 5e 5e 00 00 48 3c c2 c8 f7 7f 00 00 e8 4b f5 bd 5e 5e 00 00 a8 3c c2 c8 f7 7f 00 00 e8 3b f5 bd 5e 5e 00 00 08 3d c2 c8 f7 7f 00 00 e8 2b f5 bd 5e 5e 00 00 68 3d c2 c8 f7 7f 00 00 e8 1b f5 bd 5e 5e 00 00 c8 3d c2 c8 f7 7f 00 00 e8 0b f5 bd 5e 5e 00 00 28 3e c2 c8 f7 7f 00 00 e8 fb f4 bd 5e 5e 00 00 88 3e c2 c8 f7 7f 00 00 e8 eb f4 bd 5e 5e 00 00 e8 3e c2 c8 f7 7f 00 00 e8 db f4 bd 5e 5e 00 00 48 3f c2 c8 f7 7f 00 00 e8 cb f4 bd 5e 5e 00 00 a8 3f c2 c8 f7 7f 00 00 e8 bb f4 bd 5e 5e 00 00 08 40 c2 c8 f7 7f 00 00 e8 ab f4 bd 5e 5e 00 00 68 40 c2 c8 f7 7f 00 00 e8 9b f4 bd 5e 5e 00 00 c8 40 c2 c8 f7 7f 00 00 e8 8b f4 bd 5e 5e 00 00 28 41 c2 c8 f7 7f 00 00 e8 7b f4 bd 5e 5e 00 00 88 41 c2 c8 f7 7f 00 00 e8 6b f4 bd 5e 5e 00 00 e8 41 c2 c8 f7 7f 00 00 e8 5b f4 bd 5e 5e 00 00 48 42 c2 c8 f7 7f 00 00 e8 4b f4 bd 5e 5e 00 00 a8 42 c2 c8 f7 7f 00 00 e8 3b f4 bd 5e 5e 00 00 08 43 c2 c8 f7 7f 00 00 e8 2b f4 bd 5e 5e 00 00 68 43 c2 c8 f7 7f 00 00 e8 1b f4 bd 5e 5e 00 00 c8 43 c2 c8 f7 7f 00 00 e8 0b f4 bd 5e 5e 00 00 28 44 c2 c8 f7 7f 00 00 e8 fb f3 bd 5e 5e 00 00 88 44 c2 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
22        | 7ff7c86860c0h   | 408     | hex://root/bitconvert?GetBytes#GetBytes_g[16u](16u~in,span8u)                                                 | void GetBytes<ushort>(in ushort src, Span<byte> dst)                                                          | 0f 1f 44 00 00 48 8b 02 0f b7 11 66 89 10 c3 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 5b f5 bd 5e 5e 00 00 48 3c c2 c8 f7 7f 00 00 e8 4b f5 bd 5e 5e 00 00 a8 3c c2 c8 f7 7f 00 00 e8 3b f5 bd 5e 5e 00 00 08 3d c2 c8 f7 7f 00 00 e8 2b f5 bd 5e 5e 00 00 68 3d c2 c8 f7 7f 00 00 e8 1b f5 bd 5e 5e 00 00 c8 3d c2 c8 f7 7f 00 00 e8 0b f5 bd 5e 5e 00 00 28 3e c2 c8 f7 7f 00 00 e8 fb f4 bd 5e 5e 00 00 88 3e c2 c8 f7 7f 00 00 e8 eb f4 bd 5e 5e 00 00 e8 3e c2 c8 f7 7f 00 00 e8 db f4 bd 5e 5e 00 00 48 3f c2 c8 f7 7f 00 00 e8 cb f4 bd 5e 5e 00 00 a8 3f c2 c8 f7 7f 00 00 e8 bb f4 bd 5e 5e 00 00 08 40 c2 c8 f7 7f 00 00 e8 ab f4 bd 5e 5e 00 00 68 40 c2 c8 f7 7f 00 00 e8 9b f4 bd 5e 5e 00 00 c8 40 c2 c8 f7 7f 00 00 e8 8b f4 bd 5e 5e 00 00 28 41 c2 c8 f7 7f 00 00 e8 7b f4 bd 5e 5e 00 00 88 41 c2 c8 f7 7f 00 00 e8 6b f4 bd 5e 5e 00 00 e8 41 c2 c8 f7 7f 00 00 e8 5b f4 bd 5e 5e 00 00 48 42 c2 c8 f7 7f 00 00 e8 4b f4 bd 5e 5e 00 00 a8 42 c2 c8 f7 7f 00 00 e8 3b f4 bd 5e 5e 00 00 08 43 c2 c8 f7 7f 00 00 e8 2b f4 bd 5e 5e 00 00 68 43 c2 c8 f7 7f 00 00 e8 1b f4 bd 5e 5e 00 00 c8 43 c2 c8 f7 7f 00 00 e8 0b f4 bd 5e 5e 00 00 28 44 c2 c8 f7 7f 00 00 e8 fb f3 bd 5e 5e 00 00 88 44 c2 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
23        | 7ff7c86864f0h   | 195     | hex://root/bitconvert?GetBytes#GetBytes_g[16i](16i~in,span8u)                                                 | void GetBytes<short>(in short src, Span<byte> dst)                                                            | 0f 1f 44 00 00 48 8b 02 48 0f bf 11 66 89 10 c3 19 00 00 00 40 00 00 00 18 8e c1 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 02 8b 11 89 10 c3 00 00 00 19 00 00 00 40 00 00 00 a0 8e c1 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 02 8b 11 89 10 c3 00 00 00 19 00 00 00 40 00 00 00 28 8f c1 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 02 48 8b 11 48 89 10 c3 00 19 00 00 00 40 00 00 00 b0 8f c1 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 02 48 8b 11 48 89 10 c3 00 19 00 00 00 40 00 00 00 38 90 c1 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 02 c5 fa 10 01 c5 fa 11 00 c3 cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
24        | 7ff7c8686510h   | 163     | hex://root/bitconvert?GetBytes#GetBytes_g[32u](32u~in,span8u)                                                 | void GetBytes<uint>(in uint src, Span<byte> dst)                                                              | 0f 1f 44 00 00 48 8b 02 8b 11 89 10 c3 00 00 00 19 00 00 00 40 00 00 00 a0 8e c1 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 02 8b 11 89 10 c3 00 00 00 19 00 00 00 40 00 00 00 28 8f c1 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 02 48 8b 11 48 89 10 c3 00 19 00 00 00 40 00 00 00 b0 8f c1 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 02 48 8b 11 48 89 10 c3 00 19 00 00 00 40 00 00 00 38 90 c1 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 02 c5 fa 10 01 c5 fa 11 00 c3 cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
25        | 7ff7c8686530h   | 131     | hex://root/bitconvert?GetBytes#GetBytes_g[32i](32i~in,span8u)                                                 | void GetBytes<int>(in int src, Span<byte> dst)                                                                | 0f 1f 44 00 00 48 8b 02 8b 11 89 10 c3 00 00 00 19 00 00 00 40 00 00 00 28 8f c1 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 02 48 8b 11 48 89 10 c3 00 19 00 00 00 40 00 00 00 b0 8f c1 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 02 48 8b 11 48 89 10 c3 00 19 00 00 00 40 00 00 00 38 90 c1 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 02 c5 fa 10 01 c5 fa 11 00 c3 cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
26        | 7ff7c8686550h   | 99      | hex://root/bitconvert?GetBytes#GetBytes_g[64u](64u~in,span8u)                                                 | void GetBytes<ulong>(in ulong src, Span<byte> dst)                                                            | 0f 1f 44 00 00 48 8b 02 48 8b 11 48 89 10 c3 00 19 00 00 00 40 00 00 00 b0 8f c1 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 02 48 8b 11 48 89 10 c3 00 19 00 00 00 40 00 00 00 38 90 c1 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 02 c5 fa 10 01 c5 fa 11 00 c3 cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
27        | 7ff7c8686570h   | 67      | hex://root/bitconvert?GetBytes#GetBytes_g[64i](64i~in,span8u)                                                 | void GetBytes<long>(in long src, Span<byte> dst)                                                              | 0f 1f 44 00 00 48 8b 02 48 8b 11 48 89 10 c3 00 19 00 00 00 40 00 00 00 38 90 c1 c8 f7 7f 00 00 c5 f8 77 66 90 48 8b 02 c5 fa 10 01 c5 fa 11 00 c3 cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
28        | 7ff7c8686590h   | 35      | hex://root/bitconvert?GetBytes#GetBytes_g[32f](32f~in,span8u)                                                 | void GetBytes<float>(in float src, Span<byte> dst)                                                            | c5 f8 77 66 90 48 8b 02 c5 fa 10 01 c5 fa 11 00 c3 cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
29        | 7ff7c86865c0h   | 35      | hex://root/bitconvert?GetBytes#GetBytes_g[64f](64f~in,span8u)                                                 | void GetBytes<double>(in double src, Span<byte> dst)                                                          | c5 f8 77 66 90 48 8b 02 c5 fb 10 01 c5 fb 11 00 c3 cc cc 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
30        | 7ff7c86865f0h   | 35      | hex://root/bitconvert?ToInt16#ToInt16_(uspan8u,32i)                                                           | short ToInt16(ReadOnlySpan<byte> src, int offset)                                                             | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 0f bf 04 10 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
31        | 7ff7c8686620h   | 295     | hex://root/bitconvert?ToUInt16#ToUInt16_(uspan8u,32i)                                                         | ushort ToUInt16(ReadOnlySpan<byte> src, int offset)                                                           | 0f 1f 44 00 00 48 8b 01 48 63 d2 0f b7 04 10 c3 19 00 00 00 40 00 00 00 48 92 c1 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 10 c3 00 19 00 00 00 40 00 00 00 c8 92 c1 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 10 c3 00 19 00 00 00 40 00 00 00 48 93 c1 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 c3 19 00 00 00 40 00 00 00 98 93 c1 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 c3 19 00 00 00 40 00 00 00 00 94 c1 c8 f7 7f 00 00 50 c5 f8 77 90 89 4c 24 04 c5 fa 10 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 50 94 c1 c8 f7 7f 00 00 50 c5 f8 77 90 89 4c 24 04 c5 fa 10 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 b8 94 c1 c8 f7 7f 00 00 50 c5 f8 77 90 48 89 0c 24 c5 fb 10 04 24 48 83 c4 08 c3 cc 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
32        | 7ff7c8686640h   | 263     | hex://root/bitconvert?ToInt32#ToInt32_(uspan8u,32i)                                                           | int ToInt32(ReadOnlySpan<byte> src, int offset)                                                               | 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 10 c3 00 19 00 00 00 40 00 00 00 c8 92 c1 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 10 c3 00 19 00 00 00 40 00 00 00 48 93 c1 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 c3 19 00 00 00 40 00 00 00 98 93 c1 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 c3 19 00 00 00 40 00 00 00 00 94 c1 c8 f7 7f 00 00 50 c5 f8 77 90 89 4c 24 04 c5 fa 10 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 50 94 c1 c8 f7 7f 00 00 50 c5 f8 77 90 89 4c 24 04 c5 fa 10 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 b8 94 c1 c8 f7 7f 00 00 50 c5 f8 77 90 48 89 0c 24 c5 fb 10 04 24 48 83 c4 08 c3 cc 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
33        | 7ff7c8686660h   | 231     | hex://root/bitconvert?ToUInt32#ToUInt32_(uspan8u,32i)                                                         | uint ToUInt32(ReadOnlySpan<byte> src, int offset)                                                             | 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 10 c3 00 19 00 00 00 40 00 00 00 48 93 c1 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 c3 19 00 00 00 40 00 00 00 98 93 c1 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 c3 19 00 00 00 40 00 00 00 00 94 c1 c8 f7 7f 00 00 50 c5 f8 77 90 89 4c 24 04 c5 fa 10 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 50 94 c1 c8 f7 7f 00 00 50 c5 f8 77 90 89 4c 24 04 c5 fa 10 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 b8 94 c1 c8 f7 7f 00 00 50 c5 f8 77 90 48 89 0c 24 c5 fb 10 04 24 48 83 c4 08 c3 cc 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
34        | 7ff7c8686680h   | 199     | hex://root/bitconvert?ToInt64#ToInt64_(uspan8u,32i)                                                           | long ToInt64(ReadOnlySpan<byte> src, int offset)                                                              | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 c3 19 00 00 00 40 00 00 00 98 93 c1 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 c3 19 00 00 00 40 00 00 00 00 94 c1 c8 f7 7f 00 00 50 c5 f8 77 90 89 4c 24 04 c5 fa 10 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 50 94 c1 c8 f7 7f 00 00 50 c5 f8 77 90 89 4c 24 04 c5 fa 10 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 b8 94 c1 c8 f7 7f 00 00 50 c5 f8 77 90 48 89 0c 24 c5 fb 10 04 24 48 83 c4 08 c3 cc 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
35        | 7ff7c86866a0h   | 167     | hex://root/bitconvert?ToUInt64#ToUInt64_(uspan8u,32i)                                                         | ulong ToUInt64(ReadOnlySpan<byte> src, int offset)                                                            | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 c3 19 00 00 00 40 00 00 00 00 94 c1 c8 f7 7f 00 00 50 c5 f8 77 90 89 4c 24 04 c5 fa 10 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 50 94 c1 c8 f7 7f 00 00 50 c5 f8 77 90 89 4c 24 04 c5 fa 10 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 b8 94 c1 c8 f7 7f 00 00 50 c5 f8 77 90 48 89 0c 24 c5 fb 10 04 24 48 83 c4 08 c3 cc 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
36        | 7ff7c86866c0h   | 135     | hex://root/bitconvert?ToSingle#ToSingle_(32i)                                                                 | float ToSingle(int src)                                                                                       | 50 c5 f8 77 90 89 4c 24 04 c5 fa 10 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 50 94 c1 c8 f7 7f 00 00 50 c5 f8 77 90 89 4c 24 04 c5 fa 10 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 b8 94 c1 c8 f7 7f 00 00 50 c5 f8 77 90 48 89 0c 24 c5 fb 10 04 24 48 83 c4 08 c3 cc 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
37        | 7ff7c86866f0h   | 87      | hex://root/bitconvert?ToSingle#ToSingle_(32u)                                                                 | float ToSingle(uint src)                                                                                      | 50 c5 f8 77 90 89 4c 24 04 c5 fa 10 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 b8 94 c1 c8 f7 7f 00 00 50 c5 f8 77 90 48 89 0c 24 c5 fb 10 04 24 48 83 c4 08 c3 cc 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
38        | 7ff7c8686720h   | 39      | hex://root/bitconvert?ToDouble#ToDouble_(64i)                                                                 | double ToDouble(long src)                                                                                     | 50 c5 f8 77 90 48 89 0c 24 c5 fb 10 04 24 48 83 c4 08 c3 cc 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
39        | 7ff7c8686750h   | 39      | hex://root/bitconvert?ToDouble#ToDouble_(64u)                                                                 | double ToDouble(ulong src)                                                                                    | 50 c5 f8 77 90 48 89 0c 24 c5 fb 10 04 24 48 83 c4 08 c3 cc 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
40        | 7ff7c8686780h   | 135     | hex://root/bitconvert?ToInt32#ToInt32_(32f)                                                                   | int ToInt32(float src)                                                                                        | 50 c5 f8 77 90 c5 fa 11 44 24 04 8b 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 a8 95 c1 c8 f7 7f 00 00 50 c5 f8 77 90 c5 fa 11 44 24 04 8b 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 f8 95 c1 c8 f7 7f 00 00 50 c5 f8 77 90 c5 fb 11 04 24 48 8b 04 24 48 83 c4 08 c3 cc 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
41        | 7ff7c86867b0h   | 87      | hex://root/bitconvert?ToUInt32#ToUInt32_(32f)                                                                 | uint ToUInt32(float src)                                                                                      | 50 c5 f8 77 90 c5 fa 11 44 24 04 8b 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 f8 95 c1 c8 f7 7f 00 00 50 c5 f8 77 90 c5 fb 11 04 24 48 8b 04 24 48 83 c4 08 c3 cc 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
42        | 7ff7c86867e0h   | 39      | hex://root/bitconvert?ToInt64#ToInt64_(64f)                                                                   | long ToInt64(double src)                                                                                      | 50 c5 f8 77 90 c5 fb 11 04 24 48 8b 04 24 48 83 c4 08 c3 cc 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
43        | 7ff7c8686810h   | 39      | hex://root/bitconvert?ToUInt64#ToUInt64_(64f)                                                                 | ulong ToUInt64(double src)                                                                                    | 50 c5 f8 77 90 c5 fb 11 04 24 48 8b 04 24 48 83 c4 08 c3 cc 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
