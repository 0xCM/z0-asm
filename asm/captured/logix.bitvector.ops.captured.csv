Sequence  | Address         | Length  | Uri                                                                                                           | OpSig                                                                                                         | Data
0         | 7ff7c86602a0h   | 35      | hex://logix/BitVectorOps?true#true_g[8u]()                                                                    | BitVector<byte> true<byte>(BitVector<byte> x, BitVector<byte> y)                                              | 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 b8 ff 00 00 00 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
1         | 7ff7c86602d0h   | 35      | hex://logix/BitVectorOps?true#true_g[16u]()                                                                   | BitVector<ushort> true<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                      | 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 b8 ff ff 00 00 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
2         | 7ff7c8660300h   | 35      | hex://logix/BitVectorOps?true#true_g[32u]()                                                                   | BitVector<uint> true<uint>(BitVector<uint> x, BitVector<uint> y)                                              | 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 b8 ff ff ff ff c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
3         | 7ff7c8660330h   | 520     | hex://logix/BitVectorOps?true#true_g[64u]()                                                                   | BitVector<ulong> true<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                          | 0f 1f 44 00 00 48 89 4c 24 08 48 89 54 24 10 48 b8 ff ff ff ff ff ff ff ff c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 c8 b1 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 30 b2 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 98 b2 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 00 b3 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 89 54 24 10 33 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 53 52 c0 5e 5e 00 27 e8 4b 52 c0 5e 5e 01 26 e8 43 52 c0 5e 5e 02 25 e8 3b 52 c0 5e 5e 03 24 e8 33 52 c0 5e 5e 04 23 e8 2b 52 c0 5e 5e 05 22 e8 23 52 c0 5e 5e 06 21 e8 1b 52 c0 5e 5e 07 20 e8 13 52 c0 5e 5e 08 1f e8 0b 52 c0 5e 5e 09 1e e8 03 52 c0 5e 5e 0a 1d e8 fb 51 c0 5e 5e 0b 1c e8 f3 51 c0 5e 5e 0c 1b e8 eb 51 c0 5e 5e 0d 1a e8 e3 51 c0 5e 5e 0e 19 e8 db 51 c0 5e 5e 0f 18 e8 d3 51 c0 5e 5e 10 17 e8 cb 51 c0 5e 5e 11 16 e8 c3 51 c0 5e 5e 12 15 e8 bb 51 c0 5e 5e 13 14 e8 b3 51 c0 5e 5e 14 13 e8 ab 51 c0 5e 5e 15 12 e8 a3 51 c0 5e 5e 16 11 e8 9b 51 c0 5e 5e 17 10 e8 93 51 c0 5e 5e 18 0f e8 8b 51 c0 5e 5e 19 0e e8 83 51 c0 5e 5e 1a 0d e8 7b 51 c0 5e 5e 1b 0c e8 73 51 c0 5e 5e 1c 0b e8 6b 51 c0 5e 5e 1d 0a e8 63 51 c0 5e 5e 1e 09 e8 5b 51 c0 5e 5e 1f 08 e8 53 51 c0 5e 5e 20 07 e8 4b 51 c0 5e 5e 21 06 e8 43 51 c0 5e 5e 22 05 e8 3b 51 c0 5e 5e 23 04 e8 33 51 c0 5e 5e 24 03 e8 2b 51 c0 5e 5e 25 02 e8 23 51 c0 5e 5e 26 01 e8 1b 51 c0 5e 5e 27 00 e0 ca b0 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
4         | 7ff7c8660360h   | 472     | hex://logix/BitVectorOps?false#false_g[8u]()                                                                  | BitVector<byte> false<byte>(BitVector<byte> x, BitVector<byte> y)                                             | 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 30 b2 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 98 b2 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 00 b3 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 89 54 24 10 33 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 53 52 c0 5e 5e 00 27 e8 4b 52 c0 5e 5e 01 26 e8 43 52 c0 5e 5e 02 25 e8 3b 52 c0 5e 5e 03 24 e8 33 52 c0 5e 5e 04 23 e8 2b 52 c0 5e 5e 05 22 e8 23 52 c0 5e 5e 06 21 e8 1b 52 c0 5e 5e 07 20 e8 13 52 c0 5e 5e 08 1f e8 0b 52 c0 5e 5e 09 1e e8 03 52 c0 5e 5e 0a 1d e8 fb 51 c0 5e 5e 0b 1c e8 f3 51 c0 5e 5e 0c 1b e8 eb 51 c0 5e 5e 0d 1a e8 e3 51 c0 5e 5e 0e 19 e8 db 51 c0 5e 5e 0f 18 e8 d3 51 c0 5e 5e 10 17 e8 cb 51 c0 5e 5e 11 16 e8 c3 51 c0 5e 5e 12 15 e8 bb 51 c0 5e 5e 13 14 e8 b3 51 c0 5e 5e 14 13 e8 ab 51 c0 5e 5e 15 12 e8 a3 51 c0 5e 5e 16 11 e8 9b 51 c0 5e 5e 17 10 e8 93 51 c0 5e 5e 18 0f e8 8b 51 c0 5e 5e 19 0e e8 83 51 c0 5e 5e 1a 0d e8 7b 51 c0 5e 5e 1b 0c e8 73 51 c0 5e 5e 1c 0b e8 6b 51 c0 5e 5e 1d 0a e8 63 51 c0 5e 5e 1e 09 e8 5b 51 c0 5e 5e 1f 08 e8 53 51 c0 5e 5e 20 07 e8 4b 51 c0 5e 5e 21 06 e8 43 51 c0 5e 5e 22 05 e8 3b 51 c0 5e 5e 23 04 e8 33 51 c0 5e 5e 24 03 e8 2b 51 c0 5e 5e 25 02 e8 23 51 c0 5e 5e 26 01 e8 1b 51 c0 5e 5e 27 00 e0 ca b0 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
5         | 7ff7c8660380h   | 440     | hex://logix/BitVectorOps?false#false_g[16u]()                                                                 | BitVector<ushort> false<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                     | 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 98 b2 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 00 b3 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 89 54 24 10 33 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 53 52 c0 5e 5e 00 27 e8 4b 52 c0 5e 5e 01 26 e8 43 52 c0 5e 5e 02 25 e8 3b 52 c0 5e 5e 03 24 e8 33 52 c0 5e 5e 04 23 e8 2b 52 c0 5e 5e 05 22 e8 23 52 c0 5e 5e 06 21 e8 1b 52 c0 5e 5e 07 20 e8 13 52 c0 5e 5e 08 1f e8 0b 52 c0 5e 5e 09 1e e8 03 52 c0 5e 5e 0a 1d e8 fb 51 c0 5e 5e 0b 1c e8 f3 51 c0 5e 5e 0c 1b e8 eb 51 c0 5e 5e 0d 1a e8 e3 51 c0 5e 5e 0e 19 e8 db 51 c0 5e 5e 0f 18 e8 d3 51 c0 5e 5e 10 17 e8 cb 51 c0 5e 5e 11 16 e8 c3 51 c0 5e 5e 12 15 e8 bb 51 c0 5e 5e 13 14 e8 b3 51 c0 5e 5e 14 13 e8 ab 51 c0 5e 5e 15 12 e8 a3 51 c0 5e 5e 16 11 e8 9b 51 c0 5e 5e 17 10 e8 93 51 c0 5e 5e 18 0f e8 8b 51 c0 5e 5e 19 0e e8 83 51 c0 5e 5e 1a 0d e8 7b 51 c0 5e 5e 1b 0c e8 73 51 c0 5e 5e 1c 0b e8 6b 51 c0 5e 5e 1d 0a e8 63 51 c0 5e 5e 1e 09 e8 5b 51 c0 5e 5e 1f 08 e8 53 51 c0 5e 5e 20 07 e8 4b 51 c0 5e 5e 21 06 e8 43 51 c0 5e 5e 22 05 e8 3b 51 c0 5e 5e 23 04 e8 33 51 c0 5e 5e 24 03 e8 2b 51 c0 5e 5e 25 02 e8 23 51 c0 5e 5e 26 01 e8 1b 51 c0 5e 5e 27 00 e0 ca b0 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
6         | 7ff7c86603a0h   | 408     | hex://logix/BitVectorOps?false#false_g[32u]()                                                                 | BitVector<uint> false<uint>(BitVector<uint> x, BitVector<uint> y)                                             | 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 00 b3 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 89 54 24 10 33 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 53 52 c0 5e 5e 00 27 e8 4b 52 c0 5e 5e 01 26 e8 43 52 c0 5e 5e 02 25 e8 3b 52 c0 5e 5e 03 24 e8 33 52 c0 5e 5e 04 23 e8 2b 52 c0 5e 5e 05 22 e8 23 52 c0 5e 5e 06 21 e8 1b 52 c0 5e 5e 07 20 e8 13 52 c0 5e 5e 08 1f e8 0b 52 c0 5e 5e 09 1e e8 03 52 c0 5e 5e 0a 1d e8 fb 51 c0 5e 5e 0b 1c e8 f3 51 c0 5e 5e 0c 1b e8 eb 51 c0 5e 5e 0d 1a e8 e3 51 c0 5e 5e 0e 19 e8 db 51 c0 5e 5e 0f 18 e8 d3 51 c0 5e 5e 10 17 e8 cb 51 c0 5e 5e 11 16 e8 c3 51 c0 5e 5e 12 15 e8 bb 51 c0 5e 5e 13 14 e8 b3 51 c0 5e 5e 14 13 e8 ab 51 c0 5e 5e 15 12 e8 a3 51 c0 5e 5e 16 11 e8 9b 51 c0 5e 5e 17 10 e8 93 51 c0 5e 5e 18 0f e8 8b 51 c0 5e 5e 19 0e e8 83 51 c0 5e 5e 1a 0d e8 7b 51 c0 5e 5e 1b 0c e8 73 51 c0 5e 5e 1c 0b e8 6b 51 c0 5e 5e 1d 0a e8 63 51 c0 5e 5e 1e 09 e8 5b 51 c0 5e 5e 1f 08 e8 53 51 c0 5e 5e 20 07 e8 4b 51 c0 5e 5e 21 06 e8 43 51 c0 5e 5e 22 05 e8 3b 51 c0 5e 5e 23 04 e8 33 51 c0 5e 5e 24 03 e8 2b 51 c0 5e 5e 25 02 e8 23 51 c0 5e 5e 26 01 e8 1b 51 c0 5e 5e 27 00 e0 ca b0 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
7         | 7ff7c86603c0h   | 376     | hex://logix/BitVectorOps?false#false_g[64u]()                                                                 | BitVector<ulong> false<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                         | 0f 1f 44 00 00 48 89 4c 24 08 48 89 54 24 10 33 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 53 52 c0 5e 5e 00 27 e8 4b 52 c0 5e 5e 01 26 e8 43 52 c0 5e 5e 02 25 e8 3b 52 c0 5e 5e 03 24 e8 33 52 c0 5e 5e 04 23 e8 2b 52 c0 5e 5e 05 22 e8 23 52 c0 5e 5e 06 21 e8 1b 52 c0 5e 5e 07 20 e8 13 52 c0 5e 5e 08 1f e8 0b 52 c0 5e 5e 09 1e e8 03 52 c0 5e 5e 0a 1d e8 fb 51 c0 5e 5e 0b 1c e8 f3 51 c0 5e 5e 0c 1b e8 eb 51 c0 5e 5e 0d 1a e8 e3 51 c0 5e 5e 0e 19 e8 db 51 c0 5e 5e 0f 18 e8 d3 51 c0 5e 5e 10 17 e8 cb 51 c0 5e 5e 11 16 e8 c3 51 c0 5e 5e 12 15 e8 bb 51 c0 5e 5e 13 14 e8 b3 51 c0 5e 5e 14 13 e8 ab 51 c0 5e 5e 15 12 e8 a3 51 c0 5e 5e 16 11 e8 9b 51 c0 5e 5e 17 10 e8 93 51 c0 5e 5e 18 0f e8 8b 51 c0 5e 5e 19 0e e8 83 51 c0 5e 5e 1a 0d e8 7b 51 c0 5e 5e 1b 0c e8 73 51 c0 5e 5e 1c 0b e8 6b 51 c0 5e 5e 1d 0a e8 63 51 c0 5e 5e 1e 09 e8 5b 51 c0 5e 5e 1f 08 e8 53 51 c0 5e 5e 20 07 e8 4b 51 c0 5e 5e 21 06 e8 43 51 c0 5e 5e 22 05 e8 3b 51 c0 5e 5e 23 04 e8 33 51 c0 5e 5e 24 03 e8 2b 51 c0 5e 5e 25 02 e8 23 51 c0 5e 5e 26 01 e8 1b 51 c0 5e 5e 27 00 e0 ca b0 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
8         | 7ff7c8660540h   | 35      | hex://logix/BitVectorOps?and#and_g[8u]()                                                                      | BitVector<byte> and<byte>(BitVector<byte> x, BitVector<byte> y)                                               | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 23 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
9         | 7ff7c8660570h   | 35      | hex://logix/BitVectorOps?and#and_g[16u]()                                                                     | BitVector<ushort> and<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                       | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 23 c2 0f b7 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
10        | 7ff7c86605a0h   | 1432    | hex://logix/BitVectorOps?and#and_g[32u]()                                                                     | BitVector<uint> and<uint>(BitVector<uint> x, BitVector<uint> y)                                               | 0f 1f 44 00 00 23 d1 8b c2 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 48 b5 af c8 f7 7f 00 00 0f 1f 44 00 00 48 23 d1 48 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 5b 50 c0 5e 5e 00 27 e8 53 50 c0 5e 5e 01 26 e8 4b 50 c0 5e 5e 02 25 e8 43 50 c0 5e 5e 03 24 e8 3b 50 c0 5e 5e 04 23 e8 33 50 c0 5e 5e 05 22 e8 2b 50 c0 5e 5e 06 21 e8 23 50 c0 5e 5e 07 20 e8 1b 50 c0 5e 5e 08 1f e8 13 50 c0 5e 5e 09 1e e8 0b 50 c0 5e 5e 0a 1d e8 03 50 c0 5e 5e 0b 1c e8 fb 4f c0 5e 5e 0c 1b e8 f3 4f c0 5e 5e 0d 1a e8 eb 4f c0 5e 5e 0e 19 e8 e3 4f c0 5e 5e 0f 18 e8 db 4f c0 5e 5e 10 17 e8 d3 4f c0 5e 5e 11 16 e8 cb 4f c0 5e 5e 12 15 e8 c3 4f c0 5e 5e 13 14 e8 bb 4f c0 5e 5e 14 13 e8 b3 4f c0 5e 5e 15 12 e8 ab 4f c0 5e 5e 16 11 e8 a3 4f c0 5e 5e 17 10 e8 9b 4f c0 5e 5e 18 0f e8 93 4f c0 5e 5e 19 0e e8 8b 4f c0 5e 5e 1a 0d e8 83 4f c0 5e 5e 1b 0c e8 7b 4f c0 5e 5e 1c 0b e8 73 4f c0 5e 5e 1d 0a e8 6b 4f c0 5e 5e 1e 09 e8 63 4f c0 5e 5e 1f 08 e8 5b 4f c0 5e 5e 20 07 e8 53 4f c0 5e 5e 21 06 e8 4b 4f c0 5e 5e 22 05 e8 43 4f c0 5e 5e 23 04 e8 3b 4f c0 5e 5e 24 03 e8 33 4f c0 5e 5e 25 02 e8 2b 4f c0 5e 5e 26 01 e8 23 4f c0 5e 5e 27 00 00 d0 b0 c8 f7 7f 00 00 02 00 00 00 00 00 00 00 e8 0b 4f c0 5e 5e 00 00 40 d3 b0 c8 f7 7f 00 00 e8 fb 4e c0 5e 5e 00 00 a0 d3 b0 c8 f7 7f 00 00 e8 eb 4e c0 5e 5e 00 00 00 d4 b0 c8 f7 7f 00 00 e8 db 4e c0 5e 5e 00 00 60 d4 b0 c8 f7 7f 00 00 e8 cb 4e c0 5e 5e 00 00 c0 d4 b0 c8 f7 7f 00 00 e8 bb 4e c0 5e 5e 00 27 e8 b3 4e c0 5e 5e 01 26 e8 ab 4e c0 5e 5e 02 25 e8 a3 4e c0 5e 5e 03 24 e8 9b 4e c0 5e 5e 04 23 e8 93 4e c0 5e 5e 05 22 e8 8b 4e c0 5e 5e 06 21 e8 83 4e c0 5e 5e 07 20 e8 7b 4e c0 5e 5e 08 1f e8 73 4e c0 5e 5e 09 1e e8 6b 4e c0 5e 5e 0a 1d e8 63 4e c0 5e 5e 0b 1c e8 5b 4e c0 5e 5e 0c 1b e8 53 4e c0 5e 5e 0d 1a e8 4b 4e c0 5e 5e 0e 19 e8 43 4e c0 5e 5e 0f 18 e8 3b 4e c0 5e 5e 10 17 e8 33 4e c0 5e 5e 11 16 e8 2b 4e c0 5e 5e 12 15 e8 23 4e c0 5e 5e 13 14 e8 1b 4e c0 5e 5e 14 13 e8 13 4e c0 5e 5e 15 12 e8 0b 4e c0 5e 5e 16 11 e8 03 4e c0 5e 5e 17 10 e8 fb 4d c0 5e 5e 18 0f e8 f3 4d c0 5e 5e 19 0e e8 eb 4d c0 5e 5e 1a 0d e8 e3 4d c0 5e 5e 1b 0c e8 db 4d c0 5e 5e 1c 0b e8 d3 4d c0 5e 5e 1d 0a e8 cb 4d c0 5e 5e 1e 09 e8 c3 4d c0 5e 5e 1f 08 e8 bb 4d c0 5e 5e 20 07 e8 b3 4d c0 5e 5e 21 06 e8 ab 4d c0 5e 5e 22 05 e8 a3 4d c0 5e 5e 23 04 e8 9b 4d c0 5e 5e 24 03 e8 93 4d c0 5e 5e 25 02 e8 8b 4d c0 5e 5e 26 01 e8 83 4d c0 5e 5e 27 00 20 d5 b0 c8 f7 7f 00 00 e8 73 4d c0 5e 5e 00 00 60 d8 b0 c8 f7 7f 00 00 e8 63 4d c0 5e 5e 00 00 c0 d8 b0 c8 f7 7f 00 00 e8 53 4d c0 5e 5e 00 00 20 d9 b0 c8 f7 7f 00 00 e8 43 4d c0 5e 5e 00 27 e8 3b 4d c0 5e 5e 01 26 e8 33 4d c0 5e 5e 02 25 e8 2b 4d c0 5e 5e 03 24 e8 23 4d c0 5e 5e 04 23 e8 1b 4d c0 5e 5e 05 22 e8 13 4d c0 5e 5e 06 21 e8 0b 4d c0 5e 5e 07 20 e8 03 4d c0 5e 5e 08 1f e8 fb 4c c0 5e 5e 09 1e e8 f3 4c c0 5e 5e 0a 1d e8 eb 4c c0 5e 5e 0b 1c e8 e3 4c c0 5e 5e 0c 1b e8 db 4c c0 5e 5e 0d 1a e8 d3 4c c0 5e 5e 0e 19 e8 cb 4c c0 5e 5e 0f 18 e8 c3 4c c0 5e 5e 10 17 e8 bb 4c c0 5e 5e 11 16 e8 b3 4c c0 5e 5e 12 15 e8 ab 4c c0 5e 5e 13 14 e8 a3 4c c0 5e 5e 14 13 e8 9b 4c c0 5e 5e 15 12 e8 93 4c c0 5e 5e 16 11 e8 8b 4c c0 5e 5e 17 10 e8 83 4c c0 5e 5e 18 0f e8 7b 4c c0 5e 5e 19 0e e8 73 4c c0 5e 5e 1a 0d e8 6b 4c c0 5e 5e 1b 0c e8 63 4c c0 5e 5e 1c 0b e8 5b 4c c0 5e 5e 1d 0a e8 53 4c c0 5e 5e 1e 09 e8 4b 4c c0 5e 5e 1f 08 e8 43 4c c0 5e 5e 20 07 e8 3b 4c c0 5e 5e 21 06 e8 33 4c c0 5e 5e 22 05 e8 2b 4c c0 5e 5e 23 04 e8 23 4c c0 5e 5e 24 03 e8 1b 4c c0 5e 5e 25 02 e8 13 4c c0 5e 5e 26 01 e8 0b 4c c0 5e 5e 27 00 80 d9 b0 c8 f7 7f 00 00 e8 fb 4b c0 5e 5e 00 00 c0 dc b0 c8 f7 7f 00 00 e8 eb 4b c0 5e 5e 00 00 20 dd b0 c8 f7 7f 00 00 e8 db 4b c0 5e 5e 00 00 80 dd b0 c8 f7 7f 00 00 e8 cb 4b c0 5e 5e 00 00 e0 dd b0 c8 f7 7f 00 00 e8 bb 4b c0 5e 5e 00 00 40 de b0 c8 f7 7f 00 00 e8 ab 4b c0 5e 5e 00 00 a0 de b0 c8 f7 7f 00 00 e8 9b 4b c0 5e 5e 00 00 00 df b0 c8 f7 7f 00 00 e8 8b 4b c0 5e 5e 00 00 a0 e2 b0 c8 f7 7f 00 00 e8 7b 4b c0 5e 5e 00 00 00 e3 b0 c8 f7 7f 00 00 e8 6b 4b c0 5e 5e 00 00 60 e3 b0 c8 f7 7f 00 00 e8 5b 4b c0 5e 5e 00 00 c0 e3 b0 c8 f7 7f 00 00 e8 4b 4b c0 5e 5e 00 00 20 e4 b0 c8 f7 7f 00 00 e8 3b 4b c0 5e 5e 00 00 c0 e7 b0 c8 f7 7f 00 00 e8 2b 4b c0 5e 5e 00 00 20 e8 b0 c8 f7 7f 00 00 e8 1b 4b c0 5e 5e 00 00 80 e8 b0 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
11        | 7ff7c86605c0h   | 1400    | hex://logix/BitVectorOps?and#and_g[64u]()                                                                     | BitVector<ulong> and<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                           | 0f 1f 44 00 00 48 23 d1 48 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 5b 50 c0 5e 5e 00 27 e8 53 50 c0 5e 5e 01 26 e8 4b 50 c0 5e 5e 02 25 e8 43 50 c0 5e 5e 03 24 e8 3b 50 c0 5e 5e 04 23 e8 33 50 c0 5e 5e 05 22 e8 2b 50 c0 5e 5e 06 21 e8 23 50 c0 5e 5e 07 20 e8 1b 50 c0 5e 5e 08 1f e8 13 50 c0 5e 5e 09 1e e8 0b 50 c0 5e 5e 0a 1d e8 03 50 c0 5e 5e 0b 1c e8 fb 4f c0 5e 5e 0c 1b e8 f3 4f c0 5e 5e 0d 1a e8 eb 4f c0 5e 5e 0e 19 e8 e3 4f c0 5e 5e 0f 18 e8 db 4f c0 5e 5e 10 17 e8 d3 4f c0 5e 5e 11 16 e8 cb 4f c0 5e 5e 12 15 e8 c3 4f c0 5e 5e 13 14 e8 bb 4f c0 5e 5e 14 13 e8 b3 4f c0 5e 5e 15 12 e8 ab 4f c0 5e 5e 16 11 e8 a3 4f c0 5e 5e 17 10 e8 9b 4f c0 5e 5e 18 0f e8 93 4f c0 5e 5e 19 0e e8 8b 4f c0 5e 5e 1a 0d e8 83 4f c0 5e 5e 1b 0c e8 7b 4f c0 5e 5e 1c 0b e8 73 4f c0 5e 5e 1d 0a e8 6b 4f c0 5e 5e 1e 09 e8 63 4f c0 5e 5e 1f 08 e8 5b 4f c0 5e 5e 20 07 e8 53 4f c0 5e 5e 21 06 e8 4b 4f c0 5e 5e 22 05 e8 43 4f c0 5e 5e 23 04 e8 3b 4f c0 5e 5e 24 03 e8 33 4f c0 5e 5e 25 02 e8 2b 4f c0 5e 5e 26 01 e8 23 4f c0 5e 5e 27 00 00 d0 b0 c8 f7 7f 00 00 02 00 00 00 00 00 00 00 e8 0b 4f c0 5e 5e 00 00 40 d3 b0 c8 f7 7f 00 00 e8 fb 4e c0 5e 5e 00 00 a0 d3 b0 c8 f7 7f 00 00 e8 eb 4e c0 5e 5e 00 00 00 d4 b0 c8 f7 7f 00 00 e8 db 4e c0 5e 5e 00 00 60 d4 b0 c8 f7 7f 00 00 e8 cb 4e c0 5e 5e 00 00 c0 d4 b0 c8 f7 7f 00 00 e8 bb 4e c0 5e 5e 00 27 e8 b3 4e c0 5e 5e 01 26 e8 ab 4e c0 5e 5e 02 25 e8 a3 4e c0 5e 5e 03 24 e8 9b 4e c0 5e 5e 04 23 e8 93 4e c0 5e 5e 05 22 e8 8b 4e c0 5e 5e 06 21 e8 83 4e c0 5e 5e 07 20 e8 7b 4e c0 5e 5e 08 1f e8 73 4e c0 5e 5e 09 1e e8 6b 4e c0 5e 5e 0a 1d e8 63 4e c0 5e 5e 0b 1c e8 5b 4e c0 5e 5e 0c 1b e8 53 4e c0 5e 5e 0d 1a e8 4b 4e c0 5e 5e 0e 19 e8 43 4e c0 5e 5e 0f 18 e8 3b 4e c0 5e 5e 10 17 e8 33 4e c0 5e 5e 11 16 e8 2b 4e c0 5e 5e 12 15 e8 23 4e c0 5e 5e 13 14 e8 1b 4e c0 5e 5e 14 13 e8 13 4e c0 5e 5e 15 12 e8 0b 4e c0 5e 5e 16 11 e8 03 4e c0 5e 5e 17 10 e8 fb 4d c0 5e 5e 18 0f e8 f3 4d c0 5e 5e 19 0e e8 eb 4d c0 5e 5e 1a 0d e8 e3 4d c0 5e 5e 1b 0c e8 db 4d c0 5e 5e 1c 0b e8 d3 4d c0 5e 5e 1d 0a e8 cb 4d c0 5e 5e 1e 09 e8 c3 4d c0 5e 5e 1f 08 e8 bb 4d c0 5e 5e 20 07 e8 b3 4d c0 5e 5e 21 06 e8 ab 4d c0 5e 5e 22 05 e8 a3 4d c0 5e 5e 23 04 e8 9b 4d c0 5e 5e 24 03 e8 93 4d c0 5e 5e 25 02 e8 8b 4d c0 5e 5e 26 01 e8 83 4d c0 5e 5e 27 00 20 d5 b0 c8 f7 7f 00 00 e8 73 4d c0 5e 5e 00 00 60 d8 b0 c8 f7 7f 00 00 e8 63 4d c0 5e 5e 00 00 c0 d8 b0 c8 f7 7f 00 00 e8 53 4d c0 5e 5e 00 00 20 d9 b0 c8 f7 7f 00 00 e8 43 4d c0 5e 5e 00 27 e8 3b 4d c0 5e 5e 01 26 e8 33 4d c0 5e 5e 02 25 e8 2b 4d c0 5e 5e 03 24 e8 23 4d c0 5e 5e 04 23 e8 1b 4d c0 5e 5e 05 22 e8 13 4d c0 5e 5e 06 21 e8 0b 4d c0 5e 5e 07 20 e8 03 4d c0 5e 5e 08 1f e8 fb 4c c0 5e 5e 09 1e e8 f3 4c c0 5e 5e 0a 1d e8 eb 4c c0 5e 5e 0b 1c e8 e3 4c c0 5e 5e 0c 1b e8 db 4c c0 5e 5e 0d 1a e8 d3 4c c0 5e 5e 0e 19 e8 cb 4c c0 5e 5e 0f 18 e8 c3 4c c0 5e 5e 10 17 e8 bb 4c c0 5e 5e 11 16 e8 b3 4c c0 5e 5e 12 15 e8 ab 4c c0 5e 5e 13 14 e8 a3 4c c0 5e 5e 14 13 e8 9b 4c c0 5e 5e 15 12 e8 93 4c c0 5e 5e 16 11 e8 8b 4c c0 5e 5e 17 10 e8 83 4c c0 5e 5e 18 0f e8 7b 4c c0 5e 5e 19 0e e8 73 4c c0 5e 5e 1a 0d e8 6b 4c c0 5e 5e 1b 0c e8 63 4c c0 5e 5e 1c 0b e8 5b 4c c0 5e 5e 1d 0a e8 53 4c c0 5e 5e 1e 09 e8 4b 4c c0 5e 5e 1f 08 e8 43 4c c0 5e 5e 20 07 e8 3b 4c c0 5e 5e 21 06 e8 33 4c c0 5e 5e 22 05 e8 2b 4c c0 5e 5e 23 04 e8 23 4c c0 5e 5e 24 03 e8 1b 4c c0 5e 5e 25 02 e8 13 4c c0 5e 5e 26 01 e8 0b 4c c0 5e 5e 27 00 80 d9 b0 c8 f7 7f 00 00 e8 fb 4b c0 5e 5e 00 00 c0 dc b0 c8 f7 7f 00 00 e8 eb 4b c0 5e 5e 00 00 20 dd b0 c8 f7 7f 00 00 e8 db 4b c0 5e 5e 00 00 80 dd b0 c8 f7 7f 00 00 e8 cb 4b c0 5e 5e 00 00 e0 dd b0 c8 f7 7f 00 00 e8 bb 4b c0 5e 5e 00 00 40 de b0 c8 f7 7f 00 00 e8 ab 4b c0 5e 5e 00 00 a0 de b0 c8 f7 7f 00 00 e8 9b 4b c0 5e 5e 00 00 00 df b0 c8 f7 7f 00 00 e8 8b 4b c0 5e 5e 00 00 a0 e2 b0 c8 f7 7f 00 00 e8 7b 4b c0 5e 5e 00 00 00 e3 b0 c8 f7 7f 00 00 e8 6b 4b c0 5e 5e 00 00 60 e3 b0 c8 f7 7f 00 00 e8 5b 4b c0 5e 5e 00 00 c0 e3 b0 c8 f7 7f 00 00 e8 4b 4b c0 5e 5e 00 00 20 e4 b0 c8 f7 7f 00 00 e8 3b 4b c0 5e 5e 00 00 c0 e7 b0 c8 f7 7f 00 00 e8 2b 4b c0 5e 5e 00 00 20 e8 b0 c8 f7 7f 00 00 e8 1b 4b c0 5e 5e 00 00 80 e8 b0 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
12        | 7ff7c8660b40h   | 39      | hex://logix/BitVectorOps?nand#nand_g[8u]()                                                                    | BitVector<byte> nand<byte>(BitVector<byte> x, BitVector<byte> y)                                              | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 23 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
13        | 7ff7c8660b70h   | 39      | hex://logix/BitVectorOps?nand#nand_g[16u]()                                                                   | BitVector<ushort> nand<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                      | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 23 c2 f7 d0 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
14        | 7ff7c8660ba0h   | 99      | hex://logix/BitVectorOps?nand#nand_g[32u]()                                                                   | BitVector<uint> nand<uint>(BitVector<uint> x, BitVector<uint> y)                                              | 0f 1f 44 00 00 23 d1 8b c2 f7 d0 c3 19 00 00 00 40 00 00 00 00 00 00 00 90 b7 af c8 f7 7f 00 00 0f 1f 44 00 00 48 23 d1 48 8b c2 48 f7 d0 c3 00 19 00 00 00 40 00 00 00 60 b9 af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 0b c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
15        | 7ff7c8660bc0h   | 67      | hex://logix/BitVectorOps?nand#nand_g[64u]()                                                                   | BitVector<ulong> nand<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                          | 0f 1f 44 00 00 48 23 d1 48 8b c2 48 f7 d0 c3 00 19 00 00 00 40 00 00 00 60 b9 af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 0b c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
16        | 7ff7c8660be0h   | 35      | hex://logix/BitVectorOps?or#or_g[8u]()                                                                        | BitVector<byte> or<byte>(BitVector<byte> x, BitVector<byte> y)                                                | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 0b c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
17        | 7ff7c8660c10h   | 35      | hex://logix/BitVectorOps?or#or_g[16u]()                                                                       | BitVector<ushort> or<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                        | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 0b c2 0f b7 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
18        | 7ff7c8660c40h   | 439     | hex://logix/BitVectorOps?or#or_g[32u]()                                                                       | BitVector<uint> or<uint>(BitVector<uint> x, BitVector<uint> y)                                                | 0f 1f 44 00 00 0b d1 8b c2 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 e0 ba af c8 f7 7f 00 00 0f 1f 44 00 00 48 0b d1 48 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 bb 49 c0 5e 5e 00 27 e8 b3 49 c0 5e 5e 01 26 e8 ab 49 c0 5e 5e 02 25 e8 a3 49 c0 5e 5e 03 24 e8 9b 49 c0 5e 5e 04 23 e8 93 49 c0 5e 5e 05 22 e8 8b 49 c0 5e 5e 06 21 e8 83 49 c0 5e 5e 07 20 e8 7b 49 c0 5e 5e 08 1f e8 73 49 c0 5e 5e 09 1e e8 6b 49 c0 5e 5e 0a 1d e8 63 49 c0 5e 5e 0b 1c e8 5b 49 c0 5e 5e 0c 1b e8 53 49 c0 5e 5e 0d 1a e8 4b 49 c0 5e 5e 0e 19 e8 43 49 c0 5e 5e 0f 18 e8 3b 49 c0 5e 5e 10 17 e8 33 49 c0 5e 5e 11 16 e8 2b 49 c0 5e 5e 12 15 e8 23 49 c0 5e 5e 13 14 e8 1b 49 c0 5e 5e 14 13 e8 13 49 c0 5e 5e 15 12 e8 0b 49 c0 5e 5e 16 11 e8 03 49 c0 5e 5e 17 10 e8 fb 48 c0 5e 5e 18 0f e8 f3 48 c0 5e 5e 19 0e e8 eb 48 c0 5e 5e 1a 0d e8 e3 48 c0 5e 5e 1b 0c e8 db 48 c0 5e 5e 1c 0b e8 d3 48 c0 5e 5e 1d 0a e8 cb 48 c0 5e 5e 1e 09 e8 c3 48 c0 5e 5e 1f 08 e8 bb 48 c0 5e 5e 20 07 e8 b3 48 c0 5e 5e 21 06 e8 ab 48 c0 5e 5e 22 05 e8 a3 48 c0 5e 5e 23 04 e8 9b 48 c0 5e 5e 24 03 e8 93 48 c0 5e 5e 25 02 e8 8b 48 c0 5e 5e 26 01 e8 83 48 c0 5e 5e 27 00 60 df b0 c8 f7 7f 00 00 f0 bb af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 0b c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
19        | 7ff7c8660c60h   | 407     | hex://logix/BitVectorOps?or#or_g[64u]()                                                                       | BitVector<ulong> or<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                            | 0f 1f 44 00 00 48 0b d1 48 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 bb 49 c0 5e 5e 00 27 e8 b3 49 c0 5e 5e 01 26 e8 ab 49 c0 5e 5e 02 25 e8 a3 49 c0 5e 5e 03 24 e8 9b 49 c0 5e 5e 04 23 e8 93 49 c0 5e 5e 05 22 e8 8b 49 c0 5e 5e 06 21 e8 83 49 c0 5e 5e 07 20 e8 7b 49 c0 5e 5e 08 1f e8 73 49 c0 5e 5e 09 1e e8 6b 49 c0 5e 5e 0a 1d e8 63 49 c0 5e 5e 0b 1c e8 5b 49 c0 5e 5e 0c 1b e8 53 49 c0 5e 5e 0d 1a e8 4b 49 c0 5e 5e 0e 19 e8 43 49 c0 5e 5e 0f 18 e8 3b 49 c0 5e 5e 10 17 e8 33 49 c0 5e 5e 11 16 e8 2b 49 c0 5e 5e 12 15 e8 23 49 c0 5e 5e 13 14 e8 1b 49 c0 5e 5e 14 13 e8 13 49 c0 5e 5e 15 12 e8 0b 49 c0 5e 5e 16 11 e8 03 49 c0 5e 5e 17 10 e8 fb 48 c0 5e 5e 18 0f e8 f3 48 c0 5e 5e 19 0e e8 eb 48 c0 5e 5e 1a 0d e8 e3 48 c0 5e 5e 1b 0c e8 db 48 c0 5e 5e 1c 0b e8 d3 48 c0 5e 5e 1d 0a e8 cb 48 c0 5e 5e 1e 09 e8 c3 48 c0 5e 5e 1f 08 e8 bb 48 c0 5e 5e 20 07 e8 b3 48 c0 5e 5e 21 06 e8 ab 48 c0 5e 5e 22 05 e8 a3 48 c0 5e 5e 23 04 e8 9b 48 c0 5e 5e 24 03 e8 93 48 c0 5e 5e 25 02 e8 8b 48 c0 5e 5e 26 01 e8 83 48 c0 5e 5e 27 00 60 df b0 c8 f7 7f 00 00 f0 bb af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 0b c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
20        | 7ff7c8660dd0h   | 39      | hex://logix/BitVectorOps?nor#nor_g[8u]()                                                                      | BitVector<byte> nor<byte>(BitVector<byte> x, BitVector<byte> y)                                               | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 0b c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
21        | 7ff7c8660e00h   | 39      | hex://logix/BitVectorOps?nor#nor_g[16u]()                                                                     | BitVector<ushort> nor<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                       | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 0b c2 f7 d0 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
22        | 7ff7c8660e30h   | 435     | hex://logix/BitVectorOps?nor#nor_g[32u]()                                                                     | BitVector<uint> nor<uint>(BitVector<uint> x, BitVector<uint> y)                                               | 0f 1f 44 00 00 0b d1 8b c2 f7 d0 c3 19 00 00 00 40 00 00 00 00 00 00 00 28 bd af c8 f7 7f 00 00 0f 1f 44 00 00 48 0b d1 48 8b c2 48 f7 d0 c3 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 cb 47 c0 5e 5e 00 27 e8 c3 47 c0 5e 5e 01 26 e8 bb 47 c0 5e 5e 02 25 e8 b3 47 c0 5e 5e 03 24 e8 ab 47 c0 5e 5e 04 23 e8 a3 47 c0 5e 5e 05 22 e8 9b 47 c0 5e 5e 06 21 e8 93 47 c0 5e 5e 07 20 e8 8b 47 c0 5e 5e 08 1f e8 83 47 c0 5e 5e 09 1e e8 7b 47 c0 5e 5e 0a 1d e8 73 47 c0 5e 5e 0b 1c e8 6b 47 c0 5e 5e 0c 1b e8 63 47 c0 5e 5e 0d 1a e8 5b 47 c0 5e 5e 0e 19 e8 53 47 c0 5e 5e 0f 18 e8 4b 47 c0 5e 5e 10 17 e8 43 47 c0 5e 5e 11 16 e8 3b 47 c0 5e 5e 12 15 e8 33 47 c0 5e 5e 13 14 e8 2b 47 c0 5e 5e 14 13 e8 23 47 c0 5e 5e 15 12 e8 1b 47 c0 5e 5e 16 11 e8 13 47 c0 5e 5e 17 10 e8 0b 47 c0 5e 5e 18 0f e8 03 47 c0 5e 5e 19 0e e8 fb 46 c0 5e 5e 1a 0d e8 f3 46 c0 5e 5e 1b 0c e8 eb 46 c0 5e 5e 1c 0b e8 e3 46 c0 5e 5e 1d 0a e8 db 46 c0 5e 5e 1e 09 e8 d3 46 c0 5e 5e 1f 08 e8 cb 46 c0 5e 5e 20 07 e8 c3 46 c0 5e 5e 21 06 e8 bb 46 c0 5e 5e 22 05 e8 b3 46 c0 5e 5e 23 04 e8 ab 46 c0 5e 5e 24 03 e8 a3 46 c0 5e 5e 25 02 e8 9b 46 c0 5e 5e 26 01 e8 93 46 c0 5e 5e 27 00 80 e4 b0 c8 f7 7f 00 00 38 be af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 33 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
23        | 7ff7c8660e50h   | 403     | hex://logix/BitVectorOps?nor#nor_g[64u]()                                                                     | BitVector<ulong> nor<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                           | 0f 1f 44 00 00 48 0b d1 48 8b c2 48 f7 d0 c3 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 cb 47 c0 5e 5e 00 27 e8 c3 47 c0 5e 5e 01 26 e8 bb 47 c0 5e 5e 02 25 e8 b3 47 c0 5e 5e 03 24 e8 ab 47 c0 5e 5e 04 23 e8 a3 47 c0 5e 5e 05 22 e8 9b 47 c0 5e 5e 06 21 e8 93 47 c0 5e 5e 07 20 e8 8b 47 c0 5e 5e 08 1f e8 83 47 c0 5e 5e 09 1e e8 7b 47 c0 5e 5e 0a 1d e8 73 47 c0 5e 5e 0b 1c e8 6b 47 c0 5e 5e 0c 1b e8 63 47 c0 5e 5e 0d 1a e8 5b 47 c0 5e 5e 0e 19 e8 53 47 c0 5e 5e 0f 18 e8 4b 47 c0 5e 5e 10 17 e8 43 47 c0 5e 5e 11 16 e8 3b 47 c0 5e 5e 12 15 e8 33 47 c0 5e 5e 13 14 e8 2b 47 c0 5e 5e 14 13 e8 23 47 c0 5e 5e 15 12 e8 1b 47 c0 5e 5e 16 11 e8 13 47 c0 5e 5e 17 10 e8 0b 47 c0 5e 5e 18 0f e8 03 47 c0 5e 5e 19 0e e8 fb 46 c0 5e 5e 1a 0d e8 f3 46 c0 5e 5e 1b 0c e8 eb 46 c0 5e 5e 1c 0b e8 e3 46 c0 5e 5e 1d 0a e8 db 46 c0 5e 5e 1e 09 e8 d3 46 c0 5e 5e 1f 08 e8 cb 46 c0 5e 5e 20 07 e8 c3 46 c0 5e 5e 21 06 e8 bb 46 c0 5e 5e 22 05 e8 b3 46 c0 5e 5e 23 04 e8 ab 46 c0 5e 5e 24 03 e8 a3 46 c0 5e 5e 25 02 e8 9b 46 c0 5e 5e 26 01 e8 93 46 c0 5e 5e 27 00 80 e4 b0 c8 f7 7f 00 00 38 be af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 33 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
24        | 7ff7c8660fc0h   | 35      | hex://logix/BitVectorOps?xor#xor_g[8u]()                                                                      | BitVector<byte> xor<byte>(BitVector<byte> x, BitVector<byte> y)                                               | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 33 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
25        | 7ff7c8660ff0h   | 1175    | hex://logix/BitVectorOps?xor#xor_g[16u]()                                                                     | BitVector<ushort> xor<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                       | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 33 c2 0f b7 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 23 46 c0 5e 5e 00 00 e0 e8 b0 c8 f7 7f 00 00 e8 13 46 c0 5e 5e 00 00 40 e9 b0 c8 f7 7f 00 00 e8 03 46 c0 5e 5e 00 27 e8 fb 45 c0 5e 5e 01 26 e8 f3 45 c0 5e 5e 02 25 e8 eb 45 c0 5e 5e 03 24 e8 e3 45 c0 5e 5e 04 23 e8 db 45 c0 5e 5e 05 22 e8 d3 45 c0 5e 5e 06 21 e8 cb 45 c0 5e 5e 07 20 e8 c3 45 c0 5e 5e 08 1f e8 bb 45 c0 5e 5e 09 1e e8 b3 45 c0 5e 5e 0a 1d e8 ab 45 c0 5e 5e 0b 1c e8 a3 45 c0 5e 5e 0c 1b e8 9b 45 c0 5e 5e 0d 1a e8 93 45 c0 5e 5e 0e 19 e8 8b 45 c0 5e 5e 0f 18 e8 83 45 c0 5e 5e 10 17 e8 7b 45 c0 5e 5e 11 16 e8 73 45 c0 5e 5e 12 15 e8 6b 45 c0 5e 5e 13 14 e8 63 45 c0 5e 5e 14 13 e8 5b 45 c0 5e 5e 15 12 e8 53 45 c0 5e 5e 16 11 e8 4b 45 c0 5e 5e 17 10 e8 43 45 c0 5e 5e 18 0f e8 3b 45 c0 5e 5e 19 0e e8 33 45 c0 5e 5e 1a 0d e8 2b 45 c0 5e 5e 1b 0c e8 23 45 c0 5e 5e 1c 0b e8 1b 45 c0 5e 5e 1d 0a e8 13 45 c0 5e 5e 1e 09 e8 0b 45 c0 5e 5e 1f 08 e8 03 45 c0 5e 5e 20 07 e8 fb 44 c0 5e 5e 21 06 e8 f3 44 c0 5e 5e 22 05 e8 eb 44 c0 5e 5e 23 04 e8 e3 44 c0 5e 5e 24 03 e8 db 44 c0 5e 5e 25 02 e8 d3 44 c0 5e 5e 26 01 e8 cb 44 c0 5e 5e 27 00 a0 e9 b0 c8 f7 7f 00 00 e8 bb 44 c0 5e 5e 00 00 e0 ec b0 c8 f7 7f 00 00 e8 ab 44 c0 5e 5e 00 00 40 ed b0 c8 f7 7f 00 00 e8 9b 44 c0 5e 5e 00 00 a0 ed b0 c8 f7 7f 00 00 e8 8b 44 c0 5e 5e 00 00 00 ee b0 c8 f7 7f 00 00 e8 7b 44 c0 5e 5e 00 00 60 ee b0 c8 f7 7f 00 00 e8 6b 44 c0 5e 5e 00 27 e8 63 44 c0 5e 5e 01 26 e8 5b 44 c0 5e 5e 02 25 e8 53 44 c0 5e 5e 03 24 e8 4b 44 c0 5e 5e 04 23 e8 43 44 c0 5e 5e 05 22 e8 3b 44 c0 5e 5e 06 21 e8 33 44 c0 5e 5e 07 20 e8 2b 44 c0 5e 5e 08 1f e8 23 44 c0 5e 5e 09 1e e8 1b 44 c0 5e 5e 0a 1d e8 13 44 c0 5e 5e 0b 1c e8 0b 44 c0 5e 5e 0c 1b e8 03 44 c0 5e 5e 0d 1a e8 fb 43 c0 5e 5e 0e 19 e8 f3 43 c0 5e 5e 0f 18 e8 eb 43 c0 5e 5e 10 17 e8 e3 43 c0 5e 5e 11 16 e8 db 43 c0 5e 5e 12 15 e8 d3 43 c0 5e 5e 13 14 e8 cb 43 c0 5e 5e 14 13 e8 c3 43 c0 5e 5e 15 12 e8 bb 43 c0 5e 5e 16 11 e8 b3 43 c0 5e 5e 17 10 e8 ab 43 c0 5e 5e 18 0f e8 a3 43 c0 5e 5e 19 0e e8 9b 43 c0 5e 5e 1a 0d e8 93 43 c0 5e 5e 1b 0c e8 8b 43 c0 5e 5e 1c 0b e8 83 43 c0 5e 5e 1d 0a e8 7b 43 c0 5e 5e 1e 09 e8 73 43 c0 5e 5e 1f 08 e8 6b 43 c0 5e 5e 20 07 e8 63 43 c0 5e 5e 21 06 e8 5b 43 c0 5e 5e 22 05 e8 53 43 c0 5e 5e 23 04 e8 4b 43 c0 5e 5e 24 03 e8 43 43 c0 5e 5e 25 02 e8 3b 43 c0 5e 5e 26 01 e8 33 43 c0 5e 5e 27 00 c0 ee b0 c8 f7 7f 00 00 e8 23 43 c0 5e 5e 00 00 00 f2 b0 c8 f7 7f 00 00 e8 13 43 c0 5e 5e 00 00 60 f2 b0 c8 f7 7f 00 00 e8 03 43 c0 5e 5e 00 00 c0 f2 b0 c8 f7 7f 00 00 e8 f3 42 c0 5e 5e 00 00 20 f3 b0 c8 f7 7f 00 00 e8 e3 42 c0 5e 5e 00 00 80 f3 b0 c8 f7 7f 00 00 e8 d3 42 c0 5e 5e 00 00 20 f7 b0 c8 f7 7f 00 00 e8 c3 42 c0 5e 5e 00 00 80 f7 b0 c8 f7 7f 00 00 e8 b3 42 c0 5e 5e 00 00 e0 f7 b0 c8 f7 7f 00 00 e8 a3 42 c0 5e 5e 00 00 40 f8 b0 c8 f7 7f 00 00 e8 93 42 c0 5e 5e 00 00 a0 f8 b0 c8 f7 7f 00 00 e8 83 42 c0 5e 5e 00 00 40 fc b0 c8 f7 7f 00 00 e8 73 42 c0 5e 5e 00 00 a0 fc b0 c8 f7 7f 00 00 e8 63 42 c0 5e 5e 00 00 00 fd b0 c8 f7 7f 00 00 e8 53 42 c0 5e 5e 00 00 60 fd b0 c8 f7 7f 00 00 e8 43 42 c0 5e 5e 00 00 c0 fd b0 c8 f7 7f 00 00 e8 33 42 c0 5e 5e 00 00 20 02 b1 c8 f7 7f 00 00 08 bf af c8 f7 7f 00 00 0f 1f 44 00 00 33 d1 8b c2 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 70 bf af c8 f7 7f 00 00 0f 1f 44 00 00 48 33 d1 48 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 80 c0 af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 33 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
26        | 7ff7c8661420h   | 103     | hex://logix/BitVectorOps?xor#xor_g[32u]()                                                                     | BitVector<uint> xor<uint>(BitVector<uint> x, BitVector<uint> y)                                               | 0f 1f 44 00 00 33 d1 8b c2 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 70 bf af c8 f7 7f 00 00 0f 1f 44 00 00 48 33 d1 48 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 80 c0 af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 33 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
27        | 7ff7c8661440h   | 71      | hex://logix/BitVectorOps?xor#xor_g[64u]()                                                                     | BitVector<ulong> xor<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                           | 0f 1f 44 00 00 48 33 d1 48 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 80 c0 af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 33 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
28        | 7ff7c8661460h   | 39      | hex://logix/BitVectorOps?xnor#xnor_g[8u]()                                                                    | BitVector<byte> xnor<byte>(BitVector<byte> x, BitVector<byte> y)                                              | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 33 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
29        | 7ff7c8661490h   | 39      | hex://logix/BitVectorOps?xnor#xnor_g[16u]()                                                                   | BitVector<ushort> xnor<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                      | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 33 c2 f7 d0 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
30        | 7ff7c86614c0h   | 1027    | hex://logix/BitVectorOps?xnor#xnor_g[32u]()                                                                   | BitVector<uint> xnor<uint>(BitVector<uint> x, BitVector<uint> y)                                              | 0f 1f 44 00 00 33 d1 8b c2 f7 d0 c3 19 00 00 00 40 00 00 00 00 00 00 00 b8 c1 af c8 f7 7f 00 00 0f 1f 44 00 00 48 33 d1 48 8b c2 48 f7 d0 c3 00 19 00 00 00 40 00 00 00 c8 c2 af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 c3 00 00 00 19 00 00 00 40 00 00 00 30 c3 af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b7 c1 c3 00 00 00 19 00 00 00 40 00 00 00 98 c3 af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 8b c1 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 c4 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 54 24 10 48 8b c1 c3 00 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 bb 40 c0 5e 5e 00 27 e8 b3 40 c0 5e 5e 01 26 e8 ab 40 c0 5e 5e 02 25 e8 a3 40 c0 5e 5e 03 24 e8 9b 40 c0 5e 5e 04 23 e8 93 40 c0 5e 5e 05 22 e8 8b 40 c0 5e 5e 06 21 e8 83 40 c0 5e 5e 07 20 e8 7b 40 c0 5e 5e 08 1f e8 73 40 c0 5e 5e 09 1e e8 6b 40 c0 5e 5e 0a 1d e8 63 40 c0 5e 5e 0b 1c e8 5b 40 c0 5e 5e 0c 1b e8 53 40 c0 5e 5e 0d 1a e8 4b 40 c0 5e 5e 0e 19 e8 43 40 c0 5e 5e 0f 18 e8 3b 40 c0 5e 5e 10 17 e8 33 40 c0 5e 5e 11 16 e8 2b 40 c0 5e 5e 12 15 e8 23 40 c0 5e 5e 13 14 e8 1b 40 c0 5e 5e 14 13 e8 13 40 c0 5e 5e 15 12 e8 0b 40 c0 5e 5e 16 11 e8 03 40 c0 5e 5e 17 10 e8 fb 3f c0 5e 5e 18 0f e8 f3 3f c0 5e 5e 19 0e e8 eb 3f c0 5e 5e 1a 0d e8 e3 3f c0 5e 5e 1b 0c e8 db 3f c0 5e 5e 1c 0b e8 d3 3f c0 5e 5e 1d 0a e8 cb 3f c0 5e 5e 1e 09 e8 c3 3f c0 5e 5e 1f 08 e8 bb 3f c0 5e 5e 20 07 e8 b3 3f c0 5e 5e 21 06 e8 ab 3f c0 5e 5e 22 05 e8 a3 3f c0 5e 5e 23 04 e8 9b 3f c0 5e 5e 24 03 e8 93 3f c0 5e 5e 25 02 e8 8b 3f c0 5e 5e 26 01 e8 83 3f c0 5e 5e 27 00 e0 f3 b0 c8 f7 7f 00 00 10 c5 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b6 c2 c3 00 00 00 19 00 00 00 40 00 00 00 78 c5 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 c3 00 00 00 19 00 00 00 40 00 00 00 e0 c5 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 48 c6 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 eb 3e c0 5e 5e 00 27 e8 e3 3e c0 5e 5e 01 26 e8 db 3e c0 5e 5e 02 25 e8 d3 3e c0 5e 5e 03 24 e8 cb 3e c0 5e 5e 04 23 e8 c3 3e c0 5e 5e 05 22 e8 bb 3e c0 5e 5e 06 21 e8 b3 3e c0 5e 5e 07 20 e8 ab 3e c0 5e 5e 08 1f e8 a3 3e c0 5e 5e 09 1e e8 9b 3e c0 5e 5e 0a 1d e8 93 3e c0 5e 5e 0b 1c e8 8b 3e c0 5e 5e 0c 1b e8 83 3e c0 5e 5e 0d 1a e8 7b 3e c0 5e 5e 0e 19 e8 73 3e c0 5e 5e 0f 18 e8 6b 3e c0 5e 5e 10 17 e8 63 3e c0 5e 5e 11 16 e8 5b 3e c0 5e 5e 12 15 e8 53 3e c0 5e 5e 13 14 e8 4b 3e c0 5e 5e 14 13 e8 43 3e c0 5e 5e 15 12 e8 3b 3e c0 5e 5e 16 11 e8 33 3e c0 5e 5e 17 10 e8 2b 3e c0 5e 5e 18 0f e8 23 3e c0 5e 5e 19 0e e8 1b 3e c0 5e 5e 1a 0d e8 13 3e c0 5e 5e 1b 0c e8 0b 3e c0 5e 5e 1c 0b e8 03 3e c0 5e 5e 1d 0a e8 fb 3d c0 5e 5e 1e 09 e8 f3 3d c0 5e 5e 1f 08 e8 eb 3d c0 5e 5e 20 07 e8 e3 3d c0 5e 5e 21 06 e8 db 3d c0 5e 5e 22 05 e8 d3 3d c0 5e 5e 23 04 e8 cb 3d c0 5e 5e 24 03 e8 c3 3d c0 5e 5e 25 02 e8 bb 3d c0 5e 5e 26 01 e8 b3 3d c0 5e 5e 27 00 00 f9 b0 c8 f7 7f 00 00 58 c7 af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
31        | 7ff7c86614e0h   | 995     | hex://logix/BitVectorOps?xnor#xnor_g[64u]()                                                                   | BitVector<ulong> xnor<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                          | 0f 1f 44 00 00 48 33 d1 48 8b c2 48 f7 d0 c3 00 19 00 00 00 40 00 00 00 c8 c2 af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 c3 00 00 00 19 00 00 00 40 00 00 00 30 c3 af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b7 c1 c3 00 00 00 19 00 00 00 40 00 00 00 98 c3 af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 8b c1 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 c4 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 54 24 10 48 8b c1 c3 00 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 bb 40 c0 5e 5e 00 27 e8 b3 40 c0 5e 5e 01 26 e8 ab 40 c0 5e 5e 02 25 e8 a3 40 c0 5e 5e 03 24 e8 9b 40 c0 5e 5e 04 23 e8 93 40 c0 5e 5e 05 22 e8 8b 40 c0 5e 5e 06 21 e8 83 40 c0 5e 5e 07 20 e8 7b 40 c0 5e 5e 08 1f e8 73 40 c0 5e 5e 09 1e e8 6b 40 c0 5e 5e 0a 1d e8 63 40 c0 5e 5e 0b 1c e8 5b 40 c0 5e 5e 0c 1b e8 53 40 c0 5e 5e 0d 1a e8 4b 40 c0 5e 5e 0e 19 e8 43 40 c0 5e 5e 0f 18 e8 3b 40 c0 5e 5e 10 17 e8 33 40 c0 5e 5e 11 16 e8 2b 40 c0 5e 5e 12 15 e8 23 40 c0 5e 5e 13 14 e8 1b 40 c0 5e 5e 14 13 e8 13 40 c0 5e 5e 15 12 e8 0b 40 c0 5e 5e 16 11 e8 03 40 c0 5e 5e 17 10 e8 fb 3f c0 5e 5e 18 0f e8 f3 3f c0 5e 5e 19 0e e8 eb 3f c0 5e 5e 1a 0d e8 e3 3f c0 5e 5e 1b 0c e8 db 3f c0 5e 5e 1c 0b e8 d3 3f c0 5e 5e 1d 0a e8 cb 3f c0 5e 5e 1e 09 e8 c3 3f c0 5e 5e 1f 08 e8 bb 3f c0 5e 5e 20 07 e8 b3 3f c0 5e 5e 21 06 e8 ab 3f c0 5e 5e 22 05 e8 a3 3f c0 5e 5e 23 04 e8 9b 3f c0 5e 5e 24 03 e8 93 3f c0 5e 5e 25 02 e8 8b 3f c0 5e 5e 26 01 e8 83 3f c0 5e 5e 27 00 e0 f3 b0 c8 f7 7f 00 00 10 c5 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b6 c2 c3 00 00 00 19 00 00 00 40 00 00 00 78 c5 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 c3 00 00 00 19 00 00 00 40 00 00 00 e0 c5 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 48 c6 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 eb 3e c0 5e 5e 00 27 e8 e3 3e c0 5e 5e 01 26 e8 db 3e c0 5e 5e 02 25 e8 d3 3e c0 5e 5e 03 24 e8 cb 3e c0 5e 5e 04 23 e8 c3 3e c0 5e 5e 05 22 e8 bb 3e c0 5e 5e 06 21 e8 b3 3e c0 5e 5e 07 20 e8 ab 3e c0 5e 5e 08 1f e8 a3 3e c0 5e 5e 09 1e e8 9b 3e c0 5e 5e 0a 1d e8 93 3e c0 5e 5e 0b 1c e8 8b 3e c0 5e 5e 0c 1b e8 83 3e c0 5e 5e 0d 1a e8 7b 3e c0 5e 5e 0e 19 e8 73 3e c0 5e 5e 0f 18 e8 6b 3e c0 5e 5e 10 17 e8 63 3e c0 5e 5e 11 16 e8 5b 3e c0 5e 5e 12 15 e8 53 3e c0 5e 5e 13 14 e8 4b 3e c0 5e 5e 14 13 e8 43 3e c0 5e 5e 15 12 e8 3b 3e c0 5e 5e 16 11 e8 33 3e c0 5e 5e 17 10 e8 2b 3e c0 5e 5e 18 0f e8 23 3e c0 5e 5e 19 0e e8 1b 3e c0 5e 5e 1a 0d e8 13 3e c0 5e 5e 1b 0c e8 0b 3e c0 5e 5e 1c 0b e8 03 3e c0 5e 5e 1d 0a e8 fb 3d c0 5e 5e 1e 09 e8 f3 3d c0 5e 5e 1f 08 e8 eb 3d c0 5e 5e 20 07 e8 e3 3d c0 5e 5e 21 06 e8 db 3d c0 5e 5e 22 05 e8 d3 3d c0 5e 5e 23 04 e8 cb 3d c0 5e 5e 24 03 e8 c3 3d c0 5e 5e 25 02 e8 bb 3d c0 5e 5e 26 01 e8 b3 3d c0 5e 5e 27 00 00 f9 b0 c8 f7 7f 00 00 58 c7 af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
32        | 7ff7c8661500h   | 963     | hex://logix/BitVectorOps?left#left_g[8u]()                                                                    | BitVector<byte> left<byte>(BitVector<byte> x, BitVector<byte> y)                                              | 0f 1f 44 00 00 89 54 24 10 0f b6 c1 c3 00 00 00 19 00 00 00 40 00 00 00 30 c3 af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b7 c1 c3 00 00 00 19 00 00 00 40 00 00 00 98 c3 af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 8b c1 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 c4 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 54 24 10 48 8b c1 c3 00 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 bb 40 c0 5e 5e 00 27 e8 b3 40 c0 5e 5e 01 26 e8 ab 40 c0 5e 5e 02 25 e8 a3 40 c0 5e 5e 03 24 e8 9b 40 c0 5e 5e 04 23 e8 93 40 c0 5e 5e 05 22 e8 8b 40 c0 5e 5e 06 21 e8 83 40 c0 5e 5e 07 20 e8 7b 40 c0 5e 5e 08 1f e8 73 40 c0 5e 5e 09 1e e8 6b 40 c0 5e 5e 0a 1d e8 63 40 c0 5e 5e 0b 1c e8 5b 40 c0 5e 5e 0c 1b e8 53 40 c0 5e 5e 0d 1a e8 4b 40 c0 5e 5e 0e 19 e8 43 40 c0 5e 5e 0f 18 e8 3b 40 c0 5e 5e 10 17 e8 33 40 c0 5e 5e 11 16 e8 2b 40 c0 5e 5e 12 15 e8 23 40 c0 5e 5e 13 14 e8 1b 40 c0 5e 5e 14 13 e8 13 40 c0 5e 5e 15 12 e8 0b 40 c0 5e 5e 16 11 e8 03 40 c0 5e 5e 17 10 e8 fb 3f c0 5e 5e 18 0f e8 f3 3f c0 5e 5e 19 0e e8 eb 3f c0 5e 5e 1a 0d e8 e3 3f c0 5e 5e 1b 0c e8 db 3f c0 5e 5e 1c 0b e8 d3 3f c0 5e 5e 1d 0a e8 cb 3f c0 5e 5e 1e 09 e8 c3 3f c0 5e 5e 1f 08 e8 bb 3f c0 5e 5e 20 07 e8 b3 3f c0 5e 5e 21 06 e8 ab 3f c0 5e 5e 22 05 e8 a3 3f c0 5e 5e 23 04 e8 9b 3f c0 5e 5e 24 03 e8 93 3f c0 5e 5e 25 02 e8 8b 3f c0 5e 5e 26 01 e8 83 3f c0 5e 5e 27 00 e0 f3 b0 c8 f7 7f 00 00 10 c5 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b6 c2 c3 00 00 00 19 00 00 00 40 00 00 00 78 c5 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 c3 00 00 00 19 00 00 00 40 00 00 00 e0 c5 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 48 c6 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 eb 3e c0 5e 5e 00 27 e8 e3 3e c0 5e 5e 01 26 e8 db 3e c0 5e 5e 02 25 e8 d3 3e c0 5e 5e 03 24 e8 cb 3e c0 5e 5e 04 23 e8 c3 3e c0 5e 5e 05 22 e8 bb 3e c0 5e 5e 06 21 e8 b3 3e c0 5e 5e 07 20 e8 ab 3e c0 5e 5e 08 1f e8 a3 3e c0 5e 5e 09 1e e8 9b 3e c0 5e 5e 0a 1d e8 93 3e c0 5e 5e 0b 1c e8 8b 3e c0 5e 5e 0c 1b e8 83 3e c0 5e 5e 0d 1a e8 7b 3e c0 5e 5e 0e 19 e8 73 3e c0 5e 5e 0f 18 e8 6b 3e c0 5e 5e 10 17 e8 63 3e c0 5e 5e 11 16 e8 5b 3e c0 5e 5e 12 15 e8 53 3e c0 5e 5e 13 14 e8 4b 3e c0 5e 5e 14 13 e8 43 3e c0 5e 5e 15 12 e8 3b 3e c0 5e 5e 16 11 e8 33 3e c0 5e 5e 17 10 e8 2b 3e c0 5e 5e 18 0f e8 23 3e c0 5e 5e 19 0e e8 1b 3e c0 5e 5e 1a 0d e8 13 3e c0 5e 5e 1b 0c e8 0b 3e c0 5e 5e 1c 0b e8 03 3e c0 5e 5e 1d 0a e8 fb 3d c0 5e 5e 1e 09 e8 f3 3d c0 5e 5e 1f 08 e8 eb 3d c0 5e 5e 20 07 e8 e3 3d c0 5e 5e 21 06 e8 db 3d c0 5e 5e 22 05 e8 d3 3d c0 5e 5e 23 04 e8 cb 3d c0 5e 5e 24 03 e8 c3 3d c0 5e 5e 25 02 e8 bb 3d c0 5e 5e 26 01 e8 b3 3d c0 5e 5e 27 00 00 f9 b0 c8 f7 7f 00 00 58 c7 af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
33        | 7ff7c8661520h   | 931     | hex://logix/BitVectorOps?left#left_g[16u]()                                                                   | BitVector<ushort> left<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                      | 0f 1f 44 00 00 89 54 24 10 0f b7 c1 c3 00 00 00 19 00 00 00 40 00 00 00 98 c3 af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 8b c1 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 c4 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 54 24 10 48 8b c1 c3 00 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 bb 40 c0 5e 5e 00 27 e8 b3 40 c0 5e 5e 01 26 e8 ab 40 c0 5e 5e 02 25 e8 a3 40 c0 5e 5e 03 24 e8 9b 40 c0 5e 5e 04 23 e8 93 40 c0 5e 5e 05 22 e8 8b 40 c0 5e 5e 06 21 e8 83 40 c0 5e 5e 07 20 e8 7b 40 c0 5e 5e 08 1f e8 73 40 c0 5e 5e 09 1e e8 6b 40 c0 5e 5e 0a 1d e8 63 40 c0 5e 5e 0b 1c e8 5b 40 c0 5e 5e 0c 1b e8 53 40 c0 5e 5e 0d 1a e8 4b 40 c0 5e 5e 0e 19 e8 43 40 c0 5e 5e 0f 18 e8 3b 40 c0 5e 5e 10 17 e8 33 40 c0 5e 5e 11 16 e8 2b 40 c0 5e 5e 12 15 e8 23 40 c0 5e 5e 13 14 e8 1b 40 c0 5e 5e 14 13 e8 13 40 c0 5e 5e 15 12 e8 0b 40 c0 5e 5e 16 11 e8 03 40 c0 5e 5e 17 10 e8 fb 3f c0 5e 5e 18 0f e8 f3 3f c0 5e 5e 19 0e e8 eb 3f c0 5e 5e 1a 0d e8 e3 3f c0 5e 5e 1b 0c e8 db 3f c0 5e 5e 1c 0b e8 d3 3f c0 5e 5e 1d 0a e8 cb 3f c0 5e 5e 1e 09 e8 c3 3f c0 5e 5e 1f 08 e8 bb 3f c0 5e 5e 20 07 e8 b3 3f c0 5e 5e 21 06 e8 ab 3f c0 5e 5e 22 05 e8 a3 3f c0 5e 5e 23 04 e8 9b 3f c0 5e 5e 24 03 e8 93 3f c0 5e 5e 25 02 e8 8b 3f c0 5e 5e 26 01 e8 83 3f c0 5e 5e 27 00 e0 f3 b0 c8 f7 7f 00 00 10 c5 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b6 c2 c3 00 00 00 19 00 00 00 40 00 00 00 78 c5 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 c3 00 00 00 19 00 00 00 40 00 00 00 e0 c5 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 48 c6 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 eb 3e c0 5e 5e 00 27 e8 e3 3e c0 5e 5e 01 26 e8 db 3e c0 5e 5e 02 25 e8 d3 3e c0 5e 5e 03 24 e8 cb 3e c0 5e 5e 04 23 e8 c3 3e c0 5e 5e 05 22 e8 bb 3e c0 5e 5e 06 21 e8 b3 3e c0 5e 5e 07 20 e8 ab 3e c0 5e 5e 08 1f e8 a3 3e c0 5e 5e 09 1e e8 9b 3e c0 5e 5e 0a 1d e8 93 3e c0 5e 5e 0b 1c e8 8b 3e c0 5e 5e 0c 1b e8 83 3e c0 5e 5e 0d 1a e8 7b 3e c0 5e 5e 0e 19 e8 73 3e c0 5e 5e 0f 18 e8 6b 3e c0 5e 5e 10 17 e8 63 3e c0 5e 5e 11 16 e8 5b 3e c0 5e 5e 12 15 e8 53 3e c0 5e 5e 13 14 e8 4b 3e c0 5e 5e 14 13 e8 43 3e c0 5e 5e 15 12 e8 3b 3e c0 5e 5e 16 11 e8 33 3e c0 5e 5e 17 10 e8 2b 3e c0 5e 5e 18 0f e8 23 3e c0 5e 5e 19 0e e8 1b 3e c0 5e 5e 1a 0d e8 13 3e c0 5e 5e 1b 0c e8 0b 3e c0 5e 5e 1c 0b e8 03 3e c0 5e 5e 1d 0a e8 fb 3d c0 5e 5e 1e 09 e8 f3 3d c0 5e 5e 1f 08 e8 eb 3d c0 5e 5e 20 07 e8 e3 3d c0 5e 5e 21 06 e8 db 3d c0 5e 5e 22 05 e8 d3 3d c0 5e 5e 23 04 e8 cb 3d c0 5e 5e 24 03 e8 c3 3d c0 5e 5e 25 02 e8 bb 3d c0 5e 5e 26 01 e8 b3 3d c0 5e 5e 27 00 00 f9 b0 c8 f7 7f 00 00 58 c7 af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
34        | 7ff7c8661540h   | 899     | hex://logix/BitVectorOps?left#left_g[32u]()                                                                   | BitVector<uint> left<uint>(BitVector<uint> x, BitVector<uint> y)                                              | 0f 1f 44 00 00 89 54 24 10 8b c1 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 c4 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 54 24 10 48 8b c1 c3 00 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 bb 40 c0 5e 5e 00 27 e8 b3 40 c0 5e 5e 01 26 e8 ab 40 c0 5e 5e 02 25 e8 a3 40 c0 5e 5e 03 24 e8 9b 40 c0 5e 5e 04 23 e8 93 40 c0 5e 5e 05 22 e8 8b 40 c0 5e 5e 06 21 e8 83 40 c0 5e 5e 07 20 e8 7b 40 c0 5e 5e 08 1f e8 73 40 c0 5e 5e 09 1e e8 6b 40 c0 5e 5e 0a 1d e8 63 40 c0 5e 5e 0b 1c e8 5b 40 c0 5e 5e 0c 1b e8 53 40 c0 5e 5e 0d 1a e8 4b 40 c0 5e 5e 0e 19 e8 43 40 c0 5e 5e 0f 18 e8 3b 40 c0 5e 5e 10 17 e8 33 40 c0 5e 5e 11 16 e8 2b 40 c0 5e 5e 12 15 e8 23 40 c0 5e 5e 13 14 e8 1b 40 c0 5e 5e 14 13 e8 13 40 c0 5e 5e 15 12 e8 0b 40 c0 5e 5e 16 11 e8 03 40 c0 5e 5e 17 10 e8 fb 3f c0 5e 5e 18 0f e8 f3 3f c0 5e 5e 19 0e e8 eb 3f c0 5e 5e 1a 0d e8 e3 3f c0 5e 5e 1b 0c e8 db 3f c0 5e 5e 1c 0b e8 d3 3f c0 5e 5e 1d 0a e8 cb 3f c0 5e 5e 1e 09 e8 c3 3f c0 5e 5e 1f 08 e8 bb 3f c0 5e 5e 20 07 e8 b3 3f c0 5e 5e 21 06 e8 ab 3f c0 5e 5e 22 05 e8 a3 3f c0 5e 5e 23 04 e8 9b 3f c0 5e 5e 24 03 e8 93 3f c0 5e 5e 25 02 e8 8b 3f c0 5e 5e 26 01 e8 83 3f c0 5e 5e 27 00 e0 f3 b0 c8 f7 7f 00 00 10 c5 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b6 c2 c3 00 00 00 19 00 00 00 40 00 00 00 78 c5 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 c3 00 00 00 19 00 00 00 40 00 00 00 e0 c5 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 48 c6 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 eb 3e c0 5e 5e 00 27 e8 e3 3e c0 5e 5e 01 26 e8 db 3e c0 5e 5e 02 25 e8 d3 3e c0 5e 5e 03 24 e8 cb 3e c0 5e 5e 04 23 e8 c3 3e c0 5e 5e 05 22 e8 bb 3e c0 5e 5e 06 21 e8 b3 3e c0 5e 5e 07 20 e8 ab 3e c0 5e 5e 08 1f e8 a3 3e c0 5e 5e 09 1e e8 9b 3e c0 5e 5e 0a 1d e8 93 3e c0 5e 5e 0b 1c e8 8b 3e c0 5e 5e 0c 1b e8 83 3e c0 5e 5e 0d 1a e8 7b 3e c0 5e 5e 0e 19 e8 73 3e c0 5e 5e 0f 18 e8 6b 3e c0 5e 5e 10 17 e8 63 3e c0 5e 5e 11 16 e8 5b 3e c0 5e 5e 12 15 e8 53 3e c0 5e 5e 13 14 e8 4b 3e c0 5e 5e 14 13 e8 43 3e c0 5e 5e 15 12 e8 3b 3e c0 5e 5e 16 11 e8 33 3e c0 5e 5e 17 10 e8 2b 3e c0 5e 5e 18 0f e8 23 3e c0 5e 5e 19 0e e8 1b 3e c0 5e 5e 1a 0d e8 13 3e c0 5e 5e 1b 0c e8 0b 3e c0 5e 5e 1c 0b e8 03 3e c0 5e 5e 1d 0a e8 fb 3d c0 5e 5e 1e 09 e8 f3 3d c0 5e 5e 1f 08 e8 eb 3d c0 5e 5e 20 07 e8 e3 3d c0 5e 5e 21 06 e8 db 3d c0 5e 5e 22 05 e8 d3 3d c0 5e 5e 23 04 e8 cb 3d c0 5e 5e 24 03 e8 c3 3d c0 5e 5e 25 02 e8 bb 3d c0 5e 5e 26 01 e8 b3 3d c0 5e 5e 27 00 00 f9 b0 c8 f7 7f 00 00 58 c7 af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
35        | 7ff7c8661560h   | 867     | hex://logix/BitVectorOps?left#left_g[64u]()                                                                   | BitVector<ulong> left<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                          | 0f 1f 44 00 00 48 89 54 24 10 48 8b c1 c3 00 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 bb 40 c0 5e 5e 00 27 e8 b3 40 c0 5e 5e 01 26 e8 ab 40 c0 5e 5e 02 25 e8 a3 40 c0 5e 5e 03 24 e8 9b 40 c0 5e 5e 04 23 e8 93 40 c0 5e 5e 05 22 e8 8b 40 c0 5e 5e 06 21 e8 83 40 c0 5e 5e 07 20 e8 7b 40 c0 5e 5e 08 1f e8 73 40 c0 5e 5e 09 1e e8 6b 40 c0 5e 5e 0a 1d e8 63 40 c0 5e 5e 0b 1c e8 5b 40 c0 5e 5e 0c 1b e8 53 40 c0 5e 5e 0d 1a e8 4b 40 c0 5e 5e 0e 19 e8 43 40 c0 5e 5e 0f 18 e8 3b 40 c0 5e 5e 10 17 e8 33 40 c0 5e 5e 11 16 e8 2b 40 c0 5e 5e 12 15 e8 23 40 c0 5e 5e 13 14 e8 1b 40 c0 5e 5e 14 13 e8 13 40 c0 5e 5e 15 12 e8 0b 40 c0 5e 5e 16 11 e8 03 40 c0 5e 5e 17 10 e8 fb 3f c0 5e 5e 18 0f e8 f3 3f c0 5e 5e 19 0e e8 eb 3f c0 5e 5e 1a 0d e8 e3 3f c0 5e 5e 1b 0c e8 db 3f c0 5e 5e 1c 0b e8 d3 3f c0 5e 5e 1d 0a e8 cb 3f c0 5e 5e 1e 09 e8 c3 3f c0 5e 5e 1f 08 e8 bb 3f c0 5e 5e 20 07 e8 b3 3f c0 5e 5e 21 06 e8 ab 3f c0 5e 5e 22 05 e8 a3 3f c0 5e 5e 23 04 e8 9b 3f c0 5e 5e 24 03 e8 93 3f c0 5e 5e 25 02 e8 8b 3f c0 5e 5e 26 01 e8 83 3f c0 5e 5e 27 00 e0 f3 b0 c8 f7 7f 00 00 10 c5 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b6 c2 c3 00 00 00 19 00 00 00 40 00 00 00 78 c5 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 c3 00 00 00 19 00 00 00 40 00 00 00 e0 c5 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 48 c6 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 eb 3e c0 5e 5e 00 27 e8 e3 3e c0 5e 5e 01 26 e8 db 3e c0 5e 5e 02 25 e8 d3 3e c0 5e 5e 03 24 e8 cb 3e c0 5e 5e 04 23 e8 c3 3e c0 5e 5e 05 22 e8 bb 3e c0 5e 5e 06 21 e8 b3 3e c0 5e 5e 07 20 e8 ab 3e c0 5e 5e 08 1f e8 a3 3e c0 5e 5e 09 1e e8 9b 3e c0 5e 5e 0a 1d e8 93 3e c0 5e 5e 0b 1c e8 8b 3e c0 5e 5e 0c 1b e8 83 3e c0 5e 5e 0d 1a e8 7b 3e c0 5e 5e 0e 19 e8 73 3e c0 5e 5e 0f 18 e8 6b 3e c0 5e 5e 10 17 e8 63 3e c0 5e 5e 11 16 e8 5b 3e c0 5e 5e 12 15 e8 53 3e c0 5e 5e 13 14 e8 4b 3e c0 5e 5e 14 13 e8 43 3e c0 5e 5e 15 12 e8 3b 3e c0 5e 5e 16 11 e8 33 3e c0 5e 5e 17 10 e8 2b 3e c0 5e 5e 18 0f e8 23 3e c0 5e 5e 19 0e e8 1b 3e c0 5e 5e 1a 0d e8 13 3e c0 5e 5e 1b 0c e8 0b 3e c0 5e 5e 1c 0b e8 03 3e c0 5e 5e 1d 0a e8 fb 3d c0 5e 5e 1e 09 e8 f3 3d c0 5e 5e 1f 08 e8 eb 3d c0 5e 5e 20 07 e8 e3 3d c0 5e 5e 21 06 e8 db 3d c0 5e 5e 22 05 e8 d3 3d c0 5e 5e 23 04 e8 cb 3d c0 5e 5e 24 03 e8 c3 3d c0 5e 5e 25 02 e8 bb 3d c0 5e 5e 26 01 e8 b3 3d c0 5e 5e 27 00 00 f9 b0 c8 f7 7f 00 00 58 c7 af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
36        | 7ff7c86616d0h   | 499     | hex://logix/BitVectorOps?right#right_g[8u]()                                                                  | BitVector<byte> right<byte>(BitVector<byte> x, BitVector<byte> y)                                             | 0f 1f 44 00 00 89 4c 24 08 0f b6 c2 c3 00 00 00 19 00 00 00 40 00 00 00 78 c5 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 c3 00 00 00 19 00 00 00 40 00 00 00 e0 c5 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 48 c6 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 eb 3e c0 5e 5e 00 27 e8 e3 3e c0 5e 5e 01 26 e8 db 3e c0 5e 5e 02 25 e8 d3 3e c0 5e 5e 03 24 e8 cb 3e c0 5e 5e 04 23 e8 c3 3e c0 5e 5e 05 22 e8 bb 3e c0 5e 5e 06 21 e8 b3 3e c0 5e 5e 07 20 e8 ab 3e c0 5e 5e 08 1f e8 a3 3e c0 5e 5e 09 1e e8 9b 3e c0 5e 5e 0a 1d e8 93 3e c0 5e 5e 0b 1c e8 8b 3e c0 5e 5e 0c 1b e8 83 3e c0 5e 5e 0d 1a e8 7b 3e c0 5e 5e 0e 19 e8 73 3e c0 5e 5e 0f 18 e8 6b 3e c0 5e 5e 10 17 e8 63 3e c0 5e 5e 11 16 e8 5b 3e c0 5e 5e 12 15 e8 53 3e c0 5e 5e 13 14 e8 4b 3e c0 5e 5e 14 13 e8 43 3e c0 5e 5e 15 12 e8 3b 3e c0 5e 5e 16 11 e8 33 3e c0 5e 5e 17 10 e8 2b 3e c0 5e 5e 18 0f e8 23 3e c0 5e 5e 19 0e e8 1b 3e c0 5e 5e 1a 0d e8 13 3e c0 5e 5e 1b 0c e8 0b 3e c0 5e 5e 1c 0b e8 03 3e c0 5e 5e 1d 0a e8 fb 3d c0 5e 5e 1e 09 e8 f3 3d c0 5e 5e 1f 08 e8 eb 3d c0 5e 5e 20 07 e8 e3 3d c0 5e 5e 21 06 e8 db 3d c0 5e 5e 22 05 e8 d3 3d c0 5e 5e 23 04 e8 cb 3d c0 5e 5e 24 03 e8 c3 3d c0 5e 5e 25 02 e8 bb 3d c0 5e 5e 26 01 e8 b3 3d c0 5e 5e 27 00 00 f9 b0 c8 f7 7f 00 00 58 c7 af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
37        | 7ff7c86616f0h   | 467     | hex://logix/BitVectorOps?right#right_g[16u]()                                                                 | BitVector<ushort> right<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                     | 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 c3 00 00 00 19 00 00 00 40 00 00 00 e0 c5 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 48 c6 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 eb 3e c0 5e 5e 00 27 e8 e3 3e c0 5e 5e 01 26 e8 db 3e c0 5e 5e 02 25 e8 d3 3e c0 5e 5e 03 24 e8 cb 3e c0 5e 5e 04 23 e8 c3 3e c0 5e 5e 05 22 e8 bb 3e c0 5e 5e 06 21 e8 b3 3e c0 5e 5e 07 20 e8 ab 3e c0 5e 5e 08 1f e8 a3 3e c0 5e 5e 09 1e e8 9b 3e c0 5e 5e 0a 1d e8 93 3e c0 5e 5e 0b 1c e8 8b 3e c0 5e 5e 0c 1b e8 83 3e c0 5e 5e 0d 1a e8 7b 3e c0 5e 5e 0e 19 e8 73 3e c0 5e 5e 0f 18 e8 6b 3e c0 5e 5e 10 17 e8 63 3e c0 5e 5e 11 16 e8 5b 3e c0 5e 5e 12 15 e8 53 3e c0 5e 5e 13 14 e8 4b 3e c0 5e 5e 14 13 e8 43 3e c0 5e 5e 15 12 e8 3b 3e c0 5e 5e 16 11 e8 33 3e c0 5e 5e 17 10 e8 2b 3e c0 5e 5e 18 0f e8 23 3e c0 5e 5e 19 0e e8 1b 3e c0 5e 5e 1a 0d e8 13 3e c0 5e 5e 1b 0c e8 0b 3e c0 5e 5e 1c 0b e8 03 3e c0 5e 5e 1d 0a e8 fb 3d c0 5e 5e 1e 09 e8 f3 3d c0 5e 5e 1f 08 e8 eb 3d c0 5e 5e 20 07 e8 e3 3d c0 5e 5e 21 06 e8 db 3d c0 5e 5e 22 05 e8 d3 3d c0 5e 5e 23 04 e8 cb 3d c0 5e 5e 24 03 e8 c3 3d c0 5e 5e 25 02 e8 bb 3d c0 5e 5e 26 01 e8 b3 3d c0 5e 5e 27 00 00 f9 b0 c8 f7 7f 00 00 58 c7 af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
38        | 7ff7c8661710h   | 435     | hex://logix/BitVectorOps?right#right_g[32u]()                                                                 | BitVector<uint> right<uint>(BitVector<uint> x, BitVector<uint> y)                                             | 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 48 c6 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 eb 3e c0 5e 5e 00 27 e8 e3 3e c0 5e 5e 01 26 e8 db 3e c0 5e 5e 02 25 e8 d3 3e c0 5e 5e 03 24 e8 cb 3e c0 5e 5e 04 23 e8 c3 3e c0 5e 5e 05 22 e8 bb 3e c0 5e 5e 06 21 e8 b3 3e c0 5e 5e 07 20 e8 ab 3e c0 5e 5e 08 1f e8 a3 3e c0 5e 5e 09 1e e8 9b 3e c0 5e 5e 0a 1d e8 93 3e c0 5e 5e 0b 1c e8 8b 3e c0 5e 5e 0c 1b e8 83 3e c0 5e 5e 0d 1a e8 7b 3e c0 5e 5e 0e 19 e8 73 3e c0 5e 5e 0f 18 e8 6b 3e c0 5e 5e 10 17 e8 63 3e c0 5e 5e 11 16 e8 5b 3e c0 5e 5e 12 15 e8 53 3e c0 5e 5e 13 14 e8 4b 3e c0 5e 5e 14 13 e8 43 3e c0 5e 5e 15 12 e8 3b 3e c0 5e 5e 16 11 e8 33 3e c0 5e 5e 17 10 e8 2b 3e c0 5e 5e 18 0f e8 23 3e c0 5e 5e 19 0e e8 1b 3e c0 5e 5e 1a 0d e8 13 3e c0 5e 5e 1b 0c e8 0b 3e c0 5e 5e 1c 0b e8 03 3e c0 5e 5e 1d 0a e8 fb 3d c0 5e 5e 1e 09 e8 f3 3d c0 5e 5e 1f 08 e8 eb 3d c0 5e 5e 20 07 e8 e3 3d c0 5e 5e 21 06 e8 db 3d c0 5e 5e 22 05 e8 d3 3d c0 5e 5e 23 04 e8 cb 3d c0 5e 5e 24 03 e8 c3 3d c0 5e 5e 25 02 e8 bb 3d c0 5e 5e 26 01 e8 b3 3d c0 5e 5e 27 00 00 f9 b0 c8 f7 7f 00 00 58 c7 af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
39        | 7ff7c8661730h   | 403     | hex://logix/BitVectorOps?right#right_g[64u]()                                                                 | BitVector<ulong> right<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                         | 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 eb 3e c0 5e 5e 00 27 e8 e3 3e c0 5e 5e 01 26 e8 db 3e c0 5e 5e 02 25 e8 d3 3e c0 5e 5e 03 24 e8 cb 3e c0 5e 5e 04 23 e8 c3 3e c0 5e 5e 05 22 e8 bb 3e c0 5e 5e 06 21 e8 b3 3e c0 5e 5e 07 20 e8 ab 3e c0 5e 5e 08 1f e8 a3 3e c0 5e 5e 09 1e e8 9b 3e c0 5e 5e 0a 1d e8 93 3e c0 5e 5e 0b 1c e8 8b 3e c0 5e 5e 0c 1b e8 83 3e c0 5e 5e 0d 1a e8 7b 3e c0 5e 5e 0e 19 e8 73 3e c0 5e 5e 0f 18 e8 6b 3e c0 5e 5e 10 17 e8 63 3e c0 5e 5e 11 16 e8 5b 3e c0 5e 5e 12 15 e8 53 3e c0 5e 5e 13 14 e8 4b 3e c0 5e 5e 14 13 e8 43 3e c0 5e 5e 15 12 e8 3b 3e c0 5e 5e 16 11 e8 33 3e c0 5e 5e 17 10 e8 2b 3e c0 5e 5e 18 0f e8 23 3e c0 5e 5e 19 0e e8 1b 3e c0 5e 5e 1a 0d e8 13 3e c0 5e 5e 1b 0c e8 0b 3e c0 5e 5e 1c 0b e8 03 3e c0 5e 5e 1d 0a e8 fb 3d c0 5e 5e 1e 09 e8 f3 3d c0 5e 5e 1f 08 e8 eb 3d c0 5e 5e 20 07 e8 e3 3d c0 5e 5e 21 06 e8 db 3d c0 5e 5e 22 05 e8 d3 3d c0 5e 5e 23 04 e8 cb 3d c0 5e 5e 24 03 e8 c3 3d c0 5e 5e 25 02 e8 bb 3d c0 5e 5e 26 01 e8 b3 3d c0 5e 5e 27 00 00 f9 b0 c8 f7 7f 00 00 58 c7 af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
40        | 7ff7c86618a0h   | 35      | hex://logix/BitVectorOps?lnot#lnot_g[8u]()                                                                    | BitVector<byte> lnot<byte>(BitVector<byte> x, BitVector<byte> y)                                              | 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
41        | 7ff7c86618d0h   | 35      | hex://logix/BitVectorOps?lnot#lnot_g[16u]()                                                                   | BitVector<ushort> lnot<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                      | 0f 1f 44 00 00 89 54 24 10 0f b7 c1 f7 d0 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
42        | 7ff7c8661900h   | 1475    | hex://logix/BitVectorOps?lnot#lnot_g[32u]()                                                                   | BitVector<uint> lnot<uint>(BitVector<uint> x, BitVector<uint> y)                                              | 0f 1f 44 00 00 89 54 24 10 8b c1 f7 d0 c3 00 00 19 00 00 00 40 00 00 00 90 c8 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 54 24 10 48 8b c1 48 f7 d0 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 f3 3c c0 5e 5e 00 27 e8 eb 3c c0 5e 5e 01 26 e8 e3 3c c0 5e 5e 02 25 e8 db 3c c0 5e 5e 03 24 e8 d3 3c c0 5e 5e 04 23 e8 cb 3c c0 5e 5e 05 22 e8 c3 3c c0 5e 5e 06 21 e8 bb 3c c0 5e 5e 07 20 e8 b3 3c c0 5e 5e 08 1f e8 ab 3c c0 5e 5e 09 1e e8 a3 3c c0 5e 5e 0a 1d e8 9b 3c c0 5e 5e 0b 1c e8 93 3c c0 5e 5e 0c 1b e8 8b 3c c0 5e 5e 0d 1a e8 83 3c c0 5e 5e 0e 19 e8 7b 3c c0 5e 5e 0f 18 e8 73 3c c0 5e 5e 10 17 e8 6b 3c c0 5e 5e 11 16 e8 63 3c c0 5e 5e 12 15 e8 5b 3c c0 5e 5e 13 14 e8 53 3c c0 5e 5e 14 13 e8 4b 3c c0 5e 5e 15 12 e8 43 3c c0 5e 5e 16 11 e8 3b 3c c0 5e 5e 17 10 e8 33 3c c0 5e 5e 18 0f e8 2b 3c c0 5e 5e 19 0e e8 23 3c c0 5e 5e 1a 0d e8 1b 3c c0 5e 5e 1b 0c e8 13 3c c0 5e 5e 1c 0b e8 0b 3c c0 5e 5e 1d 0a e8 03 3c c0 5e 5e 1e 09 e8 fb 3b c0 5e 5e 1f 08 e8 f3 3b c0 5e 5e 20 07 e8 eb 3b c0 5e 5e 21 06 e8 e3 3b c0 5e 5e 22 05 e8 db 3b c0 5e 5e 23 04 e8 d3 3b c0 5e 5e 24 03 e8 cb 3b c0 5e 5e 25 02 e8 c3 3b c0 5e 5e 26 01 e8 bb 3b c0 5e 5e 27 00 20 fe b0 c8 f7 7f 00 00 02 00 00 00 00 00 00 00 e8 a3 3b c0 5e 5e 00 00 80 02 b1 c8 f7 7f 00 00 e8 93 3b c0 5e 5e 00 00 e0 02 b1 c8 f7 7f 00 00 e8 83 3b c0 5e 5e 00 00 40 03 b1 c8 f7 7f 00 00 e8 73 3b c0 5e 5e 00 00 a0 03 b1 c8 f7 7f 00 00 e8 63 3b c0 5e 5e 00 27 e8 5b 3b c0 5e 5e 01 26 e8 53 3b c0 5e 5e 02 25 e8 4b 3b c0 5e 5e 03 24 e8 43 3b c0 5e 5e 04 23 e8 3b 3b c0 5e 5e 05 22 e8 33 3b c0 5e 5e 06 21 e8 2b 3b c0 5e 5e 07 20 e8 23 3b c0 5e 5e 08 1f e8 1b 3b c0 5e 5e 09 1e e8 13 3b c0 5e 5e 0a 1d e8 0b 3b c0 5e 5e 0b 1c e8 03 3b c0 5e 5e 0c 1b e8 fb 3a c0 5e 5e 0d 1a e8 f3 3a c0 5e 5e 0e 19 e8 eb 3a c0 5e 5e 0f 18 e8 e3 3a c0 5e 5e 10 17 e8 db 3a c0 5e 5e 11 16 e8 d3 3a c0 5e 5e 12 15 e8 cb 3a c0 5e 5e 13 14 e8 c3 3a c0 5e 5e 14 13 e8 bb 3a c0 5e 5e 15 12 e8 b3 3a c0 5e 5e 16 11 e8 ab 3a c0 5e 5e 17 10 e8 a3 3a c0 5e 5e 18 0f e8 9b 3a c0 5e 5e 19 0e e8 93 3a c0 5e 5e 1a 0d e8 8b 3a c0 5e 5e 1b 0c e8 83 3a c0 5e 5e 1c 0b e8 7b 3a c0 5e 5e 1d 0a e8 73 3a c0 5e 5e 1e 09 e8 6b 3a c0 5e 5e 1f 08 e8 63 3a c0 5e 5e 20 07 e8 5b 3a c0 5e 5e 21 06 e8 53 3a c0 5e 5e 22 05 e8 4b 3a c0 5e 5e 23 04 e8 43 3a c0 5e 5e 24 03 e8 3b 3a c0 5e 5e 25 02 e8 33 3a c0 5e 5e 26 01 e8 2b 3a c0 5e 5e 27 00 00 04 b1 c8 f7 7f 00 00 e8 1b 3a c0 5e 5e 00 00 40 07 b1 c8 f7 7f 00 00 e8 0b 3a c0 5e 5e 00 00 a0 07 b1 c8 f7 7f 00 00 e8 fb 39 c0 5e 5e 00 00 00 08 b1 c8 f7 7f 00 00 e8 eb 39 c0 5e 5e 00 00 60 08 b1 c8 f7 7f 00 00 e8 db 39 c0 5e 5e 00 00 c0 08 b1 c8 f7 7f 00 00 e8 cb 39 c0 5e 5e 00 27 e8 c3 39 c0 5e 5e 01 26 e8 bb 39 c0 5e 5e 02 25 e8 b3 39 c0 5e 5e 03 24 e8 ab 39 c0 5e 5e 04 23 e8 a3 39 c0 5e 5e 05 22 e8 9b 39 c0 5e 5e 06 21 e8 93 39 c0 5e 5e 07 20 e8 8b 39 c0 5e 5e 08 1f e8 83 39 c0 5e 5e 09 1e e8 7b 39 c0 5e 5e 0a 1d e8 73 39 c0 5e 5e 0b 1c e8 6b 39 c0 5e 5e 0c 1b e8 63 39 c0 5e 5e 0d 1a e8 5b 39 c0 5e 5e 0e 19 e8 53 39 c0 5e 5e 0f 18 e8 4b 39 c0 5e 5e 10 17 e8 43 39 c0 5e 5e 11 16 e8 3b 39 c0 5e 5e 12 15 e8 33 39 c0 5e 5e 13 14 e8 2b 39 c0 5e 5e 14 13 e8 23 39 c0 5e 5e 15 12 e8 1b 39 c0 5e 5e 16 11 e8 13 39 c0 5e 5e 17 10 e8 0b 39 c0 5e 5e 18 0f e8 03 39 c0 5e 5e 19 0e e8 fb 38 c0 5e 5e 1a 0d e8 f3 38 c0 5e 5e 1b 0c e8 eb 38 c0 5e 5e 1c 0b e8 e3 38 c0 5e 5e 1d 0a e8 db 38 c0 5e 5e 1e 09 e8 d3 38 c0 5e 5e 1f 08 e8 cb 38 c0 5e 5e 20 07 e8 c3 38 c0 5e 5e 21 06 e8 bb 38 c0 5e 5e 22 05 e8 b3 38 c0 5e 5e 23 04 e8 ab 38 c0 5e 5e 24 03 e8 a3 38 c0 5e 5e 25 02 e8 9b 38 c0 5e 5e 26 01 e8 93 38 c0 5e 5e 27 00 20 09 b1 c8 f7 7f 00 00 e8 83 38 c0 5e 5e 00 00 60 0c b1 c8 f7 7f 00 00 e8 73 38 c0 5e 5e 00 00 c0 0c b1 c8 f7 7f 00 00 e8 63 38 c0 5e 5e 00 00 20 0d b1 c8 f7 7f 00 00 e8 53 38 c0 5e 5e 00 00 80 0d b1 c8 f7 7f 00 00 e8 43 38 c0 5e 5e 00 00 e0 0d b1 c8 f7 7f 00 00 e8 33 38 c0 5e 5e 00 00 80 11 b1 c8 f7 7f 00 00 e8 23 38 c0 5e 5e 00 00 e0 11 b1 c8 f7 7f 00 00 e8 13 38 c0 5e 5e 00 00 40 12 b1 c8 f7 7f 00 00 e8 03 38 c0 5e 5e 00 00 a0 12 b1 c8 f7 7f 00 00 e8 f3 37 c0 5e 5e 00 00 00 13 b1 c8 f7 7f 00 00 e8 e3 37 c0 5e 5e 00 00 a0 16 b1 c8 f7 7f 00 00 e8 d3 37 c0 5e 5e 00 00 00 17 b1 c8 f7 7f 00 00 e8 c3 37 c0 5e 5e 00 00 60 17 b1 c8 f7 7f 00 00 e8 b3 37 c0 5e 5e 00 00 c0 17 b1 c8 f7 7f 00 00 a0 c9 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b6 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
43        | 7ff7c8661920h   | 1443    | hex://logix/BitVectorOps?lnot#lnot_g[64u]()                                                                   | BitVector<ulong> lnot<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                          | 0f 1f 44 00 00 48 89 54 24 10 48 8b c1 48 f7 d0 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 f3 3c c0 5e 5e 00 27 e8 eb 3c c0 5e 5e 01 26 e8 e3 3c c0 5e 5e 02 25 e8 db 3c c0 5e 5e 03 24 e8 d3 3c c0 5e 5e 04 23 e8 cb 3c c0 5e 5e 05 22 e8 c3 3c c0 5e 5e 06 21 e8 bb 3c c0 5e 5e 07 20 e8 b3 3c c0 5e 5e 08 1f e8 ab 3c c0 5e 5e 09 1e e8 a3 3c c0 5e 5e 0a 1d e8 9b 3c c0 5e 5e 0b 1c e8 93 3c c0 5e 5e 0c 1b e8 8b 3c c0 5e 5e 0d 1a e8 83 3c c0 5e 5e 0e 19 e8 7b 3c c0 5e 5e 0f 18 e8 73 3c c0 5e 5e 10 17 e8 6b 3c c0 5e 5e 11 16 e8 63 3c c0 5e 5e 12 15 e8 5b 3c c0 5e 5e 13 14 e8 53 3c c0 5e 5e 14 13 e8 4b 3c c0 5e 5e 15 12 e8 43 3c c0 5e 5e 16 11 e8 3b 3c c0 5e 5e 17 10 e8 33 3c c0 5e 5e 18 0f e8 2b 3c c0 5e 5e 19 0e e8 23 3c c0 5e 5e 1a 0d e8 1b 3c c0 5e 5e 1b 0c e8 13 3c c0 5e 5e 1c 0b e8 0b 3c c0 5e 5e 1d 0a e8 03 3c c0 5e 5e 1e 09 e8 fb 3b c0 5e 5e 1f 08 e8 f3 3b c0 5e 5e 20 07 e8 eb 3b c0 5e 5e 21 06 e8 e3 3b c0 5e 5e 22 05 e8 db 3b c0 5e 5e 23 04 e8 d3 3b c0 5e 5e 24 03 e8 cb 3b c0 5e 5e 25 02 e8 c3 3b c0 5e 5e 26 01 e8 bb 3b c0 5e 5e 27 00 20 fe b0 c8 f7 7f 00 00 02 00 00 00 00 00 00 00 e8 a3 3b c0 5e 5e 00 00 80 02 b1 c8 f7 7f 00 00 e8 93 3b c0 5e 5e 00 00 e0 02 b1 c8 f7 7f 00 00 e8 83 3b c0 5e 5e 00 00 40 03 b1 c8 f7 7f 00 00 e8 73 3b c0 5e 5e 00 00 a0 03 b1 c8 f7 7f 00 00 e8 63 3b c0 5e 5e 00 27 e8 5b 3b c0 5e 5e 01 26 e8 53 3b c0 5e 5e 02 25 e8 4b 3b c0 5e 5e 03 24 e8 43 3b c0 5e 5e 04 23 e8 3b 3b c0 5e 5e 05 22 e8 33 3b c0 5e 5e 06 21 e8 2b 3b c0 5e 5e 07 20 e8 23 3b c0 5e 5e 08 1f e8 1b 3b c0 5e 5e 09 1e e8 13 3b c0 5e 5e 0a 1d e8 0b 3b c0 5e 5e 0b 1c e8 03 3b c0 5e 5e 0c 1b e8 fb 3a c0 5e 5e 0d 1a e8 f3 3a c0 5e 5e 0e 19 e8 eb 3a c0 5e 5e 0f 18 e8 e3 3a c0 5e 5e 10 17 e8 db 3a c0 5e 5e 11 16 e8 d3 3a c0 5e 5e 12 15 e8 cb 3a c0 5e 5e 13 14 e8 c3 3a c0 5e 5e 14 13 e8 bb 3a c0 5e 5e 15 12 e8 b3 3a c0 5e 5e 16 11 e8 ab 3a c0 5e 5e 17 10 e8 a3 3a c0 5e 5e 18 0f e8 9b 3a c0 5e 5e 19 0e e8 93 3a c0 5e 5e 1a 0d e8 8b 3a c0 5e 5e 1b 0c e8 83 3a c0 5e 5e 1c 0b e8 7b 3a c0 5e 5e 1d 0a e8 73 3a c0 5e 5e 1e 09 e8 6b 3a c0 5e 5e 1f 08 e8 63 3a c0 5e 5e 20 07 e8 5b 3a c0 5e 5e 21 06 e8 53 3a c0 5e 5e 22 05 e8 4b 3a c0 5e 5e 23 04 e8 43 3a c0 5e 5e 24 03 e8 3b 3a c0 5e 5e 25 02 e8 33 3a c0 5e 5e 26 01 e8 2b 3a c0 5e 5e 27 00 00 04 b1 c8 f7 7f 00 00 e8 1b 3a c0 5e 5e 00 00 40 07 b1 c8 f7 7f 00 00 e8 0b 3a c0 5e 5e 00 00 a0 07 b1 c8 f7 7f 00 00 e8 fb 39 c0 5e 5e 00 00 00 08 b1 c8 f7 7f 00 00 e8 eb 39 c0 5e 5e 00 00 60 08 b1 c8 f7 7f 00 00 e8 db 39 c0 5e 5e 00 00 c0 08 b1 c8 f7 7f 00 00 e8 cb 39 c0 5e 5e 00 27 e8 c3 39 c0 5e 5e 01 26 e8 bb 39 c0 5e 5e 02 25 e8 b3 39 c0 5e 5e 03 24 e8 ab 39 c0 5e 5e 04 23 e8 a3 39 c0 5e 5e 05 22 e8 9b 39 c0 5e 5e 06 21 e8 93 39 c0 5e 5e 07 20 e8 8b 39 c0 5e 5e 08 1f e8 83 39 c0 5e 5e 09 1e e8 7b 39 c0 5e 5e 0a 1d e8 73 39 c0 5e 5e 0b 1c e8 6b 39 c0 5e 5e 0c 1b e8 63 39 c0 5e 5e 0d 1a e8 5b 39 c0 5e 5e 0e 19 e8 53 39 c0 5e 5e 0f 18 e8 4b 39 c0 5e 5e 10 17 e8 43 39 c0 5e 5e 11 16 e8 3b 39 c0 5e 5e 12 15 e8 33 39 c0 5e 5e 13 14 e8 2b 39 c0 5e 5e 14 13 e8 23 39 c0 5e 5e 15 12 e8 1b 39 c0 5e 5e 16 11 e8 13 39 c0 5e 5e 17 10 e8 0b 39 c0 5e 5e 18 0f e8 03 39 c0 5e 5e 19 0e e8 fb 38 c0 5e 5e 1a 0d e8 f3 38 c0 5e 5e 1b 0c e8 eb 38 c0 5e 5e 1c 0b e8 e3 38 c0 5e 5e 1d 0a e8 db 38 c0 5e 5e 1e 09 e8 d3 38 c0 5e 5e 1f 08 e8 cb 38 c0 5e 5e 20 07 e8 c3 38 c0 5e 5e 21 06 e8 bb 38 c0 5e 5e 22 05 e8 b3 38 c0 5e 5e 23 04 e8 ab 38 c0 5e 5e 24 03 e8 a3 38 c0 5e 5e 25 02 e8 9b 38 c0 5e 5e 26 01 e8 93 38 c0 5e 5e 27 00 20 09 b1 c8 f7 7f 00 00 e8 83 38 c0 5e 5e 00 00 60 0c b1 c8 f7 7f 00 00 e8 73 38 c0 5e 5e 00 00 c0 0c b1 c8 f7 7f 00 00 e8 63 38 c0 5e 5e 00 00 20 0d b1 c8 f7 7f 00 00 e8 53 38 c0 5e 5e 00 00 80 0d b1 c8 f7 7f 00 00 e8 43 38 c0 5e 5e 00 00 e0 0d b1 c8 f7 7f 00 00 e8 33 38 c0 5e 5e 00 00 80 11 b1 c8 f7 7f 00 00 e8 23 38 c0 5e 5e 00 00 e0 11 b1 c8 f7 7f 00 00 e8 13 38 c0 5e 5e 00 00 40 12 b1 c8 f7 7f 00 00 e8 03 38 c0 5e 5e 00 00 a0 12 b1 c8 f7 7f 00 00 e8 f3 37 c0 5e 5e 00 00 00 13 b1 c8 f7 7f 00 00 e8 e3 37 c0 5e 5e 00 00 a0 16 b1 c8 f7 7f 00 00 e8 d3 37 c0 5e 5e 00 00 00 17 b1 c8 f7 7f 00 00 e8 c3 37 c0 5e 5e 00 00 60 17 b1 c8 f7 7f 00 00 e8 b3 37 c0 5e 5e 00 00 c0 17 b1 c8 f7 7f 00 00 a0 c9 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b6 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
44        | 7ff7c8661ea0h   | 35      | hex://logix/BitVectorOps?rnot#rnot_g[8u]()                                                                    | BitVector<byte> rnot<byte>(BitVector<byte> x, BitVector<byte> y)                                              | 0f 1f 44 00 00 89 4c 24 08 0f b6 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
45        | 7ff7c8661ed0h   | 35      | hex://logix/BitVectorOps?rnot#rnot_g[16u]()                                                                   | BitVector<ushort> rnot<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                      | 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 f7 d0 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
46        | 7ff7c8661f00h   | 67      | hex://logix/BitVectorOps?rnot#rnot_g[32u]()                                                                   | BitVector<uint> rnot<uint>(BitVector<uint> x, BitVector<uint> y)                                              | 0f 1f 44 00 00 89 4c 24 08 8b c2 f7 d0 c3 00 00 19 00 00 00 40 00 00 00 d8 ca af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 48 f7 d0 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
47        | 7ff7c8661f20h   | 35      | hex://logix/BitVectorOps?rnot#rnot_g[64u]()                                                                   | BitVector<ulong> rnot<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                          | 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 48 f7 d0 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
48        | 7ff7c8661f50h   | 39      | hex://logix/BitVectorOps?impl#impl_g[8u]()                                                                    | BitVector<byte> impl<byte>(BitVector<byte> x, BitVector<byte> y)                                              | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 f7 d2 0b c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
49        | 7ff7c8661f80h   | 39      | hex://logix/BitVectorOps?impl#impl_g[16u]()                                                                   | BitVector<ushort> impl<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                      | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 f7 d2 0b c2 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
50        | 7ff7c8661fb0h   | 103     | hex://logix/BitVectorOps?impl#impl_g[32u]()                                                                   | BitVector<uint> impl<uint>(BitVector<uint> x, BitVector<uint> y)                                              | 0f 1f 44 00 00 8b c2 f7 d0 0b c1 c3 19 00 00 00 40 00 00 00 00 00 00 00 20 cd af c8 f7 7f 00 00 0f 1f 44 00 00 48 8b c2 48 f7 d0 48 0b c1 c3 00 19 00 00 00 40 00 00 00 30 ce af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 c4 e2 78 f2 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
51        | 7ff7c8661fd0h   | 71      | hex://logix/BitVectorOps?impl#impl_g[64u]()                                                                   | BitVector<ulong> impl<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                          | 0f 1f 44 00 00 48 8b c2 48 f7 d0 48 0b c1 c3 00 19 00 00 00 40 00 00 00 30 ce af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 c4 e2 78 f2 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
52        | 7ff7c8661ff0h   | 39      | hex://logix/BitVectorOps?nonimpl#nonimpl_g[8u]()                                                              | BitVector<byte> nonimpl<byte>(BitVector<byte> x, BitVector<byte> y)                                           | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 c4 e2 78 f2 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
53        | 7ff7c8662020h   | 39      | hex://logix/BitVectorOps?nonimpl#nonimpl_g[16u]()                                                             | BitVector<ushort> nonimpl<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                   | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 c4 e2 78 f2 c2 0f b7 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
54        | 7ff7c8662050h   | 439     | hex://logix/BitVectorOps?nonimpl#nonimpl_g[32u]()                                                             | BitVector<uint> nonimpl<uint>(BitVector<uint> x, BitVector<uint> y)                                           | 0f 1f 44 00 00 c4 e2 70 f2 c2 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 68 cf af c8 f7 7f 00 00 0f 1f 44 00 00 c4 e2 f0 f2 c2 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 ab 35 c0 5e 5e 00 27 e8 a3 35 c0 5e 5e 01 26 e8 9b 35 c0 5e 5e 02 25 e8 93 35 c0 5e 5e 03 24 e8 8b 35 c0 5e 5e 04 23 e8 83 35 c0 5e 5e 05 22 e8 7b 35 c0 5e 5e 06 21 e8 73 35 c0 5e 5e 07 20 e8 6b 35 c0 5e 5e 08 1f e8 63 35 c0 5e 5e 09 1e e8 5b 35 c0 5e 5e 0a 1d e8 53 35 c0 5e 5e 0b 1c e8 4b 35 c0 5e 5e 0c 1b e8 43 35 c0 5e 5e 0d 1a e8 3b 35 c0 5e 5e 0e 19 e8 33 35 c0 5e 5e 0f 18 e8 2b 35 c0 5e 5e 10 17 e8 23 35 c0 5e 5e 11 16 e8 1b 35 c0 5e 5e 12 15 e8 13 35 c0 5e 5e 13 14 e8 0b 35 c0 5e 5e 14 13 e8 03 35 c0 5e 5e 15 12 e8 fb 34 c0 5e 5e 16 11 e8 f3 34 c0 5e 5e 17 10 e8 eb 34 c0 5e 5e 18 0f e8 e3 34 c0 5e 5e 19 0e e8 db 34 c0 5e 5e 1a 0d e8 d3 34 c0 5e 5e 1b 0c e8 cb 34 c0 5e 5e 1c 0b e8 c3 34 c0 5e 5e 1d 0a e8 bb 34 c0 5e 5e 1e 09 e8 b3 34 c0 5e 5e 1f 08 e8 ab 34 c0 5e 5e 20 07 e8 a3 34 c0 5e 5e 21 06 e8 9b 34 c0 5e 5e 22 05 e8 93 34 c0 5e 5e 23 04 e8 8b 34 c0 5e 5e 24 03 e8 83 34 c0 5e 5e 25 02 e8 7b 34 c0 5e 5e 26 01 e8 73 34 c0 5e 5e 27 00 40 0e b1 c8 f7 7f 00 00 78 d0 af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 f7 d0 0b c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
55        | 7ff7c8662070h   | 407     | hex://logix/BitVectorOps?nonimpl#nonimpl_g[64u]()                                                             | BitVector<ulong> nonimpl<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                       | 0f 1f 44 00 00 c4 e2 f0 f2 c2 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 ab 35 c0 5e 5e 00 27 e8 a3 35 c0 5e 5e 01 26 e8 9b 35 c0 5e 5e 02 25 e8 93 35 c0 5e 5e 03 24 e8 8b 35 c0 5e 5e 04 23 e8 83 35 c0 5e 5e 05 22 e8 7b 35 c0 5e 5e 06 21 e8 73 35 c0 5e 5e 07 20 e8 6b 35 c0 5e 5e 08 1f e8 63 35 c0 5e 5e 09 1e e8 5b 35 c0 5e 5e 0a 1d e8 53 35 c0 5e 5e 0b 1c e8 4b 35 c0 5e 5e 0c 1b e8 43 35 c0 5e 5e 0d 1a e8 3b 35 c0 5e 5e 0e 19 e8 33 35 c0 5e 5e 0f 18 e8 2b 35 c0 5e 5e 10 17 e8 23 35 c0 5e 5e 11 16 e8 1b 35 c0 5e 5e 12 15 e8 13 35 c0 5e 5e 13 14 e8 0b 35 c0 5e 5e 14 13 e8 03 35 c0 5e 5e 15 12 e8 fb 34 c0 5e 5e 16 11 e8 f3 34 c0 5e 5e 17 10 e8 eb 34 c0 5e 5e 18 0f e8 e3 34 c0 5e 5e 19 0e e8 db 34 c0 5e 5e 1a 0d e8 d3 34 c0 5e 5e 1b 0c e8 cb 34 c0 5e 5e 1c 0b e8 c3 34 c0 5e 5e 1d 0a e8 bb 34 c0 5e 5e 1e 09 e8 b3 34 c0 5e 5e 1f 08 e8 ab 34 c0 5e 5e 20 07 e8 a3 34 c0 5e 5e 21 06 e8 9b 34 c0 5e 5e 22 05 e8 93 34 c0 5e 5e 23 04 e8 8b 34 c0 5e 5e 24 03 e8 83 34 c0 5e 5e 25 02 e8 7b 34 c0 5e 5e 26 01 e8 73 34 c0 5e 5e 27 00 40 0e b1 c8 f7 7f 00 00 78 d0 af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 f7 d0 0b c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
56        | 7ff7c86621e0h   | 39      | hex://logix/BitVectorOps?cimpl#cimpl_g[8u]()                                                                  | BitVector<byte> cimpl<byte>(BitVector<byte> x, BitVector<byte> y)                                             | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 f7 d0 0b c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
57        | 7ff7c8662210h   | 39      | hex://logix/BitVectorOps?cimpl#cimpl_g[16u]()                                                                 | BitVector<ushort> cimpl<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                     | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 f7 d0 0b c2 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
58        | 7ff7c8662240h   | 439     | hex://logix/BitVectorOps?cimpl#cimpl_g[32u]()                                                                 | BitVector<uint> cimpl<uint>(BitVector<uint> x, BitVector<uint> y)                                             | 0f 1f 44 00 00 8b c1 f7 d0 0b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 b0 d1 af c8 f7 7f 00 00 0f 1f 44 00 00 48 8b c1 48 f7 d0 48 0b c2 c3 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 bb 33 c0 5e 5e 00 27 e8 b3 33 c0 5e 5e 01 26 e8 ab 33 c0 5e 5e 02 25 e8 a3 33 c0 5e 5e 03 24 e8 9b 33 c0 5e 5e 04 23 e8 93 33 c0 5e 5e 05 22 e8 8b 33 c0 5e 5e 06 21 e8 83 33 c0 5e 5e 07 20 e8 7b 33 c0 5e 5e 08 1f e8 73 33 c0 5e 5e 09 1e e8 6b 33 c0 5e 5e 0a 1d e8 63 33 c0 5e 5e 0b 1c e8 5b 33 c0 5e 5e 0c 1b e8 53 33 c0 5e 5e 0d 1a e8 4b 33 c0 5e 5e 0e 19 e8 43 33 c0 5e 5e 0f 18 e8 3b 33 c0 5e 5e 10 17 e8 33 33 c0 5e 5e 11 16 e8 2b 33 c0 5e 5e 12 15 e8 23 33 c0 5e 5e 13 14 e8 1b 33 c0 5e 5e 14 13 e8 13 33 c0 5e 5e 15 12 e8 0b 33 c0 5e 5e 16 11 e8 03 33 c0 5e 5e 17 10 e8 fb 32 c0 5e 5e 18 0f e8 f3 32 c0 5e 5e 19 0e e8 eb 32 c0 5e 5e 1a 0d e8 e3 32 c0 5e 5e 1b 0c e8 db 32 c0 5e 5e 1c 0b e8 d3 32 c0 5e 5e 1d 0a e8 cb 32 c0 5e 5e 1e 09 e8 c3 32 c0 5e 5e 1f 08 e8 bb 32 c0 5e 5e 20 07 e8 b3 32 c0 5e 5e 21 06 e8 ab 32 c0 5e 5e 22 05 e8 a3 32 c0 5e 5e 23 04 e8 9b 32 c0 5e 5e 24 03 e8 93 32 c0 5e 5e 25 02 e8 8b 32 c0 5e 5e 26 01 e8 83 32 c0 5e 5e 27 00 60 13 b1 c8 f7 7f 00 00 c0 d2 af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 c4 e2 68 f2 c0 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
59        | 7ff7c8662260h   | 407     | hex://logix/BitVectorOps?cimpl#cimpl_g[64u]()                                                                 | BitVector<ulong> cimpl<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                         | 0f 1f 44 00 00 48 8b c1 48 f7 d0 48 0b c2 c3 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 bb 33 c0 5e 5e 00 27 e8 b3 33 c0 5e 5e 01 26 e8 ab 33 c0 5e 5e 02 25 e8 a3 33 c0 5e 5e 03 24 e8 9b 33 c0 5e 5e 04 23 e8 93 33 c0 5e 5e 05 22 e8 8b 33 c0 5e 5e 06 21 e8 83 33 c0 5e 5e 07 20 e8 7b 33 c0 5e 5e 08 1f e8 73 33 c0 5e 5e 09 1e e8 6b 33 c0 5e 5e 0a 1d e8 63 33 c0 5e 5e 0b 1c e8 5b 33 c0 5e 5e 0c 1b e8 53 33 c0 5e 5e 0d 1a e8 4b 33 c0 5e 5e 0e 19 e8 43 33 c0 5e 5e 0f 18 e8 3b 33 c0 5e 5e 10 17 e8 33 33 c0 5e 5e 11 16 e8 2b 33 c0 5e 5e 12 15 e8 23 33 c0 5e 5e 13 14 e8 1b 33 c0 5e 5e 14 13 e8 13 33 c0 5e 5e 15 12 e8 0b 33 c0 5e 5e 16 11 e8 03 33 c0 5e 5e 17 10 e8 fb 32 c0 5e 5e 18 0f e8 f3 32 c0 5e 5e 19 0e e8 eb 32 c0 5e 5e 1a 0d e8 e3 32 c0 5e 5e 1b 0c e8 db 32 c0 5e 5e 1c 0b e8 d3 32 c0 5e 5e 1d 0a e8 cb 32 c0 5e 5e 1e 09 e8 c3 32 c0 5e 5e 1f 08 e8 bb 32 c0 5e 5e 20 07 e8 b3 32 c0 5e 5e 21 06 e8 ab 32 c0 5e 5e 22 05 e8 a3 32 c0 5e 5e 23 04 e8 9b 32 c0 5e 5e 24 03 e8 93 32 c0 5e 5e 25 02 e8 8b 32 c0 5e 5e 26 01 e8 83 32 c0 5e 5e 27 00 60 13 b1 c8 f7 7f 00 00 c0 d2 af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 c4 e2 68 f2 c0 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
60        | 7ff7c86623d0h   | 39      | hex://logix/BitVectorOps?cnonimpl#cnonimpl_g[8u]()                                                            | BitVector<byte> cnonimpl<byte>(BitVector<byte> x, BitVector<byte> y)                                          | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 c4 e2 68 f2 c0 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
61        | 7ff7c8662400h   | 39      | hex://logix/BitVectorOps?cnonimpl#cnonimpl_g[16u]()                                                           | BitVector<ushort> cnonimpl<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                  | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 c4 e2 68 f2 c0 0f b7 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
62        | 7ff7c8662430h   | 464     | hex://logix/BitVectorOps?cnonimpl#cnonimpl_g[32u]()                                                           | BitVector<uint> cnonimpl<uint>(BitVector<uint> x, BitVector<uint> y)                                          | 0f 1f 44 00 00 c4 e2 68 f2 c1 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 eb 31 c0 5e 5e 00 00 20 18 b1 c8 f7 7f 00 00 e8 db 31 c0 5e 5e 00 27 e8 d3 31 c0 5e 5e 01 26 e8 cb 31 c0 5e 5e 02 25 e8 c3 31 c0 5e 5e 03 24 e8 bb 31 c0 5e 5e 04 23 e8 b3 31 c0 5e 5e 05 22 e8 ab 31 c0 5e 5e 06 21 e8 a3 31 c0 5e 5e 07 20 e8 9b 31 c0 5e 5e 08 1f e8 93 31 c0 5e 5e 09 1e e8 8b 31 c0 5e 5e 0a 1d e8 83 31 c0 5e 5e 0b 1c e8 7b 31 c0 5e 5e 0c 1b e8 73 31 c0 5e 5e 0d 1a e8 6b 31 c0 5e 5e 0e 19 e8 63 31 c0 5e 5e 0f 18 e8 5b 31 c0 5e 5e 10 17 e8 53 31 c0 5e 5e 11 16 e8 4b 31 c0 5e 5e 12 15 e8 43 31 c0 5e 5e 13 14 e8 3b 31 c0 5e 5e 14 13 e8 33 31 c0 5e 5e 15 12 e8 2b 31 c0 5e 5e 16 11 e8 23 31 c0 5e 5e 17 10 e8 1b 31 c0 5e 5e 18 0f e8 13 31 c0 5e 5e 19 0e e8 0b 31 c0 5e 5e 1a 0d e8 03 31 c0 5e 5e 1b 0c e8 fb 30 c0 5e 5e 1c 0b e8 f3 30 c0 5e 5e 1d 0a e8 eb 30 c0 5e 5e 1e 09 e8 e3 30 c0 5e 5e 1f 08 e8 db 30 c0 5e 5e 20 07 e8 d3 30 c0 5e 5e 21 06 e8 cb 30 c0 5e 5e 22 05 e8 c3 30 c0 5e 5e 23 04 e8 bb 30 c0 5e 5e 24 03 e8 b3 30 c0 5e 5e 25 02 e8 ab 30 c0 5e 5e 26 01 e8 a3 30 c0 5e 5e 27 00 80 18 b1 c8 f7 7f 00 00 e8 93 30 c0 5e 5e 00 00 c0 1b b1 c8 f7 7f 00 00 e8 83 30 c0 5e 5e 00 00 20 1c b1 c8 f7 7f 00 00 e8 73 30 c0 5e 5e 00 00 80 1c b1 c8 f7 7f 00 00 e8 63 30 c0 5e 5e 00 00 e0 1c b1 c8 f7 7f 00 00 e8 53 30 c0 5e 5e 00 00 40 1d b1 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
63        | 7ff7c8662860h   | 83      | hex://logix/BitVectorOps?cnonimpl#cnonimpl_g[64u]()                                                           | BitVector<ulong> cnonimpl<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                      | 0f 1f 44 00 00 c4 e2 e8 f2 c1 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 08 d5 af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 41 0f b6 c8 0f b6 c0 0f b6 d2 23 d0 c4 e2 78 f2 c1 0b c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
64        | 7ff7c8662880h   | 51      | hex://logix/BitVectorOps?select#select_g[8u]()                                                                | BitVector<byte> select<byte>(BitVector<byte> x, BitVector<byte> y, BitVector<byte> z)                         | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 41 0f b6 c8 0f b6 c0 0f b6 d2 23 d0 c4 e2 78 f2 c1 0b c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
65        | 7ff7c86628c0h   | 51      | hex://logix/BitVectorOps?select#select_g[16u]()                                                               | BitVector<ushort> select<ushort>(BitVector<ushort> x, BitVector<ushort> y, BitVector<ushort> z)               | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 41 0f b7 c8 0f b7 c0 0f b7 d2 23 d0 c4 e2 78 f2 c1 0b c2 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
66        | 7ff7c8662900h   | 67      | hex://logix/BitVectorOps?select#select_g[32u]()                                                               | BitVector<uint> select<uint>(BitVector<uint> x, BitVector<uint> y, BitVector<uint> z)                         | 0f 1f 44 00 00 23 d1 c4 c2 70 f2 c0 0b c2 c3 00 19 00 00 00 40 00 00 00 58 d6 af c8 f7 7f 00 00 0f 1f 44 00 00 48 23 d1 c4 c2 f0 f2 c0 48 0b c2 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
67        | 7ff7c8662920h   | 35      | hex://logix/BitVectorOps?select#select_g[64u]()                                                               | BitVector<ulong> select<ulong>(BitVector<ulong> x, BitVector<ulong> y, BitVector<ulong> z)                    | 0f 1f 44 00 00 48 23 d1 c4 c2 f0 f2 c0 48 0b c2 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
