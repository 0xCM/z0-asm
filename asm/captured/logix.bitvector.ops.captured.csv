Sequence  | Address         | Length  | Uri                                                                                                           | OpSig                                                                                                         | Data
0         | 7ff7c8662670h   | 35      | hex://logix/BitVectorOps?true#true_g[8u]()                                                                    | BitVector<byte> true<byte>(BitVector<byte> x, BitVector<byte> y)                                              | 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 b8 ff 00 00 00 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
1         | 7ff7c86626a0h   | 35      | hex://logix/BitVectorOps?true#true_g[16u]()                                                                   | BitVector<ushort> true<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                      | 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 b8 ff ff 00 00 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
2         | 7ff7c86626d0h   | 35      | hex://logix/BitVectorOps?true#true_g[32u]()                                                                   | BitVector<uint> true<uint>(BitVector<uint> x, BitVector<uint> y)                                              | 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 b8 ff ff ff ff c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
3         | 7ff7c8662700h   | 179     | hex://logix/BitVectorOps?true#true_g[64u]()                                                                   | BitVector<ulong> true<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                          | 0f 1f 44 00 00 48 89 4c 24 08 48 89 54 24 10 48 b8 ff ff ff ff ff ff ff ff c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 20 d5 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 88 d5 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 f0 d5 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 58 d6 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 89 54 24 10 33 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
4         | 7ff7c8662730h   | 131     | hex://logix/BitVectorOps?false#false_g[8u]()                                                                  | BitVector<byte> false<byte>(BitVector<byte> x, BitVector<byte> y)                                             | 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 88 d5 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 f0 d5 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 58 d6 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 89 54 24 10 33 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
5         | 7ff7c8662750h   | 99      | hex://logix/BitVectorOps?false#false_g[16u]()                                                                 | BitVector<ushort> false<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                     | 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 f0 d5 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 58 d6 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 89 54 24 10 33 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
6         | 7ff7c8662770h   | 67      | hex://logix/BitVectorOps?false#false_g[32u]()                                                                 | BitVector<uint> false<uint>(BitVector<uint> x, BitVector<uint> y)                                             | 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 58 d6 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 89 54 24 10 33 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
7         | 7ff7c8662790h   | 35      | hex://logix/BitVectorOps?false#false_g[64u]()                                                                 | BitVector<ulong> false<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                         | 0f 1f 44 00 00 48 89 4c 24 08 48 89 54 24 10 33 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
8         | 7ff7c86627c0h   | 35      | hex://logix/BitVectorOps?and#and_g[8u]()                                                                      | BitVector<byte> and<byte>(BitVector<byte> x, BitVector<byte> y)                                               | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 23 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
9         | 7ff7c86627f0h   | 35      | hex://logix/BitVectorOps?and#and_g[16u]()                                                                     | BitVector<ushort> and<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                       | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 23 c2 0f b7 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
10        | 7ff7c8662820h   | 439     | hex://logix/BitVectorOps?and#and_g[32u]()                                                                     | BitVector<uint> and<uint>(BitVector<uint> x, BitVector<uint> y)                                               | 0f 1f 44 00 00 23 d1 8b c2 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 a0 d8 af c8 f7 7f 00 00 0f 1f 44 00 00 48 23 d1 48 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 db 2d c0 5e 5e 00 27 e8 d3 2d c0 5e 5e 01 26 e8 cb 2d c0 5e 5e 02 25 e8 c3 2d c0 5e 5e 03 24 e8 bb 2d c0 5e 5e 04 23 e8 b3 2d c0 5e 5e 05 22 e8 ab 2d c0 5e 5e 06 21 e8 a3 2d c0 5e 5e 07 20 e8 9b 2d c0 5e 5e 08 1f e8 93 2d c0 5e 5e 09 1e e8 8b 2d c0 5e 5e 0a 1d e8 83 2d c0 5e 5e 0b 1c e8 7b 2d c0 5e 5e 0c 1b e8 73 2d c0 5e 5e 0d 1a e8 6b 2d c0 5e 5e 0e 19 e8 63 2d c0 5e 5e 0f 18 e8 5b 2d c0 5e 5e 10 17 e8 53 2d c0 5e 5e 11 16 e8 4b 2d c0 5e 5e 12 15 e8 43 2d c0 5e 5e 13 14 e8 3b 2d c0 5e 5e 14 13 e8 33 2d c0 5e 5e 15 12 e8 2b 2d c0 5e 5e 16 11 e8 23 2d c0 5e 5e 17 10 e8 1b 2d c0 5e 5e 18 0f e8 13 2d c0 5e 5e 19 0e e8 0b 2d c0 5e 5e 1a 0d e8 03 2d c0 5e 5e 1b 0c e8 fb 2c c0 5e 5e 1c 0b e8 f3 2c c0 5e 5e 1d 0a e8 eb 2c c0 5e 5e 1e 09 e8 e3 2c c0 5e 5e 1f 08 e8 db 2c c0 5e 5e 20 07 e8 d3 2c c0 5e 5e 21 06 e8 cb 2c c0 5e 5e 22 05 e8 c3 2c c0 5e 5e 23 04 e8 bb 2c c0 5e 5e 24 03 e8 b3 2c c0 5e 5e 25 02 e8 ab 2c c0 5e 5e 26 01 e8 a3 2c c0 5e 5e 27 00 60 05 b1 c8 f7 7f 00 00 b0 d9 af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 23 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
11        | 7ff7c8662840h   | 407     | hex://logix/BitVectorOps?and#and_g[64u]()                                                                     | BitVector<ulong> and<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                           | 0f 1f 44 00 00 48 23 d1 48 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 db 2d c0 5e 5e 00 27 e8 d3 2d c0 5e 5e 01 26 e8 cb 2d c0 5e 5e 02 25 e8 c3 2d c0 5e 5e 03 24 e8 bb 2d c0 5e 5e 04 23 e8 b3 2d c0 5e 5e 05 22 e8 ab 2d c0 5e 5e 06 21 e8 a3 2d c0 5e 5e 07 20 e8 9b 2d c0 5e 5e 08 1f e8 93 2d c0 5e 5e 09 1e e8 8b 2d c0 5e 5e 0a 1d e8 83 2d c0 5e 5e 0b 1c e8 7b 2d c0 5e 5e 0c 1b e8 73 2d c0 5e 5e 0d 1a e8 6b 2d c0 5e 5e 0e 19 e8 63 2d c0 5e 5e 0f 18 e8 5b 2d c0 5e 5e 10 17 e8 53 2d c0 5e 5e 11 16 e8 4b 2d c0 5e 5e 12 15 e8 43 2d c0 5e 5e 13 14 e8 3b 2d c0 5e 5e 14 13 e8 33 2d c0 5e 5e 15 12 e8 2b 2d c0 5e 5e 16 11 e8 23 2d c0 5e 5e 17 10 e8 1b 2d c0 5e 5e 18 0f e8 13 2d c0 5e 5e 19 0e e8 0b 2d c0 5e 5e 1a 0d e8 03 2d c0 5e 5e 1b 0c e8 fb 2c c0 5e 5e 1c 0b e8 f3 2c c0 5e 5e 1d 0a e8 eb 2c c0 5e 5e 1e 09 e8 e3 2c c0 5e 5e 1f 08 e8 db 2c c0 5e 5e 20 07 e8 d3 2c c0 5e 5e 21 06 e8 cb 2c c0 5e 5e 22 05 e8 c3 2c c0 5e 5e 23 04 e8 bb 2c c0 5e 5e 24 03 e8 b3 2c c0 5e 5e 25 02 e8 ab 2c c0 5e 5e 26 01 e8 a3 2c c0 5e 5e 27 00 60 05 b1 c8 f7 7f 00 00 b0 d9 af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 23 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
12        | 7ff7c86629b0h   | 39      | hex://logix/BitVectorOps?nand#nand_g[8u]()                                                                    | BitVector<byte> nand<byte>(BitVector<byte> x, BitVector<byte> y)                                              | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 23 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
13        | 7ff7c86629e0h   | 39      | hex://logix/BitVectorOps?nand#nand_g[16u]()                                                                   | BitVector<ushort> nand<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                      | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 23 c2 f7 d0 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
14        | 7ff7c8662a10h   | 1768    | hex://logix/BitVectorOps?nand#nand_g[32u]()                                                                   | BitVector<uint> nand<uint>(BitVector<uint> x, BitVector<uint> y)                                              | 0f 1f 44 00 00 23 d1 8b c2 f7 d0 c3 19 00 00 00 40 00 00 00 00 00 00 00 e8 da af c8 f7 7f 00 00 0f 1f 44 00 00 48 23 d1 48 8b c2 48 f7 d0 c3 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 eb 2b c0 5e 5e 00 27 e8 e3 2b c0 5e 5e 01 26 e8 db 2b c0 5e 5e 02 25 e8 d3 2b c0 5e 5e 03 24 e8 cb 2b c0 5e 5e 04 23 e8 c3 2b c0 5e 5e 05 22 e8 bb 2b c0 5e 5e 06 21 e8 b3 2b c0 5e 5e 07 20 e8 ab 2b c0 5e 5e 08 1f e8 a3 2b c0 5e 5e 09 1e e8 9b 2b c0 5e 5e 0a 1d e8 93 2b c0 5e 5e 0b 1c e8 8b 2b c0 5e 5e 0c 1b e8 83 2b c0 5e 5e 0d 1a e8 7b 2b c0 5e 5e 0e 19 e8 73 2b c0 5e 5e 0f 18 e8 6b 2b c0 5e 5e 10 17 e8 63 2b c0 5e 5e 11 16 e8 5b 2b c0 5e 5e 12 15 e8 53 2b c0 5e 5e 13 14 e8 4b 2b c0 5e 5e 14 13 e8 43 2b c0 5e 5e 15 12 e8 3b 2b c0 5e 5e 16 11 e8 33 2b c0 5e 5e 17 10 e8 2b 2b c0 5e 5e 18 0f e8 23 2b c0 5e 5e 19 0e e8 1b 2b c0 5e 5e 1a 0d e8 13 2b c0 5e 5e 1b 0c e8 0b 2b c0 5e 5e 1c 0b e8 03 2b c0 5e 5e 1d 0a e8 fb 2a c0 5e 5e 1e 09 e8 f3 2a c0 5e 5e 1f 08 e8 eb 2a c0 5e 5e 20 07 e8 e3 2a c0 5e 5e 21 06 e8 db 2a c0 5e 5e 22 05 e8 d3 2a c0 5e 5e 23 04 e8 cb 2a c0 5e 5e 24 03 e8 c3 2a c0 5e 5e 25 02 e8 bb 2a c0 5e 5e 26 01 e8 b3 2a c0 5e 5e 27 00 80 0a b1 c8 f7 7f 00 00 02 00 00 00 00 00 00 00 e8 9b 2a c0 5e 5e 00 27 e8 93 2a c0 5e 5e 01 26 e8 8b 2a c0 5e 5e 02 25 e8 83 2a c0 5e 5e 03 24 e8 7b 2a c0 5e 5e 04 23 e8 73 2a c0 5e 5e 05 22 e8 6b 2a c0 5e 5e 06 21 e8 63 2a c0 5e 5e 07 20 e8 5b 2a c0 5e 5e 08 1f e8 53 2a c0 5e 5e 09 1e e8 4b 2a c0 5e 5e 0a 1d e8 43 2a c0 5e 5e 0b 1c e8 3b 2a c0 5e 5e 0c 1b e8 33 2a c0 5e 5e 0d 1a e8 2b 2a c0 5e 5e 0e 19 e8 23 2a c0 5e 5e 0f 18 e8 1b 2a c0 5e 5e 10 17 e8 13 2a c0 5e 5e 11 16 e8 0b 2a c0 5e 5e 12 15 e8 03 2a c0 5e 5e 13 14 e8 fb 29 c0 5e 5e 14 13 e8 f3 29 c0 5e 5e 15 12 e8 eb 29 c0 5e 5e 16 11 e8 e3 29 c0 5e 5e 17 10 e8 db 29 c0 5e 5e 18 0f e8 d3 29 c0 5e 5e 19 0e e8 cb 29 c0 5e 5e 1a 0d e8 c3 29 c0 5e 5e 1b 0c e8 bb 29 c0 5e 5e 1c 0b e8 b3 29 c0 5e 5e 1d 0a e8 ab 29 c0 5e 5e 1e 09 e8 a3 29 c0 5e 5e 1f 08 e8 9b 29 c0 5e 5e 20 07 e8 93 29 c0 5e 5e 21 06 e8 8b 29 c0 5e 5e 22 05 e8 83 29 c0 5e 5e 23 04 e8 7b 29 c0 5e 5e 24 03 e8 73 29 c0 5e 5e 25 02 e8 6b 29 c0 5e 5e 26 01 e8 63 29 c0 5e 5e 27 00 e0 0e b1 c8 f7 7f 00 00 02 00 00 00 00 00 00 00 e8 4b 29 c0 5e 5e 00 00 20 12 b1 c8 f7 7f 00 00 e8 3b 29 c0 5e 5e 00 00 80 12 b1 c8 f7 7f 00 00 e8 2b 29 c0 5e 5e 00 00 e0 12 b1 c8 f7 7f 00 00 e8 1b 29 c0 5e 5e 00 00 40 13 b1 c8 f7 7f 00 00 e8 0b 29 c0 5e 5e 00 00 a0 13 b1 c8 f7 7f 00 00 e8 fb 28 c0 5e 5e 00 00 00 14 b1 c8 f7 7f 00 00 e8 eb 28 c0 5e 5e 00 00 60 14 b1 c8 f7 7f 00 00 e8 db 28 c0 5e 5e 00 27 e8 d3 28 c0 5e 5e 01 26 e8 cb 28 c0 5e 5e 02 25 e8 c3 28 c0 5e 5e 03 24 e8 bb 28 c0 5e 5e 04 23 e8 b3 28 c0 5e 5e 05 22 e8 ab 28 c0 5e 5e 06 21 e8 a3 28 c0 5e 5e 07 20 e8 9b 28 c0 5e 5e 08 1f e8 93 28 c0 5e 5e 09 1e e8 8b 28 c0 5e 5e 0a 1d e8 83 28 c0 5e 5e 0b 1c e8 7b 28 c0 5e 5e 0c 1b e8 73 28 c0 5e 5e 0d 1a e8 6b 28 c0 5e 5e 0e 19 e8 63 28 c0 5e 5e 0f 18 e8 5b 28 c0 5e 5e 10 17 e8 53 28 c0 5e 5e 11 16 e8 4b 28 c0 5e 5e 12 15 e8 43 28 c0 5e 5e 13 14 e8 3b 28 c0 5e 5e 14 13 e8 33 28 c0 5e 5e 15 12 e8 2b 28 c0 5e 5e 16 11 e8 23 28 c0 5e 5e 17 10 e8 1b 28 c0 5e 5e 18 0f e8 13 28 c0 5e 5e 19 0e e8 0b 28 c0 5e 5e 1a 0d e8 03 28 c0 5e 5e 1b 0c e8 fb 27 c0 5e 5e 1c 0b e8 f3 27 c0 5e 5e 1d 0a e8 eb 27 c0 5e 5e 1e 09 e8 e3 27 c0 5e 5e 1f 08 e8 db 27 c0 5e 5e 20 07 e8 d3 27 c0 5e 5e 21 06 e8 cb 27 c0 5e 5e 22 05 e8 c3 27 c0 5e 5e 23 04 e8 bb 27 c0 5e 5e 24 03 e8 b3 27 c0 5e 5e 25 02 e8 ab 27 c0 5e 5e 26 01 e8 a3 27 c0 5e 5e 27 00 c0 14 b1 c8 f7 7f 00 00 e8 93 27 c0 5e 5e 00 00 00 18 b1 c8 f7 7f 00 00 e8 83 27 c0 5e 5e 00 00 60 18 b1 c8 f7 7f 00 00 e8 73 27 c0 5e 5e 00 00 c0 18 b1 c8 f7 7f 00 00 e8 63 27 c0 5e 5e 00 00 20 19 b1 c8 f7 7f 00 00 e8 53 27 c0 5e 5e 00 00 80 19 b1 c8 f7 7f 00 00 e8 43 27 c0 5e 5e 00 27 e8 3b 27 c0 5e 5e 01 26 e8 33 27 c0 5e 5e 02 25 e8 2b 27 c0 5e 5e 03 24 e8 23 27 c0 5e 5e 04 23 e8 1b 27 c0 5e 5e 05 22 e8 13 27 c0 5e 5e 06 21 e8 0b 27 c0 5e 5e 07 20 e8 03 27 c0 5e 5e 08 1f e8 fb 26 c0 5e 5e 09 1e e8 f3 26 c0 5e 5e 0a 1d e8 eb 26 c0 5e 5e 0b 1c e8 e3 26 c0 5e 5e 0c 1b e8 db 26 c0 5e 5e 0d 1a e8 d3 26 c0 5e 5e 0e 19 e8 cb 26 c0 5e 5e 0f 18 e8 c3 26 c0 5e 5e 10 17 e8 bb 26 c0 5e 5e 11 16 e8 b3 26 c0 5e 5e 12 15 e8 ab 26 c0 5e 5e 13 14 e8 a3 26 c0 5e 5e 14 13 e8 9b 26 c0 5e 5e 15 12 e8 93 26 c0 5e 5e 16 11 e8 8b 26 c0 5e 5e 17 10 e8 83 26 c0 5e 5e 18 0f e8 7b 26 c0 5e 5e 19 0e e8 73 26 c0 5e 5e 1a 0d e8 6b 26 c0 5e 5e 1b 0c e8 63 26 c0 5e 5e 1c 0b e8 5b 26 c0 5e 5e 1d 0a e8 53 26 c0 5e 5e 1e 09 e8 4b 26 c0 5e 5e 1f 08 e8 43 26 c0 5e 5e 20 07 e8 3b 26 c0 5e 5e 21 06 e8 33 26 c0 5e 5e 22 05 e8 2b 26 c0 5e 5e 23 04 e8 23 26 c0 5e 5e 24 03 e8 1b 26 c0 5e 5e 25 02 e8 13 26 c0 5e 5e 26 01 e8 0b 26 c0 5e 5e 27 00 e0 19 b1 c8 f7 7f 00 00 e8 fb 25 c0 5e 5e 00 00 20 1d b1 c8 f7 7f 00 00 e8 eb 25 c0 5e 5e 00 00 80 1d b1 c8 f7 7f 00 00 e8 db 25 c0 5e 5e 00 00 e0 1d b1 c8 f7 7f 00 00 e8 cb 25 c0 5e 5e 00 00 40 1e b1 c8 f7 7f 00 00 e8 bb 25 c0 5e 5e 00 00 a0 1e b1 c8 f7 7f 00 00 e8 ab 25 c0 5e 5e 00 00 40 22 b1 c8 f7 7f 00 00 e8 9b 25 c0 5e 5e 00 00 a0 22 b1 c8 f7 7f 00 00 e8 8b 25 c0 5e 5e 00 00 00 23 b1 c8 f7 7f 00 00 e8 7b 25 c0 5e 5e 00 00 60 23 b1 c8 f7 7f 00 00 e8 6b 25 c0 5e 5e 00 00 c0 23 b1 c8 f7 7f 00 00 e8 5b 25 c0 5e 5e 00 00 60 27 b1 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
15        | 7ff7c8662a30h   | 1736    | hex://logix/BitVectorOps?nand#nand_g[64u]()                                                                   | BitVector<ulong> nand<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                          | 0f 1f 44 00 00 48 23 d1 48 8b c2 48 f7 d0 c3 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 eb 2b c0 5e 5e 00 27 e8 e3 2b c0 5e 5e 01 26 e8 db 2b c0 5e 5e 02 25 e8 d3 2b c0 5e 5e 03 24 e8 cb 2b c0 5e 5e 04 23 e8 c3 2b c0 5e 5e 05 22 e8 bb 2b c0 5e 5e 06 21 e8 b3 2b c0 5e 5e 07 20 e8 ab 2b c0 5e 5e 08 1f e8 a3 2b c0 5e 5e 09 1e e8 9b 2b c0 5e 5e 0a 1d e8 93 2b c0 5e 5e 0b 1c e8 8b 2b c0 5e 5e 0c 1b e8 83 2b c0 5e 5e 0d 1a e8 7b 2b c0 5e 5e 0e 19 e8 73 2b c0 5e 5e 0f 18 e8 6b 2b c0 5e 5e 10 17 e8 63 2b c0 5e 5e 11 16 e8 5b 2b c0 5e 5e 12 15 e8 53 2b c0 5e 5e 13 14 e8 4b 2b c0 5e 5e 14 13 e8 43 2b c0 5e 5e 15 12 e8 3b 2b c0 5e 5e 16 11 e8 33 2b c0 5e 5e 17 10 e8 2b 2b c0 5e 5e 18 0f e8 23 2b c0 5e 5e 19 0e e8 1b 2b c0 5e 5e 1a 0d e8 13 2b c0 5e 5e 1b 0c e8 0b 2b c0 5e 5e 1c 0b e8 03 2b c0 5e 5e 1d 0a e8 fb 2a c0 5e 5e 1e 09 e8 f3 2a c0 5e 5e 1f 08 e8 eb 2a c0 5e 5e 20 07 e8 e3 2a c0 5e 5e 21 06 e8 db 2a c0 5e 5e 22 05 e8 d3 2a c0 5e 5e 23 04 e8 cb 2a c0 5e 5e 24 03 e8 c3 2a c0 5e 5e 25 02 e8 bb 2a c0 5e 5e 26 01 e8 b3 2a c0 5e 5e 27 00 80 0a b1 c8 f7 7f 00 00 02 00 00 00 00 00 00 00 e8 9b 2a c0 5e 5e 00 27 e8 93 2a c0 5e 5e 01 26 e8 8b 2a c0 5e 5e 02 25 e8 83 2a c0 5e 5e 03 24 e8 7b 2a c0 5e 5e 04 23 e8 73 2a c0 5e 5e 05 22 e8 6b 2a c0 5e 5e 06 21 e8 63 2a c0 5e 5e 07 20 e8 5b 2a c0 5e 5e 08 1f e8 53 2a c0 5e 5e 09 1e e8 4b 2a c0 5e 5e 0a 1d e8 43 2a c0 5e 5e 0b 1c e8 3b 2a c0 5e 5e 0c 1b e8 33 2a c0 5e 5e 0d 1a e8 2b 2a c0 5e 5e 0e 19 e8 23 2a c0 5e 5e 0f 18 e8 1b 2a c0 5e 5e 10 17 e8 13 2a c0 5e 5e 11 16 e8 0b 2a c0 5e 5e 12 15 e8 03 2a c0 5e 5e 13 14 e8 fb 29 c0 5e 5e 14 13 e8 f3 29 c0 5e 5e 15 12 e8 eb 29 c0 5e 5e 16 11 e8 e3 29 c0 5e 5e 17 10 e8 db 29 c0 5e 5e 18 0f e8 d3 29 c0 5e 5e 19 0e e8 cb 29 c0 5e 5e 1a 0d e8 c3 29 c0 5e 5e 1b 0c e8 bb 29 c0 5e 5e 1c 0b e8 b3 29 c0 5e 5e 1d 0a e8 ab 29 c0 5e 5e 1e 09 e8 a3 29 c0 5e 5e 1f 08 e8 9b 29 c0 5e 5e 20 07 e8 93 29 c0 5e 5e 21 06 e8 8b 29 c0 5e 5e 22 05 e8 83 29 c0 5e 5e 23 04 e8 7b 29 c0 5e 5e 24 03 e8 73 29 c0 5e 5e 25 02 e8 6b 29 c0 5e 5e 26 01 e8 63 29 c0 5e 5e 27 00 e0 0e b1 c8 f7 7f 00 00 02 00 00 00 00 00 00 00 e8 4b 29 c0 5e 5e 00 00 20 12 b1 c8 f7 7f 00 00 e8 3b 29 c0 5e 5e 00 00 80 12 b1 c8 f7 7f 00 00 e8 2b 29 c0 5e 5e 00 00 e0 12 b1 c8 f7 7f 00 00 e8 1b 29 c0 5e 5e 00 00 40 13 b1 c8 f7 7f 00 00 e8 0b 29 c0 5e 5e 00 00 a0 13 b1 c8 f7 7f 00 00 e8 fb 28 c0 5e 5e 00 00 00 14 b1 c8 f7 7f 00 00 e8 eb 28 c0 5e 5e 00 00 60 14 b1 c8 f7 7f 00 00 e8 db 28 c0 5e 5e 00 27 e8 d3 28 c0 5e 5e 01 26 e8 cb 28 c0 5e 5e 02 25 e8 c3 28 c0 5e 5e 03 24 e8 bb 28 c0 5e 5e 04 23 e8 b3 28 c0 5e 5e 05 22 e8 ab 28 c0 5e 5e 06 21 e8 a3 28 c0 5e 5e 07 20 e8 9b 28 c0 5e 5e 08 1f e8 93 28 c0 5e 5e 09 1e e8 8b 28 c0 5e 5e 0a 1d e8 83 28 c0 5e 5e 0b 1c e8 7b 28 c0 5e 5e 0c 1b e8 73 28 c0 5e 5e 0d 1a e8 6b 28 c0 5e 5e 0e 19 e8 63 28 c0 5e 5e 0f 18 e8 5b 28 c0 5e 5e 10 17 e8 53 28 c0 5e 5e 11 16 e8 4b 28 c0 5e 5e 12 15 e8 43 28 c0 5e 5e 13 14 e8 3b 28 c0 5e 5e 14 13 e8 33 28 c0 5e 5e 15 12 e8 2b 28 c0 5e 5e 16 11 e8 23 28 c0 5e 5e 17 10 e8 1b 28 c0 5e 5e 18 0f e8 13 28 c0 5e 5e 19 0e e8 0b 28 c0 5e 5e 1a 0d e8 03 28 c0 5e 5e 1b 0c e8 fb 27 c0 5e 5e 1c 0b e8 f3 27 c0 5e 5e 1d 0a e8 eb 27 c0 5e 5e 1e 09 e8 e3 27 c0 5e 5e 1f 08 e8 db 27 c0 5e 5e 20 07 e8 d3 27 c0 5e 5e 21 06 e8 cb 27 c0 5e 5e 22 05 e8 c3 27 c0 5e 5e 23 04 e8 bb 27 c0 5e 5e 24 03 e8 b3 27 c0 5e 5e 25 02 e8 ab 27 c0 5e 5e 26 01 e8 a3 27 c0 5e 5e 27 00 c0 14 b1 c8 f7 7f 00 00 e8 93 27 c0 5e 5e 00 00 00 18 b1 c8 f7 7f 00 00 e8 83 27 c0 5e 5e 00 00 60 18 b1 c8 f7 7f 00 00 e8 73 27 c0 5e 5e 00 00 c0 18 b1 c8 f7 7f 00 00 e8 63 27 c0 5e 5e 00 00 20 19 b1 c8 f7 7f 00 00 e8 53 27 c0 5e 5e 00 00 80 19 b1 c8 f7 7f 00 00 e8 43 27 c0 5e 5e 00 27 e8 3b 27 c0 5e 5e 01 26 e8 33 27 c0 5e 5e 02 25 e8 2b 27 c0 5e 5e 03 24 e8 23 27 c0 5e 5e 04 23 e8 1b 27 c0 5e 5e 05 22 e8 13 27 c0 5e 5e 06 21 e8 0b 27 c0 5e 5e 07 20 e8 03 27 c0 5e 5e 08 1f e8 fb 26 c0 5e 5e 09 1e e8 f3 26 c0 5e 5e 0a 1d e8 eb 26 c0 5e 5e 0b 1c e8 e3 26 c0 5e 5e 0c 1b e8 db 26 c0 5e 5e 0d 1a e8 d3 26 c0 5e 5e 0e 19 e8 cb 26 c0 5e 5e 0f 18 e8 c3 26 c0 5e 5e 10 17 e8 bb 26 c0 5e 5e 11 16 e8 b3 26 c0 5e 5e 12 15 e8 ab 26 c0 5e 5e 13 14 e8 a3 26 c0 5e 5e 14 13 e8 9b 26 c0 5e 5e 15 12 e8 93 26 c0 5e 5e 16 11 e8 8b 26 c0 5e 5e 17 10 e8 83 26 c0 5e 5e 18 0f e8 7b 26 c0 5e 5e 19 0e e8 73 26 c0 5e 5e 1a 0d e8 6b 26 c0 5e 5e 1b 0c e8 63 26 c0 5e 5e 1c 0b e8 5b 26 c0 5e 5e 1d 0a e8 53 26 c0 5e 5e 1e 09 e8 4b 26 c0 5e 5e 1f 08 e8 43 26 c0 5e 5e 20 07 e8 3b 26 c0 5e 5e 21 06 e8 33 26 c0 5e 5e 22 05 e8 2b 26 c0 5e 5e 23 04 e8 23 26 c0 5e 5e 24 03 e8 1b 26 c0 5e 5e 25 02 e8 13 26 c0 5e 5e 26 01 e8 0b 26 c0 5e 5e 27 00 e0 19 b1 c8 f7 7f 00 00 e8 fb 25 c0 5e 5e 00 00 20 1d b1 c8 f7 7f 00 00 e8 eb 25 c0 5e 5e 00 00 80 1d b1 c8 f7 7f 00 00 e8 db 25 c0 5e 5e 00 00 e0 1d b1 c8 f7 7f 00 00 e8 cb 25 c0 5e 5e 00 00 40 1e b1 c8 f7 7f 00 00 e8 bb 25 c0 5e 5e 00 00 a0 1e b1 c8 f7 7f 00 00 e8 ab 25 c0 5e 5e 00 00 40 22 b1 c8 f7 7f 00 00 e8 9b 25 c0 5e 5e 00 00 a0 22 b1 c8 f7 7f 00 00 e8 8b 25 c0 5e 5e 00 00 00 23 b1 c8 f7 7f 00 00 e8 7b 25 c0 5e 5e 00 00 60 23 b1 c8 f7 7f 00 00 e8 6b 25 c0 5e 5e 00 00 c0 23 b1 c8 f7 7f 00 00 e8 5b 25 c0 5e 5e 00 00 60 27 b1 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
16        | 7ff7c8663100h   | 35      | hex://logix/BitVectorOps?or#or_g[8u]()                                                                        | BitVector<byte> or<byte>(BitVector<byte> x, BitVector<byte> y)                                                | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 0b c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
17        | 7ff7c8663130h   | 35      | hex://logix/BitVectorOps?or#or_g[16u]()                                                                       | BitVector<ushort> or<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                        | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 0b c2 0f b7 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
18        | 7ff7c8663160h   | 103     | hex://logix/BitVectorOps?or#or_g[32u]()                                                                       | BitVector<uint> or<uint>(BitVector<uint> x, BitVector<uint> y)                                                | 0f 1f 44 00 00 0b d1 8b c2 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 38 de af c8 f7 7f 00 00 0f 1f 44 00 00 48 0b d1 48 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 48 df af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 0b c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
19        | 7ff7c8663180h   | 71      | hex://logix/BitVectorOps?or#or_g[64u]()                                                                       | BitVector<ulong> or<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                            | 0f 1f 44 00 00 48 0b d1 48 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 48 df af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 0b c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
20        | 7ff7c86631a0h   | 39      | hex://logix/BitVectorOps?nor#nor_g[8u]()                                                                      | BitVector<byte> nor<byte>(BitVector<byte> x, BitVector<byte> y)                                               | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 0b c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
21        | 7ff7c86631d0h   | 39      | hex://logix/BitVectorOps?nor#nor_g[16u]()                                                                     | BitVector<ushort> nor<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                       | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 0b c2 f7 d0 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
22        | 7ff7c8663200h   | 99      | hex://logix/BitVectorOps?nor#nor_g[32u]()                                                                     | BitVector<uint> nor<uint>(BitVector<uint> x, BitVector<uint> y)                                               | 0f 1f 44 00 00 0b d1 8b c2 f7 d0 c3 19 00 00 00 40 00 00 00 00 00 00 00 80 e0 af c8 f7 7f 00 00 0f 1f 44 00 00 48 0b d1 48 8b c2 48 f7 d0 c3 00 19 00 00 00 40 00 00 00 90 e1 af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 33 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
23        | 7ff7c8663220h   | 67      | hex://logix/BitVectorOps?nor#nor_g[64u]()                                                                     | BitVector<ulong> nor<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                           | 0f 1f 44 00 00 48 0b d1 48 8b c2 48 f7 d0 c3 00 19 00 00 00 40 00 00 00 90 e1 af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 33 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
24        | 7ff7c8663240h   | 35      | hex://logix/BitVectorOps?xor#xor_g[8u]()                                                                      | BitVector<byte> xor<byte>(BitVector<byte> x, BitVector<byte> y)                                               | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 33 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
25        | 7ff7c8663270h   | 35      | hex://logix/BitVectorOps?xor#xor_g[16u]()                                                                     | BitVector<ushort> xor<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                       | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 33 c2 0f b7 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
26        | 7ff7c86632a0h   | 439     | hex://logix/BitVectorOps?xor#xor_g[32u]()                                                                     | BitVector<uint> xor<uint>(BitVector<uint> x, BitVector<uint> y)                                               | 0f 1f 44 00 00 33 d1 8b c2 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 c8 e2 af c8 f7 7f 00 00 0f 1f 44 00 00 48 33 d1 48 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 5b 23 c0 5e 5e 00 27 e8 53 23 c0 5e 5e 01 26 e8 4b 23 c0 5e 5e 02 25 e8 43 23 c0 5e 5e 03 24 e8 3b 23 c0 5e 5e 04 23 e8 33 23 c0 5e 5e 05 22 e8 2b 23 c0 5e 5e 06 21 e8 23 23 c0 5e 5e 07 20 e8 1b 23 c0 5e 5e 08 1f e8 13 23 c0 5e 5e 09 1e e8 0b 23 c0 5e 5e 0a 1d e8 03 23 c0 5e 5e 0b 1c e8 fb 22 c0 5e 5e 0c 1b e8 f3 22 c0 5e 5e 0d 1a e8 eb 22 c0 5e 5e 0e 19 e8 e3 22 c0 5e 5e 0f 18 e8 db 22 c0 5e 5e 10 17 e8 d3 22 c0 5e 5e 11 16 e8 cb 22 c0 5e 5e 12 15 e8 c3 22 c0 5e 5e 13 14 e8 bb 22 c0 5e 5e 14 13 e8 b3 22 c0 5e 5e 15 12 e8 ab 22 c0 5e 5e 16 11 e8 a3 22 c0 5e 5e 17 10 e8 9b 22 c0 5e 5e 18 0f e8 93 22 c0 5e 5e 19 0e e8 8b 22 c0 5e 5e 1a 0d e8 83 22 c0 5e 5e 1b 0c e8 7b 22 c0 5e 5e 1c 0b e8 73 22 c0 5e 5e 1d 0a e8 6b 22 c0 5e 5e 1e 09 e8 63 22 c0 5e 5e 1f 08 e8 5b 22 c0 5e 5e 20 07 e8 53 22 c0 5e 5e 21 06 e8 4b 22 c0 5e 5e 22 05 e8 43 22 c0 5e 5e 23 04 e8 3b 22 c0 5e 5e 24 03 e8 33 22 c0 5e 5e 25 02 e8 2b 22 c0 5e 5e 26 01 e8 23 22 c0 5e 5e 27 00 00 1f b1 c8 f7 7f 00 00 d8 e3 af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 33 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
27        | 7ff7c86632c0h   | 407     | hex://logix/BitVectorOps?xor#xor_g[64u]()                                                                     | BitVector<ulong> xor<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                           | 0f 1f 44 00 00 48 33 d1 48 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 5b 23 c0 5e 5e 00 27 e8 53 23 c0 5e 5e 01 26 e8 4b 23 c0 5e 5e 02 25 e8 43 23 c0 5e 5e 03 24 e8 3b 23 c0 5e 5e 04 23 e8 33 23 c0 5e 5e 05 22 e8 2b 23 c0 5e 5e 06 21 e8 23 23 c0 5e 5e 07 20 e8 1b 23 c0 5e 5e 08 1f e8 13 23 c0 5e 5e 09 1e e8 0b 23 c0 5e 5e 0a 1d e8 03 23 c0 5e 5e 0b 1c e8 fb 22 c0 5e 5e 0c 1b e8 f3 22 c0 5e 5e 0d 1a e8 eb 22 c0 5e 5e 0e 19 e8 e3 22 c0 5e 5e 0f 18 e8 db 22 c0 5e 5e 10 17 e8 d3 22 c0 5e 5e 11 16 e8 cb 22 c0 5e 5e 12 15 e8 c3 22 c0 5e 5e 13 14 e8 bb 22 c0 5e 5e 14 13 e8 b3 22 c0 5e 5e 15 12 e8 ab 22 c0 5e 5e 16 11 e8 a3 22 c0 5e 5e 17 10 e8 9b 22 c0 5e 5e 18 0f e8 93 22 c0 5e 5e 19 0e e8 8b 22 c0 5e 5e 1a 0d e8 83 22 c0 5e 5e 1b 0c e8 7b 22 c0 5e 5e 1c 0b e8 73 22 c0 5e 5e 1d 0a e8 6b 22 c0 5e 5e 1e 09 e8 63 22 c0 5e 5e 1f 08 e8 5b 22 c0 5e 5e 20 07 e8 53 22 c0 5e 5e 21 06 e8 4b 22 c0 5e 5e 22 05 e8 43 22 c0 5e 5e 23 04 e8 3b 22 c0 5e 5e 24 03 e8 33 22 c0 5e 5e 25 02 e8 2b 22 c0 5e 5e 26 01 e8 23 22 c0 5e 5e 27 00 00 1f b1 c8 f7 7f 00 00 d8 e3 af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 33 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
28        | 7ff7c8663430h   | 39      | hex://logix/BitVectorOps?xnor#xnor_g[8u]()                                                                    | BitVector<byte> xnor<byte>(BitVector<byte> x, BitVector<byte> y)                                              | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 33 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
29        | 7ff7c8663460h   | 39      | hex://logix/BitVectorOps?xnor#xnor_g[16u]()                                                                   | BitVector<ushort> xnor<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                      | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 33 c2 f7 d0 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
30        | 7ff7c8663490h   | 1432    | hex://logix/BitVectorOps?xnor#xnor_g[32u]()                                                                   | BitVector<uint> xnor<uint>(BitVector<uint> x, BitVector<uint> y)                                              | 0f 1f 44 00 00 33 d1 8b c2 f7 d0 c3 19 00 00 00 40 00 00 00 00 00 00 00 10 e5 af c8 f7 7f 00 00 0f 1f 44 00 00 48 33 d1 48 8b c2 48 f7 d0 c3 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 6b 21 c0 5e 5e 00 27 e8 63 21 c0 5e 5e 01 26 e8 5b 21 c0 5e 5e 02 25 e8 53 21 c0 5e 5e 03 24 e8 4b 21 c0 5e 5e 04 23 e8 43 21 c0 5e 5e 05 22 e8 3b 21 c0 5e 5e 06 21 e8 33 21 c0 5e 5e 07 20 e8 2b 21 c0 5e 5e 08 1f e8 23 21 c0 5e 5e 09 1e e8 1b 21 c0 5e 5e 0a 1d e8 13 21 c0 5e 5e 0b 1c e8 0b 21 c0 5e 5e 0c 1b e8 03 21 c0 5e 5e 0d 1a e8 fb 20 c0 5e 5e 0e 19 e8 f3 20 c0 5e 5e 0f 18 e8 eb 20 c0 5e 5e 10 17 e8 e3 20 c0 5e 5e 11 16 e8 db 20 c0 5e 5e 12 15 e8 d3 20 c0 5e 5e 13 14 e8 cb 20 c0 5e 5e 14 13 e8 c3 20 c0 5e 5e 15 12 e8 bb 20 c0 5e 5e 16 11 e8 b3 20 c0 5e 5e 17 10 e8 ab 20 c0 5e 5e 18 0f e8 a3 20 c0 5e 5e 19 0e e8 9b 20 c0 5e 5e 1a 0d e8 93 20 c0 5e 5e 1b 0c e8 8b 20 c0 5e 5e 1c 0b e8 83 20 c0 5e 5e 1d 0a e8 7b 20 c0 5e 5e 1e 09 e8 73 20 c0 5e 5e 1f 08 e8 6b 20 c0 5e 5e 20 07 e8 63 20 c0 5e 5e 21 06 e8 5b 20 c0 5e 5e 22 05 e8 53 20 c0 5e 5e 23 04 e8 4b 20 c0 5e 5e 24 03 e8 43 20 c0 5e 5e 25 02 e8 3b 20 c0 5e 5e 26 01 e8 33 20 c0 5e 5e 27 00 20 24 b1 c8 f7 7f 00 00 02 00 00 00 00 00 00 00 e8 1b 20 c0 5e 5e 00 00 c0 27 b1 c8 f7 7f 00 00 e8 0b 20 c0 5e 5e 00 00 20 28 b1 c8 f7 7f 00 00 e8 fb 1f c0 5e 5e 00 00 80 28 b1 c8 f7 7f 00 00 e8 eb 1f c0 5e 5e 00 00 e0 28 b1 c8 f7 7f 00 00 e8 db 1f c0 5e 5e 00 27 e8 d3 1f c0 5e 5e 01 26 e8 cb 1f c0 5e 5e 02 25 e8 c3 1f c0 5e 5e 03 24 e8 bb 1f c0 5e 5e 04 23 e8 b3 1f c0 5e 5e 05 22 e8 ab 1f c0 5e 5e 06 21 e8 a3 1f c0 5e 5e 07 20 e8 9b 1f c0 5e 5e 08 1f e8 93 1f c0 5e 5e 09 1e e8 8b 1f c0 5e 5e 0a 1d e8 83 1f c0 5e 5e 0b 1c e8 7b 1f c0 5e 5e 0c 1b e8 73 1f c0 5e 5e 0d 1a e8 6b 1f c0 5e 5e 0e 19 e8 63 1f c0 5e 5e 0f 18 e8 5b 1f c0 5e 5e 10 17 e8 53 1f c0 5e 5e 11 16 e8 4b 1f c0 5e 5e 12 15 e8 43 1f c0 5e 5e 13 14 e8 3b 1f c0 5e 5e 14 13 e8 33 1f c0 5e 5e 15 12 e8 2b 1f c0 5e 5e 16 11 e8 23 1f c0 5e 5e 17 10 e8 1b 1f c0 5e 5e 18 0f e8 13 1f c0 5e 5e 19 0e e8 0b 1f c0 5e 5e 1a 0d e8 03 1f c0 5e 5e 1b 0c e8 fb 1e c0 5e 5e 1c 0b e8 f3 1e c0 5e 5e 1d 0a e8 eb 1e c0 5e 5e 1e 09 e8 e3 1e c0 5e 5e 1f 08 e8 db 1e c0 5e 5e 20 07 e8 d3 1e c0 5e 5e 21 06 e8 cb 1e c0 5e 5e 22 05 e8 c3 1e c0 5e 5e 23 04 e8 bb 1e c0 5e 5e 24 03 e8 b3 1e c0 5e 5e 25 02 e8 ab 1e c0 5e 5e 26 01 e8 a3 1e c0 5e 5e 27 00 40 29 b1 c8 f7 7f 00 00 e8 93 1e c0 5e 5e 00 00 80 2c b1 c8 f7 7f 00 00 e8 83 1e c0 5e 5e 00 00 e0 2c b1 c8 f7 7f 00 00 e8 73 1e c0 5e 5e 00 00 40 2d b1 c8 f7 7f 00 00 e8 63 1e c0 5e 5e 00 00 a0 2d b1 c8 f7 7f 00 00 e8 53 1e c0 5e 5e 00 00 00 2e b1 c8 f7 7f 00 00 e8 43 1e c0 5e 5e 00 27 e8 3b 1e c0 5e 5e 01 26 e8 33 1e c0 5e 5e 02 25 e8 2b 1e c0 5e 5e 03 24 e8 23 1e c0 5e 5e 04 23 e8 1b 1e c0 5e 5e 05 22 e8 13 1e c0 5e 5e 06 21 e8 0b 1e c0 5e 5e 07 20 e8 03 1e c0 5e 5e 08 1f e8 fb 1d c0 5e 5e 09 1e e8 f3 1d c0 5e 5e 0a 1d e8 eb 1d c0 5e 5e 0b 1c e8 e3 1d c0 5e 5e 0c 1b e8 db 1d c0 5e 5e 0d 1a e8 d3 1d c0 5e 5e 0e 19 e8 cb 1d c0 5e 5e 0f 18 e8 c3 1d c0 5e 5e 10 17 e8 bb 1d c0 5e 5e 11 16 e8 b3 1d c0 5e 5e 12 15 e8 ab 1d c0 5e 5e 13 14 e8 a3 1d c0 5e 5e 14 13 e8 9b 1d c0 5e 5e 15 12 e8 93 1d c0 5e 5e 16 11 e8 8b 1d c0 5e 5e 17 10 e8 83 1d c0 5e 5e 18 0f e8 7b 1d c0 5e 5e 19 0e e8 73 1d c0 5e 5e 1a 0d e8 6b 1d c0 5e 5e 1b 0c e8 63 1d c0 5e 5e 1c 0b e8 5b 1d c0 5e 5e 1d 0a e8 53 1d c0 5e 5e 1e 09 e8 4b 1d c0 5e 5e 1f 08 e8 43 1d c0 5e 5e 20 07 e8 3b 1d c0 5e 5e 21 06 e8 33 1d c0 5e 5e 22 05 e8 2b 1d c0 5e 5e 23 04 e8 23 1d c0 5e 5e 24 03 e8 1b 1d c0 5e 5e 25 02 e8 13 1d c0 5e 5e 26 01 e8 0b 1d c0 5e 5e 27 00 60 2e b1 c8 f7 7f 00 00 e8 fb 1c c0 5e 5e 00 00 a0 31 b1 c8 f7 7f 00 00 e8 eb 1c c0 5e 5e 00 00 00 32 b1 c8 f7 7f 00 00 e8 db 1c c0 5e 5e 00 00 60 32 b1 c8 f7 7f 00 00 e8 cb 1c c0 5e 5e 00 00 c0 32 b1 c8 f7 7f 00 00 e8 bb 1c c0 5e 5e 00 00 20 33 b1 c8 f7 7f 00 00 e8 ab 1c c0 5e 5e 00 00 c0 36 b1 c8 f7 7f 00 00 e8 9b 1c c0 5e 5e 00 00 20 37 b1 c8 f7 7f 00 00 e8 8b 1c c0 5e 5e 00 00 80 37 b1 c8 f7 7f 00 00 e8 7b 1c c0 5e 5e 00 00 e0 37 b1 c8 f7 7f 00 00 e8 6b 1c c0 5e 5e 00 00 40 38 b1 c8 f7 7f 00 00 e8 5b 1c c0 5e 5e 00 00 e0 3b b1 c8 f7 7f 00 00 e8 4b 1c c0 5e 5e 00 00 40 3c b1 c8 f7 7f 00 00 e8 3b 1c c0 5e 5e 00 00 a0 3c b1 c8 f7 7f 00 00 e8 2b 1c c0 5e 5e 00 00 00 3d b1 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
31        | 7ff7c86634b0h   | 1400    | hex://logix/BitVectorOps?xnor#xnor_g[64u]()                                                                   | BitVector<ulong> xnor<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                          | 0f 1f 44 00 00 48 33 d1 48 8b c2 48 f7 d0 c3 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 6b 21 c0 5e 5e 00 27 e8 63 21 c0 5e 5e 01 26 e8 5b 21 c0 5e 5e 02 25 e8 53 21 c0 5e 5e 03 24 e8 4b 21 c0 5e 5e 04 23 e8 43 21 c0 5e 5e 05 22 e8 3b 21 c0 5e 5e 06 21 e8 33 21 c0 5e 5e 07 20 e8 2b 21 c0 5e 5e 08 1f e8 23 21 c0 5e 5e 09 1e e8 1b 21 c0 5e 5e 0a 1d e8 13 21 c0 5e 5e 0b 1c e8 0b 21 c0 5e 5e 0c 1b e8 03 21 c0 5e 5e 0d 1a e8 fb 20 c0 5e 5e 0e 19 e8 f3 20 c0 5e 5e 0f 18 e8 eb 20 c0 5e 5e 10 17 e8 e3 20 c0 5e 5e 11 16 e8 db 20 c0 5e 5e 12 15 e8 d3 20 c0 5e 5e 13 14 e8 cb 20 c0 5e 5e 14 13 e8 c3 20 c0 5e 5e 15 12 e8 bb 20 c0 5e 5e 16 11 e8 b3 20 c0 5e 5e 17 10 e8 ab 20 c0 5e 5e 18 0f e8 a3 20 c0 5e 5e 19 0e e8 9b 20 c0 5e 5e 1a 0d e8 93 20 c0 5e 5e 1b 0c e8 8b 20 c0 5e 5e 1c 0b e8 83 20 c0 5e 5e 1d 0a e8 7b 20 c0 5e 5e 1e 09 e8 73 20 c0 5e 5e 1f 08 e8 6b 20 c0 5e 5e 20 07 e8 63 20 c0 5e 5e 21 06 e8 5b 20 c0 5e 5e 22 05 e8 53 20 c0 5e 5e 23 04 e8 4b 20 c0 5e 5e 24 03 e8 43 20 c0 5e 5e 25 02 e8 3b 20 c0 5e 5e 26 01 e8 33 20 c0 5e 5e 27 00 20 24 b1 c8 f7 7f 00 00 02 00 00 00 00 00 00 00 e8 1b 20 c0 5e 5e 00 00 c0 27 b1 c8 f7 7f 00 00 e8 0b 20 c0 5e 5e 00 00 20 28 b1 c8 f7 7f 00 00 e8 fb 1f c0 5e 5e 00 00 80 28 b1 c8 f7 7f 00 00 e8 eb 1f c0 5e 5e 00 00 e0 28 b1 c8 f7 7f 00 00 e8 db 1f c0 5e 5e 00 27 e8 d3 1f c0 5e 5e 01 26 e8 cb 1f c0 5e 5e 02 25 e8 c3 1f c0 5e 5e 03 24 e8 bb 1f c0 5e 5e 04 23 e8 b3 1f c0 5e 5e 05 22 e8 ab 1f c0 5e 5e 06 21 e8 a3 1f c0 5e 5e 07 20 e8 9b 1f c0 5e 5e 08 1f e8 93 1f c0 5e 5e 09 1e e8 8b 1f c0 5e 5e 0a 1d e8 83 1f c0 5e 5e 0b 1c e8 7b 1f c0 5e 5e 0c 1b e8 73 1f c0 5e 5e 0d 1a e8 6b 1f c0 5e 5e 0e 19 e8 63 1f c0 5e 5e 0f 18 e8 5b 1f c0 5e 5e 10 17 e8 53 1f c0 5e 5e 11 16 e8 4b 1f c0 5e 5e 12 15 e8 43 1f c0 5e 5e 13 14 e8 3b 1f c0 5e 5e 14 13 e8 33 1f c0 5e 5e 15 12 e8 2b 1f c0 5e 5e 16 11 e8 23 1f c0 5e 5e 17 10 e8 1b 1f c0 5e 5e 18 0f e8 13 1f c0 5e 5e 19 0e e8 0b 1f c0 5e 5e 1a 0d e8 03 1f c0 5e 5e 1b 0c e8 fb 1e c0 5e 5e 1c 0b e8 f3 1e c0 5e 5e 1d 0a e8 eb 1e c0 5e 5e 1e 09 e8 e3 1e c0 5e 5e 1f 08 e8 db 1e c0 5e 5e 20 07 e8 d3 1e c0 5e 5e 21 06 e8 cb 1e c0 5e 5e 22 05 e8 c3 1e c0 5e 5e 23 04 e8 bb 1e c0 5e 5e 24 03 e8 b3 1e c0 5e 5e 25 02 e8 ab 1e c0 5e 5e 26 01 e8 a3 1e c0 5e 5e 27 00 40 29 b1 c8 f7 7f 00 00 e8 93 1e c0 5e 5e 00 00 80 2c b1 c8 f7 7f 00 00 e8 83 1e c0 5e 5e 00 00 e0 2c b1 c8 f7 7f 00 00 e8 73 1e c0 5e 5e 00 00 40 2d b1 c8 f7 7f 00 00 e8 63 1e c0 5e 5e 00 00 a0 2d b1 c8 f7 7f 00 00 e8 53 1e c0 5e 5e 00 00 00 2e b1 c8 f7 7f 00 00 e8 43 1e c0 5e 5e 00 27 e8 3b 1e c0 5e 5e 01 26 e8 33 1e c0 5e 5e 02 25 e8 2b 1e c0 5e 5e 03 24 e8 23 1e c0 5e 5e 04 23 e8 1b 1e c0 5e 5e 05 22 e8 13 1e c0 5e 5e 06 21 e8 0b 1e c0 5e 5e 07 20 e8 03 1e c0 5e 5e 08 1f e8 fb 1d c0 5e 5e 09 1e e8 f3 1d c0 5e 5e 0a 1d e8 eb 1d c0 5e 5e 0b 1c e8 e3 1d c0 5e 5e 0c 1b e8 db 1d c0 5e 5e 0d 1a e8 d3 1d c0 5e 5e 0e 19 e8 cb 1d c0 5e 5e 0f 18 e8 c3 1d c0 5e 5e 10 17 e8 bb 1d c0 5e 5e 11 16 e8 b3 1d c0 5e 5e 12 15 e8 ab 1d c0 5e 5e 13 14 e8 a3 1d c0 5e 5e 14 13 e8 9b 1d c0 5e 5e 15 12 e8 93 1d c0 5e 5e 16 11 e8 8b 1d c0 5e 5e 17 10 e8 83 1d c0 5e 5e 18 0f e8 7b 1d c0 5e 5e 19 0e e8 73 1d c0 5e 5e 1a 0d e8 6b 1d c0 5e 5e 1b 0c e8 63 1d c0 5e 5e 1c 0b e8 5b 1d c0 5e 5e 1d 0a e8 53 1d c0 5e 5e 1e 09 e8 4b 1d c0 5e 5e 1f 08 e8 43 1d c0 5e 5e 20 07 e8 3b 1d c0 5e 5e 21 06 e8 33 1d c0 5e 5e 22 05 e8 2b 1d c0 5e 5e 23 04 e8 23 1d c0 5e 5e 24 03 e8 1b 1d c0 5e 5e 25 02 e8 13 1d c0 5e 5e 26 01 e8 0b 1d c0 5e 5e 27 00 60 2e b1 c8 f7 7f 00 00 e8 fb 1c c0 5e 5e 00 00 a0 31 b1 c8 f7 7f 00 00 e8 eb 1c c0 5e 5e 00 00 00 32 b1 c8 f7 7f 00 00 e8 db 1c c0 5e 5e 00 00 60 32 b1 c8 f7 7f 00 00 e8 cb 1c c0 5e 5e 00 00 c0 32 b1 c8 f7 7f 00 00 e8 bb 1c c0 5e 5e 00 00 20 33 b1 c8 f7 7f 00 00 e8 ab 1c c0 5e 5e 00 00 c0 36 b1 c8 f7 7f 00 00 e8 9b 1c c0 5e 5e 00 00 20 37 b1 c8 f7 7f 00 00 e8 8b 1c c0 5e 5e 00 00 80 37 b1 c8 f7 7f 00 00 e8 7b 1c c0 5e 5e 00 00 e0 37 b1 c8 f7 7f 00 00 e8 6b 1c c0 5e 5e 00 00 40 38 b1 c8 f7 7f 00 00 e8 5b 1c c0 5e 5e 00 00 e0 3b b1 c8 f7 7f 00 00 e8 4b 1c c0 5e 5e 00 00 40 3c b1 c8 f7 7f 00 00 e8 3b 1c c0 5e 5e 00 00 a0 3c b1 c8 f7 7f 00 00 e8 2b 1c c0 5e 5e 00 00 00 3d b1 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
32        | 7ff7c8663a30h   | 291     | hex://logix/BitVectorOps?left#left_g[8u]()                                                                    | BitVector<byte> left<byte>(BitVector<byte> x, BitVector<byte> y)                                              | 0f 1f 44 00 00 89 54 24 10 0f b6 c1 c3 00 00 00 19 00 00 00 40 00 00 00 88 e6 af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b7 c1 c3 00 00 00 19 00 00 00 40 00 00 00 f0 e6 af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 8b c1 c3 19 00 00 00 40 00 00 00 00 00 00 00 58 e7 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 54 24 10 48 8b c1 c3 00 00 19 00 00 00 40 00 00 00 68 e8 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b6 c2 c3 00 00 00 19 00 00 00 40 00 00 00 d0 e8 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 c3 00 00 00 19 00 00 00 40 00 00 00 38 e9 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 a0 e9 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 b0 ea af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
33        | 7ff7c8663a50h   | 259     | hex://logix/BitVectorOps?left#left_g[16u]()                                                                   | BitVector<ushort> left<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                      | 0f 1f 44 00 00 89 54 24 10 0f b7 c1 c3 00 00 00 19 00 00 00 40 00 00 00 f0 e6 af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 8b c1 c3 19 00 00 00 40 00 00 00 00 00 00 00 58 e7 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 54 24 10 48 8b c1 c3 00 00 19 00 00 00 40 00 00 00 68 e8 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b6 c2 c3 00 00 00 19 00 00 00 40 00 00 00 d0 e8 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 c3 00 00 00 19 00 00 00 40 00 00 00 38 e9 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 a0 e9 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 b0 ea af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
34        | 7ff7c8663a70h   | 227     | hex://logix/BitVectorOps?left#left_g[32u]()                                                                   | BitVector<uint> left<uint>(BitVector<uint> x, BitVector<uint> y)                                              | 0f 1f 44 00 00 89 54 24 10 8b c1 c3 19 00 00 00 40 00 00 00 00 00 00 00 58 e7 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 54 24 10 48 8b c1 c3 00 00 19 00 00 00 40 00 00 00 68 e8 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b6 c2 c3 00 00 00 19 00 00 00 40 00 00 00 d0 e8 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 c3 00 00 00 19 00 00 00 40 00 00 00 38 e9 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 a0 e9 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 b0 ea af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
35        | 7ff7c8663a90h   | 195     | hex://logix/BitVectorOps?left#left_g[64u]()                                                                   | BitVector<ulong> left<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                          | 0f 1f 44 00 00 48 89 54 24 10 48 8b c1 c3 00 00 19 00 00 00 40 00 00 00 68 e8 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b6 c2 c3 00 00 00 19 00 00 00 40 00 00 00 d0 e8 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 c3 00 00 00 19 00 00 00 40 00 00 00 38 e9 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 a0 e9 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 b0 ea af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
36        | 7ff7c8663ab0h   | 163     | hex://logix/BitVectorOps?right#right_g[8u]()                                                                  | BitVector<byte> right<byte>(BitVector<byte> x, BitVector<byte> y)                                             | 0f 1f 44 00 00 89 4c 24 08 0f b6 c2 c3 00 00 00 19 00 00 00 40 00 00 00 d0 e8 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 c3 00 00 00 19 00 00 00 40 00 00 00 38 e9 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 a0 e9 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 b0 ea af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
37        | 7ff7c8663ad0h   | 131     | hex://logix/BitVectorOps?right#right_g[16u]()                                                                 | BitVector<ushort> right<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                     | 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 c3 00 00 00 19 00 00 00 40 00 00 00 38 e9 af c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 a0 e9 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 b0 ea af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
38        | 7ff7c8663af0h   | 99      | hex://logix/BitVectorOps?right#right_g[32u]()                                                                 | BitVector<uint> right<uint>(BitVector<uint> x, BitVector<uint> y)                                             | 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 a0 e9 af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 b0 ea af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
39        | 7ff7c8663b10h   | 67      | hex://logix/BitVectorOps?right#right_g[64u]()                                                                 | BitVector<ulong> right<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                         | 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 b0 ea af c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
40        | 7ff7c8663b30h   | 35      | hex://logix/BitVectorOps?lnot#lnot_g[8u]()                                                                    | BitVector<byte> lnot<byte>(BitVector<byte> x, BitVector<byte> y)                                              | 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
41        | 7ff7c8663b60h   | 35      | hex://logix/BitVectorOps?lnot#lnot_g[16u]()                                                                   | BitVector<ushort> lnot<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                      | 0f 1f 44 00 00 89 54 24 10 0f b7 c1 f7 d0 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
42        | 7ff7c8663b90h   | 408     | hex://logix/BitVectorOps?lnot#lnot_g[32u]()                                                                   | BitVector<uint> lnot<uint>(BitVector<uint> x, BitVector<uint> y)                                              | 0f 1f 44 00 00 89 54 24 10 8b c1 f7 d0 c3 00 00 19 00 00 00 40 00 00 00 e8 eb af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 54 24 10 48 8b c1 48 f7 d0 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 63 1a c0 5e 5e 00 27 e8 5b 1a c0 5e 5e 01 26 e8 53 1a c0 5e 5e 02 25 e8 4b 1a c0 5e 5e 03 24 e8 43 1a c0 5e 5e 04 23 e8 3b 1a c0 5e 5e 05 22 e8 33 1a c0 5e 5e 06 21 e8 2b 1a c0 5e 5e 07 20 e8 23 1a c0 5e 5e 08 1f e8 1b 1a c0 5e 5e 09 1e e8 13 1a c0 5e 5e 0a 1d e8 0b 1a c0 5e 5e 0b 1c e8 03 1a c0 5e 5e 0c 1b e8 fb 19 c0 5e 5e 0d 1a e8 f3 19 c0 5e 5e 0e 19 e8 eb 19 c0 5e 5e 0f 18 e8 e3 19 c0 5e 5e 10 17 e8 db 19 c0 5e 5e 11 16 e8 d3 19 c0 5e 5e 12 15 e8 cb 19 c0 5e 5e 13 14 e8 c3 19 c0 5e 5e 14 13 e8 bb 19 c0 5e 5e 15 12 e8 b3 19 c0 5e 5e 16 11 e8 ab 19 c0 5e 5e 17 10 e8 a3 19 c0 5e 5e 18 0f e8 9b 19 c0 5e 5e 19 0e e8 93 19 c0 5e 5e 1a 0d e8 8b 19 c0 5e 5e 1b 0c e8 83 19 c0 5e 5e 1c 0b e8 7b 19 c0 5e 5e 1d 0a e8 73 19 c0 5e 5e 1e 09 e8 6b 19 c0 5e 5e 1f 08 e8 63 19 c0 5e 5e 20 07 e8 5b 19 c0 5e 5e 21 06 e8 53 19 c0 5e 5e 22 05 e8 4b 19 c0 5e 5e 23 04 e8 43 19 c0 5e 5e 24 03 e8 3b 19 c0 5e 5e 25 02 e8 33 19 c0 5e 5e 26 01 e8 2b 19 c0 5e 5e 27 00 80 33 b1 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
43        | 7ff7c8663bb0h   | 376     | hex://logix/BitVectorOps?lnot#lnot_g[64u]()                                                                   | BitVector<ulong> lnot<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                          | 0f 1f 44 00 00 48 89 54 24 10 48 8b c1 48 f7 d0 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 63 1a c0 5e 5e 00 27 e8 5b 1a c0 5e 5e 01 26 e8 53 1a c0 5e 5e 02 25 e8 4b 1a c0 5e 5e 03 24 e8 43 1a c0 5e 5e 04 23 e8 3b 1a c0 5e 5e 05 22 e8 33 1a c0 5e 5e 06 21 e8 2b 1a c0 5e 5e 07 20 e8 23 1a c0 5e 5e 08 1f e8 1b 1a c0 5e 5e 09 1e e8 13 1a c0 5e 5e 0a 1d e8 0b 1a c0 5e 5e 0b 1c e8 03 1a c0 5e 5e 0c 1b e8 fb 19 c0 5e 5e 0d 1a e8 f3 19 c0 5e 5e 0e 19 e8 eb 19 c0 5e 5e 0f 18 e8 e3 19 c0 5e 5e 10 17 e8 db 19 c0 5e 5e 11 16 e8 d3 19 c0 5e 5e 12 15 e8 cb 19 c0 5e 5e 13 14 e8 c3 19 c0 5e 5e 14 13 e8 bb 19 c0 5e 5e 15 12 e8 b3 19 c0 5e 5e 16 11 e8 ab 19 c0 5e 5e 17 10 e8 a3 19 c0 5e 5e 18 0f e8 9b 19 c0 5e 5e 19 0e e8 93 19 c0 5e 5e 1a 0d e8 8b 19 c0 5e 5e 1b 0c e8 83 19 c0 5e 5e 1c 0b e8 7b 19 c0 5e 5e 1d 0a e8 73 19 c0 5e 5e 1e 09 e8 6b 19 c0 5e 5e 1f 08 e8 63 19 c0 5e 5e 20 07 e8 5b 19 c0 5e 5e 21 06 e8 53 19 c0 5e 5e 22 05 e8 4b 19 c0 5e 5e 23 04 e8 43 19 c0 5e 5e 24 03 e8 3b 19 c0 5e 5e 25 02 e8 33 19 c0 5e 5e 26 01 e8 2b 19 c0 5e 5e 27 00 80 33 b1 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
44        | 7ff7c8663d30h   | 35      | hex://logix/BitVectorOps?rnot#rnot_g[8u]()                                                                    | BitVector<byte> rnot<byte>(BitVector<byte> x, BitVector<byte> y)                                              | 0f 1f 44 00 00 89 4c 24 08 0f b6 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
45        | 7ff7c8663d60h   | 35      | hex://logix/BitVectorOps?rnot#rnot_g[16u]()                                                                   | BitVector<ushort> rnot<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                      | 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 f7 d0 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
46        | 7ff7c8663d90h   | 408     | hex://logix/BitVectorOps?rnot#rnot_g[32u]()                                                                   | BitVector<uint> rnot<uint>(BitVector<uint> x, BitVector<uint> y)                                              | 0f 1f 44 00 00 89 4c 24 08 8b c2 f7 d0 c3 00 00 19 00 00 00 40 00 00 00 30 ee af c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 48 f7 d0 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 63 18 c0 5e 5e 00 27 e8 5b 18 c0 5e 5e 01 26 e8 53 18 c0 5e 5e 02 25 e8 4b 18 c0 5e 5e 03 24 e8 43 18 c0 5e 5e 04 23 e8 3b 18 c0 5e 5e 05 22 e8 33 18 c0 5e 5e 06 21 e8 2b 18 c0 5e 5e 07 20 e8 23 18 c0 5e 5e 08 1f e8 1b 18 c0 5e 5e 09 1e e8 13 18 c0 5e 5e 0a 1d e8 0b 18 c0 5e 5e 0b 1c e8 03 18 c0 5e 5e 0c 1b e8 fb 17 c0 5e 5e 0d 1a e8 f3 17 c0 5e 5e 0e 19 e8 eb 17 c0 5e 5e 0f 18 e8 e3 17 c0 5e 5e 10 17 e8 db 17 c0 5e 5e 11 16 e8 d3 17 c0 5e 5e 12 15 e8 cb 17 c0 5e 5e 13 14 e8 c3 17 c0 5e 5e 14 13 e8 bb 17 c0 5e 5e 15 12 e8 b3 17 c0 5e 5e 16 11 e8 ab 17 c0 5e 5e 17 10 e8 a3 17 c0 5e 5e 18 0f e8 9b 17 c0 5e 5e 19 0e e8 93 17 c0 5e 5e 1a 0d e8 8b 17 c0 5e 5e 1b 0c e8 83 17 c0 5e 5e 1c 0b e8 7b 17 c0 5e 5e 1d 0a e8 73 17 c0 5e 5e 1e 09 e8 6b 17 c0 5e 5e 1f 08 e8 63 17 c0 5e 5e 20 07 e8 5b 17 c0 5e 5e 21 06 e8 53 17 c0 5e 5e 22 05 e8 4b 17 c0 5e 5e 23 04 e8 43 17 c0 5e 5e 24 03 e8 3b 17 c0 5e 5e 25 02 e8 33 17 c0 5e 5e 26 01 e8 2b 17 c0 5e 5e 27 00 a0 38 b1 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
47        | 7ff7c8663db0h   | 376     | hex://logix/BitVectorOps?rnot#rnot_g[64u]()                                                                   | BitVector<ulong> rnot<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                          | 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 48 f7 d0 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 63 18 c0 5e 5e 00 27 e8 5b 18 c0 5e 5e 01 26 e8 53 18 c0 5e 5e 02 25 e8 4b 18 c0 5e 5e 03 24 e8 43 18 c0 5e 5e 04 23 e8 3b 18 c0 5e 5e 05 22 e8 33 18 c0 5e 5e 06 21 e8 2b 18 c0 5e 5e 07 20 e8 23 18 c0 5e 5e 08 1f e8 1b 18 c0 5e 5e 09 1e e8 13 18 c0 5e 5e 0a 1d e8 0b 18 c0 5e 5e 0b 1c e8 03 18 c0 5e 5e 0c 1b e8 fb 17 c0 5e 5e 0d 1a e8 f3 17 c0 5e 5e 0e 19 e8 eb 17 c0 5e 5e 0f 18 e8 e3 17 c0 5e 5e 10 17 e8 db 17 c0 5e 5e 11 16 e8 d3 17 c0 5e 5e 12 15 e8 cb 17 c0 5e 5e 13 14 e8 c3 17 c0 5e 5e 14 13 e8 bb 17 c0 5e 5e 15 12 e8 b3 17 c0 5e 5e 16 11 e8 ab 17 c0 5e 5e 17 10 e8 a3 17 c0 5e 5e 18 0f e8 9b 17 c0 5e 5e 19 0e e8 93 17 c0 5e 5e 1a 0d e8 8b 17 c0 5e 5e 1b 0c e8 83 17 c0 5e 5e 1c 0b e8 7b 17 c0 5e 5e 1d 0a e8 73 17 c0 5e 5e 1e 09 e8 6b 17 c0 5e 5e 1f 08 e8 63 17 c0 5e 5e 20 07 e8 5b 17 c0 5e 5e 21 06 e8 53 17 c0 5e 5e 22 05 e8 4b 17 c0 5e 5e 23 04 e8 43 17 c0 5e 5e 24 03 e8 3b 17 c0 5e 5e 25 02 e8 33 17 c0 5e 5e 26 01 e8 2b 17 c0 5e 5e 27 00 a0 38 b1 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
48        | 7ff7c8663f30h   | 39      | hex://logix/BitVectorOps?impl#impl_g[8u]()                                                                    | BitVector<byte> impl<byte>(BitVector<byte> x, BitVector<byte> y)                                              | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 f7 d2 0b c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
49        | 7ff7c8663f60h   | 39      | hex://logix/BitVectorOps?impl#impl_g[16u]()                                                                   | BitVector<ushort> impl<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                      | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 f7 d2 0b c2 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
50        | 7ff7c8663f90h   | 1032    | hex://logix/BitVectorOps?impl#impl_g[32u]()                                                                   | BitVector<uint> impl<uint>(BitVector<uint> x, BitVector<uint> y)                                              | 0f 1f 44 00 00 8b c2 f7 d0 0b c1 c3 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 8b 16 c0 5e 5e 00 00 60 3d b1 c8 f7 7f 00 00 e8 7b 16 c0 5e 5e 00 27 e8 73 16 c0 5e 5e 01 26 e8 6b 16 c0 5e 5e 02 25 e8 63 16 c0 5e 5e 03 24 e8 5b 16 c0 5e 5e 04 23 e8 53 16 c0 5e 5e 05 22 e8 4b 16 c0 5e 5e 06 21 e8 43 16 c0 5e 5e 07 20 e8 3b 16 c0 5e 5e 08 1f e8 33 16 c0 5e 5e 09 1e e8 2b 16 c0 5e 5e 0a 1d e8 23 16 c0 5e 5e 0b 1c e8 1b 16 c0 5e 5e 0c 1b e8 13 16 c0 5e 5e 0d 1a e8 0b 16 c0 5e 5e 0e 19 e8 03 16 c0 5e 5e 0f 18 e8 fb 15 c0 5e 5e 10 17 e8 f3 15 c0 5e 5e 11 16 e8 eb 15 c0 5e 5e 12 15 e8 e3 15 c0 5e 5e 13 14 e8 db 15 c0 5e 5e 14 13 e8 d3 15 c0 5e 5e 15 12 e8 cb 15 c0 5e 5e 16 11 e8 c3 15 c0 5e 5e 17 10 e8 bb 15 c0 5e 5e 18 0f e8 b3 15 c0 5e 5e 19 0e e8 ab 15 c0 5e 5e 1a 0d e8 a3 15 c0 5e 5e 1b 0c e8 9b 15 c0 5e 5e 1c 0b e8 93 15 c0 5e 5e 1d 0a e8 8b 15 c0 5e 5e 1e 09 e8 83 15 c0 5e 5e 1f 08 e8 7b 15 c0 5e 5e 20 07 e8 73 15 c0 5e 5e 21 06 e8 6b 15 c0 5e 5e 22 05 e8 63 15 c0 5e 5e 23 04 e8 5b 15 c0 5e 5e 24 03 e8 53 15 c0 5e 5e 25 02 e8 4b 15 c0 5e 5e 26 01 e8 43 15 c0 5e 5e 27 00 c0 3d b1 c8 f7 7f 00 00 e8 33 15 c0 5e 5e 00 00 00 41 b1 c8 f7 7f 00 00 e8 23 15 c0 5e 5e 00 00 60 41 b1 c8 f7 7f 00 00 e8 13 15 c0 5e 5e 00 00 c0 41 b1 c8 f7 7f 00 00 e8 03 15 c0 5e 5e 00 00 20 42 b1 c8 f7 7f 00 00 e8 f3 14 c0 5e 5e 00 00 80 42 b1 c8 f7 7f 00 00 e8 e3 14 c0 5e 5e 00 27 e8 db 14 c0 5e 5e 01 26 e8 d3 14 c0 5e 5e 02 25 e8 cb 14 c0 5e 5e 03 24 e8 c3 14 c0 5e 5e 04 23 e8 bb 14 c0 5e 5e 05 22 e8 b3 14 c0 5e 5e 06 21 e8 ab 14 c0 5e 5e 07 20 e8 a3 14 c0 5e 5e 08 1f e8 9b 14 c0 5e 5e 09 1e e8 93 14 c0 5e 5e 0a 1d e8 8b 14 c0 5e 5e 0b 1c e8 83 14 c0 5e 5e 0c 1b e8 7b 14 c0 5e 5e 0d 1a e8 73 14 c0 5e 5e 0e 19 e8 6b 14 c0 5e 5e 0f 18 e8 63 14 c0 5e 5e 10 17 e8 5b 14 c0 5e 5e 11 16 e8 53 14 c0 5e 5e 12 15 e8 4b 14 c0 5e 5e 13 14 e8 43 14 c0 5e 5e 14 13 e8 3b 14 c0 5e 5e 15 12 e8 33 14 c0 5e 5e 16 11 e8 2b 14 c0 5e 5e 17 10 e8 23 14 c0 5e 5e 18 0f e8 1b 14 c0 5e 5e 19 0e e8 13 14 c0 5e 5e 1a 0d e8 0b 14 c0 5e 5e 1b 0c e8 03 14 c0 5e 5e 1c 0b e8 fb 13 c0 5e 5e 1d 0a e8 f3 13 c0 5e 5e 1e 09 e8 eb 13 c0 5e 5e 1f 08 e8 e3 13 c0 5e 5e 20 07 e8 db 13 c0 5e 5e 21 06 e8 d3 13 c0 5e 5e 22 05 e8 cb 13 c0 5e 5e 23 04 e8 c3 13 c0 5e 5e 24 03 e8 bb 13 c0 5e 5e 25 02 e8 b3 13 c0 5e 5e 26 01 e8 ab 13 c0 5e 5e 27 00 e0 42 b1 c8 f7 7f 00 00 e8 9b 13 c0 5e 5e 00 00 20 46 b1 c8 f7 7f 00 00 e8 8b 13 c0 5e 5e 00 00 80 46 b1 c8 f7 7f 00 00 e8 7b 13 c0 5e 5e 00 00 e0 46 b1 c8 f7 7f 00 00 e8 6b 13 c0 5e 5e 00 00 40 47 b1 c8 f7 7f 00 00 e8 5b 13 c0 5e 5e 00 00 a0 47 b1 c8 f7 7f 00 00 e8 4b 13 c0 5e 5e 00 00 40 4b b1 c8 f7 7f 00 00 e8 3b 13 c0 5e 5e 00 00 a0 4b b1 c8 f7 7f 00 00 e8 2b 13 c0 5e 5e 00 00 00 4c b1 c8 f7 7f 00 00 e8 1b 13 c0 5e 5e 00 00 60 4c b1 c8 f7 7f 00 00 e8 0b 13 c0 5e 5e 00 00 c0 4c b1 c8 f7 7f 00 00 e8 fb 12 c0 5e 5e 00 00 60 50 b1 c8 f7 7f 00 00 e8 eb 12 c0 5e 5e 00 00 c0 50 b1 c8 f7 7f 00 00 e8 db 12 c0 5e 5e 00 00 20 51 b1 c8 f7 7f 00 00 e8 cb 12 c0 5e 5e 00 00 80 51 b1 c8 f7 7f 00 00 e8 bb 12 c0 5e 5e 00 00 e0 51 b1 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
51        | 7ff7c86643c0h   | 71      | hex://logix/BitVectorOps?impl#impl_g[64u]()                                                                   | BitVector<ulong> impl<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                          | 0f 1f 44 00 00 48 8b c2 48 f7 d0 48 0b c1 c3 00 19 00 00 00 40 00 00 00 88 f1 af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 c4 e2 78 f2 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
52        | 7ff7c86643e0h   | 39      | hex://logix/BitVectorOps?nonimpl#nonimpl_g[8u]()                                                              | BitVector<byte> nonimpl<byte>(BitVector<byte> x, BitVector<byte> y)                                           | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 c4 e2 78 f2 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
53        | 7ff7c8664410h   | 39      | hex://logix/BitVectorOps?nonimpl#nonimpl_g[16u]()                                                             | BitVector<ushort> nonimpl<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                   | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 c4 e2 78 f2 c2 0f b7 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
54        | 7ff7c8664440h   | 103     | hex://logix/BitVectorOps?nonimpl#nonimpl_g[32u]()                                                             | BitVector<uint> nonimpl<uint>(BitVector<uint> x, BitVector<uint> y)                                           | 0f 1f 44 00 00 c4 e2 70 f2 c2 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 c0 f2 af c8 f7 7f 00 00 0f 1f 44 00 00 c4 e2 f0 f2 c2 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 d0 f3 af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 f7 d0 0b c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
55        | 7ff7c8664460h   | 71      | hex://logix/BitVectorOps?nonimpl#nonimpl_g[64u]()                                                             | BitVector<ulong> nonimpl<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                       | 0f 1f 44 00 00 c4 e2 f0 f2 c2 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 d0 f3 af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 f7 d0 0b c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
56        | 7ff7c8664480h   | 39      | hex://logix/BitVectorOps?cimpl#cimpl_g[8u]()                                                                  | BitVector<byte> cimpl<byte>(BitVector<byte> x, BitVector<byte> y)                                             | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 f7 d0 0b c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
57        | 7ff7c86644b0h   | 39      | hex://logix/BitVectorOps?cimpl#cimpl_g[16u]()                                                                 | BitVector<ushort> cimpl<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                     | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 f7 d0 0b c2 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
58        | 7ff7c86644e0h   | 439     | hex://logix/BitVectorOps?cimpl#cimpl_g[32u]()                                                                 | BitVector<uint> cimpl<uint>(BitVector<uint> x, BitVector<uint> y)                                             | 0f 1f 44 00 00 8b c1 f7 d0 0b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 08 f5 af c8 f7 7f 00 00 0f 1f 44 00 00 48 8b c1 48 f7 d0 48 0b c2 c3 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 1b 11 c0 5e 5e 00 27 e8 13 11 c0 5e 5e 01 26 e8 0b 11 c0 5e 5e 02 25 e8 03 11 c0 5e 5e 03 24 e8 fb 10 c0 5e 5e 04 23 e8 f3 10 c0 5e 5e 05 22 e8 eb 10 c0 5e 5e 06 21 e8 e3 10 c0 5e 5e 07 20 e8 db 10 c0 5e 5e 08 1f e8 d3 10 c0 5e 5e 09 1e e8 cb 10 c0 5e 5e 0a 1d e8 c3 10 c0 5e 5e 0b 1c e8 bb 10 c0 5e 5e 0c 1b e8 b3 10 c0 5e 5e 0d 1a e8 ab 10 c0 5e 5e 0e 19 e8 a3 10 c0 5e 5e 0f 18 e8 9b 10 c0 5e 5e 10 17 e8 93 10 c0 5e 5e 11 16 e8 8b 10 c0 5e 5e 12 15 e8 83 10 c0 5e 5e 13 14 e8 7b 10 c0 5e 5e 14 13 e8 73 10 c0 5e 5e 15 12 e8 6b 10 c0 5e 5e 16 11 e8 63 10 c0 5e 5e 17 10 e8 5b 10 c0 5e 5e 18 0f e8 53 10 c0 5e 5e 19 0e e8 4b 10 c0 5e 5e 1a 0d e8 43 10 c0 5e 5e 1b 0c e8 3b 10 c0 5e 5e 1c 0b e8 33 10 c0 5e 5e 1d 0a e8 2b 10 c0 5e 5e 1e 09 e8 23 10 c0 5e 5e 1f 08 e8 1b 10 c0 5e 5e 20 07 e8 13 10 c0 5e 5e 21 06 e8 0b 10 c0 5e 5e 22 05 e8 03 10 c0 5e 5e 23 04 e8 fb 0f c0 5e 5e 24 03 e8 f3 0f c0 5e 5e 25 02 e8 eb 0f c0 5e 5e 26 01 e8 e3 0f c0 5e 5e 27 00 00 48 b1 c8 f7 7f 00 00 18 f6 af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 c4 e2 68 f2 c0 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
59        | 7ff7c8664500h   | 407     | hex://logix/BitVectorOps?cimpl#cimpl_g[64u]()                                                                 | BitVector<ulong> cimpl<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                         | 0f 1f 44 00 00 48 8b c1 48 f7 d0 48 0b c2 c3 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 1b 11 c0 5e 5e 00 27 e8 13 11 c0 5e 5e 01 26 e8 0b 11 c0 5e 5e 02 25 e8 03 11 c0 5e 5e 03 24 e8 fb 10 c0 5e 5e 04 23 e8 f3 10 c0 5e 5e 05 22 e8 eb 10 c0 5e 5e 06 21 e8 e3 10 c0 5e 5e 07 20 e8 db 10 c0 5e 5e 08 1f e8 d3 10 c0 5e 5e 09 1e e8 cb 10 c0 5e 5e 0a 1d e8 c3 10 c0 5e 5e 0b 1c e8 bb 10 c0 5e 5e 0c 1b e8 b3 10 c0 5e 5e 0d 1a e8 ab 10 c0 5e 5e 0e 19 e8 a3 10 c0 5e 5e 0f 18 e8 9b 10 c0 5e 5e 10 17 e8 93 10 c0 5e 5e 11 16 e8 8b 10 c0 5e 5e 12 15 e8 83 10 c0 5e 5e 13 14 e8 7b 10 c0 5e 5e 14 13 e8 73 10 c0 5e 5e 15 12 e8 6b 10 c0 5e 5e 16 11 e8 63 10 c0 5e 5e 17 10 e8 5b 10 c0 5e 5e 18 0f e8 53 10 c0 5e 5e 19 0e e8 4b 10 c0 5e 5e 1a 0d e8 43 10 c0 5e 5e 1b 0c e8 3b 10 c0 5e 5e 1c 0b e8 33 10 c0 5e 5e 1d 0a e8 2b 10 c0 5e 5e 1e 09 e8 23 10 c0 5e 5e 1f 08 e8 1b 10 c0 5e 5e 20 07 e8 13 10 c0 5e 5e 21 06 e8 0b 10 c0 5e 5e 22 05 e8 03 10 c0 5e 5e 23 04 e8 fb 0f c0 5e 5e 24 03 e8 f3 0f c0 5e 5e 25 02 e8 eb 0f c0 5e 5e 26 01 e8 e3 0f c0 5e 5e 27 00 00 48 b1 c8 f7 7f 00 00 18 f6 af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 c4 e2 68 f2 c0 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
60        | 7ff7c8664670h   | 39      | hex://logix/BitVectorOps?cnonimpl#cnonimpl_g[8u]()                                                            | BitVector<byte> cnonimpl<byte>(BitVector<byte> x, BitVector<byte> y)                                          | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 c4 e2 68 f2 c0 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
61        | 7ff7c86646a0h   | 39      | hex://logix/BitVectorOps?cnonimpl#cnonimpl_g[16u]()                                                           | BitVector<ushort> cnonimpl<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                  | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 c4 e2 68 f2 c0 0f b7 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
62        | 7ff7c86646d0h   | 451     | hex://logix/BitVectorOps?cnonimpl#cnonimpl_g[32u]()                                                           | BitVector<uint> cnonimpl<uint>(BitVector<uint> x, BitVector<uint> y)                                          | 0f 1f 44 00 00 c4 e2 68 f2 c1 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 50 f7 af c8 f7 7f 00 00 0f 1f 44 00 00 c4 e2 e8 f2 c1 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 2b 0f c0 5e 5e 00 27 e8 23 0f c0 5e 5e 01 26 e8 1b 0f c0 5e 5e 02 25 e8 13 0f c0 5e 5e 03 24 e8 0b 0f c0 5e 5e 04 23 e8 03 0f c0 5e 5e 05 22 e8 fb 0e c0 5e 5e 06 21 e8 f3 0e c0 5e 5e 07 20 e8 eb 0e c0 5e 5e 08 1f e8 e3 0e c0 5e 5e 09 1e e8 db 0e c0 5e 5e 0a 1d e8 d3 0e c0 5e 5e 0b 1c e8 cb 0e c0 5e 5e 0c 1b e8 c3 0e c0 5e 5e 0d 1a e8 bb 0e c0 5e 5e 0e 19 e8 b3 0e c0 5e 5e 0f 18 e8 ab 0e c0 5e 5e 10 17 e8 a3 0e c0 5e 5e 11 16 e8 9b 0e c0 5e 5e 12 15 e8 93 0e c0 5e 5e 13 14 e8 8b 0e c0 5e 5e 14 13 e8 83 0e c0 5e 5e 15 12 e8 7b 0e c0 5e 5e 16 11 e8 73 0e c0 5e 5e 17 10 e8 6b 0e c0 5e 5e 18 0f e8 63 0e c0 5e 5e 19 0e e8 5b 0e c0 5e 5e 1a 0d e8 53 0e c0 5e 5e 1b 0c e8 4b 0e c0 5e 5e 1c 0b e8 43 0e c0 5e 5e 1d 0a e8 3b 0e c0 5e 5e 1e 09 e8 33 0e c0 5e 5e 1f 08 e8 2b 0e c0 5e 5e 20 07 e8 23 0e c0 5e 5e 21 06 e8 1b 0e c0 5e 5e 22 05 e8 13 0e c0 5e 5e 23 04 e8 0b 0e c0 5e 5e 24 03 e8 03 0e c0 5e 5e 25 02 e8 fb 0d c0 5e 5e 26 01 e8 f3 0d c0 5e 5e 27 00 20 4d b1 c8 f7 7f 00 00 60 f8 af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 41 0f b6 c8 0f b6 c0 0f b6 d2 23 d0 c4 e2 78 f2 c1 0b c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
63        | 7ff7c86646f0h   | 419     | hex://logix/BitVectorOps?cnonimpl#cnonimpl_g[64u]()                                                           | BitVector<ulong> cnonimpl<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                      | 0f 1f 44 00 00 c4 e2 e8 f2 c1 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 2b 0f c0 5e 5e 00 27 e8 23 0f c0 5e 5e 01 26 e8 1b 0f c0 5e 5e 02 25 e8 13 0f c0 5e 5e 03 24 e8 0b 0f c0 5e 5e 04 23 e8 03 0f c0 5e 5e 05 22 e8 fb 0e c0 5e 5e 06 21 e8 f3 0e c0 5e 5e 07 20 e8 eb 0e c0 5e 5e 08 1f e8 e3 0e c0 5e 5e 09 1e e8 db 0e c0 5e 5e 0a 1d e8 d3 0e c0 5e 5e 0b 1c e8 cb 0e c0 5e 5e 0c 1b e8 c3 0e c0 5e 5e 0d 1a e8 bb 0e c0 5e 5e 0e 19 e8 b3 0e c0 5e 5e 0f 18 e8 ab 0e c0 5e 5e 10 17 e8 a3 0e c0 5e 5e 11 16 e8 9b 0e c0 5e 5e 12 15 e8 93 0e c0 5e 5e 13 14 e8 8b 0e c0 5e 5e 14 13 e8 83 0e c0 5e 5e 15 12 e8 7b 0e c0 5e 5e 16 11 e8 73 0e c0 5e 5e 17 10 e8 6b 0e c0 5e 5e 18 0f e8 63 0e c0 5e 5e 19 0e e8 5b 0e c0 5e 5e 1a 0d e8 53 0e c0 5e 5e 1b 0c e8 4b 0e c0 5e 5e 1c 0b e8 43 0e c0 5e 5e 1d 0a e8 3b 0e c0 5e 5e 1e 09 e8 33 0e c0 5e 5e 1f 08 e8 2b 0e c0 5e 5e 20 07 e8 23 0e c0 5e 5e 21 06 e8 1b 0e c0 5e 5e 22 05 e8 13 0e c0 5e 5e 23 04 e8 0b 0e c0 5e 5e 24 03 e8 03 0e c0 5e 5e 25 02 e8 fb 0d c0 5e 5e 26 01 e8 f3 0d c0 5e 5e 27 00 20 4d b1 c8 f7 7f 00 00 60 f8 af c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 41 0f b6 c8 0f b6 c0 0f b6 d2 23 d0 c4 e2 78 f2 c1 0b c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
64        | 7ff7c8664860h   | 51      | hex://logix/BitVectorOps?select#select_g[8u]()                                                                | BitVector<byte> select<byte>(BitVector<byte> x, BitVector<byte> y, BitVector<byte> z)                         | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 41 0f b6 c8 0f b6 c0 0f b6 d2 23 d0 c4 e2 78 f2 c1 0b c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
65        | 7ff7c86648a0h   | 51      | hex://logix/BitVectorOps?select#select_g[16u]()                                                               | BitVector<ushort> select<ushort>(BitVector<ushort> x, BitVector<ushort> y, BitVector<ushort> z)               | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 41 0f b7 c8 0f b7 c0 0f b7 d2 23 d0 c4 e2 78 f2 c1 0b c2 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
66        | 7ff7c86648e0h   | 67      | hex://logix/BitVectorOps?select#select_g[32u]()                                                               | BitVector<uint> select<uint>(BitVector<uint> x, BitVector<uint> y, BitVector<uint> z)                         | 0f 1f 44 00 00 23 d1 c4 c2 70 f2 c0 0b c2 c3 00 19 00 00 00 40 00 00 00 b0 f9 af c8 f7 7f 00 00 0f 1f 44 00 00 48 23 d1 c4 c2 f0 f2 c0 48 0b c2 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
67        | 7ff7c8664900h   | 35      | hex://logix/BitVectorOps?select#select_g[64u]()                                                               | BitVector<ulong> select<ulong>(BitVector<ulong> x, BitVector<ulong> y, BitVector<ulong> z)                    | 0f 1f 44 00 00 48 23 d1 c4 c2 f0 f2 c0 48 0b c2 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
