Sequence  | Address         | Length  | Uri                                                                                                           | OpSig                                                                                                         | Data
0         | 7ff7c86068f0h   | 35      | hex://logix/bitvector.ops?true#true_g[8u]()                                                                   | BitVector<byte> true<byte>(BitVector<byte> x, BitVector<byte> y)                                              | 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 b8 ff 00 00 00 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
1         | 7ff7c8606920h   | 35      | hex://logix/bitvector.ops?true#true_g[16u]()                                                                  | BitVector<ushort> true<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                      | 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 b8 ff ff 00 00 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
2         | 7ff7c8606950h   | 35      | hex://logix/bitvector.ops?true#true_g[32u]()                                                                  | BitVector<uint> true<uint>(BitVector<uint> x, BitVector<uint> y)                                              | 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 b8 ff ff ff ff c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
3         | 7ff7c8606980h   | 179     | hex://logix/bitvector.ops?true#true_g[64u]()                                                                  | BitVector<ulong> true<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                          | 0f 1f 44 00 00 48 89 4c 24 08 48 89 54 24 10 48 b8 ff ff ff ff ff ff ff ff c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 20 d5 a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 88 d5 a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 f0 d5 a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 58 d6 a0 c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 89 54 24 10 33 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
4         | 7ff7c86069b0h   | 131     | hex://logix/bitvector.ops?false#false_g[8u]()                                                                 | BitVector<byte> false<byte>(BitVector<byte> x, BitVector<byte> y)                                             | 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 88 d5 a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 f0 d5 a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 58 d6 a0 c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 89 54 24 10 33 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
5         | 7ff7c86069d0h   | 99      | hex://logix/bitvector.ops?false#false_g[16u]()                                                                | BitVector<ushort> false<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                     | 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 f0 d5 a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 58 d6 a0 c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 89 54 24 10 33 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
6         | 7ff7c86069f0h   | 67      | hex://logix/bitvector.ops?false#false_g[32u]()                                                                | BitVector<uint> false<uint>(BitVector<uint> x, BitVector<uint> y)                                             | 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 58 d6 a0 c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 89 54 24 10 33 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
7         | 7ff7c8606a10h   | 35      | hex://logix/bitvector.ops?false#false_g[64u]()                                                                | BitVector<ulong> false<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                         | 0f 1f 44 00 00 48 89 4c 24 08 48 89 54 24 10 33 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
8         | 7ff7c8606a40h   | 35      | hex://logix/bitvector.ops?and#and_g[8u]()                                                                     | BitVector<byte> and<byte>(BitVector<byte> x, BitVector<byte> y)                                               | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 23 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
9         | 7ff7c8606a70h   | 35      | hex://logix/bitvector.ops?and#and_g[16u]()                                                                    | BitVector<ushort> and<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                       | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 23 c2 0f b7 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
10        | 7ff7c8606aa0h   | 439     | hex://logix/bitvector.ops?and#and_g[32u]()                                                                    | BitVector<uint> and<uint>(BitVector<uint> x, BitVector<uint> y)                                               | 0f 1f 44 00 00 23 d1 8b c2 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 a0 d8 a0 c8 f7 7f 00 00 0f 1f 44 00 00 48 23 d1 48 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 5b eb c5 5e 5e 00 27 e8 53 eb c5 5e 5e 01 26 e8 4b eb c5 5e 5e 02 25 e8 43 eb c5 5e 5e 03 24 e8 3b eb c5 5e 5e 04 23 e8 33 eb c5 5e 5e 05 22 e8 2b eb c5 5e 5e 06 21 e8 23 eb c5 5e 5e 07 20 e8 1b eb c5 5e 5e 08 1f e8 13 eb c5 5e 5e 09 1e e8 0b eb c5 5e 5e 0a 1d e8 03 eb c5 5e 5e 0b 1c e8 fb ea c5 5e 5e 0c 1b e8 f3 ea c5 5e 5e 0d 1a e8 eb ea c5 5e 5e 0e 19 e8 e3 ea c5 5e 5e 0f 18 e8 db ea c5 5e 5e 10 17 e8 d3 ea c5 5e 5e 11 16 e8 cb ea c5 5e 5e 12 15 e8 c3 ea c5 5e 5e 13 14 e8 bb ea c5 5e 5e 14 13 e8 b3 ea c5 5e 5e 15 12 e8 ab ea c5 5e 5e 16 11 e8 a3 ea c5 5e 5e 17 10 e8 9b ea c5 5e 5e 18 0f e8 93 ea c5 5e 5e 19 0e e8 8b ea c5 5e 5e 1a 0d e8 83 ea c5 5e 5e 1b 0c e8 7b ea c5 5e 5e 1c 0b e8 73 ea c5 5e 5e 1d 0a e8 6b ea c5 5e 5e 1e 09 e8 63 ea c5 5e 5e 1f 08 e8 5b ea c5 5e 5e 20 07 e8 53 ea c5 5e 5e 21 06 e8 4b ea c5 5e 5e 22 05 e8 43 ea c5 5e 5e 23 04 e8 3b ea c5 5e 5e 24 03 e8 33 ea c5 5e 5e 25 02 e8 2b ea c5 5e 5e 26 01 e8 23 ea c5 5e 5e 27 00 80 0c a2 c8 f7 7f 00 00 b0 d9 a0 c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 23 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
11        | 7ff7c8606ac0h   | 407     | hex://logix/bitvector.ops?and#and_g[64u]()                                                                    | BitVector<ulong> and<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                           | 0f 1f 44 00 00 48 23 d1 48 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 5b eb c5 5e 5e 00 27 e8 53 eb c5 5e 5e 01 26 e8 4b eb c5 5e 5e 02 25 e8 43 eb c5 5e 5e 03 24 e8 3b eb c5 5e 5e 04 23 e8 33 eb c5 5e 5e 05 22 e8 2b eb c5 5e 5e 06 21 e8 23 eb c5 5e 5e 07 20 e8 1b eb c5 5e 5e 08 1f e8 13 eb c5 5e 5e 09 1e e8 0b eb c5 5e 5e 0a 1d e8 03 eb c5 5e 5e 0b 1c e8 fb ea c5 5e 5e 0c 1b e8 f3 ea c5 5e 5e 0d 1a e8 eb ea c5 5e 5e 0e 19 e8 e3 ea c5 5e 5e 0f 18 e8 db ea c5 5e 5e 10 17 e8 d3 ea c5 5e 5e 11 16 e8 cb ea c5 5e 5e 12 15 e8 c3 ea c5 5e 5e 13 14 e8 bb ea c5 5e 5e 14 13 e8 b3 ea c5 5e 5e 15 12 e8 ab ea c5 5e 5e 16 11 e8 a3 ea c5 5e 5e 17 10 e8 9b ea c5 5e 5e 18 0f e8 93 ea c5 5e 5e 19 0e e8 8b ea c5 5e 5e 1a 0d e8 83 ea c5 5e 5e 1b 0c e8 7b ea c5 5e 5e 1c 0b e8 73 ea c5 5e 5e 1d 0a e8 6b ea c5 5e 5e 1e 09 e8 63 ea c5 5e 5e 1f 08 e8 5b ea c5 5e 5e 20 07 e8 53 ea c5 5e 5e 21 06 e8 4b ea c5 5e 5e 22 05 e8 43 ea c5 5e 5e 23 04 e8 3b ea c5 5e 5e 24 03 e8 33 ea c5 5e 5e 25 02 e8 2b ea c5 5e 5e 26 01 e8 23 ea c5 5e 5e 27 00 80 0c a2 c8 f7 7f 00 00 b0 d9 a0 c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 23 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
12        | 7ff7c8606c30h   | 39      | hex://logix/bitvector.ops?nand#nand_g[8u]()                                                                   | BitVector<byte> nand<byte>(BitVector<byte> x, BitVector<byte> y)                                              | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 23 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
13        | 7ff7c8606c60h   | 39      | hex://logix/bitvector.ops?nand#nand_g[16u]()                                                                  | BitVector<ushort> nand<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                      | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 23 c2 f7 d0 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
14        | 7ff7c8606c90h   | 1768    | hex://logix/bitvector.ops?nand#nand_g[32u]()                                                                  | BitVector<uint> nand<uint>(BitVector<uint> x, BitVector<uint> y)                                              | 0f 1f 44 00 00 23 d1 8b c2 f7 d0 c3 19 00 00 00 40 00 00 00 00 00 00 00 e8 da a0 c8 f7 7f 00 00 0f 1f 44 00 00 48 23 d1 48 8b c2 48 f7 d0 c3 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 6b e9 c5 5e 5e 00 27 e8 63 e9 c5 5e 5e 01 26 e8 5b e9 c5 5e 5e 02 25 e8 53 e9 c5 5e 5e 03 24 e8 4b e9 c5 5e 5e 04 23 e8 43 e9 c5 5e 5e 05 22 e8 3b e9 c5 5e 5e 06 21 e8 33 e9 c5 5e 5e 07 20 e8 2b e9 c5 5e 5e 08 1f e8 23 e9 c5 5e 5e 09 1e e8 1b e9 c5 5e 5e 0a 1d e8 13 e9 c5 5e 5e 0b 1c e8 0b e9 c5 5e 5e 0c 1b e8 03 e9 c5 5e 5e 0d 1a e8 fb e8 c5 5e 5e 0e 19 e8 f3 e8 c5 5e 5e 0f 18 e8 eb e8 c5 5e 5e 10 17 e8 e3 e8 c5 5e 5e 11 16 e8 db e8 c5 5e 5e 12 15 e8 d3 e8 c5 5e 5e 13 14 e8 cb e8 c5 5e 5e 14 13 e8 c3 e8 c5 5e 5e 15 12 e8 bb e8 c5 5e 5e 16 11 e8 b3 e8 c5 5e 5e 17 10 e8 ab e8 c5 5e 5e 18 0f e8 a3 e8 c5 5e 5e 19 0e e8 9b e8 c5 5e 5e 1a 0d e8 93 e8 c5 5e 5e 1b 0c e8 8b e8 c5 5e 5e 1c 0b e8 83 e8 c5 5e 5e 1d 0a e8 7b e8 c5 5e 5e 1e 09 e8 73 e8 c5 5e 5e 1f 08 e8 6b e8 c5 5e 5e 20 07 e8 63 e8 c5 5e 5e 21 06 e8 5b e8 c5 5e 5e 22 05 e8 53 e8 c5 5e 5e 23 04 e8 4b e8 c5 5e 5e 24 03 e8 43 e8 c5 5e 5e 25 02 e8 3b e8 c5 5e 5e 26 01 e8 33 e8 c5 5e 5e 27 00 a0 11 a2 c8 f7 7f 00 00 02 00 00 00 00 00 00 00 e8 1b e8 c5 5e 5e 00 27 e8 13 e8 c5 5e 5e 01 26 e8 0b e8 c5 5e 5e 02 25 e8 03 e8 c5 5e 5e 03 24 e8 fb e7 c5 5e 5e 04 23 e8 f3 e7 c5 5e 5e 05 22 e8 eb e7 c5 5e 5e 06 21 e8 e3 e7 c5 5e 5e 07 20 e8 db e7 c5 5e 5e 08 1f e8 d3 e7 c5 5e 5e 09 1e e8 cb e7 c5 5e 5e 0a 1d e8 c3 e7 c5 5e 5e 0b 1c e8 bb e7 c5 5e 5e 0c 1b e8 b3 e7 c5 5e 5e 0d 1a e8 ab e7 c5 5e 5e 0e 19 e8 a3 e7 c5 5e 5e 0f 18 e8 9b e7 c5 5e 5e 10 17 e8 93 e7 c5 5e 5e 11 16 e8 8b e7 c5 5e 5e 12 15 e8 83 e7 c5 5e 5e 13 14 e8 7b e7 c5 5e 5e 14 13 e8 73 e7 c5 5e 5e 15 12 e8 6b e7 c5 5e 5e 16 11 e8 63 e7 c5 5e 5e 17 10 e8 5b e7 c5 5e 5e 18 0f e8 53 e7 c5 5e 5e 19 0e e8 4b e7 c5 5e 5e 1a 0d e8 43 e7 c5 5e 5e 1b 0c e8 3b e7 c5 5e 5e 1c 0b e8 33 e7 c5 5e 5e 1d 0a e8 2b e7 c5 5e 5e 1e 09 e8 23 e7 c5 5e 5e 1f 08 e8 1b e7 c5 5e 5e 20 07 e8 13 e7 c5 5e 5e 21 06 e8 0b e7 c5 5e 5e 22 05 e8 03 e7 c5 5e 5e 23 04 e8 fb e6 c5 5e 5e 24 03 e8 f3 e6 c5 5e 5e 25 02 e8 eb e6 c5 5e 5e 26 01 e8 e3 e6 c5 5e 5e 27 00 00 16 a2 c8 f7 7f 00 00 02 00 00 00 00 00 00 00 e8 cb e6 c5 5e 5e 00 00 40 19 a2 c8 f7 7f 00 00 e8 bb e6 c5 5e 5e 00 00 a0 19 a2 c8 f7 7f 00 00 e8 ab e6 c5 5e 5e 00 00 00 1a a2 c8 f7 7f 00 00 e8 9b e6 c5 5e 5e 00 00 60 1a a2 c8 f7 7f 00 00 e8 8b e6 c5 5e 5e 00 00 c0 1a a2 c8 f7 7f 00 00 e8 7b e6 c5 5e 5e 00 00 20 1b a2 c8 f7 7f 00 00 e8 6b e6 c5 5e 5e 00 00 80 1b a2 c8 f7 7f 00 00 e8 5b e6 c5 5e 5e 00 27 e8 53 e6 c5 5e 5e 01 26 e8 4b e6 c5 5e 5e 02 25 e8 43 e6 c5 5e 5e 03 24 e8 3b e6 c5 5e 5e 04 23 e8 33 e6 c5 5e 5e 05 22 e8 2b e6 c5 5e 5e 06 21 e8 23 e6 c5 5e 5e 07 20 e8 1b e6 c5 5e 5e 08 1f e8 13 e6 c5 5e 5e 09 1e e8 0b e6 c5 5e 5e 0a 1d e8 03 e6 c5 5e 5e 0b 1c e8 fb e5 c5 5e 5e 0c 1b e8 f3 e5 c5 5e 5e 0d 1a e8 eb e5 c5 5e 5e 0e 19 e8 e3 e5 c5 5e 5e 0f 18 e8 db e5 c5 5e 5e 10 17 e8 d3 e5 c5 5e 5e 11 16 e8 cb e5 c5 5e 5e 12 15 e8 c3 e5 c5 5e 5e 13 14 e8 bb e5 c5 5e 5e 14 13 e8 b3 e5 c5 5e 5e 15 12 e8 ab e5 c5 5e 5e 16 11 e8 a3 e5 c5 5e 5e 17 10 e8 9b e5 c5 5e 5e 18 0f e8 93 e5 c5 5e 5e 19 0e e8 8b e5 c5 5e 5e 1a 0d e8 83 e5 c5 5e 5e 1b 0c e8 7b e5 c5 5e 5e 1c 0b e8 73 e5 c5 5e 5e 1d 0a e8 6b e5 c5 5e 5e 1e 09 e8 63 e5 c5 5e 5e 1f 08 e8 5b e5 c5 5e 5e 20 07 e8 53 e5 c5 5e 5e 21 06 e8 4b e5 c5 5e 5e 22 05 e8 43 e5 c5 5e 5e 23 04 e8 3b e5 c5 5e 5e 24 03 e8 33 e5 c5 5e 5e 25 02 e8 2b e5 c5 5e 5e 26 01 e8 23 e5 c5 5e 5e 27 00 e0 1b a2 c8 f7 7f 00 00 e8 13 e5 c5 5e 5e 00 00 20 1f a2 c8 f7 7f 00 00 e8 03 e5 c5 5e 5e 00 00 80 1f a2 c8 f7 7f 00 00 e8 f3 e4 c5 5e 5e 00 00 e0 1f a2 c8 f7 7f 00 00 e8 e3 e4 c5 5e 5e 00 00 40 20 a2 c8 f7 7f 00 00 e8 d3 e4 c5 5e 5e 00 00 a0 20 a2 c8 f7 7f 00 00 e8 c3 e4 c5 5e 5e 00 27 e8 bb e4 c5 5e 5e 01 26 e8 b3 e4 c5 5e 5e 02 25 e8 ab e4 c5 5e 5e 03 24 e8 a3 e4 c5 5e 5e 04 23 e8 9b e4 c5 5e 5e 05 22 e8 93 e4 c5 5e 5e 06 21 e8 8b e4 c5 5e 5e 07 20 e8 83 e4 c5 5e 5e 08 1f e8 7b e4 c5 5e 5e 09 1e e8 73 e4 c5 5e 5e 0a 1d e8 6b e4 c5 5e 5e 0b 1c e8 63 e4 c5 5e 5e 0c 1b e8 5b e4 c5 5e 5e 0d 1a e8 53 e4 c5 5e 5e 0e 19 e8 4b e4 c5 5e 5e 0f 18 e8 43 e4 c5 5e 5e 10 17 e8 3b e4 c5 5e 5e 11 16 e8 33 e4 c5 5e 5e 12 15 e8 2b e4 c5 5e 5e 13 14 e8 23 e4 c5 5e 5e 14 13 e8 1b e4 c5 5e 5e 15 12 e8 13 e4 c5 5e 5e 16 11 e8 0b e4 c5 5e 5e 17 10 e8 03 e4 c5 5e 5e 18 0f e8 fb e3 c5 5e 5e 19 0e e8 f3 e3 c5 5e 5e 1a 0d e8 eb e3 c5 5e 5e 1b 0c e8 e3 e3 c5 5e 5e 1c 0b e8 db e3 c5 5e 5e 1d 0a e8 d3 e3 c5 5e 5e 1e 09 e8 cb e3 c5 5e 5e 1f 08 e8 c3 e3 c5 5e 5e 20 07 e8 bb e3 c5 5e 5e 21 06 e8 b3 e3 c5 5e 5e 22 05 e8 ab e3 c5 5e 5e 23 04 e8 a3 e3 c5 5e 5e 24 03 e8 9b e3 c5 5e 5e 25 02 e8 93 e3 c5 5e 5e 26 01 e8 8b e3 c5 5e 5e 27 00 00 21 a2 c8 f7 7f 00 00 e8 7b e3 c5 5e 5e 00 00 40 24 a2 c8 f7 7f 00 00 e8 6b e3 c5 5e 5e 00 00 a0 24 a2 c8 f7 7f 00 00 e8 5b e3 c5 5e 5e 00 00 00 25 a2 c8 f7 7f 00 00 e8 4b e3 c5 5e 5e 00 00 60 25 a2 c8 f7 7f 00 00 e8 3b e3 c5 5e 5e 00 00 c0 25 a2 c8 f7 7f 00 00 e8 2b e3 c5 5e 5e 00 00 60 29 a2 c8 f7 7f 00 00 e8 1b e3 c5 5e 5e 00 00 c0 29 a2 c8 f7 7f 00 00 e8 0b e3 c5 5e 5e 00 00 20 2a a2 c8 f7 7f 00 00 e8 fb e2 c5 5e 5e 00 00 80 2a a2 c8 f7 7f 00 00 e8 eb e2 c5 5e 5e 00 00 e0 2a a2 c8 f7 7f 00 00 e8 db e2 c5 5e 5e 00 00 80 2e a2 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
15        | 7ff7c8606cb0h   | 1736    | hex://logix/bitvector.ops?nand#nand_g[64u]()                                                                  | BitVector<ulong> nand<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                          | 0f 1f 44 00 00 48 23 d1 48 8b c2 48 f7 d0 c3 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 6b e9 c5 5e 5e 00 27 e8 63 e9 c5 5e 5e 01 26 e8 5b e9 c5 5e 5e 02 25 e8 53 e9 c5 5e 5e 03 24 e8 4b e9 c5 5e 5e 04 23 e8 43 e9 c5 5e 5e 05 22 e8 3b e9 c5 5e 5e 06 21 e8 33 e9 c5 5e 5e 07 20 e8 2b e9 c5 5e 5e 08 1f e8 23 e9 c5 5e 5e 09 1e e8 1b e9 c5 5e 5e 0a 1d e8 13 e9 c5 5e 5e 0b 1c e8 0b e9 c5 5e 5e 0c 1b e8 03 e9 c5 5e 5e 0d 1a e8 fb e8 c5 5e 5e 0e 19 e8 f3 e8 c5 5e 5e 0f 18 e8 eb e8 c5 5e 5e 10 17 e8 e3 e8 c5 5e 5e 11 16 e8 db e8 c5 5e 5e 12 15 e8 d3 e8 c5 5e 5e 13 14 e8 cb e8 c5 5e 5e 14 13 e8 c3 e8 c5 5e 5e 15 12 e8 bb e8 c5 5e 5e 16 11 e8 b3 e8 c5 5e 5e 17 10 e8 ab e8 c5 5e 5e 18 0f e8 a3 e8 c5 5e 5e 19 0e e8 9b e8 c5 5e 5e 1a 0d e8 93 e8 c5 5e 5e 1b 0c e8 8b e8 c5 5e 5e 1c 0b e8 83 e8 c5 5e 5e 1d 0a e8 7b e8 c5 5e 5e 1e 09 e8 73 e8 c5 5e 5e 1f 08 e8 6b e8 c5 5e 5e 20 07 e8 63 e8 c5 5e 5e 21 06 e8 5b e8 c5 5e 5e 22 05 e8 53 e8 c5 5e 5e 23 04 e8 4b e8 c5 5e 5e 24 03 e8 43 e8 c5 5e 5e 25 02 e8 3b e8 c5 5e 5e 26 01 e8 33 e8 c5 5e 5e 27 00 a0 11 a2 c8 f7 7f 00 00 02 00 00 00 00 00 00 00 e8 1b e8 c5 5e 5e 00 27 e8 13 e8 c5 5e 5e 01 26 e8 0b e8 c5 5e 5e 02 25 e8 03 e8 c5 5e 5e 03 24 e8 fb e7 c5 5e 5e 04 23 e8 f3 e7 c5 5e 5e 05 22 e8 eb e7 c5 5e 5e 06 21 e8 e3 e7 c5 5e 5e 07 20 e8 db e7 c5 5e 5e 08 1f e8 d3 e7 c5 5e 5e 09 1e e8 cb e7 c5 5e 5e 0a 1d e8 c3 e7 c5 5e 5e 0b 1c e8 bb e7 c5 5e 5e 0c 1b e8 b3 e7 c5 5e 5e 0d 1a e8 ab e7 c5 5e 5e 0e 19 e8 a3 e7 c5 5e 5e 0f 18 e8 9b e7 c5 5e 5e 10 17 e8 93 e7 c5 5e 5e 11 16 e8 8b e7 c5 5e 5e 12 15 e8 83 e7 c5 5e 5e 13 14 e8 7b e7 c5 5e 5e 14 13 e8 73 e7 c5 5e 5e 15 12 e8 6b e7 c5 5e 5e 16 11 e8 63 e7 c5 5e 5e 17 10 e8 5b e7 c5 5e 5e 18 0f e8 53 e7 c5 5e 5e 19 0e e8 4b e7 c5 5e 5e 1a 0d e8 43 e7 c5 5e 5e 1b 0c e8 3b e7 c5 5e 5e 1c 0b e8 33 e7 c5 5e 5e 1d 0a e8 2b e7 c5 5e 5e 1e 09 e8 23 e7 c5 5e 5e 1f 08 e8 1b e7 c5 5e 5e 20 07 e8 13 e7 c5 5e 5e 21 06 e8 0b e7 c5 5e 5e 22 05 e8 03 e7 c5 5e 5e 23 04 e8 fb e6 c5 5e 5e 24 03 e8 f3 e6 c5 5e 5e 25 02 e8 eb e6 c5 5e 5e 26 01 e8 e3 e6 c5 5e 5e 27 00 00 16 a2 c8 f7 7f 00 00 02 00 00 00 00 00 00 00 e8 cb e6 c5 5e 5e 00 00 40 19 a2 c8 f7 7f 00 00 e8 bb e6 c5 5e 5e 00 00 a0 19 a2 c8 f7 7f 00 00 e8 ab e6 c5 5e 5e 00 00 00 1a a2 c8 f7 7f 00 00 e8 9b e6 c5 5e 5e 00 00 60 1a a2 c8 f7 7f 00 00 e8 8b e6 c5 5e 5e 00 00 c0 1a a2 c8 f7 7f 00 00 e8 7b e6 c5 5e 5e 00 00 20 1b a2 c8 f7 7f 00 00 e8 6b e6 c5 5e 5e 00 00 80 1b a2 c8 f7 7f 00 00 e8 5b e6 c5 5e 5e 00 27 e8 53 e6 c5 5e 5e 01 26 e8 4b e6 c5 5e 5e 02 25 e8 43 e6 c5 5e 5e 03 24 e8 3b e6 c5 5e 5e 04 23 e8 33 e6 c5 5e 5e 05 22 e8 2b e6 c5 5e 5e 06 21 e8 23 e6 c5 5e 5e 07 20 e8 1b e6 c5 5e 5e 08 1f e8 13 e6 c5 5e 5e 09 1e e8 0b e6 c5 5e 5e 0a 1d e8 03 e6 c5 5e 5e 0b 1c e8 fb e5 c5 5e 5e 0c 1b e8 f3 e5 c5 5e 5e 0d 1a e8 eb e5 c5 5e 5e 0e 19 e8 e3 e5 c5 5e 5e 0f 18 e8 db e5 c5 5e 5e 10 17 e8 d3 e5 c5 5e 5e 11 16 e8 cb e5 c5 5e 5e 12 15 e8 c3 e5 c5 5e 5e 13 14 e8 bb e5 c5 5e 5e 14 13 e8 b3 e5 c5 5e 5e 15 12 e8 ab e5 c5 5e 5e 16 11 e8 a3 e5 c5 5e 5e 17 10 e8 9b e5 c5 5e 5e 18 0f e8 93 e5 c5 5e 5e 19 0e e8 8b e5 c5 5e 5e 1a 0d e8 83 e5 c5 5e 5e 1b 0c e8 7b e5 c5 5e 5e 1c 0b e8 73 e5 c5 5e 5e 1d 0a e8 6b e5 c5 5e 5e 1e 09 e8 63 e5 c5 5e 5e 1f 08 e8 5b e5 c5 5e 5e 20 07 e8 53 e5 c5 5e 5e 21 06 e8 4b e5 c5 5e 5e 22 05 e8 43 e5 c5 5e 5e 23 04 e8 3b e5 c5 5e 5e 24 03 e8 33 e5 c5 5e 5e 25 02 e8 2b e5 c5 5e 5e 26 01 e8 23 e5 c5 5e 5e 27 00 e0 1b a2 c8 f7 7f 00 00 e8 13 e5 c5 5e 5e 00 00 20 1f a2 c8 f7 7f 00 00 e8 03 e5 c5 5e 5e 00 00 80 1f a2 c8 f7 7f 00 00 e8 f3 e4 c5 5e 5e 00 00 e0 1f a2 c8 f7 7f 00 00 e8 e3 e4 c5 5e 5e 00 00 40 20 a2 c8 f7 7f 00 00 e8 d3 e4 c5 5e 5e 00 00 a0 20 a2 c8 f7 7f 00 00 e8 c3 e4 c5 5e 5e 00 27 e8 bb e4 c5 5e 5e 01 26 e8 b3 e4 c5 5e 5e 02 25 e8 ab e4 c5 5e 5e 03 24 e8 a3 e4 c5 5e 5e 04 23 e8 9b e4 c5 5e 5e 05 22 e8 93 e4 c5 5e 5e 06 21 e8 8b e4 c5 5e 5e 07 20 e8 83 e4 c5 5e 5e 08 1f e8 7b e4 c5 5e 5e 09 1e e8 73 e4 c5 5e 5e 0a 1d e8 6b e4 c5 5e 5e 0b 1c e8 63 e4 c5 5e 5e 0c 1b e8 5b e4 c5 5e 5e 0d 1a e8 53 e4 c5 5e 5e 0e 19 e8 4b e4 c5 5e 5e 0f 18 e8 43 e4 c5 5e 5e 10 17 e8 3b e4 c5 5e 5e 11 16 e8 33 e4 c5 5e 5e 12 15 e8 2b e4 c5 5e 5e 13 14 e8 23 e4 c5 5e 5e 14 13 e8 1b e4 c5 5e 5e 15 12 e8 13 e4 c5 5e 5e 16 11 e8 0b e4 c5 5e 5e 17 10 e8 03 e4 c5 5e 5e 18 0f e8 fb e3 c5 5e 5e 19 0e e8 f3 e3 c5 5e 5e 1a 0d e8 eb e3 c5 5e 5e 1b 0c e8 e3 e3 c5 5e 5e 1c 0b e8 db e3 c5 5e 5e 1d 0a e8 d3 e3 c5 5e 5e 1e 09 e8 cb e3 c5 5e 5e 1f 08 e8 c3 e3 c5 5e 5e 20 07 e8 bb e3 c5 5e 5e 21 06 e8 b3 e3 c5 5e 5e 22 05 e8 ab e3 c5 5e 5e 23 04 e8 a3 e3 c5 5e 5e 24 03 e8 9b e3 c5 5e 5e 25 02 e8 93 e3 c5 5e 5e 26 01 e8 8b e3 c5 5e 5e 27 00 00 21 a2 c8 f7 7f 00 00 e8 7b e3 c5 5e 5e 00 00 40 24 a2 c8 f7 7f 00 00 e8 6b e3 c5 5e 5e 00 00 a0 24 a2 c8 f7 7f 00 00 e8 5b e3 c5 5e 5e 00 00 00 25 a2 c8 f7 7f 00 00 e8 4b e3 c5 5e 5e 00 00 60 25 a2 c8 f7 7f 00 00 e8 3b e3 c5 5e 5e 00 00 c0 25 a2 c8 f7 7f 00 00 e8 2b e3 c5 5e 5e 00 00 60 29 a2 c8 f7 7f 00 00 e8 1b e3 c5 5e 5e 00 00 c0 29 a2 c8 f7 7f 00 00 e8 0b e3 c5 5e 5e 00 00 20 2a a2 c8 f7 7f 00 00 e8 fb e2 c5 5e 5e 00 00 80 2a a2 c8 f7 7f 00 00 e8 eb e2 c5 5e 5e 00 00 e0 2a a2 c8 f7 7f 00 00 e8 db e2 c5 5e 5e 00 00 80 2e a2 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
16        | 7ff7c8607380h   | 35      | hex://logix/bitvector.ops?or#or_g[8u]()                                                                       | BitVector<byte> or<byte>(BitVector<byte> x, BitVector<byte> y)                                                | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 0b c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
17        | 7ff7c86073b0h   | 35      | hex://logix/bitvector.ops?or#or_g[16u]()                                                                      | BitVector<ushort> or<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                        | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 0b c2 0f b7 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
18        | 7ff7c86073e0h   | 103     | hex://logix/bitvector.ops?or#or_g[32u]()                                                                      | BitVector<uint> or<uint>(BitVector<uint> x, BitVector<uint> y)                                                | 0f 1f 44 00 00 0b d1 8b c2 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 38 de a0 c8 f7 7f 00 00 0f 1f 44 00 00 48 0b d1 48 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 48 df a0 c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 0b c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
19        | 7ff7c8607400h   | 71      | hex://logix/bitvector.ops?or#or_g[64u]()                                                                      | BitVector<ulong> or<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                            | 0f 1f 44 00 00 48 0b d1 48 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 48 df a0 c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 0b c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
20        | 7ff7c8607420h   | 39      | hex://logix/bitvector.ops?nor#nor_g[8u]()                                                                     | BitVector<byte> nor<byte>(BitVector<byte> x, BitVector<byte> y)                                               | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 0b c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
21        | 7ff7c8607450h   | 39      | hex://logix/bitvector.ops?nor#nor_g[16u]()                                                                    | BitVector<ushort> nor<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                       | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 0b c2 f7 d0 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
22        | 7ff7c8607480h   | 99      | hex://logix/bitvector.ops?nor#nor_g[32u]()                                                                    | BitVector<uint> nor<uint>(BitVector<uint> x, BitVector<uint> y)                                               | 0f 1f 44 00 00 0b d1 8b c2 f7 d0 c3 19 00 00 00 40 00 00 00 00 00 00 00 80 e0 a0 c8 f7 7f 00 00 0f 1f 44 00 00 48 0b d1 48 8b c2 48 f7 d0 c3 00 19 00 00 00 40 00 00 00 90 e1 a0 c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 33 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
23        | 7ff7c86074a0h   | 67      | hex://logix/bitvector.ops?nor#nor_g[64u]()                                                                    | BitVector<ulong> nor<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                           | 0f 1f 44 00 00 48 0b d1 48 8b c2 48 f7 d0 c3 00 19 00 00 00 40 00 00 00 90 e1 a0 c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 33 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
24        | 7ff7c86074c0h   | 35      | hex://logix/bitvector.ops?xor#xor_g[8u]()                                                                     | BitVector<byte> xor<byte>(BitVector<byte> x, BitVector<byte> y)                                               | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 33 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
25        | 7ff7c86074f0h   | 35      | hex://logix/bitvector.ops?xor#xor_g[16u]()                                                                    | BitVector<ushort> xor<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                       | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 33 c2 0f b7 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
26        | 7ff7c8607520h   | 439     | hex://logix/bitvector.ops?xor#xor_g[32u]()                                                                    | BitVector<uint> xor<uint>(BitVector<uint> x, BitVector<uint> y)                                               | 0f 1f 44 00 00 33 d1 8b c2 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 c8 e2 a0 c8 f7 7f 00 00 0f 1f 44 00 00 48 33 d1 48 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 db e0 c5 5e 5e 00 27 e8 d3 e0 c5 5e 5e 01 26 e8 cb e0 c5 5e 5e 02 25 e8 c3 e0 c5 5e 5e 03 24 e8 bb e0 c5 5e 5e 04 23 e8 b3 e0 c5 5e 5e 05 22 e8 ab e0 c5 5e 5e 06 21 e8 a3 e0 c5 5e 5e 07 20 e8 9b e0 c5 5e 5e 08 1f e8 93 e0 c5 5e 5e 09 1e e8 8b e0 c5 5e 5e 0a 1d e8 83 e0 c5 5e 5e 0b 1c e8 7b e0 c5 5e 5e 0c 1b e8 73 e0 c5 5e 5e 0d 1a e8 6b e0 c5 5e 5e 0e 19 e8 63 e0 c5 5e 5e 0f 18 e8 5b e0 c5 5e 5e 10 17 e8 53 e0 c5 5e 5e 11 16 e8 4b e0 c5 5e 5e 12 15 e8 43 e0 c5 5e 5e 13 14 e8 3b e0 c5 5e 5e 14 13 e8 33 e0 c5 5e 5e 15 12 e8 2b e0 c5 5e 5e 16 11 e8 23 e0 c5 5e 5e 17 10 e8 1b e0 c5 5e 5e 18 0f e8 13 e0 c5 5e 5e 19 0e e8 0b e0 c5 5e 5e 1a 0d e8 03 e0 c5 5e 5e 1b 0c e8 fb df c5 5e 5e 1c 0b e8 f3 df c5 5e 5e 1d 0a e8 eb df c5 5e 5e 1e 09 e8 e3 df c5 5e 5e 1f 08 e8 db df c5 5e 5e 20 07 e8 d3 df c5 5e 5e 21 06 e8 cb df c5 5e 5e 22 05 e8 c3 df c5 5e 5e 23 04 e8 bb df c5 5e 5e 24 03 e8 b3 df c5 5e 5e 25 02 e8 ab df c5 5e 5e 26 01 e8 a3 df c5 5e 5e 27 00 20 26 a2 c8 f7 7f 00 00 d8 e3 a0 c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 33 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
27        | 7ff7c8607540h   | 407     | hex://logix/bitvector.ops?xor#xor_g[64u]()                                                                    | BitVector<ulong> xor<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                           | 0f 1f 44 00 00 48 33 d1 48 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 db e0 c5 5e 5e 00 27 e8 d3 e0 c5 5e 5e 01 26 e8 cb e0 c5 5e 5e 02 25 e8 c3 e0 c5 5e 5e 03 24 e8 bb e0 c5 5e 5e 04 23 e8 b3 e0 c5 5e 5e 05 22 e8 ab e0 c5 5e 5e 06 21 e8 a3 e0 c5 5e 5e 07 20 e8 9b e0 c5 5e 5e 08 1f e8 93 e0 c5 5e 5e 09 1e e8 8b e0 c5 5e 5e 0a 1d e8 83 e0 c5 5e 5e 0b 1c e8 7b e0 c5 5e 5e 0c 1b e8 73 e0 c5 5e 5e 0d 1a e8 6b e0 c5 5e 5e 0e 19 e8 63 e0 c5 5e 5e 0f 18 e8 5b e0 c5 5e 5e 10 17 e8 53 e0 c5 5e 5e 11 16 e8 4b e0 c5 5e 5e 12 15 e8 43 e0 c5 5e 5e 13 14 e8 3b e0 c5 5e 5e 14 13 e8 33 e0 c5 5e 5e 15 12 e8 2b e0 c5 5e 5e 16 11 e8 23 e0 c5 5e 5e 17 10 e8 1b e0 c5 5e 5e 18 0f e8 13 e0 c5 5e 5e 19 0e e8 0b e0 c5 5e 5e 1a 0d e8 03 e0 c5 5e 5e 1b 0c e8 fb df c5 5e 5e 1c 0b e8 f3 df c5 5e 5e 1d 0a e8 eb df c5 5e 5e 1e 09 e8 e3 df c5 5e 5e 1f 08 e8 db df c5 5e 5e 20 07 e8 d3 df c5 5e 5e 21 06 e8 cb df c5 5e 5e 22 05 e8 c3 df c5 5e 5e 23 04 e8 bb df c5 5e 5e 24 03 e8 b3 df c5 5e 5e 25 02 e8 ab df c5 5e 5e 26 01 e8 a3 df c5 5e 5e 27 00 20 26 a2 c8 f7 7f 00 00 d8 e3 a0 c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 33 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
28        | 7ff7c86076b0h   | 39      | hex://logix/bitvector.ops?xnor#xnor_g[8u]()                                                                   | BitVector<byte> xnor<byte>(BitVector<byte> x, BitVector<byte> y)                                              | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 33 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
29        | 7ff7c86076e0h   | 39      | hex://logix/bitvector.ops?xnor#xnor_g[16u]()                                                                  | BitVector<ushort> xnor<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                      | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 33 c2 f7 d0 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
30        | 7ff7c8607710h   | 1432    | hex://logix/bitvector.ops?xnor#xnor_g[32u]()                                                                  | BitVector<uint> xnor<uint>(BitVector<uint> x, BitVector<uint> y)                                              | 0f 1f 44 00 00 33 d1 8b c2 f7 d0 c3 19 00 00 00 40 00 00 00 00 00 00 00 10 e5 a0 c8 f7 7f 00 00 0f 1f 44 00 00 48 33 d1 48 8b c2 48 f7 d0 c3 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 eb de c5 5e 5e 00 27 e8 e3 de c5 5e 5e 01 26 e8 db de c5 5e 5e 02 25 e8 d3 de c5 5e 5e 03 24 e8 cb de c5 5e 5e 04 23 e8 c3 de c5 5e 5e 05 22 e8 bb de c5 5e 5e 06 21 e8 b3 de c5 5e 5e 07 20 e8 ab de c5 5e 5e 08 1f e8 a3 de c5 5e 5e 09 1e e8 9b de c5 5e 5e 0a 1d e8 93 de c5 5e 5e 0b 1c e8 8b de c5 5e 5e 0c 1b e8 83 de c5 5e 5e 0d 1a e8 7b de c5 5e 5e 0e 19 e8 73 de c5 5e 5e 0f 18 e8 6b de c5 5e 5e 10 17 e8 63 de c5 5e 5e 11 16 e8 5b de c5 5e 5e 12 15 e8 53 de c5 5e 5e 13 14 e8 4b de c5 5e 5e 14 13 e8 43 de c5 5e 5e 15 12 e8 3b de c5 5e 5e 16 11 e8 33 de c5 5e 5e 17 10 e8 2b de c5 5e 5e 18 0f e8 23 de c5 5e 5e 19 0e e8 1b de c5 5e 5e 1a 0d e8 13 de c5 5e 5e 1b 0c e8 0b de c5 5e 5e 1c 0b e8 03 de c5 5e 5e 1d 0a e8 fb dd c5 5e 5e 1e 09 e8 f3 dd c5 5e 5e 1f 08 e8 eb dd c5 5e 5e 20 07 e8 e3 dd c5 5e 5e 21 06 e8 db dd c5 5e 5e 22 05 e8 d3 dd c5 5e 5e 23 04 e8 cb dd c5 5e 5e 24 03 e8 c3 dd c5 5e 5e 25 02 e8 bb dd c5 5e 5e 26 01 e8 b3 dd c5 5e 5e 27 00 40 2b a2 c8 f7 7f 00 00 02 00 00 00 00 00 00 00 e8 9b dd c5 5e 5e 00 00 e0 2e a2 c8 f7 7f 00 00 e8 8b dd c5 5e 5e 00 00 40 2f a2 c8 f7 7f 00 00 e8 7b dd c5 5e 5e 00 00 a0 2f a2 c8 f7 7f 00 00 e8 6b dd c5 5e 5e 00 00 00 30 a2 c8 f7 7f 00 00 e8 5b dd c5 5e 5e 00 27 e8 53 dd c5 5e 5e 01 26 e8 4b dd c5 5e 5e 02 25 e8 43 dd c5 5e 5e 03 24 e8 3b dd c5 5e 5e 04 23 e8 33 dd c5 5e 5e 05 22 e8 2b dd c5 5e 5e 06 21 e8 23 dd c5 5e 5e 07 20 e8 1b dd c5 5e 5e 08 1f e8 13 dd c5 5e 5e 09 1e e8 0b dd c5 5e 5e 0a 1d e8 03 dd c5 5e 5e 0b 1c e8 fb dc c5 5e 5e 0c 1b e8 f3 dc c5 5e 5e 0d 1a e8 eb dc c5 5e 5e 0e 19 e8 e3 dc c5 5e 5e 0f 18 e8 db dc c5 5e 5e 10 17 e8 d3 dc c5 5e 5e 11 16 e8 cb dc c5 5e 5e 12 15 e8 c3 dc c5 5e 5e 13 14 e8 bb dc c5 5e 5e 14 13 e8 b3 dc c5 5e 5e 15 12 e8 ab dc c5 5e 5e 16 11 e8 a3 dc c5 5e 5e 17 10 e8 9b dc c5 5e 5e 18 0f e8 93 dc c5 5e 5e 19 0e e8 8b dc c5 5e 5e 1a 0d e8 83 dc c5 5e 5e 1b 0c e8 7b dc c5 5e 5e 1c 0b e8 73 dc c5 5e 5e 1d 0a e8 6b dc c5 5e 5e 1e 09 e8 63 dc c5 5e 5e 1f 08 e8 5b dc c5 5e 5e 20 07 e8 53 dc c5 5e 5e 21 06 e8 4b dc c5 5e 5e 22 05 e8 43 dc c5 5e 5e 23 04 e8 3b dc c5 5e 5e 24 03 e8 33 dc c5 5e 5e 25 02 e8 2b dc c5 5e 5e 26 01 e8 23 dc c5 5e 5e 27 00 60 30 a2 c8 f7 7f 00 00 e8 13 dc c5 5e 5e 00 00 a0 33 a2 c8 f7 7f 00 00 e8 03 dc c5 5e 5e 00 00 00 34 a2 c8 f7 7f 00 00 e8 f3 db c5 5e 5e 00 00 60 34 a2 c8 f7 7f 00 00 e8 e3 db c5 5e 5e 00 00 c0 34 a2 c8 f7 7f 00 00 e8 d3 db c5 5e 5e 00 00 20 35 a2 c8 f7 7f 00 00 e8 c3 db c5 5e 5e 00 27 e8 bb db c5 5e 5e 01 26 e8 b3 db c5 5e 5e 02 25 e8 ab db c5 5e 5e 03 24 e8 a3 db c5 5e 5e 04 23 e8 9b db c5 5e 5e 05 22 e8 93 db c5 5e 5e 06 21 e8 8b db c5 5e 5e 07 20 e8 83 db c5 5e 5e 08 1f e8 7b db c5 5e 5e 09 1e e8 73 db c5 5e 5e 0a 1d e8 6b db c5 5e 5e 0b 1c e8 63 db c5 5e 5e 0c 1b e8 5b db c5 5e 5e 0d 1a e8 53 db c5 5e 5e 0e 19 e8 4b db c5 5e 5e 0f 18 e8 43 db c5 5e 5e 10 17 e8 3b db c5 5e 5e 11 16 e8 33 db c5 5e 5e 12 15 e8 2b db c5 5e 5e 13 14 e8 23 db c5 5e 5e 14 13 e8 1b db c5 5e 5e 15 12 e8 13 db c5 5e 5e 16 11 e8 0b db c5 5e 5e 17 10 e8 03 db c5 5e 5e 18 0f e8 fb da c5 5e 5e 19 0e e8 f3 da c5 5e 5e 1a 0d e8 eb da c5 5e 5e 1b 0c e8 e3 da c5 5e 5e 1c 0b e8 db da c5 5e 5e 1d 0a e8 d3 da c5 5e 5e 1e 09 e8 cb da c5 5e 5e 1f 08 e8 c3 da c5 5e 5e 20 07 e8 bb da c5 5e 5e 21 06 e8 b3 da c5 5e 5e 22 05 e8 ab da c5 5e 5e 23 04 e8 a3 da c5 5e 5e 24 03 e8 9b da c5 5e 5e 25 02 e8 93 da c5 5e 5e 26 01 e8 8b da c5 5e 5e 27 00 80 35 a2 c8 f7 7f 00 00 e8 7b da c5 5e 5e 00 00 c0 38 a2 c8 f7 7f 00 00 e8 6b da c5 5e 5e 00 00 20 39 a2 c8 f7 7f 00 00 e8 5b da c5 5e 5e 00 00 80 39 a2 c8 f7 7f 00 00 e8 4b da c5 5e 5e 00 00 e0 39 a2 c8 f7 7f 00 00 e8 3b da c5 5e 5e 00 00 40 3a a2 c8 f7 7f 00 00 e8 2b da c5 5e 5e 00 00 e0 3d a2 c8 f7 7f 00 00 e8 1b da c5 5e 5e 00 00 40 3e a2 c8 f7 7f 00 00 e8 0b da c5 5e 5e 00 00 a0 3e a2 c8 f7 7f 00 00 e8 fb d9 c5 5e 5e 00 00 00 3f a2 c8 f7 7f 00 00 e8 eb d9 c5 5e 5e 00 00 60 3f a2 c8 f7 7f 00 00 e8 db d9 c5 5e 5e 00 00 00 43 a2 c8 f7 7f 00 00 e8 cb d9 c5 5e 5e 00 00 60 43 a2 c8 f7 7f 00 00 e8 bb d9 c5 5e 5e 00 00 c0 43 a2 c8 f7 7f 00 00 e8 ab d9 c5 5e 5e 00 00 20 44 a2 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
31        | 7ff7c8607730h   | 1400    | hex://logix/bitvector.ops?xnor#xnor_g[64u]()                                                                  | BitVector<ulong> xnor<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                          | 0f 1f 44 00 00 48 33 d1 48 8b c2 48 f7 d0 c3 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 eb de c5 5e 5e 00 27 e8 e3 de c5 5e 5e 01 26 e8 db de c5 5e 5e 02 25 e8 d3 de c5 5e 5e 03 24 e8 cb de c5 5e 5e 04 23 e8 c3 de c5 5e 5e 05 22 e8 bb de c5 5e 5e 06 21 e8 b3 de c5 5e 5e 07 20 e8 ab de c5 5e 5e 08 1f e8 a3 de c5 5e 5e 09 1e e8 9b de c5 5e 5e 0a 1d e8 93 de c5 5e 5e 0b 1c e8 8b de c5 5e 5e 0c 1b e8 83 de c5 5e 5e 0d 1a e8 7b de c5 5e 5e 0e 19 e8 73 de c5 5e 5e 0f 18 e8 6b de c5 5e 5e 10 17 e8 63 de c5 5e 5e 11 16 e8 5b de c5 5e 5e 12 15 e8 53 de c5 5e 5e 13 14 e8 4b de c5 5e 5e 14 13 e8 43 de c5 5e 5e 15 12 e8 3b de c5 5e 5e 16 11 e8 33 de c5 5e 5e 17 10 e8 2b de c5 5e 5e 18 0f e8 23 de c5 5e 5e 19 0e e8 1b de c5 5e 5e 1a 0d e8 13 de c5 5e 5e 1b 0c e8 0b de c5 5e 5e 1c 0b e8 03 de c5 5e 5e 1d 0a e8 fb dd c5 5e 5e 1e 09 e8 f3 dd c5 5e 5e 1f 08 e8 eb dd c5 5e 5e 20 07 e8 e3 dd c5 5e 5e 21 06 e8 db dd c5 5e 5e 22 05 e8 d3 dd c5 5e 5e 23 04 e8 cb dd c5 5e 5e 24 03 e8 c3 dd c5 5e 5e 25 02 e8 bb dd c5 5e 5e 26 01 e8 b3 dd c5 5e 5e 27 00 40 2b a2 c8 f7 7f 00 00 02 00 00 00 00 00 00 00 e8 9b dd c5 5e 5e 00 00 e0 2e a2 c8 f7 7f 00 00 e8 8b dd c5 5e 5e 00 00 40 2f a2 c8 f7 7f 00 00 e8 7b dd c5 5e 5e 00 00 a0 2f a2 c8 f7 7f 00 00 e8 6b dd c5 5e 5e 00 00 00 30 a2 c8 f7 7f 00 00 e8 5b dd c5 5e 5e 00 27 e8 53 dd c5 5e 5e 01 26 e8 4b dd c5 5e 5e 02 25 e8 43 dd c5 5e 5e 03 24 e8 3b dd c5 5e 5e 04 23 e8 33 dd c5 5e 5e 05 22 e8 2b dd c5 5e 5e 06 21 e8 23 dd c5 5e 5e 07 20 e8 1b dd c5 5e 5e 08 1f e8 13 dd c5 5e 5e 09 1e e8 0b dd c5 5e 5e 0a 1d e8 03 dd c5 5e 5e 0b 1c e8 fb dc c5 5e 5e 0c 1b e8 f3 dc c5 5e 5e 0d 1a e8 eb dc c5 5e 5e 0e 19 e8 e3 dc c5 5e 5e 0f 18 e8 db dc c5 5e 5e 10 17 e8 d3 dc c5 5e 5e 11 16 e8 cb dc c5 5e 5e 12 15 e8 c3 dc c5 5e 5e 13 14 e8 bb dc c5 5e 5e 14 13 e8 b3 dc c5 5e 5e 15 12 e8 ab dc c5 5e 5e 16 11 e8 a3 dc c5 5e 5e 17 10 e8 9b dc c5 5e 5e 18 0f e8 93 dc c5 5e 5e 19 0e e8 8b dc c5 5e 5e 1a 0d e8 83 dc c5 5e 5e 1b 0c e8 7b dc c5 5e 5e 1c 0b e8 73 dc c5 5e 5e 1d 0a e8 6b dc c5 5e 5e 1e 09 e8 63 dc c5 5e 5e 1f 08 e8 5b dc c5 5e 5e 20 07 e8 53 dc c5 5e 5e 21 06 e8 4b dc c5 5e 5e 22 05 e8 43 dc c5 5e 5e 23 04 e8 3b dc c5 5e 5e 24 03 e8 33 dc c5 5e 5e 25 02 e8 2b dc c5 5e 5e 26 01 e8 23 dc c5 5e 5e 27 00 60 30 a2 c8 f7 7f 00 00 e8 13 dc c5 5e 5e 00 00 a0 33 a2 c8 f7 7f 00 00 e8 03 dc c5 5e 5e 00 00 00 34 a2 c8 f7 7f 00 00 e8 f3 db c5 5e 5e 00 00 60 34 a2 c8 f7 7f 00 00 e8 e3 db c5 5e 5e 00 00 c0 34 a2 c8 f7 7f 00 00 e8 d3 db c5 5e 5e 00 00 20 35 a2 c8 f7 7f 00 00 e8 c3 db c5 5e 5e 00 27 e8 bb db c5 5e 5e 01 26 e8 b3 db c5 5e 5e 02 25 e8 ab db c5 5e 5e 03 24 e8 a3 db c5 5e 5e 04 23 e8 9b db c5 5e 5e 05 22 e8 93 db c5 5e 5e 06 21 e8 8b db c5 5e 5e 07 20 e8 83 db c5 5e 5e 08 1f e8 7b db c5 5e 5e 09 1e e8 73 db c5 5e 5e 0a 1d e8 6b db c5 5e 5e 0b 1c e8 63 db c5 5e 5e 0c 1b e8 5b db c5 5e 5e 0d 1a e8 53 db c5 5e 5e 0e 19 e8 4b db c5 5e 5e 0f 18 e8 43 db c5 5e 5e 10 17 e8 3b db c5 5e 5e 11 16 e8 33 db c5 5e 5e 12 15 e8 2b db c5 5e 5e 13 14 e8 23 db c5 5e 5e 14 13 e8 1b db c5 5e 5e 15 12 e8 13 db c5 5e 5e 16 11 e8 0b db c5 5e 5e 17 10 e8 03 db c5 5e 5e 18 0f e8 fb da c5 5e 5e 19 0e e8 f3 da c5 5e 5e 1a 0d e8 eb da c5 5e 5e 1b 0c e8 e3 da c5 5e 5e 1c 0b e8 db da c5 5e 5e 1d 0a e8 d3 da c5 5e 5e 1e 09 e8 cb da c5 5e 5e 1f 08 e8 c3 da c5 5e 5e 20 07 e8 bb da c5 5e 5e 21 06 e8 b3 da c5 5e 5e 22 05 e8 ab da c5 5e 5e 23 04 e8 a3 da c5 5e 5e 24 03 e8 9b da c5 5e 5e 25 02 e8 93 da c5 5e 5e 26 01 e8 8b da c5 5e 5e 27 00 80 35 a2 c8 f7 7f 00 00 e8 7b da c5 5e 5e 00 00 c0 38 a2 c8 f7 7f 00 00 e8 6b da c5 5e 5e 00 00 20 39 a2 c8 f7 7f 00 00 e8 5b da c5 5e 5e 00 00 80 39 a2 c8 f7 7f 00 00 e8 4b da c5 5e 5e 00 00 e0 39 a2 c8 f7 7f 00 00 e8 3b da c5 5e 5e 00 00 40 3a a2 c8 f7 7f 00 00 e8 2b da c5 5e 5e 00 00 e0 3d a2 c8 f7 7f 00 00 e8 1b da c5 5e 5e 00 00 40 3e a2 c8 f7 7f 00 00 e8 0b da c5 5e 5e 00 00 a0 3e a2 c8 f7 7f 00 00 e8 fb d9 c5 5e 5e 00 00 00 3f a2 c8 f7 7f 00 00 e8 eb d9 c5 5e 5e 00 00 60 3f a2 c8 f7 7f 00 00 e8 db d9 c5 5e 5e 00 00 00 43 a2 c8 f7 7f 00 00 e8 cb d9 c5 5e 5e 00 00 60 43 a2 c8 f7 7f 00 00 e8 bb d9 c5 5e 5e 00 00 c0 43 a2 c8 f7 7f 00 00 e8 ab d9 c5 5e 5e 00 00 20 44 a2 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
32        | 7ff7c8607cb0h   | 291     | hex://logix/bitvector.ops?left#left_g[8u]()                                                                   | BitVector<byte> left<byte>(BitVector<byte> x, BitVector<byte> y)                                              | 0f 1f 44 00 00 89 54 24 10 0f b6 c1 c3 00 00 00 19 00 00 00 40 00 00 00 88 e6 a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b7 c1 c3 00 00 00 19 00 00 00 40 00 00 00 f0 e6 a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 8b c1 c3 19 00 00 00 40 00 00 00 00 00 00 00 58 e7 a0 c8 f7 7f 00 00 0f 1f 44 00 00 48 89 54 24 10 48 8b c1 c3 00 00 19 00 00 00 40 00 00 00 68 e8 a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b6 c2 c3 00 00 00 19 00 00 00 40 00 00 00 d0 e8 a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 c3 00 00 00 19 00 00 00 40 00 00 00 38 e9 a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 a0 e9 a0 c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 b0 ea a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
33        | 7ff7c8607cd0h   | 259     | hex://logix/bitvector.ops?left#left_g[16u]()                                                                  | BitVector<ushort> left<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                      | 0f 1f 44 00 00 89 54 24 10 0f b7 c1 c3 00 00 00 19 00 00 00 40 00 00 00 f0 e6 a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 8b c1 c3 19 00 00 00 40 00 00 00 00 00 00 00 58 e7 a0 c8 f7 7f 00 00 0f 1f 44 00 00 48 89 54 24 10 48 8b c1 c3 00 00 19 00 00 00 40 00 00 00 68 e8 a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b6 c2 c3 00 00 00 19 00 00 00 40 00 00 00 d0 e8 a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 c3 00 00 00 19 00 00 00 40 00 00 00 38 e9 a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 a0 e9 a0 c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 b0 ea a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
34        | 7ff7c8607cf0h   | 227     | hex://logix/bitvector.ops?left#left_g[32u]()                                                                  | BitVector<uint> left<uint>(BitVector<uint> x, BitVector<uint> y)                                              | 0f 1f 44 00 00 89 54 24 10 8b c1 c3 19 00 00 00 40 00 00 00 00 00 00 00 58 e7 a0 c8 f7 7f 00 00 0f 1f 44 00 00 48 89 54 24 10 48 8b c1 c3 00 00 19 00 00 00 40 00 00 00 68 e8 a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b6 c2 c3 00 00 00 19 00 00 00 40 00 00 00 d0 e8 a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 c3 00 00 00 19 00 00 00 40 00 00 00 38 e9 a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 a0 e9 a0 c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 b0 ea a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
35        | 7ff7c8607d10h   | 195     | hex://logix/bitvector.ops?left#left_g[64u]()                                                                  | BitVector<ulong> left<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                          | 0f 1f 44 00 00 48 89 54 24 10 48 8b c1 c3 00 00 19 00 00 00 40 00 00 00 68 e8 a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b6 c2 c3 00 00 00 19 00 00 00 40 00 00 00 d0 e8 a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 c3 00 00 00 19 00 00 00 40 00 00 00 38 e9 a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 a0 e9 a0 c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 b0 ea a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
36        | 7ff7c8607d30h   | 163     | hex://logix/bitvector.ops?right#right_g[8u]()                                                                 | BitVector<byte> right<byte>(BitVector<byte> x, BitVector<byte> y)                                             | 0f 1f 44 00 00 89 4c 24 08 0f b6 c2 c3 00 00 00 19 00 00 00 40 00 00 00 d0 e8 a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 c3 00 00 00 19 00 00 00 40 00 00 00 38 e9 a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 a0 e9 a0 c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 b0 ea a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
37        | 7ff7c8607d50h   | 131     | hex://logix/bitvector.ops?right#right_g[16u]()                                                                | BitVector<ushort> right<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                     | 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 c3 00 00 00 19 00 00 00 40 00 00 00 38 e9 a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 a0 e9 a0 c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 b0 ea a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
38        | 7ff7c8607d70h   | 99      | hex://logix/bitvector.ops?right#right_g[32u]()                                                                | BitVector<uint> right<uint>(BitVector<uint> x, BitVector<uint> y)                                             | 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 a0 e9 a0 c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 b0 ea a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
39        | 7ff7c8607d90h   | 67      | hex://logix/bitvector.ops?right#right_g[64u]()                                                                | BitVector<ulong> right<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                         | 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 b0 ea a0 c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
40        | 7ff7c8607db0h   | 35      | hex://logix/bitvector.ops?lnot#lnot_g[8u]()                                                                   | BitVector<byte> lnot<byte>(BitVector<byte> x, BitVector<byte> y)                                              | 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
41        | 7ff7c8607de0h   | 35      | hex://logix/bitvector.ops?lnot#lnot_g[16u]()                                                                  | BitVector<ushort> lnot<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                      | 0f 1f 44 00 00 89 54 24 10 0f b7 c1 f7 d0 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
42        | 7ff7c8607e10h   | 408     | hex://logix/bitvector.ops?lnot#lnot_g[32u]()                                                                  | BitVector<uint> lnot<uint>(BitVector<uint> x, BitVector<uint> y)                                              | 0f 1f 44 00 00 89 54 24 10 8b c1 f7 d0 c3 00 00 19 00 00 00 40 00 00 00 e8 eb a0 c8 f7 7f 00 00 0f 1f 44 00 00 48 89 54 24 10 48 8b c1 48 f7 d0 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 e3 d7 c5 5e 5e 00 27 e8 db d7 c5 5e 5e 01 26 e8 d3 d7 c5 5e 5e 02 25 e8 cb d7 c5 5e 5e 03 24 e8 c3 d7 c5 5e 5e 04 23 e8 bb d7 c5 5e 5e 05 22 e8 b3 d7 c5 5e 5e 06 21 e8 ab d7 c5 5e 5e 07 20 e8 a3 d7 c5 5e 5e 08 1f e8 9b d7 c5 5e 5e 09 1e e8 93 d7 c5 5e 5e 0a 1d e8 8b d7 c5 5e 5e 0b 1c e8 83 d7 c5 5e 5e 0c 1b e8 7b d7 c5 5e 5e 0d 1a e8 73 d7 c5 5e 5e 0e 19 e8 6b d7 c5 5e 5e 0f 18 e8 63 d7 c5 5e 5e 10 17 e8 5b d7 c5 5e 5e 11 16 e8 53 d7 c5 5e 5e 12 15 e8 4b d7 c5 5e 5e 13 14 e8 43 d7 c5 5e 5e 14 13 e8 3b d7 c5 5e 5e 15 12 e8 33 d7 c5 5e 5e 16 11 e8 2b d7 c5 5e 5e 17 10 e8 23 d7 c5 5e 5e 18 0f e8 1b d7 c5 5e 5e 19 0e e8 13 d7 c5 5e 5e 1a 0d e8 0b d7 c5 5e 5e 1b 0c e8 03 d7 c5 5e 5e 1c 0b e8 fb d6 c5 5e 5e 1d 0a e8 f3 d6 c5 5e 5e 1e 09 e8 eb d6 c5 5e 5e 1f 08 e8 e3 d6 c5 5e 5e 20 07 e8 db d6 c5 5e 5e 21 06 e8 d3 d6 c5 5e 5e 22 05 e8 cb d6 c5 5e 5e 23 04 e8 c3 d6 c5 5e 5e 24 03 e8 bb d6 c5 5e 5e 25 02 e8 b3 d6 c5 5e 5e 26 01 e8 ab d6 c5 5e 5e 27 00 a0 3a a2 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
43        | 7ff7c8607e30h   | 376     | hex://logix/bitvector.ops?lnot#lnot_g[64u]()                                                                  | BitVector<ulong> lnot<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                          | 0f 1f 44 00 00 48 89 54 24 10 48 8b c1 48 f7 d0 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 e3 d7 c5 5e 5e 00 27 e8 db d7 c5 5e 5e 01 26 e8 d3 d7 c5 5e 5e 02 25 e8 cb d7 c5 5e 5e 03 24 e8 c3 d7 c5 5e 5e 04 23 e8 bb d7 c5 5e 5e 05 22 e8 b3 d7 c5 5e 5e 06 21 e8 ab d7 c5 5e 5e 07 20 e8 a3 d7 c5 5e 5e 08 1f e8 9b d7 c5 5e 5e 09 1e e8 93 d7 c5 5e 5e 0a 1d e8 8b d7 c5 5e 5e 0b 1c e8 83 d7 c5 5e 5e 0c 1b e8 7b d7 c5 5e 5e 0d 1a e8 73 d7 c5 5e 5e 0e 19 e8 6b d7 c5 5e 5e 0f 18 e8 63 d7 c5 5e 5e 10 17 e8 5b d7 c5 5e 5e 11 16 e8 53 d7 c5 5e 5e 12 15 e8 4b d7 c5 5e 5e 13 14 e8 43 d7 c5 5e 5e 14 13 e8 3b d7 c5 5e 5e 15 12 e8 33 d7 c5 5e 5e 16 11 e8 2b d7 c5 5e 5e 17 10 e8 23 d7 c5 5e 5e 18 0f e8 1b d7 c5 5e 5e 19 0e e8 13 d7 c5 5e 5e 1a 0d e8 0b d7 c5 5e 5e 1b 0c e8 03 d7 c5 5e 5e 1c 0b e8 fb d6 c5 5e 5e 1d 0a e8 f3 d6 c5 5e 5e 1e 09 e8 eb d6 c5 5e 5e 1f 08 e8 e3 d6 c5 5e 5e 20 07 e8 db d6 c5 5e 5e 21 06 e8 d3 d6 c5 5e 5e 22 05 e8 cb d6 c5 5e 5e 23 04 e8 c3 d6 c5 5e 5e 24 03 e8 bb d6 c5 5e 5e 25 02 e8 b3 d6 c5 5e 5e 26 01 e8 ab d6 c5 5e 5e 27 00 a0 3a a2 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
44        | 7ff7c8607fb0h   | 35      | hex://logix/bitvector.ops?rnot#rnot_g[8u]()                                                                   | BitVector<byte> rnot<byte>(BitVector<byte> x, BitVector<byte> y)                                              | 0f 1f 44 00 00 89 4c 24 08 0f b6 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
45        | 7ff7c8607fe0h   | 35      | hex://logix/bitvector.ops?rnot#rnot_g[16u]()                                                                  | BitVector<ushort> rnot<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                      | 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 f7 d0 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
46        | 7ff7c8608010h   | 408     | hex://logix/bitvector.ops?rnot#rnot_g[32u]()                                                                  | BitVector<uint> rnot<uint>(BitVector<uint> x, BitVector<uint> y)                                              | 0f 1f 44 00 00 89 4c 24 08 8b c2 f7 d0 c3 00 00 19 00 00 00 40 00 00 00 30 ee a0 c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 48 f7 d0 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 e3 d5 c5 5e 5e 00 27 e8 db d5 c5 5e 5e 01 26 e8 d3 d5 c5 5e 5e 02 25 e8 cb d5 c5 5e 5e 03 24 e8 c3 d5 c5 5e 5e 04 23 e8 bb d5 c5 5e 5e 05 22 e8 b3 d5 c5 5e 5e 06 21 e8 ab d5 c5 5e 5e 07 20 e8 a3 d5 c5 5e 5e 08 1f e8 9b d5 c5 5e 5e 09 1e e8 93 d5 c5 5e 5e 0a 1d e8 8b d5 c5 5e 5e 0b 1c e8 83 d5 c5 5e 5e 0c 1b e8 7b d5 c5 5e 5e 0d 1a e8 73 d5 c5 5e 5e 0e 19 e8 6b d5 c5 5e 5e 0f 18 e8 63 d5 c5 5e 5e 10 17 e8 5b d5 c5 5e 5e 11 16 e8 53 d5 c5 5e 5e 12 15 e8 4b d5 c5 5e 5e 13 14 e8 43 d5 c5 5e 5e 14 13 e8 3b d5 c5 5e 5e 15 12 e8 33 d5 c5 5e 5e 16 11 e8 2b d5 c5 5e 5e 17 10 e8 23 d5 c5 5e 5e 18 0f e8 1b d5 c5 5e 5e 19 0e e8 13 d5 c5 5e 5e 1a 0d e8 0b d5 c5 5e 5e 1b 0c e8 03 d5 c5 5e 5e 1c 0b e8 fb d4 c5 5e 5e 1d 0a e8 f3 d4 c5 5e 5e 1e 09 e8 eb d4 c5 5e 5e 1f 08 e8 e3 d4 c5 5e 5e 20 07 e8 db d4 c5 5e 5e 21 06 e8 d3 d4 c5 5e 5e 22 05 e8 cb d4 c5 5e 5e 23 04 e8 c3 d4 c5 5e 5e 24 03 e8 bb d4 c5 5e 5e 25 02 e8 b3 d4 c5 5e 5e 26 01 e8 ab d4 c5 5e 5e 27 00 c0 3f a2 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
47        | 7ff7c8608030h   | 376     | hex://logix/bitvector.ops?rnot#rnot_g[64u]()                                                                  | BitVector<ulong> rnot<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                          | 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 48 f7 d0 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 e3 d5 c5 5e 5e 00 27 e8 db d5 c5 5e 5e 01 26 e8 d3 d5 c5 5e 5e 02 25 e8 cb d5 c5 5e 5e 03 24 e8 c3 d5 c5 5e 5e 04 23 e8 bb d5 c5 5e 5e 05 22 e8 b3 d5 c5 5e 5e 06 21 e8 ab d5 c5 5e 5e 07 20 e8 a3 d5 c5 5e 5e 08 1f e8 9b d5 c5 5e 5e 09 1e e8 93 d5 c5 5e 5e 0a 1d e8 8b d5 c5 5e 5e 0b 1c e8 83 d5 c5 5e 5e 0c 1b e8 7b d5 c5 5e 5e 0d 1a e8 73 d5 c5 5e 5e 0e 19 e8 6b d5 c5 5e 5e 0f 18 e8 63 d5 c5 5e 5e 10 17 e8 5b d5 c5 5e 5e 11 16 e8 53 d5 c5 5e 5e 12 15 e8 4b d5 c5 5e 5e 13 14 e8 43 d5 c5 5e 5e 14 13 e8 3b d5 c5 5e 5e 15 12 e8 33 d5 c5 5e 5e 16 11 e8 2b d5 c5 5e 5e 17 10 e8 23 d5 c5 5e 5e 18 0f e8 1b d5 c5 5e 5e 19 0e e8 13 d5 c5 5e 5e 1a 0d e8 0b d5 c5 5e 5e 1b 0c e8 03 d5 c5 5e 5e 1c 0b e8 fb d4 c5 5e 5e 1d 0a e8 f3 d4 c5 5e 5e 1e 09 e8 eb d4 c5 5e 5e 1f 08 e8 e3 d4 c5 5e 5e 20 07 e8 db d4 c5 5e 5e 21 06 e8 d3 d4 c5 5e 5e 22 05 e8 cb d4 c5 5e 5e 23 04 e8 c3 d4 c5 5e 5e 24 03 e8 bb d4 c5 5e 5e 25 02 e8 b3 d4 c5 5e 5e 26 01 e8 ab d4 c5 5e 5e 27 00 c0 3f a2 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
48        | 7ff7c86081b0h   | 39      | hex://logix/bitvector.ops?impl#impl_g[8u]()                                                                   | BitVector<byte> impl<byte>(BitVector<byte> x, BitVector<byte> y)                                              | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 f7 d2 0b c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
49        | 7ff7c86081e0h   | 39      | hex://logix/bitvector.ops?impl#impl_g[16u]()                                                                  | BitVector<ushort> impl<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                      | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 f7 d2 0b c2 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
50        | 7ff7c8608210h   | 1032    | hex://logix/bitvector.ops?impl#impl_g[32u]()                                                                  | BitVector<uint> impl<uint>(BitVector<uint> x, BitVector<uint> y)                                              | 0f 1f 44 00 00 8b c2 f7 d0 0b c1 c3 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 0b d4 c5 5e 5e 00 00 80 44 a2 c8 f7 7f 00 00 e8 fb d3 c5 5e 5e 00 27 e8 f3 d3 c5 5e 5e 01 26 e8 eb d3 c5 5e 5e 02 25 e8 e3 d3 c5 5e 5e 03 24 e8 db d3 c5 5e 5e 04 23 e8 d3 d3 c5 5e 5e 05 22 e8 cb d3 c5 5e 5e 06 21 e8 c3 d3 c5 5e 5e 07 20 e8 bb d3 c5 5e 5e 08 1f e8 b3 d3 c5 5e 5e 09 1e e8 ab d3 c5 5e 5e 0a 1d e8 a3 d3 c5 5e 5e 0b 1c e8 9b d3 c5 5e 5e 0c 1b e8 93 d3 c5 5e 5e 0d 1a e8 8b d3 c5 5e 5e 0e 19 e8 83 d3 c5 5e 5e 0f 18 e8 7b d3 c5 5e 5e 10 17 e8 73 d3 c5 5e 5e 11 16 e8 6b d3 c5 5e 5e 12 15 e8 63 d3 c5 5e 5e 13 14 e8 5b d3 c5 5e 5e 14 13 e8 53 d3 c5 5e 5e 15 12 e8 4b d3 c5 5e 5e 16 11 e8 43 d3 c5 5e 5e 17 10 e8 3b d3 c5 5e 5e 18 0f e8 33 d3 c5 5e 5e 19 0e e8 2b d3 c5 5e 5e 1a 0d e8 23 d3 c5 5e 5e 1b 0c e8 1b d3 c5 5e 5e 1c 0b e8 13 d3 c5 5e 5e 1d 0a e8 0b d3 c5 5e 5e 1e 09 e8 03 d3 c5 5e 5e 1f 08 e8 fb d2 c5 5e 5e 20 07 e8 f3 d2 c5 5e 5e 21 06 e8 eb d2 c5 5e 5e 22 05 e8 e3 d2 c5 5e 5e 23 04 e8 db d2 c5 5e 5e 24 03 e8 d3 d2 c5 5e 5e 25 02 e8 cb d2 c5 5e 5e 26 01 e8 c3 d2 c5 5e 5e 27 00 e0 44 a2 c8 f7 7f 00 00 e8 b3 d2 c5 5e 5e 00 00 20 48 a2 c8 f7 7f 00 00 e8 a3 d2 c5 5e 5e 00 00 80 48 a2 c8 f7 7f 00 00 e8 93 d2 c5 5e 5e 00 00 e0 48 a2 c8 f7 7f 00 00 e8 83 d2 c5 5e 5e 00 00 40 49 a2 c8 f7 7f 00 00 e8 73 d2 c5 5e 5e 00 00 a0 49 a2 c8 f7 7f 00 00 e8 63 d2 c5 5e 5e 00 27 e8 5b d2 c5 5e 5e 01 26 e8 53 d2 c5 5e 5e 02 25 e8 4b d2 c5 5e 5e 03 24 e8 43 d2 c5 5e 5e 04 23 e8 3b d2 c5 5e 5e 05 22 e8 33 d2 c5 5e 5e 06 21 e8 2b d2 c5 5e 5e 07 20 e8 23 d2 c5 5e 5e 08 1f e8 1b d2 c5 5e 5e 09 1e e8 13 d2 c5 5e 5e 0a 1d e8 0b d2 c5 5e 5e 0b 1c e8 03 d2 c5 5e 5e 0c 1b e8 fb d1 c5 5e 5e 0d 1a e8 f3 d1 c5 5e 5e 0e 19 e8 eb d1 c5 5e 5e 0f 18 e8 e3 d1 c5 5e 5e 10 17 e8 db d1 c5 5e 5e 11 16 e8 d3 d1 c5 5e 5e 12 15 e8 cb d1 c5 5e 5e 13 14 e8 c3 d1 c5 5e 5e 14 13 e8 bb d1 c5 5e 5e 15 12 e8 b3 d1 c5 5e 5e 16 11 e8 ab d1 c5 5e 5e 17 10 e8 a3 d1 c5 5e 5e 18 0f e8 9b d1 c5 5e 5e 19 0e e8 93 d1 c5 5e 5e 1a 0d e8 8b d1 c5 5e 5e 1b 0c e8 83 d1 c5 5e 5e 1c 0b e8 7b d1 c5 5e 5e 1d 0a e8 73 d1 c5 5e 5e 1e 09 e8 6b d1 c5 5e 5e 1f 08 e8 63 d1 c5 5e 5e 20 07 e8 5b d1 c5 5e 5e 21 06 e8 53 d1 c5 5e 5e 22 05 e8 4b d1 c5 5e 5e 23 04 e8 43 d1 c5 5e 5e 24 03 e8 3b d1 c5 5e 5e 25 02 e8 33 d1 c5 5e 5e 26 01 e8 2b d1 c5 5e 5e 27 00 00 4a a2 c8 f7 7f 00 00 e8 1b d1 c5 5e 5e 00 00 40 4d a2 c8 f7 7f 00 00 e8 0b d1 c5 5e 5e 00 00 a0 4d a2 c8 f7 7f 00 00 e8 fb d0 c5 5e 5e 00 00 00 4e a2 c8 f7 7f 00 00 e8 eb d0 c5 5e 5e 00 00 60 4e a2 c8 f7 7f 00 00 e8 db d0 c5 5e 5e 00 00 c0 4e a2 c8 f7 7f 00 00 e8 cb d0 c5 5e 5e 00 00 60 52 a2 c8 f7 7f 00 00 e8 bb d0 c5 5e 5e 00 00 c0 52 a2 c8 f7 7f 00 00 e8 ab d0 c5 5e 5e 00 00 20 53 a2 c8 f7 7f 00 00 e8 9b d0 c5 5e 5e 00 00 80 53 a2 c8 f7 7f 00 00 e8 8b d0 c5 5e 5e 00 00 e0 53 a2 c8 f7 7f 00 00 e8 7b d0 c5 5e 5e 00 00 80 57 a2 c8 f7 7f 00 00 e8 6b d0 c5 5e 5e 00 00 e0 57 a2 c8 f7 7f 00 00 e8 5b d0 c5 5e 5e 00 00 40 58 a2 c8 f7 7f 00 00 e8 4b d0 c5 5e 5e 00 00 a0 58 a2 c8 f7 7f 00 00 e8 3b d0 c5 5e 5e 00 00 00 59 a2 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
51        | 7ff7c8608640h   | 71      | hex://logix/bitvector.ops?impl#impl_g[64u]()                                                                  | BitVector<ulong> impl<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                          | 0f 1f 44 00 00 48 8b c2 48 f7 d0 48 0b c1 c3 00 19 00 00 00 40 00 00 00 88 f1 a0 c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 c4 e2 78 f2 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
52        | 7ff7c8608660h   | 39      | hex://logix/bitvector.ops?nonimpl#nonimpl_g[8u]()                                                             | BitVector<byte> nonimpl<byte>(BitVector<byte> x, BitVector<byte> y)                                           | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 c4 e2 78 f2 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
53        | 7ff7c8608690h   | 39      | hex://logix/bitvector.ops?nonimpl#nonimpl_g[16u]()                                                            | BitVector<ushort> nonimpl<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                   | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 c4 e2 78 f2 c2 0f b7 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
54        | 7ff7c86086c0h   | 103     | hex://logix/bitvector.ops?nonimpl#nonimpl_g[32u]()                                                            | BitVector<uint> nonimpl<uint>(BitVector<uint> x, BitVector<uint> y)                                           | 0f 1f 44 00 00 c4 e2 70 f2 c2 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 c0 f2 a0 c8 f7 7f 00 00 0f 1f 44 00 00 c4 e2 f0 f2 c2 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 d0 f3 a0 c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 f7 d0 0b c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
55        | 7ff7c86086e0h   | 71      | hex://logix/bitvector.ops?nonimpl#nonimpl_g[64u]()                                                            | BitVector<ulong> nonimpl<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                       | 0f 1f 44 00 00 c4 e2 f0 f2 c2 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 d0 f3 a0 c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 f7 d0 0b c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
56        | 7ff7c8608700h   | 39      | hex://logix/bitvector.ops?cimpl#cimpl_g[8u]()                                                                 | BitVector<byte> cimpl<byte>(BitVector<byte> x, BitVector<byte> y)                                             | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 f7 d0 0b c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
57        | 7ff7c8608730h   | 39      | hex://logix/bitvector.ops?cimpl#cimpl_g[16u]()                                                                | BitVector<ushort> cimpl<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                     | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 f7 d0 0b c2 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
58        | 7ff7c8608760h   | 439     | hex://logix/bitvector.ops?cimpl#cimpl_g[32u]()                                                                | BitVector<uint> cimpl<uint>(BitVector<uint> x, BitVector<uint> y)                                             | 0f 1f 44 00 00 8b c1 f7 d0 0b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 08 f5 a0 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b c1 48 f7 d0 48 0b c2 c3 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 9b ce c5 5e 5e 00 27 e8 93 ce c5 5e 5e 01 26 e8 8b ce c5 5e 5e 02 25 e8 83 ce c5 5e 5e 03 24 e8 7b ce c5 5e 5e 04 23 e8 73 ce c5 5e 5e 05 22 e8 6b ce c5 5e 5e 06 21 e8 63 ce c5 5e 5e 07 20 e8 5b ce c5 5e 5e 08 1f e8 53 ce c5 5e 5e 09 1e e8 4b ce c5 5e 5e 0a 1d e8 43 ce c5 5e 5e 0b 1c e8 3b ce c5 5e 5e 0c 1b e8 33 ce c5 5e 5e 0d 1a e8 2b ce c5 5e 5e 0e 19 e8 23 ce c5 5e 5e 0f 18 e8 1b ce c5 5e 5e 10 17 e8 13 ce c5 5e 5e 11 16 e8 0b ce c5 5e 5e 12 15 e8 03 ce c5 5e 5e 13 14 e8 fb cd c5 5e 5e 14 13 e8 f3 cd c5 5e 5e 15 12 e8 eb cd c5 5e 5e 16 11 e8 e3 cd c5 5e 5e 17 10 e8 db cd c5 5e 5e 18 0f e8 d3 cd c5 5e 5e 19 0e e8 cb cd c5 5e 5e 1a 0d e8 c3 cd c5 5e 5e 1b 0c e8 bb cd c5 5e 5e 1c 0b e8 b3 cd c5 5e 5e 1d 0a e8 ab cd c5 5e 5e 1e 09 e8 a3 cd c5 5e 5e 1f 08 e8 9b cd c5 5e 5e 20 07 e8 93 cd c5 5e 5e 21 06 e8 8b cd c5 5e 5e 22 05 e8 83 cd c5 5e 5e 23 04 e8 7b cd c5 5e 5e 24 03 e8 73 cd c5 5e 5e 25 02 e8 6b cd c5 5e 5e 26 01 e8 63 cd c5 5e 5e 27 00 20 4f a2 c8 f7 7f 00 00 18 f6 a0 c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 c4 e2 68 f2 c0 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
59        | 7ff7c8608780h   | 407     | hex://logix/bitvector.ops?cimpl#cimpl_g[64u]()                                                                | BitVector<ulong> cimpl<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                         | 0f 1f 44 00 00 48 8b c1 48 f7 d0 48 0b c2 c3 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 9b ce c5 5e 5e 00 27 e8 93 ce c5 5e 5e 01 26 e8 8b ce c5 5e 5e 02 25 e8 83 ce c5 5e 5e 03 24 e8 7b ce c5 5e 5e 04 23 e8 73 ce c5 5e 5e 05 22 e8 6b ce c5 5e 5e 06 21 e8 63 ce c5 5e 5e 07 20 e8 5b ce c5 5e 5e 08 1f e8 53 ce c5 5e 5e 09 1e e8 4b ce c5 5e 5e 0a 1d e8 43 ce c5 5e 5e 0b 1c e8 3b ce c5 5e 5e 0c 1b e8 33 ce c5 5e 5e 0d 1a e8 2b ce c5 5e 5e 0e 19 e8 23 ce c5 5e 5e 0f 18 e8 1b ce c5 5e 5e 10 17 e8 13 ce c5 5e 5e 11 16 e8 0b ce c5 5e 5e 12 15 e8 03 ce c5 5e 5e 13 14 e8 fb cd c5 5e 5e 14 13 e8 f3 cd c5 5e 5e 15 12 e8 eb cd c5 5e 5e 16 11 e8 e3 cd c5 5e 5e 17 10 e8 db cd c5 5e 5e 18 0f e8 d3 cd c5 5e 5e 19 0e e8 cb cd c5 5e 5e 1a 0d e8 c3 cd c5 5e 5e 1b 0c e8 bb cd c5 5e 5e 1c 0b e8 b3 cd c5 5e 5e 1d 0a e8 ab cd c5 5e 5e 1e 09 e8 a3 cd c5 5e 5e 1f 08 e8 9b cd c5 5e 5e 20 07 e8 93 cd c5 5e 5e 21 06 e8 8b cd c5 5e 5e 22 05 e8 83 cd c5 5e 5e 23 04 e8 7b cd c5 5e 5e 24 03 e8 73 cd c5 5e 5e 25 02 e8 6b cd c5 5e 5e 26 01 e8 63 cd c5 5e 5e 27 00 20 4f a2 c8 f7 7f 00 00 18 f6 a0 c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 c4 e2 68 f2 c0 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
60        | 7ff7c86088f0h   | 39      | hex://logix/bitvector.ops?cnonimpl#cnonimpl_g[8u]()                                                           | BitVector<byte> cnonimpl<byte>(BitVector<byte> x, BitVector<byte> y)                                          | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 c4 e2 68 f2 c0 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
61        | 7ff7c8608920h   | 39      | hex://logix/bitvector.ops?cnonimpl#cnonimpl_g[16u]()                                                          | BitVector<ushort> cnonimpl<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                  | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 c4 e2 68 f2 c0 0f b7 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
62        | 7ff7c8608950h   | 451     | hex://logix/bitvector.ops?cnonimpl#cnonimpl_g[32u]()                                                          | BitVector<uint> cnonimpl<uint>(BitVector<uint> x, BitVector<uint> y)                                          | 0f 1f 44 00 00 c4 e2 68 f2 c1 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 50 f7 a0 c8 f7 7f 00 00 0f 1f 44 00 00 c4 e2 e8 f2 c1 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 ab cc c5 5e 5e 00 27 e8 a3 cc c5 5e 5e 01 26 e8 9b cc c5 5e 5e 02 25 e8 93 cc c5 5e 5e 03 24 e8 8b cc c5 5e 5e 04 23 e8 83 cc c5 5e 5e 05 22 e8 7b cc c5 5e 5e 06 21 e8 73 cc c5 5e 5e 07 20 e8 6b cc c5 5e 5e 08 1f e8 63 cc c5 5e 5e 09 1e e8 5b cc c5 5e 5e 0a 1d e8 53 cc c5 5e 5e 0b 1c e8 4b cc c5 5e 5e 0c 1b e8 43 cc c5 5e 5e 0d 1a e8 3b cc c5 5e 5e 0e 19 e8 33 cc c5 5e 5e 0f 18 e8 2b cc c5 5e 5e 10 17 e8 23 cc c5 5e 5e 11 16 e8 1b cc c5 5e 5e 12 15 e8 13 cc c5 5e 5e 13 14 e8 0b cc c5 5e 5e 14 13 e8 03 cc c5 5e 5e 15 12 e8 fb cb c5 5e 5e 16 11 e8 f3 cb c5 5e 5e 17 10 e8 eb cb c5 5e 5e 18 0f e8 e3 cb c5 5e 5e 19 0e e8 db cb c5 5e 5e 1a 0d e8 d3 cb c5 5e 5e 1b 0c e8 cb cb c5 5e 5e 1c 0b e8 c3 cb c5 5e 5e 1d 0a e8 bb cb c5 5e 5e 1e 09 e8 b3 cb c5 5e 5e 1f 08 e8 ab cb c5 5e 5e 20 07 e8 a3 cb c5 5e 5e 21 06 e8 9b cb c5 5e 5e 22 05 e8 93 cb c5 5e 5e 23 04 e8 8b cb c5 5e 5e 24 03 e8 83 cb c5 5e 5e 25 02 e8 7b cb c5 5e 5e 26 01 e8 73 cb c5 5e 5e 27 00 40 54 a2 c8 f7 7f 00 00 60 f8 a0 c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 41 0f b6 c8 0f b6 c0 0f b6 d2 23 d0 c4 e2 78 f2 c1 0b c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
63        | 7ff7c8608970h   | 419     | hex://logix/bitvector.ops?cnonimpl#cnonimpl_g[64u]()                                                          | BitVector<ulong> cnonimpl<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                      | 0f 1f 44 00 00 c4 e2 e8 f2 c1 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 ab cc c5 5e 5e 00 27 e8 a3 cc c5 5e 5e 01 26 e8 9b cc c5 5e 5e 02 25 e8 93 cc c5 5e 5e 03 24 e8 8b cc c5 5e 5e 04 23 e8 83 cc c5 5e 5e 05 22 e8 7b cc c5 5e 5e 06 21 e8 73 cc c5 5e 5e 07 20 e8 6b cc c5 5e 5e 08 1f e8 63 cc c5 5e 5e 09 1e e8 5b cc c5 5e 5e 0a 1d e8 53 cc c5 5e 5e 0b 1c e8 4b cc c5 5e 5e 0c 1b e8 43 cc c5 5e 5e 0d 1a e8 3b cc c5 5e 5e 0e 19 e8 33 cc c5 5e 5e 0f 18 e8 2b cc c5 5e 5e 10 17 e8 23 cc c5 5e 5e 11 16 e8 1b cc c5 5e 5e 12 15 e8 13 cc c5 5e 5e 13 14 e8 0b cc c5 5e 5e 14 13 e8 03 cc c5 5e 5e 15 12 e8 fb cb c5 5e 5e 16 11 e8 f3 cb c5 5e 5e 17 10 e8 eb cb c5 5e 5e 18 0f e8 e3 cb c5 5e 5e 19 0e e8 db cb c5 5e 5e 1a 0d e8 d3 cb c5 5e 5e 1b 0c e8 cb cb c5 5e 5e 1c 0b e8 c3 cb c5 5e 5e 1d 0a e8 bb cb c5 5e 5e 1e 09 e8 b3 cb c5 5e 5e 1f 08 e8 ab cb c5 5e 5e 20 07 e8 a3 cb c5 5e 5e 21 06 e8 9b cb c5 5e 5e 22 05 e8 93 cb c5 5e 5e 23 04 e8 8b cb c5 5e 5e 24 03 e8 83 cb c5 5e 5e 25 02 e8 7b cb c5 5e 5e 26 01 e8 73 cb c5 5e 5e 27 00 40 54 a2 c8 f7 7f 00 00 60 f8 a0 c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 41 0f b6 c8 0f b6 c0 0f b6 d2 23 d0 c4 e2 78 f2 c1 0b c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
64        | 7ff7c8608ae0h   | 51      | hex://logix/bitvector.ops?select#select_g[8u]()                                                               | BitVector<byte> select<byte>(BitVector<byte> x, BitVector<byte> y, BitVector<byte> z)                         | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 41 0f b6 c8 0f b6 c0 0f b6 d2 23 d0 c4 e2 78 f2 c1 0b c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
65        | 7ff7c8608b20h   | 51      | hex://logix/bitvector.ops?select#select_g[16u]()                                                              | BitVector<ushort> select<ushort>(BitVector<ushort> x, BitVector<ushort> y, BitVector<ushort> z)               | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 41 0f b7 c8 0f b7 c0 0f b7 d2 23 d0 c4 e2 78 f2 c1 0b c2 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
66        | 7ff7c8608b60h   | 67      | hex://logix/bitvector.ops?select#select_g[32u]()                                                              | BitVector<uint> select<uint>(BitVector<uint> x, BitVector<uint> y, BitVector<uint> z)                         | 0f 1f 44 00 00 23 d1 c4 c2 70 f2 c0 0b c2 c3 00 19 00 00 00 40 00 00 00 b0 f9 a0 c8 f7 7f 00 00 0f 1f 44 00 00 48 23 d1 c4 c2 f0 f2 c0 48 0b c2 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
67        | 7ff7c8608b80h   | 35      | hex://logix/bitvector.ops?select#select_g[64u]()                                                              | BitVector<ulong> select<ulong>(BitVector<ulong> x, BitVector<ulong> y, BitVector<ulong> z)                    | 0f 1f 44 00 00 48 23 d1 c4 c2 f0 f2 c0 48 0b c2 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
