Sequence  | Address         | Length  | Uri                                                                                                           | OpSig                                                                                                         | Data
0         | 7ff7c8659990h   | 35      | hex://logix/bitvector.ops?true#true_g[8u]()                                                                   | BitVector<byte> true<byte>(BitVector<byte> x, BitVector<byte> y)                                              | 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 b8 ff 00 00 00 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
1         | 7ff7c86599c0h   | 35      | hex://logix/bitvector.ops?true#true_g[16u]()                                                                  | BitVector<ushort> true<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                      | 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 b8 ff ff 00 00 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
2         | 7ff7c86599f0h   | 35      | hex://logix/bitvector.ops?true#true_g[32u]()                                                                  | BitVector<uint> true<uint>(BitVector<uint> x, BitVector<uint> y)                                              | 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 b8 ff ff ff ff c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
3         | 7ff7c8659a20h   | 179     | hex://logix/bitvector.ops?true#true_g[64u]()                                                                  | BitVector<ulong> true<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                          | 0f 1f 44 00 00 48 89 4c 24 08 48 89 54 24 10 48 b8 ff ff ff ff ff ff ff ff c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 30 60 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 98 60 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 00 61 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 68 61 ae c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 89 54 24 10 33 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
4         | 7ff7c8659a50h   | 131     | hex://logix/bitvector.ops?false#false_g[8u]()                                                                 | BitVector<byte> false<byte>(BitVector<byte> x, BitVector<byte> y)                                             | 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 98 60 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 00 61 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 68 61 ae c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 89 54 24 10 33 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
5         | 7ff7c8659a70h   | 99      | hex://logix/bitvector.ops?false#false_g[16u]()                                                                | BitVector<ushort> false<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                     | 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 00 61 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 68 61 ae c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 89 54 24 10 33 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
6         | 7ff7c8659a90h   | 67      | hex://logix/bitvector.ops?false#false_g[32u]()                                                                | BitVector<uint> false<uint>(BitVector<uint> x, BitVector<uint> y)                                             | 0f 1f 44 00 00 89 4c 24 08 89 54 24 10 33 c0 c3 19 00 00 00 40 00 00 00 68 61 ae c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 89 54 24 10 33 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
7         | 7ff7c8659ab0h   | 35      | hex://logix/bitvector.ops?false#false_g[64u]()                                                                | BitVector<ulong> false<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                         | 0f 1f 44 00 00 48 89 4c 24 08 48 89 54 24 10 33 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
8         | 7ff7c8659ae0h   | 35      | hex://logix/bitvector.ops?and#and_g[8u]()                                                                     | BitVector<byte> and<byte>(BitVector<byte> x, BitVector<byte> y)                                               | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 23 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
9         | 7ff7c8659b10h   | 35      | hex://logix/bitvector.ops?and#and_g[16u]()                                                                    | BitVector<ushort> and<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                       | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 23 c2 0f b7 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
10        | 7ff7c8659b40h   | 439     | hex://logix/bitvector.ops?and#and_g[32u]()                                                                    | BitVector<uint> and<uint>(BitVector<uint> x, BitVector<uint> y)                                               | 0f 1f 44 00 00 23 d1 8b c2 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 b0 63 ae c8 f7 7f 00 00 0f 1f 44 00 00 48 23 d1 48 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 bb ba c0 5e 5e 00 27 e8 b3 ba c0 5e 5e 01 26 e8 ab ba c0 5e 5e 02 25 e8 a3 ba c0 5e 5e 03 24 e8 9b ba c0 5e 5e 04 23 e8 93 ba c0 5e 5e 05 22 e8 8b ba c0 5e 5e 06 21 e8 83 ba c0 5e 5e 07 20 e8 7b ba c0 5e 5e 08 1f e8 73 ba c0 5e 5e 09 1e e8 6b ba c0 5e 5e 0a 1d e8 63 ba c0 5e 5e 0b 1c e8 5b ba c0 5e 5e 0c 1b e8 53 ba c0 5e 5e 0d 1a e8 4b ba c0 5e 5e 0e 19 e8 43 ba c0 5e 5e 0f 18 e8 3b ba c0 5e 5e 10 17 e8 33 ba c0 5e 5e 11 16 e8 2b ba c0 5e 5e 12 15 e8 23 ba c0 5e 5e 13 14 e8 1b ba c0 5e 5e 14 13 e8 13 ba c0 5e 5e 15 12 e8 0b ba c0 5e 5e 16 11 e8 03 ba c0 5e 5e 17 10 e8 fb b9 c0 5e 5e 18 0f e8 f3 b9 c0 5e 5e 19 0e e8 eb b9 c0 5e 5e 1a 0d e8 e3 b9 c0 5e 5e 1b 0c e8 db b9 c0 5e 5e 1c 0b e8 d3 b9 c0 5e 5e 1d 0a e8 cb b9 c0 5e 5e 1e 09 e8 c3 b9 c0 5e 5e 1f 08 e8 bb b9 c0 5e 5e 20 07 e8 b3 b9 c0 5e 5e 21 06 e8 ab b9 c0 5e 5e 22 05 e8 a3 b9 c0 5e 5e 23 04 e8 9b b9 c0 5e 5e 24 03 e8 93 b9 c0 5e 5e 25 02 e8 8b b9 c0 5e 5e 26 01 e8 83 b9 c0 5e 5e 27 00 a0 8a af c8 f7 7f 00 00 c0 64 ae c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 23 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
11        | 7ff7c8659b60h   | 407     | hex://logix/bitvector.ops?and#and_g[64u]()                                                                    | BitVector<ulong> and<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                           | 0f 1f 44 00 00 48 23 d1 48 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 bb ba c0 5e 5e 00 27 e8 b3 ba c0 5e 5e 01 26 e8 ab ba c0 5e 5e 02 25 e8 a3 ba c0 5e 5e 03 24 e8 9b ba c0 5e 5e 04 23 e8 93 ba c0 5e 5e 05 22 e8 8b ba c0 5e 5e 06 21 e8 83 ba c0 5e 5e 07 20 e8 7b ba c0 5e 5e 08 1f e8 73 ba c0 5e 5e 09 1e e8 6b ba c0 5e 5e 0a 1d e8 63 ba c0 5e 5e 0b 1c e8 5b ba c0 5e 5e 0c 1b e8 53 ba c0 5e 5e 0d 1a e8 4b ba c0 5e 5e 0e 19 e8 43 ba c0 5e 5e 0f 18 e8 3b ba c0 5e 5e 10 17 e8 33 ba c0 5e 5e 11 16 e8 2b ba c0 5e 5e 12 15 e8 23 ba c0 5e 5e 13 14 e8 1b ba c0 5e 5e 14 13 e8 13 ba c0 5e 5e 15 12 e8 0b ba c0 5e 5e 16 11 e8 03 ba c0 5e 5e 17 10 e8 fb b9 c0 5e 5e 18 0f e8 f3 b9 c0 5e 5e 19 0e e8 eb b9 c0 5e 5e 1a 0d e8 e3 b9 c0 5e 5e 1b 0c e8 db b9 c0 5e 5e 1c 0b e8 d3 b9 c0 5e 5e 1d 0a e8 cb b9 c0 5e 5e 1e 09 e8 c3 b9 c0 5e 5e 1f 08 e8 bb b9 c0 5e 5e 20 07 e8 b3 b9 c0 5e 5e 21 06 e8 ab b9 c0 5e 5e 22 05 e8 a3 b9 c0 5e 5e 23 04 e8 9b b9 c0 5e 5e 24 03 e8 93 b9 c0 5e 5e 25 02 e8 8b b9 c0 5e 5e 26 01 e8 83 b9 c0 5e 5e 27 00 a0 8a af c8 f7 7f 00 00 c0 64 ae c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 23 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
12        | 7ff7c8659cd0h   | 39      | hex://logix/bitvector.ops?nand#nand_g[8u]()                                                                   | BitVector<byte> nand<byte>(BitVector<byte> x, BitVector<byte> y)                                              | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 23 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
13        | 7ff7c8659d00h   | 39      | hex://logix/bitvector.ops?nand#nand_g[16u]()                                                                  | BitVector<ushort> nand<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                      | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 23 c2 f7 d0 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
14        | 7ff7c8659d30h   | 1768    | hex://logix/bitvector.ops?nand#nand_g[32u]()                                                                  | BitVector<uint> nand<uint>(BitVector<uint> x, BitVector<uint> y)                                              | 0f 1f 44 00 00 23 d1 8b c2 f7 d0 c3 19 00 00 00 40 00 00 00 00 00 00 00 f8 65 ae c8 f7 7f 00 00 0f 1f 44 00 00 48 23 d1 48 8b c2 48 f7 d0 c3 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 cb b8 c0 5e 5e 00 27 e8 c3 b8 c0 5e 5e 01 26 e8 bb b8 c0 5e 5e 02 25 e8 b3 b8 c0 5e 5e 03 24 e8 ab b8 c0 5e 5e 04 23 e8 a3 b8 c0 5e 5e 05 22 e8 9b b8 c0 5e 5e 06 21 e8 93 b8 c0 5e 5e 07 20 e8 8b b8 c0 5e 5e 08 1f e8 83 b8 c0 5e 5e 09 1e e8 7b b8 c0 5e 5e 0a 1d e8 73 b8 c0 5e 5e 0b 1c e8 6b b8 c0 5e 5e 0c 1b e8 63 b8 c0 5e 5e 0d 1a e8 5b b8 c0 5e 5e 0e 19 e8 53 b8 c0 5e 5e 0f 18 e8 4b b8 c0 5e 5e 10 17 e8 43 b8 c0 5e 5e 11 16 e8 3b b8 c0 5e 5e 12 15 e8 33 b8 c0 5e 5e 13 14 e8 2b b8 c0 5e 5e 14 13 e8 23 b8 c0 5e 5e 15 12 e8 1b b8 c0 5e 5e 16 11 e8 13 b8 c0 5e 5e 17 10 e8 0b b8 c0 5e 5e 18 0f e8 03 b8 c0 5e 5e 19 0e e8 fb b7 c0 5e 5e 1a 0d e8 f3 b7 c0 5e 5e 1b 0c e8 eb b7 c0 5e 5e 1c 0b e8 e3 b7 c0 5e 5e 1d 0a e8 db b7 c0 5e 5e 1e 09 e8 d3 b7 c0 5e 5e 1f 08 e8 cb b7 c0 5e 5e 20 07 e8 c3 b7 c0 5e 5e 21 06 e8 bb b7 c0 5e 5e 22 05 e8 b3 b7 c0 5e 5e 23 04 e8 ab b7 c0 5e 5e 24 03 e8 a3 b7 c0 5e 5e 25 02 e8 9b b7 c0 5e 5e 26 01 e8 93 b7 c0 5e 5e 27 00 c0 8f af c8 f7 7f 00 00 02 00 00 00 00 00 00 00 e8 7b b7 c0 5e 5e 00 27 e8 73 b7 c0 5e 5e 01 26 e8 6b b7 c0 5e 5e 02 25 e8 63 b7 c0 5e 5e 03 24 e8 5b b7 c0 5e 5e 04 23 e8 53 b7 c0 5e 5e 05 22 e8 4b b7 c0 5e 5e 06 21 e8 43 b7 c0 5e 5e 07 20 e8 3b b7 c0 5e 5e 08 1f e8 33 b7 c0 5e 5e 09 1e e8 2b b7 c0 5e 5e 0a 1d e8 23 b7 c0 5e 5e 0b 1c e8 1b b7 c0 5e 5e 0c 1b e8 13 b7 c0 5e 5e 0d 1a e8 0b b7 c0 5e 5e 0e 19 e8 03 b7 c0 5e 5e 0f 18 e8 fb b6 c0 5e 5e 10 17 e8 f3 b6 c0 5e 5e 11 16 e8 eb b6 c0 5e 5e 12 15 e8 e3 b6 c0 5e 5e 13 14 e8 db b6 c0 5e 5e 14 13 e8 d3 b6 c0 5e 5e 15 12 e8 cb b6 c0 5e 5e 16 11 e8 c3 b6 c0 5e 5e 17 10 e8 bb b6 c0 5e 5e 18 0f e8 b3 b6 c0 5e 5e 19 0e e8 ab b6 c0 5e 5e 1a 0d e8 a3 b6 c0 5e 5e 1b 0c e8 9b b6 c0 5e 5e 1c 0b e8 93 b6 c0 5e 5e 1d 0a e8 8b b6 c0 5e 5e 1e 09 e8 83 b6 c0 5e 5e 1f 08 e8 7b b6 c0 5e 5e 20 07 e8 73 b6 c0 5e 5e 21 06 e8 6b b6 c0 5e 5e 22 05 e8 63 b6 c0 5e 5e 23 04 e8 5b b6 c0 5e 5e 24 03 e8 53 b6 c0 5e 5e 25 02 e8 4b b6 c0 5e 5e 26 01 e8 43 b6 c0 5e 5e 27 00 20 94 af c8 f7 7f 00 00 02 00 00 00 00 00 00 00 e8 2b b6 c0 5e 5e 00 00 60 97 af c8 f7 7f 00 00 e8 1b b6 c0 5e 5e 00 00 c0 97 af c8 f7 7f 00 00 e8 0b b6 c0 5e 5e 00 00 20 98 af c8 f7 7f 00 00 e8 fb b5 c0 5e 5e 00 00 80 98 af c8 f7 7f 00 00 e8 eb b5 c0 5e 5e 00 00 e0 98 af c8 f7 7f 00 00 e8 db b5 c0 5e 5e 00 00 40 99 af c8 f7 7f 00 00 e8 cb b5 c0 5e 5e 00 00 a0 99 af c8 f7 7f 00 00 e8 bb b5 c0 5e 5e 00 27 e8 b3 b5 c0 5e 5e 01 26 e8 ab b5 c0 5e 5e 02 25 e8 a3 b5 c0 5e 5e 03 24 e8 9b b5 c0 5e 5e 04 23 e8 93 b5 c0 5e 5e 05 22 e8 8b b5 c0 5e 5e 06 21 e8 83 b5 c0 5e 5e 07 20 e8 7b b5 c0 5e 5e 08 1f e8 73 b5 c0 5e 5e 09 1e e8 6b b5 c0 5e 5e 0a 1d e8 63 b5 c0 5e 5e 0b 1c e8 5b b5 c0 5e 5e 0c 1b e8 53 b5 c0 5e 5e 0d 1a e8 4b b5 c0 5e 5e 0e 19 e8 43 b5 c0 5e 5e 0f 18 e8 3b b5 c0 5e 5e 10 17 e8 33 b5 c0 5e 5e 11 16 e8 2b b5 c0 5e 5e 12 15 e8 23 b5 c0 5e 5e 13 14 e8 1b b5 c0 5e 5e 14 13 e8 13 b5 c0 5e 5e 15 12 e8 0b b5 c0 5e 5e 16 11 e8 03 b5 c0 5e 5e 17 10 e8 fb b4 c0 5e 5e 18 0f e8 f3 b4 c0 5e 5e 19 0e e8 eb b4 c0 5e 5e 1a 0d e8 e3 b4 c0 5e 5e 1b 0c e8 db b4 c0 5e 5e 1c 0b e8 d3 b4 c0 5e 5e 1d 0a e8 cb b4 c0 5e 5e 1e 09 e8 c3 b4 c0 5e 5e 1f 08 e8 bb b4 c0 5e 5e 20 07 e8 b3 b4 c0 5e 5e 21 06 e8 ab b4 c0 5e 5e 22 05 e8 a3 b4 c0 5e 5e 23 04 e8 9b b4 c0 5e 5e 24 03 e8 93 b4 c0 5e 5e 25 02 e8 8b b4 c0 5e 5e 26 01 e8 83 b4 c0 5e 5e 27 00 00 9a af c8 f7 7f 00 00 e8 73 b4 c0 5e 5e 00 00 40 9d af c8 f7 7f 00 00 e8 63 b4 c0 5e 5e 00 00 a0 9d af c8 f7 7f 00 00 e8 53 b4 c0 5e 5e 00 00 00 9e af c8 f7 7f 00 00 e8 43 b4 c0 5e 5e 00 00 60 9e af c8 f7 7f 00 00 e8 33 b4 c0 5e 5e 00 00 c0 9e af c8 f7 7f 00 00 e8 23 b4 c0 5e 5e 00 27 e8 1b b4 c0 5e 5e 01 26 e8 13 b4 c0 5e 5e 02 25 e8 0b b4 c0 5e 5e 03 24 e8 03 b4 c0 5e 5e 04 23 e8 fb b3 c0 5e 5e 05 22 e8 f3 b3 c0 5e 5e 06 21 e8 eb b3 c0 5e 5e 07 20 e8 e3 b3 c0 5e 5e 08 1f e8 db b3 c0 5e 5e 09 1e e8 d3 b3 c0 5e 5e 0a 1d e8 cb b3 c0 5e 5e 0b 1c e8 c3 b3 c0 5e 5e 0c 1b e8 bb b3 c0 5e 5e 0d 1a e8 b3 b3 c0 5e 5e 0e 19 e8 ab b3 c0 5e 5e 0f 18 e8 a3 b3 c0 5e 5e 10 17 e8 9b b3 c0 5e 5e 11 16 e8 93 b3 c0 5e 5e 12 15 e8 8b b3 c0 5e 5e 13 14 e8 83 b3 c0 5e 5e 14 13 e8 7b b3 c0 5e 5e 15 12 e8 73 b3 c0 5e 5e 16 11 e8 6b b3 c0 5e 5e 17 10 e8 63 b3 c0 5e 5e 18 0f e8 5b b3 c0 5e 5e 19 0e e8 53 b3 c0 5e 5e 1a 0d e8 4b b3 c0 5e 5e 1b 0c e8 43 b3 c0 5e 5e 1c 0b e8 3b b3 c0 5e 5e 1d 0a e8 33 b3 c0 5e 5e 1e 09 e8 2b b3 c0 5e 5e 1f 08 e8 23 b3 c0 5e 5e 20 07 e8 1b b3 c0 5e 5e 21 06 e8 13 b3 c0 5e 5e 22 05 e8 0b b3 c0 5e 5e 23 04 e8 03 b3 c0 5e 5e 24 03 e8 fb b2 c0 5e 5e 25 02 e8 f3 b2 c0 5e 5e 26 01 e8 eb b2 c0 5e 5e 27 00 20 9f af c8 f7 7f 00 00 e8 db b2 c0 5e 5e 00 00 60 a2 af c8 f7 7f 00 00 e8 cb b2 c0 5e 5e 00 00 c0 a2 af c8 f7 7f 00 00 e8 bb b2 c0 5e 5e 00 00 20 a3 af c8 f7 7f 00 00 e8 ab b2 c0 5e 5e 00 00 80 a3 af c8 f7 7f 00 00 e8 9b b2 c0 5e 5e 00 00 e0 a3 af c8 f7 7f 00 00 e8 8b b2 c0 5e 5e 00 00 80 a7 af c8 f7 7f 00 00 e8 7b b2 c0 5e 5e 00 00 e0 a7 af c8 f7 7f 00 00 e8 6b b2 c0 5e 5e 00 00 40 a8 af c8 f7 7f 00 00 e8 5b b2 c0 5e 5e 00 00 a0 a8 af c8 f7 7f 00 00 e8 4b b2 c0 5e 5e 00 00 00 a9 af c8 f7 7f 00 00 e8 3b b2 c0 5e 5e 00 00 a0 ac af c8 f7 7f 00 00 00 00 00 00 00 00 00 00
15        | 7ff7c8659d50h   | 1736    | hex://logix/bitvector.ops?nand#nand_g[64u]()                                                                  | BitVector<ulong> nand<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                          | 0f 1f 44 00 00 48 23 d1 48 8b c2 48 f7 d0 c3 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 cb b8 c0 5e 5e 00 27 e8 c3 b8 c0 5e 5e 01 26 e8 bb b8 c0 5e 5e 02 25 e8 b3 b8 c0 5e 5e 03 24 e8 ab b8 c0 5e 5e 04 23 e8 a3 b8 c0 5e 5e 05 22 e8 9b b8 c0 5e 5e 06 21 e8 93 b8 c0 5e 5e 07 20 e8 8b b8 c0 5e 5e 08 1f e8 83 b8 c0 5e 5e 09 1e e8 7b b8 c0 5e 5e 0a 1d e8 73 b8 c0 5e 5e 0b 1c e8 6b b8 c0 5e 5e 0c 1b e8 63 b8 c0 5e 5e 0d 1a e8 5b b8 c0 5e 5e 0e 19 e8 53 b8 c0 5e 5e 0f 18 e8 4b b8 c0 5e 5e 10 17 e8 43 b8 c0 5e 5e 11 16 e8 3b b8 c0 5e 5e 12 15 e8 33 b8 c0 5e 5e 13 14 e8 2b b8 c0 5e 5e 14 13 e8 23 b8 c0 5e 5e 15 12 e8 1b b8 c0 5e 5e 16 11 e8 13 b8 c0 5e 5e 17 10 e8 0b b8 c0 5e 5e 18 0f e8 03 b8 c0 5e 5e 19 0e e8 fb b7 c0 5e 5e 1a 0d e8 f3 b7 c0 5e 5e 1b 0c e8 eb b7 c0 5e 5e 1c 0b e8 e3 b7 c0 5e 5e 1d 0a e8 db b7 c0 5e 5e 1e 09 e8 d3 b7 c0 5e 5e 1f 08 e8 cb b7 c0 5e 5e 20 07 e8 c3 b7 c0 5e 5e 21 06 e8 bb b7 c0 5e 5e 22 05 e8 b3 b7 c0 5e 5e 23 04 e8 ab b7 c0 5e 5e 24 03 e8 a3 b7 c0 5e 5e 25 02 e8 9b b7 c0 5e 5e 26 01 e8 93 b7 c0 5e 5e 27 00 c0 8f af c8 f7 7f 00 00 02 00 00 00 00 00 00 00 e8 7b b7 c0 5e 5e 00 27 e8 73 b7 c0 5e 5e 01 26 e8 6b b7 c0 5e 5e 02 25 e8 63 b7 c0 5e 5e 03 24 e8 5b b7 c0 5e 5e 04 23 e8 53 b7 c0 5e 5e 05 22 e8 4b b7 c0 5e 5e 06 21 e8 43 b7 c0 5e 5e 07 20 e8 3b b7 c0 5e 5e 08 1f e8 33 b7 c0 5e 5e 09 1e e8 2b b7 c0 5e 5e 0a 1d e8 23 b7 c0 5e 5e 0b 1c e8 1b b7 c0 5e 5e 0c 1b e8 13 b7 c0 5e 5e 0d 1a e8 0b b7 c0 5e 5e 0e 19 e8 03 b7 c0 5e 5e 0f 18 e8 fb b6 c0 5e 5e 10 17 e8 f3 b6 c0 5e 5e 11 16 e8 eb b6 c0 5e 5e 12 15 e8 e3 b6 c0 5e 5e 13 14 e8 db b6 c0 5e 5e 14 13 e8 d3 b6 c0 5e 5e 15 12 e8 cb b6 c0 5e 5e 16 11 e8 c3 b6 c0 5e 5e 17 10 e8 bb b6 c0 5e 5e 18 0f e8 b3 b6 c0 5e 5e 19 0e e8 ab b6 c0 5e 5e 1a 0d e8 a3 b6 c0 5e 5e 1b 0c e8 9b b6 c0 5e 5e 1c 0b e8 93 b6 c0 5e 5e 1d 0a e8 8b b6 c0 5e 5e 1e 09 e8 83 b6 c0 5e 5e 1f 08 e8 7b b6 c0 5e 5e 20 07 e8 73 b6 c0 5e 5e 21 06 e8 6b b6 c0 5e 5e 22 05 e8 63 b6 c0 5e 5e 23 04 e8 5b b6 c0 5e 5e 24 03 e8 53 b6 c0 5e 5e 25 02 e8 4b b6 c0 5e 5e 26 01 e8 43 b6 c0 5e 5e 27 00 20 94 af c8 f7 7f 00 00 02 00 00 00 00 00 00 00 e8 2b b6 c0 5e 5e 00 00 60 97 af c8 f7 7f 00 00 e8 1b b6 c0 5e 5e 00 00 c0 97 af c8 f7 7f 00 00 e8 0b b6 c0 5e 5e 00 00 20 98 af c8 f7 7f 00 00 e8 fb b5 c0 5e 5e 00 00 80 98 af c8 f7 7f 00 00 e8 eb b5 c0 5e 5e 00 00 e0 98 af c8 f7 7f 00 00 e8 db b5 c0 5e 5e 00 00 40 99 af c8 f7 7f 00 00 e8 cb b5 c0 5e 5e 00 00 a0 99 af c8 f7 7f 00 00 e8 bb b5 c0 5e 5e 00 27 e8 b3 b5 c0 5e 5e 01 26 e8 ab b5 c0 5e 5e 02 25 e8 a3 b5 c0 5e 5e 03 24 e8 9b b5 c0 5e 5e 04 23 e8 93 b5 c0 5e 5e 05 22 e8 8b b5 c0 5e 5e 06 21 e8 83 b5 c0 5e 5e 07 20 e8 7b b5 c0 5e 5e 08 1f e8 73 b5 c0 5e 5e 09 1e e8 6b b5 c0 5e 5e 0a 1d e8 63 b5 c0 5e 5e 0b 1c e8 5b b5 c0 5e 5e 0c 1b e8 53 b5 c0 5e 5e 0d 1a e8 4b b5 c0 5e 5e 0e 19 e8 43 b5 c0 5e 5e 0f 18 e8 3b b5 c0 5e 5e 10 17 e8 33 b5 c0 5e 5e 11 16 e8 2b b5 c0 5e 5e 12 15 e8 23 b5 c0 5e 5e 13 14 e8 1b b5 c0 5e 5e 14 13 e8 13 b5 c0 5e 5e 15 12 e8 0b b5 c0 5e 5e 16 11 e8 03 b5 c0 5e 5e 17 10 e8 fb b4 c0 5e 5e 18 0f e8 f3 b4 c0 5e 5e 19 0e e8 eb b4 c0 5e 5e 1a 0d e8 e3 b4 c0 5e 5e 1b 0c e8 db b4 c0 5e 5e 1c 0b e8 d3 b4 c0 5e 5e 1d 0a e8 cb b4 c0 5e 5e 1e 09 e8 c3 b4 c0 5e 5e 1f 08 e8 bb b4 c0 5e 5e 20 07 e8 b3 b4 c0 5e 5e 21 06 e8 ab b4 c0 5e 5e 22 05 e8 a3 b4 c0 5e 5e 23 04 e8 9b b4 c0 5e 5e 24 03 e8 93 b4 c0 5e 5e 25 02 e8 8b b4 c0 5e 5e 26 01 e8 83 b4 c0 5e 5e 27 00 00 9a af c8 f7 7f 00 00 e8 73 b4 c0 5e 5e 00 00 40 9d af c8 f7 7f 00 00 e8 63 b4 c0 5e 5e 00 00 a0 9d af c8 f7 7f 00 00 e8 53 b4 c0 5e 5e 00 00 00 9e af c8 f7 7f 00 00 e8 43 b4 c0 5e 5e 00 00 60 9e af c8 f7 7f 00 00 e8 33 b4 c0 5e 5e 00 00 c0 9e af c8 f7 7f 00 00 e8 23 b4 c0 5e 5e 00 27 e8 1b b4 c0 5e 5e 01 26 e8 13 b4 c0 5e 5e 02 25 e8 0b b4 c0 5e 5e 03 24 e8 03 b4 c0 5e 5e 04 23 e8 fb b3 c0 5e 5e 05 22 e8 f3 b3 c0 5e 5e 06 21 e8 eb b3 c0 5e 5e 07 20 e8 e3 b3 c0 5e 5e 08 1f e8 db b3 c0 5e 5e 09 1e e8 d3 b3 c0 5e 5e 0a 1d e8 cb b3 c0 5e 5e 0b 1c e8 c3 b3 c0 5e 5e 0c 1b e8 bb b3 c0 5e 5e 0d 1a e8 b3 b3 c0 5e 5e 0e 19 e8 ab b3 c0 5e 5e 0f 18 e8 a3 b3 c0 5e 5e 10 17 e8 9b b3 c0 5e 5e 11 16 e8 93 b3 c0 5e 5e 12 15 e8 8b b3 c0 5e 5e 13 14 e8 83 b3 c0 5e 5e 14 13 e8 7b b3 c0 5e 5e 15 12 e8 73 b3 c0 5e 5e 16 11 e8 6b b3 c0 5e 5e 17 10 e8 63 b3 c0 5e 5e 18 0f e8 5b b3 c0 5e 5e 19 0e e8 53 b3 c0 5e 5e 1a 0d e8 4b b3 c0 5e 5e 1b 0c e8 43 b3 c0 5e 5e 1c 0b e8 3b b3 c0 5e 5e 1d 0a e8 33 b3 c0 5e 5e 1e 09 e8 2b b3 c0 5e 5e 1f 08 e8 23 b3 c0 5e 5e 20 07 e8 1b b3 c0 5e 5e 21 06 e8 13 b3 c0 5e 5e 22 05 e8 0b b3 c0 5e 5e 23 04 e8 03 b3 c0 5e 5e 24 03 e8 fb b2 c0 5e 5e 25 02 e8 f3 b2 c0 5e 5e 26 01 e8 eb b2 c0 5e 5e 27 00 20 9f af c8 f7 7f 00 00 e8 db b2 c0 5e 5e 00 00 60 a2 af c8 f7 7f 00 00 e8 cb b2 c0 5e 5e 00 00 c0 a2 af c8 f7 7f 00 00 e8 bb b2 c0 5e 5e 00 00 20 a3 af c8 f7 7f 00 00 e8 ab b2 c0 5e 5e 00 00 80 a3 af c8 f7 7f 00 00 e8 9b b2 c0 5e 5e 00 00 e0 a3 af c8 f7 7f 00 00 e8 8b b2 c0 5e 5e 00 00 80 a7 af c8 f7 7f 00 00 e8 7b b2 c0 5e 5e 00 00 e0 a7 af c8 f7 7f 00 00 e8 6b b2 c0 5e 5e 00 00 40 a8 af c8 f7 7f 00 00 e8 5b b2 c0 5e 5e 00 00 a0 a8 af c8 f7 7f 00 00 e8 4b b2 c0 5e 5e 00 00 00 a9 af c8 f7 7f 00 00 e8 3b b2 c0 5e 5e 00 00 a0 ac af c8 f7 7f 00 00 00 00 00 00 00 00 00 00
16        | 7ff7c865a420h   | 35      | hex://logix/bitvector.ops?or#or_g[8u]()                                                                       | BitVector<byte> or<byte>(BitVector<byte> x, BitVector<byte> y)                                                | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 0b c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
17        | 7ff7c865a450h   | 35      | hex://logix/bitvector.ops?or#or_g[16u]()                                                                      | BitVector<ushort> or<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                        | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 0b c2 0f b7 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
18        | 7ff7c865a480h   | 103     | hex://logix/bitvector.ops?or#or_g[32u]()                                                                      | BitVector<uint> or<uint>(BitVector<uint> x, BitVector<uint> y)                                                | 0f 1f 44 00 00 0b d1 8b c2 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 48 69 ae c8 f7 7f 00 00 0f 1f 44 00 00 48 0b d1 48 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 58 6a ae c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 0b c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
19        | 7ff7c865a4a0h   | 71      | hex://logix/bitvector.ops?or#or_g[64u]()                                                                      | BitVector<ulong> or<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                            | 0f 1f 44 00 00 48 0b d1 48 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 58 6a ae c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 0b c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
20        | 7ff7c865a4c0h   | 39      | hex://logix/bitvector.ops?nor#nor_g[8u]()                                                                     | BitVector<byte> nor<byte>(BitVector<byte> x, BitVector<byte> y)                                               | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 0b c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
21        | 7ff7c865a4f0h   | 39      | hex://logix/bitvector.ops?nor#nor_g[16u]()                                                                    | BitVector<ushort> nor<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                       | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 0b c2 f7 d0 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
22        | 7ff7c865a520h   | 99      | hex://logix/bitvector.ops?nor#nor_g[32u]()                                                                    | BitVector<uint> nor<uint>(BitVector<uint> x, BitVector<uint> y)                                               | 0f 1f 44 00 00 0b d1 8b c2 f7 d0 c3 19 00 00 00 40 00 00 00 00 00 00 00 90 6b ae c8 f7 7f 00 00 0f 1f 44 00 00 48 0b d1 48 8b c2 48 f7 d0 c3 00 19 00 00 00 40 00 00 00 a0 6c ae c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 33 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
23        | 7ff7c865a540h   | 67      | hex://logix/bitvector.ops?nor#nor_g[64u]()                                                                    | BitVector<ulong> nor<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                           | 0f 1f 44 00 00 48 0b d1 48 8b c2 48 f7 d0 c3 00 19 00 00 00 40 00 00 00 a0 6c ae c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 33 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
24        | 7ff7c865a560h   | 35      | hex://logix/bitvector.ops?xor#xor_g[8u]()                                                                     | BitVector<byte> xor<byte>(BitVector<byte> x, BitVector<byte> y)                                               | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 33 c2 0f b6 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
25        | 7ff7c865a590h   | 35      | hex://logix/bitvector.ops?xor#xor_g[16u]()                                                                    | BitVector<ushort> xor<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                       | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 33 c2 0f b7 c0 c3 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
26        | 7ff7c865a5c0h   | 439     | hex://logix/bitvector.ops?xor#xor_g[32u]()                                                                    | BitVector<uint> xor<uint>(BitVector<uint> x, BitVector<uint> y)                                               | 0f 1f 44 00 00 33 d1 8b c2 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 d8 6d ae c8 f7 7f 00 00 0f 1f 44 00 00 48 33 d1 48 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 3b b0 c0 5e 5e 00 27 e8 33 b0 c0 5e 5e 01 26 e8 2b b0 c0 5e 5e 02 25 e8 23 b0 c0 5e 5e 03 24 e8 1b b0 c0 5e 5e 04 23 e8 13 b0 c0 5e 5e 05 22 e8 0b b0 c0 5e 5e 06 21 e8 03 b0 c0 5e 5e 07 20 e8 fb af c0 5e 5e 08 1f e8 f3 af c0 5e 5e 09 1e e8 eb af c0 5e 5e 0a 1d e8 e3 af c0 5e 5e 0b 1c e8 db af c0 5e 5e 0c 1b e8 d3 af c0 5e 5e 0d 1a e8 cb af c0 5e 5e 0e 19 e8 c3 af c0 5e 5e 0f 18 e8 bb af c0 5e 5e 10 17 e8 b3 af c0 5e 5e 11 16 e8 ab af c0 5e 5e 12 15 e8 a3 af c0 5e 5e 13 14 e8 9b af c0 5e 5e 14 13 e8 93 af c0 5e 5e 15 12 e8 8b af c0 5e 5e 16 11 e8 83 af c0 5e 5e 17 10 e8 7b af c0 5e 5e 18 0f e8 73 af c0 5e 5e 19 0e e8 6b af c0 5e 5e 1a 0d e8 63 af c0 5e 5e 1b 0c e8 5b af c0 5e 5e 1c 0b e8 53 af c0 5e 5e 1d 0a e8 4b af c0 5e 5e 1e 09 e8 43 af c0 5e 5e 1f 08 e8 3b af c0 5e 5e 20 07 e8 33 af c0 5e 5e 21 06 e8 2b af c0 5e 5e 22 05 e8 23 af c0 5e 5e 23 04 e8 1b af c0 5e 5e 24 03 e8 13 af c0 5e 5e 25 02 e8 0b af c0 5e 5e 26 01 e8 03 af c0 5e 5e 27 00 40 a4 af c8 f7 7f 00 00 e8 6e ae c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 33 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
27        | 7ff7c865a5e0h   | 407     | hex://logix/bitvector.ops?xor#xor_g[64u]()                                                                    | BitVector<ulong> xor<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                           | 0f 1f 44 00 00 48 33 d1 48 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 3b b0 c0 5e 5e 00 27 e8 33 b0 c0 5e 5e 01 26 e8 2b b0 c0 5e 5e 02 25 e8 23 b0 c0 5e 5e 03 24 e8 1b b0 c0 5e 5e 04 23 e8 13 b0 c0 5e 5e 05 22 e8 0b b0 c0 5e 5e 06 21 e8 03 b0 c0 5e 5e 07 20 e8 fb af c0 5e 5e 08 1f e8 f3 af c0 5e 5e 09 1e e8 eb af c0 5e 5e 0a 1d e8 e3 af c0 5e 5e 0b 1c e8 db af c0 5e 5e 0c 1b e8 d3 af c0 5e 5e 0d 1a e8 cb af c0 5e 5e 0e 19 e8 c3 af c0 5e 5e 0f 18 e8 bb af c0 5e 5e 10 17 e8 b3 af c0 5e 5e 11 16 e8 ab af c0 5e 5e 12 15 e8 a3 af c0 5e 5e 13 14 e8 9b af c0 5e 5e 14 13 e8 93 af c0 5e 5e 15 12 e8 8b af c0 5e 5e 16 11 e8 83 af c0 5e 5e 17 10 e8 7b af c0 5e 5e 18 0f e8 73 af c0 5e 5e 19 0e e8 6b af c0 5e 5e 1a 0d e8 63 af c0 5e 5e 1b 0c e8 5b af c0 5e 5e 1c 0b e8 53 af c0 5e 5e 1d 0a e8 4b af c0 5e 5e 1e 09 e8 43 af c0 5e 5e 1f 08 e8 3b af c0 5e 5e 20 07 e8 33 af c0 5e 5e 21 06 e8 2b af c0 5e 5e 22 05 e8 23 af c0 5e 5e 23 04 e8 1b af c0 5e 5e 24 03 e8 13 af c0 5e 5e 25 02 e8 0b af c0 5e 5e 26 01 e8 03 af c0 5e 5e 27 00 40 a4 af c8 f7 7f 00 00 e8 6e ae c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 33 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
28        | 7ff7c865a750h   | 39      | hex://logix/bitvector.ops?xnor#xnor_g[8u]()                                                                   | BitVector<byte> xnor<byte>(BitVector<byte> x, BitVector<byte> y)                                              | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 33 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
29        | 7ff7c865a780h   | 39      | hex://logix/bitvector.ops?xnor#xnor_g[16u]()                                                                  | BitVector<ushort> xnor<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                      | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 33 c2 f7 d0 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
30        | 7ff7c865a7b0h   | 1432    | hex://logix/bitvector.ops?xnor#xnor_g[32u]()                                                                  | BitVector<uint> xnor<uint>(BitVector<uint> x, BitVector<uint> y)                                              | 0f 1f 44 00 00 33 d1 8b c2 f7 d0 c3 19 00 00 00 40 00 00 00 00 00 00 00 20 70 ae c8 f7 7f 00 00 0f 1f 44 00 00 48 33 d1 48 8b c2 48 f7 d0 c3 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 4b ae c0 5e 5e 00 27 e8 43 ae c0 5e 5e 01 26 e8 3b ae c0 5e 5e 02 25 e8 33 ae c0 5e 5e 03 24 e8 2b ae c0 5e 5e 04 23 e8 23 ae c0 5e 5e 05 22 e8 1b ae c0 5e 5e 06 21 e8 13 ae c0 5e 5e 07 20 e8 0b ae c0 5e 5e 08 1f e8 03 ae c0 5e 5e 09 1e e8 fb ad c0 5e 5e 0a 1d e8 f3 ad c0 5e 5e 0b 1c e8 eb ad c0 5e 5e 0c 1b e8 e3 ad c0 5e 5e 0d 1a e8 db ad c0 5e 5e 0e 19 e8 d3 ad c0 5e 5e 0f 18 e8 cb ad c0 5e 5e 10 17 e8 c3 ad c0 5e 5e 11 16 e8 bb ad c0 5e 5e 12 15 e8 b3 ad c0 5e 5e 13 14 e8 ab ad c0 5e 5e 14 13 e8 a3 ad c0 5e 5e 15 12 e8 9b ad c0 5e 5e 16 11 e8 93 ad c0 5e 5e 17 10 e8 8b ad c0 5e 5e 18 0f e8 83 ad c0 5e 5e 19 0e e8 7b ad c0 5e 5e 1a 0d e8 73 ad c0 5e 5e 1b 0c e8 6b ad c0 5e 5e 1c 0b e8 63 ad c0 5e 5e 1d 0a e8 5b ad c0 5e 5e 1e 09 e8 53 ad c0 5e 5e 1f 08 e8 4b ad c0 5e 5e 20 07 e8 43 ad c0 5e 5e 21 06 e8 3b ad c0 5e 5e 22 05 e8 33 ad c0 5e 5e 23 04 e8 2b ad c0 5e 5e 24 03 e8 23 ad c0 5e 5e 25 02 e8 1b ad c0 5e 5e 26 01 e8 13 ad c0 5e 5e 27 00 60 a9 af c8 f7 7f 00 00 02 00 00 00 00 00 00 00 e8 fb ac c0 5e 5e 00 00 00 ad af c8 f7 7f 00 00 e8 eb ac c0 5e 5e 00 00 60 ad af c8 f7 7f 00 00 e8 db ac c0 5e 5e 00 00 c0 ad af c8 f7 7f 00 00 e8 cb ac c0 5e 5e 00 00 20 ae af c8 f7 7f 00 00 e8 bb ac c0 5e 5e 00 27 e8 b3 ac c0 5e 5e 01 26 e8 ab ac c0 5e 5e 02 25 e8 a3 ac c0 5e 5e 03 24 e8 9b ac c0 5e 5e 04 23 e8 93 ac c0 5e 5e 05 22 e8 8b ac c0 5e 5e 06 21 e8 83 ac c0 5e 5e 07 20 e8 7b ac c0 5e 5e 08 1f e8 73 ac c0 5e 5e 09 1e e8 6b ac c0 5e 5e 0a 1d e8 63 ac c0 5e 5e 0b 1c e8 5b ac c0 5e 5e 0c 1b e8 53 ac c0 5e 5e 0d 1a e8 4b ac c0 5e 5e 0e 19 e8 43 ac c0 5e 5e 0f 18 e8 3b ac c0 5e 5e 10 17 e8 33 ac c0 5e 5e 11 16 e8 2b ac c0 5e 5e 12 15 e8 23 ac c0 5e 5e 13 14 e8 1b ac c0 5e 5e 14 13 e8 13 ac c0 5e 5e 15 12 e8 0b ac c0 5e 5e 16 11 e8 03 ac c0 5e 5e 17 10 e8 fb ab c0 5e 5e 18 0f e8 f3 ab c0 5e 5e 19 0e e8 eb ab c0 5e 5e 1a 0d e8 e3 ab c0 5e 5e 1b 0c e8 db ab c0 5e 5e 1c 0b e8 d3 ab c0 5e 5e 1d 0a e8 cb ab c0 5e 5e 1e 09 e8 c3 ab c0 5e 5e 1f 08 e8 bb ab c0 5e 5e 20 07 e8 b3 ab c0 5e 5e 21 06 e8 ab ab c0 5e 5e 22 05 e8 a3 ab c0 5e 5e 23 04 e8 9b ab c0 5e 5e 24 03 e8 93 ab c0 5e 5e 25 02 e8 8b ab c0 5e 5e 26 01 e8 83 ab c0 5e 5e 27 00 80 ae af c8 f7 7f 00 00 e8 73 ab c0 5e 5e 00 00 c0 b1 af c8 f7 7f 00 00 e8 63 ab c0 5e 5e 00 00 20 b2 af c8 f7 7f 00 00 e8 53 ab c0 5e 5e 00 00 80 b2 af c8 f7 7f 00 00 e8 43 ab c0 5e 5e 00 00 e0 b2 af c8 f7 7f 00 00 e8 33 ab c0 5e 5e 00 00 40 b3 af c8 f7 7f 00 00 e8 23 ab c0 5e 5e 00 27 e8 1b ab c0 5e 5e 01 26 e8 13 ab c0 5e 5e 02 25 e8 0b ab c0 5e 5e 03 24 e8 03 ab c0 5e 5e 04 23 e8 fb aa c0 5e 5e 05 22 e8 f3 aa c0 5e 5e 06 21 e8 eb aa c0 5e 5e 07 20 e8 e3 aa c0 5e 5e 08 1f e8 db aa c0 5e 5e 09 1e e8 d3 aa c0 5e 5e 0a 1d e8 cb aa c0 5e 5e 0b 1c e8 c3 aa c0 5e 5e 0c 1b e8 bb aa c0 5e 5e 0d 1a e8 b3 aa c0 5e 5e 0e 19 e8 ab aa c0 5e 5e 0f 18 e8 a3 aa c0 5e 5e 10 17 e8 9b aa c0 5e 5e 11 16 e8 93 aa c0 5e 5e 12 15 e8 8b aa c0 5e 5e 13 14 e8 83 aa c0 5e 5e 14 13 e8 7b aa c0 5e 5e 15 12 e8 73 aa c0 5e 5e 16 11 e8 6b aa c0 5e 5e 17 10 e8 63 aa c0 5e 5e 18 0f e8 5b aa c0 5e 5e 19 0e e8 53 aa c0 5e 5e 1a 0d e8 4b aa c0 5e 5e 1b 0c e8 43 aa c0 5e 5e 1c 0b e8 3b aa c0 5e 5e 1d 0a e8 33 aa c0 5e 5e 1e 09 e8 2b aa c0 5e 5e 1f 08 e8 23 aa c0 5e 5e 20 07 e8 1b aa c0 5e 5e 21 06 e8 13 aa c0 5e 5e 22 05 e8 0b aa c0 5e 5e 23 04 e8 03 aa c0 5e 5e 24 03 e8 fb a9 c0 5e 5e 25 02 e8 f3 a9 c0 5e 5e 26 01 e8 eb a9 c0 5e 5e 27 00 a0 b3 af c8 f7 7f 00 00 e8 db a9 c0 5e 5e 00 00 e0 b6 af c8 f7 7f 00 00 e8 cb a9 c0 5e 5e 00 00 40 b7 af c8 f7 7f 00 00 e8 bb a9 c0 5e 5e 00 00 a0 b7 af c8 f7 7f 00 00 e8 ab a9 c0 5e 5e 00 00 00 b8 af c8 f7 7f 00 00 e8 9b a9 c0 5e 5e 00 00 60 b8 af c8 f7 7f 00 00 e8 8b a9 c0 5e 5e 00 00 00 bc af c8 f7 7f 00 00 e8 7b a9 c0 5e 5e 00 00 60 bc af c8 f7 7f 00 00 e8 6b a9 c0 5e 5e 00 00 c0 bc af c8 f7 7f 00 00 e8 5b a9 c0 5e 5e 00 00 20 bd af c8 f7 7f 00 00 e8 4b a9 c0 5e 5e 00 00 80 bd af c8 f7 7f 00 00 e8 3b a9 c0 5e 5e 00 00 20 c1 af c8 f7 7f 00 00 e8 2b a9 c0 5e 5e 00 00 80 c1 af c8 f7 7f 00 00 e8 1b a9 c0 5e 5e 00 00 e0 c1 af c8 f7 7f 00 00 e8 0b a9 c0 5e 5e 00 00 40 c2 af c8 f7 7f 00 00 00 00 00 00 00 00 00 00
31        | 7ff7c865a7d0h   | 1400    | hex://logix/bitvector.ops?xnor#xnor_g[64u]()                                                                  | BitVector<ulong> xnor<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                          | 0f 1f 44 00 00 48 33 d1 48 8b c2 48 f7 d0 c3 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 4b ae c0 5e 5e 00 27 e8 43 ae c0 5e 5e 01 26 e8 3b ae c0 5e 5e 02 25 e8 33 ae c0 5e 5e 03 24 e8 2b ae c0 5e 5e 04 23 e8 23 ae c0 5e 5e 05 22 e8 1b ae c0 5e 5e 06 21 e8 13 ae c0 5e 5e 07 20 e8 0b ae c0 5e 5e 08 1f e8 03 ae c0 5e 5e 09 1e e8 fb ad c0 5e 5e 0a 1d e8 f3 ad c0 5e 5e 0b 1c e8 eb ad c0 5e 5e 0c 1b e8 e3 ad c0 5e 5e 0d 1a e8 db ad c0 5e 5e 0e 19 e8 d3 ad c0 5e 5e 0f 18 e8 cb ad c0 5e 5e 10 17 e8 c3 ad c0 5e 5e 11 16 e8 bb ad c0 5e 5e 12 15 e8 b3 ad c0 5e 5e 13 14 e8 ab ad c0 5e 5e 14 13 e8 a3 ad c0 5e 5e 15 12 e8 9b ad c0 5e 5e 16 11 e8 93 ad c0 5e 5e 17 10 e8 8b ad c0 5e 5e 18 0f e8 83 ad c0 5e 5e 19 0e e8 7b ad c0 5e 5e 1a 0d e8 73 ad c0 5e 5e 1b 0c e8 6b ad c0 5e 5e 1c 0b e8 63 ad c0 5e 5e 1d 0a e8 5b ad c0 5e 5e 1e 09 e8 53 ad c0 5e 5e 1f 08 e8 4b ad c0 5e 5e 20 07 e8 43 ad c0 5e 5e 21 06 e8 3b ad c0 5e 5e 22 05 e8 33 ad c0 5e 5e 23 04 e8 2b ad c0 5e 5e 24 03 e8 23 ad c0 5e 5e 25 02 e8 1b ad c0 5e 5e 26 01 e8 13 ad c0 5e 5e 27 00 60 a9 af c8 f7 7f 00 00 02 00 00 00 00 00 00 00 e8 fb ac c0 5e 5e 00 00 00 ad af c8 f7 7f 00 00 e8 eb ac c0 5e 5e 00 00 60 ad af c8 f7 7f 00 00 e8 db ac c0 5e 5e 00 00 c0 ad af c8 f7 7f 00 00 e8 cb ac c0 5e 5e 00 00 20 ae af c8 f7 7f 00 00 e8 bb ac c0 5e 5e 00 27 e8 b3 ac c0 5e 5e 01 26 e8 ab ac c0 5e 5e 02 25 e8 a3 ac c0 5e 5e 03 24 e8 9b ac c0 5e 5e 04 23 e8 93 ac c0 5e 5e 05 22 e8 8b ac c0 5e 5e 06 21 e8 83 ac c0 5e 5e 07 20 e8 7b ac c0 5e 5e 08 1f e8 73 ac c0 5e 5e 09 1e e8 6b ac c0 5e 5e 0a 1d e8 63 ac c0 5e 5e 0b 1c e8 5b ac c0 5e 5e 0c 1b e8 53 ac c0 5e 5e 0d 1a e8 4b ac c0 5e 5e 0e 19 e8 43 ac c0 5e 5e 0f 18 e8 3b ac c0 5e 5e 10 17 e8 33 ac c0 5e 5e 11 16 e8 2b ac c0 5e 5e 12 15 e8 23 ac c0 5e 5e 13 14 e8 1b ac c0 5e 5e 14 13 e8 13 ac c0 5e 5e 15 12 e8 0b ac c0 5e 5e 16 11 e8 03 ac c0 5e 5e 17 10 e8 fb ab c0 5e 5e 18 0f e8 f3 ab c0 5e 5e 19 0e e8 eb ab c0 5e 5e 1a 0d e8 e3 ab c0 5e 5e 1b 0c e8 db ab c0 5e 5e 1c 0b e8 d3 ab c0 5e 5e 1d 0a e8 cb ab c0 5e 5e 1e 09 e8 c3 ab c0 5e 5e 1f 08 e8 bb ab c0 5e 5e 20 07 e8 b3 ab c0 5e 5e 21 06 e8 ab ab c0 5e 5e 22 05 e8 a3 ab c0 5e 5e 23 04 e8 9b ab c0 5e 5e 24 03 e8 93 ab c0 5e 5e 25 02 e8 8b ab c0 5e 5e 26 01 e8 83 ab c0 5e 5e 27 00 80 ae af c8 f7 7f 00 00 e8 73 ab c0 5e 5e 00 00 c0 b1 af c8 f7 7f 00 00 e8 63 ab c0 5e 5e 00 00 20 b2 af c8 f7 7f 00 00 e8 53 ab c0 5e 5e 00 00 80 b2 af c8 f7 7f 00 00 e8 43 ab c0 5e 5e 00 00 e0 b2 af c8 f7 7f 00 00 e8 33 ab c0 5e 5e 00 00 40 b3 af c8 f7 7f 00 00 e8 23 ab c0 5e 5e 00 27 e8 1b ab c0 5e 5e 01 26 e8 13 ab c0 5e 5e 02 25 e8 0b ab c0 5e 5e 03 24 e8 03 ab c0 5e 5e 04 23 e8 fb aa c0 5e 5e 05 22 e8 f3 aa c0 5e 5e 06 21 e8 eb aa c0 5e 5e 07 20 e8 e3 aa c0 5e 5e 08 1f e8 db aa c0 5e 5e 09 1e e8 d3 aa c0 5e 5e 0a 1d e8 cb aa c0 5e 5e 0b 1c e8 c3 aa c0 5e 5e 0c 1b e8 bb aa c0 5e 5e 0d 1a e8 b3 aa c0 5e 5e 0e 19 e8 ab aa c0 5e 5e 0f 18 e8 a3 aa c0 5e 5e 10 17 e8 9b aa c0 5e 5e 11 16 e8 93 aa c0 5e 5e 12 15 e8 8b aa c0 5e 5e 13 14 e8 83 aa c0 5e 5e 14 13 e8 7b aa c0 5e 5e 15 12 e8 73 aa c0 5e 5e 16 11 e8 6b aa c0 5e 5e 17 10 e8 63 aa c0 5e 5e 18 0f e8 5b aa c0 5e 5e 19 0e e8 53 aa c0 5e 5e 1a 0d e8 4b aa c0 5e 5e 1b 0c e8 43 aa c0 5e 5e 1c 0b e8 3b aa c0 5e 5e 1d 0a e8 33 aa c0 5e 5e 1e 09 e8 2b aa c0 5e 5e 1f 08 e8 23 aa c0 5e 5e 20 07 e8 1b aa c0 5e 5e 21 06 e8 13 aa c0 5e 5e 22 05 e8 0b aa c0 5e 5e 23 04 e8 03 aa c0 5e 5e 24 03 e8 fb a9 c0 5e 5e 25 02 e8 f3 a9 c0 5e 5e 26 01 e8 eb a9 c0 5e 5e 27 00 a0 b3 af c8 f7 7f 00 00 e8 db a9 c0 5e 5e 00 00 e0 b6 af c8 f7 7f 00 00 e8 cb a9 c0 5e 5e 00 00 40 b7 af c8 f7 7f 00 00 e8 bb a9 c0 5e 5e 00 00 a0 b7 af c8 f7 7f 00 00 e8 ab a9 c0 5e 5e 00 00 00 b8 af c8 f7 7f 00 00 e8 9b a9 c0 5e 5e 00 00 60 b8 af c8 f7 7f 00 00 e8 8b a9 c0 5e 5e 00 00 00 bc af c8 f7 7f 00 00 e8 7b a9 c0 5e 5e 00 00 60 bc af c8 f7 7f 00 00 e8 6b a9 c0 5e 5e 00 00 c0 bc af c8 f7 7f 00 00 e8 5b a9 c0 5e 5e 00 00 20 bd af c8 f7 7f 00 00 e8 4b a9 c0 5e 5e 00 00 80 bd af c8 f7 7f 00 00 e8 3b a9 c0 5e 5e 00 00 20 c1 af c8 f7 7f 00 00 e8 2b a9 c0 5e 5e 00 00 80 c1 af c8 f7 7f 00 00 e8 1b a9 c0 5e 5e 00 00 e0 c1 af c8 f7 7f 00 00 e8 0b a9 c0 5e 5e 00 00 40 c2 af c8 f7 7f 00 00 00 00 00 00 00 00 00 00
32        | 7ff7c865ad50h   | 291     | hex://logix/bitvector.ops?left#left_g[8u]()                                                                   | BitVector<byte> left<byte>(BitVector<byte> x, BitVector<byte> y)                                              | 0f 1f 44 00 00 89 54 24 10 0f b6 c1 c3 00 00 00 19 00 00 00 40 00 00 00 98 71 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b7 c1 c3 00 00 00 19 00 00 00 40 00 00 00 00 72 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 8b c1 c3 19 00 00 00 40 00 00 00 00 00 00 00 68 72 ae c8 f7 7f 00 00 0f 1f 44 00 00 48 89 54 24 10 48 8b c1 c3 00 00 19 00 00 00 40 00 00 00 78 73 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b6 c2 c3 00 00 00 19 00 00 00 40 00 00 00 e0 73 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 c3 00 00 00 19 00 00 00 40 00 00 00 48 74 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 b0 74 ae c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 c0 75 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
33        | 7ff7c865ad70h   | 259     | hex://logix/bitvector.ops?left#left_g[16u]()                                                                  | BitVector<ushort> left<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                      | 0f 1f 44 00 00 89 54 24 10 0f b7 c1 c3 00 00 00 19 00 00 00 40 00 00 00 00 72 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 8b c1 c3 19 00 00 00 40 00 00 00 00 00 00 00 68 72 ae c8 f7 7f 00 00 0f 1f 44 00 00 48 89 54 24 10 48 8b c1 c3 00 00 19 00 00 00 40 00 00 00 78 73 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b6 c2 c3 00 00 00 19 00 00 00 40 00 00 00 e0 73 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 c3 00 00 00 19 00 00 00 40 00 00 00 48 74 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 b0 74 ae c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 c0 75 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
34        | 7ff7c865ad90h   | 227     | hex://logix/bitvector.ops?left#left_g[32u]()                                                                  | BitVector<uint> left<uint>(BitVector<uint> x, BitVector<uint> y)                                              | 0f 1f 44 00 00 89 54 24 10 8b c1 c3 19 00 00 00 40 00 00 00 00 00 00 00 68 72 ae c8 f7 7f 00 00 0f 1f 44 00 00 48 89 54 24 10 48 8b c1 c3 00 00 19 00 00 00 40 00 00 00 78 73 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b6 c2 c3 00 00 00 19 00 00 00 40 00 00 00 e0 73 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 c3 00 00 00 19 00 00 00 40 00 00 00 48 74 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 b0 74 ae c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 c0 75 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
35        | 7ff7c865adb0h   | 195     | hex://logix/bitvector.ops?left#left_g[64u]()                                                                  | BitVector<ulong> left<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                          | 0f 1f 44 00 00 48 89 54 24 10 48 8b c1 c3 00 00 19 00 00 00 40 00 00 00 78 73 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b6 c2 c3 00 00 00 19 00 00 00 40 00 00 00 e0 73 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 c3 00 00 00 19 00 00 00 40 00 00 00 48 74 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 b0 74 ae c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 c0 75 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
36        | 7ff7c865add0h   | 163     | hex://logix/bitvector.ops?right#right_g[8u]()                                                                 | BitVector<byte> right<byte>(BitVector<byte> x, BitVector<byte> y)                                             | 0f 1f 44 00 00 89 4c 24 08 0f b6 c2 c3 00 00 00 19 00 00 00 40 00 00 00 e0 73 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 c3 00 00 00 19 00 00 00 40 00 00 00 48 74 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 b0 74 ae c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 c0 75 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
37        | 7ff7c865adf0h   | 131     | hex://logix/bitvector.ops?right#right_g[16u]()                                                                | BitVector<ushort> right<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                     | 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 c3 00 00 00 19 00 00 00 40 00 00 00 48 74 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 b0 74 ae c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 c0 75 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
38        | 7ff7c865ae10h   | 99      | hex://logix/bitvector.ops?right#right_g[32u]()                                                                | BitVector<uint> right<uint>(BitVector<uint> x, BitVector<uint> y)                                             | 0f 1f 44 00 00 89 4c 24 08 8b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 b0 74 ae c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 c0 75 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
39        | 7ff7c865ae30h   | 67      | hex://logix/bitvector.ops?right#right_g[64u]()                                                                | BitVector<ulong> right<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                         | 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 c3 00 00 19 00 00 00 40 00 00 00 c0 75 ae c8 f7 7f 00 00 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
40        | 7ff7c865ae50h   | 35      | hex://logix/bitvector.ops?lnot#lnot_g[8u]()                                                                   | BitVector<byte> lnot<byte>(BitVector<byte> x, BitVector<byte> y)                                              | 0f 1f 44 00 00 89 54 24 10 0f b6 c1 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
41        | 7ff7c865ae80h   | 35      | hex://logix/bitvector.ops?lnot#lnot_g[16u]()                                                                  | BitVector<ushort> lnot<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                      | 0f 1f 44 00 00 89 54 24 10 0f b7 c1 f7 d0 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
42        | 7ff7c865aeb0h   | 408     | hex://logix/bitvector.ops?lnot#lnot_g[32u]()                                                                  | BitVector<uint> lnot<uint>(BitVector<uint> x, BitVector<uint> y)                                              | 0f 1f 44 00 00 89 54 24 10 8b c1 f7 d0 c3 00 00 19 00 00 00 40 00 00 00 f8 76 ae c8 f7 7f 00 00 0f 1f 44 00 00 48 89 54 24 10 48 8b c1 48 f7 d0 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 43 a7 c0 5e 5e 00 27 e8 3b a7 c0 5e 5e 01 26 e8 33 a7 c0 5e 5e 02 25 e8 2b a7 c0 5e 5e 03 24 e8 23 a7 c0 5e 5e 04 23 e8 1b a7 c0 5e 5e 05 22 e8 13 a7 c0 5e 5e 06 21 e8 0b a7 c0 5e 5e 07 20 e8 03 a7 c0 5e 5e 08 1f e8 fb a6 c0 5e 5e 09 1e e8 f3 a6 c0 5e 5e 0a 1d e8 eb a6 c0 5e 5e 0b 1c e8 e3 a6 c0 5e 5e 0c 1b e8 db a6 c0 5e 5e 0d 1a e8 d3 a6 c0 5e 5e 0e 19 e8 cb a6 c0 5e 5e 0f 18 e8 c3 a6 c0 5e 5e 10 17 e8 bb a6 c0 5e 5e 11 16 e8 b3 a6 c0 5e 5e 12 15 e8 ab a6 c0 5e 5e 13 14 e8 a3 a6 c0 5e 5e 14 13 e8 9b a6 c0 5e 5e 15 12 e8 93 a6 c0 5e 5e 16 11 e8 8b a6 c0 5e 5e 17 10 e8 83 a6 c0 5e 5e 18 0f e8 7b a6 c0 5e 5e 19 0e e8 73 a6 c0 5e 5e 1a 0d e8 6b a6 c0 5e 5e 1b 0c e8 63 a6 c0 5e 5e 1c 0b e8 5b a6 c0 5e 5e 1d 0a e8 53 a6 c0 5e 5e 1e 09 e8 4b a6 c0 5e 5e 1f 08 e8 43 a6 c0 5e 5e 20 07 e8 3b a6 c0 5e 5e 21 06 e8 33 a6 c0 5e 5e 22 05 e8 2b a6 c0 5e 5e 23 04 e8 23 a6 c0 5e 5e 24 03 e8 1b a6 c0 5e 5e 25 02 e8 13 a6 c0 5e 5e 26 01 e8 0b a6 c0 5e 5e 27 00 c0 b8 af c8 f7 7f 00 00 00 00 00 00 00 00 00 00
43        | 7ff7c865aed0h   | 376     | hex://logix/bitvector.ops?lnot#lnot_g[64u]()                                                                  | BitVector<ulong> lnot<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                          | 0f 1f 44 00 00 48 89 54 24 10 48 8b c1 48 f7 d0 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 43 a7 c0 5e 5e 00 27 e8 3b a7 c0 5e 5e 01 26 e8 33 a7 c0 5e 5e 02 25 e8 2b a7 c0 5e 5e 03 24 e8 23 a7 c0 5e 5e 04 23 e8 1b a7 c0 5e 5e 05 22 e8 13 a7 c0 5e 5e 06 21 e8 0b a7 c0 5e 5e 07 20 e8 03 a7 c0 5e 5e 08 1f e8 fb a6 c0 5e 5e 09 1e e8 f3 a6 c0 5e 5e 0a 1d e8 eb a6 c0 5e 5e 0b 1c e8 e3 a6 c0 5e 5e 0c 1b e8 db a6 c0 5e 5e 0d 1a e8 d3 a6 c0 5e 5e 0e 19 e8 cb a6 c0 5e 5e 0f 18 e8 c3 a6 c0 5e 5e 10 17 e8 bb a6 c0 5e 5e 11 16 e8 b3 a6 c0 5e 5e 12 15 e8 ab a6 c0 5e 5e 13 14 e8 a3 a6 c0 5e 5e 14 13 e8 9b a6 c0 5e 5e 15 12 e8 93 a6 c0 5e 5e 16 11 e8 8b a6 c0 5e 5e 17 10 e8 83 a6 c0 5e 5e 18 0f e8 7b a6 c0 5e 5e 19 0e e8 73 a6 c0 5e 5e 1a 0d e8 6b a6 c0 5e 5e 1b 0c e8 63 a6 c0 5e 5e 1c 0b e8 5b a6 c0 5e 5e 1d 0a e8 53 a6 c0 5e 5e 1e 09 e8 4b a6 c0 5e 5e 1f 08 e8 43 a6 c0 5e 5e 20 07 e8 3b a6 c0 5e 5e 21 06 e8 33 a6 c0 5e 5e 22 05 e8 2b a6 c0 5e 5e 23 04 e8 23 a6 c0 5e 5e 24 03 e8 1b a6 c0 5e 5e 25 02 e8 13 a6 c0 5e 5e 26 01 e8 0b a6 c0 5e 5e 27 00 c0 b8 af c8 f7 7f 00 00 00 00 00 00 00 00 00 00
44        | 7ff7c865b050h   | 35      | hex://logix/bitvector.ops?rnot#rnot_g[8u]()                                                                   | BitVector<byte> rnot<byte>(BitVector<byte> x, BitVector<byte> y)                                              | 0f 1f 44 00 00 89 4c 24 08 0f b6 c2 f7 d0 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
45        | 7ff7c865b080h   | 35      | hex://logix/bitvector.ops?rnot#rnot_g[16u]()                                                                  | BitVector<ushort> rnot<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                      | 0f 1f 44 00 00 89 4c 24 08 0f b7 c2 f7 d0 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
46        | 7ff7c865b0b0h   | 408     | hex://logix/bitvector.ops?rnot#rnot_g[32u]()                                                                  | BitVector<uint> rnot<uint>(BitVector<uint> x, BitVector<uint> y)                                              | 0f 1f 44 00 00 89 4c 24 08 8b c2 f7 d0 c3 00 00 19 00 00 00 40 00 00 00 40 79 ae c8 f7 7f 00 00 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 48 f7 d0 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 43 a5 c0 5e 5e 00 27 e8 3b a5 c0 5e 5e 01 26 e8 33 a5 c0 5e 5e 02 25 e8 2b a5 c0 5e 5e 03 24 e8 23 a5 c0 5e 5e 04 23 e8 1b a5 c0 5e 5e 05 22 e8 13 a5 c0 5e 5e 06 21 e8 0b a5 c0 5e 5e 07 20 e8 03 a5 c0 5e 5e 08 1f e8 fb a4 c0 5e 5e 09 1e e8 f3 a4 c0 5e 5e 0a 1d e8 eb a4 c0 5e 5e 0b 1c e8 e3 a4 c0 5e 5e 0c 1b e8 db a4 c0 5e 5e 0d 1a e8 d3 a4 c0 5e 5e 0e 19 e8 cb a4 c0 5e 5e 0f 18 e8 c3 a4 c0 5e 5e 10 17 e8 bb a4 c0 5e 5e 11 16 e8 b3 a4 c0 5e 5e 12 15 e8 ab a4 c0 5e 5e 13 14 e8 a3 a4 c0 5e 5e 14 13 e8 9b a4 c0 5e 5e 15 12 e8 93 a4 c0 5e 5e 16 11 e8 8b a4 c0 5e 5e 17 10 e8 83 a4 c0 5e 5e 18 0f e8 7b a4 c0 5e 5e 19 0e e8 73 a4 c0 5e 5e 1a 0d e8 6b a4 c0 5e 5e 1b 0c e8 63 a4 c0 5e 5e 1c 0b e8 5b a4 c0 5e 5e 1d 0a e8 53 a4 c0 5e 5e 1e 09 e8 4b a4 c0 5e 5e 1f 08 e8 43 a4 c0 5e 5e 20 07 e8 3b a4 c0 5e 5e 21 06 e8 33 a4 c0 5e 5e 22 05 e8 2b a4 c0 5e 5e 23 04 e8 23 a4 c0 5e 5e 24 03 e8 1b a4 c0 5e 5e 25 02 e8 13 a4 c0 5e 5e 26 01 e8 0b a4 c0 5e 5e 27 00 e0 bd af c8 f7 7f 00 00 00 00 00 00 00 00 00 00
47        | 7ff7c865b0d0h   | 376     | hex://logix/bitvector.ops?rnot#rnot_g[64u]()                                                                  | BitVector<ulong> rnot<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                          | 0f 1f 44 00 00 48 89 4c 24 08 48 8b c2 48 f7 d0 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 43 a5 c0 5e 5e 00 27 e8 3b a5 c0 5e 5e 01 26 e8 33 a5 c0 5e 5e 02 25 e8 2b a5 c0 5e 5e 03 24 e8 23 a5 c0 5e 5e 04 23 e8 1b a5 c0 5e 5e 05 22 e8 13 a5 c0 5e 5e 06 21 e8 0b a5 c0 5e 5e 07 20 e8 03 a5 c0 5e 5e 08 1f e8 fb a4 c0 5e 5e 09 1e e8 f3 a4 c0 5e 5e 0a 1d e8 eb a4 c0 5e 5e 0b 1c e8 e3 a4 c0 5e 5e 0c 1b e8 db a4 c0 5e 5e 0d 1a e8 d3 a4 c0 5e 5e 0e 19 e8 cb a4 c0 5e 5e 0f 18 e8 c3 a4 c0 5e 5e 10 17 e8 bb a4 c0 5e 5e 11 16 e8 b3 a4 c0 5e 5e 12 15 e8 ab a4 c0 5e 5e 13 14 e8 a3 a4 c0 5e 5e 14 13 e8 9b a4 c0 5e 5e 15 12 e8 93 a4 c0 5e 5e 16 11 e8 8b a4 c0 5e 5e 17 10 e8 83 a4 c0 5e 5e 18 0f e8 7b a4 c0 5e 5e 19 0e e8 73 a4 c0 5e 5e 1a 0d e8 6b a4 c0 5e 5e 1b 0c e8 63 a4 c0 5e 5e 1c 0b e8 5b a4 c0 5e 5e 1d 0a e8 53 a4 c0 5e 5e 1e 09 e8 4b a4 c0 5e 5e 1f 08 e8 43 a4 c0 5e 5e 20 07 e8 3b a4 c0 5e 5e 21 06 e8 33 a4 c0 5e 5e 22 05 e8 2b a4 c0 5e 5e 23 04 e8 23 a4 c0 5e 5e 24 03 e8 1b a4 c0 5e 5e 25 02 e8 13 a4 c0 5e 5e 26 01 e8 0b a4 c0 5e 5e 27 00 e0 bd af c8 f7 7f 00 00 00 00 00 00 00 00 00 00
48        | 7ff7c865b250h   | 39      | hex://logix/bitvector.ops?impl#impl_g[8u]()                                                                   | BitVector<byte> impl<byte>(BitVector<byte> x, BitVector<byte> y)                                              | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 f7 d2 0b c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
49        | 7ff7c865b280h   | 39      | hex://logix/bitvector.ops?impl#impl_g[16u]()                                                                  | BitVector<ushort> impl<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                      | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 f7 d2 0b c2 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
50        | 7ff7c865b2b0h   | 1032    | hex://logix/bitvector.ops?impl#impl_g[32u]()                                                                  | BitVector<uint> impl<uint>(BitVector<uint> x, BitVector<uint> y)                                              | 0f 1f 44 00 00 8b c2 f7 d0 0b c1 c3 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 6b a3 c0 5e 5e 00 00 a0 c2 af c8 f7 7f 00 00 e8 5b a3 c0 5e 5e 00 27 e8 53 a3 c0 5e 5e 01 26 e8 4b a3 c0 5e 5e 02 25 e8 43 a3 c0 5e 5e 03 24 e8 3b a3 c0 5e 5e 04 23 e8 33 a3 c0 5e 5e 05 22 e8 2b a3 c0 5e 5e 06 21 e8 23 a3 c0 5e 5e 07 20 e8 1b a3 c0 5e 5e 08 1f e8 13 a3 c0 5e 5e 09 1e e8 0b a3 c0 5e 5e 0a 1d e8 03 a3 c0 5e 5e 0b 1c e8 fb a2 c0 5e 5e 0c 1b e8 f3 a2 c0 5e 5e 0d 1a e8 eb a2 c0 5e 5e 0e 19 e8 e3 a2 c0 5e 5e 0f 18 e8 db a2 c0 5e 5e 10 17 e8 d3 a2 c0 5e 5e 11 16 e8 cb a2 c0 5e 5e 12 15 e8 c3 a2 c0 5e 5e 13 14 e8 bb a2 c0 5e 5e 14 13 e8 b3 a2 c0 5e 5e 15 12 e8 ab a2 c0 5e 5e 16 11 e8 a3 a2 c0 5e 5e 17 10 e8 9b a2 c0 5e 5e 18 0f e8 93 a2 c0 5e 5e 19 0e e8 8b a2 c0 5e 5e 1a 0d e8 83 a2 c0 5e 5e 1b 0c e8 7b a2 c0 5e 5e 1c 0b e8 73 a2 c0 5e 5e 1d 0a e8 6b a2 c0 5e 5e 1e 09 e8 63 a2 c0 5e 5e 1f 08 e8 5b a2 c0 5e 5e 20 07 e8 53 a2 c0 5e 5e 21 06 e8 4b a2 c0 5e 5e 22 05 e8 43 a2 c0 5e 5e 23 04 e8 3b a2 c0 5e 5e 24 03 e8 33 a2 c0 5e 5e 25 02 e8 2b a2 c0 5e 5e 26 01 e8 23 a2 c0 5e 5e 27 00 00 c3 af c8 f7 7f 00 00 e8 13 a2 c0 5e 5e 00 00 40 c6 af c8 f7 7f 00 00 e8 03 a2 c0 5e 5e 00 00 a0 c6 af c8 f7 7f 00 00 e8 f3 a1 c0 5e 5e 00 00 00 c7 af c8 f7 7f 00 00 e8 e3 a1 c0 5e 5e 00 00 60 c7 af c8 f7 7f 00 00 e8 d3 a1 c0 5e 5e 00 00 c0 c7 af c8 f7 7f 00 00 e8 c3 a1 c0 5e 5e 00 27 e8 bb a1 c0 5e 5e 01 26 e8 b3 a1 c0 5e 5e 02 25 e8 ab a1 c0 5e 5e 03 24 e8 a3 a1 c0 5e 5e 04 23 e8 9b a1 c0 5e 5e 05 22 e8 93 a1 c0 5e 5e 06 21 e8 8b a1 c0 5e 5e 07 20 e8 83 a1 c0 5e 5e 08 1f e8 7b a1 c0 5e 5e 09 1e e8 73 a1 c0 5e 5e 0a 1d e8 6b a1 c0 5e 5e 0b 1c e8 63 a1 c0 5e 5e 0c 1b e8 5b a1 c0 5e 5e 0d 1a e8 53 a1 c0 5e 5e 0e 19 e8 4b a1 c0 5e 5e 0f 18 e8 43 a1 c0 5e 5e 10 17 e8 3b a1 c0 5e 5e 11 16 e8 33 a1 c0 5e 5e 12 15 e8 2b a1 c0 5e 5e 13 14 e8 23 a1 c0 5e 5e 14 13 e8 1b a1 c0 5e 5e 15 12 e8 13 a1 c0 5e 5e 16 11 e8 0b a1 c0 5e 5e 17 10 e8 03 a1 c0 5e 5e 18 0f e8 fb a0 c0 5e 5e 19 0e e8 f3 a0 c0 5e 5e 1a 0d e8 eb a0 c0 5e 5e 1b 0c e8 e3 a0 c0 5e 5e 1c 0b e8 db a0 c0 5e 5e 1d 0a e8 d3 a0 c0 5e 5e 1e 09 e8 cb a0 c0 5e 5e 1f 08 e8 c3 a0 c0 5e 5e 20 07 e8 bb a0 c0 5e 5e 21 06 e8 b3 a0 c0 5e 5e 22 05 e8 ab a0 c0 5e 5e 23 04 e8 a3 a0 c0 5e 5e 24 03 e8 9b a0 c0 5e 5e 25 02 e8 93 a0 c0 5e 5e 26 01 e8 8b a0 c0 5e 5e 27 00 20 c8 af c8 f7 7f 00 00 e8 7b a0 c0 5e 5e 00 00 60 cb af c8 f7 7f 00 00 e8 6b a0 c0 5e 5e 00 00 c0 cb af c8 f7 7f 00 00 e8 5b a0 c0 5e 5e 00 00 20 cc af c8 f7 7f 00 00 e8 4b a0 c0 5e 5e 00 00 80 cc af c8 f7 7f 00 00 e8 3b a0 c0 5e 5e 00 00 e0 cc af c8 f7 7f 00 00 e8 2b a0 c0 5e 5e 00 00 80 d0 af c8 f7 7f 00 00 e8 1b a0 c0 5e 5e 00 00 e0 d0 af c8 f7 7f 00 00 e8 0b a0 c0 5e 5e 00 00 40 d1 af c8 f7 7f 00 00 e8 fb 9f c0 5e 5e 00 00 a0 d1 af c8 f7 7f 00 00 e8 eb 9f c0 5e 5e 00 00 00 d2 af c8 f7 7f 00 00 e8 db 9f c0 5e 5e 00 00 a0 d5 af c8 f7 7f 00 00 e8 cb 9f c0 5e 5e 00 00 00 d6 af c8 f7 7f 00 00 e8 bb 9f c0 5e 5e 00 00 60 d6 af c8 f7 7f 00 00 e8 ab 9f c0 5e 5e 00 00 c0 d6 af c8 f7 7f 00 00 e8 9b 9f c0 5e 5e 00 00 20 d7 af c8 f7 7f 00 00 00 00 00 00 00 00 00 00
51        | 7ff7c865b6e0h   | 71      | hex://logix/bitvector.ops?impl#impl_g[64u]()                                                                  | BitVector<ulong> impl<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                          | 0f 1f 44 00 00 48 8b c2 48 f7 d0 48 0b c1 c3 00 19 00 00 00 40 00 00 00 98 7c ae c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 c4 e2 78 f2 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
52        | 7ff7c865b700h   | 39      | hex://logix/bitvector.ops?nonimpl#nonimpl_g[8u]()                                                             | BitVector<byte> nonimpl<byte>(BitVector<byte> x, BitVector<byte> y)                                           | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 c4 e2 78 f2 c2 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
53        | 7ff7c865b730h   | 39      | hex://logix/bitvector.ops?nonimpl#nonimpl_g[16u]()                                                            | BitVector<ushort> nonimpl<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                   | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 c4 e2 78 f2 c2 0f b7 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
54        | 7ff7c865b760h   | 103     | hex://logix/bitvector.ops?nonimpl#nonimpl_g[32u]()                                                            | BitVector<uint> nonimpl<uint>(BitVector<uint> x, BitVector<uint> y)                                           | 0f 1f 44 00 00 c4 e2 70 f2 c2 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 d0 7d ae c8 f7 7f 00 00 0f 1f 44 00 00 c4 e2 f0 f2 c2 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 e0 7e ae c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 f7 d0 0b c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
55        | 7ff7c865b780h   | 71      | hex://logix/bitvector.ops?nonimpl#nonimpl_g[64u]()                                                            | BitVector<ulong> nonimpl<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                       | 0f 1f 44 00 00 c4 e2 f0 f2 c2 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 e0 7e ae c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 f7 d0 0b c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
56        | 7ff7c865b7a0h   | 39      | hex://logix/bitvector.ops?cimpl#cimpl_g[8u]()                                                                 | BitVector<byte> cimpl<byte>(BitVector<byte> x, BitVector<byte> y)                                             | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 f7 d0 0b c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
57        | 7ff7c865b7d0h   | 39      | hex://logix/bitvector.ops?cimpl#cimpl_g[16u]()                                                                | BitVector<ushort> cimpl<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                     | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 f7 d0 0b c2 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
58        | 7ff7c865b800h   | 439     | hex://logix/bitvector.ops?cimpl#cimpl_g[32u]()                                                                | BitVector<uint> cimpl<uint>(BitVector<uint> x, BitVector<uint> y)                                             | 0f 1f 44 00 00 8b c1 f7 d0 0b c2 c3 19 00 00 00 40 00 00 00 00 00 00 00 18 80 ae c8 f7 7f 00 00 0f 1f 44 00 00 48 8b c1 48 f7 d0 48 0b c2 c3 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 fb 9d c0 5e 5e 00 27 e8 f3 9d c0 5e 5e 01 26 e8 eb 9d c0 5e 5e 02 25 e8 e3 9d c0 5e 5e 03 24 e8 db 9d c0 5e 5e 04 23 e8 d3 9d c0 5e 5e 05 22 e8 cb 9d c0 5e 5e 06 21 e8 c3 9d c0 5e 5e 07 20 e8 bb 9d c0 5e 5e 08 1f e8 b3 9d c0 5e 5e 09 1e e8 ab 9d c0 5e 5e 0a 1d e8 a3 9d c0 5e 5e 0b 1c e8 9b 9d c0 5e 5e 0c 1b e8 93 9d c0 5e 5e 0d 1a e8 8b 9d c0 5e 5e 0e 19 e8 83 9d c0 5e 5e 0f 18 e8 7b 9d c0 5e 5e 10 17 e8 73 9d c0 5e 5e 11 16 e8 6b 9d c0 5e 5e 12 15 e8 63 9d c0 5e 5e 13 14 e8 5b 9d c0 5e 5e 14 13 e8 53 9d c0 5e 5e 15 12 e8 4b 9d c0 5e 5e 16 11 e8 43 9d c0 5e 5e 17 10 e8 3b 9d c0 5e 5e 18 0f e8 33 9d c0 5e 5e 19 0e e8 2b 9d c0 5e 5e 1a 0d e8 23 9d c0 5e 5e 1b 0c e8 1b 9d c0 5e 5e 1c 0b e8 13 9d c0 5e 5e 1d 0a e8 0b 9d c0 5e 5e 1e 09 e8 03 9d c0 5e 5e 1f 08 e8 fb 9c c0 5e 5e 20 07 e8 f3 9c c0 5e 5e 21 06 e8 eb 9c c0 5e 5e 22 05 e8 e3 9c c0 5e 5e 23 04 e8 db 9c c0 5e 5e 24 03 e8 d3 9c c0 5e 5e 25 02 e8 cb 9c c0 5e 5e 26 01 e8 c3 9c c0 5e 5e 27 00 40 cd af c8 f7 7f 00 00 28 81 ae c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 c4 e2 68 f2 c0 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
59        | 7ff7c865b820h   | 407     | hex://logix/bitvector.ops?cimpl#cimpl_g[64u]()                                                                | BitVector<ulong> cimpl<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                         | 0f 1f 44 00 00 48 8b c1 48 f7 d0 48 0b c2 c3 00 19 00 00 00 40 00 00 00 02 00 00 00 00 00 00 00 e8 fb 9d c0 5e 5e 00 27 e8 f3 9d c0 5e 5e 01 26 e8 eb 9d c0 5e 5e 02 25 e8 e3 9d c0 5e 5e 03 24 e8 db 9d c0 5e 5e 04 23 e8 d3 9d c0 5e 5e 05 22 e8 cb 9d c0 5e 5e 06 21 e8 c3 9d c0 5e 5e 07 20 e8 bb 9d c0 5e 5e 08 1f e8 b3 9d c0 5e 5e 09 1e e8 ab 9d c0 5e 5e 0a 1d e8 a3 9d c0 5e 5e 0b 1c e8 9b 9d c0 5e 5e 0c 1b e8 93 9d c0 5e 5e 0d 1a e8 8b 9d c0 5e 5e 0e 19 e8 83 9d c0 5e 5e 0f 18 e8 7b 9d c0 5e 5e 10 17 e8 73 9d c0 5e 5e 11 16 e8 6b 9d c0 5e 5e 12 15 e8 63 9d c0 5e 5e 13 14 e8 5b 9d c0 5e 5e 14 13 e8 53 9d c0 5e 5e 15 12 e8 4b 9d c0 5e 5e 16 11 e8 43 9d c0 5e 5e 17 10 e8 3b 9d c0 5e 5e 18 0f e8 33 9d c0 5e 5e 19 0e e8 2b 9d c0 5e 5e 1a 0d e8 23 9d c0 5e 5e 1b 0c e8 1b 9d c0 5e 5e 1c 0b e8 13 9d c0 5e 5e 1d 0a e8 0b 9d c0 5e 5e 1e 09 e8 03 9d c0 5e 5e 1f 08 e8 fb 9c c0 5e 5e 20 07 e8 f3 9c c0 5e 5e 21 06 e8 eb 9c c0 5e 5e 22 05 e8 e3 9c c0 5e 5e 23 04 e8 db 9c c0 5e 5e 24 03 e8 d3 9c c0 5e 5e 25 02 e8 cb 9c c0 5e 5e 26 01 e8 c3 9c c0 5e 5e 27 00 40 cd af c8 f7 7f 00 00 28 81 ae c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 c4 e2 68 f2 c0 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
60        | 7ff7c865b990h   | 39      | hex://logix/bitvector.ops?cnonimpl#cnonimpl_g[8u]()                                                           | BitVector<byte> cnonimpl<byte>(BitVector<byte> x, BitVector<byte> y)                                          | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 0f b6 c0 c4 e2 68 f2 c0 0f b6 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
61        | 7ff7c865b9c0h   | 39      | hex://logix/bitvector.ops?cnonimpl#cnonimpl_g[16u]()                                                          | BitVector<ushort> cnonimpl<ushort>(BitVector<ushort> x, BitVector<ushort> y)                                  | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 0f b7 c0 c4 e2 68 f2 c0 0f b7 c0 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
62        | 7ff7c865b9f0h   | 451     | hex://logix/bitvector.ops?cnonimpl#cnonimpl_g[32u]()                                                          | BitVector<uint> cnonimpl<uint>(BitVector<uint> x, BitVector<uint> y)                                          | 0f 1f 44 00 00 c4 e2 68 f2 c1 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 60 82 ae c8 f7 7f 00 00 0f 1f 44 00 00 c4 e2 e8 f2 c1 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 0b 9c c0 5e 5e 00 27 e8 03 9c c0 5e 5e 01 26 e8 fb 9b c0 5e 5e 02 25 e8 f3 9b c0 5e 5e 03 24 e8 eb 9b c0 5e 5e 04 23 e8 e3 9b c0 5e 5e 05 22 e8 db 9b c0 5e 5e 06 21 e8 d3 9b c0 5e 5e 07 20 e8 cb 9b c0 5e 5e 08 1f e8 c3 9b c0 5e 5e 09 1e e8 bb 9b c0 5e 5e 0a 1d e8 b3 9b c0 5e 5e 0b 1c e8 ab 9b c0 5e 5e 0c 1b e8 a3 9b c0 5e 5e 0d 1a e8 9b 9b c0 5e 5e 0e 19 e8 93 9b c0 5e 5e 0f 18 e8 8b 9b c0 5e 5e 10 17 e8 83 9b c0 5e 5e 11 16 e8 7b 9b c0 5e 5e 12 15 e8 73 9b c0 5e 5e 13 14 e8 6b 9b c0 5e 5e 14 13 e8 63 9b c0 5e 5e 15 12 e8 5b 9b c0 5e 5e 16 11 e8 53 9b c0 5e 5e 17 10 e8 4b 9b c0 5e 5e 18 0f e8 43 9b c0 5e 5e 19 0e e8 3b 9b c0 5e 5e 1a 0d e8 33 9b c0 5e 5e 1b 0c e8 2b 9b c0 5e 5e 1c 0b e8 23 9b c0 5e 5e 1d 0a e8 1b 9b c0 5e 5e 1e 09 e8 13 9b c0 5e 5e 1f 08 e8 0b 9b c0 5e 5e 20 07 e8 03 9b c0 5e 5e 21 06 e8 fb 9a c0 5e 5e 22 05 e8 f3 9a c0 5e 5e 23 04 e8 eb 9a c0 5e 5e 24 03 e8 e3 9a c0 5e 5e 25 02 e8 db 9a c0 5e 5e 26 01 e8 d3 9a c0 5e 5e 27 00 60 d2 af c8 f7 7f 00 00 70 83 ae c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 41 0f b6 c8 0f b6 c0 0f b6 d2 23 d0 c4 e2 78 f2 c1 0b c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
63        | 7ff7c865ba10h   | 419     | hex://logix/bitvector.ops?cnonimpl#cnonimpl_g[64u]()                                                          | BitVector<ulong> cnonimpl<ulong>(BitVector<ulong> x, BitVector<ulong> y)                                      | 0f 1f 44 00 00 c4 e2 e8 f2 c1 c3 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 0b 9c c0 5e 5e 00 27 e8 03 9c c0 5e 5e 01 26 e8 fb 9b c0 5e 5e 02 25 e8 f3 9b c0 5e 5e 03 24 e8 eb 9b c0 5e 5e 04 23 e8 e3 9b c0 5e 5e 05 22 e8 db 9b c0 5e 5e 06 21 e8 d3 9b c0 5e 5e 07 20 e8 cb 9b c0 5e 5e 08 1f e8 c3 9b c0 5e 5e 09 1e e8 bb 9b c0 5e 5e 0a 1d e8 b3 9b c0 5e 5e 0b 1c e8 ab 9b c0 5e 5e 0c 1b e8 a3 9b c0 5e 5e 0d 1a e8 9b 9b c0 5e 5e 0e 19 e8 93 9b c0 5e 5e 0f 18 e8 8b 9b c0 5e 5e 10 17 e8 83 9b c0 5e 5e 11 16 e8 7b 9b c0 5e 5e 12 15 e8 73 9b c0 5e 5e 13 14 e8 6b 9b c0 5e 5e 14 13 e8 63 9b c0 5e 5e 15 12 e8 5b 9b c0 5e 5e 16 11 e8 53 9b c0 5e 5e 17 10 e8 4b 9b c0 5e 5e 18 0f e8 43 9b c0 5e 5e 19 0e e8 3b 9b c0 5e 5e 1a 0d e8 33 9b c0 5e 5e 1b 0c e8 2b 9b c0 5e 5e 1c 0b e8 23 9b c0 5e 5e 1d 0a e8 1b 9b c0 5e 5e 1e 09 e8 13 9b c0 5e 5e 1f 08 e8 0b 9b c0 5e 5e 20 07 e8 03 9b c0 5e 5e 21 06 e8 fb 9a c0 5e 5e 22 05 e8 f3 9a c0 5e 5e 23 04 e8 eb 9a c0 5e 5e 24 03 e8 e3 9a c0 5e 5e 25 02 e8 db 9a c0 5e 5e 26 01 e8 d3 9a c0 5e 5e 27 00 60 d2 af c8 f7 7f 00 00 70 83 ae c8 f7 7f 00 00 0f 1f 44 00 00 0f b6 c1 0f b6 d2 41 0f b6 c8 0f b6 c0 0f b6 d2 23 d0 c4 e2 78 f2 c1 0b c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
64        | 7ff7c865bb80h   | 51      | hex://logix/bitvector.ops?select#select_g[8u]()                                                               | BitVector<byte> select<byte>(BitVector<byte> x, BitVector<byte> y, BitVector<byte> z)                         | 0f 1f 44 00 00 0f b6 c1 0f b6 d2 41 0f b6 c8 0f b6 c0 0f b6 d2 23 d0 c4 e2 78 f2 c1 0b c2 0f b6 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
65        | 7ff7c865bbc0h   | 51      | hex://logix/bitvector.ops?select#select_g[16u]()                                                              | BitVector<ushort> select<ushort>(BitVector<ushort> x, BitVector<ushort> y, BitVector<ushort> z)               | 0f 1f 44 00 00 0f b7 c1 0f b7 d2 41 0f b7 c8 0f b7 c0 0f b7 d2 23 d0 c4 e2 78 f2 c1 0b c2 0f b7 c0 c3 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
66        | 7ff7c865bc00h   | 67      | hex://logix/bitvector.ops?select#select_g[32u]()                                                              | BitVector<uint> select<uint>(BitVector<uint> x, BitVector<uint> y, BitVector<uint> z)                         | 0f 1f 44 00 00 23 d1 c4 c2 70 f2 c0 0b c2 c3 00 19 00 00 00 40 00 00 00 c0 84 ae c8 f7 7f 00 00 0f 1f 44 00 00 48 23 d1 c4 c2 f0 f2 c0 48 0b c2 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
67        | 7ff7c865bc20h   | 35      | hex://logix/bitvector.ops?select#select_g[64u]()                                                              | BitVector<ulong> select<ulong>(BitVector<ulong> x, BitVector<ulong> y, BitVector<ulong> z)                    | 0f 1f 44 00 00 48 23 d1 c4 c2 f0 f2 c0 48 0b c2 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
