Sequence  | Address         | Length  | Uri                                                                                                           | OpSig                                                                                                         | Data
0         | 7ff7c80e0c30h   | 67      | hex://asmcore/AsmConstructs?alloc#alloc_g[8u](32i)                                                            | Span<byte> alloc<byte>(int len)                                                                               | 56 48 83 ec 20 48 8b f1 48 63 d2 48 b9 10 ea 70 c7 f7 7f 00 00 e8 96 61 18 5f 48 8d 50 10 8b 40 08 48 89 16 89 46 08 48 8b c6 48 83 c4 20 5e c3 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
1         | 7ff7c80e3780h   | 67      | hex://asmcore/AsmConstructs?alloc#alloc_g[8i](32i)                                                            | Span<sbyte> alloc<sbyte>(int len)                                                                             | 56 48 83 ec 20 48 8b f1 48 63 d2 48 b9 98 f0 70 c7 f7 7f 00 00 e8 46 36 18 5f 48 8d 50 10 8b 40 08 48 89 16 89 46 08 48 8b c6 48 83 c4 20 5e c3 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
2         | 7ff7c80e37d0h   | 67      | hex://asmcore/AsmConstructs?alloc#alloc_g[16u](32i)                                                           | Span<ushort> alloc<ushort>(int len)                                                                           | 56 48 83 ec 20 48 8b f1 48 63 d2 48 b9 b8 69 0d c8 f7 7f 00 00 e8 f6 35 18 5f 48 8d 50 10 8b 40 08 48 89 16 89 46 08 48 8b c6 48 83 c4 20 5e c3 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
3         | 7ff7c80e3820h   | 1096    | hex://asmcore/AsmConstructs?alloc#alloc_g[16i](32i)                                                           | Span<short> alloc<short>(int len)                                                                             | 56 48 83 ec 20 48 8b f1 48 63 d2 48 b9 b8 6f 0d c8 f7 7f 00 00 e8 a6 35 18 5f 48 8d 50 10 8b 40 08 48 89 16 89 46 08 48 8b c6 48 83 c4 20 5e c3 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 d3 1d 18 5f 5e 00 03 e8 cb 1d 18 5f 5e 03 02 e8 c3 1d 18 5f 5e 06 01 e8 bb 1d 18 5f 5e 09 00 80 73 0d c8 f7 7f 00 00 e8 ab 1d 18 5f 5e 00 00 10 75 0d c8 f7 7f 00 00 e8 9b 1d 18 5f 5e 00 00 70 75 0d c8 f7 7f 00 00 e8 8b 1d 18 5f 5e 00 00 d0 75 0d c8 f7 7f 00 00 e8 7b 1d 18 5f 5e 00 00 30 76 0d c8 f7 7f 00 00 e9 cb 06 00 00 5f 00 00 90 76 0d c8 f7 7f 00 00 e9 7b 09 00 00 5f 00 00 f0 76 0d c8 f7 7f 00 00 e8 4b 1d 18 5f 5e 00 00 50 77 0d c8 f7 7f 00 00 e8 3b 1d 18 5f 5e 00 01 e8 33 1d 18 5f 5e 01 00 b0 77 0d c8 f7 7f 00 00 e8 23 1d 18 5f 5e 00 1b e8 1b 1d 18 5f 5e 01 1a e8 13 1d 18 5f 5e 02 19 e8 0b 1d 18 5f 5e 03 18 e8 03 1d 18 5f 5e 04 17 e8 fb 1c 18 5f 5e 05 16 e8 f3 1c 18 5f 5e 06 15 e8 eb 1c 18 5f 5e 07 14 e8 e3 1c 18 5f 5e 08 13 e8 db 1c 18 5f 5e 09 12 e8 d3 1c 18 5f 5e 0a 11 e8 cb 1c 18 5f 5e 0b 10 e8 c3 1c 18 5f 5e 0c 0f e8 bb 1c 18 5f 5e 0d 0e e8 b3 1c 18 5f 5e 0e 0d e8 ab 1c 18 5f 5e 0f 0c e8 a3 1c 18 5f 5e 10 0b e8 9b 1c 18 5f 5e 11 0a e8 93 1c 18 5f 5e 12 09 e8 8b 1c 18 5f 5e 13 08 e8 83 1c 18 5f 5e 14 07 e8 7b 1c 18 5f 5e 15 06 e8 73 1c 18 5f 5e 16 05 e8 6b 1c 18 5f 5e 17 04 e8 63 1c 18 5f 5e 18 03 e8 5b 1c 18 5f 5e 19 02 e8 53 1c 18 5f 5e 1a 01 e8 4b 1c 18 5f 5e 1b 00 80 78 0d c8 f7 7f 00 00 e8 3b 1c 18 5f 5e 00 03 e8 33 1c 18 5f 5e 03 02 e8 2b 1c 18 5f 5e 06 01 e8 23 1c 18 5f 5e 09 00 20 7c 0d c8 f7 7f 00 00 e8 13 1c 18 5f 5e 00 00 f0 7c 0d c8 f7 7f 00 00 e8 03 1c 18 5f 5e 00 00 50 7d 0d c8 f7 7f 00 00 e8 f3 1b 18 5f 5e 00 01 e8 eb 1b 18 5f 5e 01 00 b0 7d 0d c8 f7 7f 00 00 e8 db 1b 18 5f 5e 00 1b e8 d3 1b 18 5f 5e 01 1a e8 cb 1b 18 5f 5e 02 19 e8 c3 1b 18 5f 5e 03 18 e8 bb 1b 18 5f 5e 04 17 e8 b3 1b 18 5f 5e 05 16 e8 ab 1b 18 5f 5e 06 15 e8 a3 1b 18 5f 5e 07 14 e8 9b 1b 18 5f 5e 08 13 e8 93 1b 18 5f 5e 09 12 e8 8b 1b 18 5f 5e 0a 11 e8 83 1b 18 5f 5e 0b 10 e8 7b 1b 18 5f 5e 0c 0f e8 73 1b 18 5f 5e 0d 0e e8 6b 1b 18 5f 5e 0e 0d e8 63 1b 18 5f 5e 0f 0c e8 5b 1b 18 5f 5e 10 0b e8 53 1b 18 5f 5e 11 0a e8 4b 1b 18 5f 5e 12 09 e8 43 1b 18 5f 5e 13 08 e8 3b 1b 18 5f 5e 14 07 e8 33 1b 18 5f 5e 15 06 e8 2b 1b 18 5f 5e 16 05 e8 23 1b 18 5f 5e 17 04 e8 1b 1b 18 5f 5e 18 03 e8 13 1b 18 5f 5e 19 02 e8 0b 1b 18 5f 5e 1a 01 e8 03 1b 18 5f 5e 1b 00 80 7e 0d c8 f7 7f 00 00 e8 f3 1a 18 5f 5e 00 00 e8 80 0d c8 f7 7f 00 00 e9 73 0c 00 00 5f 00 00 48 81 0d c8 f7 7f 00 00 e8 d3 1a 18 5f 5e 00 00 a8 81 0d c8 f7 7f 00 00 e8 c3 1a 18 5f 5e 00 01 e8 bb 1a 18 5f 5e 01 00 08 82 0d c8 f7 7f 00 00 e8 ab 1a 18 5f 5e 00 00 40 85 0d c8 f7 7f 00 00 e8 9b 1a 18 5f 5e 00 00 a0 85 0d c8 f7 7f 00 00 e8 8b 1a 18 5f 5e 00 00 18 86 0d c8 f7 7f 00 00 e8 7b 1a 18 5f 5e 00 00 90 86 0d c8 f7 7f 00 00 e8 6b 1a 18 5f 5e 00 10 e8 63 1a 18 5f 5e 01 0f e8 5b 1a 18 5f 5e 02 0e e8 53 1a 18 5f 5e 05 0d e8 4b 1a 18 5f 5e 06 0c e8 43 1a 18 5f 5e 07 0b e8 3b 1a 18 5f 5e 0a 0a e8 33 1a 18 5f 5e 0d 09 e8 2b 1a 18 5f 5e 10 08 e8 23 1a 18 5f 5e 11 07 e8 1b 1a 18 5f 5e 12 06 e8 13 1a 18 5f 5e 13 05 e8 0b 1a 18 5f 5e 14 04 e8 03 1a 18 5f 5e 15 03 e8 fb 19 18 5f 5e 16 02 e8 f3 19 18 5f 5e 17 01 e8 eb 19 18 5f 5e 18 00 e8 86 0d c8 f7 7f 00 00 00 00 00 00 00 00 00 00
4         | 7ff7c80e3c70h   | 67      | hex://asmcore/AsmConstructs?alloc#alloc_g[32u](32i)                                                           | Span<uint> alloc<uint>(int len)                                                                               | 56 48 83 ec 20 48 8b f1 48 63 d2 48 b9 98 72 0d c8 f7 7f 00 00 e8 56 31 18 5f 48 8d 50 10 8b 40 08 48 89 16 89 46 08 48 8b c6 48 83 c4 20 5e c3 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
5         | 7ff7c80e3de0h   | 67      | hex://asmcore/AsmConstructs?alloc#alloc_g[32i](32i)                                                           | Span<int> alloc<int>(int len)                                                                                 | 56 48 83 ec 20 48 8b f1 48 63 d2 48 b9 48 5f 7d c7 f7 7f 00 00 e8 e6 2f 18 5f 48 8d 50 10 8b 40 08 48 89 16 89 46 08 48 8b c6 48 83 c4 20 5e c3 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
6         | 7ff7c80e3e30h   | 67      | hex://asmcore/AsmConstructs?alloc#alloc_g[64u](32i)                                                           | Span<ulong> alloc<ulong>(int len)                                                                             | 56 48 83 ec 20 48 8b f1 48 63 d2 48 b9 a8 14 a8 c7 f7 7f 00 00 e8 96 2f 18 5f 48 8d 50 10 8b 40 08 48 89 16 89 46 08 48 8b c6 48 83 c4 20 5e c3 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
7         | 7ff7c80e40c0h   | 67      | hex://asmcore/AsmConstructs?alloc#alloc_g[64i](32i)                                                           | Span<long> alloc<long>(int len)                                                                               | 56 48 83 ec 20 48 8b f1 48 63 d2 48 b9 38 7b 0d c8 f7 7f 00 00 e8 06 2d 18 5f 48 8d 50 10 8b 40 08 48 89 16 89 46 08 48 8b c6 48 83 c4 20 5e c3 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
8         | 7ff7c80e4210h   | 67      | hex://asmcore/AsmConstructs?alloc#alloc_g[32f](32i)                                                           | Span<float> alloc<float>(int len)                                                                             | 56 48 83 ec 20 48 8b f1 48 63 d2 48 b9 48 6c b9 c7 f7 7f 00 00 e8 b6 2b 18 5f 48 8d 50 10 8b 40 08 48 89 16 89 46 08 48 8b c6 48 83 c4 20 5e c3 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
9         | 7ff7c80e4780h   | 67      | hex://asmcore/AsmConstructs?alloc#alloc_g[64f](32i)                                                           | Span<double> alloc<double>(int len)                                                                           | 56 48 83 ec 20 48 8b f1 48 63 d2 48 b9 50 6e b9 c7 f7 7f 00 00 e8 46 26 18 5f 48 8d 50 10 8b 40 08 48 89 16 89 46 08 48 8b c6 48 83 c4 20 5e c3 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
10        | 7ff7c80e4990h   | 560     | hex://asmcore/AsmConstructs?type#type_g[8u]()                                                                 | Type type<byte>()                                                                                             | 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 4c a6 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 03 00 00 00 00 00 00 00 48 89 c8 48 8b 49 10 48 8b 49 18 48 85 c9 74 04 48 89 c8 c3 48 89 c1 48 ba 60 16 0e c8 f7 7f 00 00 e9 8a 6f 13 5f cc cc 31 8b 08 2b f8 7f 00 00 b0 1c 8b c7 f7 7f 00 00 02 00 00 00 00 00 00 00 48 89 c8 48 8b 49 30 48 8b 49 00 48 8b 49 10 48 85 c9 74 04 48 89 c8 c3 48 89 c1 48 ba e8 49 0e c8 f7 7f 00 00 e9 46 fe 0e 5f cc cc cc cc cc cc 1e 7e 44 3d f8 7f 00 00 10 df 84 c7 f7 7f 00 00 02 00 00 00 00 00 00 00 48 89 c8 48 8b 49 30 48 8b 49 00 48 8b 49 10 48 85 c9 74 04 48 89 c8 c3 48 89 c1 48 ba 30 4a 0e c8 f7 7f 00 00 e9 fe fd 0e 5f cc cc cc cc cc cc a1 7e 44 3d f8 7f 00 00 10 df 84 c7 f7 7f 00 00 06 00 00 00 00 00 00 00 48 89 c8 48 8b 49 30 48 8b 49 00 48 8b 49 30 48 85 c9 74 04 48 89 c8 c3 48 89 c1 48 ba 78 4a 0e c8 f7 7f 00 00 e9 b6 fd 0e 5f cc cc cc cc cc cc 2f 7e 44 3d f8 7f 00 00 10 df 84 c7 f7 7f 00 00 03 00 00 00 00 00 00 00 48 89 c8 48 8b 49 30 48 8b 49 00 48 8b 49 18 48 85 c9 74 04 48 89 c8 c3 48 89 c1 48 ba c0 4a 0e c8 f7 7f 00 00 e9 6e fd 0e 5f cc cc cc cc cc cc 48 b9 00 dc 0d c8 f7 7f 00 00 e9 99 21 18 5f cc 48 b9 38 00 84 c7 f7 7f 00 00 e9 89 21 18 5f cc cc 68 08 2b f8 7f 00 00 b0 1c 8b c7 f7 7f 00 00 03 00 00 00 00 00 00 00 48 89 c8 48 8b 49 10 48 8b 49 18 48 85 c9 74 04 48 89 c8 c3 48 89 c1 48 ba 28 4b 0e c8 f7 7f 00 00 e9 0a 6e 13 5f cc cc d6 68 08 2b f8 7f 00 00 b0 1c 8b c7 f7 7f 00 00 04 00 00 00 00 00 00 00 48 89 c8 48 8b 49 10 48 8b 49 20 48 85 c9 74 04 48 89 c8 c3 48 89 c1 48 ba 68 4b 0e c8 f7 7f 00 00 e9 ca 6d 13 5f cc cc db 68 08 2b f8 7f 00 00 b0 1c 8b c7 f7 7f 00 00 00 00 00 00 00 00 00 00
11        | 7ff7c80e4dd0h   | 531     | hex://asmcore/AsmConstructs?type#type_g[8i]()                                                                 | Type type<sbyte>()                                                                                            | 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 0c a2 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 08 d9 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 dc a1 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 70 d9 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 ac a1 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 d8 d9 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 7c a1 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 40 da 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 4c a1 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 a8 da 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 1c a1 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 10 db 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 ec a0 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 78 db 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 bc a0 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 e0 db 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 8c a0 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 30 dc 0c c8 f7 7f 00 00 56 48 83 ec 20 c5 f8 77 48 8b f1 48 8b 4e 40 48 85 c9 74 18 49 bb 50 04 61 c7 f7 7f 00 00 39 09 ff 15 aa b4 52 ff 33 c0 48 89 46 40 48 8d 46 10 33 d2 c5 f8 57 c0 c5 fa 7f 00 48 89 50 10 c7 46 0c ff ff ff ff 48 83 c4 20 5e c3 cc cc 00 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
12        | 7ff7c80e4e00h   | 483     | hex://asmcore/AsmConstructs?type#type_g[16u]()                                                                | Type type<ushort>()                                                                                           | 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 dc a1 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 70 d9 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 ac a1 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 d8 d9 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 7c a1 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 40 da 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 4c a1 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 a8 da 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 1c a1 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 10 db 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 ec a0 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 78 db 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 bc a0 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 e0 db 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 8c a0 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 30 dc 0c c8 f7 7f 00 00 56 48 83 ec 20 c5 f8 77 48 8b f1 48 8b 4e 40 48 85 c9 74 18 49 bb 50 04 61 c7 f7 7f 00 00 39 09 ff 15 aa b4 52 ff 33 c0 48 89 46 40 48 8d 46 10 33 d2 c5 f8 57 c0 c5 fa 7f 00 48 89 50 10 c7 46 0c ff ff ff ff 48 83 c4 20 5e c3 cc cc 00 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
13        | 7ff7c80e4e30h   | 435     | hex://asmcore/AsmConstructs?type#type_g[16i]()                                                                | Type type<short>()                                                                                            | 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 ac a1 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 d8 d9 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 7c a1 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 40 da 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 4c a1 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 a8 da 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 1c a1 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 10 db 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 ec a0 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 78 db 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 bc a0 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 e0 db 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 8c a0 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 30 dc 0c c8 f7 7f 00 00 56 48 83 ec 20 c5 f8 77 48 8b f1 48 8b 4e 40 48 85 c9 74 18 49 bb 50 04 61 c7 f7 7f 00 00 39 09 ff 15 aa b4 52 ff 33 c0 48 89 46 40 48 8d 46 10 33 d2 c5 f8 57 c0 c5 fa 7f 00 48 89 50 10 c7 46 0c ff ff ff ff 48 83 c4 20 5e c3 cc cc 00 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
14        | 7ff7c80e4e60h   | 387     | hex://asmcore/AsmConstructs?type#type_g[32u]()                                                                | Type type<uint>()                                                                                             | 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 7c a1 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 40 da 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 4c a1 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 a8 da 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 1c a1 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 10 db 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 ec a0 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 78 db 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 bc a0 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 e0 db 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 8c a0 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 30 dc 0c c8 f7 7f 00 00 56 48 83 ec 20 c5 f8 77 48 8b f1 48 8b 4e 40 48 85 c9 74 18 49 bb 50 04 61 c7 f7 7f 00 00 39 09 ff 15 aa b4 52 ff 33 c0 48 89 46 40 48 8d 46 10 33 d2 c5 f8 57 c0 c5 fa 7f 00 48 89 50 10 c7 46 0c ff ff ff ff 48 83 c4 20 5e c3 cc cc 00 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
15        | 7ff7c80e4e90h   | 339     | hex://asmcore/AsmConstructs?type#type_g[32i]()                                                                | Type type<int>()                                                                                              | 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 4c a1 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 a8 da 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 1c a1 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 10 db 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 ec a0 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 78 db 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 bc a0 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 e0 db 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 8c a0 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 30 dc 0c c8 f7 7f 00 00 56 48 83 ec 20 c5 f8 77 48 8b f1 48 8b 4e 40 48 85 c9 74 18 49 bb 50 04 61 c7 f7 7f 00 00 39 09 ff 15 aa b4 52 ff 33 c0 48 89 46 40 48 8d 46 10 33 d2 c5 f8 57 c0 c5 fa 7f 00 48 89 50 10 c7 46 0c ff ff ff ff 48 83 c4 20 5e c3 cc cc 00 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
16        | 7ff7c80e4ec0h   | 291     | hex://asmcore/AsmConstructs?type#type_g[64u]()                                                                | Type type<ulong>()                                                                                            | 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 1c a1 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 10 db 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 ec a0 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 78 db 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 bc a0 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 e0 db 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 8c a0 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 30 dc 0c c8 f7 7f 00 00 56 48 83 ec 20 c5 f8 77 48 8b f1 48 8b 4e 40 48 85 c9 74 18 49 bb 50 04 61 c7 f7 7f 00 00 39 09 ff 15 aa b4 52 ff 33 c0 48 89 46 40 48 8d 46 10 33 d2 c5 f8 57 c0 c5 fa 7f 00 48 89 50 10 c7 46 0c ff ff ff ff 48 83 c4 20 5e c3 cc cc 00 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
17        | 7ff7c80e4ef0h   | 243     | hex://asmcore/AsmConstructs?type#type_g[64i]()                                                                | Type type<long>()                                                                                             | 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 ec a0 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 78 db 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 bc a0 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 e0 db 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 8c a0 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 30 dc 0c c8 f7 7f 00 00 56 48 83 ec 20 c5 f8 77 48 8b f1 48 8b 4e 40 48 85 c9 74 18 49 bb 50 04 61 c7 f7 7f 00 00 39 09 ff 15 aa b4 52 ff 33 c0 48 89 46 40 48 8d 46 10 33 d2 c5 f8 57 c0 c5 fa 7f 00 48 89 50 10 c7 46 0c ff ff ff ff 48 83 c4 20 5e c3 cc cc 00 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
18        | 7ff7c80e4f20h   | 195     | hex://asmcore/AsmConstructs?type#type_g[32f]()                                                                | Type type<float>()                                                                                            | 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 bc a0 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 e0 db 0c c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 8c a0 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 30 dc 0c c8 f7 7f 00 00 56 48 83 ec 20 c5 f8 77 48 8b f1 48 8b 4e 40 48 85 c9 74 18 49 bb 50 04 61 c7 f7 7f 00 00 39 09 ff 15 aa b4 52 ff 33 c0 48 89 46 40 48 8d 46 10 33 d2 c5 f8 57 c0 c5 fa 7f 00 48 89 50 10 c7 46 0c ff ff ff ff 48 83 c4 20 5e c3 cc cc 00 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
19        | 7ff7c80e4f50h   | 147     | hex://asmcore/AsmConstructs?type#type_g[64f]()                                                                | Type type<double>()                                                                                           | 48 83 ec 28 90 48 b9 f8 25 70 c7 f7 7f 00 00 e8 8c a0 12 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 30 dc 0c c8 f7 7f 00 00 56 48 83 ec 20 c5 f8 77 48 8b f1 48 8b 4e 40 48 85 c9 74 18 49 bb 50 04 61 c7 f7 7f 00 00 39 09 ff 15 aa b4 52 ff 33 c0 48 89 46 40 48 8d 46 10 33 d2 c5 f8 57 c0 c5 fa 7f 00 48 89 50 10 c7 46 0c ff ff ff ff 48 83 c4 20 5e c3 cc cc 00 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
20        | 7ff7c80e52b0h   | 67      | hex://asmcore/AsmConstructs?for_min_max#for_min_max_(32i,32i)                                                 | void for_min_max(int i0, int i1, Action<int> f)                                                               | 57 56 53 48 83 ec 20 8b f2 49 8b f8 8b d9 3b de 7d 12 48 8b c7 48 8b 48 08 8b d3 ff 50 18 ff c3 3b de 7c ee 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
21        | 7ff7c80e5a60h   | 424     | hex://asmcore/AsmConstructs?for_min_max#for_min_max_()                                                        | int for_min_max()                                                                                             | 57 56 48 83 ec 28 48 b9 58 94 bf c7 f7 7f 00 00 e8 3b 12 18 5f 48 8b f0 33 c9 89 4e 08 48 b9 f0 92 0d c8 f7 7f 00 00 e8 24 12 18 5f 48 8b f8 48 8d 4f 08 48 8b d6 e8 55 03 18 5f 49 b8 10 c3 a1 c7 f7 7f 00 00 4c 89 47 18 4c 8b c7 33 c9 ba 08 00 00 00 e8 f8 f7 ff ff 8b 46 08 48 83 c4 28 5e 5f c3 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 5b fb 17 5f 5e 00 22 e8 53 fb 17 5f 5e 04 21 e8 4b fb 17 5f 5e 08 20 e8 43 fb 17 5f 5e 0c 1f e8 3b fb 17 5f 5e 10 1e e8 33 fb 17 5f 5e 14 1d e8 2b fb 17 5f 5e 18 1c e8 23 fb 17 5f 5e 1c 1b e8 1b fb 17 5f 5e 20 1a e8 13 fb 17 5f 5e 24 19 e8 0b fb 17 5f 5e 28 18 e8 03 fb 17 5f 5e 2a 17 e8 fb fa 17 5f 5e 2c 16 e8 f3 fa 17 5f 5e 2e 15 e8 eb fa 17 5f 5e 30 14 e8 e3 fa 17 5f 5e 32 13 e8 db fa 17 5f 5e 34 12 e8 d3 fa 17 5f 5e 36 11 e8 cb fa 17 5f 5e 38 10 e8 c3 fa 17 5f 5e 3c 0f e8 bb fa 17 5f 5e 40 0e e8 b3 fa 17 5f 5e 44 0d e8 ab fa 17 5f 5e 48 0c e8 a3 fa 17 5f 5e 4c 0b e8 9b fa 17 5f 5e 50 0a e8 93 fa 17 5f 5e 54 09 e8 8b fa 17 5f 5e 58 08 e8 83 fa 17 5f 5e 5c 07 e8 7b fa 17 5f 5e 60 06 e8 73 fa 17 5f 5e 64 05 e8 6b fa 17 5f 5e 68 04 e8 63 fa 17 5f 5e 6c 03 e8 5b fa 17 5f 5e 70 02 e8 53 fa 17 5f 5e 74 01 e8 4b fa 17 5f 5e 78 00 f8 a2 0d c8 f7 7f 00 00 00 00 00 00 00 00 00 00
22        | 7ff7c80e5c10h   | 903     | hex://asmcore/AsmConstructs?compute_32u#compute_32u_(BinaryBitLogicKind~8u,32u,32u)                           | uint compute_32u(BinaryBitLogicKind:byte op, uint a, uint b)                                                  | 0f 1f 44 00 00 0f b6 c9 83 f9 0f 0f 87 89 00 00 00 8b c1 48 8d 0d 86 00 00 00 8b 0c 81 4c 8d 0d e1 ff ff ff 49 03 c9 ff e1 33 c0 eb 6f 8b c2 41 23 c0 eb 68 c4 e2 38 f2 c2 eb 61 8b c2 eb 5d c4 c2 68 f2 c0 eb 56 41 8b c0 eb 51 8b c2 41 33 c0 eb 4a 8b c2 41 0b c0 eb 43 8b c2 41 0b c0 f7 d0 eb 3a 8b c2 41 33 c0 f7 d0 eb 31 41 8b c0 f7 d0 eb 2a 41 8b c0 f7 d0 0b c2 eb 21 8b c2 f7 d0 eb 1b 8b c2 f7 d0 41 0b c0 eb 12 8b c2 41 23 c0 f7 d0 eb 09 b8 ff ff ff ff eb 02 33 c0 c3 00 00 00 24 00 00 00 28 00 00 00 2f 00 00 00 36 00 00 00 3a 00 00 00 41 00 00 00 46 00 00 00 4d 00 00 00 54 00 00 00 5d 00 00 00 66 00 00 00 6d 00 00 00 76 00 00 00 7c 00 00 00 85 00 00 00 8e 00 00 00 19 00 00 00 40 00 00 00 e0 28 16 c8 f7 7f 00 00 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 28 48 89 44 24 30 48 89 44 24 38 48 8b f9 48 8b f2 48 8b ce 48 8b 06 48 8b 40 70 ff 50 30 85 c0 75 31 48 b9 58 c7 7d c7 f7 7f 00 00 ba 0a 01 00 00 e8 6a 13 18 5f 48 b9 08 59 00 10 db 01 00 00 48 8b 09 48 83 c1 08 48 8b 19 48 8b 41 08 8b 49 10 eb 50 48 8b ce 48 8b 06 48 8b 40 40 ff 50 30 48 8b d8 48 8b ce 48 8b 06 48 8b 80 98 00 00 00 ff 50 38 48 8b c8 e8 75 d8 66 ff 44 8b c0 33 c9 48 8d 54 24 28 c5 f8 57 c0 c5 fa 7f 02 48 89 4a 10 48 8d 4c 24 28 48 8b d3 e8 ca 9c 67 ff 48 8b 5c 24 28 48 8b cb e8 45 5e e0 4d 84 c0 75 1e 48 8b d3 b9 01 00 00 00 88 0f 48 8d 4f 08 e8 ee ff 17 5f 48 8b c7 48 83 c4 40 5b 5e 5f c3 33 c0 88 07 33 c0 48 89 47 08 48 8b c7 48 83 c4 40 5b 5e 5f c3 cc cc 19 07 04 00 07 72 03 30 02 60 01 70 40 00 00 00 00 00 00 00 68 29 16 c8 f7 7f 00 00 41 57 41 56 57 56 55 53 48 83 ec 48 33 c0 48 89 44 24 28 48 89 44 24 30 48 89 44 24 38 48 89 44 24 40 48 8b f1 41 8b f8 48 8d 4e 08 e8 7f ff 17 5f 89 7e 10 48 8b de 85 ff 75 12 48 b9 60 30 00 10 db 01 00 00 48 8b 11 e9 02 01 00 00 48 b9 10 67 70 c7 f7 7f 00 00 e8 44 0e 18 5f 48 8b e8 48 8b 5b 08 66 c7 45 08 7e 00 48 b9 08 8f 70 c7 f7 7f 00 00 e8 28 0e 18 5f 4c 8b f0 0f b7 cf 41 89 4e 08 f7 c7 00 00 00 20 74 08 41 bf 75 00 00 00 eb 23 f7 c7 00 00 00 80 74 08 41 bf 69 00 00 00 eb 13 f7 c7 00 00 00 40 74 08 41 bf 66 00 00 00 eb 03 45 33 ff 45 85 ff 75 07 bf 65 00 00 00 eb 03 41 8b ff b9 01 00 00 00 e8 ca e5 64 ff 66 89 78 0c 45 33 c0 48 ba 90 13 00 10 db 01 00 00 48 8b 12 48 b9 f0 98 00 10 db 01 00 00 48 8b 09 4c 8d 4c 24 28 4d 89 31 49 89 41 08 4d 89 41 10 49 89 51 18 4c 8d 44 24 28 48 8b d1 33 c9 e8 1e fd e0 4d 49 b8 98 13 00 10 db 01 00 00 4d 8b 00 48 ba 18 99 00 10 db 01 00 00 48 8b 12 48 8d 4c 24 28 48 89 19 48 89 69 08 48 89 41 10 4c 89 41 18 4c 8d 44 24 28 33 c9 e8 e4 fc e0 4d 48 8b d0 48 8b ce e8 59 fe 17 5f 90 48 83 c4 48 5b 5d 5e 5f 41 5e 41 5f c3 00 00 00 19 0c 07 00 0c 82 08 30 07 50 06 60 05 70 04 e0 02 f0 00 00 40 00 00 00 00 00 00 00 00 00 00
