Sequence  | Address         | Length  | Uri                                                                                                           | OpSig                                                                                                         | Data
0         | 7ff7c8531d40h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[8u]()                                                         | bit eval<byte>(ILogicExpr<byte> expr)                                                                         | 0f 1f 44 00 00 48 b8 c8 5f d9 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
1         | 7ff7c8531d70h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[8i]()                                                         | bit eval<sbyte>(ILogicExpr<sbyte> expr)                                                                       | 0f 1f 44 00 00 48 b8 c8 5f d9 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
2         | 7ff7c8531da0h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[16u]()                                                        | bit eval<ushort>(ILogicExpr<ushort> expr)                                                                     | 0f 1f 44 00 00 48 b8 c8 5f d9 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
3         | 7ff7c8531dd0h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[16i]()                                                        | bit eval<short>(ILogicExpr<short> expr)                                                                       | 0f 1f 44 00 00 48 b8 c8 5f d9 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
4         | 7ff7c8531e00h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[32u]()                                                        | bit eval<uint>(ILogicExpr<uint> expr)                                                                         | 0f 1f 44 00 00 48 b8 c8 5f d9 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
5         | 7ff7c8531e30h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[32i]()                                                        | bit eval<int>(ILogicExpr<int> expr)                                                                           | 0f 1f 44 00 00 48 b8 c8 5f d9 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
6         | 7ff7c8531e60h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[64u]()                                                        | bit eval<ulong>(ILogicExpr<ulong> expr)                                                                       | 0f 1f 44 00 00 48 b8 c8 5f d9 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
7         | 7ff7c8531e90h   | 35      | hex://logix/logic.engine?eval#eval_logic_expr_g[64i]()                                                        | bit eval<long>(ILogicExpr<long> expr)                                                                         | 0f 1f 44 00 00 48 b8 c8 5f d9 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
8         | 7ff7c8531ec0h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[8u]()                                                        | LiteralExpr<byte> eval<byte>(IExpr<byte> expr)                                                                | 0f 1f 44 00 00 48 b8 20 19 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
9         | 7ff7c8531ef0h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[8i]()                                                        | LiteralExpr<sbyte> eval<sbyte>(IExpr<sbyte> expr)                                                             | 0f 1f 44 00 00 48 b8 50 19 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
10        | 7ff7c8531f20h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[16u]()                                                       | LiteralExpr<ushort> eval<ushort>(IExpr<ushort> expr)                                                          | 0f 1f 44 00 00 48 b8 70 19 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
11        | 7ff7c8531f50h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[16i]()                                                       | LiteralExpr<short> eval<short>(IExpr<short> expr)                                                             | 0f 1f 44 00 00 48 b8 90 19 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
12        | 7ff7c8531f80h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[32u]()                                                       | LiteralExpr<uint> eval<uint>(IExpr<uint> expr)                                                                | 0f 1f 44 00 00 48 b8 b0 19 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
13        | 7ff7c8531fb0h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[32i]()                                                       | LiteralExpr<int> eval<int>(IExpr<int> expr)                                                                   | 0f 1f 44 00 00 48 b8 d0 19 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
14        | 7ff7c8531fe0h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[64u]()                                                       | LiteralExpr<ulong> eval<ulong>(IExpr<ulong> expr)                                                             | 0f 1f 44 00 00 48 b8 f0 19 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
15        | 7ff7c8532010h   | 35      | hex://logix/logic.engine?eval#eval_scalar_expr_g[64i]()                                                       | LiteralExpr<long> eval<long>(IExpr<long> expr)                                                                | 0f 1f 44 00 00 48 b8 10 1a 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
16        | 7ff7c8532040h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[8u]()                                                           | LiteralExpr<byte> eval<byte>(IComparisonExpr<byte> expr)                                                      | 0f 1f 44 00 00 48 b8 20 7b 3b c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
17        | 7ff7c8532070h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[8i]()                                                           | LiteralExpr<sbyte> eval<sbyte>(IComparisonExpr<sbyte> expr)                                                   | 0f 1f 44 00 00 48 b8 10 7c 3b c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
18        | 7ff7c85320a0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[16u]()                                                          | LiteralExpr<ushort> eval<ushort>(IComparisonExpr<ushort> expr)                                                | 0f 1f 44 00 00 48 b8 d0 7c 3b c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
19        | 7ff7c85320d0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[16i]()                                                          | LiteralExpr<short> eval<short>(IComparisonExpr<short> expr)                                                   | 0f 1f 44 00 00 48 b8 90 7d 3b c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
20        | 7ff7c8532100h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[32u]()                                                          | LiteralExpr<uint> eval<uint>(IComparisonExpr<uint> expr)                                                      | 0f 1f 44 00 00 48 b8 50 7e 3b c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
21        | 7ff7c8532130h   | 35      | hex://logix/logic.engine?eval#eval_cmp_expr_g[32i]()                                                          | LiteralExpr<int> eval<int>(IComparisonExpr<int> expr)                                                         | 0f 1f 44 00 00 48 b8 10 7f 3b c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
22        | 7ff7c8532160h   | 1107    | hex://logix/logic.engine?eval#eval_cmp_expr_g[64i]()                                                          | LiteralExpr<long> eval<long>(IComparisonExpr<long> expr)                                                      | 0f 1f 44 00 00 48 b8 d0 7f 3b c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 b3 34 d3 5e 5e 00 0a e8 ab 34 d3 5e 5e 01 09 e8 a3 34 d3 5e 5e 02 08 e8 9b 34 d3 5e 5e 03 07 e8 93 34 d3 5e 5e 04 06 e8 8b 34 d3 5e 5e 05 05 e8 83 34 d3 5e 5e 06 04 e8 7b 34 d3 5e 5e 07 03 e8 73 34 d3 5e 5e 08 02 e8 6b 34 d3 5e 5e 09 01 e8 63 34 d3 5e 5e 0a 00 b8 cb 52 c8 f7 7f 00 00 e8 53 34 d3 5e 5e 00 00 28 d0 52 c8 f7 7f 00 00 e8 43 34 d3 5e 5e 00 00 88 d0 52 c8 f7 7f 00 00 e8 33 34 d3 5e 5e 00 00 e8 d0 52 c8 f7 7f 00 00 e8 23 34 d3 5e 5e 00 00 48 d1 52 c8 f7 7f 00 00 e8 13 34 d3 5e 5e 00 00 a8 d1 52 c8 f7 7f 00 00 e8 03 34 d3 5e 5e 00 00 08 d2 52 c8 f7 7f 00 00 e8 f3 33 d3 5e 5e 00 0c e8 eb 33 d3 5e 5e 01 0b e8 e3 33 d3 5e 5e 02 0a e8 db 33 d3 5e 5e 03 09 e8 d3 33 d3 5e 5e 04 08 e8 cb 33 d3 5e 5e 05 07 e8 c3 33 d3 5e 5e 06 06 e8 bb 33 d3 5e 5e 07 05 e8 b3 33 d3 5e 5e 08 04 e8 ab 33 d3 5e 5e 09 03 e8 a3 33 d3 5e 5e 0a 02 e8 9b 33 d3 5e 5e 0b 01 e8 93 33 d3 5e 5e 0c 00 98 d2 52 c8 f7 7f 00 00 e8 83 33 d3 5e 5e 00 00 20 d4 52 c8 f7 7f 00 00 e8 73 33 d3 5e 5e 00 0a e8 6b 33 d3 5e 5e 01 09 e8 63 33 d3 5e 5e 02 08 e8 5b 33 d3 5e 5e 03 07 e8 53 33 d3 5e 5e 04 06 e8 4b 33 d3 5e 5e 05 05 e8 43 33 d3 5e 5e 06 04 e8 3b 33 d3 5e 5e 07 03 e8 33 33 d3 5e 5e 08 02 e8 2b 33 d3 5e 5e 09 01 e8 23 33 d3 5e 5e 0a 00 d0 d4 52 c8 f7 7f 00 00 e8 13 33 d3 5e 5e 00 00 50 d6 52 c8 f7 7f 00 00 e8 03 33 d3 5e 5e 00 03 e8 fb 32 d3 5e 5e 01 02 e8 f3 32 d3 5e 5e 02 01 e8 eb 32 d3 5e 5e 03 00 88 d7 52 c8 f7 7f 00 00 e8 db 32 d3 5e 5e 00 00 80 d8 52 c8 f7 7f 00 00 e8 cb 32 d3 5e 5e 00 00 e0 d8 52 c8 f7 7f 00 00 e8 bb 32 d3 5e 5e 00 00 40 d9 52 c8 f7 7f 00 00 e8 ab 32 d3 5e 5e 00 00 a0 d9 52 c8 f7 7f 00 00 e8 9b 32 d3 5e 5e 00 00 00 da 52 c8 f7 7f 00 00 e8 8b 32 d3 5e 5e 00 00 60 da 52 c8 f7 7f 00 00 e8 7b 32 d3 5e 5e 00 00 c0 da 52 c8 f7 7f 00 00 e8 6b 32 d3 5e 5e 00 00 20 db 52 c8 f7 7f 00 00 e8 5b 32 d3 5e 5e 00 03 e8 53 32 d3 5e 5e 01 02 e8 4b 32 d3 5e 5e 02 01 e8 43 32 d3 5e 5e 03 00 f8 db 52 c8 f7 7f 00 00 e8 33 32 d3 5e 5e 00 00 68 dd 52 c8 f7 7f 00 00 e8 23 32 d3 5e 5e 00 00 c8 dd 52 c8 f7 7f 00 00 e8 13 32 d3 5e 5e 00 00 28 de 52 c8 f7 7f 00 00 e8 03 32 d3 5e 5e 00 00 88 de 52 c8 f7 7f 00 00 e8 f3 31 d3 5e 5e 00 00 e8 de 52 c8 f7 7f 00 00 e8 e3 31 d3 5e 5e 00 00 48 df 52 c8 f7 7f 00 00 e8 d3 31 d3 5e 5e 00 00 a8 df 52 c8 f7 7f 00 00 e8 c3 31 d3 5e 5e 00 00 08 e0 52 c8 f7 7f 00 00 e8 b3 31 d3 5e 5e 00 0a e8 ab 31 d3 5e 5e 01 09 e8 a3 31 d3 5e 5e 02 08 e8 9b 31 d3 5e 5e 03 07 e8 93 31 d3 5e 5e 04 06 e8 8b 31 d3 5e 5e 05 05 e8 83 31 d3 5e 5e 06 04 e8 7b 31 d3 5e 5e 07 03 e8 73 31 d3 5e 5e 08 02 e8 6b 31 d3 5e 5e 09 01 e8 63 31 d3 5e 5e 0a 00 68 e0 52 c8 f7 7f 00 00 e8 53 31 d3 5e 5e 00 00 00 e2 52 c8 f7 7f 00 00 e8 43 31 d3 5e 5e 00 00 d0 e3 52 c8 f7 7f 00 00 e8 33 31 d3 5e 5e 00 00 30 e4 52 c8 f7 7f 00 00 e8 23 31 d3 5e 5e 00 00 90 e4 52 c8 f7 7f 00 00 e8 13 31 d3 5e 5e 00 02 e8 0b 31 d3 5e 5e 01 01 e8 03 31 d3 5e 5e 02 00 e0 e4 52 c8 f7 7f 00 00 e8 f3 30 d3 5e 5e 00 00 d0 e5 52 c8 f7 7f 00 00 e8 e3 30 d3 5e 5e 00 00 30 e6 52 c8 f7 7f 00 00 e8 d3 30 d3 5e 5e 00 02 e8 cb 30 d3 5e 5e 01 01 e8 c3 30 d3 5e 5e 02 00 80 e6 52 c8 f7 7f 00 00 88 22 73 c8 f7 7f 00 00 0f 1f 44 00 00 48 b8 60 89 3b c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
23        | 7ff7c8532590h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[8u]()                                                       | LiteralExpr<Vector128<byte>> eval<byte>(IComparisonExpr<Vector128<byte>> expr)                                | 0f 1f 44 00 00 48 b8 60 89 3b c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
24        | 7ff7c85325c0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[8i]()                                                       | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IComparisonExpr<Vector128<sbyte>> expr)                             | 0f 1f 44 00 00 48 b8 50 8a 3b c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
25        | 7ff7c85325f0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[16u]()                                                      | LiteralExpr<Vector128<ushort>> eval<ushort>(IComparisonExpr<Vector128<ushort>> expr)                          | 0f 1f 44 00 00 48 b8 80 04 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
26        | 7ff7c8532620h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[16i]()                                                      | LiteralExpr<Vector128<short>> eval<short>(IComparisonExpr<Vector128<short>> expr)                             | 0f 1f 44 00 00 48 b8 70 05 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
27        | 7ff7c8532650h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[32u]()                                                      | LiteralExpr<Vector128<uint>> eval<uint>(IComparisonExpr<Vector128<uint>> expr)                                | 0f 1f 44 00 00 48 b8 60 06 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
28        | 7ff7c8532680h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[32i]()                                                      | LiteralExpr<Vector128<int>> eval<int>(IComparisonExpr<Vector128<int>> expr)                                   | 0f 1f 44 00 00 48 b8 50 07 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
29        | 7ff7c85326b0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr128_g[64i]()                                                      | LiteralExpr<Vector128<long>> eval<long>(IComparisonExpr<Vector128<long>> expr)                                | 0f 1f 44 00 00 48 b8 50 0c 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
30        | 7ff7c85326e0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[8u]()                                                       | LiteralExpr<Vector256<byte>> eval<byte>(IComparisonExpr<Vector256<byte>> expr)                                | 0f 1f 44 00 00 48 b8 40 0d 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
31        | 7ff7c8532710h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[8i]()                                                       | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IComparisonExpr<Vector256<sbyte>> expr)                             | 0f 1f 44 00 00 48 b8 60 0e 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
32        | 7ff7c8532740h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[16u]()                                                      | LiteralExpr<Vector256<ushort>> eval<ushort>(IComparisonExpr<Vector256<ushort>> expr)                          | 0f 1f 44 00 00 48 b8 90 13 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
33        | 7ff7c8532770h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[16i]()                                                      | LiteralExpr<Vector256<short>> eval<short>(IComparisonExpr<Vector256<short>> expr)                             | 0f 1f 44 00 00 48 b8 b0 14 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
34        | 7ff7c85327a0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[32u]()                                                      | LiteralExpr<Vector256<uint>> eval<uint>(IComparisonExpr<Vector256<uint>> expr)                                | 0f 1f 44 00 00 48 b8 d0 15 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
35        | 7ff7c85327d0h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[32i]()                                                      | LiteralExpr<Vector256<int>> eval<int>(IComparisonExpr<Vector256<int>> expr)                                   | 0f 1f 44 00 00 48 b8 f0 16 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
36        | 7ff7c8532800h   | 35      | hex://logix/logic.engine?eval#eval_vcmp_expr256_g[64i]()                                                      | LiteralExpr<Vector256<long>> eval<long>(IComparisonExpr<Vector256<long>> expr)                                | 0f 1f 44 00 00 48 b8 20 1c 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
37        | 7ff7c8532830h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[8u]()                                                           | bit eval<byte>(IComparisonPred<byte> expr)                                                                    | 0f 1f 44 00 00 48 b8 90 80 3b c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
38        | 7ff7c8532860h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[8i]()                                                           | bit eval<sbyte>(IComparisonPred<sbyte> expr)                                                                  | 0f 1f 44 00 00 48 b8 40 81 3b c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
39        | 7ff7c8532890h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[16u]()                                                          | bit eval<ushort>(IComparisonPred<ushort> expr)                                                                | 0f 1f 44 00 00 48 b8 f0 85 3b c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
40        | 7ff7c85328c0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[16i]()                                                          | bit eval<short>(IComparisonPred<short> expr)                                                                  | 0f 1f 44 00 00 48 b8 a0 86 3b c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
41        | 7ff7c85328f0h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[32u]()                                                          | bit eval<uint>(IComparisonPred<uint> expr)                                                                    | 0f 1f 44 00 00 48 b8 50 87 3b c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
42        | 7ff7c8532920h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[32i]()                                                          | bit eval<int>(IComparisonPred<int> expr)                                                                      | 0f 1f 44 00 00 48 b8 00 88 3b c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
43        | 7ff7c8532950h   | 35      | hex://logix/logic.engine?eval#eval_cmp_pred_g[64i]()                                                          | bit eval<long>(IComparisonPred<long> expr)                                                                    | 0f 1f 44 00 00 48 b8 b0 88 3b c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
44        | 7ff7c8532980h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[8u]()                                                         | LiteralExpr<byte> eval<byte>(IArithmeticExpr<byte> expr)                                                      | 0f 1f 44 00 00 48 b8 08 25 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
45        | 7ff7c85329b0h   | 1107    | hex://logix/logic.engine?eval#eval_arith_expr_g[8i]()                                                         | LiteralExpr<sbyte> eval<sbyte>(IArithmeticExpr<sbyte> expr)                                                   | 0f 1f 44 00 00 48 b8 58 25 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 63 2c d3 5e 5e 00 00 70 e7 52 c8 f7 7f 00 00 e8 53 2c d3 5e 5e 00 00 d0 e7 52 c8 f7 7f 00 00 e8 43 2c d3 5e 5e 00 02 e8 3b 2c d3 5e 5e 01 01 e8 33 2c d3 5e 5e 02 00 20 e8 52 c8 f7 7f 00 00 e8 23 2c d3 5e 5e 00 00 10 e9 52 c8 f7 7f 00 00 e8 13 2c d3 5e 5e 00 00 70 e9 52 c8 f7 7f 00 00 e8 03 2c d3 5e 5e 00 02 e8 fb 2b d3 5e 5e 01 01 e8 f3 2b d3 5e 5e 02 00 c0 e9 52 c8 f7 7f 00 00 e8 e3 2b d3 5e 5e 00 00 b0 ea 52 c8 f7 7f 00 00 e8 d3 2b d3 5e 5e 00 00 10 eb 52 c8 f7 7f 00 00 e8 c3 2b d3 5e 5e 00 02 e8 bb 2b d3 5e 5e 01 01 e8 b3 2b d3 5e 5e 02 00 60 eb 52 c8 f7 7f 00 00 e8 a3 2b d3 5e 5e 00 00 50 ec 52 c8 f7 7f 00 00 e8 93 2b d3 5e 5e 00 00 b0 ec 52 c8 f7 7f 00 00 e8 83 2b d3 5e 5e 00 02 e8 7b 2b d3 5e 5e 01 01 e8 73 2b d3 5e 5e 02 00 00 ed 52 c8 f7 7f 00 00 e8 63 2b d3 5e 5e 00 00 f0 ed 52 c8 f7 7f 00 00 e8 53 2b d3 5e 5e 00 00 50 ee 52 c8 f7 7f 00 00 e8 43 2b d3 5e 5e 00 02 e8 3b 2b d3 5e 5e 01 01 e8 33 2b d3 5e 5e 02 00 a0 ee 52 c8 f7 7f 00 00 e8 23 2b d3 5e 5e 00 00 90 ef 52 c8 f7 7f 00 00 e8 13 2b d3 5e 5e 00 00 f0 ef 52 c8 f7 7f 00 00 e8 03 2b d3 5e 5e 00 02 e8 fb 2a d3 5e 5e 01 01 e8 f3 2a d3 5e 5e 02 00 40 f0 52 c8 f7 7f 00 00 e8 e3 2a d3 5e 5e 00 0c e8 db 2a d3 5e 5e 01 0b e8 d3 2a d3 5e 5e 02 0a e8 cb 2a d3 5e 5e 03 09 e8 c3 2a d3 5e 5e 04 08 e8 bb 2a d3 5e 5e 05 07 e8 b3 2a d3 5e 5e 06 06 e8 ab 2a d3 5e 5e 07 05 e8 a3 2a d3 5e 5e 08 04 e8 9b 2a d3 5e 5e 09 03 e8 93 2a d3 5e 5e 0a 02 e8 8b 2a d3 5e 5e 0b 01 e8 83 2a d3 5e 5e 0c 00 40 f1 52 c8 f7 7f 00 00 e8 73 2a d3 5e 5e 00 00 c8 f2 52 c8 f7 7f 00 00 e8 63 2a d3 5e 5e 00 0a e8 5b 2a d3 5e 5e 01 09 e8 53 2a d3 5e 5e 02 08 e8 4b 2a d3 5e 5e 03 07 e8 43 2a d3 5e 5e 04 06 e8 3b 2a d3 5e 5e 05 05 e8 33 2a d3 5e 5e 06 04 e8 2b 2a d3 5e 5e 07 03 e8 23 2a d3 5e 5e 08 02 e8 1b 2a d3 5e 5e 09 01 e8 13 2a d3 5e 5e 0a 00 78 f3 52 c8 f7 7f 00 00 e8 03 2a d3 5e 5e 00 00 f8 f4 52 c8 f7 7f 00 00 e8 f3 29 d3 5e 5e 00 00 40 f6 52 c8 f7 7f 00 00 e8 e3 29 d3 5e 5e 00 0a e8 db 29 d3 5e 5e 01 09 e8 d3 29 d3 5e 5e 02 08 e8 cb 29 d3 5e 5e 03 07 e8 c3 29 d3 5e 5e 04 06 e8 bb 29 d3 5e 5e 05 05 e8 b3 29 d3 5e 5e 06 04 e8 ab 29 d3 5e 5e 07 03 e8 a3 29 d3 5e 5e 08 02 e8 9b 29 d3 5e 5e 09 01 e8 93 29 d3 5e 5e 0a 00 a0 f6 52 c8 f7 7f 00 00 e8 83 29 d3 5e 5e 00 00 20 f8 52 c8 f7 7f 00 00 e8 73 29 d3 5e 5e 00 00 68 f9 52 c8 f7 7f 00 00 e8 63 29 d3 5e 5e 00 0c e8 5b 29 d3 5e 5e 01 0b e8 53 29 d3 5e 5e 02 0a e8 4b 29 d3 5e 5e 03 09 e8 43 29 d3 5e 5e 04 08 e8 3b 29 d3 5e 5e 05 07 e8 33 29 d3 5e 5e 06 06 e8 2b 29 d3 5e 5e 07 05 e8 23 29 d3 5e 5e 08 04 e8 1b 29 d3 5e 5e 09 03 e8 13 29 d3 5e 5e 0a 02 e8 0b 29 d3 5e 5e 0b 01 e8 03 29 d3 5e 5e 0c 00 f8 f9 52 c8 f7 7f 00 00 e8 f3 28 d3 5e 5e 00 00 80 fb 52 c8 f7 7f 00 00 e8 e3 28 d3 5e 5e 00 0a e8 db 28 d3 5e 5e 01 09 e8 d3 28 d3 5e 5e 02 08 e8 cb 28 d3 5e 5e 03 07 e8 c3 28 d3 5e 5e 04 06 e8 bb 28 d3 5e 5e 05 05 e8 b3 28 d3 5e 5e 06 04 e8 ab 28 d3 5e 5e 07 03 e8 a3 28 d3 5e 5e 08 02 e8 9b 28 d3 5e 5e 09 01 e8 93 28 d3 5e 5e 0a 00 30 fc 52 c8 f7 7f 00 00 e8 83 28 d3 5e 5e 00 00 b0 fd 52 c8 f7 7f 00 00 e8 73 28 d3 5e 5e 00 00 f8 fe 52 c8 f7 7f 00 00 e8 45 73 c8 f7 7f 00 00 0f 1f 44 00 00 48 b8 e8 29 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
46        | 7ff7c8532de0h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[16u]()                                                        | LiteralExpr<ushort> eval<ushort>(IArithmeticExpr<ushort> expr)                                                | 0f 1f 44 00 00 48 b8 e8 29 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
47        | 7ff7c8532e10h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[16i]()                                                        | LiteralExpr<short> eval<short>(IArithmeticExpr<short> expr)                                                   | 0f 1f 44 00 00 48 b8 28 2a 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
48        | 7ff7c8532e40h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[32u]()                                                        | LiteralExpr<uint> eval<uint>(IArithmeticExpr<uint> expr)                                                      | 0f 1f 44 00 00 48 b8 68 2a 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
49        | 7ff7c8532e70h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[32i]()                                                        | LiteralExpr<int> eval<int>(IArithmeticExpr<int> expr)                                                         | 0f 1f 44 00 00 48 b8 a8 2a 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
50        | 7ff7c8532ea0h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[64u]()                                                        | LiteralExpr<ulong> eval<ulong>(IArithmeticExpr<ulong> expr)                                                   | 0f 1f 44 00 00 48 b8 e8 2a 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
51        | 7ff7c8532ed0h   | 35      | hex://logix/logic.engine?eval#eval_arith_expr_g[64i]()                                                        | LiteralExpr<long> eval<long>(IArithmeticExpr<long> expr)                                                      | 0f 1f 44 00 00 48 b8 28 2b 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
52        | 7ff7c8532f00h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[8u]()                                                     | LiteralExpr<Vector128<byte>> eval<byte>(IExpr<Vector128<byte>> expr)                                          | 0f 1f 44 00 00 48 b8 a8 84 3b c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
53        | 7ff7c8532f30h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[8i]()                                                     | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IExpr<Vector128<sbyte>> expr)                                       | 0f 1f 44 00 00 48 b8 a0 85 3b c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
54        | 7ff7c8532f60h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[16u]()                                                    | LiteralExpr<Vector128<ushort>> eval<ushort>(IExpr<Vector128<ushort>> expr)                                    | 0f 1f 44 00 00 48 b8 20 01 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
55        | 7ff7c8532f90h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[16i]()                                                    | LiteralExpr<Vector128<short>> eval<short>(IExpr<Vector128<short>> expr)                                       | 0f 1f 44 00 00 48 b8 08 02 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
56        | 7ff7c8532fc0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[32u]()                                                    | LiteralExpr<Vector128<uint>> eval<uint>(IExpr<Vector128<uint>> expr)                                          | 0f 1f 44 00 00 48 b8 f0 02 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
57        | 7ff7c8532ff0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[32i]()                                                    | LiteralExpr<Vector128<int>> eval<int>(IExpr<Vector128<int>> expr)                                             | 0f 1f 44 00 00 48 b8 d8 03 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
58        | 7ff7c8533020h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[64u]()                                                    | LiteralExpr<Vector128<ulong>> eval<ulong>(IExpr<Vector128<ulong>> expr)                                       | 0f 1f 44 00 00 48 b8 c8 2c 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
59        | 7ff7c8533050h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr128_g[64i]()                                                    | LiteralExpr<Vector128<long>> eval<long>(IExpr<Vector128<long>> expr)                                          | 0f 1f 44 00 00 48 b8 88 08 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
60        | 7ff7c8533080h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[8u]()                                                     | LiteralExpr<Vector256<byte>> eval<byte>(IExpr<Vector256<byte>> expr)                                          | 0f 1f 44 00 00 48 b8 b8 0a 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
61        | 7ff7c85330b0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[8i]()                                                     | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IExpr<Vector256<sbyte>> expr)                                       | 0f 1f 44 00 00 48 b8 b0 0b 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
62        | 7ff7c85330e0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[16u]()                                                    | LiteralExpr<Vector256<ushort>> eval<ushort>(IExpr<Vector256<ushort>> expr)                                    | 0f 1f 44 00 00 48 b8 d8 0f 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
63        | 7ff7c8533110h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[16i]()                                                    | LiteralExpr<Vector256<short>> eval<short>(IExpr<Vector256<short>> expr)                                       | 0f 1f 44 00 00 48 b8 c0 10 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
64        | 7ff7c8533140h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[32u]()                                                    | LiteralExpr<Vector256<uint>> eval<uint>(IExpr<Vector256<uint>> expr)                                          | 0f 1f 44 00 00 48 b8 a8 11 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
65        | 7ff7c8533170h   | 1064    | hex://logix/logic.engine?eval#eval_vector_expr256_g[32i]()                                                    | LiteralExpr<Vector256<int>> eval<int>(IExpr<Vector256<int>> expr)                                             | 0f 1f 44 00 00 48 b8 90 12 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 a3 24 d3 5e 5e 00 0a e8 9b 24 d3 5e 5e 01 09 e8 93 24 d3 5e 5e 02 08 e8 8b 24 d3 5e 5e 03 07 e8 83 24 d3 5e 5e 04 06 e8 7b 24 d3 5e 5e 05 05 e8 73 24 d3 5e 5e 06 04 e8 6b 24 d3 5e 5e 07 03 e8 63 24 d3 5e 5e 08 02 e8 5b 24 d3 5e 5e 09 01 e8 53 24 d3 5e 5e 0a 00 58 ff 52 c8 f7 7f 00 00 e8 43 24 d3 5e 5e 00 00 48 01 74 c8 f7 7f 00 00 e8 33 24 d3 5e 5e 00 00 90 02 74 c8 f7 7f 00 00 e8 23 24 d3 5e 5e 00 09 e8 1b 24 d3 5e 5e 01 08 e8 13 24 d3 5e 5e 02 07 e8 0b 24 d3 5e 5e 03 06 e8 03 24 d3 5e 5e 04 05 e8 fb 23 d3 5e 5e 05 04 e8 f3 23 d3 5e 5e 06 03 e8 eb 23 d3 5e 5e 07 02 e8 e3 23 d3 5e 5e 08 01 e8 db 23 d3 5e 5e 09 00 20 03 74 c8 f7 7f 00 00 e8 cb 23 d3 5e 5e 00 03 e8 c3 23 d3 5e 5e 01 02 e8 bb 23 d3 5e 5e 02 01 e8 b3 23 d3 5e 5e 03 00 b8 04 74 c8 f7 7f 00 00 e8 a3 23 d3 5e 5e 00 00 28 06 74 c8 f7 7f 00 00 e8 93 23 d3 5e 5e 00 09 e8 8b 23 d3 5e 5e 01 08 e8 83 23 d3 5e 5e 02 07 e8 7b 23 d3 5e 5e 03 06 e8 73 23 d3 5e 5e 04 05 e8 6b 23 d3 5e 5e 05 04 e8 63 23 d3 5e 5e 06 03 e8 5b 23 d3 5e 5e 07 02 e8 53 23 d3 5e 5e 08 01 e8 4b 23 d3 5e 5e 09 00 b8 06 74 c8 f7 7f 00 00 e8 3b 23 d3 5e 5e 00 00 60 08 74 c8 f7 7f 00 00 e8 2b 23 d3 5e 5e 00 0a e8 23 23 d3 5e 5e 01 09 e8 1b 23 d3 5e 5e 02 08 e8 13 23 d3 5e 5e 03 07 e8 0b 23 d3 5e 5e 04 06 e8 03 23 d3 5e 5e 05 05 e8 fb 22 d3 5e 5e 06 04 e8 f3 22 d3 5e 5e 07 03 e8 eb 22 d3 5e 5e 08 02 e8 e3 22 d3 5e 5e 09 01 e8 db 22 d3 5e 5e 0a 00 c0 08 74 c8 f7 7f 00 00 e8 cb 22 d3 5e 5e 00 00 58 0a 74 c8 f7 7f 00 00 e8 bb 22 d3 5e 5e 00 00 28 0b 74 c8 f7 7f 00 00 e8 ab 22 d3 5e 5e 00 00 88 0b 74 c8 f7 7f 00 00 e8 9b 22 d3 5e 5e 00 00 e8 0b 74 c8 f7 7f 00 00 e8 8b 22 d3 5e 5e 00 09 e8 83 22 d3 5e 5e 01 08 e8 7b 22 d3 5e 5e 02 07 e8 73 22 d3 5e 5e 03 06 e8 6b 22 d3 5e 5e 04 05 e8 63 22 d3 5e 5e 05 04 e8 5b 22 d3 5e 5e 06 03 e8 53 22 d3 5e 5e 07 02 e8 4b 22 d3 5e 5e 08 01 e8 43 22 d3 5e 5e 09 00 78 0c 74 c8 f7 7f 00 00 e8 33 22 d3 5e 5e 00 00 20 0e 74 c8 f7 7f 00 00 e8 23 22 d3 5e 5e 00 09 e8 1b 22 d3 5e 5e 01 08 e8 13 22 d3 5e 5e 02 07 e8 0b 22 d3 5e 5e 03 06 e8 03 22 d3 5e 5e 04 05 e8 fb 21 d3 5e 5e 05 04 e8 f3 21 d3 5e 5e 06 03 e8 eb 21 d3 5e 5e 07 02 e8 e3 21 d3 5e 5e 08 01 e8 db 21 d3 5e 5e 09 00 b0 0e 74 c8 f7 7f 00 00 e8 cb 21 d3 5e 5e 00 00 58 10 74 c8 f7 7f 00 00 e8 bb 21 d3 5e 5e 00 09 e8 b3 21 d3 5e 5e 01 08 e8 ab 21 d3 5e 5e 02 07 e8 a3 21 d3 5e 5e 03 06 e8 9b 21 d3 5e 5e 04 05 e8 93 21 d3 5e 5e 05 04 e8 8b 21 d3 5e 5e 06 03 e8 83 21 d3 5e 5e 07 02 e8 7b 21 d3 5e 5e 08 01 e8 73 21 d3 5e 5e 09 00 e8 10 74 c8 f7 7f 00 00 e8 63 21 d3 5e 5e 00 00 90 12 74 c8 f7 7f 00 00 e8 53 21 d3 5e 5e 00 09 e8 4b 21 d3 5e 5e 01 08 e8 43 21 d3 5e 5e 02 07 e8 3b 21 d3 5e 5e 03 06 e8 33 21 d3 5e 5e 04 05 e8 2b 21 d3 5e 5e 05 04 e8 23 21 d3 5e 5e 06 03 e8 1b 21 d3 5e 5e 07 02 e8 13 21 d3 5e 5e 08 01 e8 0b 21 d3 5e 5e 09 00 20 13 74 c8 f7 7f 00 00 e8 fb 20 d3 5e 5e 00 00 c8 14 74 c8 f7 7f 00 00 e8 eb 20 d3 5e 5e 00 00 00 17 74 c8 f7 7f 00 00 e8 db 20 d3 5e 5e 00 00 38 19 74 c8 f7 7f 00 00 e8 cb 20 d3 5e 5e 00 00 98 19 74 c8 f7 7f 00 00 e8 bb 20 d3 5e 5e 00 00 f8 19 74 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
66        | 7ff7c85335a0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[64u]()                                                    | LiteralExpr<Vector256<ulong>> eval<ulong>(IExpr<Vector256<ulong>> expr)                                       | 0f 1f 44 00 00 48 b8 08 32 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
67        | 7ff7c85335d0h   | 35      | hex://logix/logic.engine?eval#eval_vector_expr256_g[64i]()                                                    | LiteralExpr<Vector256<long>> eval<long>(IExpr<Vector256<long>> expr)                                          | 0f 1f 44 00 00 48 b8 10 18 53 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
68        | 7ff7c8533600h   | 231     | hex://logix/logic.engine?satisfied#satisfied_g[8u](8u,8u)                                                     | bit satisfied<byte>(ComparisonExpr<byte> expr, byte a, byte b)                                                | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 10 ea 72 c7 f7 7f 00 00 ba 02 00 00 00 e8 bd 37 d3 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 a1 fc ff ff 48 8b ce e8 e1 44 e8 ff 0f b6 40 08 0f b6 c0 3c ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 50 5f 73 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 72 c7 f7 7f 00 00 ba 02 00 00 00 e8 4d 37 d3 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 39 fd ff ff 48 8b ce e8 61 45 e8 ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
69        | 7ff7c8533670h   | 119     | hex://logix/logic.engine?satisfied#satisfied_g[8i](8i,8i)                                                     | bit satisfied<sbyte>(ComparisonExpr<sbyte> expr, sbyte a, sbyte b)                                            | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 72 c7 f7 7f 00 00 ba 02 00 00 00 e8 4d 37 d3 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 39 fd ff ff 48 8b ce e8 61 45 e8 ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
70        | 7ff7c85336f0h   | 119     | hex://logix/logic.engine?satisfied#satisfied_g[16u](16u,16u)                                                  | bit satisfied<ushort>(ComparisonExpr<ushort> expr, ushort a, ushort b)                                        | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 f8 d8 f7 c7 f7 7f 00 00 ba 02 00 00 00 e8 cd 36 d3 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 20 fd ff ff 48 8b ce e8 a0 45 e8 ff 0f b7 40 08 0f b7 c0 0f b7 c0 3d ff ff 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
71        | 7ff7c8533770h   | 119     | hex://logix/logic.engine?satisfied#satisfied_g[16i](16i,16i)                                                  | bit satisfied<short>(ComparisonExpr<short> expr, short a, short b)                                            | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 70 bf 12 c8 f7 7f 00 00 ba 02 00 00 00 e8 4d 36 d3 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 08 fd ff ff 48 8b ce e8 e0 45 e8 ff 48 0f bf 40 08 48 0f bf c0 48 0f bf c0 3d ff 7f 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
72        | 7ff7c85337f0h   | 1144    | hex://logix/logic.engine?satisfied#satisfied_g[32u](32u,32u)                                                  | bit satisfied<uint>(ComparisonExpr<uint> expr, uint a, uint b)                                                | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 90 c8 f7 c7 f7 7f 00 00 ba 02 00 00 00 e8 cd 35 d3 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 f2 fc ff ff 48 8b ce e8 22 46 e8 ff 8b 40 08 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 db 1d d3 5e 5e 00 09 e8 d3 1d d3 5e 5e 01 08 e8 cb 1d d3 5e 5e 02 07 e8 c3 1d d3 5e 5e 03 06 e8 bb 1d d3 5e 5e 04 05 e8 b3 1d d3 5e 5e 05 04 e8 ab 1d d3 5e 5e 06 03 e8 a3 1d d3 5e 5e 07 02 e8 9b 1d d3 5e 5e 08 01 e8 93 1d d3 5e 5e 09 00 58 15 74 c8 f7 7f 00 00 e8 83 1d d3 5e 5e 00 09 e8 7b 1d d3 5e 5e 01 08 e8 73 1d d3 5e 5e 02 07 e8 6b 1d d3 5e 5e 03 06 e8 63 1d d3 5e 5e 04 05 e8 5b 1d d3 5e 5e 05 04 e8 53 1d d3 5e 5e 06 03 e8 4b 1d d3 5e 5e 07 02 e8 43 1d d3 5e 5e 08 01 e8 3b 1d d3 5e 5e 09 00 90 17 74 c8 f7 7f 00 00 e8 2b 1d d3 5e 5e 00 09 e8 23 1d d3 5e 5e 01 08 e8 1b 1d d3 5e 5e 02 07 e8 13 1d d3 5e 5e 03 06 e8 0b 1d d3 5e 5e 04 05 e8 03 1d d3 5e 5e 05 04 e8 fb 1c d3 5e 5e 06 03 e8 f3 1c d3 5e 5e 07 02 e8 eb 1c d3 5e 5e 08 01 e8 e3 1c d3 5e 5e 09 00 88 1a 74 c8 f7 7f 00 00 e8 d3 1c d3 5e 5e 00 0c e8 cb 1c d3 5e 5e 01 0b e8 c3 1c d3 5e 5e 02 0a e8 bb 1c d3 5e 5e 03 09 e8 b3 1c d3 5e 5e 04 08 e8 ab 1c d3 5e 5e 05 07 e8 a3 1c d3 5e 5e 06 06 e8 9b 1c d3 5e 5e 07 05 e8 93 1c d3 5e 5e 08 04 e8 8b 1c d3 5e 5e 09 03 e8 83 1c d3 5e 5e 0a 02 e8 7b 1c d3 5e 5e 0b 01 e8 73 1c d3 5e 5e 0c 00 40 1c 74 c8 f7 7f 00 00 e8 63 1c d3 5e 5e 00 00 c8 1d 74 c8 f7 7f 00 00 e8 53 1c d3 5e 5e 00 09 e8 4b 1c d3 5e 5e 01 08 e8 43 1c d3 5e 5e 02 07 e8 3b 1c d3 5e 5e 03 06 e8 33 1c d3 5e 5e 04 05 e8 2b 1c d3 5e 5e 05 04 e8 23 1c d3 5e 5e 06 03 e8 1b 1c d3 5e 5e 07 02 e8 13 1c d3 5e 5e 08 01 e8 0b 1c d3 5e 5e 09 00 a8 1e 74 c8 f7 7f 00 00 e8 fb 1b d3 5e 5e 00 03 e8 f3 1b d3 5e 5e 01 02 e8 eb 1b d3 5e 5e 02 01 e8 e3 1b d3 5e 5e 03 00 40 20 74 c8 f7 7f 00 00 e8 d3 1b d3 5e 5e 00 00 b0 21 74 c8 f7 7f 00 00 e8 c3 1b d3 5e 5e 00 09 e8 bb 1b d3 5e 5e 01 08 e8 b3 1b d3 5e 5e 02 07 e8 ab 1b d3 5e 5e 03 06 e8 a3 1b d3 5e 5e 04 05 e8 9b 1b d3 5e 5e 05 04 e8 93 1b d3 5e 5e 06 03 e8 8b 1b d3 5e 5e 07 02 e8 83 1b d3 5e 5e 08 01 e8 7b 1b d3 5e 5e 09 00 40 22 74 c8 f7 7f 00 00 e8 6b 1b d3 5e 5e 00 03 e8 63 1b d3 5e 5e 03 02 e8 5b 1b d3 5e 5e 06 01 e8 53 1b d3 5e 5e 09 00 20 25 74 c8 f7 7f 00 00 e8 43 1b d3 5e 5e 00 00 f0 25 74 c8 f7 7f 00 00 e8 33 1b d3 5e 5e 00 0a e8 2b 1b d3 5e 5e 01 09 e8 23 1b d3 5e 5e 02 08 e8 1b 1b d3 5e 5e 03 07 e8 13 1b d3 5e 5e 04 06 e8 0b 1b d3 5e 5e 05 05 e8 03 1b d3 5e 5e 06 04 e8 fb 1a d3 5e 5e 07 03 e8 f3 1a d3 5e 5e 08 02 e8 eb 1a d3 5e 5e 09 01 e8 e3 1a d3 5e 5e 0a 00 50 26 74 c8 f7 7f 00 00 e8 d3 1a d3 5e 5e 00 00 d0 27 74 c8 f7 7f 00 00 e8 c3 1a d3 5e 5e 00 00 a0 28 74 c8 f7 7f 00 00 e8 b3 1a d3 5e 5e 00 00 00 29 74 c8 f7 7f 00 00 e8 a3 1a d3 5e 5e 00 00 60 29 74 c8 f7 7f 00 00 e8 93 1a d3 5e 5e 00 09 e8 8b 1a d3 5e 5e 01 08 e8 83 1a d3 5e 5e 02 07 e8 7b 1a d3 5e 5e 03 06 e8 73 1a d3 5e 5e 04 05 e8 6b 1a d3 5e 5e 05 04 e8 63 1a d3 5e 5e 06 03 e8 5b 1a d3 5e 5e 07 02 e8 53 1a d3 5e 5e 08 01 e8 4b 1a d3 5e 5e 09 00 f0 29 74 c8 f7 7f 00 00 e8 3b 1a d3 5e 5e 00 03 e8 33 1a d3 5e 5e 03 02 e8 2b 1a d3 5e 5e 06 01 e8 23 1a d3 5e 5e 09 00 d0 2c 74 c8 f7 7f 00 00 e8 13 1a d3 5e 5e 00 00 a0 2d 74 c8 f7 7f 00 00 e8 03 1a d3 5e 5e 00 03 e8 fb 19 d3 5e 5e 03 02 e8 f3 19 d3 5e 5e 06 01 e8 eb 19 d3 5e 5e 09 00 10 31 74 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
73        | 7ff7c8533c70h   | 343     | hex://logix/logic.engine?satisfied#satisfied_g[32i](32i,32i)                                                  | bit satisfied<int>(ComparisonExpr<int> expr, int a, int b)                                                    | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 48 5f 7f c7 f7 7f 00 00 ba 02 00 00 00 e8 4d 31 d3 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 ea fb ff ff 48 8b ce e8 62 42 e8 ff 8b 40 08 3d ff ff ff 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 f8 64 73 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 a0 00 b6 c7 f7 7f 00 00 ba 02 00 00 00 e8 dc 30 d3 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 cf fb ff ff 48 8b ce e8 4f f8 ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 10 66 73 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 d8 e8 12 c8 f7 7f 00 00 ba 02 00 00 00 e8 6c 30 d3 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 b7 fb ff ff 48 8b ce e8 3f 42 e8 ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
74        | 7ff7c8533ce0h   | 231     | hex://logix/logic.engine?satisfied#satisfied_g[64u](64u,64u)                                                  | bit satisfied<ulong>(ComparisonExpr<ulong> expr, ulong a, ulong b)                                            | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 a0 00 b6 c7 f7 7f 00 00 ba 02 00 00 00 e8 dc 30 d3 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 cf fb ff ff 48 8b ce e8 4f f8 ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 10 66 73 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 d8 e8 12 c8 f7 7f 00 00 ba 02 00 00 00 e8 6c 30 d3 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 b7 fb ff ff 48 8b ce e8 3f 42 e8 ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
75        | 7ff7c8533d50h   | 119     | hex://logix/logic.engine?satisfied#satisfied_g[64i](64i,64i)                                                  | bit satisfied<long>(ComparisonExpr<long> expr, long a, long b)                                                | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 d8 e8 12 c8 f7 7f 00 00 ba 02 00 00 00 e8 6c 30 d3 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 b7 fb ff ff 48 8b ce e8 3f 42 e8 ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
76        | 7ff7c8533dd0h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[8u](v128x8u,v128x8u)                                           | bit satisfied<byte>(ComparisonExpr<Vector128<byte>> expr, Vector128<byte> a, Vector128<byte> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 38 24 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 e9 2f d3 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 92 fc ff ff 48 8b cb e8 42 4b e8 ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
77        | 7ff7c8533e70h   | 1331    | hex://logix/logic.engine?satisfied#satisfied_g[8i](v128x8i,v128x8i)                                           | bit satisfied<sbyte>(ComparisonExpr<Vector128<sbyte>> expr, Vector128<sbyte> a, Vector128<sbyte> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 e8 2b 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 49 2f d3 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 22 fd ff ff 48 8b cb e8 92 4b e8 ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 33 17 d3 5e 5e 00 09 e8 2b 17 d3 5e 5e 01 08 e8 23 17 d3 5e 5e 02 07 e8 1b 17 d3 5e 5e 03 06 e8 13 17 d3 5e 5e 04 05 e8 0b 17 d3 5e 5e 05 04 e8 03 17 d3 5e 5e 06 03 e8 fb 16 d3 5e 5e 07 02 e8 f3 16 d3 5e 5e 08 01 e8 eb 16 d3 5e 5e 09 00 30 2e 74 c8 f7 7f 00 00 e8 db 16 d3 5e 5e 00 00 e0 31 74 c8 f7 7f 00 00 e8 cb 16 d3 5e 5e 00 09 e8 c3 16 d3 5e 5e 01 08 e8 bb 16 d3 5e 5e 02 07 e8 b3 16 d3 5e 5e 03 06 e8 ab 16 d3 5e 5e 04 05 e8 a3 16 d3 5e 5e 05 04 e8 9b 16 d3 5e 5e 06 03 e8 93 16 d3 5e 5e 07 02 e8 8b 16 d3 5e 5e 08 01 e8 83 16 d3 5e 5e 09 00 70 32 74 c8 f7 7f 00 00 e8 73 16 d3 5e 5e 00 03 e8 6b 16 d3 5e 5e 03 02 e8 63 16 d3 5e 5e 06 01 e8 5b 16 d3 5e 5e 09 00 50 35 74 c8 f7 7f 00 00 e8 4b 16 d3 5e 5e 00 00 20 36 74 c8 f7 7f 00 00 e8 3b 16 d3 5e 5e 00 09 e8 33 16 d3 5e 5e 01 08 e8 2b 16 d3 5e 5e 02 07 e8 23 16 d3 5e 5e 03 06 e8 1b 16 d3 5e 5e 04 05 e8 13 16 d3 5e 5e 05 04 e8 0b 16 d3 5e 5e 06 03 e8 03 16 d3 5e 5e 07 02 e8 fb 15 d3 5e 5e 08 01 e8 f3 15 d3 5e 5e 09 00 b0 36 74 c8 f7 7f 00 00 e8 e3 15 d3 5e 5e 00 03 e8 db 15 d3 5e 5e 03 02 e8 d3 15 d3 5e 5e 06 01 e8 cb 15 d3 5e 5e 09 00 90 39 74 c8 f7 7f 00 00 e8 bb 15 d3 5e 5e 00 00 60 3a 74 c8 f7 7f 00 00 e8 ab 15 d3 5e 5e 00 09 e8 a3 15 d3 5e 5e 01 08 e8 9b 15 d3 5e 5e 02 07 e8 93 15 d3 5e 5e 03 06 e8 8b 15 d3 5e 5e 04 05 e8 83 15 d3 5e 5e 05 04 e8 7b 15 d3 5e 5e 06 03 e8 73 15 d3 5e 5e 07 02 e8 6b 15 d3 5e 5e 08 01 e8 63 15 d3 5e 5e 09 00 f0 3a 74 c8 f7 7f 00 00 e8 53 15 d3 5e 5e 00 03 e8 4b 15 d3 5e 5e 03 02 e8 43 15 d3 5e 5e 06 01 e8 3b 15 d3 5e 5e 09 00 d0 3d 74 c8 f7 7f 00 00 e8 2b 15 d3 5e 5e 00 00 a0 3e 74 c8 f7 7f 00 00 e8 1b 15 d3 5e 5e 00 09 e8 13 15 d3 5e 5e 01 08 e8 0b 15 d3 5e 5e 02 07 e8 03 15 d3 5e 5e 03 06 e8 fb 14 d3 5e 5e 04 05 e8 f3 14 d3 5e 5e 05 04 e8 eb 14 d3 5e 5e 06 03 e8 e3 14 d3 5e 5e 07 02 e8 db 14 d3 5e 5e 08 01 e8 d3 14 d3 5e 5e 09 00 30 3f 74 c8 f7 7f 00 00 e8 c3 14 d3 5e 5e 00 03 e8 bb 14 d3 5e 5e 01 02 e8 b3 14 d3 5e 5e 02 01 e8 ab 14 d3 5e 5e 03 00 c8 40 74 c8 f7 7f 00 00 e8 9b 14 d3 5e 5e 00 03 e8 93 14 d3 5e 5e 03 02 e8 8b 14 d3 5e 5e 06 01 e8 83 14 d3 5e 5e 09 00 f8 42 74 c8 f7 7f 00 00 e8 73 14 d3 5e 5e 00 00 c8 43 74 c8 f7 7f 00 00 e8 63 14 d3 5e 5e 00 00 28 44 74 c8 f7 7f 00 00 e8 53 14 d3 5e 5e 00 00 88 44 74 c8 f7 7f 00 00 e8 43 14 d3 5e 5e 00 09 e8 3b 14 d3 5e 5e 01 08 e8 33 14 d3 5e 5e 02 07 e8 2b 14 d3 5e 5e 03 06 e8 23 14 d3 5e 5e 04 05 e8 1b 14 d3 5e 5e 05 04 e8 13 14 d3 5e 5e 06 03 e8 0b 14 d3 5e 5e 07 02 e8 03 14 d3 5e 5e 08 01 e8 fb 13 d3 5e 5e 09 00 18 45 74 c8 f7 7f 00 00 e8 eb 13 d3 5e 5e 00 03 e8 e3 13 d3 5e 5e 03 02 e8 db 13 d3 5e 5e 06 01 e8 d3 13 d3 5e 5e 09 00 f8 47 74 c8 f7 7f 00 00 e8 c3 13 d3 5e 5e 00 0c e8 bb 13 d3 5e 5e 01 0b e8 b3 13 d3 5e 5e 02 0a e8 ab 13 d3 5e 5e 03 09 e8 a3 13 d3 5e 5e 04 08 e8 9b 13 d3 5e 5e 05 07 e8 93 13 d3 5e 5e 06 06 e8 8b 13 d3 5e 5e 07 05 e8 83 13 d3 5e 5e 08 04 e8 7b 13 d3 5e 5e 09 03 e8 73 13 d3 5e 5e 0a 02 e8 6b 13 d3 5e 5e 0b 01 e8 63 13 d3 5e 5e 0c 00 f8 48 74 c8 f7 7f 00 00 e8 53 13 d3 5e 5e 00 00 80 4a 74 c8 f7 7f 00 00 e8 43 13 d3 5e 5e 00 00 68 4e 74 c8 f7 7f 00 00 98 6e 73 c8 f7 7f 00 00 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 28 30 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 a9 2a d3 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 22 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
78        | 7ff7c8534310h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[16u](v128x16u,v128x16u)                                        | bit satisfied<ushort>(ComparisonExpr<Vector128<ushort>> expr, Vector128<ushort> a, Vector128<ushort> b)       | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 28 30 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 a9 2a d3 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 22 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
79        | 7ff7c85343b0h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[16i](v128x16i,v128x16i)                                        | bit satisfied<short>(ComparisonExpr<Vector128<short>> expr, Vector128<short> a, Vector128<short> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 68 34 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 09 2a d3 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 aa fb ff ff 48 8b cb e8 72 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
80        | 7ff7c8534450h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[32u](v128x32u,v128x32u)                                        | bit satisfied<uint>(ComparisonExpr<Vector128<uint>> expr, Vector128<uint> a, Vector128<uint> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 a8 38 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 69 29 d3 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 9a fb ff ff 48 8b cb e8 c2 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
81        | 7ff7c85344f0h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[32i](v128x32i,v128x32i)                                        | bit satisfied<int>(ComparisonExpr<Vector128<int>> expr, Vector128<int> a, Vector128<int> b)                   | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 e8 3c 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 c9 28 d3 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 8a fb ff ff 48 8b cb e8 12 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
82        | 7ff7c8534590h   | 147     | hex://logix/logic.engine?satisfied#satisfied_g[64u](v128x64u,v128x64u)                                        | bit satisfied<ulong>(ComparisonExpr<Vector128<ulong>> expr, Vector128<ulong> a, Vector128<ulong> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 10 42 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 29 28 d3 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 7a fb ff ff 48 8b cb e8 fa fb ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
83        | 7ff7c8534630h   | 1335    | hex://logix/logic.engine?satisfied#satisfied_g[64i](v128x64i,v128x64i)                                        | bit satisfied<long>(ComparisonExpr<Vector128<long>> expr, Vector128<long> a, Vector128<long> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 10 47 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 89 27 d3 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 b2 fb ff ff 48 8b cb e8 d2 c5 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 73 0f d3 5e 5e 00 09 e8 6b 0f d3 5e 5e 01 08 e8 63 0f d3 5e 5e 02 07 e8 5b 0f d3 5e 5e 03 06 e8 53 0f d3 5e 5e 04 05 e8 4b 0f d3 5e 5e 05 04 e8 43 0f d3 5e 5e 06 03 e8 3b 0f d3 5e 5e 07 02 e8 33 0f d3 5e 5e 08 01 e8 2b 0f d3 5e 5e 09 00 60 4b 74 c8 f7 7f 00 00 e8 1b 0f d3 5e 5e 00 03 e8 13 0f d3 5e 5e 01 02 e8 0b 0f d3 5e 5e 02 01 e8 03 0f d3 5e 5e 03 00 f8 4c 74 c8 f7 7f 00 00 e8 f3 0e d3 5e 5e 00 09 e8 eb 0e d3 5e 5e 01 08 e8 e3 0e d3 5e 5e 02 07 e8 db 0e d3 5e 5e 03 06 e8 d3 0e d3 5e 5e 04 05 e8 cb 0e d3 5e 5e 05 04 e8 c3 0e d3 5e 5e 06 03 e8 bb 0e d3 5e 5e 07 02 e8 b3 0e d3 5e 5e 08 01 e8 ab 0e d3 5e 5e 09 00 f8 4e 74 c8 f7 7f 00 00 e8 9b 0e d3 5e 5e 00 03 e8 93 0e d3 5e 5e 03 02 e8 8b 0e d3 5e 5e 06 01 e8 83 0e d3 5e 5e 09 00 d8 51 74 c8 f7 7f 00 00 e8 73 0e d3 5e 5e 00 00 a8 52 74 c8 f7 7f 00 00 e8 63 0e d3 5e 5e 00 0a e8 5b 0e d3 5e 5e 01 09 e8 53 0e d3 5e 5e 02 08 e8 4b 0e d3 5e 5e 03 07 e8 43 0e d3 5e 5e 04 06 e8 3b 0e d3 5e 5e 05 05 e8 33 0e d3 5e 5e 06 04 e8 2b 0e d3 5e 5e 07 03 e8 23 0e d3 5e 5e 08 02 e8 1b 0e d3 5e 5e 09 01 e8 13 0e d3 5e 5e 0a 00 08 53 74 c8 f7 7f 00 00 e8 03 0e d3 5e 5e 00 00 88 54 74 c8 f7 7f 00 00 e8 f3 0d d3 5e 5e 00 00 58 55 74 c8 f7 7f 00 00 e8 e3 0d d3 5e 5e 00 00 b8 55 74 c8 f7 7f 00 00 e8 d3 0d d3 5e 5e 00 00 18 56 74 c8 f7 7f 00 00 e8 c3 0d d3 5e 5e 00 09 e8 bb 0d d3 5e 5e 01 08 e8 b3 0d d3 5e 5e 02 07 e8 ab 0d d3 5e 5e 03 06 e8 a3 0d d3 5e 5e 04 05 e8 9b 0d d3 5e 5e 05 04 e8 93 0d d3 5e 5e 06 03 e8 8b 0d d3 5e 5e 07 02 e8 83 0d d3 5e 5e 08 01 e8 7b 0d d3 5e 5e 09 00 a8 56 74 c8 f7 7f 00 00 e8 6b 0d d3 5e 5e 00 03 e8 63 0d d3 5e 5e 03 02 e8 5b 0d d3 5e 5e 06 01 e8 53 0d d3 5e 5e 09 00 88 59 74 c8 f7 7f 00 00 e8 43 0d d3 5e 5e 00 00 58 5a 74 c8 f7 7f 00 00 e8 33 0d d3 5e 5e 00 09 e8 2b 0d d3 5e 5e 01 08 e8 23 0d d3 5e 5e 02 07 e8 1b 0d d3 5e 5e 03 06 e8 13 0d d3 5e 5e 04 05 e8 0b 0d d3 5e 5e 05 04 e8 03 0d d3 5e 5e 06 03 e8 fb 0c d3 5e 5e 07 02 e8 f3 0c d3 5e 5e 08 01 e8 eb 0c d3 5e 5e 09 00 e8 5a 74 c8 f7 7f 00 00 e8 db 0c d3 5e 5e 00 03 e8 d3 0c d3 5e 5e 03 02 e8 cb 0c d3 5e 5e 06 01 e8 c3 0c d3 5e 5e 09 00 c8 5d 74 c8 f7 7f 00 00 e8 b3 0c d3 5e 5e 00 00 98 5e 74 c8 f7 7f 00 00 e8 a3 0c d3 5e 5e 00 09 e8 9b 0c d3 5e 5e 01 08 e8 93 0c d3 5e 5e 02 07 e8 8b 0c d3 5e 5e 03 06 e8 83 0c d3 5e 5e 04 05 e8 7b 0c d3 5e 5e 05 04 e8 73 0c d3 5e 5e 06 03 e8 6b 0c d3 5e 5e 07 02 e8 63 0c d3 5e 5e 08 01 e8 5b 0c d3 5e 5e 09 00 28 5f 74 c8 f7 7f 00 00 e8 4b 0c d3 5e 5e 00 03 e8 43 0c d3 5e 5e 03 02 e8 3b 0c d3 5e 5e 06 01 e8 33 0c d3 5e 5e 09 00 08 62 74 c8 f7 7f 00 00 e8 23 0c d3 5e 5e 00 00 d8 62 74 c8 f7 7f 00 00 e8 13 0c d3 5e 5e 00 09 e8 0b 0c d3 5e 5e 01 08 e8 03 0c d3 5e 5e 02 07 e8 fb 0b d3 5e 5e 03 06 e8 f3 0b d3 5e 5e 04 05 e8 eb 0b d3 5e 5e 05 04 e8 e3 0b d3 5e 5e 06 03 e8 db 0b d3 5e 5e 07 02 e8 d3 0b d3 5e 5e 08 01 e8 cb 0b d3 5e 5e 09 00 68 63 74 c8 f7 7f 00 00 e8 bb 0b d3 5e 5e 00 03 e8 b3 0b d3 5e 5e 03 02 e8 ab 0b d3 5e 5e 06 01 e8 a3 0b d3 5e 5e 09 00 48 66 74 c8 f7 7f 00 00 e8 93 0b d3 5e 5e 00 00 18 67 74 c8 f7 7f 00 00 e8 83 0b d3 5e 5e 00 00 58 6b 74 c8 f7 7f 00 00 e8 7b 73 c8 f7 7f 00 00 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 f0 50 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 e9 22 d3 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 62 fc ff ff 48 8b cb e8 22 c2 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
84        | 7ff7c8534ad0h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[8u](v256x8u,v256x8u)                                           | bit satisfied<byte>(ComparisonExpr<Vector256<byte>> expr, Vector256<byte> a, Vector256<byte> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 f0 50 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 e9 22 d3 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 62 fc ff ff 48 8b cb e8 22 c2 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
85        | 7ff7c8534b70h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[8i](v256x8i,v256x8i)                                           | bit satisfied<sbyte>(ComparisonExpr<Vector256<sbyte>> expr, Vector256<sbyte> a, Vector256<sbyte> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 a0 58 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 49 22 d3 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 f2 fc ff ff 48 8b cb e8 a2 c2 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
86        | 7ff7c8534c10h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[16u](v256x16u,v256x16u)                                        | bit satisfied<ushort>(ComparisonExpr<Vector256<ushort>> expr, Vector256<ushort> a, Vector256<ushort> b)       | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 e0 5c 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 a9 21 d3 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 e2 fc ff ff 48 8b cb e8 32 c7 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
87        | 7ff7c8534cb0h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[16i](v256x16i,v256x16i)                                        | bit satisfied<short>(ComparisonExpr<Vector256<short>> expr, Vector256<short> a, Vector256<short> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 20 61 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 09 21 d3 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 d2 fc ff ff 48 8b cb e8 b2 c7 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
88        | 7ff7c8534d50h   | 944     | hex://logix/logic.engine?satisfied#satisfied_g[32u](v256x32u,v256x32u)                                        | bit satisfied<uint>(ComparisonExpr<Vector256<uint>> expr, Vector256<uint> a, Vector256<uint> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 60 65 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 69 20 d3 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 c2 fc ff ff 48 8b cb e8 32 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 53 08 d3 5e 5e 00 09 e8 4b 08 d3 5e 5e 01 08 e8 43 08 d3 5e 5e 02 07 e8 3b 08 d3 5e 5e 03 06 e8 33 08 d3 5e 5e 04 05 e8 2b 08 d3 5e 5e 05 04 e8 23 08 d3 5e 5e 06 03 e8 1b 08 d3 5e 5e 07 02 e8 13 08 d3 5e 5e 08 01 e8 0b 08 d3 5e 5e 09 00 a8 67 74 c8 f7 7f 00 00 e8 fb 07 d3 5e 5e 00 03 e8 f3 07 d3 5e 5e 03 02 e8 eb 07 d3 5e 5e 06 01 e8 e3 07 d3 5e 5e 09 00 88 6a 74 c8 f7 7f 00 00 e8 d3 07 d3 5e 5e 00 09 e8 cb 07 d3 5e 5e 01 08 e8 c3 07 d3 5e 5e 02 07 e8 bb 07 d3 5e 5e 03 06 e8 b3 07 d3 5e 5e 04 05 e8 ab 07 d3 5e 5e 05 04 e8 a3 07 d3 5e 5e 06 03 e8 9b 07 d3 5e 5e 07 02 e8 93 07 d3 5e 5e 08 01 e8 8b 07 d3 5e 5e 09 00 e8 6b 74 c8 f7 7f 00 00 e8 7b 07 d3 5e 5e 00 03 e8 73 07 d3 5e 5e 01 02 e8 6b 07 d3 5e 5e 02 01 e8 63 07 d3 5e 5e 03 00 80 6d 74 c8 f7 7f 00 00 e8 53 07 d3 5e 5e 00 03 e8 4b 07 d3 5e 5e 03 02 e8 43 07 d3 5e 5e 06 01 e8 3b 07 d3 5e 5e 09 00 b0 6f 74 c8 f7 7f 00 00 e8 2b 07 d3 5e 5e 00 00 80 70 74 c8 f7 7f 00 00 e8 1b 07 d3 5e 5e 00 00 e0 70 74 c8 f7 7f 00 00 e8 0b 07 d3 5e 5e 00 00 40 71 74 c8 f7 7f 00 00 e8 fb 06 d3 5e 5e 00 09 e8 f3 06 d3 5e 5e 01 08 e8 eb 06 d3 5e 5e 02 07 e8 e3 06 d3 5e 5e 03 06 e8 db 06 d3 5e 5e 04 05 e8 d3 06 d3 5e 5e 05 04 e8 cb 06 d3 5e 5e 06 03 e8 c3 06 d3 5e 5e 07 02 e8 bb 06 d3 5e 5e 08 01 e8 b3 06 d3 5e 5e 09 00 d0 71 74 c8 f7 7f 00 00 e8 a3 06 d3 5e 5e 00 03 e8 9b 06 d3 5e 5e 03 02 e8 93 06 d3 5e 5e 06 01 e8 8b 06 d3 5e 5e 09 00 b0 74 74 c8 f7 7f 00 00 e8 7b 06 d3 5e 5e 00 00 80 78 74 c8 f7 7f 00 00 e8 6b 06 d3 5e 5e 00 00 f8 78 74 c8 f7 7f 00 00 e8 5b 06 d3 5e 5e 00 00 18 7a 74 c8 f7 7f 00 00 49 ba 28 7c 74 c8 f7 7f 00 00 40 e9 a0 09 d3 5e 49 ba 00 7d 74 c8 f7 7f 00 00 40 e9 90 09 d3 5e e8 2b 06 d3 5e 5e 00 01 e8 23 06 d3 5e 5e 01 00 d8 7e 74 c8 f7 7f 00 00 e8 13 06 d3 5e 5e 00 18 e8 0b 06 d3 5e 5e 01 17 e8 03 06 d3 5e 5e 02 16 e8 fb 05 d3 5e 5e 03 15 e8 f3 05 d3 5e 5e 04 14 e8 eb 05 d3 5e 5e 05 13 e8 e3 05 d3 5e 5e 06 12 e8 db 05 d3 5e 5e 07 11 e8 d3 05 d3 5e 5e 08 10 e8 cb 05 d3 5e 5e 09 0f e8 c3 05 d3 5e 5e 0a 0e e8 bb 05 d3 5e 5e 0b 0d e8 b3 05 d3 5e 5e 0c 0c e8 ab 05 d3 5e 5e 0d 0b e8 a3 05 d3 5e 5e 0e 0a e8 9b 05 d3 5e 5e 0f 09 e8 93 05 d3 5e 5e 10 08 e8 8b 05 d3 5e 5e 11 07 e8 83 05 d3 5e 5e 12 06 e8 7b 05 d3 5e 5e 13 05 e8 73 05 d3 5e 5e 14 04 e8 6b 05 d3 5e 5e 15 03 e8 63 05 d3 5e 5e 16 02 e8 5b 05 d3 5e 5e 17 01 e8 53 05 d3 5e 5e 18 00 e0 7d 74 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
89        | 7ff7c85351f0h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[32i](v256x32i,v256x32i)                                        | bit satisfied<int>(ComparisonExpr<Vector256<int>> expr, Vector256<int> a, Vector256<int> b)                   | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 a0 69 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 c9 1b d3 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 b2 c4 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
90        | 7ff7c8535290h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[64u](v256x64u,v256x64u)                                        | bit satisfied<ulong>(ComparisonExpr<Vector256<ulong>> expr, Vector256<ulong> a, Vector256<ulong> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 c8 6e 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 29 1b d3 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 c2 fb ff ff 48 8b cb e8 42 fc ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
91        | 7ff7c8535330h   | 151     | hex://logix/logic.engine?satisfied#satisfied_g[64i](v256x64i,v256x64i)                                        | bit satisfied<long>(ComparisonExpr<Vector256<long>> expr, Vector256<long> a, Vector256<long> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 c8 73 74 c8 f7 7f 00 00 ba 02 00 00 00 e8 89 1a d3 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 fa fb ff ff 48 8b cb e8 a2 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
92        | 7ff7c85353d0h   | 35      | hex://logix/logic.engine?eval#eval_()                                                                         | bit eval(ILogicExpr expr)                                                                                     | 0f 1f 44 00 00 48 b8 c8 5f d9 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
93        | 7ff7c8535400h   | 759     | hex://logix/logic.engine?satisfied#satisfied_(1u,1u)                                                          | bit satisfied(ComparisonExpr expr, bit a, bit b)                                                              | 57 56 48 83 ec 28 48 8b f1 41 8b f8 8b 0e 48 8b 4e 18 83 79 08 00 76 54 48 8b 49 10 49 bb 30 0e 63 c7 f7 7f 00 00 48 b8 30 0e 63 c7 f7 7f 00 00 39 09 ff 10 48 8b 4e 18 83 79 08 01 76 2e 48 8b 49 18 8b d7 49 bb 38 0e 63 c7 f7 7f 00 00 48 b8 38 0e 63 c7 f7 7f 00 00 39 09 ff 10 48 8b ce e8 64 0b 86 ff 90 48 83 c4 28 5e 5f c3 e8 5f a9 e5 5e cc 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 18 8c 73 c8 f7 7f 00 00 55 41 57 41 56 41 54 57 56 53 48 83 ec 40 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 5e 10 48 8b 4f 10 48 85 c9 75 05 45 33 f6 eb 04 44 8b 71 08 41 bf b7 00 00 00 41 bc 01 00 00 00 48 8b cb 49 bb 60 0e 63 c7 f7 7f 00 00 48 b8 60 0e 63 c7 f7 7f 00 00 39 09 ff 10 41 3b c6 0f 85 0a 01 00 00 48 8b cb 49 bb 68 0e 63 c7 f7 7f 00 00 48 b8 68 0e 63 c7 f7 7f 00 00 39 09 ff 10 8b c8 e8 23 13 86 ff 48 8b c8 49 bb 40 0e 63 c7 f7 7f 00 00 48 b8 40 0e 63 c7 f7 7f 00 00 39 09 ff 10 48 89 45 c0 48 8b 4d c0 49 bb 48 0e 63 c7 f7 7f 00 00 48 b8 48 0e 63 c7 f7 7f 00 00 39 09 ff 10 85 c0 74 5d 48 8b 4d c0 49 bb 50 0e 63 c7 f7 7f 00 00 48 b8 50 0e 63 c7 f7 7f 00 00 39 09 ff 10 48 8b d0 48 8b ce e8 85 20 86 ff 48 8b ce e8 45 0a 86 ff 8b d8 48 8b cf e8 3b 0a 86 ff 3b d8 75 3e 48 8b 4d c0 49 bb 48 0e 63 c7 f7 7f 00 00 48 b8 48 0e 63 c7 f7 7f 00 00 39 09 ff 10 85 c0 75 a3 48 8b 4d c0 49 bb 58 0e 63 c7 f7 7f 00 00 48 b8 58 0e 63 c7 f7 7f 00 00 39 09 ff 10 eb 1a 48 8b cc e8 9b 00 00 00 90 33 c0 48 8d 65 d0 5b 5e 5f 41 5c 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d0 5b 5e 5f 41 5c 41 5e 41 5f 5d c3 48 8b cb 49 bb 70 0e 63 c7 f7 7f 00 00 48 b8 70 0e 63 c7 f7 7f 00 00 39 09 ff 10 8b f0 b9 19 02 00 00 48 ba 08 04 c1 c7 f7 7f 00 00 e8 82 af e5 5e 48 8b f8 b9 25 02 00 00 48 ba 08 04 c1 c7 f7 7f 00 00 e8 6b af e5 5e 4c 8b c8 4c 8d 45 c8 45 88 20 45 89 78 04 4c 8b c7 8b ce 41 8b d6 48 8b 45 c8 48 89 44 24 20 e8 67 ef 22 ff 48 8b c8 e8 8f 62 ca 5e cc 55 41 57 41 56 41 54 57 56 53 48 83 ec 30 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c0 00 74 1c 48 8b 4d c0 49 bb 58 0e 63 c7 f7 7f 00 00 48 b8 58 0e 63 c7 f7 7f 00 00 39 09 ff 10 90 48 83 c4 30 5b 5e 5f 41 5c 41 5e 41 5f 5d c3 19 0e 08 00 0e 72 0a 30 09 60 08 70 07 c0 05 e0 03 f0 01 50 40 00 00 00 19 0e 08 00 0e 52 0a 30 09 60 08 70 07 c0 05 e0 03 f0 01 50 40 00 00 00 00 00 00 00 00 00 00
94        | 7ff7c8535490h   | 615     | hex://logix/logic.engine?equal#equal_()                                                                       | bit equal(VariedLogicExpr a, VariedLogicExpr b)                                                               | 55 41 57 41 56 41 54 57 56 53 48 83 ec 40 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 5e 10 48 8b 4f 10 48 85 c9 75 05 45 33 f6 eb 04 44 8b 71 08 41 bf b7 00 00 00 41 bc 01 00 00 00 48 8b cb 49 bb 60 0e 63 c7 f7 7f 00 00 48 b8 60 0e 63 c7 f7 7f 00 00 39 09 ff 10 41 3b c6 0f 85 0a 01 00 00 48 8b cb 49 bb 68 0e 63 c7 f7 7f 00 00 48 b8 68 0e 63 c7 f7 7f 00 00 39 09 ff 10 8b c8 e8 23 13 86 ff 48 8b c8 49 bb 40 0e 63 c7 f7 7f 00 00 48 b8 40 0e 63 c7 f7 7f 00 00 39 09 ff 10 48 89 45 c0 48 8b 4d c0 49 bb 48 0e 63 c7 f7 7f 00 00 48 b8 48 0e 63 c7 f7 7f 00 00 39 09 ff 10 85 c0 74 5d 48 8b 4d c0 49 bb 50 0e 63 c7 f7 7f 00 00 48 b8 50 0e 63 c7 f7 7f 00 00 39 09 ff 10 48 8b d0 48 8b ce e8 85 20 86 ff 48 8b ce e8 45 0a 86 ff 8b d8 48 8b cf e8 3b 0a 86 ff 3b d8 75 3e 48 8b 4d c0 49 bb 48 0e 63 c7 f7 7f 00 00 48 b8 48 0e 63 c7 f7 7f 00 00 39 09 ff 10 85 c0 75 a3 48 8b 4d c0 49 bb 58 0e 63 c7 f7 7f 00 00 48 b8 58 0e 63 c7 f7 7f 00 00 39 09 ff 10 eb 1a 48 8b cc e8 9b 00 00 00 90 33 c0 48 8d 65 d0 5b 5e 5f 41 5c 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d0 5b 5e 5f 41 5c 41 5e 41 5f 5d c3 48 8b cb 49 bb 70 0e 63 c7 f7 7f 00 00 48 b8 70 0e 63 c7 f7 7f 00 00 39 09 ff 10 8b f0 b9 19 02 00 00 48 ba 08 04 c1 c7 f7 7f 00 00 e8 82 af e5 5e 48 8b f8 b9 25 02 00 00 48 ba 08 04 c1 c7 f7 7f 00 00 e8 6b af e5 5e 4c 8b c8 4c 8d 45 c8 45 88 20 45 89 78 04 4c 8b c7 8b ce 41 8b d6 48 8b 45 c8 48 89 44 24 20 e8 67 ef 22 ff 48 8b c8 e8 8f 62 ca 5e cc 55 41 57 41 56 41 54 57 56 53 48 83 ec 30 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c0 00 74 1c 48 8b 4d c0 49 bb 58 0e 63 c7 f7 7f 00 00 48 b8 58 0e 63 c7 f7 7f 00 00 39 09 ff 10 90 48 83 c4 30 5b 5e 5f 41 5c 41 5e 41 5f 5d c3 19 0e 08 00 0e 72 0a 30 09 60 08 70 07 c0 05 e0 03 f0 01 50 40 00 00 00 19 0e 08 00 0e 52 0a 30 09 60 08 70 07 c0 05 e0 03 f0 01 50 40 00 00 00 00 00 00 00 00 00 00
