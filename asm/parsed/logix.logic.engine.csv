Sequence  | Address         | Length  | TermCode            | Uri                                                                                                           | OpSig                                                                                                         | Data
0         | 7ff7c8651330h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_logic_expr_g[8u]()                                                          | bit eval<byte>(ILogicExpr<byte> expr)                                                                         | 0f 1f 44 00 00 48 b8 00 86 e3 c7 f7 7f 00 00 48 ff e0
1         | 7ff7c8651360h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_logic_expr_g[8i]()                                                          | bit eval<sbyte>(ILogicExpr<sbyte> expr)                                                                       | 0f 1f 44 00 00 48 b8 00 86 e3 c7 f7 7f 00 00 48 ff e0
2         | 7ff7c8651390h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_logic_expr_g[16u]()                                                         | bit eval<ushort>(ILogicExpr<ushort> expr)                                                                     | 0f 1f 44 00 00 48 b8 00 86 e3 c7 f7 7f 00 00 48 ff e0
3         | 7ff7c86513c0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_logic_expr_g[16i]()                                                         | bit eval<short>(ILogicExpr<short> expr)                                                                       | 0f 1f 44 00 00 48 b8 00 86 e3 c7 f7 7f 00 00 48 ff e0
4         | 7ff7c86513f0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_logic_expr_g[32u]()                                                         | bit eval<uint>(ILogicExpr<uint> expr)                                                                         | 0f 1f 44 00 00 48 b8 00 86 e3 c7 f7 7f 00 00 48 ff e0
5         | 7ff7c8651420h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_logic_expr_g[32i]()                                                         | bit eval<int>(ILogicExpr<int> expr)                                                                           | 0f 1f 44 00 00 48 b8 00 86 e3 c7 f7 7f 00 00 48 ff e0
6         | 7ff7c8651450h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_logic_expr_g[64u]()                                                         | bit eval<ulong>(ILogicExpr<ulong> expr)                                                                       | 0f 1f 44 00 00 48 b8 00 86 e3 c7 f7 7f 00 00 48 ff e0
7         | 7ff7c8651480h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_logic_expr_g[64i]()                                                         | bit eval<long>(ILogicExpr<long> expr)                                                                         | 0f 1f 44 00 00 48 b8 00 86 e3 c7 f7 7f 00 00 48 ff e0
8         | 7ff7c86514b0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_scalar_expr_g[8u]()                                                         | LiteralExpr<byte> eval<byte>(IExpr<byte> expr)                                                                | 0f 1f 44 00 00 48 b8 f8 0e 65 c8 f7 7f 00 00 48 ff e0
9         | 7ff7c86514e0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_scalar_expr_g[8i]()                                                         | LiteralExpr<sbyte> eval<sbyte>(IExpr<sbyte> expr)                                                             | 0f 1f 44 00 00 48 b8 28 0f 65 c8 f7 7f 00 00 48 ff e0
10        | 7ff7c8651510h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_scalar_expr_g[16u]()                                                        | LiteralExpr<ushort> eval<ushort>(IExpr<ushort> expr)                                                          | 0f 1f 44 00 00 48 b8 48 0f 65 c8 f7 7f 00 00 48 ff e0
11        | 7ff7c8651540h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_scalar_expr_g[16i]()                                                        | LiteralExpr<short> eval<short>(IExpr<short> expr)                                                             | 0f 1f 44 00 00 48 b8 68 0f 65 c8 f7 7f 00 00 48 ff e0
12        | 7ff7c8651570h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_scalar_expr_g[32u]()                                                        | LiteralExpr<uint> eval<uint>(IExpr<uint> expr)                                                                | 0f 1f 44 00 00 48 b8 88 0f 65 c8 f7 7f 00 00 48 ff e0
13        | 7ff7c86515a0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_scalar_expr_g[32i]()                                                        | LiteralExpr<int> eval<int>(IExpr<int> expr)                                                                   | 0f 1f 44 00 00 48 b8 a8 0f 65 c8 f7 7f 00 00 48 ff e0
14        | 7ff7c86515d0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_scalar_expr_g[64u]()                                                        | LiteralExpr<ulong> eval<ulong>(IExpr<ulong> expr)                                                             | 0f 1f 44 00 00 48 b8 c8 0f 65 c8 f7 7f 00 00 48 ff e0
15        | 7ff7c8651600h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_scalar_expr_g[64i]()                                                        | LiteralExpr<long> eval<long>(IExpr<long> expr)                                                                | 0f 1f 44 00 00 48 b8 e8 0f 65 c8 f7 7f 00 00 48 ff e0
16        | 7ff7c8651630h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_cmp_expr_g[8u]()                                                            | LiteralExpr<byte> eval<byte>(IComparisonExpr<byte> expr)                                                      | 0f 1f 44 00 00 48 b8 20 e8 64 c8 f7 7f 00 00 48 ff e0
17        | 7ff7c8651660h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_cmp_expr_g[8i]()                                                            | LiteralExpr<sbyte> eval<sbyte>(IComparisonExpr<sbyte> expr)                                                   | 0f 1f 44 00 00 48 b8 00 e9 64 c8 f7 7f 00 00 48 ff e0
18        | 7ff7c8651690h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_cmp_expr_g[16u]()                                                           | LiteralExpr<ushort> eval<ushort>(IComparisonExpr<ushort> expr)                                                | 0f 1f 44 00 00 48 b8 b0 e9 64 c8 f7 7f 00 00 48 ff e0
19        | 7ff7c86516c0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_cmp_expr_g[16i]()                                                           | LiteralExpr<short> eval<short>(IComparisonExpr<short> expr)                                                   | 0f 1f 44 00 00 48 b8 60 ea 64 c8 f7 7f 00 00 48 ff e0
20        | 7ff7c86516f0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_cmp_expr_g[32u]()                                                           | LiteralExpr<uint> eval<uint>(IComparisonExpr<uint> expr)                                                      | 0f 1f 44 00 00 48 b8 10 eb 64 c8 f7 7f 00 00 48 ff e0
21        | 7ff7c8651720h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_cmp_expr_g[32i]()                                                           | LiteralExpr<int> eval<int>(IComparisonExpr<int> expr)                                                         | 0f 1f 44 00 00 48 b8 b0 eb 64 c8 f7 7f 00 00 48 ff e0
22        | 7ff7c8651b50h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_cmp_expr_g[64i]()                                                           | LiteralExpr<long> eval<long>(IComparisonExpr<long> expr)                                                      | 0f 1f 44 00 00 48 b8 50 ec 64 c8 f7 7f 00 00 48 ff e0
23        | 7ff7c8651b80h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[8u]()                                                        | LiteralExpr<Vector128<byte>> eval<byte>(IComparisonExpr<Vector128<byte>> expr)                                | 0f 1f 44 00 00 48 b8 60 f5 64 c8 f7 7f 00 00 48 ff e0
24        | 7ff7c8651bb0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[8i]()                                                        | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IComparisonExpr<Vector128<sbyte>> expr)                             | 0f 1f 44 00 00 48 b8 50 fa 64 c8 f7 7f 00 00 48 ff e0
25        | 7ff7c8651be0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[16u]()                                                       | LiteralExpr<Vector128<ushort>> eval<ushort>(IComparisonExpr<Vector128<ushort>> expr)                          | 0f 1f 44 00 00 48 b8 30 fb 64 c8 f7 7f 00 00 48 ff e0
26        | 7ff7c8651c10h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[16i]()                                                       | LiteralExpr<Vector128<short>> eval<short>(IComparisonExpr<Vector128<short>> expr)                             | 0f 1f 44 00 00 48 b8 10 fc 64 c8 f7 7f 00 00 48 ff e0
27        | 7ff7c8651c40h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[32u]()                                                       | LiteralExpr<Vector128<uint>> eval<uint>(IComparisonExpr<Vector128<uint>> expr)                                | 0f 1f 44 00 00 48 b8 f0 fc 64 c8 f7 7f 00 00 48 ff e0
28        | 7ff7c8651c70h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[32i]()                                                       | LiteralExpr<Vector128<int>> eval<int>(IComparisonExpr<Vector128<int>> expr)                                   | 0f 1f 44 00 00 48 b8 e0 01 65 c8 f7 7f 00 00 48 ff e0
29        | 7ff7c8651ca0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[64i]()                                                       | LiteralExpr<Vector128<long>> eval<long>(IComparisonExpr<Vector128<long>> expr)                                | 0f 1f 44 00 00 48 b8 c0 02 65 c8 f7 7f 00 00 48 ff e0
30        | 7ff7c8651cd0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[8u]()                                                        | LiteralExpr<Vector256<byte>> eval<byte>(IComparisonExpr<Vector256<byte>> expr)                                | 0f 1f 44 00 00 48 b8 a0 03 65 c8 f7 7f 00 00 48 ff e0
31        | 7ff7c8651d00h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[8i]()                                                        | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IComparisonExpr<Vector256<sbyte>> expr)                             | 0f 1f 44 00 00 48 b8 c0 08 65 c8 f7 7f 00 00 48 ff e0
32        | 7ff7c8651d30h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[16u]()                                                       | LiteralExpr<Vector256<ushort>> eval<ushort>(IComparisonExpr<Vector256<ushort>> expr)                          | 0f 1f 44 00 00 48 b8 d0 09 65 c8 f7 7f 00 00 48 ff e0
33        | 7ff7c8651d60h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[16i]()                                                       | LiteralExpr<Vector256<short>> eval<short>(IComparisonExpr<Vector256<short>> expr)                             | 0f 1f 44 00 00 48 b8 e0 0a 65 c8 f7 7f 00 00 48 ff e0
34        | 7ff7c8651d90h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[32u]()                                                       | LiteralExpr<Vector256<uint>> eval<uint>(IComparisonExpr<Vector256<uint>> expr)                                | 0f 1f 44 00 00 48 b8 f0 0b 65 c8 f7 7f 00 00 48 ff e0
35        | 7ff7c8651dc0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[32i]()                                                       | LiteralExpr<Vector256<int>> eval<int>(IComparisonExpr<Vector256<int>> expr)                                   | 0f 1f 44 00 00 48 b8 10 11 65 c8 f7 7f 00 00 48 ff e0
36        | 7ff7c8651df0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[64i]()                                                       | LiteralExpr<Vector256<long>> eval<long>(IComparisonExpr<Vector256<long>> expr)                                | 0f 1f 44 00 00 48 b8 20 12 65 c8 f7 7f 00 00 48 ff e0
37        | 7ff7c8651e20h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_cmp_pred_g[8u]()                                                            | bit eval<byte>(IComparisonPred<byte> expr)                                                                    | 0f 1f 44 00 00 48 b8 00 f1 64 c8 f7 7f 00 00 48 ff e0
38        | 7ff7c8651e50h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_cmp_pred_g[8i]()                                                            | bit eval<sbyte>(IComparisonPred<sbyte> expr)                                                                  | 0f 1f 44 00 00 48 b8 a0 f1 64 c8 f7 7f 00 00 48 ff e0
39        | 7ff7c8651e80h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_cmp_pred_g[16u]()                                                           | bit eval<ushort>(IComparisonPred<ushort> expr)                                                                | 0f 1f 44 00 00 48 b8 40 f2 64 c8 f7 7f 00 00 48 ff e0
40        | 7ff7c8651eb0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_cmp_pred_g[16i]()                                                           | bit eval<short>(IComparisonPred<short> expr)                                                                  | 0f 1f 44 00 00 48 b8 e0 f2 64 c8 f7 7f 00 00 48 ff e0
41        | 7ff7c8651ee0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_cmp_pred_g[32u]()                                                           | bit eval<uint>(IComparisonPred<uint> expr)                                                                    | 0f 1f 44 00 00 48 b8 80 f3 64 c8 f7 7f 00 00 48 ff e0
42        | 7ff7c8651f10h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_cmp_pred_g[32i]()                                                           | bit eval<int>(IComparisonPred<int> expr)                                                                      | 0f 1f 44 00 00 48 b8 20 f4 64 c8 f7 7f 00 00 48 ff e0
43        | 7ff7c8651f40h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_cmp_pred_g[64i]()                                                           | bit eval<long>(IComparisonPred<long> expr)                                                                    | 0f 1f 44 00 00 48 b8 c0 f4 64 c8 f7 7f 00 00 48 ff e0
44        | 7ff7c8652370h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_arith_expr_g[8u]()                                                          | LiteralExpr<byte> eval<byte>(IArithmeticExpr<byte> expr)                                                      | 0f 1f 44 00 00 48 b8 d8 1f 65 c8 f7 7f 00 00 48 ff e0
45        | 7ff7c86523a0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_arith_expr_g[8i]()                                                          | LiteralExpr<sbyte> eval<sbyte>(IArithmeticExpr<sbyte> expr)                                                   | 0f 1f 44 00 00 48 b8 28 20 65 c8 f7 7f 00 00 48 ff e0
46        | 7ff7c86523d0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_arith_expr_g[16u]()                                                         | LiteralExpr<ushort> eval<ushort>(IArithmeticExpr<ushort> expr)                                                | 0f 1f 44 00 00 48 b8 68 20 65 c8 f7 7f 00 00 48 ff e0
47        | 7ff7c8652400h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_arith_expr_g[16i]()                                                         | LiteralExpr<short> eval<short>(IArithmeticExpr<short> expr)                                                   | 0f 1f 44 00 00 48 b8 a8 20 65 c8 f7 7f 00 00 48 ff e0
48        | 7ff7c8652430h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_arith_expr_g[32u]()                                                         | LiteralExpr<uint> eval<uint>(IArithmeticExpr<uint> expr)                                                      | 0f 1f 44 00 00 48 b8 e8 20 65 c8 f7 7f 00 00 48 ff e0
49        | 7ff7c8652460h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_arith_expr_g[32i]()                                                         | LiteralExpr<int> eval<int>(IArithmeticExpr<int> expr)                                                         | 0f 1f 44 00 00 48 b8 28 21 65 c8 f7 7f 00 00 48 ff e0
50        | 7ff7c8652490h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_arith_expr_g[64u]()                                                         | LiteralExpr<ulong> eval<ulong>(IArithmeticExpr<ulong> expr)                                                   | 0f 1f 44 00 00 48 b8 68 21 65 c8 f7 7f 00 00 48 ff e0
51        | 7ff7c86524c0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_arith_expr_g[64i]()                                                         | LiteralExpr<long> eval<long>(IArithmeticExpr<long> expr)                                                      | 0f 1f 44 00 00 48 b8 a8 21 65 c8 f7 7f 00 00 48 ff e0
52        | 7ff7c86524f0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr128_g[8u]()                                                      | LiteralExpr<Vector128<byte>> eval<byte>(IExpr<Vector128<byte>> expr)                                          | 0f 1f 44 00 00 48 b8 a0 f0 64 c8 f7 7f 00 00 48 ff e0
53        | 7ff7c8652520h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr128_g[8i]()                                                      | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IExpr<Vector128<sbyte>> expr)                                       | 0f 1f 44 00 00 48 b8 e8 f6 64 c8 f7 7f 00 00 48 ff e0
54        | 7ff7c8652550h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr128_g[16u]()                                                     | LiteralExpr<Vector128<ushort>> eval<ushort>(IExpr<Vector128<ushort>> expr)                                    | 0f 1f 44 00 00 48 b8 d0 f7 64 c8 f7 7f 00 00 48 ff e0
55        | 7ff7c8652580h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr128_g[16i]()                                                     | LiteralExpr<Vector128<short>> eval<short>(IExpr<Vector128<short>> expr)                                       | 0f 1f 44 00 00 48 b8 b8 f8 64 c8 f7 7f 00 00 48 ff e0
56        | 7ff7c86525b0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr128_g[32u]()                                                     | LiteralExpr<Vector128<uint>> eval<uint>(IExpr<Vector128<uint>> expr)                                          | 0f 1f 44 00 00 48 b8 a0 f9 64 c8 f7 7f 00 00 48 ff e0
57        | 7ff7c86525e0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr128_g[32i]()                                                     | LiteralExpr<Vector128<int>> eval<int>(IExpr<Vector128<int>> expr)                                             | 0f 1f 44 00 00 48 b8 18 fe 64 c8 f7 7f 00 00 48 ff e0
58        | 7ff7c8652610h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr128_g[64u]()                                                     | LiteralExpr<Vector128<ulong>> eval<ulong>(IExpr<Vector128<ulong>> expr)                                       | 0f 1f 44 00 00 48 b8 48 23 65 c8 f7 7f 00 00 48 ff e0
59        | 7ff7c8652640h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr128_g[64i]()                                                     | LiteralExpr<Vector128<long>> eval<long>(IExpr<Vector128<long>> expr)                                          | 0f 1f 44 00 00 48 b8 00 ff 64 c8 f7 7f 00 00 48 ff e0
60        | 7ff7c8652a70h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr256_g[8u]()                                                      | LiteralExpr<Vector256<byte>> eval<byte>(IExpr<Vector256<byte>> expr)                                          | 0f 1f 44 00 00 48 b8 30 01 65 c8 f7 7f 00 00 48 ff e0
61        | 7ff7c8652aa0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr256_g[8i]()                                                      | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IExpr<Vector256<sbyte>> expr)                                       | 0f 1f 44 00 00 48 b8 08 05 65 c8 f7 7f 00 00 48 ff e0
62        | 7ff7c8652ad0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr256_g[16u]()                                                     | LiteralExpr<Vector256<ushort>> eval<ushort>(IExpr<Vector256<ushort>> expr)                                    | 0f 1f 44 00 00 48 b8 f0 05 65 c8 f7 7f 00 00 48 ff e0
63        | 7ff7c8652b00h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr256_g[16i]()                                                     | LiteralExpr<Vector256<short>> eval<short>(IExpr<Vector256<short>> expr)                                       | 0f 1f 44 00 00 48 b8 d8 06 65 c8 f7 7f 00 00 48 ff e0
64        | 7ff7c8652b30h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr256_g[32u]()                                                     | LiteralExpr<Vector256<uint>> eval<uint>(IExpr<Vector256<uint>> expr)                                          | 0f 1f 44 00 00 48 b8 c0 07 65 c8 f7 7f 00 00 48 ff e0
65        | 7ff7c8652b60h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr256_g[32i]()                                                     | LiteralExpr<Vector256<int>> eval<int>(IExpr<Vector256<int>> expr)                                             | 0f 1f 44 00 00 48 b8 00 0d 65 c8 f7 7f 00 00 48 ff e0
66        | 7ff7c8652b90h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr256_g[64u]()                                                     | LiteralExpr<Vector256<ulong>> eval<ulong>(IExpr<Vector256<ulong>> expr)                                       | 0f 1f 44 00 00 48 b8 c8 27 65 c8 f7 7f 00 00 48 ff e0
67        | 7ff7c8652bc0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr256_g[64i]()                                                     | LiteralExpr<Vector256<long>> eval<long>(IExpr<Vector256<long>> expr)                                          | 0f 1f 44 00 00 48 b8 e8 0d 65 c8 f7 7f 00 00 48 ff e0
68        | 7ff7c8652bf0h   | 86      | CTC_RET_Zx3         | hex://logix/LogicEngine?satisfied#satisfied_g[8u](8u,8u)                                                      | bit satisfied<byte>(ComparisonExpr<byte> expr, byte a, byte b)                                                | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 10 ea 70 c7 f7 7f 00 00 ba 02 00 00 00 e8 cd 41 c1 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 71 fc ff ff 48 8b ce e8 f1 bb ff ff 0f b6 40 08 0f b6 c0 3c ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
69        | 7ff7c8652c60h   | 93      | CTC_RET_Zx3         | hex://logix/LogicEngine?satisfied#satisfied_g[8i](8i,8i)                                                      | bit satisfied<sbyte>(ComparisonExpr<sbyte> expr, sbyte a, sbyte b)                                            | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 70 c7 f7 7f 00 00 ba 02 00 00 00 e8 5d 41 c1 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 09 fd ff ff 48 8b ce e8 61 bc ff ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
70        | 7ff7c8652ce0h   | 93      | CTC_RET_Zx3         | hex://logix/LogicEngine?satisfied#satisfied_g[16u](16u,16u)                                                   | bit satisfied<ushort>(ComparisonExpr<ushort> expr, ushort a, ushort b)                                        | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 b8 69 0d c8 f7 7f 00 00 ba 02 00 00 00 e8 dd 40 c1 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 f0 fc ff ff 48 8b ce e8 90 bc ff ff 0f b7 40 08 0f b7 c0 0f b7 c0 3d ff ff 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
71        | 7ff7c8653160h   | 96      | CTC_RET_SBB         | hex://logix/LogicEngine?satisfied#satisfied_g[16i](16i,16i)                                                   | bit satisfied<short>(ComparisonExpr<short> expr, short a, short b)                                            | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 b8 6f 0d c8 f7 7f 00 00 ba 02 00 00 00 e8 5d 3c c1 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 f0 fb ff ff 48 8b ce e8 c0 b8 ff ff 48 0f bf 40 08 48 0f bf c0 48 0f bf c0 3d ff 7f 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
72        | 7ff7c86531e0h   | 82      | CTC_RET_Zx3         | hex://logix/LogicEngine?satisfied#satisfied_g[32u](32u,32u)                                                   | bit satisfied<uint>(ComparisonExpr<uint> expr, uint a, uint b)                                                | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 72 0d c8 f7 7f 00 00 ba 02 00 00 00 e8 dd 3b c1 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 ca fb ff ff 48 8b ce e8 f2 b8 ff ff 8b 40 08 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
73        | 7ff7c8653250h   | 84      | CTC_RET_SBB         | hex://logix/LogicEngine?satisfied#satisfied_g[32i](32i,32i)                                                   | bit satisfied<int>(ComparisonExpr<int> expr, int a, int b)                                                    | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 48 5f 7d c7 f7 7f 00 00 ba 02 00 00 00 e8 6d 3b c1 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 b2 fb ff ff 48 8b ce e8 22 b9 ff ff 8b 40 08 3d ff ff ff 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
74        | 7ff7c86532c0h   | 87      | CTC_RET_ZED_SBB     | hex://logix/LogicEngine?satisfied#satisfied_g[64u](64u,64u)                                                   | bit satisfied<ulong>(ComparisonExpr<ulong> expr, ulong a, ulong b)                                            | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 a8 14 a8 c7 f7 7f 00 00 ba 02 00 00 00 e8 fc 3a c1 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 a7 fb ff ff 48 8b ce e8 d7 fb ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
75        | 7ff7c8653330h   | 96      | CTC_RET_SBB         | hex://logix/LogicEngine?satisfied#satisfied_g[64i](64i,64i)                                                   | bit satisfied<long>(ComparisonExpr<long> expr, long a, long b)                                                | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 38 7b 0d c8 f7 7f 00 00 ba 02 00 00 00 e8 8c 3a c1 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 bf fb ff ff 48 8b ce e8 df b8 ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
76        | 7ff7c86537b0h   | 114     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[8u](v128x8u,v128x8u)                                            | bit satisfied<byte>(ComparisonExpr<Vector128<byte>> expr, Vector128<byte> a, Vector128<byte> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 90 79 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 09 36 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 9a f8 ff ff 48 8b cb e8 62 bd ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
77        | 7ff7c8653850h   | 114     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[8i](v128x8i,v128x8i)                                            | bit satisfied<sbyte>(ComparisonExpr<Vector128<sbyte>> expr, Vector128<sbyte> a, Vector128<sbyte> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 40 81 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 69 35 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 82 fb ff ff 48 8b cb e8 b2 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
78        | 7ff7c86538f0h   | 114     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[16u](v128x16u,v128x16u)                                         | bit satisfied<ushort>(ComparisonExpr<Vector128<ushort>> expr, Vector128<ushort> a, Vector128<ushort> b)       | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 80 85 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 c9 34 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 72 fb ff ff 48 8b cb e8 f2 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
79        | 7ff7c8653990h   | 114     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[16i](v128x16i,v128x16i)                                         | bit satisfied<short>(ComparisonExpr<Vector128<short>> expr, Vector128<short> a, Vector128<short> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 c0 89 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 29 34 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 62 fb ff ff 48 8b cb e8 32 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
80        | 7ff7c8653a30h   | 114     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[32u](v128x32u,v128x32u)                                         | bit satisfied<uint>(ComparisonExpr<Vector128<uint>> expr, Vector128<uint> a, Vector128<uint> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 00 8e ad c8 f7 7f 00 00 ba 02 00 00 00 e8 89 33 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 52 fb ff ff 48 8b cb e8 72 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
81        | 7ff7c8653ad0h   | 114     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[32i](v128x32i,v128x32i)                                         | bit satisfied<int>(ComparisonExpr<Vector128<int>> expr, Vector128<int> a, Vector128<int> b)                   | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 40 92 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 e9 32 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 42 fb ff ff 48 8b cb e8 c2 c6 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
82        | 7ff7c8653b70h   | 115     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[64u](v128x64u,v128x64u)                                         | bit satisfied<ulong>(ComparisonExpr<Vector128<ulong>> expr, Vector128<ulong> a, Vector128<ulong> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 68 97 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 49 32 c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 32 fb ff ff 48 8b cb e8 b2 fb ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
83        | 7ff7c8654010h   | 115     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[64i](v128x64i,v128x64i)                                         | bit satisfied<long>(ComparisonExpr<Vector128<long>> expr, Vector128<long> a, Vector128<long> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 68 9c ad c8 f7 7f 00 00 ba 02 00 00 00 e8 a9 2d c1 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 62 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
84        | 7ff7c86540b0h   | 117     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[8u](v256x8u,v256x8u)                                            | bit satisfied<byte>(ComparisonExpr<Vector256<byte>> expr, Vector256<byte> a, Vector256<byte> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 48 a6 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 09 2d c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 c2 fc ff ff 48 8b cb e8 a2 c2 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3
85        | 7ff7c8654150h   | 117     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[8i](v256x8i,v256x8i)                                            | bit satisfied<sbyte>(ComparisonExpr<Vector256<sbyte>> expr, Vector256<sbyte> a, Vector256<sbyte> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 f8 ad ad c8 f7 7f 00 00 ba 02 00 00 00 e8 69 2c c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 52 fd ff ff 48 8b cb e8 22 c7 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3
86        | 7ff7c86541f0h   | 117     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[16u](v256x16u,v256x16u)                                         | bit satisfied<ushort>(ComparisonExpr<Vector256<ushort>> expr, Vector256<ushort> a, Vector256<ushort> b)       | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 38 b2 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 c9 2b c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 42 fd ff ff 48 8b cb e8 92 c7 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3
87        | 7ff7c8654690h   | 117     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[16i](v256x16i,v256x16i)                                         | bit satisfied<short>(ComparisonExpr<Vector256<short>> expr, Vector256<short> a, Vector256<short> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 78 b6 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 29 27 c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 02 c4 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3
88        | 7ff7c8654730h   | 117     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[32u](v256x32u,v256x32u)                                         | bit satisfied<uint>(ComparisonExpr<Vector256<uint>> expr, Vector256<uint> a, Vector256<uint> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 b8 ba ad c8 f7 7f 00 00 ba 02 00 00 00 e8 89 26 c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 aa fb ff ff 48 8b cb e8 72 c4 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3
89        | 7ff7c86547d0h   | 117     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[32i](v256x32i,v256x32i)                                         | bit satisfied<int>(ComparisonExpr<Vector256<int>> expr, Vector256<int> a, Vector256<int> b)                   | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 f8 be ad c8 f7 7f 00 00 ba 02 00 00 00 e8 e9 25 c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 9a fb ff ff 48 8b cb e8 f2 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3
90        | 7ff7c8654870h   | 118     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[64u](v256x64u,v256x64u)                                         | bit satisfied<ulong>(ComparisonExpr<Vector256<ulong>> expr, Vector256<ulong> a, Vector256<ulong> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 20 c4 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 49 25 c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 8a fb ff ff 48 8b cb e8 0a fc ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3
91        | 7ff7c8654910h   | 118     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[64i](v256x64i,v256x64i)                                         | bit satisfied<long>(ComparisonExpr<Vector256<long>> expr, Vector256<long> a, Vector256<long> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 20 c9 ad c8 f7 7f 00 00 ba 02 00 00 00 e8 a9 24 c1 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 c2 fb ff ff 48 8b cb e8 c2 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3
92        | 7ff7c86549b0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_()                                                                          | bit eval(ILogicExpr expr)                                                                                     | 0f 1f 44 00 00 48 b8 00 86 e3 c7 f7 7f 00 00 48 ff e0
93        | 7ff7c86549e0h   | 550     | CTC_RET_Zx3         | hex://logix/LogicEngine?satisfied#satisfied_(1u,1u)                                                           | bit satisfied(ComparisonExpr expr, bit a, bit b)                                                              | 57 56 48 83 ec 28 48 8b f1 41 8b f8 8b 0e 48 8b 4e 18 83 79 08 00 76 48 48 8b 49 10 49 bb 88 0c 61 c7 f7 7f 00 00 39 09 ff 15 7a c2 fb fe 48 8b 4e 18 83 79 08 01 76 28 48 8b 49 18 8b d7 49 bb 90 0c 61 c7 f7 7f 00 00 39 09 ff 15 60 c2 fb fe 48 8b ce e8 c8 3b 7e ff 90 48 83 c4 28 5e 5f c3 e8 8b b3 d3 5e cc 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 b8 84 ac c8 f7 7f 00 00 55 41 57 41 56 57 56 53 48 83 ec 48 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 4e 10 48 8b 5f 10 41 be b6 00 00 00 41 bf 01 00 00 00 8b 49 08 3b 4b 08 0f 85 cb 00 00 00 e8 a8 43 7e ff 48 8b c8 49 bb 98 0c 61 c7 f7 7f 00 00 39 09 ff 15 e3 c1 fb fe 48 89 45 c8 48 8b 4d c8 49 bb a0 0c 61 c7 f7 7f 00 00 39 09 ff 15 d1 c1 fb fe 85 c0 74 51 48 8b 4d c8 49 bb a8 0c 61 c7 f7 7f 00 00 39 09 ff 15 bf c1 fb fe 48 8b d0 48 8b ce e8 44 51 7e ff 48 8b ce e8 04 3b 7e ff 8b d8 48 8b cf e8 fa 3a 7e ff 3b d8 75 32 48 8b 4d c8 49 bb a0 0c 61 c7 f7 7f 00 00 39 09 ff 15 80 c1 fb fe 85 c0 75 af 48 8b 4d c8 49 bb b0 0c 61 c7 f7 7f 00 00 39 09 ff 15 76 c1 fb fe eb 18 48 8b cc e8 7e 00 00 00 90 33 c0 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 8b f1 8b 7b 08 b9 19 02 00 00 48 ba 78 42 ac c7 f7 7f 00 00 e8 31 ba d3 5e 48 8b d8 b9 25 02 00 00 48 ba 78 42 ac c7 f7 7f 00 00 e8 1a ba d3 5e 4c 8b c8 4c 8d 45 d0 45 88 38 45 89 70 04 4c 8b c3 8b ce 8b d7 48 8b 45 d0 48 89 44 24 20 e8 37 03 0f ff 48 8b c8 e8 3f 6d b8 5e cc 55 41 57 41 56 57 56 53 48 83 ec 38 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c8 00 74 16 48 8b 4d c8 49 bb b0 0c 61 c7 f7 7f 00 00 39 09 ff 15 b8 c0 fb fe 90 48 83 c4 38 5b 5e 5f 41 5e 41 5f 5d c3
94        | 7ff7c8654a60h   | 422     | CTC_RET_Zx3         | hex://logix/LogicEngine?equal#equal_()                                                                        | bit equal(VariedLogicExpr a, VariedLogicExpr b)                                                               | 55 41 57 41 56 57 56 53 48 83 ec 48 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 4e 10 48 8b 5f 10 41 be b6 00 00 00 41 bf 01 00 00 00 8b 49 08 3b 4b 08 0f 85 cb 00 00 00 e8 a8 43 7e ff 48 8b c8 49 bb 98 0c 61 c7 f7 7f 00 00 39 09 ff 15 e3 c1 fb fe 48 89 45 c8 48 8b 4d c8 49 bb a0 0c 61 c7 f7 7f 00 00 39 09 ff 15 d1 c1 fb fe 85 c0 74 51 48 8b 4d c8 49 bb a8 0c 61 c7 f7 7f 00 00 39 09 ff 15 bf c1 fb fe 48 8b d0 48 8b ce e8 44 51 7e ff 48 8b ce e8 04 3b 7e ff 8b d8 48 8b cf e8 fa 3a 7e ff 3b d8 75 32 48 8b 4d c8 49 bb a0 0c 61 c7 f7 7f 00 00 39 09 ff 15 80 c1 fb fe 85 c0 75 af 48 8b 4d c8 49 bb b0 0c 61 c7 f7 7f 00 00 39 09 ff 15 76 c1 fb fe eb 18 48 8b cc e8 7e 00 00 00 90 33 c0 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 8b f1 8b 7b 08 b9 19 02 00 00 48 ba 78 42 ac c7 f7 7f 00 00 e8 31 ba d3 5e 48 8b d8 b9 25 02 00 00 48 ba 78 42 ac c7 f7 7f 00 00 e8 1a ba d3 5e 4c 8b c8 4c 8d 45 d0 45 88 38 45 89 70 04 4c 8b c3 8b ce 8b d7 48 8b 45 d0 48 89 44 24 20 e8 37 03 0f ff 48 8b c8 e8 3f 6d b8 5e cc 55 41 57 41 56 57 56 53 48 83 ec 38 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c8 00 74 16 48 8b 4d c8 49 bb b0 0c 61 c7 f7 7f 00 00 39 09 ff 15 b8 c0 fb fe 90 48 83 c4 38 5b 5e 5f 41 5e 41 5f 5d c3
