Sequence  | Address         | Length  | TermCode            | Uri                                                                                                           | OpSig                                                                                                         | Data
0         | 7ff7c85e4e90h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_logic_expr_g[8u]()                                                          | bit eval<byte>(ILogicExpr<byte> expr)                                                                         | 0f 1f 44 00 00 48 b8 98 23 db c7 f7 7f 00 00 48 ff e0
1         | 7ff7c85e4ec0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_logic_expr_g[8i]()                                                          | bit eval<sbyte>(ILogicExpr<sbyte> expr)                                                                       | 0f 1f 44 00 00 48 b8 98 23 db c7 f7 7f 00 00 48 ff e0
2         | 7ff7c85e4ef0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_logic_expr_g[16u]()                                                         | bit eval<ushort>(ILogicExpr<ushort> expr)                                                                     | 0f 1f 44 00 00 48 b8 98 23 db c7 f7 7f 00 00 48 ff e0
3         | 7ff7c85e4f20h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_logic_expr_g[16i]()                                                         | bit eval<short>(ILogicExpr<short> expr)                                                                       | 0f 1f 44 00 00 48 b8 98 23 db c7 f7 7f 00 00 48 ff e0
4         | 7ff7c85e4f50h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_logic_expr_g[32u]()                                                         | bit eval<uint>(ILogicExpr<uint> expr)                                                                         | 0f 1f 44 00 00 48 b8 98 23 db c7 f7 7f 00 00 48 ff e0
5         | 7ff7c85e4f80h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_logic_expr_g[32i]()                                                         | bit eval<int>(ILogicExpr<int> expr)                                                                           | 0f 1f 44 00 00 48 b8 98 23 db c7 f7 7f 00 00 48 ff e0
6         | 7ff7c85e4fb0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_logic_expr_g[64u]()                                                         | bit eval<ulong>(ILogicExpr<ulong> expr)                                                                       | 0f 1f 44 00 00 48 b8 98 23 db c7 f7 7f 00 00 48 ff e0
7         | 7ff7c85e4fe0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_logic_expr_g[64i]()                                                         | bit eval<long>(ILogicExpr<long> expr)                                                                         | 0f 1f 44 00 00 48 b8 98 23 db c7 f7 7f 00 00 48 ff e0
8         | 7ff7c85e5410h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_scalar_expr_g[8u]()                                                         | LiteralExpr<byte> eval<byte>(IExpr<byte> expr)                                                                | 0f 1f 44 00 00 48 b8 08 50 5e c8 f7 7f 00 00 48 ff e0
9         | 7ff7c85e5440h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_scalar_expr_g[8i]()                                                         | LiteralExpr<sbyte> eval<sbyte>(IExpr<sbyte> expr)                                                             | 0f 1f 44 00 00 48 b8 38 50 5e c8 f7 7f 00 00 48 ff e0
10        | 7ff7c85e5470h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_scalar_expr_g[16u]()                                                        | LiteralExpr<ushort> eval<ushort>(IExpr<ushort> expr)                                                          | 0f 1f 44 00 00 48 b8 58 50 5e c8 f7 7f 00 00 48 ff e0
11        | 7ff7c85e54a0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_scalar_expr_g[16i]()                                                        | LiteralExpr<short> eval<short>(IExpr<short> expr)                                                             | 0f 1f 44 00 00 48 b8 78 50 5e c8 f7 7f 00 00 48 ff e0
12        | 7ff7c85e54d0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_scalar_expr_g[32u]()                                                        | LiteralExpr<uint> eval<uint>(IExpr<uint> expr)                                                                | 0f 1f 44 00 00 48 b8 98 50 5e c8 f7 7f 00 00 48 ff e0
13        | 7ff7c85e5500h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_scalar_expr_g[32i]()                                                        | LiteralExpr<int> eval<int>(IExpr<int> expr)                                                                   | 0f 1f 44 00 00 48 b8 b8 50 5e c8 f7 7f 00 00 48 ff e0
14        | 7ff7c85e5530h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_scalar_expr_g[64u]()                                                        | LiteralExpr<ulong> eval<ulong>(IExpr<ulong> expr)                                                             | 0f 1f 44 00 00 48 b8 d8 50 5e c8 f7 7f 00 00 48 ff e0
15        | 7ff7c85e5560h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_scalar_expr_g[64i]()                                                        | LiteralExpr<long> eval<long>(IExpr<long> expr)                                                                | 0f 1f 44 00 00 48 b8 f8 50 5e c8 f7 7f 00 00 48 ff e0
16        | 7ff7c85e5590h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_cmp_expr_g[8u]()                                                            | LiteralExpr<byte> eval<byte>(IComparisonExpr<byte> expr)                                                      | 0f 1f 44 00 00 48 b8 90 27 5e c8 f7 7f 00 00 48 ff e0
17        | 7ff7c85e55c0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_cmp_expr_g[8i]()                                                            | LiteralExpr<sbyte> eval<sbyte>(IComparisonExpr<sbyte> expr)                                                   | 0f 1f 44 00 00 48 b8 70 28 5e c8 f7 7f 00 00 48 ff e0
18        | 7ff7c85e55f0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_cmp_expr_g[16u]()                                                           | LiteralExpr<ushort> eval<ushort>(IComparisonExpr<ushort> expr)                                                | 0f 1f 44 00 00 48 b8 20 29 5e c8 f7 7f 00 00 48 ff e0
19        | 7ff7c85e5620h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_cmp_expr_g[16i]()                                                           | LiteralExpr<short> eval<short>(IComparisonExpr<short> expr)                                                   | 0f 1f 44 00 00 48 b8 d0 29 5e c8 f7 7f 00 00 48 ff e0
20        | 7ff7c85e5650h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_cmp_expr_g[32u]()                                                           | LiteralExpr<uint> eval<uint>(IComparisonExpr<uint> expr)                                                      | 0f 1f 44 00 00 48 b8 80 2a 5e c8 f7 7f 00 00 48 ff e0
21        | 7ff7c85e5680h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_cmp_expr_g[32i]()                                                           | LiteralExpr<int> eval<int>(IComparisonExpr<int> expr)                                                         | 0f 1f 44 00 00 48 b8 20 2b 5e c8 f7 7f 00 00 48 ff e0
22        | 7ff7c85e56b0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_cmp_expr_g[64i]()                                                           | LiteralExpr<long> eval<long>(IComparisonExpr<long> expr)                                                      | 0f 1f 44 00 00 48 b8 c0 2b 5e c8 f7 7f 00 00 48 ff e0
23        | 7ff7c85e56e0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[8u]()                                                        | LiteralExpr<Vector128<byte>> eval<byte>(IComparisonExpr<Vector128<byte>> expr)                                | 0f 1f 44 00 00 48 b8 d0 34 5e c8 f7 7f 00 00 48 ff e0
24        | 7ff7c85e5710h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[8i]()                                                        | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IComparisonExpr<Vector128<sbyte>> expr)                             | 0f 1f 44 00 00 48 b8 b0 35 5e c8 f7 7f 00 00 48 ff e0
25        | 7ff7c85e5740h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[16u]()                                                       | LiteralExpr<Vector128<ushort>> eval<ushort>(IComparisonExpr<Vector128<ushort>> expr)                          | 0f 1f 44 00 00 48 b8 90 36 5e c8 f7 7f 00 00 48 ff e0
26        | 7ff7c85e5770h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[16i]()                                                       | LiteralExpr<Vector128<short>> eval<short>(IComparisonExpr<Vector128<short>> expr)                             | 0f 1f 44 00 00 48 b8 80 3b 5e c8 f7 7f 00 00 48 ff e0
27        | 7ff7c85e57a0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[32u]()                                                       | LiteralExpr<Vector128<uint>> eval<uint>(IComparisonExpr<Vector128<uint>> expr)                                | 0f 1f 44 00 00 48 b8 60 3c 5e c8 f7 7f 00 00 48 ff e0
28        | 7ff7c85e57d0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[32i]()                                                       | LiteralExpr<Vector128<int>> eval<int>(IComparisonExpr<Vector128<int>> expr)                                   | 0f 1f 44 00 00 48 b8 40 3d 5e c8 f7 7f 00 00 48 ff e0
29        | 7ff7c85e5800h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[64i]()                                                       | LiteralExpr<Vector128<long>> eval<long>(IComparisonExpr<Vector128<long>> expr)                                | 0f 1f 44 00 00 48 b8 20 3e 5e c8 f7 7f 00 00 48 ff e0
30        | 7ff7c85e5c30h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[8u]()                                                        | LiteralExpr<Vector256<byte>> eval<byte>(IComparisonExpr<Vector256<byte>> expr)                                | 0f 1f 44 00 00 48 b8 10 43 5e c8 f7 7f 00 00 48 ff e0
31        | 7ff7c85e5c60h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[8i]()                                                        | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IComparisonExpr<Vector256<sbyte>> expr)                             | 0f 1f 44 00 00 48 b8 20 44 5e c8 f7 7f 00 00 48 ff e0
32        | 7ff7c85e5c90h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[16u]()                                                       | LiteralExpr<Vector256<ushort>> eval<ushort>(IComparisonExpr<Vector256<ushort>> expr)                          | 0f 1f 44 00 00 48 b8 30 45 5e c8 f7 7f 00 00 48 ff e0
33        | 7ff7c85e5cc0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[16i]()                                                       | LiteralExpr<Vector256<short>> eval<short>(IComparisonExpr<Vector256<short>> expr)                             | 0f 1f 44 00 00 48 b8 50 4a 5e c8 f7 7f 00 00 48 ff e0
34        | 7ff7c85e5cf0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[32u]()                                                       | LiteralExpr<Vector256<uint>> eval<uint>(IComparisonExpr<Vector256<uint>> expr)                                | 0f 1f 44 00 00 48 b8 60 4b 5e c8 f7 7f 00 00 48 ff e0
35        | 7ff7c85e5d20h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[32i]()                                                       | LiteralExpr<Vector256<int>> eval<int>(IComparisonExpr<Vector256<int>> expr)                                   | 0f 1f 44 00 00 48 b8 70 4c 5e c8 f7 7f 00 00 48 ff e0
36        | 7ff7c85e5d50h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[64i]()                                                       | LiteralExpr<Vector256<long>> eval<long>(IComparisonExpr<Vector256<long>> expr)                                | 0f 1f 44 00 00 48 b8 80 4d 5e c8 f7 7f 00 00 48 ff e0
37        | 7ff7c85e5d80h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_cmp_pred_g[8u]()                                                            | bit eval<byte>(IComparisonPred<byte> expr)                                                                    | 0f 1f 44 00 00 48 b8 70 2c 5e c8 f7 7f 00 00 48 ff e0
38        | 7ff7c85e5db0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_cmp_pred_g[8i]()                                                            | bit eval<sbyte>(IComparisonPred<sbyte> expr)                                                                  | 0f 1f 44 00 00 48 b8 10 2d 5e c8 f7 7f 00 00 48 ff e0
39        | 7ff7c85e5de0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_cmp_pred_g[16u]()                                                           | bit eval<ushort>(IComparisonPred<ushort> expr)                                                                | 0f 1f 44 00 00 48 b8 b0 2d 5e c8 f7 7f 00 00 48 ff e0
40        | 7ff7c85e5e10h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_cmp_pred_g[16i]()                                                           | bit eval<short>(IComparisonPred<short> expr)                                                                  | 0f 1f 44 00 00 48 b8 50 2e 5e c8 f7 7f 00 00 48 ff e0
41        | 7ff7c85e5e40h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_cmp_pred_g[32u]()                                                           | bit eval<uint>(IComparisonPred<uint> expr)                                                                    | 0f 1f 44 00 00 48 b8 f0 2e 5e c8 f7 7f 00 00 48 ff e0
42        | 7ff7c85e5e70h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_cmp_pred_g[32i]()                                                           | bit eval<int>(IComparisonPred<int> expr)                                                                      | 0f 1f 44 00 00 48 b8 90 2f 5e c8 f7 7f 00 00 48 ff e0
43        | 7ff7c85e5ea0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_cmp_pred_g[64i]()                                                           | bit eval<long>(IComparisonPred<long> expr)                                                                    | 0f 1f 44 00 00 48 b8 30 30 5e c8 f7 7f 00 00 48 ff e0
44        | 7ff7c85e5ed0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_arith_expr_g[8u]()                                                          | LiteralExpr<byte> eval<byte>(IArithmeticExpr<byte> expr)                                                      | 0f 1f 44 00 00 48 b8 a0 5a 5e c8 f7 7f 00 00 48 ff e0
45        | 7ff7c85e5f00h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_arith_expr_g[8i]()                                                          | LiteralExpr<sbyte> eval<sbyte>(IArithmeticExpr<sbyte> expr)                                                   | 0f 1f 44 00 00 48 b8 f0 5a 5e c8 f7 7f 00 00 48 ff e0
46        | 7ff7c85e5f30h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_arith_expr_g[16u]()                                                         | LiteralExpr<ushort> eval<ushort>(IArithmeticExpr<ushort> expr)                                                | 0f 1f 44 00 00 48 b8 30 5b 5e c8 f7 7f 00 00 48 ff e0
47        | 7ff7c85e5f60h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_arith_expr_g[16i]()                                                         | LiteralExpr<short> eval<short>(IArithmeticExpr<short> expr)                                                   | 0f 1f 44 00 00 48 b8 70 5b 5e c8 f7 7f 00 00 48 ff e0
48        | 7ff7c85e5f90h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_arith_expr_g[32u]()                                                         | LiteralExpr<uint> eval<uint>(IArithmeticExpr<uint> expr)                                                      | 0f 1f 44 00 00 48 b8 b0 5b 5e c8 f7 7f 00 00 48 ff e0
49        | 7ff7c85e5fc0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_arith_expr_g[32i]()                                                         | LiteralExpr<int> eval<int>(IArithmeticExpr<int> expr)                                                         | 0f 1f 44 00 00 48 b8 f0 5b 5e c8 f7 7f 00 00 48 ff e0
50        | 7ff7c85e63f0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_arith_expr_g[64u]()                                                         | LiteralExpr<ulong> eval<ulong>(IArithmeticExpr<ulong> expr)                                                   | 0f 1f 44 00 00 48 b8 f8 5f 5e c8 f7 7f 00 00 48 ff e0
51        | 7ff7c85e6420h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_arith_expr_g[64i]()                                                         | LiteralExpr<long> eval<long>(IArithmeticExpr<long> expr)                                                      | 0f 1f 44 00 00 48 b8 38 60 5e c8 f7 7f 00 00 48 ff e0
52        | 7ff7c85e6450h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr128_g[8u]()                                                      | LiteralExpr<Vector128<byte>> eval<byte>(IExpr<Vector128<byte>> expr)                                          | 0f 1f 44 00 00 48 b8 78 32 5e c8 f7 7f 00 00 48 ff e0
53        | 7ff7c85e6480h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr128_g[8i]()                                                      | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IExpr<Vector128<sbyte>> expr)                                       | 0f 1f 44 00 00 48 b8 70 33 5e c8 f7 7f 00 00 48 ff e0
54        | 7ff7c85e64b0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr128_g[16u]()                                                     | LiteralExpr<Vector128<ushort>> eval<ushort>(IExpr<Vector128<ushort>> expr)                                    | 0f 1f 44 00 00 48 b8 58 34 5e c8 f7 7f 00 00 48 ff e0
55        | 7ff7c85e64e0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr128_g[16i]()                                                     | LiteralExpr<Vector128<short>> eval<short>(IExpr<Vector128<short>> expr)                                       | 0f 1f 44 00 00 48 b8 f0 37 5e c8 f7 7f 00 00 48 ff e0
56        | 7ff7c85e6510h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr128_g[32u]()                                                     | LiteralExpr<Vector128<uint>> eval<uint>(IExpr<Vector128<uint>> expr)                                          | 0f 1f 44 00 00 48 b8 d8 38 5e c8 f7 7f 00 00 48 ff e0
57        | 7ff7c85e6540h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr128_g[32i]()                                                     | LiteralExpr<Vector128<int>> eval<int>(IExpr<Vector128<int>> expr)                                             | 0f 1f 44 00 00 48 b8 c0 39 5e c8 f7 7f 00 00 48 ff e0
58        | 7ff7c85e6570h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr128_g[64u]()                                                     | LiteralExpr<Vector128<ulong>> eval<ulong>(IExpr<Vector128<ulong>> expr)                                       | 0f 1f 44 00 00 48 b8 d8 61 5e c8 f7 7f 00 00 48 ff e0
59        | 7ff7c85e65a0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr128_g[64i]()                                                     | LiteralExpr<Vector128<long>> eval<long>(IExpr<Vector128<long>> expr)                                          | 0f 1f 44 00 00 48 b8 a8 3a 5e c8 f7 7f 00 00 48 ff e0
60        | 7ff7c85e65d0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr256_g[8u]()                                                      | LiteralExpr<Vector256<byte>> eval<byte>(IExpr<Vector256<byte>> expr)                                          | 0f 1f 44 00 00 48 b8 68 40 5e c8 f7 7f 00 00 48 ff e0
61        | 7ff7c85e6600h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr256_g[8i]()                                                      | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IExpr<Vector256<sbyte>> expr)                                       | 0f 1f 44 00 00 48 b8 60 41 5e c8 f7 7f 00 00 48 ff e0
62        | 7ff7c85e6630h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr256_g[16u]()                                                     | LiteralExpr<Vector256<ushort>> eval<ushort>(IExpr<Vector256<ushort>> expr)                                    | 0f 1f 44 00 00 48 b8 48 42 5e c8 f7 7f 00 00 48 ff e0
63        | 7ff7c85e6660h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr256_g[16i]()                                                     | LiteralExpr<Vector256<short>> eval<short>(IExpr<Vector256<short>> expr)                                       | 0f 1f 44 00 00 48 b8 70 46 5e c8 f7 7f 00 00 48 ff e0
64        | 7ff7c85e6690h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr256_g[32u]()                                                     | LiteralExpr<Vector256<uint>> eval<uint>(IExpr<Vector256<uint>> expr)                                          | 0f 1f 44 00 00 48 b8 58 47 5e c8 f7 7f 00 00 48 ff e0
65        | 7ff7c85e66c0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr256_g[32i]()                                                     | LiteralExpr<Vector256<int>> eval<int>(IExpr<Vector256<int>> expr)                                             | 0f 1f 44 00 00 48 b8 40 48 5e c8 f7 7f 00 00 48 ff e0
66        | 7ff7c85e66f0h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr256_g[64u]()                                                     | LiteralExpr<Vector256<ulong>> eval<ulong>(IExpr<Vector256<ulong>> expr)                                       | 0f 1f 44 00 00 48 b8 58 63 5e c8 f7 7f 00 00 48 ff e0
67        | 7ff7c85e6720h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_vector_expr256_g[64i]()                                                     | LiteralExpr<Vector256<long>> eval<long>(IExpr<Vector256<long>> expr)                                          | 0f 1f 44 00 00 48 b8 28 49 5e c8 f7 7f 00 00 48 ff e0
68        | 7ff7c85e6b50h   | 86      | CTC_RET_Zx3         | hex://logix/LogicEngine?satisfied#satisfied_g[8u](8u,8u)                                                      | bit satisfied<byte>(ComparisonExpr<byte> expr, byte a, byte b)                                                | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 10 ea 70 c7 f7 7f 00 00 ba 02 00 00 00 e8 6d 02 c8 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 01 fc ff ff 48 8b ce e8 01 bc ff ff 0f b6 40 08 0f b6 c0 3c ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
69        | 7ff7c85e6bc0h   | 93      | CTC_RET_Zx3         | hex://logix/LogicEngine?satisfied#satisfied_g[8i](8i,8i)                                                      | bit satisfied<sbyte>(ComparisonExpr<sbyte> expr, sbyte a, sbyte b)                                            | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 70 c7 f7 7f 00 00 ba 02 00 00 00 e8 fd 01 c8 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 99 fc ff ff 48 8b ce e8 71 bc ff ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
70        | 7ff7c85e6c40h   | 93      | CTC_RET_Zx3         | hex://logix/LogicEngine?satisfied#satisfied_g[16u](16u,16u)                                                   | bit satisfied<ushort>(ComparisonExpr<ushort> expr, ushort a, ushort b)                                        | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 a0 79 12 c8 f7 7f 00 00 ba 02 00 00 00 e8 7d 01 c8 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 80 fc ff ff 48 8b ce e8 a0 bc ff ff 0f b7 40 08 0f b7 c0 0f b7 c0 3d ff ff 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
71        | 7ff7c85e6cc0h   | 96      | CTC_RET_SBB         | hex://logix/LogicEngine?satisfied#satisfied_g[16i](16i,16i)                                                   | bit satisfied<short>(ComparisonExpr<short> expr, short a, short b)                                            | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 20 0b 36 c8 f7 7f 00 00 ba 02 00 00 00 e8 fd 00 c8 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 68 fc ff ff 48 8b ce e8 d0 bc ff ff 48 0f bf 40 08 48 0f bf c0 48 0f bf c0 3d ff 7f 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
72        | 7ff7c85e6d40h   | 82      | CTC_RET_Zx3         | hex://logix/LogicEngine?satisfied#satisfied_g[32u](32u,32u)                                                   | bit satisfied<uint>(ComparisonExpr<uint> expr, uint a, uint b)                                                | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 38 69 12 c8 f7 7f 00 00 ba 02 00 00 00 e8 7d 00 c8 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 52 fc ff ff 48 8b ce e8 02 bd ff ff 8b 40 08 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
73        | 7ff7c85e6db0h   | 84      | CTC_RET_SBB         | hex://logix/LogicEngine?satisfied#satisfied_g[32i](32i,32i)                                                   | bit satisfied<int>(ComparisonExpr<int> expr, int a, int b)                                                    | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 48 5f 7d c7 f7 7f 00 00 ba 02 00 00 00 e8 0d 00 c8 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 4a fc ff ff 48 8b ce e8 32 bd ff ff 8b 40 08 3d ff ff ff 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
74        | 7ff7c85e6e20h   | 87      | CTC_RET_ZED_SBB     | hex://logix/LogicEngine?satisfied#satisfied_g[64u](64u,64u)                                                   | bit satisfied<ulong>(ComparisonExpr<ulong> expr, ulong a, ulong b)                                            | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 f8 af a8 c7 f7 7f 00 00 ba 02 00 00 00 e8 9c ff c7 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 3f fc ff ff 48 8b ce e8 6f fc ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
75        | 7ff7c85e6e90h   | 96      | CTC_RET_SBB         | hex://logix/LogicEngine?satisfied#satisfied_g[64i](64i,64i)                                                   | bit satisfied<long>(ComparisonExpr<long> expr, long a, long b)                                                | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 88 19 36 c8 f7 7f 00 00 ba 02 00 00 00 e8 2c ff c7 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 57 fc ff ff 48 8b ce e8 ef bc ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
76        | 7ff7c85e7310h   | 114     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[8u](v128x8u,v128x8u)                                            | bit satisfied<byte>(ComparisonExpr<Vector128<byte>> expr, Vector128<byte> a, Vector128<byte> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 58 55 a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 a9 fa c7 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 f2 fc ff ff 48 8b cb e8 72 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
77        | 7ff7c85e73b0h   | 114     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[8i](v128x8i,v128x8i)                                            | bit satisfied<sbyte>(ComparisonExpr<Vector128<sbyte>> expr, Vector128<sbyte> a, Vector128<sbyte> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 08 5d a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 09 fa c7 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 82 fd ff ff 48 8b cb e8 b2 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
78        | 7ff7c85e7450h   | 114     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[16u](v128x16u,v128x16u)                                         | bit satisfied<ushort>(ComparisonExpr<Vector128<ushort>> expr, Vector128<ushort> a, Vector128<ushort> b)       | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 48 61 a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 69 f9 c7 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 72 fd ff ff 48 8b cb e8 f2 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
79        | 7ff7c85e74f0h   | 114     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[16i](v128x16i,v128x16i)                                         | bit satisfied<short>(ComparisonExpr<Vector128<short>> expr, Vector128<short> a, Vector128<short> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 88 65 a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 c9 f8 c7 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 62 fd ff ff 48 8b cb e8 42 c6 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
80        | 7ff7c85e7990h   | 114     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[32u](v128x32u,v128x32u)                                         | bit satisfied<uint>(ComparisonExpr<Vector128<uint>> expr, Vector128<uint> a, Vector128<uint> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 c8 69 a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 29 f4 c7 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 82 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
81        | 7ff7c85e7a30h   | 114     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[32i](v128x32i,v128x32i)                                         | bit satisfied<int>(ComparisonExpr<Vector128<int>> expr, Vector128<int> a, Vector128<int> b)                   | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 08 6e a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 89 f3 c7 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 c2 fb ff ff 48 8b cb e8 c2 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
82        | 7ff7c85e7ad0h   | 115     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[64u](v128x64u,v128x64u)                                         | bit satisfied<ulong>(ComparisonExpr<Vector128<ulong>> expr, Vector128<ulong> a, Vector128<ulong> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 30 73 a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 e9 f2 c7 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 b2 fb ff ff 48 8b cb e8 32 fc ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
83        | 7ff7c85e7b70h   | 115     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[64i](v128x64i,v128x64i)                                         | bit satisfied<long>(ComparisonExpr<Vector128<long>> expr, Vector128<long> a, Vector128<long> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 30 78 a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 49 f2 c7 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 ea fb ff ff 48 8b cb e8 62 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3
84        | 7ff7c85e8010h   | 117     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[8u](v256x8u,v256x8u)                                            | bit satisfied<byte>(ComparisonExpr<Vector256<byte>> expr, Vector256<byte> a, Vector256<byte> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 10 82 a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 a9 ed c7 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 da f8 ff ff 48 8b cb e8 b2 c2 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3
85        | 7ff7c85e80b0h   | 117     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[8i](v256x8i,v256x8i)                                            | bit satisfied<sbyte>(ComparisonExpr<Vector256<sbyte>> expr, Vector256<sbyte> a, Vector256<sbyte> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 c0 89 a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 09 ed c7 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 f2 fb ff ff 48 8b cb e8 22 c3 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3
86        | 7ff7c85e8150h   | 117     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[16u](v256x16u,v256x16u)                                         | bit satisfied<ushort>(ComparisonExpr<Vector256<ushort>> expr, Vector256<ushort> a, Vector256<ushort> b)       | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 00 8e a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 69 ec c7 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 92 c3 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3
87        | 7ff7c85e81f0h   | 117     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[16i](v256x16i,v256x16i)                                         | bit satisfied<short>(ComparisonExpr<Vector256<short>> expr, Vector256<short> a, Vector256<short> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 40 92 a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 c9 eb c7 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 d2 fb ff ff 48 8b cb e8 12 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3
88        | 7ff7c85e8290h   | 117     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[32u](v256x32u,v256x32u)                                         | bit satisfied<uint>(ComparisonExpr<Vector256<uint>> expr, Vector256<uint> a, Vector256<uint> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 80 96 a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 29 eb c7 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 c2 fb ff ff 48 8b cb e8 82 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3
89        | 7ff7c85e8330h   | 117     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[32i](v256x32i,v256x32i)                                         | bit satisfied<int>(ComparisonExpr<Vector256<int>> expr, Vector256<int> a, Vector256<int> b)                   | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 c0 9a a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 89 ea c7 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 b2 fb ff ff 48 8b cb e8 f2 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3
90        | 7ff7c85e87d0h   | 118     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[64u](v256x64u,v256x64u)                                         | bit satisfied<ulong>(ComparisonExpr<Vector256<ulong>> expr, Vector256<ulong> a, Vector256<ulong> b)           | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 e8 9f a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 e9 e5 c7 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 a2 f7 ff ff 48 8b cb e8 e2 fb ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3
91        | 7ff7c85e8870h   | 118     | CTC_RET_INTR        | hex://logix/LogicEngine?satisfied#satisfied_g[64i](v256x64i,v256x64i)                                         | bit satisfied<long>(ComparisonExpr<Vector256<long>> expr, Vector256<long> a, Vector256<long> b)               | 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 e8 a4 a6 c8 f7 7f 00 00 ba 02 00 00 00 e8 49 e5 c7 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 9a fb ff ff 48 8b cb e8 c2 c4 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3
92        | 7ff7c85e8910h   | 18      | CTC_JMP_RAX         | hex://logix/LogicEngine?eval#eval_()                                                                          | bit eval(ILogicExpr expr)                                                                                     | 0f 1f 44 00 00 48 b8 98 23 db c7 f7 7f 00 00 48 ff e0
93        | 7ff7c85e8940h   | 550     | CTC_RET_Zx3         | hex://logix/LogicEngine?satisfied#satisfied_(1u,1u)                                                           | bit satisfied(ComparisonExpr expr, bit a, bit b)                                                              | 57 56 48 83 ec 28 48 8b f1 41 8b f8 8b 0e 48 8b 4e 18 83 79 08 00 76 48 48 8b 49 10 49 bb 80 0c 61 c7 f7 7f 00 00 39 09 ff 15 12 83 02 ff 48 8b 4e 18 83 79 08 01 76 28 48 8b 49 18 8b d7 49 bb 88 0c 61 c7 f7 7f 00 00 39 09 ff 15 f8 82 02 ff 48 8b ce e8 00 9a 7c ff 90 48 83 c4 28 5e 5f c3 e8 2b 74 da 5e cc 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 08 86 a5 c8 f7 7f 00 00 55 41 57 41 56 57 56 53 48 83 ec 48 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 4e 10 48 8b 5f 10 41 be b6 00 00 00 41 bf 01 00 00 00 8b 49 08 3b 4b 08 0f 85 cb 00 00 00 e8 70 a4 7c ff 48 8b c8 49 bb 90 0c 61 c7 f7 7f 00 00 39 09 ff 15 7b 82 02 ff 48 89 45 c8 48 8b 4d c8 49 bb 98 0c 61 c7 f7 7f 00 00 39 09 ff 15 69 82 02 ff 85 c0 74 51 48 8b 4d c8 49 bb a0 0c 61 c7 f7 7f 00 00 39 09 ff 15 57 82 02 ff 48 8b d0 48 8b ce e8 84 af 7c ff 48 8b ce e8 3c 99 7c ff 8b d8 48 8b cf e8 32 99 7c ff 3b d8 75 32 48 8b 4d c8 49 bb 98 0c 61 c7 f7 7f 00 00 39 09 ff 15 18 82 02 ff 85 c0 75 af 48 8b 4d c8 49 bb a8 0c 61 c7 f7 7f 00 00 39 09 ff 15 0e 82 02 ff eb 18 48 8b cc e8 7e 00 00 00 90 33 c0 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 8b f1 8b 7b 08 b9 19 02 00 00 48 ba 78 e6 aa c7 f7 7f 00 00 e8 d1 7a da 5e 48 8b d8 b9 25 02 00 00 48 ba 78 e6 aa c7 f7 7f 00 00 e8 ba 7a da 5e 4c 8b c8 4c 8d 45 d0 45 88 38 45 89 70 04 4c 8b c3 8b ce 8b d7 48 8b 45 d0 48 89 44 24 20 e8 d7 c3 15 ff 48 8b c8 e8 df 2d bf 5e cc 55 41 57 41 56 57 56 53 48 83 ec 38 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c8 00 74 16 48 8b 4d c8 49 bb a8 0c 61 c7 f7 7f 00 00 39 09 ff 15 50 81 02 ff 90 48 83 c4 38 5b 5e 5f 41 5e 41 5f 5d c3
94        | 7ff7c85e89c0h   | 422     | CTC_RET_Zx3         | hex://logix/LogicEngine?equal#equal_()                                                                        | bit equal(VariedLogicExpr a, VariedLogicExpr b)                                                               | 55 41 57 41 56 57 56 53 48 83 ec 48 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 4e 10 48 8b 5f 10 41 be b6 00 00 00 41 bf 01 00 00 00 8b 49 08 3b 4b 08 0f 85 cb 00 00 00 e8 70 a4 7c ff 48 8b c8 49 bb 90 0c 61 c7 f7 7f 00 00 39 09 ff 15 7b 82 02 ff 48 89 45 c8 48 8b 4d c8 49 bb 98 0c 61 c7 f7 7f 00 00 39 09 ff 15 69 82 02 ff 85 c0 74 51 48 8b 4d c8 49 bb a0 0c 61 c7 f7 7f 00 00 39 09 ff 15 57 82 02 ff 48 8b d0 48 8b ce e8 84 af 7c ff 48 8b ce e8 3c 99 7c ff 8b d8 48 8b cf e8 32 99 7c ff 3b d8 75 32 48 8b 4d c8 49 bb 98 0c 61 c7 f7 7f 00 00 39 09 ff 15 18 82 02 ff 85 c0 75 af 48 8b 4d c8 49 bb a8 0c 61 c7 f7 7f 00 00 39 09 ff 15 0e 82 02 ff eb 18 48 8b cc e8 7e 00 00 00 90 33 c0 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 8b f1 8b 7b 08 b9 19 02 00 00 48 ba 78 e6 aa c7 f7 7f 00 00 e8 d1 7a da 5e 48 8b d8 b9 25 02 00 00 48 ba 78 e6 aa c7 f7 7f 00 00 e8 ba 7a da 5e 4c 8b c8 4c 8d 45 d0 45 88 38 45 89 70 04 4c 8b c3 8b ce 8b d7 48 8b 45 d0 48 89 44 24 20 e8 d7 c3 15 ff 48 8b c8 e8 df 2d bf 5e cc 55 41 57 41 56 57 56 53 48 83 ec 38 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c8 00 74 16 48 8b 4d c8 49 bb a8 0c 61 c7 f7 7f 00 00 39 09 ff 15 50 81 02 ff 90 48 83 c4 38 5b 5e 5f 41 5e 41 5f 5d c3
