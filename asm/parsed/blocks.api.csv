Sequence  | Address         | Length  | TermCode            | Uri                                                                                                           | OpSig                                                                                                         | Data
0         | 7ff7c8222030h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n16,span8u)                                                      | Block16<byte> unsafeload<byte>(N16 w, Span<byte> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 24 3e 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
1         | 7ff7c82224a0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n16,span8i)                                                      | Block16<sbyte> unsafeload<sbyte>(N16 w, Span<sbyte> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 b4 39 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
2         | 7ff7c8222510h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n16,span16u)                                                    | Block16<ushort> unsafeload<ushort>(N16 w, Span<ushort> src)                                                   | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 44 39 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
3         | 7ff7c8222580h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n16,span16i)                                                    | Block16<short> unsafeload<short>(N16 w, Span<short> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 d4 38 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
4         | 7ff7c82229f0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n32,span8u)                                                      | Block32<byte> unsafeload<byte>(N32 w, Span<byte> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 64 34 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
5         | 7ff7c8222a60h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n32,span8i)                                                      | Block32<sbyte> unsafeload<sbyte>(N32 w, Span<sbyte> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 f4 33 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
6         | 7ff7c8222ad0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n32,span16u)                                                    | Block32<ushort> unsafeload<ushort>(N32 w, Span<ushort> src)                                                   | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 84 33 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
7         | 7ff7c8222b40h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n32,span16i)                                                    | Block32<short> unsafeload<short>(N32 w, Span<short> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 14 33 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
8         | 7ff7c8222bb0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32u](n32,span32u)                                                    | Block32<uint> unsafeload<uint>(N32 w, Span<uint> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 a4 32 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
9         | 7ff7c8222c20h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32i](n32,span32i)                                                    | Block32<int> unsafeload<int>(N32 w, Span<int> src)                                                            | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 34 32 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
10        | 7ff7c8223090h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32f](n32,span32f)                                                    | Block32<float> unsafeload<float>(N32 w, Span<float> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 c4 2d 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
11        | 7ff7c8223100h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n64,span8u)                                                      | Block64<byte> unsafeload<byte>(N64 w, Span<byte> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 54 2d 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
12        | 7ff7c8223170h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n64,span8i)                                                      | Block64<sbyte> unsafeload<sbyte>(N64 w, Span<sbyte> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 e4 2c 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
13        | 7ff7c82231e0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n64,span16u)                                                    | Block64<ushort> unsafeload<ushort>(N64 w, Span<ushort> src)                                                   | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 74 2c 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
14        | 7ff7c8223250h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n64,span16i)                                                    | Block64<short> unsafeload<short>(N64 w, Span<short> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 04 2c 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
15        | 7ff7c82232c0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32u](n64,span32u)                                                    | Block64<uint> unsafeload<uint>(N64 w, Span<uint> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 94 2b 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
16        | 7ff7c8223730h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32i](n64,span32i)                                                    | Block64<int> unsafeload<int>(N64 w, Span<int> src)                                                            | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 24 27 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
17        | 7ff7c82237a0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64u](n64,span64u)                                                    | Block64<ulong> unsafeload<ulong>(N64 w, Span<ulong> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 b4 26 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
18        | 7ff7c8223810h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64i](n64,span64i)                                                    | Block64<long> unsafeload<long>(N64 w, Span<long> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 44 26 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
19        | 7ff7c8223880h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32f](n64,span32f)                                                    | Block64<float> unsafeload<float>(N64 w, Span<float> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 d4 25 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
20        | 7ff7c8223cf0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64f](n64,span64f)                                                    | Block64<double> unsafeload<double>(N64 w, Span<double> src)                                                   | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 64 21 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
21        | 7ff7c8223d60h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n128,span8u)                                                     | Block128<byte> unsafeload<byte>(N128 w, Span<byte> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 f4 20 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
22        | 7ff7c8223dd0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n128,span8i)                                                     | Block128<sbyte> unsafeload<sbyte>(N128 w, Span<sbyte> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 84 20 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
23        | 7ff7c8224240h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n128,span16u)                                                   | Block128<ushort> unsafeload<ushort>(N128 w, Span<ushort> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 14 1c 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
24        | 7ff7c82242b0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n128,span16i)                                                   | Block128<short> unsafeload<short>(N128 w, Span<short> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 a4 1b 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
25        | 7ff7c8224320h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32u](n128,span32u)                                                   | Block128<uint> unsafeload<uint>(N128 w, Span<uint> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 34 1b 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
26        | 7ff7c8224390h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32i](n128,span32i)                                                   | Block128<int> unsafeload<int>(N128 w, Span<int> src)                                                          | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 c4 1a 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
27        | 7ff7c8224400h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64u](n128,span64u)                                                   | Block128<ulong> unsafeload<ulong>(N128 w, Span<ulong> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 54 1a 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
28        | 7ff7c8224470h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64i](n128,span64i)                                                   | Block128<long> unsafeload<long>(N128 w, Span<long> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 e4 19 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
29        | 7ff7c82248e0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32f](n128,span32f)                                                   | Block128<float> unsafeload<float>(N128 w, Span<float> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 74 15 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
30        | 7ff7c8224950h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64f](n128,span64f)                                                   | Block128<double> unsafeload<double>(N128 w, Span<double> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 04 15 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
31        | 7ff7c82249c0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n256,span8u)                                                     | Block256<byte> unsafeload<byte>(N256 w, Span<byte> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 94 14 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
32        | 7ff7c8224a30h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n256,span8i)                                                     | Block256<sbyte> unsafeload<sbyte>(N256 w, Span<sbyte> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 24 14 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
33        | 7ff7c8224aa0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n256,span16u)                                                   | Block256<ushort> unsafeload<ushort>(N256 w, Span<ushort> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 b4 13 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
34        | 7ff7c8224f10h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n256,span16i)                                                   | Block256<short> unsafeload<short>(N256 w, Span<short> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 44 0f 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
35        | 7ff7c8224f80h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32u](n256,span32u)                                                   | Block256<uint> unsafeload<uint>(N256 w, Span<uint> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 d4 0e 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
36        | 7ff7c8224ff0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32i](n256,span32i)                                                   | Block256<int> unsafeload<int>(N256 w, Span<int> src)                                                          | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 64 0e 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
37        | 7ff7c8225060h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64u](n256,span64u)                                                   | Block256<ulong> unsafeload<ulong>(N256 w, Span<ulong> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 f4 0d 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
38        | 7ff7c82250d0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64i](n256,span64i)                                                   | Block256<long> unsafeload<long>(N256 w, Span<long> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 84 0d 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
39        | 7ff7c8225140h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32f](n256,span32f)                                                   | Block256<float> unsafeload<float>(N256 w, Span<float> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 14 0d 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
40        | 7ff7c82251b0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64f](n256,span64f)                                                   | Block256<double> unsafeload<double>(N256 w, Span<double> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 a4 0c 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
41        | 7ff7c8225620h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n512,span8u)                                                     | Block512<byte> unsafeload<byte>(N512 w, Span<byte> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 34 08 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
42        | 7ff7c82256b0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n512,span8i)                                                     | Block512<sbyte> unsafeload<sbyte>(N512 w, Span<sbyte> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 a4 07 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
43        | 7ff7c8225720h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n512,span16u)                                                   | Block512<ushort> unsafeload<ushort>(N512 w, Span<ushort> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 34 07 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
44        | 7ff7c8225790h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n512,span16i)                                                   | Block512<short> unsafeload<short>(N512 w, Span<short> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 c4 06 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
45        | 7ff7c8225c00h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32u](n512,span32u)                                                   | Block512<uint> unsafeload<uint>(N512 w, Span<uint> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 54 02 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
46        | 7ff7c8225c70h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32i](n512,span32i)                                                   | Block512<int> unsafeload<int>(N512 w, Span<int> src)                                                          | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 e4 01 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
47        | 7ff7c8225ce0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64u](n512,span64u)                                                   | Block512<ulong> unsafeload<ulong>(N512 w, Span<ulong> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 74 01 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
48        | 7ff7c8225d50h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64i](n512,span64i)                                                   | Block512<long> unsafeload<long>(N512 w, Span<long> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 04 01 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
49        | 7ff7c8225dc0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32f](n512,span32f)                                                   | Block512<float> unsafeload<float>(N512 w, Span<float> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 94 00 04 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
50        | 7ff7c8226230h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64f](n512,span64f)                                                   | Block512<double> unsafeload<double>(N512 w, Span<double> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 24 fc 03 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
51        | 7ff7c82262a0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[8u](8u~in,b256x8u~in,32i,32i)                                                  | void write<byte>(in byte src, in Block256<byte> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 94 fd 03 5f 90 c3
52        | 7ff7c82262d0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[8i](8u~in,b256x8i~in,32i,32i)                                                  | void write<sbyte>(in byte src, in Block256<sbyte> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 64 fd 03 5f 90 c3
53        | 7ff7c8226300h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[16u](8u~in,b256x16u~in,32i,32i)                                                | void write<ushort>(in byte src, in Block256<ushort> dst, int offset, int count)                               | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 34 fd 03 5f 90 c3
54        | 7ff7c8226330h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[16i](8u~in,b256x16i~in,32i,32i)                                                | void write<short>(in byte src, in Block256<short> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 04 fd 03 5f 90 c3
55        | 7ff7c8226360h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32u](8u~in,b256x32u~in,32i,32i)                                                | void write<uint>(in byte src, in Block256<uint> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 d4 fc 03 5f 90 c3
56        | 7ff7c8226390h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32i](8u~in,b256x32i~in,32i,32i)                                                | void write<int>(in byte src, in Block256<int> dst, int offset, int count)                                     | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 a4 fc 03 5f 90 c3
57        | 7ff7c82263c0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64u](8u~in,b256x64u~in,32i,32i)                                                | void write<ulong>(in byte src, in Block256<ulong> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 74 fc 03 5f 90 c3
58        | 7ff7c82263f0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64i](8u~in,b256x64i~in,32i,32i)                                                | void write<long>(in byte src, in Block256<long> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 44 fc 03 5f 90 c3
59        | 7ff7c8226420h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32f](8u~in,b256x32f~in,32i,32i)                                                | void write<float>(in byte src, in Block256<float> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 14 fc 03 5f 90 c3
60        | 7ff7c8226450h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64f](8u~in,b256x64f~in,32i,32i)                                                | void write<double>(in byte src, in Block256<double> dst, int offset, int count)                               | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 e4 fb 03 5f 90 c3
61        | 7ff7c8226890h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[8u](8u~in,b512x8u~in,32i,32i)                                                  | void write<byte>(in byte src, in Block512<byte> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 a4 f7 03 5f 90 c3
62        | 7ff7c82268c0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[8i](8u~in,b512x8i~in,32i,32i)                                                  | void write<sbyte>(in byte src, in Block512<sbyte> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 74 f7 03 5f 90 c3
63        | 7ff7c82268f0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[16u](8u~in,b512x16u~in,32i,32i)                                                | void write<ushort>(in byte src, in Block512<ushort> dst, int offset, int count)                               | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 44 f7 03 5f 90 c3
64        | 7ff7c8226920h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[16i](8u~in,b512x16i~in,32i,32i)                                                | void write<short>(in byte src, in Block512<short> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 14 f7 03 5f 90 c3
65        | 7ff7c8226950h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32u](8u~in,b512x32u~in,32i,32i)                                                | void write<uint>(in byte src, in Block512<uint> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 e4 f6 03 5f 90 c3
66        | 7ff7c8226980h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32i](8u~in,b512x32i~in,32i,32i)                                                | void write<int>(in byte src, in Block512<int> dst, int offset, int count)                                     | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 b4 f6 03 5f 90 c3
67        | 7ff7c82269b0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64u](8u~in,b512x64u~in,32i,32i)                                                | void write<ulong>(in byte src, in Block512<ulong> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 84 f6 03 5f 90 c3
68        | 7ff7c82269e0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64i](8u~in,b512x64i~in,32i,32i)                                                | void write<long>(in byte src, in Block512<long> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 54 f6 03 5f 90 c3
69        | 7ff7c8226a10h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32f](8u~in,b512x32f~in,32i,32i)                                                | void write<float>(in byte src, in Block512<float> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 24 f6 03 5f 90 c3
70        | 7ff7c8226a40h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64f](8u~in,b512x64f~in,32i,32i)                                                | void write<double>(in byte src, in Block512<double> dst, int offset, int count)                               | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 f4 f5 03 5f 90 c3
71        | 7ff7c8226a70h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[8u]()                                                                    | int cellsize<byte>()                                                                                          | 0f 1f 44 00 00 b8 01 00 00 00 c3
72        | 7ff7c8226ea0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[8i]()                                                                    | int cellsize<sbyte>()                                                                                         | 0f 1f 44 00 00 b8 01 00 00 00 c3
73        | 7ff7c8226ec0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[16u]()                                                                   | int cellsize<ushort>()                                                                                        | 0f 1f 44 00 00 b8 02 00 00 00 c3
74        | 7ff7c8226ee0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[16i]()                                                                   | int cellsize<short>()                                                                                         | 0f 1f 44 00 00 b8 02 00 00 00 c3
75        | 7ff7c8226f00h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[32u]()                                                                   | int cellsize<uint>()                                                                                          | 0f 1f 44 00 00 b8 04 00 00 00 c3
76        | 7ff7c8226f20h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[32i]()                                                                   | int cellsize<int>()                                                                                           | 0f 1f 44 00 00 b8 04 00 00 00 c3
77        | 7ff7c8226f40h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[64u]()                                                                   | int cellsize<ulong>()                                                                                         | 0f 1f 44 00 00 b8 08 00 00 00 c3
78        | 7ff7c8226f60h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[64i]()                                                                   | int cellsize<long>()                                                                                          | 0f 1f 44 00 00 b8 08 00 00 00 c3
79        | 7ff7c8226f80h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[32f]()                                                                   | int cellsize<float>()                                                                                         | 0f 1f 44 00 00 b8 04 00 00 00 c3
80        | 7ff7c82273b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[64f]()                                                                   | int cellsize<double>()                                                                                        | 0f 1f 44 00 00 b8 08 00 00 00 c3
81        | 7ff7c82273d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[8u]()                                                                  | int cellwidth<byte>()                                                                                         | 0f 1f 44 00 00 b8 08 00 00 00 c3
82        | 7ff7c82273f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[8i]()                                                                  | int cellwidth<sbyte>()                                                                                        | 0f 1f 44 00 00 b8 08 00 00 00 c3
83        | 7ff7c8227410h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[16u]()                                                                 | int cellwidth<ushort>()                                                                                       | 0f 1f 44 00 00 b8 10 00 00 00 c3
84        | 7ff7c8227430h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[16i]()                                                                 | int cellwidth<short>()                                                                                        | 0f 1f 44 00 00 b8 10 00 00 00 c3
85        | 7ff7c8227450h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[32u]()                                                                 | int cellwidth<uint>()                                                                                         | 0f 1f 44 00 00 b8 20 00 00 00 c3
86        | 7ff7c8227470h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[32i]()                                                                 | int cellwidth<int>()                                                                                          | 0f 1f 44 00 00 b8 20 00 00 00 c3
87        | 7ff7c8227490h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[64u]()                                                                 | int cellwidth<ulong>()                                                                                        | 0f 1f 44 00 00 b8 40 00 00 00 c3
88        | 7ff7c82274b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[64i]()                                                                 | int cellwidth<long>()                                                                                         | 0f 1f 44 00 00 b8 40 00 00 00 c3
89        | 7ff7c82274d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[32f]()                                                                 | int cellwidth<float>()                                                                                        | 0f 1f 44 00 00 b8 20 00 00 00 c3
90        | 7ff7c82274f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[64f]()                                                                 | int cellwidth<double>()                                                                                       | 0f 1f 44 00 00 b8 40 00 00 00 c3
91        | 7ff7c8227510h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellcover#cellcover_g[8u](n8,32i)                                                            | int cellcover<byte>(N8 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b c2 c3
92        | 7ff7c8227530h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellcover#cellcover_g[8i](n8,32i)                                                            | int cellcover<sbyte>(N8 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c3
93        | 7ff7c8227550h   | 32      | CTC_RET_SBB         | hex://blocks/api?cellcover#cellcover_g[16u](n8,32i)                                                           | int cellcover<ushort>(N8 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
94        | 7ff7c8227580h   | 32      | CTC_RET_SBB         | hex://blocks/api?cellcover#cellcover_g[16i](n8,32i)                                                           | int cellcover<short>(N8 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
95        | 7ff7c82275b0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[32u](n8,32i)                                                           | int cellcover<uint>(N8 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
96        | 7ff7c82275f0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[32i](n8,32i)                                                           | int cellcover<int>(N8 n, int cellcount)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
97        | 7ff7c8227630h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[64u](n8,32i)                                                           | int cellcover<ulong>(N8 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
98        | 7ff7c8227670h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[64i](n8,32i)                                                           | int cellcover<long>(N8 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
99        | 7ff7c82276b0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[32f](n8,32i)                                                           | int cellcover<float>(N8 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
100       | 7ff7c82276f0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[64f](n8,32i)                                                           | int cellcover<double>(N8 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
101       | 7ff7c8227730h   | 32      | CTC_RET_SBB         | hex://blocks/api?cellcover#cellcover_g[8u](n16,32i)                                                           | int cellcover<byte>(N16 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
102       | 7ff7c8227760h   | 32      | CTC_RET_SBB         | hex://blocks/api?cellcover#cellcover_g[8i](n16,32i)                                                           | int cellcover<sbyte>(N16 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
103       | 7ff7c8227790h   | 30      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[16u](n16,32i)                                                          | int cellcover<ushort>(N16 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
104       | 7ff7c82277c0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[16i](n16,32i)                                                          | int cellcover<short>(N16 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
105       | 7ff7c82277f0h   | 41      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[32u](n16,32i)                                                          | int cellcover<uint>(N16 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
106       | 7ff7c8227830h   | 41      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[32i](n16,32i)                                                          | int cellcover<int>(N16 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
107       | 7ff7c8227870h   | 41      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[64u](n16,32i)                                                          | int cellcover<ulong>(N16 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
108       | 7ff7c82278b0h   | 41      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[64i](n16,32i)                                                          | int cellcover<long>(N16 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
109       | 7ff7c82278f0h   | 41      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[32f](n16,32i)                                                          | int cellcover<float>(N16 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
110       | 7ff7c8227930h   | 41      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[64f](n16,32i)                                                          | int cellcover<double>(N16 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
111       | 7ff7c8227970h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[8u](n32,32i)                                                           | int cellcover<byte>(N32 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
112       | 7ff7c82279b0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[8i](n32,32i)                                                           | int cellcover<sbyte>(N32 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
113       | 7ff7c82279f0h   | 32      | CTC_RET_SBB         | hex://blocks/api?cellcover#cellcover_g[16u](n32,32i)                                                          | int cellcover<ushort>(N32 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
114       | 7ff7c8227e30h   | 32      | CTC_RET_SBB         | hex://blocks/api?cellcover#cellcover_g[16i](n32,32i)                                                          | int cellcover<short>(N32 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
115       | 7ff7c8227e60h   | 30      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[32u](n32,32i)                                                          | int cellcover<uint>(N32 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
116       | 7ff7c8227e90h   | 30      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[32i](n32,32i)                                                          | int cellcover<int>(N32 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
117       | 7ff7c8227ec0h   | 41      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[64u](n32,32i)                                                          | int cellcover<ulong>(N32 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
118       | 7ff7c8227f00h   | 41      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[64i](n32,32i)                                                          | int cellcover<long>(N32 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
119       | 7ff7c8227f40h   | 30      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[32f](n32,32i)                                                          | int cellcover<float>(N32 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
120       | 7ff7c8227f70h   | 41      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[64f](n32,32i)                                                          | int cellcover<double>(N32 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
121       | 7ff7c8227fb0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[8u](n64,32i)                                                           | int cellcover<byte>(N64 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
122       | 7ff7c8227ff0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[8i](n64,32i)                                                           | int cellcover<sbyte>(N64 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
123       | 7ff7c8228030h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[16u](n64,32i)                                                          | int cellcover<ushort>(N64 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
124       | 7ff7c8228070h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[16i](n64,32i)                                                          | int cellcover<short>(N64 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
125       | 7ff7c82280b0h   | 32      | CTC_RET_SBB         | hex://blocks/api?cellcover#cellcover_g[32u](n64,32i)                                                          | int cellcover<uint>(N64 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
126       | 7ff7c82280e0h   | 32      | CTC_RET_SBB         | hex://blocks/api?cellcover#cellcover_g[32i](n64,32i)                                                          | int cellcover<int>(N64 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
127       | 7ff7c8228110h   | 30      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[64u](n64,32i)                                                          | int cellcover<ulong>(N64 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
128       | 7ff7c8228140h   | 30      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[64i](n64,32i)                                                          | int cellcover<long>(N64 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
129       | 7ff7c8228170h   | 32      | CTC_RET_SBB         | hex://blocks/api?cellcover#cellcover_g[32f](n64,32i)                                                          | int cellcover<float>(N64 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
130       | 7ff7c82281a0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[64f](n64,32i)                                                          | int cellcover<double>(N64 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
131       | 7ff7c82281d0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[8u](n128,32i)                                                          | int cellcover<byte>(N128 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
132       | 7ff7c8228210h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[8i](n128,32i)                                                          | int cellcover<sbyte>(N128 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
133       | 7ff7c8228250h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[16u](n128,32i)                                                         | int cellcover<ushort>(N128 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
134       | 7ff7c8228290h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[16i](n128,32i)                                                         | int cellcover<short>(N128 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
135       | 7ff7c82282d0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[32u](n128,32i)                                                         | int cellcover<uint>(N128 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
136       | 7ff7c8228310h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[32i](n128,32i)                                                         | int cellcover<int>(N128 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
137       | 7ff7c8228350h   | 32      | CTC_RET_SBB         | hex://blocks/api?cellcover#cellcover_g[64u](n128,32i)                                                         | int cellcover<ulong>(N128 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
138       | 7ff7c8228380h   | 32      | CTC_RET_SBB         | hex://blocks/api?cellcover#cellcover_g[64i](n128,32i)                                                         | int cellcover<long>(N128 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
139       | 7ff7c82283b0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[32f](n128,32i)                                                         | int cellcover<float>(N128 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
140       | 7ff7c82283f0h   | 32      | CTC_RET_SBB         | hex://blocks/api?cellcover#cellcover_g[64f](n128,32i)                                                         | int cellcover<double>(N128 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
141       | 7ff7c8228420h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[8u](n256,32i)                                                          | int cellcover<byte>(N256 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 c1 f8 05 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 74 03 ff c0 c3 c3
142       | 7ff7c8228460h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[8i](n256,32i)                                                          | int cellcover<sbyte>(N256 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 c1 f8 05 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 74 03 ff c0 c3 c3
143       | 7ff7c82284a0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[16u](n256,32i)                                                         | int cellcover<ushort>(N256 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
144       | 7ff7c82288e0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[16i](n256,32i)                                                         | int cellcover<short>(N256 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
145       | 7ff7c8228920h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[32u](n256,32i)                                                         | int cellcover<uint>(N256 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
146       | 7ff7c8228960h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[32i](n256,32i)                                                         | int cellcover<int>(N256 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
147       | 7ff7c82289a0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[64u](n256,32i)                                                         | int cellcover<ulong>(N256 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
148       | 7ff7c82289e0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[64i](n256,32i)                                                         | int cellcover<long>(N256 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
149       | 7ff7c8228a20h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[32f](n256,32i)                                                         | int cellcover<float>(N256 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
150       | 7ff7c8228a60h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[64f](n256,32i)                                                         | int cellcover<double>(N256 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
151       | 7ff7c8228aa0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[8u](n512,32i)                                                          | int cellcover<byte>(N512 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 3f 03 c2 c1 f8 06 8b ca c1 f9 1f 83 e1 3f 03 ca 83 e1 c0 2b d1 74 03 ff c0 c3 c3
152       | 7ff7c8228ae0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[8i](n512,32i)                                                          | int cellcover<sbyte>(N512 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 3f 03 c2 c1 f8 06 8b ca c1 f9 1f 83 e1 3f 03 ca 83 e1 c0 2b d1 74 03 ff c0 c3 c3
153       | 7ff7c8228b20h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[16u](n512,32i)                                                         | int cellcover<ushort>(N512 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 c1 f8 05 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 74 03 ff c0 c3 c3
154       | 7ff7c8228b60h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[16i](n512,32i)                                                         | int cellcover<short>(N512 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 c1 f8 05 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 74 03 ff c0 c3 c3
155       | 7ff7c8228ba0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[32u](n512,32i)                                                         | int cellcover<uint>(N512 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
156       | 7ff7c8228be0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[32i](n512,32i)                                                         | int cellcover<int>(N512 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
157       | 7ff7c8228c20h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[64u](n512,32i)                                                         | int cellcover<ulong>(N512 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
158       | 7ff7c8228c60h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[64i](n512,32i)                                                         | int cellcover<long>(N512 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
159       | 7ff7c8228ca0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[32f](n512,32i)                                                         | int cellcover<float>(N512 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
160       | 7ff7c8228ce0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[64f](n512,32i)                                                         | int cellcover<double>(N512 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
161       | 7ff7c82293e0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[8u](n8,8u)                                                                   | int length<byte>(N8 w, byte t)                                                                                | 0f 1f 44 00 00 b8 01 00 00 00 c3
162       | 7ff7c8229400h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[8i](n8,8i)                                                                   | int length<sbyte>(N8 w, sbyte t)                                                                              | 0f 1f 44 00 00 b8 01 00 00 00 c3
163       | 7ff7c8229420h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[8u](n16,8u)                                                                  | int length<byte>(N16 w, byte t)                                                                               | 0f 1f 44 00 00 b8 02 00 00 00 c3
164       | 7ff7c8229440h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[8i](n16,8i)                                                                  | int length<sbyte>(N16 w, sbyte t)                                                                             | 0f 1f 44 00 00 b8 02 00 00 00 c3
165       | 7ff7c8229460h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[16u](n16,16u)                                                                | int length<ushort>(N16 w, ushort t)                                                                           | 0f 1f 44 00 00 b8 01 00 00 00 c3
166       | 7ff7c8229480h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[16i](n16,16i)                                                                | int length<short>(N16 w, short t)                                                                             | 0f 1f 44 00 00 b8 01 00 00 00 c3
167       | 7ff7c82294a0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[8u](n32,8u)                                                                  | int length<byte>(N32 w, byte t)                                                                               | 0f 1f 44 00 00 b8 04 00 00 00 c3
168       | 7ff7c82294c0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[8i](n32,8i)                                                                  | int length<sbyte>(N32 w, sbyte t)                                                                             | 0f 1f 44 00 00 b8 04 00 00 00 c3
169       | 7ff7c82294e0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[16u](n32,16u)                                                                | int length<ushort>(N32 w, ushort t)                                                                           | 0f 1f 44 00 00 b8 02 00 00 00 c3
170       | 7ff7c8229500h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[16i](n32,16i)                                                                | int length<short>(N32 w, short t)                                                                             | 0f 1f 44 00 00 b8 02 00 00 00 c3
171       | 7ff7c8229520h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32u](n32,32u)                                                                | int length<uint>(N32 w, uint t)                                                                               | 0f 1f 44 00 00 b8 01 00 00 00 c3
172       | 7ff7c8229540h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32i](n32,32i)                                                                | int length<int>(N32 w, int t)                                                                                 | 0f 1f 44 00 00 b8 01 00 00 00 c3
173       | 7ff7c8229560h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32f](n32,32f)                                                                | int length<float>(N32 w, float t)                                                                             | 0f 1f 44 00 00 b8 01 00 00 00 c3
174       | 7ff7c8229580h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[8u](n64,8u)                                                                  | int length<byte>(N64 w, byte t)                                                                               | 0f 1f 44 00 00 b8 08 00 00 00 c3
175       | 7ff7c82295a0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[8i](n64,8i)                                                                  | int length<sbyte>(N64 w, sbyte t)                                                                             | 0f 1f 44 00 00 b8 08 00 00 00 c3
176       | 7ff7c82295c0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[16u](n64,16u)                                                                | int length<ushort>(N64 w, ushort t)                                                                           | 0f 1f 44 00 00 b8 04 00 00 00 c3
177       | 7ff7c82295e0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[16i](n64,16i)                                                                | int length<short>(N64 w, short t)                                                                             | 0f 1f 44 00 00 b8 04 00 00 00 c3
178       | 7ff7c8229600h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32u](n64,32u)                                                                | int length<uint>(N64 w, uint t)                                                                               | 0f 1f 44 00 00 b8 02 00 00 00 c3
179       | 7ff7c8229620h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32i](n64,32i)                                                                | int length<int>(N64 w, int t)                                                                                 | 0f 1f 44 00 00 b8 02 00 00 00 c3
180       | 7ff7c8229640h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[64u](n64,64u)                                                                | int length<ulong>(N64 w, ulong t)                                                                             | 0f 1f 44 00 00 b8 01 00 00 00 c3
181       | 7ff7c8229660h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[64i](n64,64i)                                                                | int length<long>(N64 w, long t)                                                                               | 0f 1f 44 00 00 b8 01 00 00 00 c3
182       | 7ff7c8229680h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32f](n64,32f)                                                                | int length<float>(N64 w, float t)                                                                             | 0f 1f 44 00 00 b8 02 00 00 00 c3
183       | 7ff7c82296a0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[64f](n64,64f)                                                                | int length<double>(N64 w, double t)                                                                           | 0f 1f 44 00 00 b8 01 00 00 00 c3
184       | 7ff7c82296c0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[8u](n128,8u)                                                                 | int length<byte>(N128 w, byte t)                                                                              | 0f 1f 44 00 00 b8 10 00 00 00 c3
185       | 7ff7c82296e0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[8i](n128,8i)                                                                 | int length<sbyte>(N128 w, sbyte t)                                                                            | 0f 1f 44 00 00 b8 10 00 00 00 c3
186       | 7ff7c8229700h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[16u](n128,16u)                                                               | int length<ushort>(N128 w, ushort t)                                                                          | 0f 1f 44 00 00 b8 08 00 00 00 c3
187       | 7ff7c8229720h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[16i](n128,16i)                                                               | int length<short>(N128 w, short t)                                                                            | 0f 1f 44 00 00 b8 08 00 00 00 c3
188       | 7ff7c8229740h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32u](n128,32u)                                                               | int length<uint>(N128 w, uint t)                                                                              | 0f 1f 44 00 00 b8 04 00 00 00 c3
189       | 7ff7c8229760h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32i](n128,32i)                                                               | int length<int>(N128 w, int t)                                                                                | 0f 1f 44 00 00 b8 04 00 00 00 c3
190       | 7ff7c8229780h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[64u](n128,64u)                                                               | int length<ulong>(N128 w, ulong t)                                                                            | 0f 1f 44 00 00 b8 02 00 00 00 c3
191       | 7ff7c82297a0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[64i](n128,64i)                                                               | int length<long>(N128 w, long t)                                                                              | 0f 1f 44 00 00 b8 02 00 00 00 c3
192       | 7ff7c82297c0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32f](n128,32f)                                                               | int length<float>(N128 w, float t)                                                                            | 0f 1f 44 00 00 b8 04 00 00 00 c3
193       | 7ff7c82297e0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[64f](n128,64f)                                                               | int length<double>(N128 w, double t)                                                                          | 0f 1f 44 00 00 b8 02 00 00 00 c3
194       | 7ff7c8229800h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[8u](n256,8u)                                                                 | int length<byte>(N256 w, byte t)                                                                              | 0f 1f 44 00 00 b8 20 00 00 00 c3
195       | 7ff7c8229820h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[8i](n256,8i)                                                                 | int length<sbyte>(N256 w, sbyte t)                                                                            | 0f 1f 44 00 00 b8 20 00 00 00 c3
196       | 7ff7c8229840h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[16u](n256,16u)                                                               | int length<ushort>(N256 w, ushort t)                                                                          | 0f 1f 44 00 00 b8 10 00 00 00 c3
197       | 7ff7c8229860h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[16i](n256,16i)                                                               | int length<short>(N256 w, short t)                                                                            | 0f 1f 44 00 00 b8 10 00 00 00 c3
198       | 7ff7c8229880h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32u](n256,32u)                                                               | int length<uint>(N256 w, uint t)                                                                              | 0f 1f 44 00 00 b8 08 00 00 00 c3
199       | 7ff7c82298a0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32i](n256,32i)                                                               | int length<int>(N256 w, int t)                                                                                | 0f 1f 44 00 00 b8 08 00 00 00 c3
200       | 7ff7c82298c0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[64u](n256,64u)                                                               | int length<ulong>(N256 w, ulong t)                                                                            | 0f 1f 44 00 00 b8 04 00 00 00 c3
201       | 7ff7c82298e0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[64i](n256,64i)                                                               | int length<long>(N256 w, long t)                                                                              | 0f 1f 44 00 00 b8 04 00 00 00 c3
202       | 7ff7c8229900h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32f](n256,32f)                                                               | int length<float>(N256 w, float t)                                                                            | 0f 1f 44 00 00 b8 08 00 00 00 c3
203       | 7ff7c8229920h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[64f](n256,64f)                                                               | int length<double>(N256 w, double t)                                                                          | 0f 1f 44 00 00 b8 04 00 00 00 c3
204       | 7ff7c8229940h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[8u](n512,8u)                                                                 | int length<byte>(N512 w, byte t)                                                                              | 0f 1f 44 00 00 b8 40 00 00 00 c3
205       | 7ff7c8229960h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[8i](n512,8i)                                                                 | int length<sbyte>(N512 w, sbyte t)                                                                            | 0f 1f 44 00 00 b8 40 00 00 00 c3
206       | 7ff7c8229980h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[16u](n512,16u)                                                               | int length<ushort>(N512 w, ushort t)                                                                          | 0f 1f 44 00 00 b8 20 00 00 00 c3
207       | 7ff7c82299a0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[16i](n512,16i)                                                               | int length<short>(N512 w, short t)                                                                            | 0f 1f 44 00 00 b8 20 00 00 00 c3
208       | 7ff7c82299c0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32u](n512,32u)                                                               | int length<uint>(N512 w, uint t)                                                                              | 0f 1f 44 00 00 b8 10 00 00 00 c3
209       | 7ff7c82299e0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32i](n512,32i)                                                               | int length<int>(N512 w, int t)                                                                                | 0f 1f 44 00 00 b8 10 00 00 00 c3
210       | 7ff7c8229a00h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[64u](n512,64u)                                                               | int length<ulong>(N512 w, ulong t)                                                                            | 0f 1f 44 00 00 b8 08 00 00 00 c3
211       | 7ff7c8229a20h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[64i](n512,64i)                                                               | int length<long>(N512 w, long t)                                                                              | 0f 1f 44 00 00 b8 08 00 00 00 c3
212       | 7ff7c8229a40h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32f](n512,32f)                                                               | int length<float>(N512 w, float t)                                                                            | 0f 1f 44 00 00 b8 10 00 00 00 c3
213       | 7ff7c8229a60h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[64f](n512,64f)                                                               | int length<double>(N512 w, double t)                                                                          | 0f 1f 44 00 00 b8 08 00 00 00 c3
214       | 7ff7c8229a80h   | 218     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n16,span8u,32i)                                                              | Block16<byte> load<byte>(N16 w, Span<byte> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 9b c3 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 1b 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 5c ab 51 ff cc e8 ae af 51 ff
215       | 7ff7c8229f90h   | 218     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n16,span8i,32i)                                                              | Block16<sbyte> load<sbyte>(N16 w, Span<sbyte> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 8b be 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 1b 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 4c a6 51 ff cc e8 9e aa 51 ff
216       | 7ff7c822a090h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n16,span16u,32i)                                                            | Block16<ushort> load<ushort>(N16 w, Span<ushort> src, int offset)                                             | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 8a bd 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 1b 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 4b a5 51 ff cc e8 9d a9 51 ff
217       | 7ff7c822a190h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n16,span16i,32i)                                                            | Block16<short> load<short>(N16 w, Span<short> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 8a bc 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 1b 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 4b a4 51 ff cc e8 9d a8 51 ff
218       | 7ff7c822a290h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n32,span8u,32i)                                                              | Block32<byte> load<byte>(N32 w, Span<byte> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 88 bb 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 49 a3 51 ff cc e8 9b a7 51 ff
219       | 7ff7c822a390h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n32,span8i,32i)                                                              | Block32<sbyte> load<sbyte>(N32 w, Span<sbyte> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 88 ba 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 49 a2 51 ff cc e8 9b a6 51 ff
220       | 7ff7c822a490h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n32,span16u,32i)                                                            | Block32<ushort> load<ushort>(N32 w, Span<ushort> src, int offset)                                             | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 8d b9 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 4e a1 51 ff cc e8 a0 a5 51 ff
221       | 7ff7c822a590h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n32,span16i,32i)                                                            | Block32<short> load<short>(N32 w, Span<short> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 8d b8 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 4e a0 51 ff cc e8 a0 a4 51 ff
222       | 7ff7c822a690h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32u](n32,span32u,32i)                                                            | Block32<uint> load<uint>(N32 w, Span<uint> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 8a b7 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 4b 9f 51 ff cc e8 9d a3 51 ff
223       | 7ff7c822a790h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32i](n32,span32i,32i)                                                            | Block32<int> load<int>(N32 w, Span<int> src, int offset)                                                      | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 8a b6 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 4b 9e 51 ff cc e8 9d a2 51 ff
224       | 7ff7c822a890h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32f](n32,span32f,32i)                                                            | Block32<float> load<float>(N32 w, Span<float> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 8a b5 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 4b 9d 51 ff cc e8 9d a1 51 ff
225       | 7ff7c822ada0h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n64,span8u,32i)                                                              | Block64<byte> load<byte>(N64 w, Span<byte> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 78 b0 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 39 98 51 ff cc e8 8b 9c 51 ff
226       | 7ff7c822aea0h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n64,span8i,32i)                                                              | Block64<sbyte> load<sbyte>(N64 w, Span<sbyte> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 78 af 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 39 97 51 ff cc e8 8b 9b 51 ff
227       | 7ff7c822afa0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n64,span16u,32i)                                                            | Block64<ushort> load<ushort>(N64 w, Span<ushort> src, int offset)                                             | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 7a ae 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 3b 96 51 ff cc e8 8d 9a 51 ff
228       | 7ff7c822b0a0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n64,span16i,32i)                                                            | Block64<short> load<short>(N64 w, Span<short> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 7a ad 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 3b 95 51 ff cc e8 8d 99 51 ff
229       | 7ff7c822b1a0h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[32u](n64,span32u,32i)                                                            | Block64<uint> load<uint>(N64 w, Span<uint> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 7d ac 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 3e 94 51 ff cc e8 90 98 51 ff
230       | 7ff7c822b2a0h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[32i](n64,span32i,32i)                                                            | Block64<int> load<int>(N64 w, Span<int> src, int offset)                                                      | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 7d ab 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 3e 93 51 ff cc e8 90 97 51 ff
231       | 7ff7c822b3a0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64u](n64,span64u,32i)                                                            | Block64<ulong> load<ulong>(N64 w, Span<ulong> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 7a aa 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 3b 92 51 ff cc e8 8d 96 51 ff
232       | 7ff7c822b4a0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64i](n64,span64i,32i)                                                            | Block64<long> load<long>(N64 w, Span<long> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 7a a9 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 3b 91 51 ff cc e8 8d 95 51 ff
233       | 7ff7c822b5a0h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[32f](n64,span32f,32i)                                                            | Block64<float> load<float>(N64 w, Span<float> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 7d a8 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 3e 90 51 ff cc e8 90 94 51 ff
234       | 7ff7c822b6a0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64f](n64,span64f,32i)                                                            | Block64<double> load<double>(N64 w, Span<double> src, int offset)                                             | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 7a a7 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 3b 8f 51 ff cc e8 8d 93 51 ff
235       | 7ff7c822bbb0h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n128,span8u,32i)                                                             | Block128<byte> load<byte>(N128 w, Span<byte> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 68 a2 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 29 8a 51 ff cc e8 7b 8e 51 ff
236       | 7ff7c822bcb0h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n128,span8i,32i)                                                             | Block128<sbyte> load<sbyte>(N128 w, Span<sbyte> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 68 a1 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 29 89 51 ff cc e8 7b 8d 51 ff
237       | 7ff7c822bdb0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n128,span16u,32i)                                                           | Block128<ushort> load<ushort>(N128 w, Span<ushort> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 6a a0 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 2b 88 51 ff cc e8 7d 8c 51 ff
238       | 7ff7c822beb0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n128,span16i,32i)                                                           | Block128<short> load<short>(N128 w, Span<short> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 6a 9f 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 2b 87 51 ff cc e8 7d 8b 51 ff
239       | 7ff7c822bfb0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32u](n128,span32u,32i)                                                           | Block128<uint> load<uint>(N128 w, Span<uint> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 6a 9e 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 2b 86 51 ff cc e8 7d 8a 51 ff
240       | 7ff7c822c0b0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32i](n128,span32i,32i)                                                           | Block128<int> load<int>(N128 w, Span<int> src, int offset)                                                    | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 6a 9d 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 2b 85 51 ff cc e8 7d 89 51 ff
241       | 7ff7c822c1b0h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[64u](n128,span64u,32i)                                                           | Block128<ulong> load<ulong>(N128 w, Span<ulong> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 6d 9c 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 2e 84 51 ff cc e8 80 88 51 ff
242       | 7ff7c822c2b0h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[64i](n128,span64i,32i)                                                           | Block128<long> load<long>(N128 w, Span<long> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 6d 9b 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 2e 83 51 ff cc e8 80 87 51 ff
243       | 7ff7c822c3b0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32f](n128,span32f,32i)                                                           | Block128<float> load<float>(N128 w, Span<float> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 6a 9a 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 2b 82 51 ff cc e8 7d 86 51 ff
244       | 7ff7c822c4b0h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[64f](n128,span64f,32i)                                                           | Block128<double> load<double>(N128 w, Span<double> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 6d 99 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 2e 81 51 ff cc e8 80 85 51 ff
245       | 7ff7c822c5b0h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n256,span8u,32i)                                                             | Block256<byte> load<byte>(N256 w, Span<byte> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 68 98 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 29 80 51 ff cc e8 7b 84 51 ff
246       | 7ff7c822c6b0h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n256,span8i,32i)                                                             | Block256<sbyte> load<sbyte>(N256 w, Span<sbyte> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 68 97 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 29 7f 51 ff cc e8 7b 83 51 ff
247       | 7ff7c822cbc0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n256,span16u,32i)                                                           | Block256<ushort> load<ushort>(N256 w, Span<ushort> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 5a 92 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 1b 7a 51 ff cc e8 6d 7e 51 ff
248       | 7ff7c822ccc0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n256,span16i,32i)                                                           | Block256<short> load<short>(N256 w, Span<short> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 5a 91 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 1b 79 51 ff cc e8 6d 7d 51 ff
249       | 7ff7c822cdc0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32u](n256,span32u,32i)                                                           | Block256<uint> load<uint>(N256 w, Span<uint> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 5a 90 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 1b 78 51 ff cc e8 6d 7c 51 ff
250       | 7ff7c822cec0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32i](n256,span32i,32i)                                                           | Block256<int> load<int>(N256 w, Span<int> src, int offset)                                                    | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 5a 8f 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 1b 77 51 ff cc e8 6d 7b 51 ff
251       | 7ff7c822cfc0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64u](n256,span64u,32i)                                                           | Block256<ulong> load<ulong>(N256 w, Span<ulong> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 5a 8e 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 1b 76 51 ff cc e8 6d 7a 51 ff
252       | 7ff7c822d0c0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64i](n256,span64i,32i)                                                           | Block256<long> load<long>(N256 w, Span<long> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 5a 8d 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 1b 75 51 ff cc e8 6d 79 51 ff
253       | 7ff7c822d1c0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32f](n256,span32f,32i)                                                           | Block256<float> load<float>(N256 w, Span<float> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 5a 8c 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 1b 74 51 ff cc e8 6d 78 51 ff
254       | 7ff7c822d2c0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64f](n256,span64f,32i)                                                           | Block256<double> load<double>(N256 w, Span<double> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 5a 8b 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 1b 73 51 ff cc e8 6d 77 51 ff
255       | 7ff7c822d3c0h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n512,span8u,32i)                                                             | Block512<byte> load<byte>(N512 w, Span<byte> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 3f 03 ca 83 e1 c0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 58 8a 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 19 72 51 ff cc e8 6b 76 51 ff
256       | 7ff7c822d4c0h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n512,span8i,32i)                                                             | Block512<sbyte> load<sbyte>(N512 w, Span<sbyte> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 3f 03 ca 83 e1 c0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 58 89 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 19 71 51 ff cc e8 6b 75 51 ff
257       | 7ff7c822d5c0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n512,span16u,32i)                                                           | Block512<ushort> load<ushort>(N512 w, Span<ushort> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 5a 88 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 1b 70 51 ff cc e8 6d 74 51 ff
258       | 7ff7c822d6c0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n512,span16i,32i)                                                           | Block512<short> load<short>(N512 w, Span<short> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 5a 87 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 1b 6f 51 ff cc e8 6d 73 51 ff
259       | 7ff7c822d7c0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32u](n512,span32u,32i)                                                           | Block512<uint> load<uint>(N512 w, Span<uint> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 5a 86 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 1b 6e 51 ff cc e8 6d 72 51 ff
260       | 7ff7c822d8c0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32i](n512,span32i,32i)                                                           | Block512<int> load<int>(N512 w, Span<int> src, int offset)                                                    | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 5a 85 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 1b 6d 51 ff cc e8 6d 71 51 ff
261       | 7ff7c822d9c0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64u](n512,span64u,32i)                                                           | Block512<ulong> load<ulong>(N512 w, Span<ulong> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 5a 84 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 1b 6c 51 ff cc e8 6d 70 51 ff
262       | 7ff7c822dac0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64i](n512,span64i,32i)                                                           | Block512<long> load<long>(N512 w, Span<long> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 5a 83 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 1b 6b 51 ff cc e8 6d 6f 51 ff
263       | 7ff7c822dbc0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32f](n512,span32f,32i)                                                           | Block512<float> load<float>(N512 w, Span<float> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 5a 82 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 1b 6a 51 ff cc e8 6d 6e 51 ff
264       | 7ff7c822e0d0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64f](n512,span64f,32i)                                                           | Block512<double> load<double>(N512 w, Span<double> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 4a 7d 03 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 90 7a 01 90 b3 02 00 00 48 8b 09 48 b8 98 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 0b 65 51 ff cc e8 5d 69 51 ff
265       | 7ff7c822e1d0h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n16)                                                                       | Block16<byte> parts<byte>(N16 w, Byte[] src)                                                                  | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 6d 7c 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 1a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 30 64 51 ff
266       | 7ff7c822e2a0h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n16)                                                                       | Block16<sbyte> parts<sbyte>(N16 w, SByte[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 9d 7b 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 1a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 60 63 51 ff
267       | 7ff7c822e370h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n16)                                                                      | Block16<ushort> parts<ushort>(N16 w, UInt16[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ca 7a 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 1a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 8d 62 51 ff
268       | 7ff7c822e850h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n16)                                                                      | Block16<short> parts<short>(N16 w, Int16[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ea 75 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 1a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 ad 5d 51 ff
269       | 7ff7c822e920h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n32)                                                                       | Block32<byte> parts<byte>(N32 w, Byte[] src)                                                                  | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 1a 75 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 dd 5c 51 ff
270       | 7ff7c822e9f0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n32)                                                                       | Block32<sbyte> parts<sbyte>(N32 w, SByte[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 4a 74 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 0d 5c 51 ff
271       | 7ff7c822eac0h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n32)                                                                      | Block32<ushort> parts<ushort>(N32 w, UInt16[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 7d 73 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 40 5b 51 ff
272       | 7ff7c822eb90h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n32)                                                                      | Block32<short> parts<short>(N32 w, Int16[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ad 72 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 70 5a 51 ff
273       | 7ff7c822ec60h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32u](n32)                                                                      | Block32<uint> parts<uint>(N32 w, UInt32[] src)                                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 da 71 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 9d 59 51 ff
274       | 7ff7c822f140h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32i](n32)                                                                      | Block32<int> parts<int>(N32 w, Int32[] src)                                                                   | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 fa 6c 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 bd 54 51 ff
275       | 7ff7c822f210h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32f](n32)                                                                      | Block32<float> parts<float>(N32 w, Single[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 2a 6c 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 ed 53 51 ff
276       | 7ff7c822f2e0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n64)                                                                       | Block64<byte> parts<byte>(N64 w, Byte[] src)                                                                  | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 5a 6b 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 1d 53 51 ff
277       | 7ff7c822f3b0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n64)                                                                       | Block64<sbyte> parts<sbyte>(N64 w, SByte[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 8a 6a 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 4d 52 51 ff
278       | 7ff7c822f480h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n64)                                                                      | Block64<ushort> parts<ushort>(N64 w, UInt16[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ba 69 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 7d 51 51 ff
279       | 7ff7c822f550h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n64)                                                                      | Block64<short> parts<short>(N64 w, Int16[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ea 68 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 ad 50 51 ff
280       | 7ff7c822f620h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32u](n64)                                                                      | Block64<uint> parts<uint>(N64 w, UInt32[] src)                                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 1d 68 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 e0 4f 51 ff
281       | 7ff7c822f6f0h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32i](n64)                                                                      | Block64<int> parts<int>(N64 w, Int32[] src)                                                                   | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 4d 67 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 10 4f 51 ff
282       | 7ff7c822f7c0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64u](n64)                                                                      | Block64<ulong> parts<ulong>(N64 w, UInt64[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 7a 66 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 3d 4e 51 ff
283       | 7ff7c822fca0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64i](n64)                                                                      | Block64<long> parts<long>(N64 w, Int64[] src)                                                                 | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 9a 61 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 5d 49 51 ff
284       | 7ff7c822fd70h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32f](n64)                                                                      | Block64<float> parts<float>(N64 w, Single[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 cd 60 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 90 48 51 ff
285       | 7ff7c822fe40h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64f](n64)                                                                      | Block64<double> parts<double>(N64 w, Double[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 fa 5f 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 bd 47 51 ff
286       | 7ff7c8230320h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n128)                                                                      | Block128<byte> parts<byte>(N128 w, Byte[] src)                                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 1a 5b 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 dd 42 51 ff
287       | 7ff7c82303f0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n128)                                                                      | Block128<sbyte> parts<sbyte>(N128 w, SByte[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 4a 5a 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 0d 42 51 ff
288       | 7ff7c82304c0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n128)                                                                     | Block128<ushort> parts<ushort>(N128 w, UInt16[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 7a 59 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 3d 41 51 ff
289       | 7ff7c8230590h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n128)                                                                     | Block128<short> parts<short>(N128 w, Int16[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 aa 58 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 6d 40 51 ff
290       | 7ff7c8230660h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32u](n128)                                                                     | Block128<uint> parts<uint>(N128 w, UInt32[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 da 57 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 9d 3f 51 ff
291       | 7ff7c8230730h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32i](n128)                                                                     | Block128<int> parts<int>(N128 w, Int32[] src)                                                                 | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 0a 57 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 cd 3e 51 ff
292       | 7ff7c8230800h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64u](n128)                                                                     | Block128<ulong> parts<ulong>(N128 w, UInt64[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 3d 56 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 00 3e 51 ff
293       | 7ff7c82308d0h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64i](n128)                                                                     | Block128<long> parts<long>(N128 w, Int64[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 6d 55 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 30 3d 51 ff
294       | 7ff7c82309a0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32f](n128)                                                                     | Block128<float> parts<float>(N128 w, Single[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 9a 54 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 5d 3c 51 ff
295       | 7ff7c8230a70h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64f](n128)                                                                     | Block128<double> parts<double>(N128 w, Double[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 cd 53 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 90 3b 51 ff
296       | 7ff7c8230b40h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n256)                                                                      | Block256<byte> parts<byte>(N256 w, Byte[] src)                                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 1f 03 d0 83 e2 e0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 fa 52 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 bd 3a 51 ff
297       | 7ff7c8230c10h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n256)                                                                      | Block256<sbyte> parts<sbyte>(N256 w, SByte[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 1f 03 d0 83 e2 e0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 2a 52 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 ed 39 51 ff
298       | 7ff7c8230ce0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n256)                                                                     | Block256<ushort> parts<ushort>(N256 w, UInt16[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 5a 51 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 1d 39 51 ff
299       | 7ff7c8230db0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n256)                                                                     | Block256<short> parts<short>(N256 w, Int16[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 8a 50 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 4d 38 51 ff
300       | 7ff7c8230e80h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32u](n256)                                                                     | Block256<uint> parts<uint>(N256 w, UInt32[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ba 4f 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 7d 37 51 ff
301       | 7ff7c8230f50h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32i](n256)                                                                     | Block256<int> parts<int>(N256 w, Int32[] src)                                                                 | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ea 4e 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 ad 36 51 ff
302       | 7ff7c8231020h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64u](n256)                                                                     | Block256<ulong> parts<ulong>(N256 w, UInt64[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 1a 4e 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 dd 35 51 ff
303       | 7ff7c82310f0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64i](n256)                                                                     | Block256<long> parts<long>(N256 w, Int64[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 4a 4d 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 0d 35 51 ff
304       | 7ff7c82311c0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32f](n256)                                                                     | Block256<float> parts<float>(N256 w, Single[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 7a 4c 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 3d 34 51 ff
305       | 7ff7c8231290h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64f](n256)                                                                     | Block256<double> parts<double>(N256 w, Double[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 aa 4b 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 6d 33 51 ff
306       | 7ff7c8231770h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n512)                                                                      | Block512<byte> parts<byte>(N512 w, Byte[] src)                                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 3f 03 d0 83 e2 c0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ca 46 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 8d 2e 51 ff
307       | 7ff7c8231840h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n512)                                                                      | Block512<sbyte> parts<sbyte>(N512 w, SByte[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 3f 03 d0 83 e2 c0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 fa 45 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 bd 2d 51 ff
308       | 7ff7c8231910h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n512)                                                                     | Block512<ushort> parts<ushort>(N512 w, UInt16[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 1f 03 d0 83 e2 e0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 2a 45 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 ed 2c 51 ff
309       | 7ff7c82319e0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n512)                                                                     | Block512<short> parts<short>(N512 w, Int16[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 1f 03 d0 83 e2 e0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 5a 44 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 1d 2c 51 ff
310       | 7ff7c8231ab0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32u](n512)                                                                     | Block512<uint> parts<uint>(N512 w, UInt32[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 8a 43 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 4d 2b 51 ff
311       | 7ff7c8231b80h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32i](n512)                                                                     | Block512<int> parts<int>(N512 w, Int32[] src)                                                                 | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ba 42 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 7d 2a 51 ff
312       | 7ff7c8231c50h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64u](n512)                                                                     | Block512<ulong> parts<ulong>(N512 w, UInt64[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ea 41 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 ad 29 51 ff
313       | 7ff7c8231d20h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64i](n512)                                                                     | Block512<long> parts<long>(N512 w, Int64[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 1a 41 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 dd 28 51 ff
314       | 7ff7c8231df0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32f](n512)                                                                     | Block512<float> parts<float>(N512 w, Single[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 4a 40 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 0d 28 51 ff
315       | 7ff7c8231ec0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64f](n512)                                                                     | Block512<double> parts<double>(N512 w, Double[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 7a 3f 03 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 a0 7a 01 90 b3 02 00 00 48 8b 09 48 b8 a8 7a 01 90 b3 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 3d 27 51 ff
316       | 7ff7c8231f90h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[8u](8u~ref)                                                                    | in void* pvoid<byte>(ref byte src)                                                                            | 0f 1f 44 00 00 48 8b c1 c3
317       | 7ff7c8231fb0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[8i](8i~ref)                                                                    | in void* pvoid<sbyte>(ref sbyte src)                                                                          | 0f 1f 44 00 00 48 8b c1 c3
318       | 7ff7c8231fd0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[16u](16u~ref)                                                                  | in void* pvoid<ushort>(ref ushort src)                                                                        | 0f 1f 44 00 00 48 8b c1 c3
319       | 7ff7c8231ff0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[16i](16i~ref)                                                                  | in void* pvoid<short>(ref short src)                                                                          | 0f 1f 44 00 00 48 8b c1 c3
320       | 7ff7c8232010h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[32u](32u~ref)                                                                  | in void* pvoid<uint>(ref uint src)                                                                            | 0f 1f 44 00 00 48 8b c1 c3
321       | 7ff7c8232030h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[32i](32i~ref)                                                                  | in void* pvoid<int>(ref int src)                                                                              | 0f 1f 44 00 00 48 8b c1 c3
322       | 7ff7c8232050h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[64u](64u~ref)                                                                  | in void* pvoid<ulong>(ref ulong src)                                                                          | 0f 1f 44 00 00 48 8b c1 c3
323       | 7ff7c8232070h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[64i](64i~ref)                                                                  | in void* pvoid<long>(ref long src)                                                                            | 0f 1f 44 00 00 48 8b c1 c3
324       | 7ff7c8232090h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[32f](32f~ref)                                                                  | in void* pvoid<float>(ref float src)                                                                          | 0f 1f 44 00 00 48 8b c1 c3
325       | 7ff7c82320b0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[64f](64f~ref)                                                                  | in void* pvoid<double>(ref double src)                                                                        | 0f 1f 44 00 00 48 8b c1 c3
326       | 7ff7c82320d0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](8u~ref)                                                                        | in byte* ptr<byte>(ref byte src)                                                                              | 0f 1f 44 00 00 48 8b c1 c3
327       | 7ff7c82320f0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](8i~ref)                                                                        | in sbyte* ptr<sbyte>(ref sbyte src)                                                                           | 0f 1f 44 00 00 48 8b c1 c3
328       | 7ff7c8232110h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](16u~ref)                                                                      | in ushort* ptr<ushort>(ref ushort src)                                                                        | 0f 1f 44 00 00 48 8b c1 c3
329       | 7ff7c8232130h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](16i~ref)                                                                      | in short* ptr<short>(ref short src)                                                                           | 0f 1f 44 00 00 48 8b c1 c3
330       | 7ff7c8232150h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](32u~ref)                                                                      | in uint* ptr<uint>(ref uint src)                                                                              | 0f 1f 44 00 00 48 8b c1 c3
331       | 7ff7c8232170h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](32i~ref)                                                                      | in int* ptr<int>(ref int src)                                                                                 | 0f 1f 44 00 00 48 8b c1 c3
332       | 7ff7c8232190h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64u](64u~ref)                                                                      | in ulong* ptr<ulong>(ref ulong src)                                                                           | 0f 1f 44 00 00 48 8b c1 c3
333       | 7ff7c82321b0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64i](64i~ref)                                                                      | in long* ptr<long>(ref long src)                                                                              | 0f 1f 44 00 00 48 8b c1 c3
334       | 7ff7c82321d0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](32f~ref)                                                                      | in float* ptr<float>(ref float src)                                                                           | 0f 1f 44 00 00 48 8b c1 c3
335       | 7ff7c82321f0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64f](64f~ref)                                                                      | in double* ptr<double>(ref double src)                                                                        | 0f 1f 44 00 00 48 8b c1 c3
336       | 7ff7c8232620h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b16x8u~in)                                                                     | in byte* ptr<byte>(in Block16<byte> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
337       | 7ff7c8232640h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b16x8i~in)                                                                     | in sbyte* ptr<sbyte>(in Block16<sbyte> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
338       | 7ff7c8232660h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b16x16u~in)                                                                   | in ushort* ptr<ushort>(in Block16<ushort> src)                                                                | 0f 1f 44 00 00 48 8b 01 c3
339       | 7ff7c8232680h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b16x16i~in)                                                                   | in short* ptr<short>(in Block16<short> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
340       | 7ff7c82326a0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b32x8u~in)                                                                     | in byte* ptr<byte>(in Block32<byte> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
341       | 7ff7c82326c0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b32x8i~in)                                                                     | in sbyte* ptr<sbyte>(in Block32<sbyte> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
342       | 7ff7c82326e0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b32x16u~in)                                                                   | in ushort* ptr<ushort>(in Block32<ushort> src)                                                                | 0f 1f 44 00 00 48 8b 01 c3
343       | 7ff7c8232700h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b32x16i~in)                                                                   | in short* ptr<short>(in Block32<short> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
344       | 7ff7c8232720h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](b32x32u~in)                                                                   | in uint* ptr<uint>(in Block32<uint> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
345       | 7ff7c8232740h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](b32x32i~in)                                                                   | in int* ptr<int>(in Block32<int> src)                                                                         | 0f 1f 44 00 00 48 8b 01 c3
346       | 7ff7c8232760h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](b32x32f~in)                                                                   | in float* ptr<float>(in Block32<float> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
347       | 7ff7c8232b90h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b64x8u~in)                                                                     | in byte* ptr<byte>(in Block64<byte> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
348       | 7ff7c8232bb0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b64x8i~in)                                                                     | in sbyte* ptr<sbyte>(in Block64<sbyte> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
349       | 7ff7c8232bd0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b64x16u~in)                                                                   | in ushort* ptr<ushort>(in Block64<ushort> src)                                                                | 0f 1f 44 00 00 48 8b 01 c3
350       | 7ff7c8232bf0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b64x16i~in)                                                                   | in short* ptr<short>(in Block64<short> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
351       | 7ff7c8232c10h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](b64x32u~in)                                                                   | in uint* ptr<uint>(in Block64<uint> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
352       | 7ff7c8232c30h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](b64x32i~in)                                                                   | in int* ptr<int>(in Block64<int> src)                                                                         | 0f 1f 44 00 00 48 8b 01 c3
353       | 7ff7c8232c50h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64u](b64x64u~in)                                                                   | in ulong* ptr<ulong>(in Block64<ulong> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
354       | 7ff7c8232c70h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64i](b64x64i~in)                                                                   | in long* ptr<long>(in Block64<long> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
355       | 7ff7c8232c90h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](b64x32f~in)                                                                   | in float* ptr<float>(in Block64<float> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
356       | 7ff7c8232cb0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64f](b64x64f~in)                                                                   | in double* ptr<double>(in Block64<double> src)                                                                | 0f 1f 44 00 00 48 8b 01 c3
357       | 7ff7c8232cd0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b128x8u~in)                                                                    | in byte* ptr<byte>(in Block128<byte> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
358       | 7ff7c8232cf0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b128x8i~in)                                                                    | in sbyte* ptr<sbyte>(in Block128<sbyte> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
359       | 7ff7c8232d10h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b128x16u~in)                                                                  | in ushort* ptr<ushort>(in Block128<ushort> src)                                                               | 0f 1f 44 00 00 48 8b 01 c3
360       | 7ff7c8232d30h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b128x16i~in)                                                                  | in short* ptr<short>(in Block128<short> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
361       | 7ff7c8232d50h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](b128x32u~in)                                                                  | in uint* ptr<uint>(in Block128<uint> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
362       | 7ff7c8232d70h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](b128x32i~in)                                                                  | in int* ptr<int>(in Block128<int> src)                                                                        | 0f 1f 44 00 00 48 8b 01 c3
363       | 7ff7c82331a0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64u](b128x64u~in)                                                                  | in ulong* ptr<ulong>(in Block128<ulong> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
364       | 7ff7c82331c0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64i](b128x64i~in)                                                                  | in long* ptr<long>(in Block128<long> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
365       | 7ff7c82331e0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](b128x32f~in)                                                                  | in float* ptr<float>(in Block128<float> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
366       | 7ff7c8233200h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64f](b128x64f~in)                                                                  | in double* ptr<double>(in Block128<double> src)                                                               | 0f 1f 44 00 00 48 8b 01 c3
367       | 7ff7c8233220h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b256x8u~in)                                                                    | in byte* ptr<byte>(in Block256<byte> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
368       | 7ff7c8233240h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b256x8i~in)                                                                    | in sbyte* ptr<sbyte>(in Block256<sbyte> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
369       | 7ff7c8233260h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b256x16u~in)                                                                  | in ushort* ptr<ushort>(in Block256<ushort> src)                                                               | 0f 1f 44 00 00 48 8b 01 c3
370       | 7ff7c8233280h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b256x16i~in)                                                                  | in short* ptr<short>(in Block256<short> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
371       | 7ff7c82332a0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](b256x32u~in)                                                                  | in uint* ptr<uint>(in Block256<uint> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
372       | 7ff7c82332c0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](b256x32i~in)                                                                  | in int* ptr<int>(in Block256<int> src)                                                                        | 0f 1f 44 00 00 48 8b 01 c3
373       | 7ff7c82332e0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64u](b256x64u~in)                                                                  | in ulong* ptr<ulong>(in Block256<ulong> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
374       | 7ff7c8233300h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64i](b256x64i~in)                                                                  | in long* ptr<long>(in Block256<long> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
375       | 7ff7c8233320h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](b256x32f~in)                                                                  | in float* ptr<float>(in Block256<float> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
376       | 7ff7c8233340h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64f](b256x64f~in)                                                                  | in double* ptr<double>(in Block256<double> src)                                                               | 0f 1f 44 00 00 48 8b 01 c3
377       | 7ff7c8233770h   | 17      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b16x8u~in,32i)                                                                 | in byte* ptr<byte>(in Block16<byte> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 03 c2 c3
378       | 7ff7c82337a0h   | 17      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b16x8i~in,32i)                                                                 | in sbyte* ptr<sbyte>(in Block16<sbyte> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 03 c2 c3
379       | 7ff7c82337d0h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[16u](b16x16u~in,32i)                                                               | in ushort* ptr<ushort>(in Block16<ushort> src, int block)                                                     | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 50 c3
380       | 7ff7c82337f0h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[16i](b16x16i~in,32i)                                                               | in short* ptr<short>(in Block16<short> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 50 c3
381       | 7ff7c8233c20h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b32x8u~in,32i)                                                                 | in byte* ptr<byte>(in Block32<byte> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 03 c2 c3
382       | 7ff7c8233c50h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b32x8i~in,32i)                                                                 | in sbyte* ptr<sbyte>(in Block32<sbyte> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 03 c2 c3
383       | 7ff7c8233c80h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b32x16u~in,32i)                                                               | in ushort* ptr<ushort>(in Block32<ushort> src, int block)                                                     | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 50 c3
384       | 7ff7c8233cb0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b32x16i~in,32i)                                                               | in short* ptr<short>(in Block32<short> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 50 c3
385       | 7ff7c8233ce0h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[32u](b32x32u~in,32i)                                                               | in uint* ptr<uint>(in Block32<uint> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
386       | 7ff7c8233d00h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[32i](b32x32i~in,32i)                                                               | in int* ptr<int>(in Block32<int> src, int block)                                                              | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
387       | 7ff7c8234130h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[32f](b32x32f~in,32i)                                                               | in float* ptr<float>(in Block32<float> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
388       | 7ff7c8234150h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b64x8u~in,32i)                                                                 | in byte* ptr<byte>(in Block64<byte> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 03 c2 c3
389       | 7ff7c8234580h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b64x8i~in,32i)                                                                 | in sbyte* ptr<sbyte>(in Block64<sbyte> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 03 c2 c3
390       | 7ff7c82345b0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16u](b64x16u~in,32i)                                                               | in ushort* ptr<ushort>(in Block64<ushort> src, int block)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 50 c3
391       | 7ff7c82345e0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16i](b64x16i~in,32i)                                                               | in short* ptr<short>(in Block64<short> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 50 c3
392       | 7ff7c8234610h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](b64x32u~in,32i)                                                               | in uint* ptr<uint>(in Block64<uint> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
393       | 7ff7c8234640h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](b64x32i~in,32i)                                                               | in int* ptr<int>(in Block64<int> src, int block)                                                              | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
394       | 7ff7c8234670h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[64u](b64x64u~in,32i)                                                               | in ulong* ptr<ulong>(in Block64<ulong> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
395       | 7ff7c8234690h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[64i](b64x64i~in,32i)                                                               | in long* ptr<long>(in Block64<long> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
396       | 7ff7c82346b0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](b64x32f~in,32i)                                                               | in float* ptr<float>(in Block64<float> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
397       | 7ff7c82346e0h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[64f](b64x64f~in,32i)                                                               | in double* ptr<double>(in Block64<double> src, int block)                                                     | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
398       | 7ff7c8234b10h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b128x8u~in,32i)                                                                | in byte* ptr<byte>(in Block128<byte> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 03 c2 c3
399       | 7ff7c8234b40h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b128x8i~in,32i)                                                                | in sbyte* ptr<sbyte>(in Block128<sbyte> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 03 c2 c3
400       | 7ff7c8234b70h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16u](b128x16u~in,32i)                                                              | in ushort* ptr<ushort>(in Block128<ushort> src, int block)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 50 c3
401       | 7ff7c8234ba0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16i](b128x16i~in,32i)                                                              | in short* ptr<short>(in Block128<short> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 50 c3
402       | 7ff7c8234bd0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32u](b128x32u~in,32i)                                                              | in uint* ptr<uint>(in Block128<uint> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
403       | 7ff7c8234c00h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32i](b128x32i~in,32i)                                                              | in int* ptr<int>(in Block128<int> src, int block)                                                             | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
404       | 7ff7c8234c30h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64u](b128x64u~in,32i)                                                              | in ulong* ptr<ulong>(in Block128<ulong> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
405       | 7ff7c8234c60h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64i](b128x64i~in,32i)                                                              | in long* ptr<long>(in Block128<long> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
406       | 7ff7c8234c90h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32f](b128x32f~in,32i)                                                              | in float* ptr<float>(in Block128<float> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
407       | 7ff7c8234cc0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64f](b128x64f~in,32i)                                                              | in double* ptr<double>(in Block128<double> src, int block)                                                    | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
408       | 7ff7c82350f0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b256x8u~in,32i)                                                                | in byte* ptr<byte>(in Block256<byte> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 03 c2 c3
409       | 7ff7c8235120h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b256x8i~in,32i)                                                                | in sbyte* ptr<sbyte>(in Block256<sbyte> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 03 c2 c3
410       | 7ff7c8235150h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16u](b256x16u~in,32i)                                                              | in ushort* ptr<ushort>(in Block256<ushort> src, int block)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 50 c3
411       | 7ff7c8235180h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16i](b256x16i~in,32i)                                                              | in short* ptr<short>(in Block256<short> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 50 c3
412       | 7ff7c82351b0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32u](b256x32u~in,32i)                                                              | in uint* ptr<uint>(in Block256<uint> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
413       | 7ff7c82351e0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32i](b256x32i~in,32i)                                                              | in int* ptr<int>(in Block256<int> src, int block)                                                             | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
414       | 7ff7c8235210h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[64u](b256x64u~in,32i)                                                              | in ulong* ptr<ulong>(in Block256<ulong> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
415       | 7ff7c8235240h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[64i](b256x64i~in,32i)                                                              | in long* ptr<long>(in Block256<long> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
416       | 7ff7c8235270h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32f](b256x32f~in,32i)                                                              | in float* ptr<float>(in Block256<float> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
417       | 7ff7c82352a0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[64f](b256x64f~in,32i)                                                              | in double* ptr<double>(in Block256<double> src, int block)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
418       | 7ff7c82352d0h   | 17      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[8u](b16x8u~in,32i)                                                     | ref byte reference<byte>(in Block16<byte> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 03 c2 c3
419       | 7ff7c8235300h   | 17      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[8i](b16x8i~in,32i)                                                     | ref sbyte reference<sbyte>(in Block16<sbyte> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 03 c2 c3
420       | 7ff7c8235330h   | 16      | CTC_RET_SBB         | hex://blocks/api?reference#reference_g[16u](b16x16u~in,32i)                                                   | ref ushort reference<ushort>(in Block16<ushort> src, int index)                                               | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 50 c3
421       | 7ff7c8235350h   | 16      | CTC_RET_SBB         | hex://blocks/api?reference#reference_g[16i](b16x16i~in,32i)                                                   | ref short reference<short>(in Block16<short> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 50 c3
422       | 7ff7c8235370h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[8u](b32x8u~in,32i)                                                     | ref byte reference<byte>(in Block32<byte> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 03 c2 c3
423       | 7ff7c82353a0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[8i](b32x8i~in,32i)                                                     | ref sbyte reference<sbyte>(in Block32<sbyte> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 03 c2 c3
424       | 7ff7c82353d0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[16u](b32x16u~in,32i)                                                   | ref ushort reference<ushort>(in Block32<ushort> src, int index)                                               | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 50 c3
425       | 7ff7c8235400h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[16i](b32x16i~in,32i)                                                   | ref short reference<short>(in Block32<short> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 50 c3
426       | 7ff7c8235430h   | 16      | CTC_RET_SBB         | hex://blocks/api?reference#reference_g[32u](b32x32u~in,32i)                                                   | ref uint reference<uint>(in Block32<uint> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
427       | 7ff7c8235450h   | 16      | CTC_RET_SBB         | hex://blocks/api?reference#reference_g[32i](b32x32i~in,32i)                                                   | ref int reference<int>(in Block32<int> src, int index)                                                        | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
428       | 7ff7c8235470h   | 16      | CTC_RET_SBB         | hex://blocks/api?reference#reference_g[32f](b32x32f~in,32i)                                                   | ref float reference<float>(in Block32<float> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
429       | 7ff7c8235490h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[8u](b64x8u~in,32i)                                                     | ref byte reference<byte>(in Block64<byte> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 03 c2 c3
430       | 7ff7c82354c0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[8i](b64x8i~in,32i)                                                     | ref sbyte reference<sbyte>(in Block64<sbyte> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 03 c2 c3
431       | 7ff7c82354f0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[16u](b64x16u~in,32i)                                                   | ref ushort reference<ushort>(in Block64<ushort> src, int index)                                               | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 50 c3
432       | 7ff7c8235520h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[16i](b64x16i~in,32i)                                                   | ref short reference<short>(in Block64<short> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 50 c3
433       | 7ff7c8235550h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[32u](b64x32u~in,32i)                                                   | ref uint reference<uint>(in Block64<uint> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
434       | 7ff7c8235580h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[32i](b64x32i~in,32i)                                                   | ref int reference<int>(in Block64<int> src, int index)                                                        | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
435       | 7ff7c82355b0h   | 16      | CTC_RET_SBB         | hex://blocks/api?reference#reference_g[64u](b64x64u~in,32i)                                                   | ref ulong reference<ulong>(in Block64<ulong> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
436       | 7ff7c82355d0h   | 16      | CTC_RET_SBB         | hex://blocks/api?reference#reference_g[64i](b64x64i~in,32i)                                                   | ref long reference<long>(in Block64<long> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
437       | 7ff7c82355f0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[32f](b64x32f~in,32i)                                                   | ref float reference<float>(in Block64<float> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
438       | 7ff7c8235620h   | 16      | CTC_RET_SBB         | hex://blocks/api?reference#reference_g[64f](b64x64f~in,32i)                                                   | ref double reference<double>(in Block64<double> src, int index)                                               | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
439       | 7ff7c8235640h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[8u](b128x8u~in,32i)                                                    | ref byte reference<byte>(in Block128<byte> src, int index)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 03 c2 c3
440       | 7ff7c8235670h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[8i](b128x8i~in,32i)                                                    | ref sbyte reference<sbyte>(in Block128<sbyte> src, int index)                                                 | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 03 c2 c3
441       | 7ff7c82356a0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[16u](b128x16u~in,32i)                                                  | ref ushort reference<ushort>(in Block128<ushort> src, int index)                                              | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 50 c3
442       | 7ff7c82356d0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[16i](b128x16i~in,32i)                                                  | ref short reference<short>(in Block128<short> src, int index)                                                 | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 50 c3
443       | 7ff7c8235700h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[32u](b128x32u~in,32i)                                                  | ref uint reference<uint>(in Block128<uint> src, int index)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
444       | 7ff7c8235730h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[32i](b128x32i~in,32i)                                                  | ref int reference<int>(in Block128<int> src, int index)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
445       | 7ff7c8235760h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[64u](b128x64u~in,32i)                                                  | ref ulong reference<ulong>(in Block128<ulong> src, int index)                                                 | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
446       | 7ff7c8235790h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[64i](b128x64i~in,32i)                                                  | ref long reference<long>(in Block128<long> src, int index)                                                    | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
447       | 7ff7c82357c0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[32f](b128x32f~in,32i)                                                  | ref float reference<float>(in Block128<float> src, int index)                                                 | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
448       | 7ff7c82357f0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[64f](b128x64f~in,32i)                                                  | ref double reference<double>(in Block128<double> src, int index)                                              | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
449       | 7ff7c8235c20h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[8u](b256x8u~in,32i)                                                    | ref byte reference<byte>(in Block256<byte> src, int index)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 03 c2 c3
450       | 7ff7c8235c50h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[8i](b256x8i~in,32i)                                                    | ref sbyte reference<sbyte>(in Block256<sbyte> src, int index)                                                 | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 03 c2 c3
451       | 7ff7c8235c80h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[16u](b256x16u~in,32i)                                                  | ref ushort reference<ushort>(in Block256<ushort> src, int index)                                              | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 50 c3
452       | 7ff7c8235cb0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[16i](b256x16i~in,32i)                                                  | ref short reference<short>(in Block256<short> src, int index)                                                 | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 50 c3
453       | 7ff7c8235ce0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[32u](b256x32u~in,32i)                                                  | ref uint reference<uint>(in Block256<uint> src, int index)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
454       | 7ff7c8235d10h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[32i](b256x32i~in,32i)                                                  | ref int reference<int>(in Block256<int> src, int index)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
455       | 7ff7c8235d40h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[64u](b256x64u~in,32i)                                                  | ref ulong reference<ulong>(in Block256<ulong> src, int index)                                                 | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
456       | 7ff7c8235d70h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[64i](b256x64i~in,32i)                                                  | ref long reference<long>(in Block256<long> src, int index)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
457       | 7ff7c8235da0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[32f](b256x32f~in,32i)                                                  | ref float reference<float>(in Block256<float> src, int index)                                                 | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
458       | 7ff7c8235dd0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[64f](b256x64f~in,32i)                                                  | ref double reference<double>(in Block256<double> src, int index)                                              | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
459       | 7ff7c8235e00h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[8u](b512x8u~in,32i)                                                    | ref byte reference<byte>(in Block512<byte> src, int index)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 06 48 63 d2 48 03 c2 c3
460       | 7ff7c8235e30h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[8i](b512x8i~in,32i)                                                    | ref sbyte reference<sbyte>(in Block512<sbyte> src, int index)                                                 | 0f 1f 44 00 00 48 8b 01 c1 e2 06 48 63 d2 48 03 c2 c3
461       | 7ff7c8235e60h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[16u](b512x16u~in,32i)                                                  | ref ushort reference<ushort>(in Block512<ushort> src, int index)                                              | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 8d 04 50 c3
462       | 7ff7c8235e90h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[16i](b512x16i~in,32i)                                                  | ref short reference<short>(in Block512<short> src, int index)                                                 | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 8d 04 50 c3
463       | 7ff7c82362c0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[32u](b512x32u~in,32i)                                                  | ref uint reference<uint>(in Block512<uint> src, int index)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 c3
464       | 7ff7c82362f0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[32i](b512x32i~in,32i)                                                  | ref int reference<int>(in Block512<int> src, int index)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 c3
465       | 7ff7c8236320h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[64u](b512x64u~in,32i)                                                  | ref ulong reference<ulong>(in Block512<ulong> src, int index)                                                 | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 c3
466       | 7ff7c8236350h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[64i](b512x64i~in,32i)                                                  | ref long reference<long>(in Block512<long> src, int index)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 c3
467       | 7ff7c8236380h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[32f](b512x32f~in,32i)                                                  | ref float reference<float>(in Block512<float> src, int index)                                                 | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 c3
468       | 7ff7c82363b0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[64f](b512x64f~in,32i)                                                  | ref double reference<double>(in Block512<double> src, int index)                                              | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 c3
469       | 7ff7c82363e0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n8,32i)                                                                | bool aligned<byte>(N8 n, int count)                                                                           | 0f 1f 44 00 00 b8 01 00 00 00 c3
470       | 7ff7c8236400h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n8,32i)                                                                | bool aligned<sbyte>(N8 n, int count)                                                                          | 0f 1f 44 00 00 b8 01 00 00 00 c3
471       | 7ff7c8236420h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[16u](n8,32i)                                                               | bool aligned<ushort>(N8 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
472       | 7ff7c8236450h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[16i](n8,32i)                                                               | bool aligned<short>(N8 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
473       | 7ff7c8236480h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32u](n8,32i)                                                               | bool aligned<uint>(N8 n, int count)                                                                           | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
474       | 7ff7c82364b0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32i](n8,32i)                                                               | bool aligned<int>(N8 n, int count)                                                                            | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
475       | 7ff7c82364e0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64u](n8,32i)                                                               | bool aligned<ulong>(N8 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
476       | 7ff7c8236510h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64i](n8,32i)                                                               | bool aligned<long>(N8 n, int count)                                                                           | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
477       | 7ff7c8236540h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32f](n8,32i)                                                               | bool aligned<float>(N8 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
478       | 7ff7c8236570h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64f](n8,32i)                                                               | bool aligned<double>(N8 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
479       | 7ff7c82365a0h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[8u](n16,32i)                                                               | bool aligned<byte>(N16 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
480       | 7ff7c82365d0h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[8i](n16,32i)                                                               | bool aligned<sbyte>(N16 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
481       | 7ff7c8236600h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16u](n16,32i)                                                              | bool aligned<ushort>(N16 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
482       | 7ff7c8236630h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16i](n16,32i)                                                              | bool aligned<short>(N16 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
483       | 7ff7c8236660h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[32u](n16,32i)                                                              | bool aligned<uint>(N16 n, int count)                                                                          | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
484       | 7ff7c8236690h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[32i](n16,32i)                                                              | bool aligned<int>(N16 n, int count)                                                                           | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
485       | 7ff7c82366c0h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64u](n16,32i)                                                              | bool aligned<ulong>(N16 n, int count)                                                                         | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
486       | 7ff7c82366f0h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64i](n16,32i)                                                              | bool aligned<long>(N16 n, int count)                                                                          | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
487       | 7ff7c8236720h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[32f](n16,32i)                                                              | bool aligned<float>(N16 n, int count)                                                                         | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
488       | 7ff7c8236750h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64f](n16,32i)                                                              | bool aligned<double>(N16 n, int count)                                                                        | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
489       | 7ff7c8236780h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n32,32i)                                                               | bool aligned<byte>(N32 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
490       | 7ff7c82367b0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n32,32i)                                                               | bool aligned<sbyte>(N32 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
491       | 7ff7c82367e0h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[16u](n32,32i)                                                              | bool aligned<ushort>(N32 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
492       | 7ff7c8236810h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[16i](n32,32i)                                                              | bool aligned<short>(N32 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
493       | 7ff7c8236840h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32u](n32,32i)                                                              | bool aligned<uint>(N32 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
494       | 7ff7c8236870h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32i](n32,32i)                                                              | bool aligned<int>(N32 n, int count)                                                                           | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
495       | 7ff7c82368a0h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64u](n32,32i)                                                              | bool aligned<ulong>(N32 n, int count)                                                                         | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
496       | 7ff7c82368d0h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64i](n32,32i)                                                              | bool aligned<long>(N32 n, int count)                                                                          | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
497       | 7ff7c8236900h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32f](n32,32i)                                                              | bool aligned<float>(N32 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
498       | 7ff7c8236930h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64f](n32,32i)                                                              | bool aligned<double>(N32 n, int count)                                                                        | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
499       | 7ff7c8236960h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n64,32i)                                                               | bool aligned<byte>(N64 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
500       | 7ff7c8236990h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n64,32i)                                                               | bool aligned<sbyte>(N64 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
501       | 7ff7c82369c0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16u](n64,32i)                                                              | bool aligned<ushort>(N64 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
502       | 7ff7c82369f0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16i](n64,32i)                                                              | bool aligned<short>(N64 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
503       | 7ff7c8236a20h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[32u](n64,32i)                                                              | bool aligned<uint>(N64 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
504       | 7ff7c8236a50h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[32i](n64,32i)                                                              | bool aligned<int>(N64 n, int count)                                                                           | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
505       | 7ff7c8236a80h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64u](n64,32i)                                                              | bool aligned<ulong>(N64 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
506       | 7ff7c8236ab0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64i](n64,32i)                                                              | bool aligned<long>(N64 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
507       | 7ff7c8236ae0h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[32f](n64,32i)                                                              | bool aligned<float>(N64 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
508       | 7ff7c8236b10h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64f](n64,32i)                                                              | bool aligned<double>(N64 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
509       | 7ff7c8236b40h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n128,32i)                                                              | bool aligned<byte>(N128 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
510       | 7ff7c8236b70h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n128,32i)                                                              | bool aligned<sbyte>(N128 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
511       | 7ff7c8236ba0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16u](n128,32i)                                                             | bool aligned<ushort>(N128 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
512       | 7ff7c8236bd0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16i](n128,32i)                                                             | bool aligned<short>(N128 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
513       | 7ff7c8236c00h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32u](n128,32i)                                                             | bool aligned<uint>(N128 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
514       | 7ff7c8236c30h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32i](n128,32i)                                                             | bool aligned<int>(N128 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
515       | 7ff7c8236c60h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[64u](n128,32i)                                                             | bool aligned<ulong>(N128 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
516       | 7ff7c8236c90h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[64i](n128,32i)                                                             | bool aligned<long>(N128 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
517       | 7ff7c8236cc0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32f](n128,32i)                                                             | bool aligned<float>(N128 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
518       | 7ff7c8236cf0h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[64f](n128,32i)                                                             | bool aligned<double>(N128 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
519       | 7ff7c8236d20h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n256,32i)                                                              | bool aligned<byte>(N256 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 83 e0 e0 2b d0 0f 94 c0 0f b6 c0 c3
520       | 7ff7c8236d50h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n256,32i)                                                              | bool aligned<sbyte>(N256 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 83 e0 e0 2b d0 0f 94 c0 0f b6 c0 c3
521       | 7ff7c8236d80h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16u](n256,32i)                                                             | bool aligned<ushort>(N256 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
522       | 7ff7c8236db0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16i](n256,32i)                                                             | bool aligned<short>(N256 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
523       | 7ff7c8236de0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32u](n256,32i)                                                             | bool aligned<uint>(N256 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
524       | 7ff7c8236e10h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32i](n256,32i)                                                             | bool aligned<int>(N256 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
525       | 7ff7c8236e40h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64u](n256,32i)                                                             | bool aligned<ulong>(N256 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
526       | 7ff7c8236e70h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64i](n256,32i)                                                             | bool aligned<long>(N256 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
527       | 7ff7c8236ea0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32f](n256,32i)                                                             | bool aligned<float>(N256 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
528       | 7ff7c8236ed0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64f](n256,32i)                                                             | bool aligned<double>(N256 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
529       | 7ff7c8236f00h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n512,32i)                                                              | bool aligned<byte>(N512 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 3f 03 c2 83 e0 c0 2b d0 0f 94 c0 0f b6 c0 c3
530       | 7ff7c8236f30h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n512,32i)                                                              | bool aligned<sbyte>(N512 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 3f 03 c2 83 e0 c0 2b d0 0f 94 c0 0f b6 c0 c3
531       | 7ff7c8236f60h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16u](n512,32i)                                                             | bool aligned<ushort>(N512 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 83 e0 e0 2b d0 0f 94 c0 0f b6 c0 c3
532       | 7ff7c8236f90h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16i](n512,32i)                                                             | bool aligned<short>(N512 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 83 e0 e0 2b d0 0f 94 c0 0f b6 c0 c3
533       | 7ff7c8236fc0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32u](n512,32i)                                                             | bool aligned<uint>(N512 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
534       | 7ff7c8236ff0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32i](n512,32i)                                                             | bool aligned<int>(N512 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
535       | 7ff7c8237020h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64u](n512,32i)                                                             | bool aligned<ulong>(N512 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
536       | 7ff7c8237050h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64i](n512,32i)                                                             | bool aligned<long>(N512 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
537       | 7ff7c8237080h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32f](n512,32i)                                                             | bool aligned<float>(N512 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
538       | 7ff7c82370b0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64f](n512,32i)                                                             | bool aligned<double>(N512 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
539       | 7ff7c82370e0h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[8u](n16,32i,8u)                                                                | Block16<byte> alloc<byte>(N16 w, int blocks, byte t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 10 ea 70 c7 f7 7f 00 00 e8 d5 fc 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 66 ed 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
540       | 7ff7c8237150h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[8i](n16,32i,8i)                                                                | Block16<sbyte> alloc<sbyte>(N16 w, int blocks, sbyte t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 98 f0 70 c7 f7 7f 00 00 e8 65 fc 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 f6 ec 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
541       | 7ff7c82371c0h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16u](n16,32i,16u)                                                              | Block16<ushort> alloc<ushort>(N16 w, int blocks, ushort t)                                                    | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 60 33 18 c8 f7 7f 00 00 e8 f8 fb 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 89 ec 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
542       | 7ff7c8237230h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16i](n16,32i,16i)                                                              | Block16<short> alloc<short>(N16 w, int blocks, short t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 20 6a 2f c8 f7 7f 00 00 e8 88 fb 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 19 ec 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
543       | 7ff7c82376b0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8u](n32,32i,8u)                                                                | Block32<byte> alloc<byte>(N32 w, int blocks, byte t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 10 ea 70 c7 f7 7f 00 00 e8 04 f7 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 95 e7 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
544       | 7ff7c8237720h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8i](n32,32i,8i)                                                                | Block32<sbyte> alloc<sbyte>(N32 w, int blocks, sbyte t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 98 f0 70 c7 f7 7f 00 00 e8 94 f6 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 25 e7 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
545       | 7ff7c8237790h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[16u](n32,32i,16u)                                                              | Block32<ushort> alloc<ushort>(N32 w, int blocks, ushort t)                                                    | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 60 33 18 c8 f7 7f 00 00 e8 25 f6 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 b6 e6 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
546       | 7ff7c8237800h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[16i](n32,32i,16i)                                                              | Block32<short> alloc<short>(N32 w, int blocks, short t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 20 6a 2f c8 f7 7f 00 00 e8 b5 f5 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 46 e6 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
547       | 7ff7c8237870h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32u](n32,32i,32u)                                                              | Block32<uint> alloc<uint>(N32 w, int blocks, uint t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 f8 22 18 c8 f7 7f 00 00 e8 48 f5 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 d9 e5 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
548       | 7ff7c82378e0h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32i](n32,32i,32i)                                                              | Block32<int> alloc<int>(N32 w, int blocks, int t)                                                             | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 48 5f 7d c7 f7 7f 00 00 e8 d8 f4 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 69 e5 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
549       | 7ff7c8237950h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32f](n32,32i,32f)                                                              | Block32<float> alloc<float>(N32 w, int blocks, float t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 38 a6 c4 c7 f7 7f 00 00 e8 68 f4 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 f9 e4 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
550       | 7ff7c82379c0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8u](n64,32i,8u)                                                                | Block64<byte> alloc<byte>(N64 w, int blocks, byte t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 10 ea 70 c7 f7 7f 00 00 e8 f4 f3 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 85 e4 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
551       | 7ff7c8237a30h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8i](n64,32i,8i)                                                                | Block64<sbyte> alloc<sbyte>(N64 w, int blocks, sbyte t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 98 f0 70 c7 f7 7f 00 00 e8 84 f3 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 15 e4 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
552       | 7ff7c8237aa0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16u](n64,32i,16u)                                                              | Block64<ushort> alloc<ushort>(N64 w, int blocks, ushort t)                                                    | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 60 33 18 c8 f7 7f 00 00 e8 14 f3 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 a5 e3 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
553       | 7ff7c8237b10h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16i](n64,32i,16i)                                                              | Block64<short> alloc<short>(N64 w, int blocks, short t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 20 6a 2f c8 f7 7f 00 00 e8 a4 f2 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 35 e3 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
554       | 7ff7c8237b80h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[32u](n64,32i,32u)                                                              | Block64<uint> alloc<uint>(N64 w, int blocks, uint t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 f8 22 18 c8 f7 7f 00 00 e8 35 f2 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 c6 e2 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
555       | 7ff7c8237bf0h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[32i](n64,32i,32i)                                                              | Block64<int> alloc<int>(N64 w, int blocks, int t)                                                             | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 48 5f 7d c7 f7 7f 00 00 e8 c5 f1 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 56 e2 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
556       | 7ff7c8237c60h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64u](n64,32i,64u)                                                              | Block64<ulong> alloc<ulong>(N64 w, int blocks, ulong t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 e8 95 b9 c7 f7 7f 00 00 e8 58 f1 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 e9 e1 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
557       | 7ff7c8237cd0h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64i](n64,32i,64i)                                                              | Block64<long> alloc<long>(N64 w, int blocks, long t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 a0 92 2f c8 f7 7f 00 00 e8 e8 f0 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 79 e1 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
558       | 7ff7c8237d40h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[32f](n64,32i,32f)                                                              | Block64<float> alloc<float>(N64 w, int blocks, float t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 38 a6 c4 c7 f7 7f 00 00 e8 75 f0 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 06 e1 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
559       | 7ff7c82381c0h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64f](n64,32i,64f)                                                              | Block64<double> alloc<double>(N64 w, int blocks, double t)                                                    | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 40 a8 c4 c7 f7 7f 00 00 e8 f8 eb 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 89 dc 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
560       | 7ff7c8238230h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8u](n128,32i,8u)                                                               | Block128<byte> alloc<byte>(N128 w, int blocks, byte t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 10 ea 70 c7 f7 7f 00 00 e8 84 eb 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 15 dc 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
561       | 7ff7c82382a0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8i](n128,32i,8i)                                                               | Block128<sbyte> alloc<sbyte>(N128 w, int blocks, sbyte t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 98 f0 70 c7 f7 7f 00 00 e8 14 eb 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 a5 db 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
562       | 7ff7c8238310h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16u](n128,32i,16u)                                                             | Block128<ushort> alloc<ushort>(N128 w, int blocks, ushort t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 60 33 18 c8 f7 7f 00 00 e8 a4 ea 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 35 db 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
563       | 7ff7c8238380h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16i](n128,32i,16i)                                                             | Block128<short> alloc<short>(N128 w, int blocks, short t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 20 6a 2f c8 f7 7f 00 00 e8 34 ea 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 c5 da 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
564       | 7ff7c82383f0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32u](n128,32i,32u)                                                             | Block128<uint> alloc<uint>(N128 w, int blocks, uint t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 f8 22 18 c8 f7 7f 00 00 e8 c4 e9 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 55 da 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
565       | 7ff7c8238460h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32i](n128,32i,32i)                                                             | Block128<int> alloc<int>(N128 w, int blocks, int t)                                                           | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 48 5f 7d c7 f7 7f 00 00 e8 54 e9 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 e5 d9 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
566       | 7ff7c82384d0h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[64u](n128,32i,64u)                                                             | Block128<ulong> alloc<ulong>(N128 w, int blocks, ulong t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 e8 95 b9 c7 f7 7f 00 00 e8 e5 e8 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 76 d9 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
567       | 7ff7c8238540h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[64i](n128,32i,64i)                                                             | Block128<long> alloc<long>(N128 w, int blocks, long t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 a0 92 2f c8 f7 7f 00 00 e8 75 e8 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 06 d9 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
568       | 7ff7c82385b0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32f](n128,32i,32f)                                                             | Block128<float> alloc<float>(N128 w, int blocks, float t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 38 a6 c4 c7 f7 7f 00 00 e8 04 e8 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 95 d8 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
569       | 7ff7c8238620h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[64f](n128,32i,64f)                                                             | Block128<double> alloc<double>(N128 w, int blocks, double t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 40 a8 c4 c7 f7 7f 00 00 e8 95 e7 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 26 d8 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
570       | 7ff7c8238aa0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8u](n256,32i,8u)                                                               | Block256<byte> alloc<byte>(N256 w, int blocks, byte t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 05 49 63 d0 48 b9 10 ea 70 c7 f7 7f 00 00 e8 14 e3 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 a5 d3 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
571       | 7ff7c8238b10h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8i](n256,32i,8i)                                                               | Block256<sbyte> alloc<sbyte>(N256 w, int blocks, sbyte t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 05 49 63 d0 48 b9 98 f0 70 c7 f7 7f 00 00 e8 a4 e2 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 35 d3 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
572       | 7ff7c8238b80h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16u](n256,32i,16u)                                                             | Block256<ushort> alloc<ushort>(N256 w, int blocks, ushort t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 60 33 18 c8 f7 7f 00 00 e8 34 e2 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 c5 d2 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
573       | 7ff7c8238bf0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16i](n256,32i,16i)                                                             | Block256<short> alloc<short>(N256 w, int blocks, short t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 20 6a 2f c8 f7 7f 00 00 e8 c4 e1 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 55 d2 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
574       | 7ff7c8238c60h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32u](n256,32i,32u)                                                             | Block256<uint> alloc<uint>(N256 w, int blocks, uint t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 f8 22 18 c8 f7 7f 00 00 e8 54 e1 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 e5 d1 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
575       | 7ff7c8238cd0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32i](n256,32i,32i)                                                             | Block256<int> alloc<int>(N256 w, int blocks, int t)                                                           | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 48 5f 7d c7 f7 7f 00 00 e8 e4 e0 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 75 d1 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
576       | 7ff7c8238d40h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64u](n256,32i,64u)                                                             | Block256<ulong> alloc<ulong>(N256 w, int blocks, ulong t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 e8 95 b9 c7 f7 7f 00 00 e8 74 e0 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 05 d1 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
577       | 7ff7c8238db0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64i](n256,32i,64i)                                                             | Block256<long> alloc<long>(N256 w, int blocks, long t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 a0 92 2f c8 f7 7f 00 00 e8 04 e0 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 95 d0 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
578       | 7ff7c8238e20h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32f](n256,32i,32f)                                                             | Block256<float> alloc<float>(N256 w, int blocks, float t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 38 a6 c4 c7 f7 7f 00 00 e8 94 df 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 25 d0 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
579       | 7ff7c8238e90h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64f](n256,32i,64f)                                                             | Block256<double> alloc<double>(N256 w, int blocks, double t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 40 a8 c4 c7 f7 7f 00 00 e8 24 df 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 b5 cf 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
580       | 7ff7c8238f00h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8u](n512,32i,8u)                                                               | Block512<byte> alloc<byte>(N512 w, int blocks, byte t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 06 49 63 d0 48 b9 10 ea 70 c7 f7 7f 00 00 e8 b4 de 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 45 cf 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
581       | 7ff7c8238f70h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8i](n512,32i,8i)                                                               | Block512<sbyte> alloc<sbyte>(N512 w, int blocks, sbyte t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 06 49 63 d0 48 b9 98 f0 70 c7 f7 7f 00 00 e8 44 de 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 d5 ce 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
582       | 7ff7c8238fe0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16u](n512,32i,16u)                                                             | Block512<ushort> alloc<ushort>(N512 w, int blocks, ushort t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 05 49 63 d0 48 b9 60 33 18 c8 f7 7f 00 00 e8 d4 dd 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 65 ce 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
583       | 7ff7c8239050h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16i](n512,32i,16i)                                                             | Block512<short> alloc<short>(N512 w, int blocks, short t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 05 49 63 d0 48 b9 20 6a 2f c8 f7 7f 00 00 e8 64 dd 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 f5 cd 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
584       | 7ff7c82390c0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32u](n512,32i,32u)                                                             | Block512<uint> alloc<uint>(N512 w, int blocks, uint t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 f8 22 18 c8 f7 7f 00 00 e8 f4 dc 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 85 cd 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
585       | 7ff7c8239130h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32i](n512,32i,32i)                                                             | Block512<int> alloc<int>(N512 w, int blocks, int t)                                                           | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 48 5f 7d c7 f7 7f 00 00 e8 84 dc 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 15 cd 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
586       | 7ff7c82391a0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64u](n512,32i,64u)                                                             | Block512<ulong> alloc<ulong>(N512 w, int blocks, ulong t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 e8 95 b9 c7 f7 7f 00 00 e8 14 dc 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 a5 cc 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
587       | 7ff7c8239210h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64i](n512,32i,64i)                                                             | Block512<long> alloc<long>(N512 w, int blocks, long t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 a0 92 2f c8 f7 7f 00 00 e8 a4 db 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 35 cc 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
588       | 7ff7c8239280h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32f](n512,32i,32f)                                                             | Block512<float> alloc<float>(N512 w, int blocks, float t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 38 a6 c4 c7 f7 7f 00 00 e8 34 db 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 c5 cb 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
589       | 7ff7c82392f0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64f](n512,32i,64f)                                                             | Block512<double> alloc<double>(N512 w, int blocks, double t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 40 a8 c4 c7 f7 7f 00 00 e8 c4 da 02 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 55 cb 02 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
590       | 7ff7c8239360h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[8u](32i)                                                                 | int bitcount<byte>(int cellcount)                                                                             | 0f 1f 44 00 00 8b c1 c1 e0 03 c3
591       | 7ff7c8239380h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[8i](32i)                                                                 | int bitcount<sbyte>(int cellcount)                                                                            | 0f 1f 44 00 00 8b c1 c1 e0 03 c3
592       | 7ff7c82393a0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[16u](32i)                                                                | int bitcount<ushort>(int cellcount)                                                                           | 0f 1f 44 00 00 8b c1 c1 e0 04 c3
593       | 7ff7c82393c0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[16i](32i)                                                                | int bitcount<short>(int cellcount)                                                                            | 0f 1f 44 00 00 8b c1 c1 e0 04 c3
594       | 7ff7c82393e0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[32u](32i)                                                                | int bitcount<uint>(int cellcount)                                                                             | 0f 1f 44 00 00 8b c1 c1 e0 05 c3
595       | 7ff7c8239400h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[32i](32i)                                                                | int bitcount<int>(int cellcount)                                                                              | 0f 1f 44 00 00 8b c1 c1 e0 05 c3
596       | 7ff7c8239420h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[64u](32i)                                                                | int bitcount<ulong>(int cellcount)                                                                            | 0f 1f 44 00 00 8b c1 c1 e0 06 c3
597       | 7ff7c8239440h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[64i](32i)                                                                | int bitcount<long>(int cellcount)                                                                             | 0f 1f 44 00 00 8b c1 c1 e0 06 c3
598       | 7ff7c8239460h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[32f](32i)                                                                | int bitcount<float>(int cellcount)                                                                            | 0f 1f 44 00 00 8b c1 c1 e0 05 c3
599       | 7ff7c8239480h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[64f](32i)                                                                | int bitcount<double>(int cellcount)                                                                           | 0f 1f 44 00 00 8b c1 c1 e0 06 c3
600       | 7ff7c82398b0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b16x8u~in)                                                      | void broadcast<byte>(byte data, in Block16<byte> dst)                                                         | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 90 60 ac c7 f7 7f 00 00 48 ff e0
601       | 7ff7c82398e0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b16x8i~in)                                                      | void broadcast<sbyte>(sbyte data, in Block16<sbyte> dst)                                                      | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 28 21 22 c8 f7 7f 00 00 48 ff e0
602       | 7ff7c8239910h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b16x16u~in)                                                   | void broadcast<ushort>(ushort data, in Block16<ushort> dst)                                                   | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 90 59 ac c7 f7 7f 00 00 48 ff e0
603       | 7ff7c8239940h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b16x16i~in)                                                   | void broadcast<short>(short data, in Block16<short> dst)                                                      | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 b0 22 22 c8 f7 7f 00 00 48 ff e0
604       | 7ff7c8239970h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b32x8u~in)                                                      | void broadcast<byte>(byte data, in Block32<byte> dst)                                                         | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 90 60 ac c7 f7 7f 00 00 48 ff e0
605       | 7ff7c82399a0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b32x8i~in)                                                      | void broadcast<sbyte>(sbyte data, in Block32<sbyte> dst)                                                      | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 28 21 22 c8 f7 7f 00 00 48 ff e0
606       | 7ff7c82399d0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b32x16u~in)                                                   | void broadcast<ushort>(ushort data, in Block32<ushort> dst)                                                   | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 90 59 ac c7 f7 7f 00 00 48 ff e0
607       | 7ff7c8239a00h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b32x16i~in)                                                   | void broadcast<short>(short data, in Block32<short> dst)                                                      | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 b0 22 22 c8 f7 7f 00 00 48 ff e0
608       | 7ff7c8239a30h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32u](32u,b32x32u~in)                                                   | void broadcast<uint>(uint data, in Block32<uint> dst)                                                         | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 a0 5b ac c7 f7 7f 00 00 48 ff e0
609       | 7ff7c8239a60h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32i](32i,b32x32i~in)                                                   | void broadcast<int>(int data, in Block32<int> dst)                                                            | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 30 1d ab c7 f7 7f 00 00 48 ff e0
610       | 7ff7c8239a90h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32f](32f,b32x32f~in)                                                   | void broadcast<float>(float data, in Block32<float> dst)                                                      | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 50 29 22 c8 f7 7f 00 00 48 ff e0
611       | 7ff7c8239ed0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b64x8u~in)                                                      | void broadcast<byte>(byte data, in Block64<byte> dst)                                                         | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 90 60 ac c7 f7 7f 00 00 48 ff e0
612       | 7ff7c8239f00h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b64x8i~in)                                                      | void broadcast<sbyte>(sbyte data, in Block64<sbyte> dst)                                                      | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 28 21 22 c8 f7 7f 00 00 48 ff e0
613       | 7ff7c8239f30h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b64x16u~in)                                                   | void broadcast<ushort>(ushort data, in Block64<ushort> dst)                                                   | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 90 59 ac c7 f7 7f 00 00 48 ff e0
614       | 7ff7c8239f60h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b64x16i~in)                                                   | void broadcast<short>(short data, in Block64<short> dst)                                                      | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 b0 22 22 c8 f7 7f 00 00 48 ff e0
615       | 7ff7c8239f90h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32u](32u,b64x32u~in)                                                   | void broadcast<uint>(uint data, in Block64<uint> dst)                                                         | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 a0 5b ac c7 f7 7f 00 00 48 ff e0
616       | 7ff7c8239fc0h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32i](32i,b64x32i~in)                                                   | void broadcast<int>(int data, in Block64<int> dst)                                                            | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 30 1d ab c7 f7 7f 00 00 48 ff e0
617       | 7ff7c8239ff0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64u](64u,b64x64u~in)                                                   | void broadcast<ulong>(ulong data, in Block64<ulong> dst)                                                      | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 a0 5e ac c7 f7 7f 00 00 48 ff e0
618       | 7ff7c823a020h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64i](64i,b64x64i~in)                                                   | void broadcast<long>(long data, in Block64<long> dst)                                                         | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 58 34 22 c8 f7 7f 00 00 48 ff e0
619       | 7ff7c823a050h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32f](32f,b64x32f~in)                                                   | void broadcast<float>(float data, in Block64<float> dst)                                                      | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 50 29 22 c8 f7 7f 00 00 48 ff e0
620       | 7ff7c823a080h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64f](64f,b64x64f~in)                                                   | void broadcast<double>(double data, in Block64<double> dst)                                                   | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 98 36 22 c8 f7 7f 00 00 48 ff e0
621       | 7ff7c823a0b0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b128x8u~in)                                                     | void broadcast<byte>(byte data, in Block128<byte> dst)                                                        | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 90 60 ac c7 f7 7f 00 00 48 ff e0
622       | 7ff7c823a0e0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b128x8i~in)                                                     | void broadcast<sbyte>(sbyte data, in Block128<sbyte> dst)                                                     | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 28 21 22 c8 f7 7f 00 00 48 ff e0
623       | 7ff7c823a110h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b128x16u~in)                                                  | void broadcast<ushort>(ushort data, in Block128<ushort> dst)                                                  | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 90 59 ac c7 f7 7f 00 00 48 ff e0
624       | 7ff7c823a140h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b128x16i~in)                                                  | void broadcast<short>(short data, in Block128<short> dst)                                                     | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 b0 22 22 c8 f7 7f 00 00 48 ff e0
625       | 7ff7c823a170h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32u](32u,b128x32u~in)                                                  | void broadcast<uint>(uint data, in Block128<uint> dst)                                                        | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 a0 5b ac c7 f7 7f 00 00 48 ff e0
626       | 7ff7c823a1a0h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32i](32i,b128x32i~in)                                                  | void broadcast<int>(int data, in Block128<int> dst)                                                           | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 30 1d ab c7 f7 7f 00 00 48 ff e0
627       | 7ff7c823a5d0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64u](64u,b128x64u~in)                                                  | void broadcast<ulong>(ulong data, in Block128<ulong> dst)                                                     | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 a0 5e ac c7 f7 7f 00 00 48 ff e0
628       | 7ff7c823a600h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64i](64i,b128x64i~in)                                                  | void broadcast<long>(long data, in Block128<long> dst)                                                        | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 58 34 22 c8 f7 7f 00 00 48 ff e0
629       | 7ff7c823a630h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32f](32f,b128x32f~in)                                                  | void broadcast<float>(float data, in Block128<float> dst)                                                     | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 50 29 22 c8 f7 7f 00 00 48 ff e0
630       | 7ff7c823a660h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64f](64f,b128x64f~in)                                                  | void broadcast<double>(double data, in Block128<double> dst)                                                  | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 98 36 22 c8 f7 7f 00 00 48 ff e0
631       | 7ff7c823a690h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b256x8u~in)                                                     | void broadcast<byte>(byte data, in Block256<byte> dst)                                                        | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 90 60 ac c7 f7 7f 00 00 48 ff e0
632       | 7ff7c823a6c0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b256x8i~in)                                                     | void broadcast<sbyte>(sbyte data, in Block256<sbyte> dst)                                                     | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 28 21 22 c8 f7 7f 00 00 48 ff e0
633       | 7ff7c823a6f0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b256x16u~in)                                                  | void broadcast<ushort>(ushort data, in Block256<ushort> dst)                                                  | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 90 59 ac c7 f7 7f 00 00 48 ff e0
634       | 7ff7c823a720h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b256x16i~in)                                                  | void broadcast<short>(short data, in Block256<short> dst)                                                     | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 b0 22 22 c8 f7 7f 00 00 48 ff e0
635       | 7ff7c823a750h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32u](32u,b256x32u~in)                                                  | void broadcast<uint>(uint data, in Block256<uint> dst)                                                        | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 a0 5b ac c7 f7 7f 00 00 48 ff e0
636       | 7ff7c823a780h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32i](32i,b256x32i~in)                                                  | void broadcast<int>(int data, in Block256<int> dst)                                                           | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 30 1d ab c7 f7 7f 00 00 48 ff e0
637       | 7ff7c823a7b0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64u](64u,b256x64u~in)                                                  | void broadcast<ulong>(ulong data, in Block256<ulong> dst)                                                     | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 a0 5e ac c7 f7 7f 00 00 48 ff e0
638       | 7ff7c823a7e0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64i](64i,b256x64i~in)                                                  | void broadcast<long>(long data, in Block256<long> dst)                                                        | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 58 34 22 c8 f7 7f 00 00 48 ff e0
639       | 7ff7c823a810h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32f](32f,b256x32f~in)                                                  | void broadcast<float>(float data, in Block256<float> dst)                                                     | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 50 29 22 c8 f7 7f 00 00 48 ff e0
640       | 7ff7c823a840h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64f](64f,b256x64f~in)                                                  | void broadcast<double>(double data, in Block256<double> dst)                                                  | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 98 36 22 c8 f7 7f 00 00 48 ff e0
641       | 7ff7c823ac80h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b512x8u~in)                                                     | void broadcast<byte>(byte data, in Block512<byte> dst)                                                        | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 90 60 ac c7 f7 7f 00 00 48 ff e0
642       | 7ff7c823acb0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b512x8i~in)                                                     | void broadcast<sbyte>(sbyte data, in Block512<sbyte> dst)                                                     | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 28 21 22 c8 f7 7f 00 00 48 ff e0
643       | 7ff7c823ace0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b512x16u~in)                                                  | void broadcast<ushort>(ushort data, in Block512<ushort> dst)                                                  | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 90 59 ac c7 f7 7f 00 00 48 ff e0
644       | 7ff7c823ad10h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b512x16i~in)                                                  | void broadcast<short>(short data, in Block512<short> dst)                                                     | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 b0 22 22 c8 f7 7f 00 00 48 ff e0
645       | 7ff7c823ad40h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32u](32u,b512x32u~in)                                                  | void broadcast<uint>(uint data, in Block512<uint> dst)                                                        | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 a0 5b ac c7 f7 7f 00 00 48 ff e0
646       | 7ff7c823ad70h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32i](32i,b512x32i~in)                                                  | void broadcast<int>(int data, in Block512<int> dst)                                                           | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 30 1d ab c7 f7 7f 00 00 48 ff e0
647       | 7ff7c823ada0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64u](64u,b512x64u~in)                                                  | void broadcast<ulong>(ulong data, in Block512<ulong> dst)                                                     | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 a0 5e ac c7 f7 7f 00 00 48 ff e0
648       | 7ff7c823add0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64i](64i,b512x64i~in)                                                  | void broadcast<long>(long data, in Block512<long> dst)                                                        | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 58 34 22 c8 f7 7f 00 00 48 ff e0
649       | 7ff7c823ae00h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32f](32f,b512x32f~in)                                                  | void broadcast<float>(float data, in Block512<float> dst)                                                     | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 50 29 22 c8 f7 7f 00 00 48 ff e0
650       | 7ff7c823ae30h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64f](64f,b512x64f~in)                                                  | void broadcast<double>(double data, in Block512<double> dst)                                                  | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 98 36 22 c8 f7 7f 00 00 48 ff e0
651       | 7ff7c823ae60h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[8u](n16,32i)                                                           | Block16<byte> cellalloc<byte>(N16 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 3d c2 ff ff 48 8b c6 48 83 c4 20 5e c3
652       | 7ff7c823aec0h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[8i](n16,32i)                                                           | Block16<sbyte> cellalloc<sbyte>(N16 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 4d c2 ff ff 48 8b c6 48 83 c4 20 5e c3
653       | 7ff7c823af20h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[16u](n16,32i)                                                          | Block16<ushort> cellalloc<ushort>(N16 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 67 c2 ff ff 48 8b c6 48 83 c4 20 5e c3
654       | 7ff7c823af80h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[16i](n16,32i)                                                          | Block16<short> cellalloc<short>(N16 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 77 c2 ff ff 48 8b c6 48 83 c4 20 5e c3
655       | 7ff7c823b3e0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8u](n32,32i)                                                           | Block32<byte> cellalloc<byte>(N32 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 86 c2 ff ff 48 8b c6 48 83 c4 20 5e c3
656       | 7ff7c823b450h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8i](n32,32i)                                                           | Block32<sbyte> cellalloc<sbyte>(N32 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 86 c2 ff ff 48 8b c6 48 83 c4 20 5e c3
657       | 7ff7c823b4c0h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[16u](n32,32i)                                                          | Block32<ushort> cellalloc<ushort>(N32 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 8d c2 ff ff 48 8b c6 48 83 c4 20 5e c3
658       | 7ff7c823b520h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[16i](n32,32i)                                                          | Block32<short> cellalloc<short>(N32 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 9d c2 ff ff 48 8b c6 48 83 c4 20 5e c3
659       | 7ff7c823b580h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[32u](n32,32i)                                                          | Block32<uint> cellalloc<uint>(N32 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 b7 c2 ff ff 48 8b c6 48 83 c4 20 5e c3
660       | 7ff7c823b5e0h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[32i](n32,32i)                                                          | Block32<int> cellalloc<int>(N32 n, int cellcount)                                                             | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 c7 c2 ff ff 48 8b c6 48 83 c4 20 5e c3
661       | 7ff7c823b640h   | 70      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[32f](n32,32i)                                                          | Block32<float> cellalloc<float>(N32 n, int cellcount)                                                         | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 d3 c2 ff ff 48 8b c6 48 83 c4 20 5e c3
662       | 7ff7c823b6a0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8u](n64,32i)                                                           | Block64<byte> cellalloc<byte>(N64 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 d6 c2 ff ff 48 8b c6 48 83 c4 20 5e c3
663       | 7ff7c823b710h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8i](n64,32i)                                                           | Block64<sbyte> cellalloc<sbyte>(N64 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 d6 c2 ff ff 48 8b c6 48 83 c4 20 5e c3
664       | 7ff7c823b780h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16u](n64,32i)                                                          | Block64<ushort> cellalloc<ushort>(N64 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 d6 c2 ff ff 48 8b c6 48 83 c4 20 5e c3
665       | 7ff7c823b7f0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16i](n64,32i)                                                          | Block64<short> cellalloc<short>(N64 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 d6 c2 ff ff 48 8b c6 48 83 c4 20 5e c3
666       | 7ff7c823b860h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[32u](n64,32i)                                                          | Block64<uint> cellalloc<uint>(N64 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 dd c2 ff ff 48 8b c6 48 83 c4 20 5e c3
667       | 7ff7c823b8c0h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[32i](n64,32i)                                                          | Block64<int> cellalloc<int>(N64 n, int cellcount)                                                             | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 ed c2 ff ff 48 8b c6 48 83 c4 20 5e c3
668       | 7ff7c823b920h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[64u](n64,32i)                                                          | Block64<ulong> cellalloc<ulong>(N64 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 07 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
669       | 7ff7c823b980h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[64i](n64,32i)                                                          | Block64<long> cellalloc<long>(N64 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 17 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
670       | 7ff7c823b9e0h   | 80      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[32f](n64,32i)                                                          | Block64<float> cellalloc<float>(N64 n, int cellcount)                                                         | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 19 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
671       | 7ff7c823ba50h   | 70      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[64f](n64,32i)                                                          | Block64<double> cellalloc<double>(N64 n, int cellcount)                                                       | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 33 c7 ff ff 48 8b c6 48 83 c4 20 5e c3
672       | 7ff7c823bec0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8u](n128,32i)                                                          | Block128<byte> cellalloc<byte>(N128 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 26 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
673       | 7ff7c823bf30h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8i](n128,32i)                                                          | Block128<sbyte> cellalloc<sbyte>(N128 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 26 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
674       | 7ff7c823bfa0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16u](n128,32i)                                                         | Block128<ushort> cellalloc<ushort>(N128 n, int cellcount)                                                     | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 26 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
675       | 7ff7c823c010h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16i](n128,32i)                                                         | Block128<short> cellalloc<short>(N128 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 26 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
676       | 7ff7c823c080h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32u](n128,32i)                                                         | Block128<uint> cellalloc<uint>(N128 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 26 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
677       | 7ff7c823c0f0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32i](n128,32i)                                                         | Block128<int> cellalloc<int>(N128 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 26 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
678       | 7ff7c823c160h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[64u](n128,32i)                                                         | Block128<ulong> cellalloc<ulong>(N128 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 2d c3 ff ff 48 8b c6 48 83 c4 20 5e c3
679       | 7ff7c823c1c0h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[64i](n128,32i)                                                         | Block128<long> cellalloc<long>(N128 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 3d c3 ff ff 48 8b c6 48 83 c4 20 5e c3
680       | 7ff7c823c220h   | 87      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[32f](n128,32i)                                                         | Block128<float> cellalloc<float>(N128 n, int cellcount)                                                       | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 42 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
681       | 7ff7c823c290h   | 80      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[64f](n128,32i)                                                         | Block128<double> cellalloc<double>(N128 n, int cellcount)                                                     | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 49 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
682       | 7ff7c823c300h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8u](n256,32i)                                                          | Block256<byte> cellalloc<byte>(N256 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 1f 41 03 c8 c1 f9 05 41 8b d0 c1 fa 1f 83 e2 1f 41 03 d0 83 e2 e0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 56 c7 ff ff 48 8b c6 48 83 c4 20 5e c3
683       | 7ff7c823c370h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8i](n256,32i)                                                          | Block256<sbyte> cellalloc<sbyte>(N256 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 1f 41 03 c8 c1 f9 05 41 8b d0 c1 fa 1f 83 e2 1f 41 03 d0 83 e2 e0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 56 c7 ff ff 48 8b c6 48 83 c4 20 5e c3
684       | 7ff7c823c3e0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16u](n256,32i)                                                         | Block256<ushort> cellalloc<ushort>(N256 n, int cellcount)                                                     | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 56 c7 ff ff 48 8b c6 48 83 c4 20 5e c3
685       | 7ff7c823c450h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16i](n256,32i)                                                         | Block256<short> cellalloc<short>(N256 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 56 c7 ff ff 48 8b c6 48 83 c4 20 5e c3
686       | 7ff7c823c4c0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32u](n256,32i)                                                         | Block256<uint> cellalloc<uint>(N256 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 56 c7 ff ff 48 8b c6 48 83 c4 20 5e c3
687       | 7ff7c823c530h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32i](n256,32i)                                                         | Block256<int> cellalloc<int>(N256 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 56 c7 ff ff 48 8b c6 48 83 c4 20 5e c3
688       | 7ff7c823c9a0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[64u](n256,32i)                                                         | Block256<ulong> cellalloc<ulong>(N256 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 56 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
689       | 7ff7c823ca10h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[64i](n256,32i)                                                         | Block256<long> cellalloc<long>(N256 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 56 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
690       | 7ff7c823ca80h   | 87      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[32f](n256,32i)                                                         | Block256<float> cellalloc<float>(N256 n, int cellcount)                                                       | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 52 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
691       | 7ff7c823caf0h   | 87      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[64f](n256,32i)                                                         | Block256<double> cellalloc<double>(N256 n, int cellcount)                                                     | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 52 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
692       | 7ff7c823cb60h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8u](n512,32i)                                                          | Block512<byte> cellalloc<byte>(N512 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 3f 41 03 c8 c1 f9 06 41 8b d0 c1 fa 1f 83 e2 3f 41 03 d0 83 e2 c0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 56 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
693       | 7ff7c823cbd0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8i](n512,32i)                                                          | Block512<sbyte> cellalloc<sbyte>(N512 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 3f 41 03 c8 c1 f9 06 41 8b d0 c1 fa 1f 83 e2 3f 41 03 d0 83 e2 c0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 56 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
694       | 7ff7c823cc40h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16u](n512,32i)                                                         | Block512<ushort> cellalloc<ushort>(N512 n, int cellcount)                                                     | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 1f 41 03 c8 c1 f9 05 41 8b d0 c1 fa 1f 83 e2 1f 41 03 d0 83 e2 e0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 56 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
695       | 7ff7c823ccb0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16i](n512,32i)                                                         | Block512<short> cellalloc<short>(N512 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 1f 41 03 c8 c1 f9 05 41 8b d0 c1 fa 1f 83 e2 1f 41 03 d0 83 e2 e0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 56 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
696       | 7ff7c823cd20h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32u](n512,32i)                                                         | Block512<uint> cellalloc<uint>(N512 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 56 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
697       | 7ff7c823cd90h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32i](n512,32i)                                                         | Block512<int> cellalloc<int>(N512 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 56 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
698       | 7ff7c823ce00h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[64u](n512,32i)                                                         | Block512<ulong> cellalloc<ulong>(N512 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 56 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
699       | 7ff7c823ce70h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[64i](n512,32i)                                                         | Block512<long> cellalloc<long>(N512 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 56 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
700       | 7ff7c823cee0h   | 87      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[32f](n512,32i)                                                         | Block512<float> cellalloc<float>(N512 n, int cellcount)                                                       | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 52 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
701       | 7ff7c823cf50h   | 87      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[64f](n512,32i)                                                         | Block512<double> cellalloc<double>(N512 n, int cellcount)                                                     | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 52 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
702       | 7ff7c823cfc0h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[8u](n8,32i)                                                          | int cellblocks<byte>(N8 n, int blocks)                                                                        | 0f 1f 44 00 00 8b c2 c3
703       | 7ff7c823cfe0h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[8i](n8,32i)                                                          | int cellblocks<sbyte>(N8 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 c3
704       | 7ff7c823d000h   | 10      | CTC_RET_Zx3         | hex://blocks/api?cellblocks#cellblocks_g[16u](n8,32i)                                                         | int cellblocks<ushort>(N8 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 d1 e0 c3
705       | 7ff7c823d020h   | 10      | CTC_RET_Zx3         | hex://blocks/api?cellblocks#cellblocks_g[16i](n8,32i)                                                         | int cellblocks<short>(N8 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 d1 e0 c3
706       | 7ff7c823d040h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[32u](n8,32i)                                                         | int cellblocks<uint>(N8 n, int blocks)                                                                        | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
707       | 7ff7c823d060h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[32i](n8,32i)                                                         | int cellblocks<int>(N8 n, int blocks)                                                                         | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
708       | 7ff7c823d080h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[64u](n8,32i)                                                         | int cellblocks<ulong>(N8 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
709       | 7ff7c823d0a0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[64i](n8,32i)                                                         | int cellblocks<long>(N8 n, int blocks)                                                                        | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
710       | 7ff7c823d0c0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[32f](n8,32i)                                                         | int cellblocks<float>(N8 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
711       | 7ff7c823d0e0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[64f](n8,32i)                                                         | int cellblocks<double>(N8 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
712       | 7ff7c823d100h   | 10      | CTC_RET_Zx3         | hex://blocks/api?cellblocks#cellblocks_g[8u](n16,32i)                                                         | int cellblocks<byte>(N16 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 d1 e0 c3
713       | 7ff7c823d120h   | 10      | CTC_RET_Zx3         | hex://blocks/api?cellblocks#cellblocks_g[8i](n16,32i)                                                         | int cellblocks<sbyte>(N16 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 d1 e0 c3
714       | 7ff7c823d140h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[16u](n16,32i)                                                        | int cellblocks<ushort>(N16 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c3
715       | 7ff7c823d160h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[16i](n16,32i)                                                        | int cellblocks<short>(N16 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c3
716       | 7ff7c823d180h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[32u](n16,32i)                                                        | int cellblocks<uint>(N16 n, int blocks)                                                                       | 0f 1f 44 00 00 33 c0 c3
717       | 7ff7c823d1a0h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[32i](n16,32i)                                                        | int cellblocks<int>(N16 n, int blocks)                                                                        | 0f 1f 44 00 00 33 c0 c3
718       | 7ff7c823d1c0h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[64u](n16,32i)                                                        | int cellblocks<ulong>(N16 n, int blocks)                                                                      | 0f 1f 44 00 00 33 c0 c3
719       | 7ff7c823d1e0h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[64i](n16,32i)                                                        | int cellblocks<long>(N16 n, int blocks)                                                                       | 0f 1f 44 00 00 33 c0 c3
720       | 7ff7c823d200h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[32f](n16,32i)                                                        | int cellblocks<float>(N16 n, int blocks)                                                                      | 0f 1f 44 00 00 33 c0 c3
721       | 7ff7c823d630h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[64f](n16,32i)                                                        | int cellblocks<double>(N16 n, int blocks)                                                                     | 0f 1f 44 00 00 33 c0 c3
722       | 7ff7c823d650h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[8u](n32,32i)                                                         | int cellblocks<byte>(N32 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
723       | 7ff7c823d670h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[8i](n32,32i)                                                         | int cellblocks<sbyte>(N32 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
724       | 7ff7c823d690h   | 10      | CTC_RET_Zx3         | hex://blocks/api?cellblocks#cellblocks_g[16u](n32,32i)                                                        | int cellblocks<ushort>(N32 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 d1 e0 c3
725       | 7ff7c823d6b0h   | 10      | CTC_RET_Zx3         | hex://blocks/api?cellblocks#cellblocks_g[16i](n32,32i)                                                        | int cellblocks<short>(N32 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 d1 e0 c3
726       | 7ff7c823d6d0h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[32u](n32,32i)                                                        | int cellblocks<uint>(N32 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 c3
727       | 7ff7c823d6f0h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[32i](n32,32i)                                                        | int cellblocks<int>(N32 n, int blocks)                                                                        | 0f 1f 44 00 00 8b c2 c3
728       | 7ff7c823d710h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[64u](n32,32i)                                                        | int cellblocks<ulong>(N32 n, int blocks)                                                                      | 0f 1f 44 00 00 33 c0 c3
729       | 7ff7c823d730h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[64i](n32,32i)                                                        | int cellblocks<long>(N32 n, int blocks)                                                                       | 0f 1f 44 00 00 33 c0 c3
730       | 7ff7c823d750h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[32f](n32,32i)                                                        | int cellblocks<float>(N32 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c3
731       | 7ff7c823d770h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[64f](n32,32i)                                                        | int cellblocks<double>(N32 n, int blocks)                                                                     | 0f 1f 44 00 00 33 c0 c3
732       | 7ff7c823d790h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[8u](n64,32i)                                                         | int cellblocks<byte>(N64 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
733       | 7ff7c823d7b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[8i](n64,32i)                                                         | int cellblocks<sbyte>(N64 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
734       | 7ff7c823d7d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[16u](n64,32i)                                                        | int cellblocks<ushort>(N64 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
735       | 7ff7c823d7f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[16i](n64,32i)                                                        | int cellblocks<short>(N64 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
736       | 7ff7c823d810h   | 10      | CTC_RET_Zx3         | hex://blocks/api?cellblocks#cellblocks_g[32u](n64,32i)                                                        | int cellblocks<uint>(N64 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 d1 e0 c3
737       | 7ff7c823d830h   | 10      | CTC_RET_Zx3         | hex://blocks/api?cellblocks#cellblocks_g[32i](n64,32i)                                                        | int cellblocks<int>(N64 n, int blocks)                                                                        | 0f 1f 44 00 00 8b c2 d1 e0 c3
738       | 7ff7c823d850h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[64u](n64,32i)                                                        | int cellblocks<ulong>(N64 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c3
739       | 7ff7c823d870h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[64i](n64,32i)                                                        | int cellblocks<long>(N64 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 c3
740       | 7ff7c823d890h   | 10      | CTC_RET_Zx3         | hex://blocks/api?cellblocks#cellblocks_g[32f](n64,32i)                                                        | int cellblocks<float>(N64 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 d1 e0 c3
741       | 7ff7c823d8b0h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[64f](n64,32i)                                                        | int cellblocks<double>(N64 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c3
742       | 7ff7c823d8d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[8u](n128,32i)                                                        | int cellblocks<byte>(N128 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
743       | 7ff7c823d8f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[8i](n128,32i)                                                        | int cellblocks<sbyte>(N128 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
744       | 7ff7c823d910h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[16u](n128,32i)                                                       | int cellblocks<ushort>(N128 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
745       | 7ff7c823d930h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[16i](n128,32i)                                                       | int cellblocks<short>(N128 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
746       | 7ff7c823d950h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[32u](n128,32i)                                                       | int cellblocks<uint>(N128 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
747       | 7ff7c823d970h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[32i](n128,32i)                                                       | int cellblocks<int>(N128 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
748       | 7ff7c823d990h   | 10      | CTC_RET_Zx3         | hex://blocks/api?cellblocks#cellblocks_g[64u](n128,32i)                                                       | int cellblocks<ulong>(N128 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 d1 e0 c3
749       | 7ff7c823d9b0h   | 10      | CTC_RET_Zx3         | hex://blocks/api?cellblocks#cellblocks_g[64i](n128,32i)                                                       | int cellblocks<long>(N128 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 d1 e0 c3
750       | 7ff7c823d9d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[32f](n128,32i)                                                       | int cellblocks<float>(N128 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
751       | 7ff7c823d9f0h   | 10      | CTC_RET_Zx3         | hex://blocks/api?cellblocks#cellblocks_g[64f](n128,32i)                                                       | int cellblocks<double>(N128 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 d1 e0 c3
752       | 7ff7c823da10h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[8u](n256,32i)                                                        | int cellblocks<byte>(N256 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 05 c3
753       | 7ff7c823da30h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[8i](n256,32i)                                                        | int cellblocks<sbyte>(N256 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 05 c3
754       | 7ff7c823da50h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[16u](n256,32i)                                                       | int cellblocks<ushort>(N256 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
755       | 7ff7c823da70h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[16i](n256,32i)                                                       | int cellblocks<short>(N256 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
756       | 7ff7c823da90h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[32u](n256,32i)                                                       | int cellblocks<uint>(N256 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
757       | 7ff7c823dab0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[32i](n256,32i)                                                       | int cellblocks<int>(N256 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
758       | 7ff7c823dad0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[64u](n256,32i)                                                       | int cellblocks<ulong>(N256 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
759       | 7ff7c823daf0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[64i](n256,32i)                                                       | int cellblocks<long>(N256 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
760       | 7ff7c823db10h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[32f](n256,32i)                                                       | int cellblocks<float>(N256 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
761       | 7ff7c823db30h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[64f](n256,32i)                                                       | int cellblocks<double>(N256 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
762       | 7ff7c823db50h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[8u](n512,32i)                                                        | int cellblocks<byte>(N512 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 06 c3
763       | 7ff7c823db70h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[8i](n512,32i)                                                        | int cellblocks<sbyte>(N512 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 06 c3
764       | 7ff7c823db90h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[16u](n512,32i)                                                       | int cellblocks<ushort>(N512 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 05 c3
765       | 7ff7c823dbb0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[16i](n512,32i)                                                       | int cellblocks<short>(N512 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 05 c3
766       | 7ff7c823dbd0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[32u](n512,32i)                                                       | int cellblocks<uint>(N512 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
767       | 7ff7c823dbf0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[32i](n512,32i)                                                       | int cellblocks<int>(N512 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
768       | 7ff7c823dc10h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[64u](n512,32i)                                                       | int cellblocks<ulong>(N512 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
769       | 7ff7c823dc30h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[64i](n512,32i)                                                       | int cellblocks<long>(N512 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
770       | 7ff7c823dc50h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[32f](n512,32i)                                                       | int cellblocks<float>(N512 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
771       | 7ff7c823dc70h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[64f](n512,32i)                                                       | int cellblocks<double>(N512 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
772       | 7ff7c823dc90h   | 113     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n128,64u,64u)                                                                   | Block128<ulong> cells(N128 n, ulong x0, ulong x1)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 49 8b f9 48 b9 e8 95 b9 c7 f7 7f 00 00 ba 02 00 00 00 e8 22 91 02 5f 48 89 70 10 48 89 78 18 48 83 c0 10 ba 02 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 9c 81 02 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
773       | 7ff7c823dd20h   | 448     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n256,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u)| Block256<byte> cells(N256 n, byte x0, byte x1, byte x2, byte x3, byte x4, byte x5, byte x6, byte x7, byte x8, byte x9, byte xA, byte xB, byte xC, byte xD, byte xE, byte xF, byte x10, byte x11, byte x12, byte x13, byte x14, byte x15, byte x16, byte x17, byte x18, byte x19, byte x1A, byte x1B, byte x1C, byte x1D, byte x1E, byte x1F)| 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 89 44 24 38 48 8b d9 41 8b f0 41 8b f9 48 b9 10 ea 70 c7 f7 7f 00 00 ba 20 00 00 00 e8 8d 90 02 5f 40 88 70 10 40 88 78 11 8b b4 24 80 00 00 00 40 88 70 12 8b b4 24 88 00 00 00 40 88 70 13 8b b4 24 90 00 00 00 40 88 70 14 8b b4 24 98 00 00 00 40 88 70 15 8b b4 24 a0 00 00 00 40 88 70 16 8b b4 24 a8 00 00 00 40 88 70 17 8b b4 24 b0 00 00 00 40 88 70 18 8b b4 24 b8 00 00 00 40 88 70 19 8b b4 24 c0 00 00 00 40 88 70 1a 8b b4 24 c8 00 00 00 40 88 70 1b 8b b4 24 d0 00 00 00 40 88 70 1c 8b b4 24 d8 00 00 00 40 88 70 1d 8b b4 24 e0 00 00 00 40 88 70 1e 8b b4 24 e8 00 00 00 40 88 70 1f 8b b4 24 f0 00 00 00 40 88 70 20 8b b4 24 f8 00 00 00 40 88 70 21 8b b4 24 00 01 00 00 40 88 70 22 8b b4 24 08 01 00 00 40 88 70 23 8b b4 24 10 01 00 00 40 88 70 24 8b b4 24 18 01 00 00 40 88 70 25 8b b4 24 20 01 00 00 40 88 70 26 8b b4 24 28 01 00 00 40 88 70 27 8b b4 24 30 01 00 00 40 88 70 28 8b b4 24 38 01 00 00 40 88 70 29 8b b4 24 40 01 00 00 40 88 70 2a 8b b4 24 48 01 00 00 40 88 70 2b 8b b4 24 50 01 00 00 40 88 70 2c 8b b4 24 58 01 00 00 40 88 70 2d 8b b4 24 60 01 00 00 40 88 70 2e 8b b4 24 68 01 00 00 40 88 70 2f 48 83 c0 10 ba 20 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 bd 7f 02 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
774       | 7ff7c823df00h   | 272     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n256,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u)           | Block256<ushort> cells(N256 n, ushort x0, ushort x1, ushort x2, ushort x3, ushort x4, ushort x5, ushort x6, ushort x7, ushort x8, ushort x9, ushort xA, ushort xB, ushort xC, ushort xD, ushort xE, ushort xF)| 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 89 44 24 38 48 8b d9 41 8b f0 41 8b f9 48 b9 60 33 18 c8 f7 7f 00 00 ba 10 00 00 00 e8 ad 8e 02 5f 66 89 70 10 66 89 78 12 8b b4 24 80 00 00 00 66 89 70 14 8b b4 24 88 00 00 00 66 89 70 16 8b b4 24 90 00 00 00 66 89 70 18 8b b4 24 98 00 00 00 66 89 70 1a 8b b4 24 a0 00 00 00 66 89 70 1c 8b b4 24 a8 00 00 00 66 89 70 1e 8b b4 24 b0 00 00 00 66 89 70 20 8b b4 24 b8 00 00 00 66 89 70 22 8b b4 24 c0 00 00 00 66 89 70 24 8b b4 24 c8 00 00 00 66 89 70 26 8b b4 24 d0 00 00 00 66 89 70 28 8b b4 24 d8 00 00 00 66 89 70 2a 8b b4 24 e0 00 00 00 66 89 70 2c 8b b4 24 e8 00 00 00 66 89 70 2e 48 83 c0 10 ba 10 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 8d 7e 02 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
775       | 7ff7c823e030h   | 171     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n256,32u,32u,32u,32u,32u,32u,32u,32u)                                           | Block256<uint> cells(N256 n, uint x0, uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7)          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 f8 22 18 c8 f7 7f 00 00 ba 08 00 00 00 e8 82 8d 02 5f 89 70 10 89 78 14 8b b4 24 80 00 00 00 89 70 18 8b b4 24 88 00 00 00 89 70 1c 8b b4 24 90 00 00 00 89 70 20 8b b4 24 98 00 00 00 89 70 24 8b b4 24 a0 00 00 00 89 70 28 8b b4 24 a8 00 00 00 89 70 2c 48 83 c0 10 ba 08 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 c2 7d 02 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
776       | 7ff7c823e100h   | 137     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n256,64u,64u,64u,64u)                                                           | Block256<ulong> cells(N256 n, ulong x0, ulong x1, ulong x2, ulong x3)                                         | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 49 8b f9 48 b9 e8 95 b9 c7 f7 7f 00 00 ba 04 00 00 00 e8 b2 8c 02 5f 48 89 70 10 48 89 78 18 48 8b b4 24 80 00 00 00 48 89 70 20 48 8b b4 24 88 00 00 00 48 89 70 28 48 83 c0 10 ba 04 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 14 7d 02 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
777       | 7ff7c823e1b0h   | 106     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n16,16u)                                                                        | Block16<ushort> cells(N16 n, ushort x0)                                                                       | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 48 b9 60 33 18 c8 f7 7f 00 00 ba 01 00 00 00 e8 05 8c 02 5f 66 89 70 10 48 83 c0 10 ba 01 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 83 7c 02 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
778       | 7ff7c823e240h   | 210     | CTC_INTRx2          | hex://blocks/api?cells#cells_(n16,64u)                                                                        | Block16<ulong> cells(N16 n, ulong x0)                                                                         | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 48 b9 e8 95 b9 c7 f7 7f 00 00 ba 01 00 00 00 e8 75 8b 02 5f 48 8b c8 48 89 71 10 b8 01 00 00 00 45 33 c0 99 41 f7 f8 b8 01 00 00 00 83 e8 00 75 3b 48 83 c1 10 b8 01 00 00 00 48 8d 54 24 30 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 30 48 89 0a 89 42 08 48 8b fb 48 8d 74 24 30 e8 da 7b 02 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 ba 1a 00 00 00 41 b8 01 00 00 00 49 b9 a0 7a 01 90 b3 02 00 00 4d 8b 09 48 b9 a8 7a 01 90 b3 02 00 00 48 8b 09 48 8d 44 24 28 44 88 00 89 50 04 48 8b 54 24 28 48 89 54 24 20 ba 01 00 00 00 4d 8b c1 4c 8b c9 b9 10 00 00 00 e8 9e 63 50 ff
779       | 7ff7c823e330h   | 210     | CTC_INTRx2          | hex://blocks/api?cells#cells_(n32,64u)                                                                        | Block32<ulong> cells(N32 n, ulong x0)                                                                         | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 48 b9 e8 95 b9 c7 f7 7f 00 00 ba 01 00 00 00 e8 85 8a 02 5f 48 8b c8 48 89 71 10 b8 01 00 00 00 45 33 c0 99 41 f7 f8 b8 01 00 00 00 83 e8 00 75 3b 48 83 c1 10 b8 01 00 00 00 48 8d 54 24 30 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 30 48 89 0a 89 42 08 48 8b fb 48 8d 74 24 30 e8 ea 7a 02 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 ba 2a 00 00 00 41 b8 01 00 00 00 49 b9 a0 7a 01 90 b3 02 00 00 4d 8b 09 48 b9 a8 7a 01 90 b3 02 00 00 48 8b 09 48 8d 44 24 28 44 88 00 89 50 04 48 8b 54 24 28 48 89 54 24 20 ba 01 00 00 00 4d 8b c1 4c 8b c9 b9 20 00 00 00 e8 ae 62 50 ff
780       | 7ff7c823e420h   | 135     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n32,8u,8u,8u,8u)                                                                | Block32<byte> cells(N32 n, byte x0, byte x1, byte x2, byte x3)                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 10 ea 70 c7 f7 7f 00 00 ba 04 00 00 00 e8 92 89 02 5f 40 88 70 10 40 88 78 11 8b b4 24 80 00 00 00 40 88 70 12 8b b4 24 88 00 00 00 40 88 70 13 48 83 c0 10 ba 04 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 f6 79 02 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
781       | 7ff7c823e4d0h   | 113     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n32,16u,16u)                                                                    | Block32<ushort> cells(N32 n, ushort x0, ushort x1)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 60 33 18 c8 f7 7f 00 00 ba 02 00 00 00 e8 e2 88 02 5f 66 89 70 10 66 89 78 12 48 83 c0 10 ba 02 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 5c 79 02 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
782       | 7ff7c823e560h   | 105     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n32,32u)                                                                        | Block32<uint> cells(N32 n, uint x0)                                                                           | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 48 b9 f8 22 18 c8 f7 7f 00 00 ba 01 00 00 00 e8 55 88 02 5f 89 70 10 48 83 c0 10 ba 01 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 d4 78 02 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
783       | 7ff7c823e5f0h   | 179     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n64,8u,8u,8u,8u,8u,8u,8u,8u)                                                    | Block64<byte> cells(N64 n, byte x0, byte x1, byte x2, byte x3, byte x4, byte x5, byte x6, byte x7)            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 10 ea 70 c7 f7 7f 00 00 ba 08 00 00 00 e8 c2 87 02 5f 40 88 70 10 40 88 78 11 8b b4 24 80 00 00 00 40 88 70 12 8b b4 24 88 00 00 00 40 88 70 13 8b b4 24 90 00 00 00 40 88 70 14 8b b4 24 98 00 00 00 40 88 70 15 8b b4 24 a0 00 00 00 40 88 70 16 8b b4 24 a8 00 00 00 40 88 70 17 48 83 c0 10 ba 08 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 fa 77 02 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
784       | 7ff7c823e6c0h   | 135     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n64,16u,16u,16u,16u)                                                            | Block64<ushort> cells(N64 n, ushort x0, ushort x1, ushort x2, ushort x3)                                      | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 60 33 18 c8 f7 7f 00 00 ba 04 00 00 00 e8 f2 86 02 5f 66 89 70 10 66 89 78 12 8b b4 24 80 00 00 00 66 89 70 14 8b b4 24 88 00 00 00 66 89 70 16 48 83 c0 10 ba 04 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 56 77 02 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
785       | 7ff7c823e770h   | 111     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n64,32u,32u)                                                                    | Block64<uint> cells(N64 n, uint x0, uint x1)                                                                  | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 f8 22 18 c8 f7 7f 00 00 ba 02 00 00 00 e8 42 86 02 5f 89 70 10 89 78 14 48 83 c0 10 ba 02 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 be 76 02 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
786       | 7ff7c823e800h   | 106     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n64,64u)                                                                        | Block64<ulong> cells(N64 n, ulong x0)                                                                         | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 48 b9 e8 95 b9 c7 f7 7f 00 00 ba 01 00 00 00 e8 b5 85 02 5f 48 89 70 10 48 83 c0 10 ba 01 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 33 76 02 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
787       | 7ff7c823e890h   | 272     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n128,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u)                           | Block128<byte> cells(N128 n, byte x0, byte x1, byte x2, byte x3, byte x4, byte x5, byte x6, byte x7, byte x8, byte x9, byte xA, byte xB, byte xC, byte xD, byte xE, byte xF)| 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 89 44 24 38 48 8b d9 41 8b f0 41 8b f9 48 b9 10 ea 70 c7 f7 7f 00 00 ba 10 00 00 00 e8 1d 85 02 5f 40 88 70 10 40 88 78 11 8b b4 24 80 00 00 00 40 88 70 12 8b b4 24 88 00 00 00 40 88 70 13 8b b4 24 90 00 00 00 40 88 70 14 8b b4 24 98 00 00 00 40 88 70 15 8b b4 24 a0 00 00 00 40 88 70 16 8b b4 24 a8 00 00 00 40 88 70 17 8b b4 24 b0 00 00 00 40 88 70 18 8b b4 24 b8 00 00 00 40 88 70 19 8b b4 24 c0 00 00 00 40 88 70 1a 8b b4 24 c8 00 00 00 40 88 70 1b 8b b4 24 d0 00 00 00 40 88 70 1c 8b b4 24 d8 00 00 00 40 88 70 1d 8b b4 24 e0 00 00 00 40 88 70 1e 8b b4 24 e8 00 00 00 40 88 70 1f 48 83 c0 10 ba 10 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 fd 74 02 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
788       | 7ff7c823e9c0h   | 179     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n128,16u,16u,16u,16u,16u,16u,16u,16u)                                           | Block128<ushort> cells(N128 n, ushort x0, ushort x1, ushort x2, ushort x3, ushort x4, ushort x5, ushort x6, ushort x7)| 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 60 33 18 c8 f7 7f 00 00 ba 08 00 00 00 e8 f2 83 02 5f 66 89 70 10 66 89 78 12 8b b4 24 80 00 00 00 66 89 70 14 8b b4 24 88 00 00 00 66 89 70 16 8b b4 24 90 00 00 00 66 89 70 18 8b b4 24 98 00 00 00 66 89 70 1a 8b b4 24 a0 00 00 00 66 89 70 1c 8b b4 24 a8 00 00 00 66 89 70 1e 48 83 c0 10 ba 08 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 2a 74 02 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
789       | 7ff7c823ea90h   | 131     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n128,32u,32u,32u,32u)                                                           | Block128<uint> cells(N128 n, uint x0, uint x1, uint x2, uint x3)                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 f8 22 18 c8 f7 7f 00 00 ba 04 00 00 00 e8 22 83 02 5f 89 70 10 89 78 14 8b b4 24 80 00 00 00 89 70 18 8b b4 24 88 00 00 00 89 70 1c 48 83 c0 10 ba 04 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 8a 73 02 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
