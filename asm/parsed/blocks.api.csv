Sequence  | Address         | Length  | TermCode            | Uri                                                                                                           | OpSig                                                                                                         | Data
0         | 7ff7c805ab80h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n16,span8u)                                                      | Block16<byte> unsafeload<byte>(N16 w, Span<byte> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 d4 b2 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
1         | 7ff7c805abf0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n16,span8i)                                                      | Block16<sbyte> unsafeload<sbyte>(N16 w, Span<sbyte> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 64 b2 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
2         | 7ff7c805ac60h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n16,span16u)                                                    | Block16<ushort> unsafeload<ushort>(N16 w, Span<ushort> src)                                                   | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 f4 b1 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
3         | 7ff7c805b0d0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n16,span16i)                                                    | Block16<short> unsafeload<short>(N16 w, Span<short> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 84 ad 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
4         | 7ff7c805b140h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n32,span8u)                                                      | Block32<byte> unsafeload<byte>(N32 w, Span<byte> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 14 ad 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
5         | 7ff7c805b5b0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n32,span8i)                                                      | Block32<sbyte> unsafeload<sbyte>(N32 w, Span<sbyte> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 a4 a8 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
6         | 7ff7c805b620h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n32,span16u)                                                    | Block32<ushort> unsafeload<ushort>(N32 w, Span<ushort> src)                                                   | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 34 a8 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
7         | 7ff7c805b690h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n32,span16i)                                                    | Block32<short> unsafeload<short>(N32 w, Span<short> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 c4 a7 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
8         | 7ff7c805b700h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32u](n32,span32u)                                                    | Block32<uint> unsafeload<uint>(N32 w, Span<uint> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 54 a7 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
9         | 7ff7c805b770h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32i](n32,span32i)                                                    | Block32<int> unsafeload<int>(N32 w, Span<int> src)                                                            | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 e4 a6 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
10        | 7ff7c805bbe0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32f](n32,span32f)                                                    | Block32<float> unsafeload<float>(N32 w, Span<float> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 74 a2 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
11        | 7ff7c805bc50h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n64,span8u)                                                      | Block64<byte> unsafeload<byte>(N64 w, Span<byte> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 04 a2 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
12        | 7ff7c805c0c0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n64,span8i)                                                      | Block64<sbyte> unsafeload<sbyte>(N64 w, Span<sbyte> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 94 9d 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
13        | 7ff7c805c130h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n64,span16u)                                                    | Block64<ushort> unsafeload<ushort>(N64 w, Span<ushort> src)                                                   | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 24 9d 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
14        | 7ff7c805c1a0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n64,span16i)                                                    | Block64<short> unsafeload<short>(N64 w, Span<short> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 b4 9c 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
15        | 7ff7c805c210h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32u](n64,span32u)                                                    | Block64<uint> unsafeload<uint>(N64 w, Span<uint> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 44 9c 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
16        | 7ff7c805c280h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32i](n64,span32i)                                                    | Block64<int> unsafeload<int>(N64 w, Span<int> src)                                                            | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 d4 9b 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
17        | 7ff7c805c6f0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64u](n64,span64u)                                                    | Block64<ulong> unsafeload<ulong>(N64 w, Span<ulong> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 64 97 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
18        | 7ff7c805c760h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64i](n64,span64i)                                                    | Block64<long> unsafeload<long>(N64 w, Span<long> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 f4 96 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
19        | 7ff7c805c7d0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32f](n64,span32f)                                                    | Block64<float> unsafeload<float>(N64 w, Span<float> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 84 96 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
20        | 7ff7c805cc40h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64f](n64,span64f)                                                    | Block64<double> unsafeload<double>(N64 w, Span<double> src)                                                   | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 14 92 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
21        | 7ff7c805ccb0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n128,span8u)                                                     | Block128<byte> unsafeload<byte>(N128 w, Span<byte> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 a4 91 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
22        | 7ff7c805cd20h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n128,span8i)                                                     | Block128<sbyte> unsafeload<sbyte>(N128 w, Span<sbyte> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 34 91 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
23        | 7ff7c805d190h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n128,span16u)                                                   | Block128<ushort> unsafeload<ushort>(N128 w, Span<ushort> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 c4 8c 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
24        | 7ff7c805d200h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n128,span16i)                                                   | Block128<short> unsafeload<short>(N128 w, Span<short> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 54 8c 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
25        | 7ff7c805d270h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32u](n128,span32u)                                                   | Block128<uint> unsafeload<uint>(N128 w, Span<uint> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 e4 8b 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
26        | 7ff7c805d2e0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32i](n128,span32i)                                                   | Block128<int> unsafeload<int>(N128 w, Span<int> src)                                                          | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 74 8b 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
27        | 7ff7c805d350h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64u](n128,span64u)                                                   | Block128<ulong> unsafeload<ulong>(N128 w, Span<ulong> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 04 8b 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
28        | 7ff7c805d3c0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64i](n128,span64i)                                                   | Block128<long> unsafeload<long>(N128 w, Span<long> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 94 8a 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
29        | 7ff7c805d830h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32f](n128,span32f)                                                   | Block128<float> unsafeload<float>(N128 w, Span<float> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 24 86 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
30        | 7ff7c805d8a0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64f](n128,span64f)                                                   | Block128<double> unsafeload<double>(N128 w, Span<double> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 b4 85 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
31        | 7ff7c805d910h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n256,span8u)                                                     | Block256<byte> unsafeload<byte>(N256 w, Span<byte> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 44 85 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
32        | 7ff7c805ddb0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n256,span8i)                                                     | Block256<sbyte> unsafeload<sbyte>(N256 w, Span<sbyte> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 a4 80 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
33        | 7ff7c805de20h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n256,span16u)                                                   | Block256<ushort> unsafeload<ushort>(N256 w, Span<ushort> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 34 80 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
34        | 7ff7c805de90h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n256,span16i)                                                   | Block256<short> unsafeload<short>(N256 w, Span<short> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 c4 7f 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
35        | 7ff7c805df00h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32u](n256,span32u)                                                   | Block256<uint> unsafeload<uint>(N256 w, Span<uint> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 54 7f 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
36        | 7ff7c805df70h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32i](n256,span32i)                                                   | Block256<int> unsafeload<int>(N256 w, Span<int> src)                                                          | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 e4 7e 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
37        | 7ff7c805dfe0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64u](n256,span64u)                                                   | Block256<ulong> unsafeload<ulong>(N256 w, Span<ulong> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 74 7e 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
38        | 7ff7c805e450h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64i](n256,span64i)                                                   | Block256<long> unsafeload<long>(N256 w, Span<long> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 04 7a 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
39        | 7ff7c805e4c0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32f](n256,span32f)                                                   | Block256<float> unsafeload<float>(N256 w, Span<float> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 94 79 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
40        | 7ff7c805e530h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64f](n256,span64f)                                                   | Block256<double> unsafeload<double>(N256 w, Span<double> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 24 79 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
41        | 7ff7c805e9a0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n512,span8u)                                                     | Block512<byte> unsafeload<byte>(N512 w, Span<byte> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 b4 74 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
42        | 7ff7c805ea30h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n512,span8i)                                                     | Block512<sbyte> unsafeload<sbyte>(N512 w, Span<sbyte> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 24 74 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
43        | 7ff7c805eaa0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n512,span16u)                                                   | Block512<ushort> unsafeload<ushort>(N512 w, Span<ushort> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 b4 73 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
44        | 7ff7c805eb10h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n512,span16i)                                                   | Block512<short> unsafeload<short>(N512 w, Span<short> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 44 73 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
45        | 7ff7c805eb80h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32u](n512,span32u)                                                   | Block512<uint> unsafeload<uint>(N512 w, Span<uint> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 d4 72 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
46        | 7ff7c805eff0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32i](n512,span32i)                                                   | Block512<int> unsafeload<int>(N512 w, Span<int> src)                                                          | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 64 6e 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
47        | 7ff7c805f060h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64u](n512,span64u)                                                   | Block512<ulong> unsafeload<ulong>(N512 w, Span<ulong> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 f4 6d 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
48        | 7ff7c805f0d0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64i](n512,span64i)                                                   | Block512<long> unsafeload<long>(N512 w, Span<long> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 84 6d 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
49        | 7ff7c805f140h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32f](n512,span32f)                                                   | Block512<float> unsafeload<float>(N512 w, Span<float> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 14 6d 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
50        | 7ff7c805f1b0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64f](n512,span64f)                                                   | Block512<double> unsafeload<double>(N512 w, Span<double> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 a4 6c 20 5f 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
51        | 7ff7c805f620h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[8u](8u~in,b256x8u~in,32i,32i)                                                  | void write<byte>(in byte src, in Block256<byte> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 14 6a 20 5f 90 c3
52        | 7ff7c8061610h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[8i](8u~in,b256x8i~in,32i,32i)                                                  | void write<sbyte>(in byte src, in Block256<sbyte> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 24 4a 20 5f 90 c3
53        | 7ff7c8061640h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[16u](8u~in,b256x16u~in,32i,32i)                                                | void write<ushort>(in byte src, in Block256<ushort> dst, int offset, int count)                               | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 f4 49 20 5f 90 c3
54        | 7ff7c8061670h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[16i](8u~in,b256x16i~in,32i,32i)                                                | void write<short>(in byte src, in Block256<short> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 c4 49 20 5f 90 c3
55        | 7ff7c80616a0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32u](8u~in,b256x32u~in,32i,32i)                                                | void write<uint>(in byte src, in Block256<uint> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 94 49 20 5f 90 c3
56        | 7ff7c80616d0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32i](8u~in,b256x32i~in,32i,32i)                                                | void write<int>(in byte src, in Block256<int> dst, int offset, int count)                                     | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 64 49 20 5f 90 c3
57        | 7ff7c8061700h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64u](8u~in,b256x64u~in,32i,32i)                                                | void write<ulong>(in byte src, in Block256<ulong> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 34 49 20 5f 90 c3
58        | 7ff7c8061730h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64i](8u~in,b256x64i~in,32i,32i)                                                | void write<long>(in byte src, in Block256<long> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 04 49 20 5f 90 c3
59        | 7ff7c8061760h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32f](8u~in,b256x32f~in,32i,32i)                                                | void write<float>(in byte src, in Block256<float> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 d4 48 20 5f 90 c3
60        | 7ff7c8061790h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64f](8u~in,b256x64f~in,32i,32i)                                                | void write<double>(in byte src, in Block256<double> dst, int offset, int count)                               | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 a4 48 20 5f 90 c3
61        | 7ff7c80617c0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[8u](8u~in,b512x8u~in,32i,32i)                                                  | void write<byte>(in byte src, in Block512<byte> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 74 48 20 5f 90 c3
62        | 7ff7c80617f0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[8i](8u~in,b512x8i~in,32i,32i)                                                  | void write<sbyte>(in byte src, in Block512<sbyte> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 44 48 20 5f 90 c3
63        | 7ff7c8061820h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[16u](8u~in,b512x16u~in,32i,32i)                                                | void write<ushort>(in byte src, in Block512<ushort> dst, int offset, int count)                               | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 14 48 20 5f 90 c3
64        | 7ff7c8061850h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[16i](8u~in,b512x16i~in,32i,32i)                                                | void write<short>(in byte src, in Block512<short> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 e4 47 20 5f 90 c3
65        | 7ff7c8061880h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32u](8u~in,b512x32u~in,32i,32i)                                                | void write<uint>(in byte src, in Block512<uint> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 b4 47 20 5f 90 c3
66        | 7ff7c80618b0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32i](8u~in,b512x32i~in,32i,32i)                                                | void write<int>(in byte src, in Block512<int> dst, int offset, int count)                                     | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 84 47 20 5f 90 c3
67        | 7ff7c80618e0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64u](8u~in,b512x64u~in,32i,32i)                                                | void write<ulong>(in byte src, in Block512<ulong> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 54 47 20 5f 90 c3
68        | 7ff7c8061910h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64i](8u~in,b512x64i~in,32i,32i)                                                | void write<long>(in byte src, in Block512<long> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 24 47 20 5f 90 c3
69        | 7ff7c8061940h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32f](8u~in,b512x32f~in,32i,32i)                                                | void write<float>(in byte src, in Block512<float> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 f4 46 20 5f 90 c3
70        | 7ff7c8061970h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64f](8u~in,b512x64f~in,32i,32i)                                                | void write<double>(in byte src, in Block512<double> dst, int offset, int count)                               | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 c4 46 20 5f 90 c3
71        | 7ff7c8061db0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[8u]()                                                                    | int cellsize<byte>()                                                                                          | 0f 1f 44 00 00 b8 01 00 00 00 c3
72        | 7ff7c80621e0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[8i]()                                                                    | int cellsize<sbyte>()                                                                                         | 0f 1f 44 00 00 b8 01 00 00 00 c3
73        | 7ff7c8062200h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[16u]()                                                                   | int cellsize<ushort>()                                                                                        | 0f 1f 44 00 00 b8 02 00 00 00 c3
74        | 7ff7c8062220h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[16i]()                                                                   | int cellsize<short>()                                                                                         | 0f 1f 44 00 00 b8 02 00 00 00 c3
75        | 7ff7c8062240h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[32u]()                                                                   | int cellsize<uint>()                                                                                          | 0f 1f 44 00 00 b8 04 00 00 00 c3
76        | 7ff7c8062260h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[32i]()                                                                   | int cellsize<int>()                                                                                           | 0f 1f 44 00 00 b8 04 00 00 00 c3
77        | 7ff7c8062280h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[64u]()                                                                   | int cellsize<ulong>()                                                                                         | 0f 1f 44 00 00 b8 08 00 00 00 c3
78        | 7ff7c80622a0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[64i]()                                                                   | int cellsize<long>()                                                                                          | 0f 1f 44 00 00 b8 08 00 00 00 c3
79        | 7ff7c80622c0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[32f]()                                                                   | int cellsize<float>()                                                                                         | 0f 1f 44 00 00 b8 04 00 00 00 c3
80        | 7ff7c80622e0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[64f]()                                                                   | int cellsize<double>()                                                                                        | 0f 1f 44 00 00 b8 08 00 00 00 c3
81        | 7ff7c8062300h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[8u]()                                                                  | int cellwidth<byte>()                                                                                         | 0f 1f 44 00 00 b8 08 00 00 00 c3
82        | 7ff7c8062320h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[8i]()                                                                  | int cellwidth<sbyte>()                                                                                        | 0f 1f 44 00 00 b8 08 00 00 00 c3
83        | 7ff7c8062340h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[16u]()                                                                 | int cellwidth<ushort>()                                                                                       | 0f 1f 44 00 00 b8 10 00 00 00 c3
84        | 7ff7c8062360h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[16i]()                                                                 | int cellwidth<short>()                                                                                        | 0f 1f 44 00 00 b8 10 00 00 00 c3
85        | 7ff7c8062380h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[32u]()                                                                 | int cellwidth<uint>()                                                                                         | 0f 1f 44 00 00 b8 20 00 00 00 c3
86        | 7ff7c80623a0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[32i]()                                                                 | int cellwidth<int>()                                                                                          | 0f 1f 44 00 00 b8 20 00 00 00 c3
87        | 7ff7c80623c0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[64u]()                                                                 | int cellwidth<ulong>()                                                                                        | 0f 1f 44 00 00 b8 40 00 00 00 c3
88        | 7ff7c80623e0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[64i]()                                                                 | int cellwidth<long>()                                                                                         | 0f 1f 44 00 00 b8 40 00 00 00 c3
89        | 7ff7c8062400h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[32f]()                                                                 | int cellwidth<float>()                                                                                        | 0f 1f 44 00 00 b8 20 00 00 00 c3
90        | 7ff7c8062420h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[64f]()                                                                 | int cellwidth<double>()                                                                                       | 0f 1f 44 00 00 b8 40 00 00 00 c3
91        | 7ff7c8062440h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellcover#cellcover_g[8u](n8,32i)                                                            | int cellcover<byte>(N8 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b c2 c3
92        | 7ff7c8062460h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellcover#cellcover_g[8i](n8,32i)                                                            | int cellcover<sbyte>(N8 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c3
93        | 7ff7c8062480h   | 32      | CTC_RET_SBB         | hex://blocks/api?cellcover#cellcover_g[16u](n8,32i)                                                           | int cellcover<ushort>(N8 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
94        | 7ff7c80624b0h   | 32      | CTC_RET_SBB         | hex://blocks/api?cellcover#cellcover_g[16i](n8,32i)                                                           | int cellcover<short>(N8 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
95        | 7ff7c80624e0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[32u](n8,32i)                                                           | int cellcover<uint>(N8 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
96        | 7ff7c8062520h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[32i](n8,32i)                                                           | int cellcover<int>(N8 n, int cellcount)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
97        | 7ff7c8062560h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[64u](n8,32i)                                                           | int cellcover<ulong>(N8 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
98        | 7ff7c80625a0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[64i](n8,32i)                                                           | int cellcover<long>(N8 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
99        | 7ff7c80625e0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[32f](n8,32i)                                                           | int cellcover<float>(N8 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
100       | 7ff7c8062620h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[64f](n8,32i)                                                           | int cellcover<double>(N8 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
101       | 7ff7c8062a60h   | 32      | CTC_RET_SBB         | hex://blocks/api?cellcover#cellcover_g[8u](n16,32i)                                                           | int cellcover<byte>(N16 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
102       | 7ff7c8062a90h   | 32      | CTC_RET_SBB         | hex://blocks/api?cellcover#cellcover_g[8i](n16,32i)                                                           | int cellcover<sbyte>(N16 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
103       | 7ff7c8062ac0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[16u](n16,32i)                                                          | int cellcover<ushort>(N16 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
104       | 7ff7c8062af0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[16i](n16,32i)                                                          | int cellcover<short>(N16 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
105       | 7ff7c8062b20h   | 41      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[32u](n16,32i)                                                          | int cellcover<uint>(N16 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
106       | 7ff7c8062b60h   | 41      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[32i](n16,32i)                                                          | int cellcover<int>(N16 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
107       | 7ff7c8062ba0h   | 41      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[64u](n16,32i)                                                          | int cellcover<ulong>(N16 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
108       | 7ff7c8062be0h   | 41      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[64i](n16,32i)                                                          | int cellcover<long>(N16 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
109       | 7ff7c8062c20h   | 41      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[32f](n16,32i)                                                          | int cellcover<float>(N16 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
110       | 7ff7c8062c60h   | 41      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[64f](n16,32i)                                                          | int cellcover<double>(N16 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
111       | 7ff7c8062ca0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[8u](n32,32i)                                                           | int cellcover<byte>(N32 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
112       | 7ff7c8062ce0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[8i](n32,32i)                                                           | int cellcover<sbyte>(N32 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
113       | 7ff7c8062d20h   | 32      | CTC_RET_SBB         | hex://blocks/api?cellcover#cellcover_g[16u](n32,32i)                                                          | int cellcover<ushort>(N32 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
114       | 7ff7c8062d50h   | 32      | CTC_RET_SBB         | hex://blocks/api?cellcover#cellcover_g[16i](n32,32i)                                                          | int cellcover<short>(N32 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
115       | 7ff7c8062d80h   | 30      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[32u](n32,32i)                                                          | int cellcover<uint>(N32 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
116       | 7ff7c8062db0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[32i](n32,32i)                                                          | int cellcover<int>(N32 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
117       | 7ff7c8062de0h   | 41      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[64u](n32,32i)                                                          | int cellcover<ulong>(N32 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
118       | 7ff7c8062e20h   | 41      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[64i](n32,32i)                                                          | int cellcover<long>(N32 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
119       | 7ff7c8062e60h   | 30      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[32f](n32,32i)                                                          | int cellcover<float>(N32 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
120       | 7ff7c8062e90h   | 41      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[64f](n32,32i)                                                          | int cellcover<double>(N32 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
121       | 7ff7c8062ed0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[8u](n64,32i)                                                           | int cellcover<byte>(N64 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
122       | 7ff7c8062f10h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[8i](n64,32i)                                                           | int cellcover<sbyte>(N64 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
123       | 7ff7c8062f50h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[16u](n64,32i)                                                          | int cellcover<ushort>(N64 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
124       | 7ff7c8062f90h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[16i](n64,32i)                                                          | int cellcover<short>(N64 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
125       | 7ff7c8062fd0h   | 32      | CTC_RET_SBB         | hex://blocks/api?cellcover#cellcover_g[32u](n64,32i)                                                          | int cellcover<uint>(N64 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
126       | 7ff7c8063000h   | 32      | CTC_RET_SBB         | hex://blocks/api?cellcover#cellcover_g[32i](n64,32i)                                                          | int cellcover<int>(N64 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
127       | 7ff7c8063030h   | 30      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[64u](n64,32i)                                                          | int cellcover<ulong>(N64 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
128       | 7ff7c8063060h   | 30      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[64i](n64,32i)                                                          | int cellcover<long>(N64 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
129       | 7ff7c8063090h   | 32      | CTC_RET_SBB         | hex://blocks/api?cellcover#cellcover_g[32f](n64,32i)                                                          | int cellcover<float>(N64 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
130       | 7ff7c80630c0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?cellcover#cellcover_g[64f](n64,32i)                                                          | int cellcover<double>(N64 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
131       | 7ff7c8063500h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[8u](n128,32i)                                                          | int cellcover<byte>(N128 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
132       | 7ff7c8063540h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[8i](n128,32i)                                                          | int cellcover<sbyte>(N128 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
133       | 7ff7c8063580h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[16u](n128,32i)                                                         | int cellcover<ushort>(N128 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
134       | 7ff7c80635c0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[16i](n128,32i)                                                         | int cellcover<short>(N128 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
135       | 7ff7c8063600h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[32u](n128,32i)                                                         | int cellcover<uint>(N128 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
136       | 7ff7c8063640h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[32i](n128,32i)                                                         | int cellcover<int>(N128 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
137       | 7ff7c8063680h   | 32      | CTC_RET_SBB         | hex://blocks/api?cellcover#cellcover_g[64u](n128,32i)                                                         | int cellcover<ulong>(N128 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
138       | 7ff7c80636b0h   | 32      | CTC_RET_SBB         | hex://blocks/api?cellcover#cellcover_g[64i](n128,32i)                                                         | int cellcover<long>(N128 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
139       | 7ff7c80636e0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[32f](n128,32i)                                                         | int cellcover<float>(N128 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
140       | 7ff7c8063720h   | 32      | CTC_RET_SBB         | hex://blocks/api?cellcover#cellcover_g[64f](n128,32i)                                                         | int cellcover<double>(N128 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
141       | 7ff7c8063750h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[8u](n256,32i)                                                          | int cellcover<byte>(N256 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 c1 f8 05 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 74 03 ff c0 c3 c3
142       | 7ff7c8063790h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[8i](n256,32i)                                                          | int cellcover<sbyte>(N256 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 c1 f8 05 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 74 03 ff c0 c3 c3
143       | 7ff7c80637d0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[16u](n256,32i)                                                         | int cellcover<ushort>(N256 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
144       | 7ff7c8063810h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[16i](n256,32i)                                                         | int cellcover<short>(N256 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
145       | 7ff7c8063850h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[32u](n256,32i)                                                         | int cellcover<uint>(N256 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
146       | 7ff7c8063890h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[32i](n256,32i)                                                         | int cellcover<int>(N256 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
147       | 7ff7c80638d0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[64u](n256,32i)                                                         | int cellcover<ulong>(N256 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
148       | 7ff7c8063910h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[64i](n256,32i)                                                         | int cellcover<long>(N256 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
149       | 7ff7c8063950h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[32f](n256,32i)                                                         | int cellcover<float>(N256 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
150       | 7ff7c8063990h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[64f](n256,32i)                                                         | int cellcover<double>(N256 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
151       | 7ff7c80639d0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[8u](n512,32i)                                                          | int cellcover<byte>(N512 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 3f 03 c2 c1 f8 06 8b ca c1 f9 1f 83 e1 3f 03 ca 83 e1 c0 2b d1 74 03 ff c0 c3 c3
152       | 7ff7c8063a10h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[8i](n512,32i)                                                          | int cellcover<sbyte>(N512 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 3f 03 c2 c1 f8 06 8b ca c1 f9 1f 83 e1 3f 03 ca 83 e1 c0 2b d1 74 03 ff c0 c3 c3
153       | 7ff7c8063a50h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[16u](n512,32i)                                                         | int cellcover<ushort>(N512 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 c1 f8 05 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 74 03 ff c0 c3 c3
154       | 7ff7c8063a90h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[16i](n512,32i)                                                         | int cellcover<short>(N512 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 c1 f8 05 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 74 03 ff c0 c3 c3
155       | 7ff7c8063ad0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[32u](n512,32i)                                                         | int cellcover<uint>(N512 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
156       | 7ff7c8063b10h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[32i](n512,32i)                                                         | int cellcover<int>(N512 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
157       | 7ff7c8063b50h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[64u](n512,32i)                                                         | int cellcover<ulong>(N512 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
158       | 7ff7c8063b90h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[64i](n512,32i)                                                         | int cellcover<long>(N512 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
159       | 7ff7c8063bd0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[32f](n512,32i)                                                         | int cellcover<float>(N512 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
160       | 7ff7c8064010h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?cellcover#cellcover_g[64f](n512,32i)                                                         | int cellcover<double>(N512 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
161       | 7ff7c8064050h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[8u](n8,8u)                                                                   | int length<byte>(N8 w, byte t)                                                                                | 0f 1f 44 00 00 b8 01 00 00 00 c3
162       | 7ff7c8064070h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[8i](n8,8i)                                                                   | int length<sbyte>(N8 w, sbyte t)                                                                              | 0f 1f 44 00 00 b8 01 00 00 00 c3
163       | 7ff7c8064090h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[8u](n16,8u)                                                                  | int length<byte>(N16 w, byte t)                                                                               | 0f 1f 44 00 00 b8 02 00 00 00 c3
164       | 7ff7c80640b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[8i](n16,8i)                                                                  | int length<sbyte>(N16 w, sbyte t)                                                                             | 0f 1f 44 00 00 b8 02 00 00 00 c3
165       | 7ff7c80640d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[16u](n16,16u)                                                                | int length<ushort>(N16 w, ushort t)                                                                           | 0f 1f 44 00 00 b8 01 00 00 00 c3
166       | 7ff7c80640f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[16i](n16,16i)                                                                | int length<short>(N16 w, short t)                                                                             | 0f 1f 44 00 00 b8 01 00 00 00 c3
167       | 7ff7c8064110h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[8u](n32,8u)                                                                  | int length<byte>(N32 w, byte t)                                                                               | 0f 1f 44 00 00 b8 04 00 00 00 c3
168       | 7ff7c8064130h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[8i](n32,8i)                                                                  | int length<sbyte>(N32 w, sbyte t)                                                                             | 0f 1f 44 00 00 b8 04 00 00 00 c3
169       | 7ff7c8064150h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[16u](n32,16u)                                                                | int length<ushort>(N32 w, ushort t)                                                                           | 0f 1f 44 00 00 b8 02 00 00 00 c3
170       | 7ff7c8064170h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[16i](n32,16i)                                                                | int length<short>(N32 w, short t)                                                                             | 0f 1f 44 00 00 b8 02 00 00 00 c3
171       | 7ff7c8064190h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32u](n32,32u)                                                                | int length<uint>(N32 w, uint t)                                                                               | 0f 1f 44 00 00 b8 01 00 00 00 c3
172       | 7ff7c80641b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32i](n32,32i)                                                                | int length<int>(N32 w, int t)                                                                                 | 0f 1f 44 00 00 b8 01 00 00 00 c3
173       | 7ff7c80641d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32f](n32,32f)                                                                | int length<float>(N32 w, float t)                                                                             | 0f 1f 44 00 00 b8 01 00 00 00 c3
174       | 7ff7c80641f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[8u](n64,8u)                                                                  | int length<byte>(N64 w, byte t)                                                                               | 0f 1f 44 00 00 b8 08 00 00 00 c3
175       | 7ff7c8064210h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[8i](n64,8i)                                                                  | int length<sbyte>(N64 w, sbyte t)                                                                             | 0f 1f 44 00 00 b8 08 00 00 00 c3
176       | 7ff7c8064230h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[16u](n64,16u)                                                                | int length<ushort>(N64 w, ushort t)                                                                           | 0f 1f 44 00 00 b8 04 00 00 00 c3
177       | 7ff7c8064250h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[16i](n64,16i)                                                                | int length<short>(N64 w, short t)                                                                             | 0f 1f 44 00 00 b8 04 00 00 00 c3
178       | 7ff7c8064270h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32u](n64,32u)                                                                | int length<uint>(N64 w, uint t)                                                                               | 0f 1f 44 00 00 b8 02 00 00 00 c3
179       | 7ff7c8064290h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32i](n64,32i)                                                                | int length<int>(N64 w, int t)                                                                                 | 0f 1f 44 00 00 b8 02 00 00 00 c3
180       | 7ff7c80642b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[64u](n64,64u)                                                                | int length<ulong>(N64 w, ulong t)                                                                             | 0f 1f 44 00 00 b8 01 00 00 00 c3
181       | 7ff7c80642d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[64i](n64,64i)                                                                | int length<long>(N64 w, long t)                                                                               | 0f 1f 44 00 00 b8 01 00 00 00 c3
182       | 7ff7c80642f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32f](n64,32f)                                                                | int length<float>(N64 w, float t)                                                                             | 0f 1f 44 00 00 b8 02 00 00 00 c3
183       | 7ff7c8064310h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[64f](n64,64f)                                                                | int length<double>(N64 w, double t)                                                                           | 0f 1f 44 00 00 b8 01 00 00 00 c3
184       | 7ff7c8064330h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[8u](n128,8u)                                                                 | int length<byte>(N128 w, byte t)                                                                              | 0f 1f 44 00 00 b8 10 00 00 00 c3
185       | 7ff7c8064350h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[8i](n128,8i)                                                                 | int length<sbyte>(N128 w, sbyte t)                                                                            | 0f 1f 44 00 00 b8 10 00 00 00 c3
186       | 7ff7c8064370h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[16u](n128,16u)                                                               | int length<ushort>(N128 w, ushort t)                                                                          | 0f 1f 44 00 00 b8 08 00 00 00 c3
187       | 7ff7c8064390h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[16i](n128,16i)                                                               | int length<short>(N128 w, short t)                                                                            | 0f 1f 44 00 00 b8 08 00 00 00 c3
188       | 7ff7c80643b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32u](n128,32u)                                                               | int length<uint>(N128 w, uint t)                                                                              | 0f 1f 44 00 00 b8 04 00 00 00 c3
189       | 7ff7c80643d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32i](n128,32i)                                                               | int length<int>(N128 w, int t)                                                                                | 0f 1f 44 00 00 b8 04 00 00 00 c3
190       | 7ff7c80643f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[64u](n128,64u)                                                               | int length<ulong>(N128 w, ulong t)                                                                            | 0f 1f 44 00 00 b8 02 00 00 00 c3
191       | 7ff7c8064410h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[64i](n128,64i)                                                               | int length<long>(N128 w, long t)                                                                              | 0f 1f 44 00 00 b8 02 00 00 00 c3
192       | 7ff7c8064430h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32f](n128,32f)                                                               | int length<float>(N128 w, float t)                                                                            | 0f 1f 44 00 00 b8 04 00 00 00 c3
193       | 7ff7c8064450h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[64f](n128,64f)                                                               | int length<double>(N128 w, double t)                                                                          | 0f 1f 44 00 00 b8 02 00 00 00 c3
194       | 7ff7c8064470h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[8u](n256,8u)                                                                 | int length<byte>(N256 w, byte t)                                                                              | 0f 1f 44 00 00 b8 20 00 00 00 c3
195       | 7ff7c8064490h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[8i](n256,8i)                                                                 | int length<sbyte>(N256 w, sbyte t)                                                                            | 0f 1f 44 00 00 b8 20 00 00 00 c3
196       | 7ff7c80644b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[16u](n256,16u)                                                               | int length<ushort>(N256 w, ushort t)                                                                          | 0f 1f 44 00 00 b8 10 00 00 00 c3
197       | 7ff7c80644d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[16i](n256,16i)                                                               | int length<short>(N256 w, short t)                                                                            | 0f 1f 44 00 00 b8 10 00 00 00 c3
198       | 7ff7c80644f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32u](n256,32u)                                                               | int length<uint>(N256 w, uint t)                                                                              | 0f 1f 44 00 00 b8 08 00 00 00 c3
199       | 7ff7c8064510h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32i](n256,32i)                                                               | int length<int>(N256 w, int t)                                                                                | 0f 1f 44 00 00 b8 08 00 00 00 c3
200       | 7ff7c8064530h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[64u](n256,64u)                                                               | int length<ulong>(N256 w, ulong t)                                                                            | 0f 1f 44 00 00 b8 04 00 00 00 c3
201       | 7ff7c8064550h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[64i](n256,64i)                                                               | int length<long>(N256 w, long t)                                                                              | 0f 1f 44 00 00 b8 04 00 00 00 c3
202       | 7ff7c8064570h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32f](n256,32f)                                                               | int length<float>(N256 w, float t)                                                                            | 0f 1f 44 00 00 b8 08 00 00 00 c3
203       | 7ff7c8064590h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[64f](n256,64f)                                                               | int length<double>(N256 w, double t)                                                                          | 0f 1f 44 00 00 b8 04 00 00 00 c3
204       | 7ff7c80645b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[8u](n512,8u)                                                                 | int length<byte>(N512 w, byte t)                                                                              | 0f 1f 44 00 00 b8 40 00 00 00 c3
205       | 7ff7c80645d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[8i](n512,8i)                                                                 | int length<sbyte>(N512 w, sbyte t)                                                                            | 0f 1f 44 00 00 b8 40 00 00 00 c3
206       | 7ff7c80645f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[16u](n512,16u)                                                               | int length<ushort>(N512 w, ushort t)                                                                          | 0f 1f 44 00 00 b8 20 00 00 00 c3
207       | 7ff7c8064610h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[16i](n512,16i)                                                               | int length<short>(N512 w, short t)                                                                            | 0f 1f 44 00 00 b8 20 00 00 00 c3
208       | 7ff7c8064630h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32u](n512,32u)                                                               | int length<uint>(N512 w, uint t)                                                                              | 0f 1f 44 00 00 b8 10 00 00 00 c3
209       | 7ff7c8064650h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32i](n512,32i)                                                               | int length<int>(N512 w, int t)                                                                                | 0f 1f 44 00 00 b8 10 00 00 00 c3
210       | 7ff7c8064670h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[64u](n512,64u)                                                               | int length<ulong>(N512 w, ulong t)                                                                            | 0f 1f 44 00 00 b8 08 00 00 00 c3
211       | 7ff7c8064690h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[64i](n512,64i)                                                               | int length<long>(N512 w, long t)                                                                              | 0f 1f 44 00 00 b8 08 00 00 00 c3
212       | 7ff7c80646b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[32f](n512,32f)                                                               | int length<float>(N512 w, float t)                                                                            | 0f 1f 44 00 00 b8 10 00 00 00 c3
213       | 7ff7c80646d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?length#length_g[64f](n512,64f)                                                               | int length<double>(N512 w, double t)                                                                          | 0f 1f 44 00 00 b8 08 00 00 00 c3
214       | 7ff7c80646f0h   | 218     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n16,span8u,32i)                                                              | Block16<byte> load<byte>(N16 w, Span<byte> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 2b 17 20 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 1b 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 dc fe 6f ff cc e8 96 02 70 ff
215       | 7ff7c80647f0h   | 218     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n16,span8i,32i)                                                              | Block16<sbyte> load<sbyte>(N16 w, Span<sbyte> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 2b 16 20 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 1b 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 dc fd 6f ff cc e8 96 01 70 ff
216       | 7ff7c80648f0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n16,span16u,32i)                                                            | Block16<ushort> load<ushort>(N16 w, Span<ushort> src, int offset)                                             | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 2a 15 20 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 1b 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 db fc 6f ff cc e8 95 00 70 ff
217       | 7ff7c80649f0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n16,span16i,32i)                                                            | Block16<short> load<short>(N16 w, Span<short> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 2a 14 20 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 1b 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 db fb 6f ff cc e8 95 ff 6f ff
218       | 7ff7c8064f00h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n32,span8u,32i)                                                              | Block32<byte> load<byte>(N32 w, Span<byte> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 18 0f 20 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 c9 f6 6f ff cc e8 83 fa 6f ff
219       | 7ff7c8065000h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n32,span8i,32i)                                                              | Block32<sbyte> load<sbyte>(N32 w, Span<sbyte> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 18 0e 20 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 c9 f5 6f ff cc e8 83 f9 6f ff
220       | 7ff7c8065100h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n32,span16u,32i)                                                            | Block32<ushort> load<ushort>(N32 w, Span<ushort> src, int offset)                                             | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1d 0d 20 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 ce f4 6f ff cc e8 88 f8 6f ff
221       | 7ff7c8065200h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n32,span16i,32i)                                                            | Block32<short> load<short>(N32 w, Span<short> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1d 0c 20 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 ce f3 6f ff cc e8 88 f7 6f ff
222       | 7ff7c8065300h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32u](n32,span32u,32i)                                                            | Block32<uint> load<uint>(N32 w, Span<uint> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1a 0b 20 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 cb f2 6f ff cc e8 85 f6 6f ff
223       | 7ff7c8065400h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32i](n32,span32i,32i)                                                            | Block32<int> load<int>(N32 w, Span<int> src, int offset)                                                      | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1a 0a 20 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 cb f1 6f ff cc e8 85 f5 6f ff
224       | 7ff7c8065500h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32f](n32,span32f,32i)                                                            | Block32<float> load<float>(N32 w, Span<float> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1a 09 20 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 cb f0 6f ff cc e8 85 f4 6f ff
225       | 7ff7c8065600h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n64,span8u,32i)                                                              | Block64<byte> load<byte>(N64 w, Span<byte> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 18 08 20 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 c9 ef 6f ff cc e8 83 f3 6f ff
226       | 7ff7c8065700h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n64,span8i,32i)                                                              | Block64<sbyte> load<sbyte>(N64 w, Span<sbyte> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 18 07 20 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 c9 ee 6f ff cc e8 83 f2 6f ff
227       | 7ff7c8065800h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n64,span16u,32i)                                                            | Block64<ushort> load<ushort>(N64 w, Span<ushort> src, int offset)                                             | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1a 06 20 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 cb ed 6f ff cc e8 85 f1 6f ff
228       | 7ff7c8065900h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n64,span16i,32i)                                                            | Block64<short> load<short>(N64 w, Span<short> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1a 05 20 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 cb ec 6f ff cc e8 85 f0 6f ff
229       | 7ff7c8065a00h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[32u](n64,span32u,32i)                                                            | Block64<uint> load<uint>(N64 w, Span<uint> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1d 04 20 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 ce eb 6f ff cc e8 88 ef 6f ff
230       | 7ff7c8065b00h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[32i](n64,span32i,32i)                                                            | Block64<int> load<int>(N64 w, Span<int> src, int offset)                                                      | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1d 03 20 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 ce ea 6f ff cc e8 88 ee 6f ff
231       | 7ff7c8066000h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64u](n64,span64u,32i)                                                            | Block64<ulong> load<ulong>(N64 w, Span<ulong> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1a fe 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 cb e5 6f ff cc e8 85 e9 6f ff
232       | 7ff7c8066100h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64i](n64,span64i,32i)                                                            | Block64<long> load<long>(N64 w, Span<long> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1a fd 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 cb e4 6f ff cc e8 85 e8 6f ff
233       | 7ff7c8066200h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[32f](n64,span32f,32i)                                                            | Block64<float> load<float>(N64 w, Span<float> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1d fc 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 ce e3 6f ff cc e8 88 e7 6f ff
234       | 7ff7c8066300h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64f](n64,span64f,32i)                                                            | Block64<double> load<double>(N64 w, Span<double> src, int offset)                                             | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1a fb 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 cb e2 6f ff cc e8 85 e6 6f ff
235       | 7ff7c8066400h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n128,span8u,32i)                                                             | Block128<byte> load<byte>(N128 w, Span<byte> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 18 fa 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 c9 e1 6f ff cc e8 83 e5 6f ff
236       | 7ff7c8066500h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n128,span8i,32i)                                                             | Block128<sbyte> load<sbyte>(N128 w, Span<sbyte> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 18 f9 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 c9 e0 6f ff cc e8 83 e4 6f ff
237       | 7ff7c8066600h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n128,span16u,32i)                                                           | Block128<ushort> load<ushort>(N128 w, Span<ushort> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1a f8 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 cb df 6f ff cc e8 85 e3 6f ff
238       | 7ff7c8066700h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n128,span16i,32i)                                                           | Block128<short> load<short>(N128 w, Span<short> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1a f7 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 cb de 6f ff cc e8 85 e2 6f ff
239       | 7ff7c8066800h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32u](n128,span32u,32i)                                                           | Block128<uint> load<uint>(N128 w, Span<uint> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1a f6 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 cb dd 6f ff cc e8 85 e1 6f ff
240       | 7ff7c8066900h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32i](n128,span32i,32i)                                                           | Block128<int> load<int>(N128 w, Span<int> src, int offset)                                                    | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1a f5 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 cb dc 6f ff cc e8 85 e0 6f ff
241       | 7ff7c8066a00h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[64u](n128,span64u,32i)                                                           | Block128<ulong> load<ulong>(N128 w, Span<ulong> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1d f4 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 ce db 6f ff cc e8 88 df 6f ff
242       | 7ff7c8066b00h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[64i](n128,span64i,32i)                                                           | Block128<long> load<long>(N128 w, Span<long> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1d f3 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 ce da 6f ff cc e8 88 de 6f ff
243       | 7ff7c8066c00h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32f](n128,span32f,32i)                                                           | Block128<float> load<float>(N128 w, Span<float> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1a f2 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 cb d9 6f ff cc e8 85 dd 6f ff
244       | 7ff7c8066d00h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[64f](n128,span64f,32i)                                                           | Block128<double> load<double>(N128 w, Span<double> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1d f1 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 ce d8 6f ff cc e8 88 dc 6f ff
245       | 7ff7c8067200h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n256,span8u,32i)                                                             | Block256<byte> load<byte>(N256 w, Span<byte> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 18 ec 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 c9 d3 6f ff cc e8 83 d7 6f ff
246       | 7ff7c8067300h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n256,span8i,32i)                                                             | Block256<sbyte> load<sbyte>(N256 w, Span<sbyte> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 18 eb 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 c9 d2 6f ff cc e8 83 d6 6f ff
247       | 7ff7c8067400h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n256,span16u,32i)                                                           | Block256<ushort> load<ushort>(N256 w, Span<ushort> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1a ea 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 cb d1 6f ff cc e8 85 d5 6f ff
248       | 7ff7c8067500h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n256,span16i,32i)                                                           | Block256<short> load<short>(N256 w, Span<short> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1a e9 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 cb d0 6f ff cc e8 85 d4 6f ff
249       | 7ff7c8067600h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32u](n256,span32u,32i)                                                           | Block256<uint> load<uint>(N256 w, Span<uint> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1a e8 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 cb cf 6f ff cc e8 85 d3 6f ff
250       | 7ff7c8067700h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32i](n256,span32i,32i)                                                           | Block256<int> load<int>(N256 w, Span<int> src, int offset)                                                    | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1a e7 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 cb ce 6f ff cc e8 85 d2 6f ff
251       | 7ff7c8067800h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64u](n256,span64u,32i)                                                           | Block256<ulong> load<ulong>(N256 w, Span<ulong> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1a e6 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 cb cd 6f ff cc e8 85 d1 6f ff
252       | 7ff7c8067900h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64i](n256,span64i,32i)                                                           | Block256<long> load<long>(N256 w, Span<long> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1a e5 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 cb cc 6f ff cc e8 85 d0 6f ff
253       | 7ff7c8067a00h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32f](n256,span32f,32i)                                                           | Block256<float> load<float>(N256 w, Span<float> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1a e4 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 cb cb 6f ff cc e8 85 cf 6f ff
254       | 7ff7c8067b00h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64f](n256,span64f,32i)                                                           | Block256<double> load<double>(N256 w, Span<double> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1a e3 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 cb ca 6f ff cc e8 85 ce 6f ff
255       | 7ff7c8068010h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n512,span8u,32i)                                                             | Block512<byte> load<byte>(N512 w, Span<byte> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 3f 03 ca 83 e1 c0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 08 de 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 b9 c5 6f ff cc e8 73 c9 6f ff
256       | 7ff7c8068110h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n512,span8i,32i)                                                             | Block512<sbyte> load<sbyte>(N512 w, Span<sbyte> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 3f 03 ca 83 e1 c0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 08 dd 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 b9 c4 6f ff cc e8 73 c8 6f ff
257       | 7ff7c8068210h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n512,span16u,32i)                                                           | Block512<ushort> load<ushort>(N512 w, Span<ushort> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 0a dc 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 bb c3 6f ff cc e8 75 c7 6f ff
258       | 7ff7c8068310h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n512,span16i,32i)                                                           | Block512<short> load<short>(N512 w, Span<short> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 0a db 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 bb c2 6f ff cc e8 75 c6 6f ff
259       | 7ff7c8068410h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32u](n512,span32u,32i)                                                           | Block512<uint> load<uint>(N512 w, Span<uint> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 0a da 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 bb c1 6f ff cc e8 75 c5 6f ff
260       | 7ff7c8068510h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32i](n512,span32i,32i)                                                           | Block512<int> load<int>(N512 w, Span<int> src, int offset)                                                    | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 0a d9 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 bb c0 6f ff cc e8 75 c4 6f ff
261       | 7ff7c8068610h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64u](n512,span64u,32i)                                                           | Block512<ulong> load<ulong>(N512 w, Span<ulong> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 0a d8 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 bb bf 6f ff cc e8 75 c3 6f ff
262       | 7ff7c8068710h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64i](n512,span64i,32i)                                                           | Block512<long> load<long>(N512 w, Span<long> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 0a d7 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 bb be 6f ff cc e8 75 c2 6f ff
263       | 7ff7c8068810h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32f](n512,span32f,32i)                                                           | Block512<float> load<float>(N512 w, Span<float> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 0a d6 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 bb bd 6f ff cc e8 75 c1 6f ff
264       | 7ff7c8068910h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64f](n512,span64f,32i)                                                           | Block512<double> load<double>(N512 w, Span<double> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 0a d5 1f 5f 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 c8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 d0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 bb bc 6f ff cc e8 75 c0 6f ff
265       | 7ff7c8068a10h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n16)                                                                       | Block16<byte> parts<byte>(N16 w, Byte[] src)                                                                  | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 2d d4 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 1a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 e0 bb 6f ff
266       | 7ff7c8068ae0h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n16)                                                                       | Block16<sbyte> parts<sbyte>(N16 w, SByte[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 5d d3 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 1a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 10 bb 6f ff
267       | 7ff7c8068fc0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n16)                                                                      | Block16<ushort> parts<ushort>(N16 w, UInt16[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 7a ce 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 1a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 2d b6 6f ff
268       | 7ff7c8069090h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n16)                                                                      | Block16<short> parts<short>(N16 w, Int16[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 aa cd 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 1a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 5d b5 6f ff
269       | 7ff7c8069570h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n32)                                                                       | Block32<byte> parts<byte>(N32 w, Byte[] src)                                                                  | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ca c8 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 7d b0 6f ff
270       | 7ff7c8069640h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n32)                                                                       | Block32<sbyte> parts<sbyte>(N32 w, SByte[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 fa c7 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 ad af 6f ff
271       | 7ff7c8069710h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n32)                                                                      | Block32<ushort> parts<ushort>(N32 w, UInt16[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 2d c7 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 e0 ae 6f ff
272       | 7ff7c80697e0h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n32)                                                                      | Block32<short> parts<short>(N32 w, Int16[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 5d c6 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 10 ae 6f ff
273       | 7ff7c80698b0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32u](n32)                                                                      | Block32<uint> parts<uint>(N32 w, UInt32[] src)                                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 8a c5 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 3d ad 6f ff
274       | 7ff7c8069980h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32i](n32)                                                                      | Block32<int> parts<int>(N32 w, Int32[] src)                                                                   | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ba c4 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 6d ac 6f ff
275       | 7ff7c8069a50h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32f](n32)                                                                      | Block32<float> parts<float>(N32 w, Single[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ea c3 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 9d ab 6f ff
276       | 7ff7c8069f30h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n64)                                                                       | Block64<byte> parts<byte>(N64 w, Byte[] src)                                                                  | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 0a bf 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 bd a6 6f ff
277       | 7ff7c806a000h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n64)                                                                       | Block64<sbyte> parts<sbyte>(N64 w, SByte[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 3a be 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 ed a5 6f ff
278       | 7ff7c806a0d0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n64)                                                                      | Block64<ushort> parts<ushort>(N64 w, UInt16[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 6a bd 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 1d a5 6f ff
279       | 7ff7c806a1a0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n64)                                                                      | Block64<short> parts<short>(N64 w, Int16[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 9a bc 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 4d a4 6f ff
280       | 7ff7c806a270h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32u](n64)                                                                      | Block64<uint> parts<uint>(N64 w, UInt32[] src)                                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 cd bb 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 80 a3 6f ff
281       | 7ff7c806a340h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32i](n64)                                                                      | Block64<int> parts<int>(N64 w, Int32[] src)                                                                   | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 fd ba 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 b0 a2 6f ff
282       | 7ff7c806a410h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64u](n64)                                                                      | Block64<ulong> parts<ulong>(N64 w, UInt64[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 2a ba 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 dd a1 6f ff
283       | 7ff7c806a4e0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64i](n64)                                                                      | Block64<long> parts<long>(N64 w, Int64[] src)                                                                 | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 5a b9 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 0d a1 6f ff
284       | 7ff7c806a5b0h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32f](n64)                                                                      | Block64<float> parts<float>(N64 w, Single[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 8d b8 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 40 a0 6f ff
285       | 7ff7c806a680h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64f](n64)                                                                      | Block64<double> parts<double>(N64 w, Double[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ba b7 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 6d 9f 6f ff
286       | 7ff7c806ab60h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n128)                                                                      | Block128<byte> parts<byte>(N128 w, Byte[] src)                                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 da b2 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 8d 9a 6f ff
287       | 7ff7c806ac30h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n128)                                                                      | Block128<sbyte> parts<sbyte>(N128 w, SByte[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 0a b2 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 bd 99 6f ff
288       | 7ff7c806ad00h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n128)                                                                     | Block128<ushort> parts<ushort>(N128 w, UInt16[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 3a b1 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 ed 98 6f ff
289       | 7ff7c806add0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n128)                                                                     | Block128<short> parts<short>(N128 w, Int16[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 6a b0 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 1d 98 6f ff
290       | 7ff7c806aea0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32u](n128)                                                                     | Block128<uint> parts<uint>(N128 w, UInt32[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 9a af 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 4d 97 6f ff
291       | 7ff7c806af70h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32i](n128)                                                                     | Block128<int> parts<int>(N128 w, Int32[] src)                                                                 | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ca ae 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 7d 96 6f ff
292       | 7ff7c806b040h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64u](n128)                                                                     | Block128<ulong> parts<ulong>(N128 w, UInt64[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 fd ad 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 b0 95 6f ff
293       | 7ff7c806b110h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64i](n128)                                                                     | Block128<long> parts<long>(N128 w, Int64[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 2d ad 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 e0 94 6f ff
294       | 7ff7c806b1e0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32f](n128)                                                                     | Block128<float> parts<float>(N128 w, Single[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 5a ac 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 0d 94 6f ff
295       | 7ff7c806b2b0h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64f](n128)                                                                     | Block128<double> parts<double>(N128 w, Double[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 8d ab 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 40 93 6f ff
296       | 7ff7c806b790h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n256)                                                                      | Block256<byte> parts<byte>(N256 w, Byte[] src)                                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 1f 03 d0 83 e2 e0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 aa a6 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 5d 8e 6f ff
297       | 7ff7c806b860h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n256)                                                                      | Block256<sbyte> parts<sbyte>(N256 w, SByte[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 1f 03 d0 83 e2 e0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 da a5 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 8d 8d 6f ff
298       | 7ff7c806b930h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n256)                                                                     | Block256<ushort> parts<ushort>(N256 w, UInt16[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 0a a5 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 bd 8c 6f ff
299       | 7ff7c806ba00h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n256)                                                                     | Block256<short> parts<short>(N256 w, Int16[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 3a a4 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 ed 8b 6f ff
300       | 7ff7c806bad0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32u](n256)                                                                     | Block256<uint> parts<uint>(N256 w, UInt32[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 6a a3 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 1d 8b 6f ff
301       | 7ff7c806bba0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32i](n256)                                                                     | Block256<int> parts<int>(N256 w, Int32[] src)                                                                 | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 9a a2 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 4d 8a 6f ff
302       | 7ff7c806bc70h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64u](n256)                                                                     | Block256<ulong> parts<ulong>(N256 w, UInt64[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ca a1 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 7d 89 6f ff
303       | 7ff7c806bd40h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64i](n256)                                                                     | Block256<long> parts<long>(N256 w, Int64[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 fa a0 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 ad 88 6f ff
304       | 7ff7c806be10h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32f](n256)                                                                     | Block256<float> parts<float>(N256 w, Single[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 2a a0 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 dd 87 6f ff
305       | 7ff7c806bee0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64f](n256)                                                                     | Block256<double> parts<double>(N256 w, Double[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 5a 9f 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 0d 87 6f ff
306       | 7ff7c806bfb0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n512)                                                                      | Block512<byte> parts<byte>(N512 w, Byte[] src)                                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 3f 03 d0 83 e2 c0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 8a 9e 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 3d 86 6f ff
307       | 7ff7c806c080h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n512)                                                                      | Block512<sbyte> parts<sbyte>(N512 w, SByte[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 3f 03 d0 83 e2 c0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ba 9d 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 6d 85 6f ff
308       | 7ff7c806c150h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n512)                                                                     | Block512<ushort> parts<ushort>(N512 w, UInt16[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 1f 03 d0 83 e2 e0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ea 9c 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 9d 84 6f ff
309       | 7ff7c806c220h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n512)                                                                     | Block512<short> parts<short>(N512 w, Int16[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 1f 03 d0 83 e2 e0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 1a 9c 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 cd 83 6f ff
310       | 7ff7c806c2f0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32u](n512)                                                                     | Block512<uint> parts<uint>(N512 w, UInt32[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 4a 9b 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 fd 82 6f ff
311       | 7ff7c806c3c0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32i](n512)                                                                     | Block512<int> parts<int>(N512 w, Int32[] src)                                                                 | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 7a 9a 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 2d 82 6f ff
312       | 7ff7c806c490h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64u](n512)                                                                     | Block512<ulong> parts<ulong>(N512 w, UInt64[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 aa 99 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 5d 81 6f ff
313       | 7ff7c806c560h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64i](n512)                                                                     | Block512<long> parts<long>(N512 w, Int64[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 da 98 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 8d 80 6f ff
314       | 7ff7c806c630h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32f](n512)                                                                     | Block512<float> parts<float>(N512 w, Single[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 0a 98 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 bd 7f 6f ff
315       | 7ff7c806c700h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64f](n512)                                                                     | Block512<double> parts<double>(N512 w, Double[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 3a 97 1f 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 d8 fa 3a 28 b9 02 00 00 48 8b 09 48 b8 e0 fa 3a 28 b9 02 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 ed 7e 6f ff
316       | 7ff7c806c7d0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[8u](8u~ref)                                                                    | in void* pvoid<byte>(ref byte src)                                                                            | 0f 1f 44 00 00 48 8b c1 c3
317       | 7ff7c806c7f0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[8i](8i~ref)                                                                    | in void* pvoid<sbyte>(ref sbyte src)                                                                          | 0f 1f 44 00 00 48 8b c1 c3
318       | 7ff7c806c810h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[16u](16u~ref)                                                                  | in void* pvoid<ushort>(ref ushort src)                                                                        | 0f 1f 44 00 00 48 8b c1 c3
319       | 7ff7c806cc40h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[16i](16i~ref)                                                                  | in void* pvoid<short>(ref short src)                                                                          | 0f 1f 44 00 00 48 8b c1 c3
320       | 7ff7c806cc60h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[32u](32u~ref)                                                                  | in void* pvoid<uint>(ref uint src)                                                                            | 0f 1f 44 00 00 48 8b c1 c3
321       | 7ff7c806cc80h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[32i](32i~ref)                                                                  | in void* pvoid<int>(ref int src)                                                                              | 0f 1f 44 00 00 48 8b c1 c3
322       | 7ff7c806cca0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[64u](64u~ref)                                                                  | in void* pvoid<ulong>(ref ulong src)                                                                          | 0f 1f 44 00 00 48 8b c1 c3
323       | 7ff7c806ccc0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[64i](64i~ref)                                                                  | in void* pvoid<long>(ref long src)                                                                            | 0f 1f 44 00 00 48 8b c1 c3
324       | 7ff7c806cce0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[32f](32f~ref)                                                                  | in void* pvoid<float>(ref float src)                                                                          | 0f 1f 44 00 00 48 8b c1 c3
325       | 7ff7c806cd00h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[64f](64f~ref)                                                                  | in void* pvoid<double>(ref double src)                                                                        | 0f 1f 44 00 00 48 8b c1 c3
326       | 7ff7c806cd20h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](8u~ref)                                                                        | in byte* ptr<byte>(ref byte src)                                                                              | 0f 1f 44 00 00 48 8b c1 c3
327       | 7ff7c806cd40h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](8i~ref)                                                                        | in sbyte* ptr<sbyte>(ref sbyte src)                                                                           | 0f 1f 44 00 00 48 8b c1 c3
328       | 7ff7c806cd60h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](16u~ref)                                                                      | in ushort* ptr<ushort>(ref ushort src)                                                                        | 0f 1f 44 00 00 48 8b c1 c3
329       | 7ff7c806cd80h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](16i~ref)                                                                      | in short* ptr<short>(ref short src)                                                                           | 0f 1f 44 00 00 48 8b c1 c3
330       | 7ff7c806cda0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](32u~ref)                                                                      | in uint* ptr<uint>(ref uint src)                                                                              | 0f 1f 44 00 00 48 8b c1 c3
331       | 7ff7c806cdc0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](32i~ref)                                                                      | in int* ptr<int>(ref int src)                                                                                 | 0f 1f 44 00 00 48 8b c1 c3
332       | 7ff7c806cde0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64u](64u~ref)                                                                      | in ulong* ptr<ulong>(ref ulong src)                                                                           | 0f 1f 44 00 00 48 8b c1 c3
333       | 7ff7c806ce00h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64i](64i~ref)                                                                      | in long* ptr<long>(ref long src)                                                                              | 0f 1f 44 00 00 48 8b c1 c3
334       | 7ff7c806ce20h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](32f~ref)                                                                      | in float* ptr<float>(ref float src)                                                                           | 0f 1f 44 00 00 48 8b c1 c3
335       | 7ff7c806ce40h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64f](64f~ref)                                                                      | in double* ptr<double>(ref double src)                                                                        | 0f 1f 44 00 00 48 8b c1 c3
336       | 7ff7c806ce60h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b16x8u~in)                                                                     | in byte* ptr<byte>(in Block16<byte> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
337       | 7ff7c806ce80h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b16x8i~in)                                                                     | in sbyte* ptr<sbyte>(in Block16<sbyte> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
338       | 7ff7c806cea0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b16x16u~in)                                                                   | in ushort* ptr<ushort>(in Block16<ushort> src)                                                                | 0f 1f 44 00 00 48 8b 01 c3
339       | 7ff7c806cec0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b16x16i~in)                                                                   | in short* ptr<short>(in Block16<short> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
340       | 7ff7c806d2f0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b32x8u~in)                                                                     | in byte* ptr<byte>(in Block32<byte> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
341       | 7ff7c806d310h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b32x8i~in)                                                                     | in sbyte* ptr<sbyte>(in Block32<sbyte> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
342       | 7ff7c806d330h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b32x16u~in)                                                                   | in ushort* ptr<ushort>(in Block32<ushort> src)                                                                | 0f 1f 44 00 00 48 8b 01 c3
343       | 7ff7c806d350h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b32x16i~in)                                                                   | in short* ptr<short>(in Block32<short> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
344       | 7ff7c806d370h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](b32x32u~in)                                                                   | in uint* ptr<uint>(in Block32<uint> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
345       | 7ff7c806d390h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](b32x32i~in)                                                                   | in int* ptr<int>(in Block32<int> src)                                                                         | 0f 1f 44 00 00 48 8b 01 c3
346       | 7ff7c806d3b0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](b32x32f~in)                                                                   | in float* ptr<float>(in Block32<float> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
347       | 7ff7c806d3d0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b64x8u~in)                                                                     | in byte* ptr<byte>(in Block64<byte> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
348       | 7ff7c806d3f0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b64x8i~in)                                                                     | in sbyte* ptr<sbyte>(in Block64<sbyte> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
349       | 7ff7c806d410h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b64x16u~in)                                                                   | in ushort* ptr<ushort>(in Block64<ushort> src)                                                                | 0f 1f 44 00 00 48 8b 01 c3
350       | 7ff7c806d430h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b64x16i~in)                                                                   | in short* ptr<short>(in Block64<short> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
351       | 7ff7c806d450h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](b64x32u~in)                                                                   | in uint* ptr<uint>(in Block64<uint> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
352       | 7ff7c806d470h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](b64x32i~in)                                                                   | in int* ptr<int>(in Block64<int> src)                                                                         | 0f 1f 44 00 00 48 8b 01 c3
353       | 7ff7c806d490h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64u](b64x64u~in)                                                                   | in ulong* ptr<ulong>(in Block64<ulong> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
354       | 7ff7c806d4b0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64i](b64x64i~in)                                                                   | in long* ptr<long>(in Block64<long> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
355       | 7ff7c806d8e0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](b64x32f~in)                                                                   | in float* ptr<float>(in Block64<float> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
356       | 7ff7c806d900h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64f](b64x64f~in)                                                                   | in double* ptr<double>(in Block64<double> src)                                                                | 0f 1f 44 00 00 48 8b 01 c3
357       | 7ff7c806d920h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b128x8u~in)                                                                    | in byte* ptr<byte>(in Block128<byte> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
358       | 7ff7c806d940h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b128x8i~in)                                                                    | in sbyte* ptr<sbyte>(in Block128<sbyte> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
359       | 7ff7c806d960h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b128x16u~in)                                                                  | in ushort* ptr<ushort>(in Block128<ushort> src)                                                               | 0f 1f 44 00 00 48 8b 01 c3
360       | 7ff7c806d980h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b128x16i~in)                                                                  | in short* ptr<short>(in Block128<short> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
361       | 7ff7c806d9a0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](b128x32u~in)                                                                  | in uint* ptr<uint>(in Block128<uint> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
362       | 7ff7c806d9c0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](b128x32i~in)                                                                  | in int* ptr<int>(in Block128<int> src)                                                                        | 0f 1f 44 00 00 48 8b 01 c3
363       | 7ff7c806d9e0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64u](b128x64u~in)                                                                  | in ulong* ptr<ulong>(in Block128<ulong> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
364       | 7ff7c806da00h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64i](b128x64i~in)                                                                  | in long* ptr<long>(in Block128<long> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
365       | 7ff7c806da20h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](b128x32f~in)                                                                  | in float* ptr<float>(in Block128<float> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
366       | 7ff7c806da40h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64f](b128x64f~in)                                                                  | in double* ptr<double>(in Block128<double> src)                                                               | 0f 1f 44 00 00 48 8b 01 c3
367       | 7ff7c806de70h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b256x8u~in)                                                                    | in byte* ptr<byte>(in Block256<byte> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
368       | 7ff7c806de90h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b256x8i~in)                                                                    | in sbyte* ptr<sbyte>(in Block256<sbyte> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
369       | 7ff7c806deb0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b256x16u~in)                                                                  | in ushort* ptr<ushort>(in Block256<ushort> src)                                                               | 0f 1f 44 00 00 48 8b 01 c3
370       | 7ff7c806ded0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b256x16i~in)                                                                  | in short* ptr<short>(in Block256<short> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
371       | 7ff7c806def0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](b256x32u~in)                                                                  | in uint* ptr<uint>(in Block256<uint> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
372       | 7ff7c806df10h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](b256x32i~in)                                                                  | in int* ptr<int>(in Block256<int> src)                                                                        | 0f 1f 44 00 00 48 8b 01 c3
373       | 7ff7c806df30h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64u](b256x64u~in)                                                                  | in ulong* ptr<ulong>(in Block256<ulong> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
374       | 7ff7c806df50h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64i](b256x64i~in)                                                                  | in long* ptr<long>(in Block256<long> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
375       | 7ff7c806df70h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](b256x32f~in)                                                                  | in float* ptr<float>(in Block256<float> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
376       | 7ff7c806df90h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64f](b256x64f~in)                                                                  | in double* ptr<double>(in Block256<double> src)                                                               | 0f 1f 44 00 00 48 8b 01 c3
377       | 7ff7c806e3c0h   | 17      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b16x8u~in,32i)                                                                 | in byte* ptr<byte>(in Block16<byte> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 03 c2 c3
378       | 7ff7c806e3f0h   | 17      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b16x8i~in,32i)                                                                 | in sbyte* ptr<sbyte>(in Block16<sbyte> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 03 c2 c3
379       | 7ff7c806e420h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[16u](b16x16u~in,32i)                                                               | in ushort* ptr<ushort>(in Block16<ushort> src, int block)                                                     | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 50 c3
380       | 7ff7c806e440h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[16i](b16x16i~in,32i)                                                               | in short* ptr<short>(in Block16<short> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 50 c3
381       | 7ff7c806e870h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b32x8u~in,32i)                                                                 | in byte* ptr<byte>(in Block32<byte> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 03 c2 c3
382       | 7ff7c806e8a0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b32x8i~in,32i)                                                                 | in sbyte* ptr<sbyte>(in Block32<sbyte> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 03 c2 c3
383       | 7ff7c806e8d0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b32x16u~in,32i)                                                               | in ushort* ptr<ushort>(in Block32<ushort> src, int block)                                                     | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 50 c3
384       | 7ff7c806e900h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b32x16i~in,32i)                                                               | in short* ptr<short>(in Block32<short> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 50 c3
385       | 7ff7c806e930h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[32u](b32x32u~in,32i)                                                               | in uint* ptr<uint>(in Block32<uint> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
386       | 7ff7c806e950h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[32i](b32x32i~in,32i)                                                               | in int* ptr<int>(in Block32<int> src, int block)                                                              | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
387       | 7ff7c806e970h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[32f](b32x32f~in,32i)                                                               | in float* ptr<float>(in Block32<float> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
388       | 7ff7c806eda0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b64x8u~in,32i)                                                                 | in byte* ptr<byte>(in Block64<byte> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 03 c2 c3
389       | 7ff7c806edd0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b64x8i~in,32i)                                                                 | in sbyte* ptr<sbyte>(in Block64<sbyte> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 03 c2 c3
390       | 7ff7c806ee00h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16u](b64x16u~in,32i)                                                               | in ushort* ptr<ushort>(in Block64<ushort> src, int block)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 50 c3
391       | 7ff7c806ee30h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16i](b64x16i~in,32i)                                                               | in short* ptr<short>(in Block64<short> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 50 c3
392       | 7ff7c806ee60h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](b64x32u~in,32i)                                                               | in uint* ptr<uint>(in Block64<uint> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
393       | 7ff7c806ee90h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](b64x32i~in,32i)                                                               | in int* ptr<int>(in Block64<int> src, int block)                                                              | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
394       | 7ff7c806eec0h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[64u](b64x64u~in,32i)                                                               | in ulong* ptr<ulong>(in Block64<ulong> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
395       | 7ff7c806eee0h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[64i](b64x64i~in,32i)                                                               | in long* ptr<long>(in Block64<long> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
396       | 7ff7c806ef00h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](b64x32f~in,32i)                                                               | in float* ptr<float>(in Block64<float> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
397       | 7ff7c806ef30h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[64f](b64x64f~in,32i)                                                               | in double* ptr<double>(in Block64<double> src, int block)                                                     | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
398       | 7ff7c806f360h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b128x8u~in,32i)                                                                | in byte* ptr<byte>(in Block128<byte> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 03 c2 c3
399       | 7ff7c806f390h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b128x8i~in,32i)                                                                | in sbyte* ptr<sbyte>(in Block128<sbyte> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 03 c2 c3
400       | 7ff7c806f3c0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16u](b128x16u~in,32i)                                                              | in ushort* ptr<ushort>(in Block128<ushort> src, int block)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 50 c3
401       | 7ff7c806f3f0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16i](b128x16i~in,32i)                                                              | in short* ptr<short>(in Block128<short> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 50 c3
402       | 7ff7c806f820h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32u](b128x32u~in,32i)                                                              | in uint* ptr<uint>(in Block128<uint> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
403       | 7ff7c806f850h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32i](b128x32i~in,32i)                                                              | in int* ptr<int>(in Block128<int> src, int block)                                                             | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
404       | 7ff7c806f880h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64u](b128x64u~in,32i)                                                              | in ulong* ptr<ulong>(in Block128<ulong> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
405       | 7ff7c806f8b0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64i](b128x64i~in,32i)                                                              | in long* ptr<long>(in Block128<long> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
406       | 7ff7c806f8e0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32f](b128x32f~in,32i)                                                              | in float* ptr<float>(in Block128<float> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
407       | 7ff7c806f910h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64f](b128x64f~in,32i)                                                              | in double* ptr<double>(in Block128<double> src, int block)                                                    | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
408       | 7ff7c806fd40h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b256x8u~in,32i)                                                                | in byte* ptr<byte>(in Block256<byte> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 03 c2 c3
409       | 7ff7c806fd70h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b256x8i~in,32i)                                                                | in sbyte* ptr<sbyte>(in Block256<sbyte> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 03 c2 c3
410       | 7ff7c806fda0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16u](b256x16u~in,32i)                                                              | in ushort* ptr<ushort>(in Block256<ushort> src, int block)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 50 c3
411       | 7ff7c806fdd0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16i](b256x16i~in,32i)                                                              | in short* ptr<short>(in Block256<short> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 50 c3
412       | 7ff7c806fe00h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32u](b256x32u~in,32i)                                                              | in uint* ptr<uint>(in Block256<uint> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
413       | 7ff7c806fe30h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32i](b256x32i~in,32i)                                                              | in int* ptr<int>(in Block256<int> src, int block)                                                             | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
414       | 7ff7c806fe60h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[64u](b256x64u~in,32i)                                                              | in ulong* ptr<ulong>(in Block256<ulong> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
415       | 7ff7c806fe90h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[64i](b256x64i~in,32i)                                                              | in long* ptr<long>(in Block256<long> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
416       | 7ff7c806fec0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32f](b256x32f~in,32i)                                                              | in float* ptr<float>(in Block256<float> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
417       | 7ff7c806fef0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[64f](b256x64f~in,32i)                                                              | in double* ptr<double>(in Block256<double> src, int block)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
418       | 7ff7c806ff20h   | 17      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[8u](b16x8u~in,32i)                                                     | ref byte reference<byte>(in Block16<byte> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 03 c2 c3
419       | 7ff7c806ff50h   | 17      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[8i](b16x8i~in,32i)                                                     | ref sbyte reference<sbyte>(in Block16<sbyte> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 03 c2 c3
420       | 7ff7c806ff80h   | 16      | CTC_RET_SBB         | hex://blocks/api?reference#reference_g[16u](b16x16u~in,32i)                                                   | ref ushort reference<ushort>(in Block16<ushort> src, int index)                                               | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 50 c3
421       | 7ff7c806ffa0h   | 16      | CTC_RET_SBB         | hex://blocks/api?reference#reference_g[16i](b16x16i~in,32i)                                                   | ref short reference<short>(in Block16<short> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 50 c3
422       | 7ff7c806ffc0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[8u](b32x8u~in,32i)                                                     | ref byte reference<byte>(in Block32<byte> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 03 c2 c3
423       | 7ff7c806fff0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[8i](b32x8i~in,32i)                                                     | ref sbyte reference<sbyte>(in Block32<sbyte> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 03 c2 c3
424       | 7ff7c8070020h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[16u](b32x16u~in,32i)                                                   | ref ushort reference<ushort>(in Block32<ushort> src, int index)                                               | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 50 c3
425       | 7ff7c8070050h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[16i](b32x16i~in,32i)                                                   | ref short reference<short>(in Block32<short> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 50 c3
426       | 7ff7c8070080h   | 16      | CTC_RET_SBB         | hex://blocks/api?reference#reference_g[32u](b32x32u~in,32i)                                                   | ref uint reference<uint>(in Block32<uint> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
427       | 7ff7c80700a0h   | 16      | CTC_RET_SBB         | hex://blocks/api?reference#reference_g[32i](b32x32i~in,32i)                                                   | ref int reference<int>(in Block32<int> src, int index)                                                        | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
428       | 7ff7c80700c0h   | 16      | CTC_RET_SBB         | hex://blocks/api?reference#reference_g[32f](b32x32f~in,32i)                                                   | ref float reference<float>(in Block32<float> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
429       | 7ff7c80700e0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[8u](b64x8u~in,32i)                                                     | ref byte reference<byte>(in Block64<byte> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 03 c2 c3
430       | 7ff7c8070110h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[8i](b64x8i~in,32i)                                                     | ref sbyte reference<sbyte>(in Block64<sbyte> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 03 c2 c3
431       | 7ff7c8070140h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[16u](b64x16u~in,32i)                                                   | ref ushort reference<ushort>(in Block64<ushort> src, int index)                                               | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 50 c3
432       | 7ff7c8070170h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[16i](b64x16i~in,32i)                                                   | ref short reference<short>(in Block64<short> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 50 c3
433       | 7ff7c80701a0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[32u](b64x32u~in,32i)                                                   | ref uint reference<uint>(in Block64<uint> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
434       | 7ff7c80701d0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[32i](b64x32i~in,32i)                                                   | ref int reference<int>(in Block64<int> src, int index)                                                        | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
435       | 7ff7c8070200h   | 16      | CTC_RET_SBB         | hex://blocks/api?reference#reference_g[64u](b64x64u~in,32i)                                                   | ref ulong reference<ulong>(in Block64<ulong> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
436       | 7ff7c8070220h   | 16      | CTC_RET_SBB         | hex://blocks/api?reference#reference_g[64i](b64x64i~in,32i)                                                   | ref long reference<long>(in Block64<long> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
437       | 7ff7c8070240h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[32f](b64x32f~in,32i)                                                   | ref float reference<float>(in Block64<float> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
438       | 7ff7c8070270h   | 16      | CTC_RET_SBB         | hex://blocks/api?reference#reference_g[64f](b64x64f~in,32i)                                                   | ref double reference<double>(in Block64<double> src, int index)                                               | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
439       | 7ff7c8070290h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[8u](b128x8u~in,32i)                                                    | ref byte reference<byte>(in Block128<byte> src, int index)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 03 c2 c3
440       | 7ff7c80702c0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[8i](b128x8i~in,32i)                                                    | ref sbyte reference<sbyte>(in Block128<sbyte> src, int index)                                                 | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 03 c2 c3
441       | 7ff7c80702f0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[16u](b128x16u~in,32i)                                                  | ref ushort reference<ushort>(in Block128<ushort> src, int index)                                              | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 50 c3
442       | 7ff7c8070320h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[16i](b128x16i~in,32i)                                                  | ref short reference<short>(in Block128<short> src, int index)                                                 | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 50 c3
443       | 7ff7c8070350h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[32u](b128x32u~in,32i)                                                  | ref uint reference<uint>(in Block128<uint> src, int index)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
444       | 7ff7c8070380h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[32i](b128x32i~in,32i)                                                  | ref int reference<int>(in Block128<int> src, int index)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
445       | 7ff7c80703b0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[64u](b128x64u~in,32i)                                                  | ref ulong reference<ulong>(in Block128<ulong> src, int index)                                                 | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
446       | 7ff7c80703e0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[64i](b128x64i~in,32i)                                                  | ref long reference<long>(in Block128<long> src, int index)                                                    | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
447       | 7ff7c8070410h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[32f](b128x32f~in,32i)                                                  | ref float reference<float>(in Block128<float> src, int index)                                                 | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
448       | 7ff7c8070440h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[64f](b128x64f~in,32i)                                                  | ref double reference<double>(in Block128<double> src, int index)                                              | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
449       | 7ff7c8070870h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[8u](b256x8u~in,32i)                                                    | ref byte reference<byte>(in Block256<byte> src, int index)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 03 c2 c3
450       | 7ff7c80708a0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[8i](b256x8i~in,32i)                                                    | ref sbyte reference<sbyte>(in Block256<sbyte> src, int index)                                                 | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 03 c2 c3
451       | 7ff7c80708d0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[16u](b256x16u~in,32i)                                                  | ref ushort reference<ushort>(in Block256<ushort> src, int index)                                              | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 50 c3
452       | 7ff7c8070900h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[16i](b256x16i~in,32i)                                                  | ref short reference<short>(in Block256<short> src, int index)                                                 | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 50 c3
453       | 7ff7c8070930h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[32u](b256x32u~in,32i)                                                  | ref uint reference<uint>(in Block256<uint> src, int index)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
454       | 7ff7c8070960h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[32i](b256x32i~in,32i)                                                  | ref int reference<int>(in Block256<int> src, int index)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
455       | 7ff7c8070990h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[64u](b256x64u~in,32i)                                                  | ref ulong reference<ulong>(in Block256<ulong> src, int index)                                                 | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
456       | 7ff7c80709c0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[64i](b256x64i~in,32i)                                                  | ref long reference<long>(in Block256<long> src, int index)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
457       | 7ff7c80709f0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[32f](b256x32f~in,32i)                                                  | ref float reference<float>(in Block256<float> src, int index)                                                 | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
458       | 7ff7c8070a20h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[64f](b256x64f~in,32i)                                                  | ref double reference<double>(in Block256<double> src, int index)                                              | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
459       | 7ff7c8070e50h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[8u](b512x8u~in,32i)                                                    | ref byte reference<byte>(in Block512<byte> src, int index)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 06 48 63 d2 48 03 c2 c3
460       | 7ff7c8070e80h   | 18      | CTC_RET_Zx3         | hex://blocks/api?reference#reference_g[8i](b512x8i~in,32i)                                                    | ref sbyte reference<sbyte>(in Block512<sbyte> src, int index)                                                 | 0f 1f 44 00 00 48 8b 01 c1 e2 06 48 63 d2 48 03 c2 c3
461       | 7ff7c8070eb0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[16u](b512x16u~in,32i)                                                  | ref ushort reference<ushort>(in Block512<ushort> src, int index)                                              | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 8d 04 50 c3
462       | 7ff7c8070ee0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[16i](b512x16i~in,32i)                                                  | ref short reference<short>(in Block512<short> src, int index)                                                 | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 8d 04 50 c3
463       | 7ff7c8070f10h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[32u](b512x32u~in,32i)                                                  | ref uint reference<uint>(in Block512<uint> src, int index)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 c3
464       | 7ff7c8070f40h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[32i](b512x32i~in,32i)                                                  | ref int reference<int>(in Block512<int> src, int index)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 c3
465       | 7ff7c8070f70h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[64u](b512x64u~in,32i)                                                  | ref ulong reference<ulong>(in Block512<ulong> src, int index)                                                 | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 c3
466       | 7ff7c8070fa0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[64i](b512x64i~in,32i)                                                  | ref long reference<long>(in Block512<long> src, int index)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 c3
467       | 7ff7c8070fd0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[32f](b512x32f~in,32i)                                                  | ref float reference<float>(in Block512<float> src, int index)                                                 | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 c3
468       | 7ff7c8071000h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?reference#reference_g[64f](b512x64f~in,32i)                                                  | ref double reference<double>(in Block512<double> src, int index)                                              | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 c3
469       | 7ff7c8071030h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n8,32i)                                                                | bool aligned<byte>(N8 n, int count)                                                                           | 0f 1f 44 00 00 b8 01 00 00 00 c3
470       | 7ff7c8071050h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n8,32i)                                                                | bool aligned<sbyte>(N8 n, int count)                                                                          | 0f 1f 44 00 00 b8 01 00 00 00 c3
471       | 7ff7c8071070h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[16u](n8,32i)                                                               | bool aligned<ushort>(N8 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
472       | 7ff7c80710a0h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[16i](n8,32i)                                                               | bool aligned<short>(N8 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
473       | 7ff7c80710d0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32u](n8,32i)                                                               | bool aligned<uint>(N8 n, int count)                                                                           | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
474       | 7ff7c8071100h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32i](n8,32i)                                                               | bool aligned<int>(N8 n, int count)                                                                            | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
475       | 7ff7c8071130h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64u](n8,32i)                                                               | bool aligned<ulong>(N8 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
476       | 7ff7c8071160h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64i](n8,32i)                                                               | bool aligned<long>(N8 n, int count)                                                                           | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
477       | 7ff7c8071190h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32f](n8,32i)                                                               | bool aligned<float>(N8 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
478       | 7ff7c80711c0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64f](n8,32i)                                                               | bool aligned<double>(N8 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
479       | 7ff7c80711f0h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[8u](n16,32i)                                                               | bool aligned<byte>(N16 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
480       | 7ff7c8071220h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[8i](n16,32i)                                                               | bool aligned<sbyte>(N16 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
481       | 7ff7c8071250h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16u](n16,32i)                                                              | bool aligned<ushort>(N16 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
482       | 7ff7c8071280h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16i](n16,32i)                                                              | bool aligned<short>(N16 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
483       | 7ff7c80712b0h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[32u](n16,32i)                                                              | bool aligned<uint>(N16 n, int count)                                                                          | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
484       | 7ff7c80712e0h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[32i](n16,32i)                                                              | bool aligned<int>(N16 n, int count)                                                                           | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
485       | 7ff7c8071310h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64u](n16,32i)                                                              | bool aligned<ulong>(N16 n, int count)                                                                         | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
486       | 7ff7c8071340h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64i](n16,32i)                                                              | bool aligned<long>(N16 n, int count)                                                                          | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
487       | 7ff7c8071370h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[32f](n16,32i)                                                              | bool aligned<float>(N16 n, int count)                                                                         | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
488       | 7ff7c80713a0h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64f](n16,32i)                                                              | bool aligned<double>(N16 n, int count)                                                                        | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
489       | 7ff7c80713d0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n32,32i)                                                               | bool aligned<byte>(N32 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
490       | 7ff7c8071400h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n32,32i)                                                               | bool aligned<sbyte>(N32 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
491       | 7ff7c8071430h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[16u](n32,32i)                                                              | bool aligned<ushort>(N32 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
492       | 7ff7c8071460h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[16i](n32,32i)                                                              | bool aligned<short>(N32 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
493       | 7ff7c8071490h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32u](n32,32i)                                                              | bool aligned<uint>(N32 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
494       | 7ff7c80714c0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32i](n32,32i)                                                              | bool aligned<int>(N32 n, int count)                                                                           | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
495       | 7ff7c80714f0h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64u](n32,32i)                                                              | bool aligned<ulong>(N32 n, int count)                                                                         | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
496       | 7ff7c8071520h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64i](n32,32i)                                                              | bool aligned<long>(N32 n, int count)                                                                          | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
497       | 7ff7c8071550h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32f](n32,32i)                                                              | bool aligned<float>(N32 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
498       | 7ff7c8071580h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64f](n32,32i)                                                              | bool aligned<double>(N32 n, int count)                                                                        | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
499       | 7ff7c80715b0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n64,32i)                                                               | bool aligned<byte>(N64 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
500       | 7ff7c80715e0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n64,32i)                                                               | bool aligned<sbyte>(N64 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
501       | 7ff7c8071610h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16u](n64,32i)                                                              | bool aligned<ushort>(N64 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
502       | 7ff7c8071640h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16i](n64,32i)                                                              | bool aligned<short>(N64 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
503       | 7ff7c8071670h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[32u](n64,32i)                                                              | bool aligned<uint>(N64 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
504       | 7ff7c80716a0h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[32i](n64,32i)                                                              | bool aligned<int>(N64 n, int count)                                                                           | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
505       | 7ff7c80716d0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64u](n64,32i)                                                              | bool aligned<ulong>(N64 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
506       | 7ff7c8071700h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64i](n64,32i)                                                              | bool aligned<long>(N64 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
507       | 7ff7c8071730h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[32f](n64,32i)                                                              | bool aligned<float>(N64 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
508       | 7ff7c8071760h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64f](n64,32i)                                                              | bool aligned<double>(N64 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
509       | 7ff7c8071790h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n128,32i)                                                              | bool aligned<byte>(N128 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
510       | 7ff7c80717c0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n128,32i)                                                              | bool aligned<sbyte>(N128 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
511       | 7ff7c80717f0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16u](n128,32i)                                                             | bool aligned<ushort>(N128 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
512       | 7ff7c8071820h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16i](n128,32i)                                                             | bool aligned<short>(N128 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
513       | 7ff7c8071850h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32u](n128,32i)                                                             | bool aligned<uint>(N128 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
514       | 7ff7c8071880h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32i](n128,32i)                                                             | bool aligned<int>(N128 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
515       | 7ff7c80718b0h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[64u](n128,32i)                                                             | bool aligned<ulong>(N128 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
516       | 7ff7c80718e0h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[64i](n128,32i)                                                             | bool aligned<long>(N128 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
517       | 7ff7c8071910h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32f](n128,32i)                                                             | bool aligned<float>(N128 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
518       | 7ff7c8071940h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[64f](n128,32i)                                                             | bool aligned<double>(N128 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
519       | 7ff7c8071970h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n256,32i)                                                              | bool aligned<byte>(N256 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 83 e0 e0 2b d0 0f 94 c0 0f b6 c0 c3
520       | 7ff7c80719a0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n256,32i)                                                              | bool aligned<sbyte>(N256 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 83 e0 e0 2b d0 0f 94 c0 0f b6 c0 c3
521       | 7ff7c80719d0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16u](n256,32i)                                                             | bool aligned<ushort>(N256 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
522       | 7ff7c8071a00h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16i](n256,32i)                                                             | bool aligned<short>(N256 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
523       | 7ff7c8071a30h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32u](n256,32i)                                                             | bool aligned<uint>(N256 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
524       | 7ff7c8071a60h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32i](n256,32i)                                                             | bool aligned<int>(N256 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
525       | 7ff7c8071a90h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64u](n256,32i)                                                             | bool aligned<ulong>(N256 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
526       | 7ff7c8071ac0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64i](n256,32i)                                                             | bool aligned<long>(N256 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
527       | 7ff7c8071af0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32f](n256,32i)                                                             | bool aligned<float>(N256 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
528       | 7ff7c8071b20h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64f](n256,32i)                                                             | bool aligned<double>(N256 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
529       | 7ff7c8071b50h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n512,32i)                                                              | bool aligned<byte>(N512 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 3f 03 c2 83 e0 c0 2b d0 0f 94 c0 0f b6 c0 c3
530       | 7ff7c8071b80h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n512,32i)                                                              | bool aligned<sbyte>(N512 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 3f 03 c2 83 e0 c0 2b d0 0f 94 c0 0f b6 c0 c3
531       | 7ff7c8071bb0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16u](n512,32i)                                                             | bool aligned<ushort>(N512 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 83 e0 e0 2b d0 0f 94 c0 0f b6 c0 c3
532       | 7ff7c8071be0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16i](n512,32i)                                                             | bool aligned<short>(N512 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 83 e0 e0 2b d0 0f 94 c0 0f b6 c0 c3
533       | 7ff7c8071c10h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32u](n512,32i)                                                             | bool aligned<uint>(N512 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
534       | 7ff7c8071c40h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32i](n512,32i)                                                             | bool aligned<int>(N512 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
535       | 7ff7c8071c70h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64u](n512,32i)                                                             | bool aligned<ulong>(N512 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
536       | 7ff7c8071ca0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64i](n512,32i)                                                             | bool aligned<long>(N512 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
537       | 7ff7c8071cd0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32f](n512,32i)                                                             | bool aligned<float>(N512 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
538       | 7ff7c8071d00h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64f](n512,32i)                                                             | bool aligned<double>(N512 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
539       | 7ff7c8071d30h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[8u](n16,32i,8u)                                                                | Block16<byte> alloc<byte>(N16 w, int blocks, byte t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 10 ea 72 c7 f7 7f 00 00 e8 85 50 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 16 41 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
540       | 7ff7c8071da0h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[8i](n16,32i,8i)                                                                | Block16<sbyte> alloc<sbyte>(N16 w, int blocks, sbyte t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 98 f0 72 c7 f7 7f 00 00 e8 15 50 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 a6 40 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
541       | 7ff7c8071e10h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16u](n16,32i,16u)                                                              | Block16<ushort> alloc<ushort>(N16 w, int blocks, ushort t)                                                    | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 60 3e fe c7 f7 7f 00 00 e8 a8 4f 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 39 40 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
542       | 7ff7c8071e80h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16i](n16,32i,16i)                                                              | Block16<short> alloc<short>(N16 w, int blocks, short t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 50 21 14 c8 f7 7f 00 00 e8 38 4f 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 c9 3f 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
543       | 7ff7c8072300h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8u](n32,32i,8u)                                                                | Block32<byte> alloc<byte>(N32 w, int blocks, byte t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 10 ea 72 c7 f7 7f 00 00 e8 b4 4a 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 45 3b 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
544       | 7ff7c8072370h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8i](n32,32i,8i)                                                                | Block32<sbyte> alloc<sbyte>(N32 w, int blocks, sbyte t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 98 f0 72 c7 f7 7f 00 00 e8 44 4a 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 d5 3a 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
545       | 7ff7c80723e0h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[16u](n32,32i,16u)                                                              | Block32<ushort> alloc<ushort>(N32 w, int blocks, ushort t)                                                    | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 60 3e fe c7 f7 7f 00 00 e8 d5 49 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 66 3a 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
546       | 7ff7c8072450h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[16i](n32,32i,16i)                                                              | Block32<short> alloc<short>(N32 w, int blocks, short t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 50 21 14 c8 f7 7f 00 00 e8 65 49 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 f6 39 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
547       | 7ff7c80724c0h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32u](n32,32i,32u)                                                              | Block32<uint> alloc<uint>(N32 w, int blocks, uint t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 f8 2d fe c7 f7 7f 00 00 e8 f8 48 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 89 39 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
548       | 7ff7c8072530h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32i](n32,32i,32i)                                                              | Block32<int> alloc<int>(N32 w, int blocks, int t)                                                             | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 48 5f 7f c7 f7 7f 00 00 e8 88 48 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 19 39 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
549       | 7ff7c80725a0h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32f](n32,32i,32f)                                                              | Block32<float> alloc<float>(N32 w, int blocks, float t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 b8 16 c7 c7 f7 7f 00 00 e8 18 48 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 a9 38 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
550       | 7ff7c8072610h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8u](n64,32i,8u)                                                                | Block64<byte> alloc<byte>(N64 w, int blocks, byte t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 10 ea 72 c7 f7 7f 00 00 e8 a4 47 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 35 38 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
551       | 7ff7c8072680h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8i](n64,32i,8i)                                                                | Block64<sbyte> alloc<sbyte>(N64 w, int blocks, sbyte t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 98 f0 72 c7 f7 7f 00 00 e8 34 47 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 c5 37 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
552       | 7ff7c80726f0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16u](n64,32i,16u)                                                              | Block64<ushort> alloc<ushort>(N64 w, int blocks, ushort t)                                                    | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 60 3e fe c7 f7 7f 00 00 e8 c4 46 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 55 37 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
553       | 7ff7c8072760h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16i](n64,32i,16i)                                                              | Block64<short> alloc<short>(N64 w, int blocks, short t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 50 21 14 c8 f7 7f 00 00 e8 54 46 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 e5 36 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
554       | 7ff7c80727d0h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[32u](n64,32i,32u)                                                              | Block64<uint> alloc<uint>(N64 w, int blocks, uint t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 f8 2d fe c7 f7 7f 00 00 e8 e5 45 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 76 36 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
555       | 7ff7c8072c50h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[32i](n64,32i,32i)                                                              | Block64<int> alloc<int>(N64 w, int blocks, int t)                                                             | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 48 5f 7f c7 f7 7f 00 00 e8 65 41 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 f6 31 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
556       | 7ff7c8072cc0h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64u](n64,32i,64u)                                                              | Block64<ulong> alloc<ulong>(N64 w, int blocks, ulong t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 b0 69 b6 c7 f7 7f 00 00 e8 f8 40 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 89 31 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
557       | 7ff7c8072d30h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64i](n64,32i,64i)                                                              | Block64<long> alloc<long>(N64 w, int blocks, long t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 b8 4a 14 c8 f7 7f 00 00 e8 88 40 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 19 31 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
558       | 7ff7c8072da0h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[32f](n64,32i,32f)                                                              | Block64<float> alloc<float>(N64 w, int blocks, float t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 b8 16 c7 c7 f7 7f 00 00 e8 15 40 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 a6 30 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
559       | 7ff7c8072e10h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64f](n64,32i,64f)                                                              | Block64<double> alloc<double>(N64 w, int blocks, double t)                                                    | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 c0 18 c7 c7 f7 7f 00 00 e8 a8 3f 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 39 30 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
560       | 7ff7c8072e80h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8u](n128,32i,8u)                                                               | Block128<byte> alloc<byte>(N128 w, int blocks, byte t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 10 ea 72 c7 f7 7f 00 00 e8 34 3f 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 c5 2f 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
561       | 7ff7c8072ef0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8i](n128,32i,8i)                                                               | Block128<sbyte> alloc<sbyte>(N128 w, int blocks, sbyte t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 98 f0 72 c7 f7 7f 00 00 e8 c4 3e 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 55 2f 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
562       | 7ff7c8072f60h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16u](n128,32i,16u)                                                             | Block128<ushort> alloc<ushort>(N128 w, int blocks, ushort t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 60 3e fe c7 f7 7f 00 00 e8 54 3e 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 e5 2e 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
563       | 7ff7c8072fd0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16i](n128,32i,16i)                                                             | Block128<short> alloc<short>(N128 w, int blocks, short t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 50 21 14 c8 f7 7f 00 00 e8 e4 3d 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 75 2e 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
564       | 7ff7c8073040h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32u](n128,32i,32u)                                                             | Block128<uint> alloc<uint>(N128 w, int blocks, uint t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 f8 2d fe c7 f7 7f 00 00 e8 74 3d 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 05 2e 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
565       | 7ff7c80730b0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32i](n128,32i,32i)                                                             | Block128<int> alloc<int>(N128 w, int blocks, int t)                                                           | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 48 5f 7f c7 f7 7f 00 00 e8 04 3d 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 95 2d 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
566       | 7ff7c8073120h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[64u](n128,32i,64u)                                                             | Block128<ulong> alloc<ulong>(N128 w, int blocks, ulong t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 b0 69 b6 c7 f7 7f 00 00 e8 95 3c 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 26 2d 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
567       | 7ff7c8073190h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[64i](n128,32i,64i)                                                             | Block128<long> alloc<long>(N128 w, int blocks, long t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 b8 4a 14 c8 f7 7f 00 00 e8 25 3c 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 b6 2c 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
568       | 7ff7c8073200h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32f](n128,32i,32f)                                                             | Block128<float> alloc<float>(N128 w, int blocks, float t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 b8 16 c7 c7 f7 7f 00 00 e8 b4 3b 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 45 2c 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
569       | 7ff7c8073270h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[64f](n128,32i,64f)                                                             | Block128<double> alloc<double>(N128 w, int blocks, double t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 c0 18 c7 c7 f7 7f 00 00 e8 45 3b 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 d6 2b 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
570       | 7ff7c80736f0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8u](n256,32i,8u)                                                               | Block256<byte> alloc<byte>(N256 w, int blocks, byte t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 05 49 63 d0 48 b9 10 ea 72 c7 f7 7f 00 00 e8 c4 36 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 55 27 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
571       | 7ff7c8073760h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8i](n256,32i,8i)                                                               | Block256<sbyte> alloc<sbyte>(N256 w, int blocks, sbyte t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 05 49 63 d0 48 b9 98 f0 72 c7 f7 7f 00 00 e8 54 36 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 e5 26 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
572       | 7ff7c80737d0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16u](n256,32i,16u)                                                             | Block256<ushort> alloc<ushort>(N256 w, int blocks, ushort t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 60 3e fe c7 f7 7f 00 00 e8 e4 35 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 75 26 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
573       | 7ff7c8073840h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16i](n256,32i,16i)                                                             | Block256<short> alloc<short>(N256 w, int blocks, short t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 50 21 14 c8 f7 7f 00 00 e8 74 35 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 05 26 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
574       | 7ff7c80738b0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32u](n256,32i,32u)                                                             | Block256<uint> alloc<uint>(N256 w, int blocks, uint t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 f8 2d fe c7 f7 7f 00 00 e8 04 35 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 95 25 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
575       | 7ff7c8073920h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32i](n256,32i,32i)                                                             | Block256<int> alloc<int>(N256 w, int blocks, int t)                                                           | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 48 5f 7f c7 f7 7f 00 00 e8 94 34 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 25 25 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
576       | 7ff7c8073990h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64u](n256,32i,64u)                                                             | Block256<ulong> alloc<ulong>(N256 w, int blocks, ulong t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 b0 69 b6 c7 f7 7f 00 00 e8 24 34 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 b5 24 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
577       | 7ff7c8073a00h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64i](n256,32i,64i)                                                             | Block256<long> alloc<long>(N256 w, int blocks, long t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 b8 4a 14 c8 f7 7f 00 00 e8 b4 33 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 45 24 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
578       | 7ff7c8073a70h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32f](n256,32i,32f)                                                             | Block256<float> alloc<float>(N256 w, int blocks, float t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 b8 16 c7 c7 f7 7f 00 00 e8 44 33 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 d5 23 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
579       | 7ff7c8073ae0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64f](n256,32i,64f)                                                             | Block256<double> alloc<double>(N256 w, int blocks, double t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 c0 18 c7 c7 f7 7f 00 00 e8 d4 32 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 65 23 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
580       | 7ff7c8073b50h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8u](n512,32i,8u)                                                               | Block512<byte> alloc<byte>(N512 w, int blocks, byte t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 06 49 63 d0 48 b9 10 ea 72 c7 f7 7f 00 00 e8 64 32 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 f5 22 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
581       | 7ff7c8073bc0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8i](n512,32i,8i)                                                               | Block512<sbyte> alloc<sbyte>(N512 w, int blocks, sbyte t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 06 49 63 d0 48 b9 98 f0 72 c7 f7 7f 00 00 e8 f4 31 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 85 22 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
582       | 7ff7c8073c30h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16u](n512,32i,16u)                                                             | Block512<ushort> alloc<ushort>(N512 w, int blocks, ushort t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 05 49 63 d0 48 b9 60 3e fe c7 f7 7f 00 00 e8 84 31 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 15 22 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
583       | 7ff7c8073ca0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16i](n512,32i,16i)                                                             | Block512<short> alloc<short>(N512 w, int blocks, short t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 05 49 63 d0 48 b9 50 21 14 c8 f7 7f 00 00 e8 14 31 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 a5 21 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
584       | 7ff7c8073d10h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32u](n512,32i,32u)                                                             | Block512<uint> alloc<uint>(N512 w, int blocks, uint t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 f8 2d fe c7 f7 7f 00 00 e8 a4 30 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 35 21 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
585       | 7ff7c8073d80h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32i](n512,32i,32i)                                                             | Block512<int> alloc<int>(N512 w, int blocks, int t)                                                           | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 48 5f 7f c7 f7 7f 00 00 e8 34 30 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 c5 20 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
586       | 7ff7c8073df0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64u](n512,32i,64u)                                                             | Block512<ulong> alloc<ulong>(N512 w, int blocks, ulong t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 b0 69 b6 c7 f7 7f 00 00 e8 c4 2f 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 55 20 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
587       | 7ff7c8073e60h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64i](n512,32i,64i)                                                             | Block512<long> alloc<long>(N512 w, int blocks, long t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 b8 4a 14 c8 f7 7f 00 00 e8 54 2f 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 e5 1f 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
588       | 7ff7c8073ed0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32f](n512,32i,32f)                                                             | Block512<float> alloc<float>(N512 w, int blocks, float t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 b8 16 c7 c7 f7 7f 00 00 e8 e4 2e 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 75 1f 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
589       | 7ff7c8073f40h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64f](n512,32i,64f)                                                             | Block512<double> alloc<double>(N512 w, int blocks, double t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 c0 18 c7 c7 f7 7f 00 00 e8 74 2e 1f 5f 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 05 1f 1f 5f 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
590       | 7ff7c8073fb0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[8u](32i)                                                                 | int bitcount<byte>(int cellcount)                                                                             | 0f 1f 44 00 00 8b c1 c1 e0 03 c3
591       | 7ff7c8073fd0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[8i](32i)                                                                 | int bitcount<sbyte>(int cellcount)                                                                            | 0f 1f 44 00 00 8b c1 c1 e0 03 c3
592       | 7ff7c8073ff0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[16u](32i)                                                                | int bitcount<ushort>(int cellcount)                                                                           | 0f 1f 44 00 00 8b c1 c1 e0 04 c3
593       | 7ff7c8074010h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[16i](32i)                                                                | int bitcount<short>(int cellcount)                                                                            | 0f 1f 44 00 00 8b c1 c1 e0 04 c3
594       | 7ff7c8074030h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[32u](32i)                                                                | int bitcount<uint>(int cellcount)                                                                             | 0f 1f 44 00 00 8b c1 c1 e0 05 c3
595       | 7ff7c8074050h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[32i](32i)                                                                | int bitcount<int>(int cellcount)                                                                              | 0f 1f 44 00 00 8b c1 c1 e0 05 c3
596       | 7ff7c8074070h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[64u](32i)                                                                | int bitcount<ulong>(int cellcount)                                                                            | 0f 1f 44 00 00 8b c1 c1 e0 06 c3
597       | 7ff7c8074090h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[64i](32i)                                                                | int bitcount<long>(int cellcount)                                                                             | 0f 1f 44 00 00 8b c1 c1 e0 06 c3
598       | 7ff7c80740b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[32f](32i)                                                                | int bitcount<float>(int cellcount)                                                                            | 0f 1f 44 00 00 8b c1 c1 e0 05 c3
599       | 7ff7c80744e0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[64f](32i)                                                                | int bitcount<double>(int cellcount)                                                                           | 0f 1f 44 00 00 8b c1 c1 e0 06 c3
600       | 7ff7c8074500h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b16x8u~in)                                                      | void broadcast<byte>(byte data, in Block16<byte> dst)                                                         | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 f0 e5 af c7 f7 7f 00 00 48 ff e0
601       | 7ff7c8074530h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b16x8i~in)                                                      | void broadcast<sbyte>(sbyte data, in Block16<sbyte> dst)                                                      | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 a0 a9 05 c8 f7 7f 00 00 48 ff e0
602       | 7ff7c8074560h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b16x16u~in)                                                   | void broadcast<ushort>(ushort data, in Block16<ushort> dst)                                                   | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 a8 0f 05 c8 f7 7f 00 00 48 ff e0
603       | 7ff7c8074590h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b16x16i~in)                                                   | void broadcast<short>(short data, in Block16<short> dst)                                                      | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 58 ad 05 c8 f7 7f 00 00 48 ff e0
604       | 7ff7c80745c0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b32x8u~in)                                                      | void broadcast<byte>(byte data, in Block32<byte> dst)                                                         | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 f0 e5 af c7 f7 7f 00 00 48 ff e0
605       | 7ff7c80745f0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b32x8i~in)                                                      | void broadcast<sbyte>(sbyte data, in Block32<sbyte> dst)                                                      | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 a0 a9 05 c8 f7 7f 00 00 48 ff e0
606       | 7ff7c8074620h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b32x16u~in)                                                   | void broadcast<ushort>(ushort data, in Block32<ushort> dst)                                                   | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 a8 0f 05 c8 f7 7f 00 00 48 ff e0
607       | 7ff7c8074650h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b32x16i~in)                                                   | void broadcast<short>(short data, in Block32<short> dst)                                                      | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 58 ad 05 c8 f7 7f 00 00 48 ff e0
608       | 7ff7c8074680h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32u](32u,b32x32u~in)                                                   | void broadcast<uint>(uint data, in Block32<uint> dst)                                                         | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 68 98 db c7 f7 7f 00 00 48 ff e0
609       | 7ff7c80746b0h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32i](32i,b32x32i~in)                                                   | void broadcast<int>(int data, in Block32<int> dst)                                                            | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 28 56 ae c7 f7 7f 00 00 48 ff e0
610       | 7ff7c80746e0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32f](32f,b32x32f~in)                                                   | void broadcast<float>(float data, in Block32<float> dst)                                                      | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 68 b8 05 c8 f7 7f 00 00 48 ff e0
611       | 7ff7c8074b20h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b64x8u~in)                                                      | void broadcast<byte>(byte data, in Block64<byte> dst)                                                         | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 f0 e5 af c7 f7 7f 00 00 48 ff e0
612       | 7ff7c8074b50h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b64x8i~in)                                                      | void broadcast<sbyte>(sbyte data, in Block64<sbyte> dst)                                                      | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 a0 a9 05 c8 f7 7f 00 00 48 ff e0
613       | 7ff7c8074b80h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b64x16u~in)                                                   | void broadcast<ushort>(ushort data, in Block64<ushort> dst)                                                   | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 a8 0f 05 c8 f7 7f 00 00 48 ff e0
614       | 7ff7c8074bb0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b64x16i~in)                                                   | void broadcast<short>(short data, in Block64<short> dst)                                                      | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 58 ad 05 c8 f7 7f 00 00 48 ff e0
615       | 7ff7c8074be0h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32u](32u,b64x32u~in)                                                   | void broadcast<uint>(uint data, in Block64<uint> dst)                                                         | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 68 98 db c7 f7 7f 00 00 48 ff e0
616       | 7ff7c8074c10h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32i](32i,b64x32i~in)                                                   | void broadcast<int>(int data, in Block64<int> dst)                                                            | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 28 56 ae c7 f7 7f 00 00 48 ff e0
617       | 7ff7c8074c40h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64u](64u,b64x64u~in)                                                   | void broadcast<ulong>(ulong data, in Block64<ulong> dst)                                                      | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 78 c3 05 c8 f7 7f 00 00 48 ff e0
618       | 7ff7c8074c70h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64i](64i,b64x64i~in)                                                   | void broadcast<long>(long data, in Block64<long> dst)                                                         | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 60 c4 05 c8 f7 7f 00 00 48 ff e0
619       | 7ff7c8074ca0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32f](32f,b64x32f~in)                                                   | void broadcast<float>(float data, in Block64<float> dst)                                                      | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 68 b8 05 c8 f7 7f 00 00 48 ff e0
620       | 7ff7c8074cd0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64f](64f,b64x64f~in)                                                   | void broadcast<double>(double data, in Block64<double> dst)                                                   | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 88 c6 05 c8 f7 7f 00 00 48 ff e0
621       | 7ff7c8074d00h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b128x8u~in)                                                     | void broadcast<byte>(byte data, in Block128<byte> dst)                                                        | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 f0 e5 af c7 f7 7f 00 00 48 ff e0
622       | 7ff7c8074d30h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b128x8i~in)                                                     | void broadcast<sbyte>(sbyte data, in Block128<sbyte> dst)                                                     | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 a0 a9 05 c8 f7 7f 00 00 48 ff e0
623       | 7ff7c8075170h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b128x16u~in)                                                  | void broadcast<ushort>(ushort data, in Block128<ushort> dst)                                                  | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 a8 0f 05 c8 f7 7f 00 00 48 ff e0
624       | 7ff7c80751a0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b128x16i~in)                                                  | void broadcast<short>(short data, in Block128<short> dst)                                                     | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 58 ad 05 c8 f7 7f 00 00 48 ff e0
625       | 7ff7c80751d0h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32u](32u,b128x32u~in)                                                  | void broadcast<uint>(uint data, in Block128<uint> dst)                                                        | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 68 98 db c7 f7 7f 00 00 48 ff e0
626       | 7ff7c8075200h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32i](32i,b128x32i~in)                                                  | void broadcast<int>(int data, in Block128<int> dst)                                                           | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 28 56 ae c7 f7 7f 00 00 48 ff e0
627       | 7ff7c8075230h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64u](64u,b128x64u~in)                                                  | void broadcast<ulong>(ulong data, in Block128<ulong> dst)                                                     | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 78 c3 05 c8 f7 7f 00 00 48 ff e0
628       | 7ff7c8075260h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64i](64i,b128x64i~in)                                                  | void broadcast<long>(long data, in Block128<long> dst)                                                        | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 60 c4 05 c8 f7 7f 00 00 48 ff e0
629       | 7ff7c8075290h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32f](32f,b128x32f~in)                                                  | void broadcast<float>(float data, in Block128<float> dst)                                                     | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 68 b8 05 c8 f7 7f 00 00 48 ff e0
630       | 7ff7c80752c0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64f](64f,b128x64f~in)                                                  | void broadcast<double>(double data, in Block128<double> dst)                                                  | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 88 c6 05 c8 f7 7f 00 00 48 ff e0
631       | 7ff7c80752f0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b256x8u~in)                                                     | void broadcast<byte>(byte data, in Block256<byte> dst)                                                        | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 f0 e5 af c7 f7 7f 00 00 48 ff e0
632       | 7ff7c8075320h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b256x8i~in)                                                     | void broadcast<sbyte>(sbyte data, in Block256<sbyte> dst)                                                     | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 a0 a9 05 c8 f7 7f 00 00 48 ff e0
633       | 7ff7c8075350h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b256x16u~in)                                                  | void broadcast<ushort>(ushort data, in Block256<ushort> dst)                                                  | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 a8 0f 05 c8 f7 7f 00 00 48 ff e0
634       | 7ff7c8075380h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b256x16i~in)                                                  | void broadcast<short>(short data, in Block256<short> dst)                                                     | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 58 ad 05 c8 f7 7f 00 00 48 ff e0
635       | 7ff7c80753b0h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32u](32u,b256x32u~in)                                                  | void broadcast<uint>(uint data, in Block256<uint> dst)                                                        | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 68 98 db c7 f7 7f 00 00 48 ff e0
636       | 7ff7c80753e0h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32i](32i,b256x32i~in)                                                  | void broadcast<int>(int data, in Block256<int> dst)                                                           | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 28 56 ae c7 f7 7f 00 00 48 ff e0
637       | 7ff7c8075410h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64u](64u,b256x64u~in)                                                  | void broadcast<ulong>(ulong data, in Block256<ulong> dst)                                                     | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 78 c3 05 c8 f7 7f 00 00 48 ff e0
638       | 7ff7c8075440h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64i](64i,b256x64i~in)                                                  | void broadcast<long>(long data, in Block256<long> dst)                                                        | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 60 c4 05 c8 f7 7f 00 00 48 ff e0
639       | 7ff7c8075470h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32f](32f,b256x32f~in)                                                  | void broadcast<float>(float data, in Block256<float> dst)                                                     | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 68 b8 05 c8 f7 7f 00 00 48 ff e0
640       | 7ff7c80754a0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64f](64f,b256x64f~in)                                                  | void broadcast<double>(double data, in Block256<double> dst)                                                  | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 88 c6 05 c8 f7 7f 00 00 48 ff e0
641       | 7ff7c80758e0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b512x8u~in)                                                     | void broadcast<byte>(byte data, in Block512<byte> dst)                                                        | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 f0 e5 af c7 f7 7f 00 00 48 ff e0
642       | 7ff7c8075910h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b512x8i~in)                                                     | void broadcast<sbyte>(sbyte data, in Block512<sbyte> dst)                                                     | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 a0 a9 05 c8 f7 7f 00 00 48 ff e0
643       | 7ff7c8075940h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b512x16u~in)                                                  | void broadcast<ushort>(ushort data, in Block512<ushort> dst)                                                  | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 a8 0f 05 c8 f7 7f 00 00 48 ff e0
644       | 7ff7c8075970h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b512x16i~in)                                                  | void broadcast<short>(short data, in Block512<short> dst)                                                     | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 58 ad 05 c8 f7 7f 00 00 48 ff e0
645       | 7ff7c80759a0h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32u](32u,b512x32u~in)                                                  | void broadcast<uint>(uint data, in Block512<uint> dst)                                                        | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 68 98 db c7 f7 7f 00 00 48 ff e0
646       | 7ff7c80759d0h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32i](32i,b512x32i~in)                                                  | void broadcast<int>(int data, in Block512<int> dst)                                                           | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 28 56 ae c7 f7 7f 00 00 48 ff e0
647       | 7ff7c8075a00h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64u](64u,b512x64u~in)                                                  | void broadcast<ulong>(ulong data, in Block512<ulong> dst)                                                     | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 78 c3 05 c8 f7 7f 00 00 48 ff e0
648       | 7ff7c8075a30h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64i](64i,b512x64i~in)                                                  | void broadcast<long>(long data, in Block512<long> dst)                                                        | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 60 c4 05 c8 f7 7f 00 00 48 ff e0
649       | 7ff7c8075a60h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32f](32f,b512x32f~in)                                                  | void broadcast<float>(float data, in Block512<float> dst)                                                     | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 68 b8 05 c8 f7 7f 00 00 48 ff e0
650       | 7ff7c8075a90h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64f](64f,b512x64f~in)                                                  | void broadcast<double>(double data, in Block512<double> dst)                                                  | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 88 c6 05 c8 f7 7f 00 00 48 ff e0
651       | 7ff7c8075ac0h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[8u](n16,32i)                                                           | Block16<byte> cellalloc<byte>(N16 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 2d c2 ff ff 48 8b c6 48 83 c4 20 5e c3
652       | 7ff7c8075b20h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[8i](n16,32i)                                                           | Block16<sbyte> cellalloc<sbyte>(N16 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 3d c2 ff ff 48 8b c6 48 83 c4 20 5e c3
653       | 7ff7c8075b80h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[16u](n16,32i)                                                          | Block16<ushort> cellalloc<ushort>(N16 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 57 c2 ff ff 48 8b c6 48 83 c4 20 5e c3
654       | 7ff7c8075be0h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[16i](n16,32i)                                                          | Block16<short> cellalloc<short>(N16 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 67 c2 ff ff 48 8b c6 48 83 c4 20 5e c3
655       | 7ff7c8076040h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8u](n32,32i)                                                           | Block32<byte> cellalloc<byte>(N32 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 76 c2 ff ff 48 8b c6 48 83 c4 20 5e c3
656       | 7ff7c80760b0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8i](n32,32i)                                                           | Block32<sbyte> cellalloc<sbyte>(N32 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 76 c2 ff ff 48 8b c6 48 83 c4 20 5e c3
657       | 7ff7c8076120h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[16u](n32,32i)                                                          | Block32<ushort> cellalloc<ushort>(N32 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 7d c2 ff ff 48 8b c6 48 83 c4 20 5e c3
658       | 7ff7c8076180h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[16i](n32,32i)                                                          | Block32<short> cellalloc<short>(N32 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 8d c2 ff ff 48 8b c6 48 83 c4 20 5e c3
659       | 7ff7c80761e0h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[32u](n32,32i)                                                          | Block32<uint> cellalloc<uint>(N32 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 a7 c2 ff ff 48 8b c6 48 83 c4 20 5e c3
660       | 7ff7c8076240h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[32i](n32,32i)                                                          | Block32<int> cellalloc<int>(N32 n, int cellcount)                                                             | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 b7 c2 ff ff 48 8b c6 48 83 c4 20 5e c3
661       | 7ff7c80762a0h   | 70      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[32f](n32,32i)                                                          | Block32<float> cellalloc<float>(N32 n, int cellcount)                                                         | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 c3 c2 ff ff 48 8b c6 48 83 c4 20 5e c3
662       | 7ff7c8076300h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8u](n64,32i)                                                           | Block64<byte> cellalloc<byte>(N64 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 c6 c2 ff ff 48 8b c6 48 83 c4 20 5e c3
663       | 7ff7c8076370h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8i](n64,32i)                                                           | Block64<sbyte> cellalloc<sbyte>(N64 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 c6 c2 ff ff 48 8b c6 48 83 c4 20 5e c3
664       | 7ff7c80763e0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16u](n64,32i)                                                          | Block64<ushort> cellalloc<ushort>(N64 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 c6 c2 ff ff 48 8b c6 48 83 c4 20 5e c3
665       | 7ff7c8076450h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16i](n64,32i)                                                          | Block64<short> cellalloc<short>(N64 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 c6 c2 ff ff 48 8b c6 48 83 c4 20 5e c3
666       | 7ff7c80764c0h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[32u](n64,32i)                                                          | Block64<uint> cellalloc<uint>(N64 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 cd c2 ff ff 48 8b c6 48 83 c4 20 5e c3
667       | 7ff7c8076520h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[32i](n64,32i)                                                          | Block64<int> cellalloc<int>(N64 n, int cellcount)                                                             | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 ed c6 ff ff 48 8b c6 48 83 c4 20 5e c3
668       | 7ff7c8076580h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[64u](n64,32i)                                                          | Block64<ulong> cellalloc<ulong>(N64 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 07 c7 ff ff 48 8b c6 48 83 c4 20 5e c3
669       | 7ff7c80765e0h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[64i](n64,32i)                                                          | Block64<long> cellalloc<long>(N64 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 17 c7 ff ff 48 8b c6 48 83 c4 20 5e c3
670       | 7ff7c8076640h   | 80      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[32f](n64,32i)                                                          | Block64<float> cellalloc<float>(N64 n, int cellcount)                                                         | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 19 c7 ff ff 48 8b c6 48 83 c4 20 5e c3
671       | 7ff7c80766b0h   | 70      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[64f](n64,32i)                                                          | Block64<double> cellalloc<double>(N64 n, int cellcount)                                                       | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 23 c7 ff ff 48 8b c6 48 83 c4 20 5e c3
672       | 7ff7c8076b20h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8u](n128,32i)                                                          | Block128<byte> cellalloc<byte>(N128 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 16 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
673       | 7ff7c8076b90h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8i](n128,32i)                                                          | Block128<sbyte> cellalloc<sbyte>(N128 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 16 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
674       | 7ff7c8076c00h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16u](n128,32i)                                                         | Block128<ushort> cellalloc<ushort>(N128 n, int cellcount)                                                     | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 16 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
675       | 7ff7c8076c70h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16i](n128,32i)                                                         | Block128<short> cellalloc<short>(N128 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 16 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
676       | 7ff7c8076ce0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32u](n128,32i)                                                         | Block128<uint> cellalloc<uint>(N128 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 16 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
677       | 7ff7c8076d50h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32i](n128,32i)                                                         | Block128<int> cellalloc<int>(N128 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 16 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
678       | 7ff7c8076dc0h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[64u](n128,32i)                                                         | Block128<ulong> cellalloc<ulong>(N128 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 1d c3 ff ff 48 8b c6 48 83 c4 20 5e c3
679       | 7ff7c8076e20h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[64i](n128,32i)                                                         | Block128<long> cellalloc<long>(N128 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 2d c3 ff ff 48 8b c6 48 83 c4 20 5e c3
680       | 7ff7c8076e80h   | 87      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[32f](n128,32i)                                                         | Block128<float> cellalloc<float>(N128 n, int cellcount)                                                       | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 32 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
681       | 7ff7c8076ef0h   | 80      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[64f](n128,32i)                                                         | Block128<double> cellalloc<double>(N128 n, int cellcount)                                                     | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 39 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
682       | 7ff7c8076f60h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8u](n256,32i)                                                          | Block256<byte> cellalloc<byte>(N256 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 1f 41 03 c8 c1 f9 05 41 8b d0 c1 fa 1f 83 e2 1f 41 03 d0 83 e2 e0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 46 c7 ff ff 48 8b c6 48 83 c4 20 5e c3
683       | 7ff7c8076fd0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8i](n256,32i)                                                          | Block256<sbyte> cellalloc<sbyte>(N256 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 1f 41 03 c8 c1 f9 05 41 8b d0 c1 fa 1f 83 e2 1f 41 03 d0 83 e2 e0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 46 c7 ff ff 48 8b c6 48 83 c4 20 5e c3
684       | 7ff7c8077440h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16u](n256,32i)                                                         | Block256<ushort> cellalloc<ushort>(N256 n, int cellcount)                                                     | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 46 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
685       | 7ff7c80774b0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16i](n256,32i)                                                         | Block256<short> cellalloc<short>(N256 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 46 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
686       | 7ff7c8077520h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32u](n256,32i)                                                         | Block256<uint> cellalloc<uint>(N256 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 46 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
687       | 7ff7c8077590h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32i](n256,32i)                                                         | Block256<int> cellalloc<int>(N256 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 46 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
688       | 7ff7c8077600h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[64u](n256,32i)                                                         | Block256<ulong> cellalloc<ulong>(N256 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 46 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
689       | 7ff7c8077670h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[64i](n256,32i)                                                         | Block256<long> cellalloc<long>(N256 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 46 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
690       | 7ff7c80776e0h   | 87      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[32f](n256,32i)                                                         | Block256<float> cellalloc<float>(N256 n, int cellcount)                                                       | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 42 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
691       | 7ff7c8077750h   | 87      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[64f](n256,32i)                                                         | Block256<double> cellalloc<double>(N256 n, int cellcount)                                                     | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 42 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
692       | 7ff7c80777c0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8u](n512,32i)                                                          | Block512<byte> cellalloc<byte>(N512 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 3f 41 03 c8 c1 f9 06 41 8b d0 c1 fa 1f 83 e2 3f 41 03 d0 83 e2 c0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 46 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
693       | 7ff7c8077830h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8i](n512,32i)                                                          | Block512<sbyte> cellalloc<sbyte>(N512 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 3f 41 03 c8 c1 f9 06 41 8b d0 c1 fa 1f 83 e2 3f 41 03 d0 83 e2 c0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 46 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
694       | 7ff7c80778a0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16u](n512,32i)                                                         | Block512<ushort> cellalloc<ushort>(N512 n, int cellcount)                                                     | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 1f 41 03 c8 c1 f9 05 41 8b d0 c1 fa 1f 83 e2 1f 41 03 d0 83 e2 e0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 46 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
695       | 7ff7c8077910h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16i](n512,32i)                                                         | Block512<short> cellalloc<short>(N512 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 1f 41 03 c8 c1 f9 05 41 8b d0 c1 fa 1f 83 e2 1f 41 03 d0 83 e2 e0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 46 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
696       | 7ff7c8077980h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32u](n512,32i)                                                         | Block512<uint> cellalloc<uint>(N512 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 46 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
697       | 7ff7c80779f0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32i](n512,32i)                                                         | Block512<int> cellalloc<int>(N512 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 46 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
698       | 7ff7c8077a60h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[64u](n512,32i)                                                         | Block512<ulong> cellalloc<ulong>(N512 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 46 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
699       | 7ff7c8077ad0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[64i](n512,32i)                                                         | Block512<long> cellalloc<long>(N512 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 46 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
700       | 7ff7c8077b40h   | 87      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[32f](n512,32i)                                                         | Block512<float> cellalloc<float>(N512 n, int cellcount)                                                       | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 42 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
701       | 7ff7c8077bb0h   | 87      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[64f](n512,32i)                                                         | Block512<double> cellalloc<double>(N512 n, int cellcount)                                                     | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 42 c3 ff ff 48 8b c6 48 83 c4 20 5e c3
702       | 7ff7c8077c20h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[8u](n8,32i)                                                          | int cellblocks<byte>(N8 n, int blocks)                                                                        | 0f 1f 44 00 00 8b c2 c3
703       | 7ff7c8077c40h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[8i](n8,32i)                                                          | int cellblocks<sbyte>(N8 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 c3
704       | 7ff7c8077c60h   | 10      | CTC_RET_Zx3         | hex://blocks/api?cellblocks#cellblocks_g[16u](n8,32i)                                                         | int cellblocks<ushort>(N8 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 d1 e0 c3
705       | 7ff7c8077c80h   | 10      | CTC_RET_Zx3         | hex://blocks/api?cellblocks#cellblocks_g[16i](n8,32i)                                                         | int cellblocks<short>(N8 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 d1 e0 c3
706       | 7ff7c8077ca0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[32u](n8,32i)                                                         | int cellblocks<uint>(N8 n, int blocks)                                                                        | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
707       | 7ff7c8077cc0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[32i](n8,32i)                                                         | int cellblocks<int>(N8 n, int blocks)                                                                         | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
708       | 7ff7c8077ce0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[64u](n8,32i)                                                         | int cellblocks<ulong>(N8 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
709       | 7ff7c8077d00h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[64i](n8,32i)                                                         | int cellblocks<long>(N8 n, int blocks)                                                                        | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
710       | 7ff7c8077d20h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[32f](n8,32i)                                                         | int cellblocks<float>(N8 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
711       | 7ff7c8077d40h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[64f](n8,32i)                                                         | int cellblocks<double>(N8 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
712       | 7ff7c8077d60h   | 10      | CTC_RET_Zx3         | hex://blocks/api?cellblocks#cellblocks_g[8u](n16,32i)                                                         | int cellblocks<byte>(N16 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 d1 e0 c3
713       | 7ff7c8077d80h   | 10      | CTC_RET_Zx3         | hex://blocks/api?cellblocks#cellblocks_g[8i](n16,32i)                                                         | int cellblocks<sbyte>(N16 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 d1 e0 c3
714       | 7ff7c8077da0h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[16u](n16,32i)                                                        | int cellblocks<ushort>(N16 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c3
715       | 7ff7c8077dc0h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[16i](n16,32i)                                                        | int cellblocks<short>(N16 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c3
716       | 7ff7c8077de0h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[32u](n16,32i)                                                        | int cellblocks<uint>(N16 n, int blocks)                                                                       | 0f 1f 44 00 00 33 c0 c3
717       | 7ff7c8078210h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[32i](n16,32i)                                                        | int cellblocks<int>(N16 n, int blocks)                                                                        | 0f 1f 44 00 00 33 c0 c3
718       | 7ff7c8078230h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[64u](n16,32i)                                                        | int cellblocks<ulong>(N16 n, int blocks)                                                                      | 0f 1f 44 00 00 33 c0 c3
719       | 7ff7c8078250h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[64i](n16,32i)                                                        | int cellblocks<long>(N16 n, int blocks)                                                                       | 0f 1f 44 00 00 33 c0 c3
720       | 7ff7c8078270h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[32f](n16,32i)                                                        | int cellblocks<float>(N16 n, int blocks)                                                                      | 0f 1f 44 00 00 33 c0 c3
721       | 7ff7c8078290h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[64f](n16,32i)                                                        | int cellblocks<double>(N16 n, int blocks)                                                                     | 0f 1f 44 00 00 33 c0 c3
722       | 7ff7c80782b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[8u](n32,32i)                                                         | int cellblocks<byte>(N32 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
723       | 7ff7c80782d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[8i](n32,32i)                                                         | int cellblocks<sbyte>(N32 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
724       | 7ff7c80782f0h   | 10      | CTC_RET_Zx3         | hex://blocks/api?cellblocks#cellblocks_g[16u](n32,32i)                                                        | int cellblocks<ushort>(N32 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 d1 e0 c3
725       | 7ff7c8078310h   | 10      | CTC_RET_Zx3         | hex://blocks/api?cellblocks#cellblocks_g[16i](n32,32i)                                                        | int cellblocks<short>(N32 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 d1 e0 c3
726       | 7ff7c8078330h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[32u](n32,32i)                                                        | int cellblocks<uint>(N32 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 c3
727       | 7ff7c8078350h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[32i](n32,32i)                                                        | int cellblocks<int>(N32 n, int blocks)                                                                        | 0f 1f 44 00 00 8b c2 c3
728       | 7ff7c8078370h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[64u](n32,32i)                                                        | int cellblocks<ulong>(N32 n, int blocks)                                                                      | 0f 1f 44 00 00 33 c0 c3
729       | 7ff7c8078390h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[64i](n32,32i)                                                        | int cellblocks<long>(N32 n, int blocks)                                                                       | 0f 1f 44 00 00 33 c0 c3
730       | 7ff7c80783b0h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[32f](n32,32i)                                                        | int cellblocks<float>(N32 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c3
731       | 7ff7c80783d0h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[64f](n32,32i)                                                        | int cellblocks<double>(N32 n, int blocks)                                                                     | 0f 1f 44 00 00 33 c0 c3
732       | 7ff7c80783f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[8u](n64,32i)                                                         | int cellblocks<byte>(N64 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
733       | 7ff7c8078410h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[8i](n64,32i)                                                         | int cellblocks<sbyte>(N64 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
734       | 7ff7c8078430h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[16u](n64,32i)                                                        | int cellblocks<ushort>(N64 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
735       | 7ff7c8078450h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[16i](n64,32i)                                                        | int cellblocks<short>(N64 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
736       | 7ff7c8078470h   | 10      | CTC_RET_Zx3         | hex://blocks/api?cellblocks#cellblocks_g[32u](n64,32i)                                                        | int cellblocks<uint>(N64 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 d1 e0 c3
737       | 7ff7c8078490h   | 10      | CTC_RET_Zx3         | hex://blocks/api?cellblocks#cellblocks_g[32i](n64,32i)                                                        | int cellblocks<int>(N64 n, int blocks)                                                                        | 0f 1f 44 00 00 8b c2 d1 e0 c3
738       | 7ff7c80784b0h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[64u](n64,32i)                                                        | int cellblocks<ulong>(N64 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c3
739       | 7ff7c80784d0h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[64i](n64,32i)                                                        | int cellblocks<long>(N64 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 c3
740       | 7ff7c80784f0h   | 10      | CTC_RET_Zx3         | hex://blocks/api?cellblocks#cellblocks_g[32f](n64,32i)                                                        | int cellblocks<float>(N64 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 d1 e0 c3
741       | 7ff7c8078510h   | 8       | CTC_RET_SBB         | hex://blocks/api?cellblocks#cellblocks_g[64f](n64,32i)                                                        | int cellblocks<double>(N64 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c3
742       | 7ff7c8078530h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[8u](n128,32i)                                                        | int cellblocks<byte>(N128 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
743       | 7ff7c8078550h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[8i](n128,32i)                                                        | int cellblocks<sbyte>(N128 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
744       | 7ff7c8078570h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[16u](n128,32i)                                                       | int cellblocks<ushort>(N128 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
745       | 7ff7c8078590h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[16i](n128,32i)                                                       | int cellblocks<short>(N128 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
746       | 7ff7c80785b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[32u](n128,32i)                                                       | int cellblocks<uint>(N128 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
747       | 7ff7c80785d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[32i](n128,32i)                                                       | int cellblocks<int>(N128 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
748       | 7ff7c80785f0h   | 10      | CTC_RET_Zx3         | hex://blocks/api?cellblocks#cellblocks_g[64u](n128,32i)                                                       | int cellblocks<ulong>(N128 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 d1 e0 c3
749       | 7ff7c8078610h   | 10      | CTC_RET_Zx3         | hex://blocks/api?cellblocks#cellblocks_g[64i](n128,32i)                                                       | int cellblocks<long>(N128 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 d1 e0 c3
750       | 7ff7c8078630h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[32f](n128,32i)                                                       | int cellblocks<float>(N128 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
751       | 7ff7c8078650h   | 10      | CTC_RET_Zx3         | hex://blocks/api?cellblocks#cellblocks_g[64f](n128,32i)                                                       | int cellblocks<double>(N128 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 d1 e0 c3
752       | 7ff7c8078670h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[8u](n256,32i)                                                        | int cellblocks<byte>(N256 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 05 c3
753       | 7ff7c8078690h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[8i](n256,32i)                                                        | int cellblocks<sbyte>(N256 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 05 c3
754       | 7ff7c80786b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[16u](n256,32i)                                                       | int cellblocks<ushort>(N256 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
755       | 7ff7c80786d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[16i](n256,32i)                                                       | int cellblocks<short>(N256 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
756       | 7ff7c80786f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[32u](n256,32i)                                                       | int cellblocks<uint>(N256 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
757       | 7ff7c8078710h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[32i](n256,32i)                                                       | int cellblocks<int>(N256 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
758       | 7ff7c8078730h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[64u](n256,32i)                                                       | int cellblocks<ulong>(N256 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
759       | 7ff7c8078750h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[64i](n256,32i)                                                       | int cellblocks<long>(N256 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
760       | 7ff7c8078770h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[32f](n256,32i)                                                       | int cellblocks<float>(N256 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
761       | 7ff7c8078790h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[64f](n256,32i)                                                       | int cellblocks<double>(N256 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
762       | 7ff7c80787b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[8u](n512,32i)                                                        | int cellblocks<byte>(N512 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 06 c3
763       | 7ff7c80787d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[8i](n512,32i)                                                        | int cellblocks<sbyte>(N512 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 06 c3
764       | 7ff7c80787f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[16u](n512,32i)                                                       | int cellblocks<ushort>(N512 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 05 c3
765       | 7ff7c8078810h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[16i](n512,32i)                                                       | int cellblocks<short>(N512 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 05 c3
766       | 7ff7c8078830h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[32u](n512,32i)                                                       | int cellblocks<uint>(N512 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
767       | 7ff7c8078850h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[32i](n512,32i)                                                       | int cellblocks<int>(N512 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
768       | 7ff7c8078870h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[64u](n512,32i)                                                       | int cellblocks<ulong>(N512 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
769       | 7ff7c8078890h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[64i](n512,32i)                                                       | int cellblocks<long>(N512 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
770       | 7ff7c80788b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[32f](n512,32i)                                                       | int cellblocks<float>(N512 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
771       | 7ff7c80788d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellblocks#cellblocks_g[64f](n512,32i)                                                       | int cellblocks<double>(N512 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
772       | 7ff7c80788f0h   | 113     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n128,64u,64u)                                                                   | Block128<ulong> cells(N128 n, ulong x0, ulong x1)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 49 8b f9 48 b9 b0 69 b6 c7 f7 7f 00 00 ba 02 00 00 00 e8 c2 e4 1e 5f 48 89 70 10 48 89 78 18 48 83 c0 10 ba 02 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 3c d5 1e 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
773       | 7ff7c8078980h   | 448     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n256,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u)| Block256<byte> cells(N256 n, byte x0, byte x1, byte x2, byte x3, byte x4, byte x5, byte x6, byte x7, byte x8, byte x9, byte xA, byte xB, byte xC, byte xD, byte xE, byte xF, byte x10, byte x11, byte x12, byte x13, byte x14, byte x15, byte x16, byte x17, byte x18, byte x19, byte x1A, byte x1B, byte x1C, byte x1D, byte x1E, byte x1F)| 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 89 44 24 38 48 8b d9 41 8b f0 41 8b f9 48 b9 10 ea 72 c7 f7 7f 00 00 ba 20 00 00 00 e8 2d e4 1e 5f 40 88 70 10 40 88 78 11 8b b4 24 80 00 00 00 40 88 70 12 8b b4 24 88 00 00 00 40 88 70 13 8b b4 24 90 00 00 00 40 88 70 14 8b b4 24 98 00 00 00 40 88 70 15 8b b4 24 a0 00 00 00 40 88 70 16 8b b4 24 a8 00 00 00 40 88 70 17 8b b4 24 b0 00 00 00 40 88 70 18 8b b4 24 b8 00 00 00 40 88 70 19 8b b4 24 c0 00 00 00 40 88 70 1a 8b b4 24 c8 00 00 00 40 88 70 1b 8b b4 24 d0 00 00 00 40 88 70 1c 8b b4 24 d8 00 00 00 40 88 70 1d 8b b4 24 e0 00 00 00 40 88 70 1e 8b b4 24 e8 00 00 00 40 88 70 1f 8b b4 24 f0 00 00 00 40 88 70 20 8b b4 24 f8 00 00 00 40 88 70 21 8b b4 24 00 01 00 00 40 88 70 22 8b b4 24 08 01 00 00 40 88 70 23 8b b4 24 10 01 00 00 40 88 70 24 8b b4 24 18 01 00 00 40 88 70 25 8b b4 24 20 01 00 00 40 88 70 26 8b b4 24 28 01 00 00 40 88 70 27 8b b4 24 30 01 00 00 40 88 70 28 8b b4 24 38 01 00 00 40 88 70 29 8b b4 24 40 01 00 00 40 88 70 2a 8b b4 24 48 01 00 00 40 88 70 2b 8b b4 24 50 01 00 00 40 88 70 2c 8b b4 24 58 01 00 00 40 88 70 2d 8b b4 24 60 01 00 00 40 88 70 2e 8b b4 24 68 01 00 00 40 88 70 2f 48 83 c0 10 ba 20 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 5d d3 1e 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
774       | 7ff7c8078b60h   | 272     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n256,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u)           | Block256<ushort> cells(N256 n, ushort x0, ushort x1, ushort x2, ushort x3, ushort x4, ushort x5, ushort x6, ushort x7, ushort x8, ushort x9, ushort xA, ushort xB, ushort xC, ushort xD, ushort xE, ushort xF)| 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 89 44 24 38 48 8b d9 41 8b f0 41 8b f9 48 b9 60 3e fe c7 f7 7f 00 00 ba 10 00 00 00 e8 4d e2 1e 5f 66 89 70 10 66 89 78 12 8b b4 24 80 00 00 00 66 89 70 14 8b b4 24 88 00 00 00 66 89 70 16 8b b4 24 90 00 00 00 66 89 70 18 8b b4 24 98 00 00 00 66 89 70 1a 8b b4 24 a0 00 00 00 66 89 70 1c 8b b4 24 a8 00 00 00 66 89 70 1e 8b b4 24 b0 00 00 00 66 89 70 20 8b b4 24 b8 00 00 00 66 89 70 22 8b b4 24 c0 00 00 00 66 89 70 24 8b b4 24 c8 00 00 00 66 89 70 26 8b b4 24 d0 00 00 00 66 89 70 28 8b b4 24 d8 00 00 00 66 89 70 2a 8b b4 24 e0 00 00 00 66 89 70 2c 8b b4 24 e8 00 00 00 66 89 70 2e 48 83 c0 10 ba 10 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 2d d2 1e 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
775       | 7ff7c8078c90h   | 171     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n256,32u,32u,32u,32u,32u,32u,32u,32u)                                           | Block256<uint> cells(N256 n, uint x0, uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7)          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 f8 2d fe c7 f7 7f 00 00 ba 08 00 00 00 e8 22 e1 1e 5f 89 70 10 89 78 14 8b b4 24 80 00 00 00 89 70 18 8b b4 24 88 00 00 00 89 70 1c 8b b4 24 90 00 00 00 89 70 20 8b b4 24 98 00 00 00 89 70 24 8b b4 24 a0 00 00 00 89 70 28 8b b4 24 a8 00 00 00 89 70 2c 48 83 c0 10 ba 08 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 62 d1 1e 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
776       | 7ff7c8078d60h   | 137     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n256,64u,64u,64u,64u)                                                           | Block256<ulong> cells(N256 n, ulong x0, ulong x1, ulong x2, ulong x3)                                         | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 49 8b f9 48 b9 b0 69 b6 c7 f7 7f 00 00 ba 04 00 00 00 e8 52 e0 1e 5f 48 89 70 10 48 89 78 18 48 8b b4 24 80 00 00 00 48 89 70 20 48 8b b4 24 88 00 00 00 48 89 70 28 48 83 c0 10 ba 04 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 b4 d0 1e 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
777       | 7ff7c8078e10h   | 106     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n16,16u)                                                                        | Block16<ushort> cells(N16 n, ushort x0)                                                                       | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 48 b9 60 3e fe c7 f7 7f 00 00 ba 01 00 00 00 e8 a5 df 1e 5f 66 89 70 10 48 83 c0 10 ba 01 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 23 d0 1e 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
778       | 7ff7c80792a0h   | 210     | CTC_INTRx2          | hex://blocks/api?cells#cells_(n16,64u)                                                                        | Block16<ulong> cells(N16 n, ulong x0)                                                                         | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 48 b9 b0 69 b6 c7 f7 7f 00 00 ba 01 00 00 00 e8 15 db 1e 5f 48 8b c8 48 89 71 10 b8 01 00 00 00 45 33 c0 99 41 f7 f8 b8 01 00 00 00 83 e8 00 75 3b 48 83 c1 10 b8 01 00 00 00 48 8d 54 24 30 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 30 48 89 0a 89 42 08 48 8b fb 48 8d 74 24 30 e8 7a cb 1e 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 ba 1a 00 00 00 41 b8 01 00 00 00 49 b9 d8 fa 3a 28 b9 02 00 00 4d 8b 09 48 b9 e0 fa 3a 28 b9 02 00 00 48 8b 09 48 8d 44 24 28 44 88 00 89 50 04 48 8b 54 24 28 48 89 54 24 20 ba 01 00 00 00 4d 8b c1 4c 8b c9 b9 10 00 00 00 e8 2e b3 6e ff
779       | 7ff7c8079390h   | 210     | CTC_INTRx2          | hex://blocks/api?cells#cells_(n32,64u)                                                                        | Block32<ulong> cells(N32 n, ulong x0)                                                                         | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 48 b9 b0 69 b6 c7 f7 7f 00 00 ba 01 00 00 00 e8 25 da 1e 5f 48 8b c8 48 89 71 10 b8 01 00 00 00 45 33 c0 99 41 f7 f8 b8 01 00 00 00 83 e8 00 75 3b 48 83 c1 10 b8 01 00 00 00 48 8d 54 24 30 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 30 48 89 0a 89 42 08 48 8b fb 48 8d 74 24 30 e8 8a ca 1e 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 ba 2a 00 00 00 41 b8 01 00 00 00 49 b9 d8 fa 3a 28 b9 02 00 00 4d 8b 09 48 b9 e0 fa 3a 28 b9 02 00 00 48 8b 09 48 8d 44 24 28 44 88 00 89 50 04 48 8b 54 24 28 48 89 54 24 20 ba 01 00 00 00 4d 8b c1 4c 8b c9 b9 20 00 00 00 e8 3e b2 6e ff
780       | 7ff7c8079480h   | 135     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n32,8u,8u,8u,8u)                                                                | Block32<byte> cells(N32 n, byte x0, byte x1, byte x2, byte x3)                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 10 ea 72 c7 f7 7f 00 00 ba 04 00 00 00 e8 32 d9 1e 5f 40 88 70 10 40 88 78 11 8b b4 24 80 00 00 00 40 88 70 12 8b b4 24 88 00 00 00 40 88 70 13 48 83 c0 10 ba 04 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 96 c9 1e 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
781       | 7ff7c8079530h   | 113     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n32,16u,16u)                                                                    | Block32<ushort> cells(N32 n, ushort x0, ushort x1)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 60 3e fe c7 f7 7f 00 00 ba 02 00 00 00 e8 82 d8 1e 5f 66 89 70 10 66 89 78 12 48 83 c0 10 ba 02 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 fc c8 1e 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
782       | 7ff7c80795c0h   | 105     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n32,32u)                                                                        | Block32<uint> cells(N32 n, uint x0)                                                                           | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 48 b9 f8 2d fe c7 f7 7f 00 00 ba 01 00 00 00 e8 f5 d7 1e 5f 89 70 10 48 83 c0 10 ba 01 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 74 c8 1e 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
783       | 7ff7c8079650h   | 179     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n64,8u,8u,8u,8u,8u,8u,8u,8u)                                                    | Block64<byte> cells(N64 n, byte x0, byte x1, byte x2, byte x3, byte x4, byte x5, byte x6, byte x7)            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 10 ea 72 c7 f7 7f 00 00 ba 08 00 00 00 e8 62 d7 1e 5f 40 88 70 10 40 88 78 11 8b b4 24 80 00 00 00 40 88 70 12 8b b4 24 88 00 00 00 40 88 70 13 8b b4 24 90 00 00 00 40 88 70 14 8b b4 24 98 00 00 00 40 88 70 15 8b b4 24 a0 00 00 00 40 88 70 16 8b b4 24 a8 00 00 00 40 88 70 17 48 83 c0 10 ba 08 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 9a c7 1e 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
784       | 7ff7c8079720h   | 135     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n64,16u,16u,16u,16u)                                                            | Block64<ushort> cells(N64 n, ushort x0, ushort x1, ushort x2, ushort x3)                                      | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 60 3e fe c7 f7 7f 00 00 ba 04 00 00 00 e8 92 d6 1e 5f 66 89 70 10 66 89 78 12 8b b4 24 80 00 00 00 66 89 70 14 8b b4 24 88 00 00 00 66 89 70 16 48 83 c0 10 ba 04 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 f6 c6 1e 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
785       | 7ff7c80797d0h   | 111     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n64,32u,32u)                                                                    | Block64<uint> cells(N64 n, uint x0, uint x1)                                                                  | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 f8 2d fe c7 f7 7f 00 00 ba 02 00 00 00 e8 e2 d5 1e 5f 89 70 10 89 78 14 48 83 c0 10 ba 02 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 5e c6 1e 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
786       | 7ff7c8079860h   | 106     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n64,64u)                                                                        | Block64<ulong> cells(N64 n, ulong x0)                                                                         | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 48 b9 b0 69 b6 c7 f7 7f 00 00 ba 01 00 00 00 e8 55 d5 1e 5f 48 89 70 10 48 83 c0 10 ba 01 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 d3 c5 1e 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
787       | 7ff7c80798f0h   | 272     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n128,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u)                           | Block128<byte> cells(N128 n, byte x0, byte x1, byte x2, byte x3, byte x4, byte x5, byte x6, byte x7, byte x8, byte x9, byte xA, byte xB, byte xC, byte xD, byte xE, byte xF)| 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 89 44 24 38 48 8b d9 41 8b f0 41 8b f9 48 b9 10 ea 72 c7 f7 7f 00 00 ba 10 00 00 00 e8 bd d4 1e 5f 40 88 70 10 40 88 78 11 8b b4 24 80 00 00 00 40 88 70 12 8b b4 24 88 00 00 00 40 88 70 13 8b b4 24 90 00 00 00 40 88 70 14 8b b4 24 98 00 00 00 40 88 70 15 8b b4 24 a0 00 00 00 40 88 70 16 8b b4 24 a8 00 00 00 40 88 70 17 8b b4 24 b0 00 00 00 40 88 70 18 8b b4 24 b8 00 00 00 40 88 70 19 8b b4 24 c0 00 00 00 40 88 70 1a 8b b4 24 c8 00 00 00 40 88 70 1b 8b b4 24 d0 00 00 00 40 88 70 1c 8b b4 24 d8 00 00 00 40 88 70 1d 8b b4 24 e0 00 00 00 40 88 70 1e 8b b4 24 e8 00 00 00 40 88 70 1f 48 83 c0 10 ba 10 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 9d c4 1e 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
788       | 7ff7c8079a20h   | 179     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n128,16u,16u,16u,16u,16u,16u,16u,16u)                                           | Block128<ushort> cells(N128 n, ushort x0, ushort x1, ushort x2, ushort x3, ushort x4, ushort x5, ushort x6, ushort x7)| 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 60 3e fe c7 f7 7f 00 00 ba 08 00 00 00 e8 92 d3 1e 5f 66 89 70 10 66 89 78 12 8b b4 24 80 00 00 00 66 89 70 14 8b b4 24 88 00 00 00 66 89 70 16 8b b4 24 90 00 00 00 66 89 70 18 8b b4 24 98 00 00 00 66 89 70 1a 8b b4 24 a0 00 00 00 66 89 70 1c 8b b4 24 a8 00 00 00 66 89 70 1e 48 83 c0 10 ba 08 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ca c3 1e 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
789       | 7ff7c8079af0h   | 131     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n128,32u,32u,32u,32u)                                                           | Block128<uint> cells(N128 n, uint x0, uint x1, uint x2, uint x3)                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 f8 2d fe c7 f7 7f 00 00 ba 04 00 00 00 e8 c2 d2 1e 5f 89 70 10 89 78 14 8b b4 24 80 00 00 00 89 70 18 8b b4 24 88 00 00 00 89 70 1c 48 83 c0 10 ba 04 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 2a c3 1e 5f 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
