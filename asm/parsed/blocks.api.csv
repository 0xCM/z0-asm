Sequence  | Address         | Length  | TermCode            | Uri                                                                                                           | OpSig                                                                                                         | Data
0         | 7ff7c82b8a60h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n16,span8u)                                                      | Block16<byte> unsafeload<byte>(N16 w, Span<byte> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 f4 d3 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
1         | 7ff7c82b8ad0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n16,span8i)                                                      | Block16<sbyte> unsafeload<sbyte>(N16 w, Span<sbyte> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 84 d3 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
2         | 7ff7c82b8b40h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n16,span16u)                                                    | Block16<ushort> unsafeload<ushort>(N16 w, Span<ushort> src)                                                   | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 14 d3 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
3         | 7ff7c82b8bb0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n16,span16i)                                                    | Block16<short> unsafeload<short>(N16 w, Span<short> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 a4 d2 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
4         | 7ff7c82b8c20h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n32,span8u)                                                      | Block32<byte> unsafeload<byte>(N32 w, Span<byte> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 34 d2 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
5         | 7ff7c82b9090h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n32,span8i)                                                      | Block32<sbyte> unsafeload<sbyte>(N32 w, Span<sbyte> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 c4 cd fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
6         | 7ff7c82b9100h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n32,span16u)                                                    | Block32<ushort> unsafeload<ushort>(N32 w, Span<ushort> src)                                                   | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 54 cd fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
7         | 7ff7c82b9170h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n32,span16i)                                                    | Block32<short> unsafeload<short>(N32 w, Span<short> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 e4 cc fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
8         | 7ff7c82b91e0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32u](n32,span32u)                                                    | Block32<uint> unsafeload<uint>(N32 w, Span<uint> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 74 cc fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
9         | 7ff7c82b9250h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32i](n32,span32i)                                                    | Block32<int> unsafeload<int>(N32 w, Span<int> src)                                                            | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 04 cc fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
10        | 7ff7c82b92c0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32f](n32,span32f)                                                    | Block32<float> unsafeload<float>(N32 w, Span<float> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 94 cb fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
11        | 7ff7c82b9730h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n64,span8u)                                                      | Block64<byte> unsafeload<byte>(N64 w, Span<byte> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 24 c7 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
12        | 7ff7c82b97a0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n64,span8i)                                                      | Block64<sbyte> unsafeload<sbyte>(N64 w, Span<sbyte> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 b4 c6 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
13        | 7ff7c82b9810h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n64,span16u)                                                    | Block64<ushort> unsafeload<ushort>(N64 w, Span<ushort> src)                                                   | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 44 c6 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
14        | 7ff7c82b9880h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n64,span16i)                                                    | Block64<short> unsafeload<short>(N64 w, Span<short> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 d4 c5 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
15        | 7ff7c82b98f0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32u](n64,span32u)                                                    | Block64<uint> unsafeload<uint>(N64 w, Span<uint> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 64 c5 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
16        | 7ff7c82b9960h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32i](n64,span32i)                                                    | Block64<int> unsafeload<int>(N64 w, Span<int> src)                                                            | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 f4 c4 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
17        | 7ff7c82b99d0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64u](n64,span64u)                                                    | Block64<ulong> unsafeload<ulong>(N64 w, Span<ulong> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 84 c4 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
18        | 7ff7c82b9a40h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64i](n64,span64i)                                                    | Block64<long> unsafeload<long>(N64 w, Span<long> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 14 c4 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
19        | 7ff7c82b9eb0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32f](n64,span32f)                                                    | Block64<float> unsafeload<float>(N64 w, Span<float> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 a4 bf fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
20        | 7ff7c82b9f20h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64f](n64,span64f)                                                    | Block64<double> unsafeload<double>(N64 w, Span<double> src)                                                   | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 34 bf fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
21        | 7ff7c82b9f90h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n128,span8u)                                                     | Block128<byte> unsafeload<byte>(N128 w, Span<byte> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 c4 be fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
22        | 7ff7c82ba000h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n128,span8i)                                                     | Block128<sbyte> unsafeload<sbyte>(N128 w, Span<sbyte> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 54 be fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
23        | 7ff7c82ba470h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n128,span16u)                                                   | Block128<ushort> unsafeload<ushort>(N128 w, Span<ushort> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 e4 b9 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
24        | 7ff7c82ba4e0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n128,span16i)                                                   | Block128<short> unsafeload<short>(N128 w, Span<short> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 74 b9 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
25        | 7ff7c82ba550h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32u](n128,span32u)                                                   | Block128<uint> unsafeload<uint>(N128 w, Span<uint> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 04 b9 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
26        | 7ff7c82ba5c0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32i](n128,span32i)                                                   | Block128<int> unsafeload<int>(N128 w, Span<int> src)                                                          | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 94 b8 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
27        | 7ff7c82ba630h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64u](n128,span64u)                                                   | Block128<ulong> unsafeload<ulong>(N128 w, Span<ulong> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 24 b8 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
28        | 7ff7c82ba6a0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64i](n128,span64i)                                                   | Block128<long> unsafeload<long>(N128 w, Span<long> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 b4 b7 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
29        | 7ff7c82bab10h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32f](n128,span32f)                                                   | Block128<float> unsafeload<float>(N128 w, Span<float> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 44 b3 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
30        | 7ff7c82bab80h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64f](n128,span64f)                                                   | Block128<double> unsafeload<double>(N128 w, Span<double> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 d4 b2 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
31        | 7ff7c82babf0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n256,span8u)                                                     | Block256<byte> unsafeload<byte>(N256 w, Span<byte> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 64 b2 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
32        | 7ff7c82bac60h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n256,span8i)                                                     | Block256<sbyte> unsafeload<sbyte>(N256 w, Span<sbyte> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 f4 b1 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
33        | 7ff7c82bacd0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n256,span16u)                                                   | Block256<ushort> unsafeload<ushort>(N256 w, Span<ushort> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 84 b1 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
34        | 7ff7c82bad40h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n256,span16i)                                                   | Block256<short> unsafeload<short>(N256 w, Span<short> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 14 b1 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
35        | 7ff7c82badb0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32u](n256,span32u)                                                   | Block256<uint> unsafeload<uint>(N256 w, Span<uint> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 a4 b0 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
36        | 7ff7c82bae20h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32i](n256,span32i)                                                   | Block256<int> unsafeload<int>(N256 w, Span<int> src)                                                          | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 34 b0 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
37        | 7ff7c82bae90h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64u](n256,span64u)                                                   | Block256<ulong> unsafeload<ulong>(N256 w, Span<ulong> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 c4 af fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
38        | 7ff7c82baf00h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64i](n256,span64i)                                                   | Block256<long> unsafeload<long>(N256 w, Span<long> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 54 af fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
39        | 7ff7c82baf70h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32f](n256,span32f)                                                   | Block256<float> unsafeload<float>(N256 w, Span<float> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 e4 ae fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
40        | 7ff7c82bafe0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64f](n256,span64f)                                                   | Block256<double> unsafeload<double>(N256 w, Span<double> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 74 ae fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
41        | 7ff7c82bb450h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n512,span8u)                                                     | Block512<byte> unsafeload<byte>(N512 w, Span<byte> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 04 aa fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
42        | 7ff7c82bb4e0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n512,span8i)                                                     | Block512<sbyte> unsafeload<sbyte>(N512 w, Span<sbyte> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 74 a9 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
43        | 7ff7c82bb550h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n512,span16u)                                                   | Block512<ushort> unsafeload<ushort>(N512 w, Span<ushort> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 04 a9 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
44        | 7ff7c82bb5c0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n512,span16i)                                                   | Block512<short> unsafeload<short>(N512 w, Span<short> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 94 a8 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
45        | 7ff7c82bba30h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32u](n512,span32u)                                                   | Block512<uint> unsafeload<uint>(N512 w, Span<uint> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 24 a4 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
46        | 7ff7c82bbaa0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32i](n512,span32i)                                                   | Block512<int> unsafeload<int>(N512 w, Span<int> src)                                                          | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 b4 a3 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
47        | 7ff7c82bbb10h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64u](n512,span64u)                                                   | Block512<ulong> unsafeload<ulong>(N512 w, Span<ulong> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 44 a3 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
48        | 7ff7c82bbb80h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64i](n512,span64i)                                                   | Block512<long> unsafeload<long>(N512 w, Span<long> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 d4 a2 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
49        | 7ff7c82bbbf0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32f](n512,span32f)                                                   | Block512<float> unsafeload<float>(N512 w, Span<float> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 64 a2 fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
50        | 7ff7c82bc060h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64f](n512,span64f)                                                   | Block512<double> unsafeload<double>(N512 w, Span<double> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 f4 9d fa 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
51        | 7ff7c82bc0d0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[8u](8u~in,b256x8u~in,32i,32i)                                                  | void write<byte>(in byte src, in Block256<byte> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 64 9f fa 5e 90 c3
52        | 7ff7c82bc100h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[8i](8u~in,b256x8i~in,32i,32i)                                                  | void write<sbyte>(in byte src, in Block256<sbyte> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 34 9f fa 5e 90 c3
53        | 7ff7c82bc130h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[16u](8u~in,b256x16u~in,32i,32i)                                                | void write<ushort>(in byte src, in Block256<ushort> dst, int offset, int count)                               | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 04 9f fa 5e 90 c3
54        | 7ff7c82bc160h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[16i](8u~in,b256x16i~in,32i,32i)                                                | void write<short>(in byte src, in Block256<short> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 d4 9e fa 5e 90 c3
55        | 7ff7c82bc190h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32u](8u~in,b256x32u~in,32i,32i)                                                | void write<uint>(in byte src, in Block256<uint> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 a4 9e fa 5e 90 c3
56        | 7ff7c82bc1c0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32i](8u~in,b256x32i~in,32i,32i)                                                | void write<int>(in byte src, in Block256<int> dst, int offset, int count)                                     | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 74 9e fa 5e 90 c3
57        | 7ff7c82bc1f0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64u](8u~in,b256x64u~in,32i,32i)                                                | void write<ulong>(in byte src, in Block256<ulong> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 44 9e fa 5e 90 c3
58        | 7ff7c82bc220h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64i](8u~in,b256x64i~in,32i,32i)                                                | void write<long>(in byte src, in Block256<long> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 14 9e fa 5e 90 c3
59        | 7ff7c82bc250h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32f](8u~in,b256x32f~in,32i,32i)                                                | void write<float>(in byte src, in Block256<float> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 e4 9d fa 5e 90 c3
60        | 7ff7c82bc280h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64f](8u~in,b256x64f~in,32i,32i)                                                | void write<double>(in byte src, in Block256<double> dst, int offset, int count)                               | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 b4 9d fa 5e 90 c3
61        | 7ff7c82bc6c0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[8u](8u~in,b512x8u~in,32i,32i)                                                  | void write<byte>(in byte src, in Block512<byte> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 74 99 fa 5e 90 c3
62        | 7ff7c82bc6f0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[8i](8u~in,b512x8i~in,32i,32i)                                                  | void write<sbyte>(in byte src, in Block512<sbyte> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 44 99 fa 5e 90 c3
63        | 7ff7c82bc720h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[16u](8u~in,b512x16u~in,32i,32i)                                                | void write<ushort>(in byte src, in Block512<ushort> dst, int offset, int count)                               | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 14 99 fa 5e 90 c3
64        | 7ff7c82bc750h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[16i](8u~in,b512x16i~in,32i,32i)                                                | void write<short>(in byte src, in Block512<short> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 e4 98 fa 5e 90 c3
65        | 7ff7c82bc780h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32u](8u~in,b512x32u~in,32i,32i)                                                | void write<uint>(in byte src, in Block512<uint> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 b4 98 fa 5e 90 c3
66        | 7ff7c82bc7b0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32i](8u~in,b512x32i~in,32i,32i)                                                | void write<int>(in byte src, in Block512<int> dst, int offset, int count)                                     | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 84 98 fa 5e 90 c3
67        | 7ff7c82bc7e0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64u](8u~in,b512x64u~in,32i,32i)                                                | void write<ulong>(in byte src, in Block512<ulong> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 54 98 fa 5e 90 c3
68        | 7ff7c82bc810h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64i](8u~in,b512x64i~in,32i,32i)                                                | void write<long>(in byte src, in Block512<long> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 24 98 fa 5e 90 c3
69        | 7ff7c82bc840h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32f](8u~in,b512x32f~in,32i,32i)                                                | void write<float>(in byte src, in Block512<float> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 f4 97 fa 5e 90 c3
70        | 7ff7c82bc870h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64f](8u~in,b512x64f~in,32i,32i)                                                | void write<double>(in byte src, in Block512<double> dst, int offset, int count)                               | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 c4 97 fa 5e 90 c3
71        | 7ff7c82bc8a0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b64x8u~in)                                                      | void broadcast<byte>(byte data, in Block64<byte> dst)                                                         | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 10 0d ad c7 f7 7f 00 00 48 ff e0
72        | 7ff7c82bc8d0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b64x8i~in)                                                      | void broadcast<sbyte>(sbyte data, in Block64<sbyte> dst)                                                      | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 38 08 0d c8 f7 7f 00 00 48 ff e0
73        | 7ff7c82bc900h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b64x16u~in)                                                   | void broadcast<ushort>(ushort data, in Block64<ushort> dst)                                                   | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 e0 b3 ad c7 f7 7f 00 00 48 ff e0
74        | 7ff7c82bc930h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b64x16i~in)                                                   | void broadcast<short>(short data, in Block64<short> dst)                                                      | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 c0 10 0d c8 f7 7f 00 00 48 ff e0
75        | 7ff7c82bc960h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32u](32u,b64x32u~in)                                                   | void broadcast<uint>(uint data, in Block64<uint> dst)                                                         | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 f0 b5 ad c7 f7 7f 00 00 48 ff e0
76        | 7ff7c82bc990h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32i](32i,b64x32i~in)                                                   | void broadcast<int>(int data, in Block64<int> dst)                                                            | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 f0 0f ac c7 f7 7f 00 00 48 ff e0
77        | 7ff7c82bc9c0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64u](64u,b64x64u~in)                                                   | void broadcast<ulong>(ulong data, in Block64<ulong> dst)                                                      | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 f0 b8 ad c7 f7 7f 00 00 48 ff e0
78        | 7ff7c82bc9f0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64i](64i,b64x64i~in)                                                   | void broadcast<long>(long data, in Block64<long> dst)                                                         | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 28 1e 0d c8 f7 7f 00 00 48 ff e0
79        | 7ff7c82bca20h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32f](32f,b64x32f~in)                                                   | void broadcast<float>(float data, in Block64<float> dst)                                                      | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 b8 20 0d c8 f7 7f 00 00 48 ff e0
80        | 7ff7c82bca50h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64f](64f,b64x64f~in)                                                   | void broadcast<double>(double data, in Block64<double> dst)                                                   | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 e0 24 0d c8 f7 7f 00 00 48 ff e0
81        | 7ff7c82bce90h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b128x8u~in)                                                     | void broadcast<byte>(byte data, in Block128<byte> dst)                                                        | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 10 0d ad c7 f7 7f 00 00 48 ff e0
82        | 7ff7c82bcec0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b128x8i~in)                                                     | void broadcast<sbyte>(sbyte data, in Block128<sbyte> dst)                                                     | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 38 08 0d c8 f7 7f 00 00 48 ff e0
83        | 7ff7c82bcef0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b128x16u~in)                                                  | void broadcast<ushort>(ushort data, in Block128<ushort> dst)                                                  | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 e0 b3 ad c7 f7 7f 00 00 48 ff e0
84        | 7ff7c82bcf20h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b128x16i~in)                                                  | void broadcast<short>(short data, in Block128<short> dst)                                                     | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 c0 10 0d c8 f7 7f 00 00 48 ff e0
85        | 7ff7c82bcf50h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32u](32u,b128x32u~in)                                                  | void broadcast<uint>(uint data, in Block128<uint> dst)                                                        | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 f0 b5 ad c7 f7 7f 00 00 48 ff e0
86        | 7ff7c82bcf80h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32i](32i,b128x32i~in)                                                  | void broadcast<int>(int data, in Block128<int> dst)                                                           | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 f0 0f ac c7 f7 7f 00 00 48 ff e0
87        | 7ff7c82bcfb0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64u](64u,b128x64u~in)                                                  | void broadcast<ulong>(ulong data, in Block128<ulong> dst)                                                     | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 f0 b8 ad c7 f7 7f 00 00 48 ff e0
88        | 7ff7c82bcfe0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64i](64i,b128x64i~in)                                                  | void broadcast<long>(long data, in Block128<long> dst)                                                        | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 28 1e 0d c8 f7 7f 00 00 48 ff e0
89        | 7ff7c82bd010h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32f](32f,b128x32f~in)                                                  | void broadcast<float>(float data, in Block128<float> dst)                                                     | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 b8 20 0d c8 f7 7f 00 00 48 ff e0
90        | 7ff7c82bd040h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64f](64f,b128x64f~in)                                                  | void broadcast<double>(double data, in Block128<double> dst)                                                  | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 e0 24 0d c8 f7 7f 00 00 48 ff e0
91        | 7ff7c82bd070h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b256x8u~in)                                                     | void broadcast<byte>(byte data, in Block256<byte> dst)                                                        | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 10 0d ad c7 f7 7f 00 00 48 ff e0
92        | 7ff7c82bd0a0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b256x8i~in)                                                     | void broadcast<sbyte>(sbyte data, in Block256<sbyte> dst)                                                     | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 38 08 0d c8 f7 7f 00 00 48 ff e0
93        | 7ff7c82bd0d0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b256x16u~in)                                                  | void broadcast<ushort>(ushort data, in Block256<ushort> dst)                                                  | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 e0 b3 ad c7 f7 7f 00 00 48 ff e0
94        | 7ff7c82bd100h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b256x16i~in)                                                  | void broadcast<short>(short data, in Block256<short> dst)                                                     | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 c0 10 0d c8 f7 7f 00 00 48 ff e0
95        | 7ff7c82bd540h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32u](32u,b256x32u~in)                                                  | void broadcast<uint>(uint data, in Block256<uint> dst)                                                        | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 f0 b5 ad c7 f7 7f 00 00 48 ff e0
96        | 7ff7c82bd570h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32i](32i,b256x32i~in)                                                  | void broadcast<int>(int data, in Block256<int> dst)                                                           | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 f0 0f ac c7 f7 7f 00 00 48 ff e0
97        | 7ff7c82bd5a0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64u](64u,b256x64u~in)                                                  | void broadcast<ulong>(ulong data, in Block256<ulong> dst)                                                     | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 f0 b8 ad c7 f7 7f 00 00 48 ff e0
98        | 7ff7c82bd5d0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64i](64i,b256x64i~in)                                                  | void broadcast<long>(long data, in Block256<long> dst)                                                        | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 28 1e 0d c8 f7 7f 00 00 48 ff e0
99        | 7ff7c82bd600h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32f](32f,b256x32f~in)                                                  | void broadcast<float>(float data, in Block256<float> dst)                                                     | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 b8 20 0d c8 f7 7f 00 00 48 ff e0
100       | 7ff7c82bd630h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64f](64f,b256x64f~in)                                                  | void broadcast<double>(double data, in Block256<double> dst)                                                  | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 e0 24 0d c8 f7 7f 00 00 48 ff e0
101       | 7ff7c82bd660h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b512x8u~in)                                                     | void broadcast<byte>(byte data, in Block512<byte> dst)                                                        | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 10 0d ad c7 f7 7f 00 00 48 ff e0
102       | 7ff7c82bd690h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b512x8i~in)                                                     | void broadcast<sbyte>(sbyte data, in Block512<sbyte> dst)                                                     | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 38 08 0d c8 f7 7f 00 00 48 ff e0
103       | 7ff7c82bd6c0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b512x16u~in)                                                  | void broadcast<ushort>(ushort data, in Block512<ushort> dst)                                                  | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 e0 b3 ad c7 f7 7f 00 00 48 ff e0
104       | 7ff7c82bd6f0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b512x16i~in)                                                  | void broadcast<short>(short data, in Block512<short> dst)                                                     | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 c0 10 0d c8 f7 7f 00 00 48 ff e0
105       | 7ff7c82bd720h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32u](32u,b512x32u~in)                                                  | void broadcast<uint>(uint data, in Block512<uint> dst)                                                        | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 f0 b5 ad c7 f7 7f 00 00 48 ff e0
106       | 7ff7c82bd750h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32i](32i,b512x32i~in)                                                  | void broadcast<int>(int data, in Block512<int> dst)                                                           | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 f0 0f ac c7 f7 7f 00 00 48 ff e0
107       | 7ff7c82bd780h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64u](64u,b512x64u~in)                                                  | void broadcast<ulong>(ulong data, in Block512<ulong> dst)                                                     | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 f0 b8 ad c7 f7 7f 00 00 48 ff e0
108       | 7ff7c82bd7b0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64i](64i,b512x64i~in)                                                  | void broadcast<long>(long data, in Block512<long> dst)                                                        | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 28 1e 0d c8 f7 7f 00 00 48 ff e0
109       | 7ff7c82bd7e0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32f](32f,b512x32f~in)                                                  | void broadcast<float>(float data, in Block512<float> dst)                                                     | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 b8 20 0d c8 f7 7f 00 00 48 ff e0
110       | 7ff7c82bd810h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64f](64f,b512x64f~in)                                                  | void broadcast<double>(double data, in Block512<double> dst)                                                  | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 e0 24 0d c8 f7 7f 00 00 48 ff e0
111       | 7ff7c82bdc50h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[8u](n16,32i)                                                           | Block16<byte> cellalloc<byte>(N16 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 7d f8 ff ff 48 8b c6 48 83 c4 20 5e c3
112       | 7ff7c82bdcb0h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[8i](n16,32i)                                                           | Block16<sbyte> cellalloc<sbyte>(N16 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 3d fc ff ff 48 8b c6 48 83 c4 20 5e c3
113       | 7ff7c82bdd10h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[16u](n16,32i)                                                          | Block16<ushort> cellalloc<ushort>(N16 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 27 fc ff ff 48 8b c6 48 83 c4 20 5e c3
114       | 7ff7c82bdd70h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[16i](n16,32i)                                                          | Block16<short> cellalloc<short>(N16 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 07 fc ff ff 48 8b c6 48 83 c4 20 5e c3
115       | 7ff7c82bddd0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8u](n32,32i)                                                           | Block32<byte> cellalloc<byte>(N32 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 86 fd ff ff 48 8b c6 48 83 c4 20 5e c3
116       | 7ff7c82bde40h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8i](n32,32i)                                                           | Block32<sbyte> cellalloc<sbyte>(N32 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 86 fd ff ff 48 8b c6 48 83 c4 20 5e c3
117       | 7ff7c82be2b0h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[16u](n32,32i)                                                          | Block32<ushort> cellalloc<ushort>(N32 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 c5 fb ff ff 48 8b c6 48 83 c4 20 5e c3
118       | 7ff7c82be310h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[16i](n32,32i)                                                          | Block32<short> cellalloc<short>(N32 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 a5 fb ff ff 48 8b c6 48 83 c4 20 5e c3
119       | 7ff7c82be370h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[32u](n32,32i)                                                          | Block32<uint> cellalloc<uint>(N32 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 8f fb ff ff 48 8b c6 48 83 c4 20 5e c3
120       | 7ff7c82be3d0h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[32i](n32,32i)                                                          | Block32<int> cellalloc<int>(N32 n, int cellcount)                                                             | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 6f fb ff ff 48 8b c6 48 83 c4 20 5e c3
121       | 7ff7c82be430h   | 70      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[32f](n32,32i)                                                          | Block32<float> cellalloc<float>(N32 n, int cellcount)                                                         | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 4b fb ff ff 48 8b c6 48 83 c4 20 5e c3
122       | 7ff7c82be490h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8u](n64,32i)                                                           | Block64<byte> cellalloc<byte>(N64 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 ce fc ff ff 48 8b c6 48 83 c4 20 5e c3
123       | 7ff7c82be500h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8i](n64,32i)                                                           | Block64<sbyte> cellalloc<sbyte>(N64 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 ce fc ff ff 48 8b c6 48 83 c4 20 5e c3
124       | 7ff7c82be570h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16u](n64,32i)                                                          | Block64<ushort> cellalloc<ushort>(N64 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 9e fc ff ff 48 8b c6 48 83 c4 20 5e c3
125       | 7ff7c82be9e0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16i](n64,32i)                                                          | Block64<short> cellalloc<short>(N64 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 6e f8 ff ff 48 8b c6 48 83 c4 20 5e c3
126       | 7ff7c82bea50h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[32u](n64,32i)                                                          | Block64<uint> cellalloc<uint>(N64 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 75 fb ff ff 48 8b c6 48 83 c4 20 5e c3
127       | 7ff7c82beab0h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[32i](n64,32i)                                                          | Block64<int> cellalloc<int>(N64 n, int cellcount)                                                             | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 55 fb ff ff 48 8b c6 48 83 c4 20 5e c3
128       | 7ff7c82beb10h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[64u](n64,32i)                                                          | Block64<ulong> cellalloc<ulong>(N64 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 3f fb ff ff 48 8b c6 48 83 c4 20 5e c3
129       | 7ff7c82beb70h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[64i](n64,32i)                                                          | Block64<long> cellalloc<long>(N64 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 1f fb ff ff 48 8b c6 48 83 c4 20 5e c3
130       | 7ff7c82bebd0h   | 80      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[32f](n64,32i)                                                          | Block64<float> cellalloc<float>(N64 n, int cellcount)                                                         | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 f1 fa ff ff 48 8b c6 48 83 c4 20 5e c3
131       | 7ff7c82bec40h   | 70      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[64f](n64,32i)                                                          | Block64<double> cellalloc<double>(N64 n, int cellcount)                                                       | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 cb fa ff ff 48 8b c6 48 83 c4 20 5e c3
132       | 7ff7c82beca0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8u](n128,32i)                                                          | Block128<byte> cellalloc<byte>(N128 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 4e fc ff ff 48 8b c6 48 83 c4 20 5e c3
133       | 7ff7c82bed10h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8i](n128,32i)                                                          | Block128<sbyte> cellalloc<sbyte>(N128 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 4e fc ff ff 48 8b c6 48 83 c4 20 5e c3
134       | 7ff7c82bf180h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16u](n128,32i)                                                         | Block128<ushort> cellalloc<ushort>(N128 n, int cellcount)                                                     | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 be fb ff ff 48 8b c6 48 83 c4 20 5e c3
135       | 7ff7c82bf1f0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16i](n128,32i)                                                         | Block128<short> cellalloc<short>(N128 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 8e fb ff ff 48 8b c6 48 83 c4 20 5e c3
136       | 7ff7c82bf260h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32u](n128,32i)                                                         | Block128<uint> cellalloc<uint>(N128 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 5e fb ff ff 48 8b c6 48 83 c4 20 5e c3
137       | 7ff7c82bf2d0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32i](n128,32i)                                                         | Block128<int> cellalloc<int>(N128 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 2e fb ff ff 48 8b c6 48 83 c4 20 5e c3
138       | 7ff7c82bf340h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[64u](n128,32i)                                                         | Block128<ulong> cellalloc<ulong>(N128 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 05 fb ff ff 48 8b c6 48 83 c4 20 5e c3
139       | 7ff7c82bf3a0h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[64i](n128,32i)                                                         | Block128<long> cellalloc<long>(N128 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 e5 fa ff ff 48 8b c6 48 83 c4 20 5e c3
140       | 7ff7c82bf400h   | 87      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[32f](n128,32i)                                                         | Block128<float> cellalloc<float>(N128 n, int cellcount)                                                       | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 ba fa ff ff 48 8b c6 48 83 c4 20 5e c3
141       | 7ff7c82bf470h   | 80      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[64f](n128,32i)                                                         | Block128<double> cellalloc<double>(N128 n, int cellcount)                                                     | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 91 fa ff ff 48 8b c6 48 83 c4 20 5e c3
142       | 7ff7c82bf4e0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8u](n256,32i)                                                          | Block256<byte> cellalloc<byte>(N256 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 1f 41 03 c8 c1 f9 05 41 8b d0 c1 fa 1f 83 e2 1f 41 03 d0 83 e2 e0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 16 fc ff ff 48 8b c6 48 83 c4 20 5e c3
143       | 7ff7c82bf950h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8i](n256,32i)                                                          | Block256<sbyte> cellalloc<sbyte>(N256 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 1f 41 03 c8 c1 f9 05 41 8b d0 c1 fa 1f 83 e2 1f 41 03 d0 83 e2 e0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 ce fb ff ff 48 8b c6 48 83 c4 20 5e c3
144       | 7ff7c82bf9c0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16u](n256,32i)                                                         | Block256<ushort> cellalloc<ushort>(N256 n, int cellcount)                                                     | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 9e fb ff ff 48 8b c6 48 83 c4 20 5e c3
145       | 7ff7c82bfa30h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16i](n256,32i)                                                         | Block256<short> cellalloc<short>(N256 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 5e fb ff ff 48 8b c6 48 83 c4 20 5e c3
146       | 7ff7c82bfaa0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32u](n256,32i)                                                         | Block256<uint> cellalloc<uint>(N256 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 2e fb ff ff 48 8b c6 48 83 c4 20 5e c3
147       | 7ff7c82bfb10h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32i](n256,32i)                                                         | Block256<int> cellalloc<int>(N256 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 ee fa ff ff 48 8b c6 48 83 c4 20 5e c3
148       | 7ff7c82bfb80h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[64u](n256,32i)                                                         | Block256<ulong> cellalloc<ulong>(N256 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 be fa ff ff 48 8b c6 48 83 c4 20 5e c3
149       | 7ff7c82bfbf0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[64i](n256,32i)                                                         | Block256<long> cellalloc<long>(N256 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 7e fa ff ff 48 8b c6 48 83 c4 20 5e c3
150       | 7ff7c82bfc60h   | 87      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[32f](n256,32i)                                                         | Block256<float> cellalloc<float>(N256 n, int cellcount)                                                       | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 4a fa ff ff 48 8b c6 48 83 c4 20 5e c3
151       | 7ff7c82bfcd0h   | 87      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[64f](n256,32i)                                                         | Block256<double> cellalloc<double>(N256 n, int cellcount)                                                     | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 1a fa ff ff 48 8b c6 48 83 c4 20 5e c3
152       | 7ff7c82c0150h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8u](n512,32i)                                                          | Block512<byte> cellalloc<byte>(N512 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 3f 41 03 c8 c1 f9 06 41 8b d0 c1 fa 1f 83 e2 3f 41 03 d0 83 e2 c0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 9e f7 ff ff 48 8b c6 48 83 c4 20 5e c3
153       | 7ff7c82c01c0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8i](n512,32i)                                                          | Block512<sbyte> cellalloc<sbyte>(N512 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 3f 41 03 c8 c1 f9 06 41 8b d0 c1 fa 1f 83 e2 3f 41 03 d0 83 e2 c0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 96 fb ff ff 48 8b c6 48 83 c4 20 5e c3
154       | 7ff7c82c0230h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16u](n512,32i)                                                         | Block512<ushort> cellalloc<ushort>(N512 n, int cellcount)                                                     | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 1f 41 03 c8 c1 f9 05 41 8b d0 c1 fa 1f 83 e2 1f 41 03 d0 83 e2 e0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 66 fb ff ff 48 8b c6 48 83 c4 20 5e c3
155       | 7ff7c82c02a0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16i](n512,32i)                                                         | Block512<short> cellalloc<short>(N512 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 1f 41 03 c8 c1 f9 05 41 8b d0 c1 fa 1f 83 e2 1f 41 03 d0 83 e2 e0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 36 fb ff ff 48 8b c6 48 83 c4 20 5e c3
156       | 7ff7c82c0310h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32u](n512,32i)                                                         | Block512<uint> cellalloc<uint>(N512 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 06 fb ff ff 48 8b c6 48 83 c4 20 5e c3
157       | 7ff7c82c0380h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32i](n512,32i)                                                         | Block512<int> cellalloc<int>(N512 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 d6 fa ff ff 48 8b c6 48 83 c4 20 5e c3
158       | 7ff7c82c03f0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[64u](n512,32i)                                                         | Block512<ulong> cellalloc<ulong>(N512 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 a6 fa ff ff 48 8b c6 48 83 c4 20 5e c3
159       | 7ff7c82c0460h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[64i](n512,32i)                                                         | Block512<long> cellalloc<long>(N512 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 76 fa ff ff 48 8b c6 48 83 c4 20 5e c3
160       | 7ff7c82c04d0h   | 87      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[32f](n512,32i)                                                         | Block512<float> cellalloc<float>(N512 n, int cellcount)                                                       | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 42 fa ff ff 48 8b c6 48 83 c4 20 5e c3
161       | 7ff7c82c0540h   | 87      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[64f](n512,32i)                                                         | Block512<double> cellalloc<double>(N512 n, int cellcount)                                                     | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 12 fa ff ff 48 8b c6 48 83 c4 20 5e c3
162       | 7ff7c82c09c0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[8u]()                                                                    | int cellsize<byte>()                                                                                          | 0f 1f 44 00 00 b8 01 00 00 00 c3
163       | 7ff7c82c09e0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[8i]()                                                                    | int cellsize<sbyte>()                                                                                         | 0f 1f 44 00 00 b8 01 00 00 00 c3
164       | 7ff7c82c0a00h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[16u]()                                                                   | int cellsize<ushort>()                                                                                        | 0f 1f 44 00 00 b8 02 00 00 00 c3
165       | 7ff7c82c0a20h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[16i]()                                                                   | int cellsize<short>()                                                                                         | 0f 1f 44 00 00 b8 02 00 00 00 c3
166       | 7ff7c82c0a40h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[32u]()                                                                   | int cellsize<uint>()                                                                                          | 0f 1f 44 00 00 b8 04 00 00 00 c3
167       | 7ff7c82c0a60h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[32i]()                                                                   | int cellsize<int>()                                                                                           | 0f 1f 44 00 00 b8 04 00 00 00 c3
168       | 7ff7c82c0a80h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[64u]()                                                                   | int cellsize<ulong>()                                                                                         | 0f 1f 44 00 00 b8 08 00 00 00 c3
169       | 7ff7c82c0aa0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[64i]()                                                                   | int cellsize<long>()                                                                                          | 0f 1f 44 00 00 b8 08 00 00 00 c3
170       | 7ff7c82c0ac0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[32f]()                                                                   | int cellsize<float>()                                                                                         | 0f 1f 44 00 00 b8 04 00 00 00 c3
171       | 7ff7c82c0ef0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[64f]()                                                                   | int cellsize<double>()                                                                                        | 0f 1f 44 00 00 b8 08 00 00 00 c3
172       | 7ff7c82c0f10h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[8u]()                                                                  | int cellwidth<byte>()                                                                                         | 0f 1f 44 00 00 b8 08 00 00 00 c3
173       | 7ff7c82c0f30h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[8i]()                                                                  | int cellwidth<sbyte>()                                                                                        | 0f 1f 44 00 00 b8 08 00 00 00 c3
174       | 7ff7c82c0f50h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[16u]()                                                                 | int cellwidth<ushort>()                                                                                       | 0f 1f 44 00 00 b8 10 00 00 00 c3
175       | 7ff7c82c0f70h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[16i]()                                                                 | int cellwidth<short>()                                                                                        | 0f 1f 44 00 00 b8 10 00 00 00 c3
176       | 7ff7c82c0f90h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[32u]()                                                                 | int cellwidth<uint>()                                                                                         | 0f 1f 44 00 00 b8 20 00 00 00 c3
177       | 7ff7c82c0fb0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[32i]()                                                                 | int cellwidth<int>()                                                                                          | 0f 1f 44 00 00 b8 20 00 00 00 c3
178       | 7ff7c82c0fd0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[64u]()                                                                 | int cellwidth<ulong>()                                                                                        | 0f 1f 44 00 00 b8 40 00 00 00 c3
179       | 7ff7c82c0ff0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[64i]()                                                                 | int cellwidth<long>()                                                                                         | 0f 1f 44 00 00 b8 40 00 00 00 c3
180       | 7ff7c82c1010h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[32f]()                                                                 | int cellwidth<float>()                                                                                        | 0f 1f 44 00 00 b8 20 00 00 00 c3
181       | 7ff7c82c1030h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[64f]()                                                                 | int cellwidth<double>()                                                                                       | 0f 1f 44 00 00 b8 40 00 00 00 c3
182       | 7ff7c82c1050h   | 218     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n16,span8u,32i)                                                              | Block16<byte> load<byte>(N16 w, Span<byte> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 cb 4d fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 1b 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 1c 35 49 ff cc e8 0e 39 49 ff
183       | 7ff7c82c1150h   | 218     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n16,span8i,32i)                                                              | Block16<sbyte> load<sbyte>(N16 w, Span<sbyte> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 cb 4c fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 1b 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 1c 34 49 ff cc e8 0e 38 49 ff
184       | 7ff7c82c1250h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n16,span16u,32i)                                                            | Block16<ushort> load<ushort>(N16 w, Span<ushort> src, int offset)                                             | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 ca 4b fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 1b 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 1b 33 49 ff cc e8 0d 37 49 ff
185       | 7ff7c82c1350h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n16,span16i,32i)                                                            | Block16<short> load<short>(N16 w, Span<short> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 ca 4a fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 1b 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 1b 32 49 ff cc e8 0d 36 49 ff
186       | 7ff7c82c1860h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n32,span8u,32i)                                                              | Block32<byte> load<byte>(N32 w, Span<byte> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 b8 45 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 09 2d 49 ff cc e8 fb 30 49 ff
187       | 7ff7c82c1960h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n32,span8i,32i)                                                              | Block32<sbyte> load<sbyte>(N32 w, Span<sbyte> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 b8 44 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 09 2c 49 ff cc e8 fb 2f 49 ff
188       | 7ff7c82c1a60h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n32,span16u,32i)                                                            | Block32<ushort> load<ushort>(N32 w, Span<ushort> src, int offset)                                             | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 bd 43 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 0e 2b 49 ff cc e8 00 2f 49 ff
189       | 7ff7c82c1b60h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n32,span16i,32i)                                                            | Block32<short> load<short>(N32 w, Span<short> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 bd 42 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 0e 2a 49 ff cc e8 00 2e 49 ff
190       | 7ff7c82c1c60h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32u](n32,span32u,32i)                                                            | Block32<uint> load<uint>(N32 w, Span<uint> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 ba 41 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 0b 29 49 ff cc e8 fd 2c 49 ff
191       | 7ff7c82c1d60h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32i](n32,span32i,32i)                                                            | Block32<int> load<int>(N32 w, Span<int> src, int offset)                                                      | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 ba 40 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 0b 28 49 ff cc e8 fd 2b 49 ff
192       | 7ff7c82c1e60h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32f](n32,span32f,32i)                                                            | Block32<float> load<float>(N32 w, Span<float> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 ba 3f fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 0b 27 49 ff cc e8 fd 2a 49 ff
193       | 7ff7c82c2370h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n64,span8u,32i)                                                              | Block64<byte> load<byte>(N64 w, Span<byte> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 a8 3a fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 f9 21 49 ff cc e8 eb 25 49 ff
194       | 7ff7c82c2470h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n64,span8i,32i)                                                              | Block64<sbyte> load<sbyte>(N64 w, Span<sbyte> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 a8 39 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 f9 20 49 ff cc e8 eb 24 49 ff
195       | 7ff7c82c2570h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n64,span16u,32i)                                                            | Block64<ushort> load<ushort>(N64 w, Span<ushort> src, int offset)                                             | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 aa 38 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 fb 1f 49 ff cc e8 ed 23 49 ff
196       | 7ff7c82c2670h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n64,span16i,32i)                                                            | Block64<short> load<short>(N64 w, Span<short> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 aa 37 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 fb 1e 49 ff cc e8 ed 22 49 ff
197       | 7ff7c82c2770h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[32u](n64,span32u,32i)                                                            | Block64<uint> load<uint>(N64 w, Span<uint> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 ad 36 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 fe 1d 49 ff cc e8 f0 21 49 ff
198       | 7ff7c82c2870h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[32i](n64,span32i,32i)                                                            | Block64<int> load<int>(N64 w, Span<int> src, int offset)                                                      | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 ad 35 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 fe 1c 49 ff cc e8 f0 20 49 ff
199       | 7ff7c82c2970h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64u](n64,span64u,32i)                                                            | Block64<ulong> load<ulong>(N64 w, Span<ulong> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 aa 34 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 fb 1b 49 ff cc e8 ed 1f 49 ff
200       | 7ff7c82c2a70h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64i](n64,span64i,32i)                                                            | Block64<long> load<long>(N64 w, Span<long> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 aa 33 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 fb 1a 49 ff cc e8 ed 1e 49 ff
201       | 7ff7c82c2b70h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[32f](n64,span32f,32i)                                                            | Block64<float> load<float>(N64 w, Span<float> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 ad 32 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 fe 19 49 ff cc e8 f0 1d 49 ff
202       | 7ff7c82c2c70h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64f](n64,span64f,32i)                                                            | Block64<double> load<double>(N64 w, Span<double> src, int offset)                                             | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 aa 31 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 fb 18 49 ff cc e8 ed 1c 49 ff
203       | 7ff7c82c2d70h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n128,span8u,32i)                                                             | Block128<byte> load<byte>(N128 w, Span<byte> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 a8 30 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 f9 17 49 ff cc e8 eb 1b 49 ff
204       | 7ff7c82c2e70h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n128,span8i,32i)                                                             | Block128<sbyte> load<sbyte>(N128 w, Span<sbyte> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 a8 2f fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 f9 16 49 ff cc e8 eb 1a 49 ff
205       | 7ff7c82c2f70h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n128,span16u,32i)                                                           | Block128<ushort> load<ushort>(N128 w, Span<ushort> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 aa 2e fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 fb 15 49 ff cc e8 ed 19 49 ff
206       | 7ff7c82c3070h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n128,span16i,32i)                                                           | Block128<short> load<short>(N128 w, Span<short> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 aa 2d fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 fb 14 49 ff cc e8 ed 18 49 ff
207       | 7ff7c82c3170h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32u](n128,span32u,32i)                                                           | Block128<uint> load<uint>(N128 w, Span<uint> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 aa 2c fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 fb 13 49 ff cc e8 ed 17 49 ff
208       | 7ff7c82c3270h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32i](n128,span32i,32i)                                                           | Block128<int> load<int>(N128 w, Span<int> src, int offset)                                                    | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 aa 2b fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 fb 12 49 ff cc e8 ed 16 49 ff
209       | 7ff7c82c3780h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[64u](n128,span64u,32i)                                                           | Block128<ulong> load<ulong>(N128 w, Span<ulong> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 9d 26 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 ee 0d 49 ff cc e8 e0 11 49 ff
210       | 7ff7c82c3880h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[64i](n128,span64i,32i)                                                           | Block128<long> load<long>(N128 w, Span<long> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 9d 25 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 ee 0c 49 ff cc e8 e0 10 49 ff
211       | 7ff7c82c3980h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32f](n128,span32f,32i)                                                           | Block128<float> load<float>(N128 w, Span<float> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 9a 24 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 eb 0b 49 ff cc e8 dd 0f 49 ff
212       | 7ff7c82c3a80h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[64f](n128,span64f,32i)                                                           | Block128<double> load<double>(N128 w, Span<double> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 9d 23 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 ee 0a 49 ff cc e8 e0 0e 49 ff
213       | 7ff7c82c3b80h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n256,span8u,32i)                                                             | Block256<byte> load<byte>(N256 w, Span<byte> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 98 22 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 e9 09 49 ff cc e8 db 0d 49 ff
214       | 7ff7c82c3c80h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n256,span8i,32i)                                                             | Block256<sbyte> load<sbyte>(N256 w, Span<sbyte> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 98 21 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 e9 08 49 ff cc e8 db 0c 49 ff
215       | 7ff7c82c3d80h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n256,span16u,32i)                                                           | Block256<ushort> load<ushort>(N256 w, Span<ushort> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 9a 20 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 eb 07 49 ff cc e8 dd 0b 49 ff
216       | 7ff7c82c3e80h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n256,span16i,32i)                                                           | Block256<short> load<short>(N256 w, Span<short> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 9a 1f fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 eb 06 49 ff cc e8 dd 0a 49 ff
217       | 7ff7c82c3f80h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32u](n256,span32u,32i)                                                           | Block256<uint> load<uint>(N256 w, Span<uint> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 9a 1e fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 eb 05 49 ff cc e8 dd 09 49 ff
218       | 7ff7c82c4080h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32i](n256,span32i,32i)                                                           | Block256<int> load<int>(N256 w, Span<int> src, int offset)                                                    | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 9a 1d fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 eb 04 49 ff cc e8 dd 08 49 ff
219       | 7ff7c82c4180h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64u](n256,span64u,32i)                                                           | Block256<ulong> load<ulong>(N256 w, Span<ulong> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 9a 1c fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 eb 03 49 ff cc e8 dd 07 49 ff
220       | 7ff7c82c4280h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64i](n256,span64i,32i)                                                           | Block256<long> load<long>(N256 w, Span<long> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 9a 1b fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 eb 02 49 ff cc e8 dd 06 49 ff
221       | 7ff7c82c4380h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32f](n256,span32f,32i)                                                           | Block256<float> load<float>(N256 w, Span<float> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 9a 1a fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 eb 01 49 ff cc e8 dd 05 49 ff
222       | 7ff7c82c4480h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64f](n256,span64f,32i)                                                           | Block256<double> load<double>(N256 w, Span<double> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 9a 19 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 eb 00 49 ff cc e8 dd 04 49 ff
223       | 7ff7c82c4990h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n512,span8u,32i)                                                             | Block512<byte> load<byte>(N512 w, Span<byte> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 3f 03 ca 83 e1 c0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 88 14 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 d9 fb 48 ff cc e8 cb ff 48 ff
224       | 7ff7c82c4a90h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n512,span8i,32i)                                                             | Block512<sbyte> load<sbyte>(N512 w, Span<sbyte> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 3f 03 ca 83 e1 c0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 88 13 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 d9 fa 48 ff cc e8 cb fe 48 ff
225       | 7ff7c82c4b90h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n512,span16u,32i)                                                           | Block512<ushort> load<ushort>(N512 w, Span<ushort> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 8a 12 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 db f9 48 ff cc e8 cd fd 48 ff
226       | 7ff7c82c4c90h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n512,span16i,32i)                                                           | Block512<short> load<short>(N512 w, Span<short> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 8a 11 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 db f8 48 ff cc e8 cd fc 48 ff
227       | 7ff7c82c4d90h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32u](n512,span32u,32i)                                                           | Block512<uint> load<uint>(N512 w, Span<uint> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 8a 10 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 db f7 48 ff cc e8 cd fb 48 ff
228       | 7ff7c82c4e90h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32i](n512,span32i,32i)                                                           | Block512<int> load<int>(N512 w, Span<int> src, int offset)                                                    | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 8a 0f fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 db f6 48 ff cc e8 cd fa 48 ff
229       | 7ff7c82c4f90h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64u](n512,span64u,32i)                                                           | Block512<ulong> load<ulong>(N512 w, Span<ulong> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 8a 0e fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 db f5 48 ff cc e8 cd f9 48 ff
230       | 7ff7c82c5090h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64i](n512,span64i,32i)                                                           | Block512<long> load<long>(N512 w, Span<long> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 8a 0d fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 db f4 48 ff cc e8 cd f8 48 ff
231       | 7ff7c82c5190h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32f](n512,span32f,32i)                                                           | Block512<float> load<float>(N512 w, Span<float> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 8a 0c fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 db f3 48 ff cc e8 cd f7 48 ff
232       | 7ff7c82c5290h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64f](n512,span64f,32i)                                                           | Block512<double> load<double>(N512 w, Span<double> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 8a 0b fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 68 7a d0 ec b2 01 00 00 48 8b 09 48 b8 70 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 db f2 48 ff cc e8 cd f6 48 ff
233       | 7ff7c82c57a0h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n16)                                                                       | Block16<byte> parts<byte>(N16 w, Byte[] src)                                                                  | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 9d 06 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 1a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 f0 ed 48 ff
234       | 7ff7c82c5870h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n16)                                                                       | Block16<sbyte> parts<sbyte>(N16 w, SByte[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 cd 05 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 1a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 20 ed 48 ff
235       | 7ff7c82c5940h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n16)                                                                      | Block16<ushort> parts<ushort>(N16 w, UInt16[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 fa 04 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 1a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 4d ec 48 ff
236       | 7ff7c82c5a10h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n16)                                                                      | Block16<short> parts<short>(N16 w, Int16[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 2a 04 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 1a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 7d eb 48 ff
237       | 7ff7c8400480h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n32)                                                                       | Block32<byte> parts<byte>(N32 w, Byte[] src)                                                                  | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ba 59 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 0d 41 35 ff
238       | 7ff7c8400550h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n32)                                                                       | Block32<sbyte> parts<sbyte>(N32 w, SByte[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ea 58 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 3d 40 35 ff
239       | 7ff7c8400620h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n32)                                                                      | Block32<ushort> parts<ushort>(N32 w, UInt16[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 1d 58 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 70 3f 35 ff
240       | 7ff7c84006f0h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n32)                                                                      | Block32<short> parts<short>(N32 w, Int16[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 4d 57 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 a0 3e 35 ff
241       | 7ff7c84007c0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32u](n32)                                                                      | Block32<uint> parts<uint>(N32 w, UInt32[] src)                                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 7a 56 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 cd 3d 35 ff
242       | 7ff7c8400890h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32i](n32)                                                                      | Block32<int> parts<int>(N32 w, Int32[] src)                                                                   | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 aa 55 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 fd 3c 35 ff
243       | 7ff7c8400960h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32f](n32)                                                                      | Block32<float> parts<float>(N32 w, Single[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 da 54 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 2d 3c 35 ff
244       | 7ff7c8400e40h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n64)                                                                       | Block64<byte> parts<byte>(N64 w, Byte[] src)                                                                  | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 fa 4f e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 4d 37 35 ff
245       | 7ff7c8400f10h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n64)                                                                       | Block64<sbyte> parts<sbyte>(N64 w, SByte[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 2a 4f e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 7d 36 35 ff
246       | 7ff7c8400fe0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n64)                                                                      | Block64<ushort> parts<ushort>(N64 w, UInt16[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 5a 4e e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 ad 35 35 ff
247       | 7ff7c84010b0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n64)                                                                      | Block64<short> parts<short>(N64 w, Int16[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 8a 4d e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 dd 34 35 ff
248       | 7ff7c8401180h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32u](n64)                                                                      | Block64<uint> parts<uint>(N64 w, UInt32[] src)                                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 bd 4c e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 10 34 35 ff
249       | 7ff7c8401250h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32i](n64)                                                                      | Block64<int> parts<int>(N64 w, Int32[] src)                                                                   | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ed 4b e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 40 33 35 ff
250       | 7ff7c8401320h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64u](n64)                                                                      | Block64<ulong> parts<ulong>(N64 w, UInt64[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 1a 4b e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 6d 32 35 ff
251       | 7ff7c84013f0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64i](n64)                                                                      | Block64<long> parts<long>(N64 w, Int64[] src)                                                                 | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 4a 4a e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 9d 31 35 ff
252       | 7ff7c84018d0h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32f](n64)                                                                      | Block64<float> parts<float>(N64 w, Single[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 6d 45 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 c0 2c 35 ff
253       | 7ff7c84019a0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64f](n64)                                                                      | Block64<double> parts<double>(N64 w, Double[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 9a 44 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 ed 2b 35 ff
254       | 7ff7c8401a70h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n128)                                                                      | Block128<byte> parts<byte>(N128 w, Byte[] src)                                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ca 43 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 1d 2b 35 ff
255       | 7ff7c8401b40h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n128)                                                                      | Block128<sbyte> parts<sbyte>(N128 w, SByte[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 fa 42 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 4d 2a 35 ff
256       | 7ff7c8401c10h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n128)                                                                     | Block128<ushort> parts<ushort>(N128 w, UInt16[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 2a 42 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 7d 29 35 ff
257       | 7ff7c8401ce0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n128)                                                                     | Block128<short> parts<short>(N128 w, Int16[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 5a 41 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 ad 28 35 ff
258       | 7ff7c8401db0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32u](n128)                                                                     | Block128<uint> parts<uint>(N128 w, UInt32[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 8a 40 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 dd 27 35 ff
259       | 7ff7c8401e80h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32i](n128)                                                                     | Block128<int> parts<int>(N128 w, Int32[] src)                                                                 | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ba 3f e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 0d 27 35 ff
260       | 7ff7c8401f50h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64u](n128)                                                                     | Block128<ulong> parts<ulong>(N128 w, UInt64[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ed 3e e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 40 26 35 ff
261       | 7ff7c8402020h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64i](n128)                                                                     | Block128<long> parts<long>(N128 w, Int64[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 1d 3e e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 70 25 35 ff
262       | 7ff7c84020f0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32f](n128)                                                                     | Block128<float> parts<float>(N128 w, Single[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 4a 3d e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 9d 24 35 ff
263       | 7ff7c84021c0h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64f](n128)                                                                     | Block128<double> parts<double>(N128 w, Double[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 7d 3c e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 d0 23 35 ff
264       | 7ff7c84026a0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n256)                                                                      | Block256<byte> parts<byte>(N256 w, Byte[] src)                                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 1f 03 d0 83 e2 e0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 9a 37 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 ed 1e 35 ff
265       | 7ff7c8402770h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n256)                                                                      | Block256<sbyte> parts<sbyte>(N256 w, SByte[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 1f 03 d0 83 e2 e0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ca 36 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 1d 1e 35 ff
266       | 7ff7c8402840h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n256)                                                                     | Block256<ushort> parts<ushort>(N256 w, UInt16[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 fa 35 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 4d 1d 35 ff
267       | 7ff7c8402910h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n256)                                                                     | Block256<short> parts<short>(N256 w, Int16[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 2a 35 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 7d 1c 35 ff
268       | 7ff7c84029e0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32u](n256)                                                                     | Block256<uint> parts<uint>(N256 w, UInt32[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 5a 34 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 ad 1b 35 ff
269       | 7ff7c8402ab0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32i](n256)                                                                     | Block256<int> parts<int>(N256 w, Int32[] src)                                                                 | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 8a 33 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 dd 1a 35 ff
270       | 7ff7c8402b80h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64u](n256)                                                                     | Block256<ulong> parts<ulong>(N256 w, UInt64[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ba 32 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 0d 1a 35 ff
271       | 7ff7c8402c50h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64i](n256)                                                                     | Block256<long> parts<long>(N256 w, Int64[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ea 31 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 3d 19 35 ff
272       | 7ff7c8402d20h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32f](n256)                                                                     | Block256<float> parts<float>(N256 w, Single[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 1a 31 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 6d 18 35 ff
273       | 7ff7c8402df0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64f](n256)                                                                     | Block256<double> parts<double>(N256 w, Double[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 4a 30 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 9d 17 35 ff
274       | 7ff7c8402ec0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n512)                                                                      | Block512<byte> parts<byte>(N512 w, Byte[] src)                                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 3f 03 d0 83 e2 c0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 7a 2f e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 cd 16 35 ff
275       | 7ff7c8402f90h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n512)                                                                      | Block512<sbyte> parts<sbyte>(N512 w, SByte[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 3f 03 d0 83 e2 c0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 aa 2e e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 fd 15 35 ff
276       | 7ff7c8403060h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n512)                                                                     | Block512<ushort> parts<ushort>(N512 w, UInt16[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 1f 03 d0 83 e2 e0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 da 2d e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 2d 15 35 ff
277       | 7ff7c8403130h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n512)                                                                     | Block512<short> parts<short>(N512 w, Int16[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 1f 03 d0 83 e2 e0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 0a 2d e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 5d 14 35 ff
278       | 7ff7c8403200h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32u](n512)                                                                     | Block512<uint> parts<uint>(N512 w, UInt32[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 3a 2c e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 8d 13 35 ff
279       | 7ff7c84036e0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32i](n512)                                                                     | Block512<int> parts<int>(N512 w, Int32[] src)                                                                 | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 5a 27 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 ad 0e 35 ff
280       | 7ff7c84037b0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64u](n512)                                                                     | Block512<ulong> parts<ulong>(N512 w, UInt64[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 8a 26 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 dd 0d 35 ff
281       | 7ff7c8403880h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64i](n512)                                                                     | Block512<long> parts<long>(N512 w, Int64[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ba 25 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 0d 0d 35 ff
282       | 7ff7c8403950h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32f](n512)                                                                     | Block512<float> parts<float>(N512 w, Single[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ea 24 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 3d 0c 35 ff
283       | 7ff7c8403a20h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64f](n512)                                                                     | Block512<double> parts<double>(N512 w, Double[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 1a 24 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 78 7a d0 ec b2 01 00 00 48 8b 09 48 b8 80 7a d0 ec b2 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 6d 0b 35 ff
284       | 7ff7c8403af0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[8u](8u~ref)                                                                    | in void* pvoid<byte>(ref byte src)                                                                            | 0f 1f 44 00 00 48 8b c1 c3
285       | 7ff7c8403b10h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[8i](8i~ref)                                                                    | in void* pvoid<sbyte>(ref sbyte src)                                                                          | 0f 1f 44 00 00 48 8b c1 c3
286       | 7ff7c8403b30h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[16u](16u~ref)                                                                  | in void* pvoid<ushort>(ref ushort src)                                                                        | 0f 1f 44 00 00 48 8b c1 c3
287       | 7ff7c8403b50h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[16i](16i~ref)                                                                  | in void* pvoid<short>(ref short src)                                                                          | 0f 1f 44 00 00 48 8b c1 c3
288       | 7ff7c8403b70h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[32u](32u~ref)                                                                  | in void* pvoid<uint>(ref uint src)                                                                            | 0f 1f 44 00 00 48 8b c1 c3
289       | 7ff7c8403b90h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[32i](32i~ref)                                                                  | in void* pvoid<int>(ref int src)                                                                              | 0f 1f 44 00 00 48 8b c1 c3
290       | 7ff7c8403bb0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[64u](64u~ref)                                                                  | in void* pvoid<ulong>(ref ulong src)                                                                          | 0f 1f 44 00 00 48 8b c1 c3
291       | 7ff7c8403bd0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[64i](64i~ref)                                                                  | in void* pvoid<long>(ref long src)                                                                            | 0f 1f 44 00 00 48 8b c1 c3
292       | 7ff7c8403bf0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[32f](32f~ref)                                                                  | in void* pvoid<float>(ref float src)                                                                          | 0f 1f 44 00 00 48 8b c1 c3
293       | 7ff7c8403c10h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[64f](64f~ref)                                                                  | in void* pvoid<double>(ref double src)                                                                        | 0f 1f 44 00 00 48 8b c1 c3
294       | 7ff7c8403c30h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](8u~ref)                                                                        | in byte* ptr<byte>(ref byte src)                                                                              | 0f 1f 44 00 00 48 8b c1 c3
295       | 7ff7c8403c50h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](8i~ref)                                                                        | in sbyte* ptr<sbyte>(ref sbyte src)                                                                           | 0f 1f 44 00 00 48 8b c1 c3
296       | 7ff7c8403c70h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](16u~ref)                                                                      | in ushort* ptr<ushort>(ref ushort src)                                                                        | 0f 1f 44 00 00 48 8b c1 c3
297       | 7ff7c8403c90h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](16i~ref)                                                                      | in short* ptr<short>(ref short src)                                                                           | 0f 1f 44 00 00 48 8b c1 c3
298       | 7ff7c8403cb0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](32u~ref)                                                                      | in uint* ptr<uint>(ref uint src)                                                                              | 0f 1f 44 00 00 48 8b c1 c3
299       | 7ff7c8403cd0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](32i~ref)                                                                      | in int* ptr<int>(ref int src)                                                                                 | 0f 1f 44 00 00 48 8b c1 c3
300       | 7ff7c8403cf0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64u](64u~ref)                                                                      | in ulong* ptr<ulong>(ref ulong src)                                                                           | 0f 1f 44 00 00 48 8b c1 c3
301       | 7ff7c8403d10h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64i](64i~ref)                                                                      | in long* ptr<long>(ref long src)                                                                              | 0f 1f 44 00 00 48 8b c1 c3
302       | 7ff7c8403d30h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](32f~ref)                                                                      | in float* ptr<float>(ref float src)                                                                           | 0f 1f 44 00 00 48 8b c1 c3
303       | 7ff7c8403d50h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64f](64f~ref)                                                                      | in double* ptr<double>(ref double src)                                                                        | 0f 1f 44 00 00 48 8b c1 c3
304       | 7ff7c8403d70h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b16x8u~in)                                                                     | in byte* ptr<byte>(in Block16<byte> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
305       | 7ff7c8403d90h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b16x8i~in)                                                                     | in sbyte* ptr<sbyte>(in Block16<sbyte> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
306       | 7ff7c8403db0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b16x16u~in)                                                                   | in ushort* ptr<ushort>(in Block16<ushort> src)                                                                | 0f 1f 44 00 00 48 8b 01 c3
307       | 7ff7c8403dd0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b16x16i~in)                                                                   | in short* ptr<short>(in Block16<short> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
308       | 7ff7c8404200h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b32x8u~in)                                                                     | in byte* ptr<byte>(in Block32<byte> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
309       | 7ff7c8404220h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b32x8i~in)                                                                     | in sbyte* ptr<sbyte>(in Block32<sbyte> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
310       | 7ff7c8404240h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b32x16u~in)                                                                   | in ushort* ptr<ushort>(in Block32<ushort> src)                                                                | 0f 1f 44 00 00 48 8b 01 c3
311       | 7ff7c8404260h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b32x16i~in)                                                                   | in short* ptr<short>(in Block32<short> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
312       | 7ff7c8404280h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](b32x32u~in)                                                                   | in uint* ptr<uint>(in Block32<uint> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
313       | 7ff7c84042a0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](b32x32i~in)                                                                   | in int* ptr<int>(in Block32<int> src)                                                                         | 0f 1f 44 00 00 48 8b 01 c3
314       | 7ff7c84042c0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](b32x32f~in)                                                                   | in float* ptr<float>(in Block32<float> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
315       | 7ff7c84042e0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b64x8u~in)                                                                     | in byte* ptr<byte>(in Block64<byte> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
316       | 7ff7c8404300h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b64x8i~in)                                                                     | in sbyte* ptr<sbyte>(in Block64<sbyte> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
317       | 7ff7c8404320h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b64x16u~in)                                                                   | in ushort* ptr<ushort>(in Block64<ushort> src)                                                                | 0f 1f 44 00 00 48 8b 01 c3
318       | 7ff7c8404750h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b64x16i~in)                                                                   | in short* ptr<short>(in Block64<short> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
319       | 7ff7c8404770h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](b64x32u~in)                                                                   | in uint* ptr<uint>(in Block64<uint> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
320       | 7ff7c8404790h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](b64x32i~in)                                                                   | in int* ptr<int>(in Block64<int> src)                                                                         | 0f 1f 44 00 00 48 8b 01 c3
321       | 7ff7c84047b0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64u](b64x64u~in)                                                                   | in ulong* ptr<ulong>(in Block64<ulong> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
322       | 7ff7c84047d0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64i](b64x64i~in)                                                                   | in long* ptr<long>(in Block64<long> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
323       | 7ff7c84047f0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](b64x32f~in)                                                                   | in float* ptr<float>(in Block64<float> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
324       | 7ff7c8404810h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64f](b64x64f~in)                                                                   | in double* ptr<double>(in Block64<double> src)                                                                | 0f 1f 44 00 00 48 8b 01 c3
325       | 7ff7c8404830h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b128x8u~in)                                                                    | in byte* ptr<byte>(in Block128<byte> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
326       | 7ff7c8404850h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b128x8i~in)                                                                    | in sbyte* ptr<sbyte>(in Block128<sbyte> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
327       | 7ff7c8404870h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b128x16u~in)                                                                  | in ushort* ptr<ushort>(in Block128<ushort> src)                                                               | 0f 1f 44 00 00 48 8b 01 c3
328       | 7ff7c8404890h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b128x16i~in)                                                                  | in short* ptr<short>(in Block128<short> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
329       | 7ff7c84048b0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](b128x32u~in)                                                                  | in uint* ptr<uint>(in Block128<uint> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
330       | 7ff7c84048d0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](b128x32i~in)                                                                  | in int* ptr<int>(in Block128<int> src)                                                                        | 0f 1f 44 00 00 48 8b 01 c3
331       | 7ff7c84048f0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64u](b128x64u~in)                                                                  | in ulong* ptr<ulong>(in Block128<ulong> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
332       | 7ff7c8404910h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64i](b128x64i~in)                                                                  | in long* ptr<long>(in Block128<long> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
333       | 7ff7c8404930h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](b128x32f~in)                                                                  | in float* ptr<float>(in Block128<float> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
334       | 7ff7c8404950h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64f](b128x64f~in)                                                                  | in double* ptr<double>(in Block128<double> src)                                                               | 0f 1f 44 00 00 48 8b 01 c3
335       | 7ff7c8404d80h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b256x8u~in)                                                                    | in byte* ptr<byte>(in Block256<byte> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
336       | 7ff7c8404da0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b256x8i~in)                                                                    | in sbyte* ptr<sbyte>(in Block256<sbyte> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
337       | 7ff7c8404dc0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b256x16u~in)                                                                  | in ushort* ptr<ushort>(in Block256<ushort> src)                                                               | 0f 1f 44 00 00 48 8b 01 c3
338       | 7ff7c8404de0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b256x16i~in)                                                                  | in short* ptr<short>(in Block256<short> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
339       | 7ff7c8404e00h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](b256x32u~in)                                                                  | in uint* ptr<uint>(in Block256<uint> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
340       | 7ff7c8404e20h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](b256x32i~in)                                                                  | in int* ptr<int>(in Block256<int> src)                                                                        | 0f 1f 44 00 00 48 8b 01 c3
341       | 7ff7c8404e40h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64u](b256x64u~in)                                                                  | in ulong* ptr<ulong>(in Block256<ulong> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
342       | 7ff7c8404e60h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64i](b256x64i~in)                                                                  | in long* ptr<long>(in Block256<long> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
343       | 7ff7c8404e80h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](b256x32f~in)                                                                  | in float* ptr<float>(in Block256<float> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
344       | 7ff7c8404ea0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64f](b256x64f~in)                                                                  | in double* ptr<double>(in Block256<double> src)                                                               | 0f 1f 44 00 00 48 8b 01 c3
345       | 7ff7c84052d0h   | 17      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b16x8u~in,32i)                                                                 | in byte* ptr<byte>(in Block16<byte> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 03 c2 c3
346       | 7ff7c8405300h   | 17      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b16x8i~in,32i)                                                                 | in sbyte* ptr<sbyte>(in Block16<sbyte> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 03 c2 c3
347       | 7ff7c8405330h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[16u](b16x16u~in,32i)                                                               | in ushort* ptr<ushort>(in Block16<ushort> src, int block)                                                     | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 50 c3
348       | 7ff7c8405350h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[16i](b16x16i~in,32i)                                                               | in short* ptr<short>(in Block16<short> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 50 c3
349       | 7ff7c8405780h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b32x8u~in,32i)                                                                 | in byte* ptr<byte>(in Block32<byte> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 03 c2 c3
350       | 7ff7c84057b0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b32x8i~in,32i)                                                                 | in sbyte* ptr<sbyte>(in Block32<sbyte> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 03 c2 c3
351       | 7ff7c84057e0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b32x16u~in,32i)                                                               | in ushort* ptr<ushort>(in Block32<ushort> src, int block)                                                     | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 50 c3
352       | 7ff7c8405810h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b32x16i~in,32i)                                                               | in short* ptr<short>(in Block32<short> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 50 c3
353       | 7ff7c8405840h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[32u](b32x32u~in,32i)                                                               | in uint* ptr<uint>(in Block32<uint> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
354       | 7ff7c8405860h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[32i](b32x32i~in,32i)                                                               | in int* ptr<int>(in Block32<int> src, int block)                                                              | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
355       | 7ff7c8405880h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[32f](b32x32f~in,32i)                                                               | in float* ptr<float>(in Block32<float> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
356       | 7ff7c8405cb0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b64x8u~in,32i)                                                                 | in byte* ptr<byte>(in Block64<byte> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 03 c2 c3
357       | 7ff7c8405ce0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b64x8i~in,32i)                                                                 | in sbyte* ptr<sbyte>(in Block64<sbyte> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 03 c2 c3
358       | 7ff7c8405d10h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16u](b64x16u~in,32i)                                                               | in ushort* ptr<ushort>(in Block64<ushort> src, int block)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 50 c3
359       | 7ff7c8405d40h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16i](b64x16i~in,32i)                                                               | in short* ptr<short>(in Block64<short> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 50 c3
360       | 7ff7c8405d70h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](b64x32u~in,32i)                                                               | in uint* ptr<uint>(in Block64<uint> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
361       | 7ff7c8405da0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](b64x32i~in,32i)                                                               | in int* ptr<int>(in Block64<int> src, int block)                                                              | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
362       | 7ff7c8405dd0h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[64u](b64x64u~in,32i)                                                               | in ulong* ptr<ulong>(in Block64<ulong> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
363       | 7ff7c8405df0h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[64i](b64x64i~in,32i)                                                               | in long* ptr<long>(in Block64<long> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
364       | 7ff7c8405e10h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](b64x32f~in,32i)                                                               | in float* ptr<float>(in Block64<float> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
365       | 7ff7c8405e40h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[64f](b64x64f~in,32i)                                                               | in double* ptr<double>(in Block64<double> src, int block)                                                     | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
366       | 7ff7c8406270h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b128x8u~in,32i)                                                                | in byte* ptr<byte>(in Block128<byte> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 03 c2 c3
367       | 7ff7c84062a0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b128x8i~in,32i)                                                                | in sbyte* ptr<sbyte>(in Block128<sbyte> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 03 c2 c3
368       | 7ff7c84062d0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16u](b128x16u~in,32i)                                                              | in ushort* ptr<ushort>(in Block128<ushort> src, int block)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 50 c3
369       | 7ff7c8406300h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16i](b128x16i~in,32i)                                                              | in short* ptr<short>(in Block128<short> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 50 c3
370       | 7ff7c8406330h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32u](b128x32u~in,32i)                                                              | in uint* ptr<uint>(in Block128<uint> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
371       | 7ff7c8406760h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32i](b128x32i~in,32i)                                                              | in int* ptr<int>(in Block128<int> src, int block)                                                             | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
372       | 7ff7c8406790h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64u](b128x64u~in,32i)                                                              | in ulong* ptr<ulong>(in Block128<ulong> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
373       | 7ff7c84067c0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64i](b128x64i~in,32i)                                                              | in long* ptr<long>(in Block128<long> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
374       | 7ff7c84067f0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32f](b128x32f~in,32i)                                                              | in float* ptr<float>(in Block128<float> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
375       | 7ff7c8406820h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64f](b128x64f~in,32i)                                                              | in double* ptr<double>(in Block128<double> src, int block)                                                    | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
376       | 7ff7c8406850h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b256x8u~in,32i)                                                                | in byte* ptr<byte>(in Block256<byte> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 03 c2 c3
377       | 7ff7c8406880h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b256x8i~in,32i)                                                                | in sbyte* ptr<sbyte>(in Block256<sbyte> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 03 c2 c3
378       | 7ff7c84068b0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16u](b256x16u~in,32i)                                                              | in ushort* ptr<ushort>(in Block256<ushort> src, int block)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 50 c3
379       | 7ff7c84068e0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16i](b256x16i~in,32i)                                                              | in short* ptr<short>(in Block256<short> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 50 c3
380       | 7ff7c8406910h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32u](b256x32u~in,32i)                                                              | in uint* ptr<uint>(in Block256<uint> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
381       | 7ff7c8406940h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32i](b256x32i~in,32i)                                                              | in int* ptr<int>(in Block256<int> src, int block)                                                             | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
382       | 7ff7c8406970h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[64u](b256x64u~in,32i)                                                              | in ulong* ptr<ulong>(in Block256<ulong> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
383       | 7ff7c84069a0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[64i](b256x64i~in,32i)                                                              | in long* ptr<long>(in Block256<long> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
384       | 7ff7c84069d0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32f](b256x32f~in,32i)                                                              | in float* ptr<float>(in Block256<float> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
385       | 7ff7c8406a00h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[64f](b256x64f~in,32i)                                                              | in double* ptr<double>(in Block256<double> src, int block)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
386       | 7ff7c8406a30h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n8,32i)                                                                | bool aligned<byte>(N8 n, int count)                                                                           | 0f 1f 44 00 00 b8 01 00 00 00 c3
387       | 7ff7c8406a50h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n8,32i)                                                                | bool aligned<sbyte>(N8 n, int count)                                                                          | 0f 1f 44 00 00 b8 01 00 00 00 c3
388       | 7ff7c8406a70h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[16u](n8,32i)                                                               | bool aligned<ushort>(N8 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
389       | 7ff7c8406aa0h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[16i](n8,32i)                                                               | bool aligned<short>(N8 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
390       | 7ff7c8406ed0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32u](n8,32i)                                                               | bool aligned<uint>(N8 n, int count)                                                                           | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
391       | 7ff7c8406f00h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32i](n8,32i)                                                               | bool aligned<int>(N8 n, int count)                                                                            | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
392       | 7ff7c8406f30h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64u](n8,32i)                                                               | bool aligned<ulong>(N8 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
393       | 7ff7c8406f60h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64i](n8,32i)                                                               | bool aligned<long>(N8 n, int count)                                                                           | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
394       | 7ff7c8406f90h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32f](n8,32i)                                                               | bool aligned<float>(N8 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
395       | 7ff7c8406fc0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64f](n8,32i)                                                               | bool aligned<double>(N8 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
396       | 7ff7c8406ff0h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[8u](n16,32i)                                                               | bool aligned<byte>(N16 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
397       | 7ff7c8407020h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[8i](n16,32i)                                                               | bool aligned<sbyte>(N16 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
398       | 7ff7c8407050h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16u](n16,32i)                                                              | bool aligned<ushort>(N16 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
399       | 7ff7c8407080h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16i](n16,32i)                                                              | bool aligned<short>(N16 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
400       | 7ff7c84070b0h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[32u](n16,32i)                                                              | bool aligned<uint>(N16 n, int count)                                                                          | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
401       | 7ff7c84070e0h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[32i](n16,32i)                                                              | bool aligned<int>(N16 n, int count)                                                                           | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
402       | 7ff7c8407110h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64u](n16,32i)                                                              | bool aligned<ulong>(N16 n, int count)                                                                         | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
403       | 7ff7c8407140h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64i](n16,32i)                                                              | bool aligned<long>(N16 n, int count)                                                                          | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
404       | 7ff7c8407170h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[32f](n16,32i)                                                              | bool aligned<float>(N16 n, int count)                                                                         | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
405       | 7ff7c84071a0h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64f](n16,32i)                                                              | bool aligned<double>(N16 n, int count)                                                                        | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
406       | 7ff7c84071d0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n32,32i)                                                               | bool aligned<byte>(N32 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
407       | 7ff7c8407200h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n32,32i)                                                               | bool aligned<sbyte>(N32 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
408       | 7ff7c8407230h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[16u](n32,32i)                                                              | bool aligned<ushort>(N32 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
409       | 7ff7c8407260h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[16i](n32,32i)                                                              | bool aligned<short>(N32 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
410       | 7ff7c8407290h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32u](n32,32i)                                                              | bool aligned<uint>(N32 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
411       | 7ff7c84072c0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32i](n32,32i)                                                              | bool aligned<int>(N32 n, int count)                                                                           | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
412       | 7ff7c84072f0h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64u](n32,32i)                                                              | bool aligned<ulong>(N32 n, int count)                                                                         | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
413       | 7ff7c8407320h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64i](n32,32i)                                                              | bool aligned<long>(N32 n, int count)                                                                          | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
414       | 7ff7c8407350h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32f](n32,32i)                                                              | bool aligned<float>(N32 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
415       | 7ff7c8407380h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64f](n32,32i)                                                              | bool aligned<double>(N32 n, int count)                                                                        | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
416       | 7ff7c84073b0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n64,32i)                                                               | bool aligned<byte>(N64 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
417       | 7ff7c84073e0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n64,32i)                                                               | bool aligned<sbyte>(N64 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
418       | 7ff7c8407410h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16u](n64,32i)                                                              | bool aligned<ushort>(N64 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
419       | 7ff7c8407440h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16i](n64,32i)                                                              | bool aligned<short>(N64 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
420       | 7ff7c8407470h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[32u](n64,32i)                                                              | bool aligned<uint>(N64 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
421       | 7ff7c84074a0h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[32i](n64,32i)                                                              | bool aligned<int>(N64 n, int count)                                                                           | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
422       | 7ff7c84074d0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64u](n64,32i)                                                              | bool aligned<ulong>(N64 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
423       | 7ff7c8407500h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64i](n64,32i)                                                              | bool aligned<long>(N64 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
424       | 7ff7c8407530h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[32f](n64,32i)                                                              | bool aligned<float>(N64 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
425       | 7ff7c8407560h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64f](n64,32i)                                                              | bool aligned<double>(N64 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
426       | 7ff7c8407590h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n128,32i)                                                              | bool aligned<byte>(N128 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
427       | 7ff7c84075c0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n128,32i)                                                              | bool aligned<sbyte>(N128 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
428       | 7ff7c84075f0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16u](n128,32i)                                                             | bool aligned<ushort>(N128 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
429       | 7ff7c8407620h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16i](n128,32i)                                                             | bool aligned<short>(N128 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
430       | 7ff7c8407650h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32u](n128,32i)                                                             | bool aligned<uint>(N128 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
431       | 7ff7c8407680h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32i](n128,32i)                                                             | bool aligned<int>(N128 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
432       | 7ff7c84076b0h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[64u](n128,32i)                                                             | bool aligned<ulong>(N128 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
433       | 7ff7c84076e0h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[64i](n128,32i)                                                             | bool aligned<long>(N128 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
434       | 7ff7c8407710h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32f](n128,32i)                                                             | bool aligned<float>(N128 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
435       | 7ff7c8407740h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[64f](n128,32i)                                                             | bool aligned<double>(N128 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
436       | 7ff7c8407770h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n256,32i)                                                              | bool aligned<byte>(N256 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 83 e0 e0 2b d0 0f 94 c0 0f b6 c0 c3
437       | 7ff7c84077a0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n256,32i)                                                              | bool aligned<sbyte>(N256 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 83 e0 e0 2b d0 0f 94 c0 0f b6 c0 c3
438       | 7ff7c84077d0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16u](n256,32i)                                                             | bool aligned<ushort>(N256 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
439       | 7ff7c8407800h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16i](n256,32i)                                                             | bool aligned<short>(N256 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
440       | 7ff7c8407830h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32u](n256,32i)                                                             | bool aligned<uint>(N256 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
441       | 7ff7c8407860h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32i](n256,32i)                                                             | bool aligned<int>(N256 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
442       | 7ff7c8407890h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64u](n256,32i)                                                             | bool aligned<ulong>(N256 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
443       | 7ff7c84078c0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64i](n256,32i)                                                             | bool aligned<long>(N256 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
444       | 7ff7c84078f0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32f](n256,32i)                                                             | bool aligned<float>(N256 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
445       | 7ff7c8407920h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64f](n256,32i)                                                             | bool aligned<double>(N256 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
446       | 7ff7c8407950h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n512,32i)                                                              | bool aligned<byte>(N512 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 3f 03 c2 83 e0 c0 2b d0 0f 94 c0 0f b6 c0 c3
447       | 7ff7c8407980h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n512,32i)                                                              | bool aligned<sbyte>(N512 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 3f 03 c2 83 e0 c0 2b d0 0f 94 c0 0f b6 c0 c3
448       | 7ff7c84079b0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16u](n512,32i)                                                             | bool aligned<ushort>(N512 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 83 e0 e0 2b d0 0f 94 c0 0f b6 c0 c3
449       | 7ff7c84079e0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16i](n512,32i)                                                             | bool aligned<short>(N512 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 83 e0 e0 2b d0 0f 94 c0 0f b6 c0 c3
450       | 7ff7c8407a10h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32u](n512,32i)                                                             | bool aligned<uint>(N512 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
451       | 7ff7c8407a40h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32i](n512,32i)                                                             | bool aligned<int>(N512 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
452       | 7ff7c8407a70h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64u](n512,32i)                                                             | bool aligned<ulong>(N512 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
453       | 7ff7c8407aa0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64i](n512,32i)                                                             | bool aligned<long>(N512 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
454       | 7ff7c8407ad0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32f](n512,32i)                                                             | bool aligned<float>(N512 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
455       | 7ff7c8407b00h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64f](n512,32i)                                                             | bool aligned<double>(N512 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
456       | 7ff7c8407b30h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[8u](n16,32i,8u)                                                                | Block16<byte> alloc<byte>(N16 w, int blocks, byte t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 10 ea 71 c7 f7 7f 00 00 e8 85 f2 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 16 e3 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
457       | 7ff7c8407ba0h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[8i](n16,32i,8i)                                                                | Block16<sbyte> alloc<sbyte>(N16 w, int blocks, sbyte t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 98 f0 71 c7 f7 7f 00 00 e8 15 f2 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 a6 e2 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
458       | 7ff7c8407c10h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16u](n16,32i,16u)                                                              | Block16<ushort> alloc<ushort>(N16 w, int blocks, ushort t)                                                    | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 c0 7f 17 c8 f7 7f 00 00 e8 a8 f1 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 39 e2 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
459       | 7ff7c8407c80h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16i](n16,32i,16i)                                                              | Block16<short> alloc<short>(N16 w, int blocks, short t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 60 3c 3e c8 f7 7f 00 00 e8 38 f1 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 c9 e1 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
460       | 7ff7c8408100h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8u](n32,32i,8u)                                                                | Block32<byte> alloc<byte>(N32 w, int blocks, byte t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 10 ea 71 c7 f7 7f 00 00 e8 b4 ec e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 45 dd e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
461       | 7ff7c8408170h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8i](n32,32i,8i)                                                                | Block32<sbyte> alloc<sbyte>(N32 w, int blocks, sbyte t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 98 f0 71 c7 f7 7f 00 00 e8 44 ec e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 d5 dc e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
462       | 7ff7c84081e0h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[16u](n32,32i,16u)                                                              | Block32<ushort> alloc<ushort>(N32 w, int blocks, ushort t)                                                    | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 c0 7f 17 c8 f7 7f 00 00 e8 d5 eb e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 66 dc e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
463       | 7ff7c8408250h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[16i](n32,32i,16i)                                                              | Block32<short> alloc<short>(N32 w, int blocks, short t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 60 3c 3e c8 f7 7f 00 00 e8 65 eb e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 f6 db e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
464       | 7ff7c84082c0h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32u](n32,32i,32u)                                                              | Block32<uint> alloc<uint>(N32 w, int blocks, uint t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 58 6f 17 c8 f7 7f 00 00 e8 f8 ea e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 89 db e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
465       | 7ff7c8408330h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32i](n32,32i,32i)                                                              | Block32<int> alloc<int>(N32 w, int blocks, int t)                                                             | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 48 5f 7e c7 f7 7f 00 00 e8 88 ea e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 19 db e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
466       | 7ff7c84083a0h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32f](n32,32i,32f)                                                              | Block32<float> alloc<float>(N32 w, int blocks, float t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 38 d7 03 c8 f7 7f 00 00 e8 18 ea e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 a9 da e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
467       | 7ff7c8408410h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8u](n64,32i,8u)                                                                | Block64<byte> alloc<byte>(N64 w, int blocks, byte t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 10 ea 71 c7 f7 7f 00 00 e8 a4 e9 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 35 da e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
468       | 7ff7c8408480h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8i](n64,32i,8i)                                                                | Block64<sbyte> alloc<sbyte>(N64 w, int blocks, sbyte t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 98 f0 71 c7 f7 7f 00 00 e8 34 e9 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 c5 d9 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
469       | 7ff7c84084f0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16u](n64,32i,16u)                                                              | Block64<ushort> alloc<ushort>(N64 w, int blocks, ushort t)                                                    | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 c0 7f 17 c8 f7 7f 00 00 e8 c4 e8 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 55 d9 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
470       | 7ff7c8408560h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16i](n64,32i,16i)                                                              | Block64<short> alloc<short>(N64 w, int blocks, short t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 60 3c 3e c8 f7 7f 00 00 e8 54 e8 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 e5 d8 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
471       | 7ff7c84085d0h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[32u](n64,32i,32u)                                                              | Block64<uint> alloc<uint>(N64 w, int blocks, uint t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 58 6f 17 c8 f7 7f 00 00 e8 e5 e7 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 76 d8 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
472       | 7ff7c8408640h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[32i](n64,32i,32i)                                                              | Block64<int> alloc<int>(N64 w, int blocks, int t)                                                             | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 48 5f 7e c7 f7 7f 00 00 e8 75 e7 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 06 d8 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
473       | 7ff7c84086b0h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64u](n64,32i,64u)                                                              | Block64<ulong> alloc<ulong>(N64 w, int blocks, ulong t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 e0 2f ba c7 f7 7f 00 00 e8 08 e7 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 99 d7 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
474       | 7ff7c8408720h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64i](n64,32i,64i)                                                              | Block64<long> alloc<long>(N64 w, int blocks, long t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 e0 64 3e c8 f7 7f 00 00 e8 98 e6 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 29 d7 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
475       | 7ff7c8408790h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[32f](n64,32i,32f)                                                              | Block64<float> alloc<float>(N64 w, int blocks, float t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 38 d7 03 c8 f7 7f 00 00 e8 25 e6 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 b6 d6 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
476       | 7ff7c8408800h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64f](n64,32i,64f)                                                              | Block64<double> alloc<double>(N64 w, int blocks, double t)                                                    | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 40 d9 03 c8 f7 7f 00 00 e8 b8 e5 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 49 d6 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
477       | 7ff7c8408c80h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8u](n128,32i,8u)                                                               | Block128<byte> alloc<byte>(N128 w, int blocks, byte t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 10 ea 71 c7 f7 7f 00 00 e8 34 e1 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 c5 d1 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
478       | 7ff7c8408cf0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8i](n128,32i,8i)                                                               | Block128<sbyte> alloc<sbyte>(N128 w, int blocks, sbyte t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 98 f0 71 c7 f7 7f 00 00 e8 c4 e0 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 55 d1 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
479       | 7ff7c8408d60h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16u](n128,32i,16u)                                                             | Block128<ushort> alloc<ushort>(N128 w, int blocks, ushort t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 c0 7f 17 c8 f7 7f 00 00 e8 54 e0 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 e5 d0 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
480       | 7ff7c8408dd0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16i](n128,32i,16i)                                                             | Block128<short> alloc<short>(N128 w, int blocks, short t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 60 3c 3e c8 f7 7f 00 00 e8 e4 df e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 75 d0 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
481       | 7ff7c8408e40h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32u](n128,32i,32u)                                                             | Block128<uint> alloc<uint>(N128 w, int blocks, uint t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 58 6f 17 c8 f7 7f 00 00 e8 74 df e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 05 d0 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
482       | 7ff7c8408eb0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32i](n128,32i,32i)                                                             | Block128<int> alloc<int>(N128 w, int blocks, int t)                                                           | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 48 5f 7e c7 f7 7f 00 00 e8 04 df e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 95 cf e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
483       | 7ff7c8408f20h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[64u](n128,32i,64u)                                                             | Block128<ulong> alloc<ulong>(N128 w, int blocks, ulong t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 e0 2f ba c7 f7 7f 00 00 e8 95 de e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 26 cf e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
484       | 7ff7c8408f90h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[64i](n128,32i,64i)                                                             | Block128<long> alloc<long>(N128 w, int blocks, long t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 e0 64 3e c8 f7 7f 00 00 e8 25 de e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 b6 ce e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
485       | 7ff7c8409000h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32f](n128,32i,32f)                                                             | Block128<float> alloc<float>(N128 w, int blocks, float t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 38 d7 03 c8 f7 7f 00 00 e8 b4 dd e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 45 ce e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
486       | 7ff7c8409070h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[64f](n128,32i,64f)                                                             | Block128<double> alloc<double>(N128 w, int blocks, double t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 40 d9 03 c8 f7 7f 00 00 e8 45 dd e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 d6 cd e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
487       | 7ff7c84090e0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8u](n256,32i,8u)                                                               | Block256<byte> alloc<byte>(N256 w, int blocks, byte t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 05 49 63 d0 48 b9 10 ea 71 c7 f7 7f 00 00 e8 d4 dc e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 65 cd e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
488       | 7ff7c8409150h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8i](n256,32i,8i)                                                               | Block256<sbyte> alloc<sbyte>(N256 w, int blocks, sbyte t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 05 49 63 d0 48 b9 98 f0 71 c7 f7 7f 00 00 e8 64 dc e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 f5 cc e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
489       | 7ff7c84091c0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16u](n256,32i,16u)                                                             | Block256<ushort> alloc<ushort>(N256 w, int blocks, ushort t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 c0 7f 17 c8 f7 7f 00 00 e8 f4 db e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 85 cc e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
490       | 7ff7c8409230h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16i](n256,32i,16i)                                                             | Block256<short> alloc<short>(N256 w, int blocks, short t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 60 3c 3e c8 f7 7f 00 00 e8 84 db e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 15 cc e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
491       | 7ff7c84092a0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32u](n256,32i,32u)                                                             | Block256<uint> alloc<uint>(N256 w, int blocks, uint t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 58 6f 17 c8 f7 7f 00 00 e8 14 db e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 a5 cb e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
492       | 7ff7c8409310h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32i](n256,32i,32i)                                                             | Block256<int> alloc<int>(N256 w, int blocks, int t)                                                           | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 48 5f 7e c7 f7 7f 00 00 e8 a4 da e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 35 cb e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
493       | 7ff7c8409380h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64u](n256,32i,64u)                                                             | Block256<ulong> alloc<ulong>(N256 w, int blocks, ulong t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 e0 2f ba c7 f7 7f 00 00 e8 34 da e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 c5 ca e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
494       | 7ff7c84093f0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64i](n256,32i,64i)                                                             | Block256<long> alloc<long>(N256 w, int blocks, long t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 e0 64 3e c8 f7 7f 00 00 e8 c4 d9 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 55 ca e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
495       | 7ff7c8409460h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32f](n256,32i,32f)                                                             | Block256<float> alloc<float>(N256 w, int blocks, float t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 38 d7 03 c8 f7 7f 00 00 e8 54 d9 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 e5 c9 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
496       | 7ff7c84094d0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64f](n256,32i,64f)                                                             | Block256<double> alloc<double>(N256 w, int blocks, double t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 40 d9 03 c8 f7 7f 00 00 e8 e4 d8 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 75 c9 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
497       | 7ff7c8409950h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8u](n512,32i,8u)                                                               | Block512<byte> alloc<byte>(N512 w, int blocks, byte t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 06 49 63 d0 48 b9 10 ea 71 c7 f7 7f 00 00 e8 64 d4 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 f5 c4 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
498       | 7ff7c84099c0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8i](n512,32i,8i)                                                               | Block512<sbyte> alloc<sbyte>(N512 w, int blocks, sbyte t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 06 49 63 d0 48 b9 98 f0 71 c7 f7 7f 00 00 e8 f4 d3 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 85 c4 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
499       | 7ff7c8409a30h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16u](n512,32i,16u)                                                             | Block512<ushort> alloc<ushort>(N512 w, int blocks, ushort t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 05 49 63 d0 48 b9 c0 7f 17 c8 f7 7f 00 00 e8 84 d3 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 15 c4 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
500       | 7ff7c8409aa0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16i](n512,32i,16i)                                                             | Block512<short> alloc<short>(N512 w, int blocks, short t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 05 49 63 d0 48 b9 60 3c 3e c8 f7 7f 00 00 e8 14 d3 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 a5 c3 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
501       | 7ff7c8409b10h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32u](n512,32i,32u)                                                             | Block512<uint> alloc<uint>(N512 w, int blocks, uint t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 58 6f 17 c8 f7 7f 00 00 e8 a4 d2 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 35 c3 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
502       | 7ff7c8409b80h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32i](n512,32i,32i)                                                             | Block512<int> alloc<int>(N512 w, int blocks, int t)                                                           | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 48 5f 7e c7 f7 7f 00 00 e8 34 d2 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 c5 c2 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
503       | 7ff7c8409bf0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64u](n512,32i,64u)                                                             | Block512<ulong> alloc<ulong>(N512 w, int blocks, ulong t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 e0 2f ba c7 f7 7f 00 00 e8 c4 d1 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 55 c2 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
504       | 7ff7c8409c60h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64i](n512,32i,64i)                                                             | Block512<long> alloc<long>(N512 w, int blocks, long t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 e0 64 3e c8 f7 7f 00 00 e8 54 d1 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 e5 c1 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
505       | 7ff7c8409cd0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32f](n512,32i,32f)                                                             | Block512<float> alloc<float>(N512 w, int blocks, float t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 38 d7 03 c8 f7 7f 00 00 e8 e4 d0 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 75 c1 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
506       | 7ff7c8409d40h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64f](n512,32i,64f)                                                             | Block512<double> alloc<double>(N512 w, int blocks, double t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 40 d9 03 c8 f7 7f 00 00 e8 74 d0 e5 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 05 c1 e5 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
507       | 7ff7c8409db0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[8u](32i)                                                                 | int bitcount<byte>(int cellcount)                                                                             | 0f 1f 44 00 00 8b c1 c1 e0 03 c3
508       | 7ff7c8409dd0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[8i](32i)                                                                 | int bitcount<sbyte>(int cellcount)                                                                            | 0f 1f 44 00 00 8b c1 c1 e0 03 c3
509       | 7ff7c8409df0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[16u](32i)                                                                | int bitcount<ushort>(int cellcount)                                                                           | 0f 1f 44 00 00 8b c1 c1 e0 04 c3
510       | 7ff7c8409e10h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[16i](32i)                                                                | int bitcount<short>(int cellcount)                                                                            | 0f 1f 44 00 00 8b c1 c1 e0 04 c3
511       | 7ff7c8409e30h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[32u](32i)                                                                | int bitcount<uint>(int cellcount)                                                                             | 0f 1f 44 00 00 8b c1 c1 e0 05 c3
512       | 7ff7c8409e50h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[32i](32i)                                                                | int bitcount<int>(int cellcount)                                                                              | 0f 1f 44 00 00 8b c1 c1 e0 05 c3
513       | 7ff7c8409e70h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[64u](32i)                                                                | int bitcount<ulong>(int cellcount)                                                                            | 0f 1f 44 00 00 8b c1 c1 e0 06 c3
514       | 7ff7c8409e90h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[64i](32i)                                                                | int bitcount<long>(int cellcount)                                                                             | 0f 1f 44 00 00 8b c1 c1 e0 06 c3
515       | 7ff7c8409eb0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[32f](32i)                                                                | int bitcount<float>(int cellcount)                                                                            | 0f 1f 44 00 00 8b c1 c1 e0 05 c3
516       | 7ff7c8409ed0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[64f](32i)                                                                | int bitcount<double>(int cellcount)                                                                           | 0f 1f 44 00 00 8b c1 c1 e0 06 c3
517       | 7ff7c8409ef0h   | 8       | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[8u](n8,32i)                                                            | int minblocks<byte>(N8 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b c2 c3
518       | 7ff7c8409f10h   | 8       | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[8i](n8,32i)                                                            | int minblocks<sbyte>(N8 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c3
519       | 7ff7c8409f30h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[16u](n8,32i)                                                           | int minblocks<ushort>(N8 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
520       | 7ff7c8409f60h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[16i](n8,32i)                                                           | int minblocks<short>(N8 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
521       | 7ff7c8409f90h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32u](n8,32i)                                                           | int minblocks<uint>(N8 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
522       | 7ff7c8409fd0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32i](n8,32i)                                                           | int minblocks<int>(N8 n, int cellcount)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
523       | 7ff7c840a010h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[64u](n8,32i)                                                           | int minblocks<ulong>(N8 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
524       | 7ff7c840a050h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[64i](n8,32i)                                                           | int minblocks<long>(N8 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
525       | 7ff7c840a090h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32f](n8,32i)                                                           | int minblocks<float>(N8 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
526       | 7ff7c840a0d0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[64f](n8,32i)                                                           | int minblocks<double>(N8 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
527       | 7ff7c840a110h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[8u](n16,32i)                                                           | int minblocks<byte>(N16 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
528       | 7ff7c840a140h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[8i](n16,32i)                                                           | int minblocks<sbyte>(N16 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
529       | 7ff7c840a170h   | 30      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[16u](n16,32i)                                                          | int minblocks<ushort>(N16 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
530       | 7ff7c840a1a0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[16i](n16,32i)                                                          | int minblocks<short>(N16 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
531       | 7ff7c840a1d0h   | 41      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[32u](n16,32i)                                                          | int minblocks<uint>(N16 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
532       | 7ff7c840a210h   | 41      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[32i](n16,32i)                                                          | int minblocks<int>(N16 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
533       | 7ff7c840a250h   | 41      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[64u](n16,32i)                                                          | int minblocks<ulong>(N16 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
534       | 7ff7c840a290h   | 41      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[64i](n16,32i)                                                          | int minblocks<long>(N16 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
535       | 7ff7c840a2d0h   | 41      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[32f](n16,32i)                                                          | int minblocks<float>(N16 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
536       | 7ff7c840a310h   | 41      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[64f](n16,32i)                                                          | int minblocks<double>(N16 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
537       | 7ff7c840a350h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8u](n32,32i)                                                           | int minblocks<byte>(N32 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
538       | 7ff7c840a390h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8i](n32,32i)                                                           | int minblocks<sbyte>(N32 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
539       | 7ff7c840a3d0h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[16u](n32,32i)                                                          | int minblocks<ushort>(N32 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
540       | 7ff7c840a400h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[16i](n32,32i)                                                          | int minblocks<short>(N32 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
541       | 7ff7c840a430h   | 30      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[32u](n32,32i)                                                          | int minblocks<uint>(N32 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
542       | 7ff7c840a460h   | 30      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[32i](n32,32i)                                                          | int minblocks<int>(N32 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
543       | 7ff7c840a490h   | 41      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[64u](n32,32i)                                                          | int minblocks<ulong>(N32 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
544       | 7ff7c840a4d0h   | 41      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[64i](n32,32i)                                                          | int minblocks<long>(N32 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
545       | 7ff7c840a510h   | 30      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[32f](n32,32i)                                                          | int minblocks<float>(N32 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
546       | 7ff7c840a540h   | 41      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[64f](n32,32i)                                                          | int minblocks<double>(N32 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
547       | 7ff7c840a580h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8u](n64,32i)                                                           | int minblocks<byte>(N64 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
548       | 7ff7c840a5c0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8i](n64,32i)                                                           | int minblocks<sbyte>(N64 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
549       | 7ff7c840a600h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[16u](n64,32i)                                                          | int minblocks<ushort>(N64 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
550       | 7ff7c840a640h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[16i](n64,32i)                                                          | int minblocks<short>(N64 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
551       | 7ff7c840a680h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[32u](n64,32i)                                                          | int minblocks<uint>(N64 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
552       | 7ff7c840a6b0h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[32i](n64,32i)                                                          | int minblocks<int>(N64 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
553       | 7ff7c840a6e0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[64u](n64,32i)                                                          | int minblocks<ulong>(N64 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
554       | 7ff7c840a710h   | 30      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[64i](n64,32i)                                                          | int minblocks<long>(N64 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
555       | 7ff7c840a740h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[32f](n64,32i)                                                          | int minblocks<float>(N64 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
556       | 7ff7c840a770h   | 30      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[64f](n64,32i)                                                          | int minblocks<double>(N64 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
557       | 7ff7c840a7a0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8u](n128,32i)                                                          | int minblocks<byte>(N128 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
558       | 7ff7c840a7e0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8i](n128,32i)                                                          | int minblocks<sbyte>(N128 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
559       | 7ff7c840a820h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[16u](n128,32i)                                                         | int minblocks<ushort>(N128 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
560       | 7ff7c840a860h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[16i](n128,32i)                                                         | int minblocks<short>(N128 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
561       | 7ff7c840a8a0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32u](n128,32i)                                                         | int minblocks<uint>(N128 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
562       | 7ff7c840a8e0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32i](n128,32i)                                                         | int minblocks<int>(N128 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
563       | 7ff7c840a920h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[64u](n128,32i)                                                         | int minblocks<ulong>(N128 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
564       | 7ff7c840a950h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[64i](n128,32i)                                                         | int minblocks<long>(N128 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
565       | 7ff7c840a980h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32f](n128,32i)                                                         | int minblocks<float>(N128 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
566       | 7ff7c840a9c0h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[64f](n128,32i)                                                         | int minblocks<double>(N128 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
567       | 7ff7c840a9f0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8u](n256,32i)                                                          | int minblocks<byte>(N256 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 c1 f8 05 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 74 03 ff c0 c3 c3
568       | 7ff7c840aa30h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8i](n256,32i)                                                          | int minblocks<sbyte>(N256 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 c1 f8 05 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 74 03 ff c0 c3 c3
569       | 7ff7c840aa70h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[16u](n256,32i)                                                         | int minblocks<ushort>(N256 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
570       | 7ff7c840aab0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[16i](n256,32i)                                                         | int minblocks<short>(N256 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
571       | 7ff7c840aaf0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32u](n256,32i)                                                         | int minblocks<uint>(N256 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
572       | 7ff7c840ab30h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32i](n256,32i)                                                         | int minblocks<int>(N256 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
573       | 7ff7c840ab70h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[64u](n256,32i)                                                         | int minblocks<ulong>(N256 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
574       | 7ff7c840abb0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[64i](n256,32i)                                                         | int minblocks<long>(N256 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
575       | 7ff7c840abf0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32f](n256,32i)                                                         | int minblocks<float>(N256 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
576       | 7ff7c840ac30h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[64f](n256,32i)                                                         | int minblocks<double>(N256 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
577       | 7ff7c840ac70h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8u](n512,32i)                                                          | int minblocks<byte>(N512 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 3f 03 c2 c1 f8 06 8b ca c1 f9 1f 83 e1 3f 03 ca 83 e1 c0 2b d1 74 03 ff c0 c3 c3
578       | 7ff7c840acb0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8i](n512,32i)                                                          | int minblocks<sbyte>(N512 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 3f 03 c2 c1 f8 06 8b ca c1 f9 1f 83 e1 3f 03 ca 83 e1 c0 2b d1 74 03 ff c0 c3 c3
579       | 7ff7c840acf0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[16u](n512,32i)                                                         | int minblocks<ushort>(N512 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 c1 f8 05 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 74 03 ff c0 c3 c3
580       | 7ff7c840ad30h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[16i](n512,32i)                                                         | int minblocks<short>(N512 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 c1 f8 05 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 74 03 ff c0 c3 c3
581       | 7ff7c840ad70h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32u](n512,32i)                                                         | int minblocks<uint>(N512 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
582       | 7ff7c840adb0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32i](n512,32i)                                                         | int minblocks<int>(N512 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
583       | 7ff7c840adf0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[64u](n512,32i)                                                         | int minblocks<ulong>(N512 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
584       | 7ff7c840ae30h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[64i](n512,32i)                                                         | int minblocks<long>(N512 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
585       | 7ff7c840ae70h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32f](n512,32i)                                                         | int minblocks<float>(N512 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
586       | 7ff7c840aeb0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[64f](n512,32i)                                                         | int minblocks<double>(N512 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
587       | 7ff7c840aef0h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[8u](n8,32i)                                                      | int blockedcells<byte>(N8 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c3
588       | 7ff7c840af10h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[8i](n8,32i)                                                      | int blockedcells<sbyte>(N8 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c3
589       | 7ff7c840af30h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[16u](n8,32i)                                                     | int blockedcells<ushort>(N8 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 d1 e0 c3
590       | 7ff7c840af50h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[16i](n8,32i)                                                     | int blockedcells<short>(N8 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 d1 e0 c3
591       | 7ff7c840af70h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32u](n8,32i)                                                     | int blockedcells<uint>(N8 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
592       | 7ff7c840af90h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32i](n8,32i)                                                     | int blockedcells<int>(N8 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
593       | 7ff7c840afb0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[64u](n8,32i)                                                     | int blockedcells<ulong>(N8 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
594       | 7ff7c840afd0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[64i](n8,32i)                                                     | int blockedcells<long>(N8 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
595       | 7ff7c840aff0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32f](n8,32i)                                                     | int blockedcells<float>(N8 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
596       | 7ff7c840b010h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[64f](n8,32i)                                                     | int blockedcells<double>(N8 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
597       | 7ff7c840b030h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[8u](n16,32i)                                                     | int blockedcells<byte>(N16 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 d1 e0 c3
598       | 7ff7c840b050h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[8i](n16,32i)                                                     | int blockedcells<sbyte>(N16 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 d1 e0 c3
599       | 7ff7c840b070h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[16u](n16,32i)                                                    | int blockedcells<ushort>(N16 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c3
600       | 7ff7c840b090h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[16i](n16,32i)                                                    | int blockedcells<short>(N16 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c3
601       | 7ff7c840b0b0h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[32u](n16,32i)                                                    | int blockedcells<uint>(N16 n, int blocks)                                                                     | 0f 1f 44 00 00 33 c0 c3
602       | 7ff7c840b0d0h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[32i](n16,32i)                                                    | int blockedcells<int>(N16 n, int blocks)                                                                      | 0f 1f 44 00 00 33 c0 c3
603       | 7ff7c840b0f0h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[64u](n16,32i)                                                    | int blockedcells<ulong>(N16 n, int blocks)                                                                    | 0f 1f 44 00 00 33 c0 c3
604       | 7ff7c840b110h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[64i](n16,32i)                                                    | int blockedcells<long>(N16 n, int blocks)                                                                     | 0f 1f 44 00 00 33 c0 c3
605       | 7ff7c840b130h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[32f](n16,32i)                                                    | int blockedcells<float>(N16 n, int blocks)                                                                    | 0f 1f 44 00 00 33 c0 c3
606       | 7ff7c840b150h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[64f](n16,32i)                                                    | int blockedcells<double>(N16 n, int blocks)                                                                   | 0f 1f 44 00 00 33 c0 c3
607       | 7ff7c840b170h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8u](n32,32i)                                                     | int blockedcells<byte>(N32 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
608       | 7ff7c840b190h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8i](n32,32i)                                                     | int blockedcells<sbyte>(N32 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
609       | 7ff7c840b1b0h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[16u](n32,32i)                                                    | int blockedcells<ushort>(N32 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 d1 e0 c3
610       | 7ff7c840b1d0h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[16i](n32,32i)                                                    | int blockedcells<short>(N32 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 d1 e0 c3
611       | 7ff7c840b1f0h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[32u](n32,32i)                                                    | int blockedcells<uint>(N32 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c3
612       | 7ff7c840b210h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[32i](n32,32i)                                                    | int blockedcells<int>(N32 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c3
613       | 7ff7c840b230h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[64u](n32,32i)                                                    | int blockedcells<ulong>(N32 n, int blocks)                                                                    | 0f 1f 44 00 00 33 c0 c3
614       | 7ff7c840b650h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[64i](n32,32i)                                                    | int blockedcells<long>(N32 n, int blocks)                                                                     | 0f 1f 44 00 00 33 c0 c3
615       | 7ff7c840b670h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[32f](n32,32i)                                                    | int blockedcells<float>(N32 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c3
616       | 7ff7c840b690h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[64f](n32,32i)                                                    | int blockedcells<double>(N32 n, int blocks)                                                                   | 0f 1f 44 00 00 33 c0 c3
617       | 7ff7c840b6b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8u](n64,32i)                                                     | int blockedcells<byte>(N64 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
618       | 7ff7c840b6d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8i](n64,32i)                                                     | int blockedcells<sbyte>(N64 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
619       | 7ff7c840b6f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[16u](n64,32i)                                                    | int blockedcells<ushort>(N64 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
620       | 7ff7c840b710h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[16i](n64,32i)                                                    | int blockedcells<short>(N64 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
621       | 7ff7c840b730h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[32u](n64,32i)                                                    | int blockedcells<uint>(N64 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 d1 e0 c3
622       | 7ff7c840b750h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[32i](n64,32i)                                                    | int blockedcells<int>(N64 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 d1 e0 c3
623       | 7ff7c840b770h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[64u](n64,32i)                                                    | int blockedcells<ulong>(N64 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c3
624       | 7ff7c840b790h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[64i](n64,32i)                                                    | int blockedcells<long>(N64 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c3
625       | 7ff7c840b7b0h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[32f](n64,32i)                                                    | int blockedcells<float>(N64 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 d1 e0 c3
626       | 7ff7c840b7d0h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[64f](n64,32i)                                                    | int blockedcells<double>(N64 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c3
627       | 7ff7c840b7f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8u](n128,32i)                                                    | int blockedcells<byte>(N128 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
628       | 7ff7c840b810h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8i](n128,32i)                                                    | int blockedcells<sbyte>(N128 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
629       | 7ff7c840b830h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[16u](n128,32i)                                                   | int blockedcells<ushort>(N128 n, int blocks)                                                                  | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
630       | 7ff7c840b850h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[16i](n128,32i)                                                   | int blockedcells<short>(N128 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
631       | 7ff7c840b870h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32u](n128,32i)                                                   | int blockedcells<uint>(N128 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
632       | 7ff7c840b890h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32i](n128,32i)                                                   | int blockedcells<int>(N128 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
633       | 7ff7c840b8b0h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[64u](n128,32i)                                                   | int blockedcells<ulong>(N128 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 d1 e0 c3
634       | 7ff7c840b8d0h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[64i](n128,32i)                                                   | int blockedcells<long>(N128 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 d1 e0 c3
635       | 7ff7c840b8f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32f](n128,32i)                                                   | int blockedcells<float>(N128 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
636       | 7ff7c840b910h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[64f](n128,32i)                                                   | int blockedcells<double>(N128 n, int blocks)                                                                  | 0f 1f 44 00 00 8b c2 d1 e0 c3
637       | 7ff7c840b930h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8u](n256,32i)                                                    | int blockedcells<byte>(N256 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 05 c3
638       | 7ff7c840b950h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8i](n256,32i)                                                    | int blockedcells<sbyte>(N256 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 05 c3
639       | 7ff7c840b970h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[16u](n256,32i)                                                   | int blockedcells<ushort>(N256 n, int blocks)                                                                  | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
640       | 7ff7c840b990h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[16i](n256,32i)                                                   | int blockedcells<short>(N256 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
641       | 7ff7c840b9b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32u](n256,32i)                                                   | int blockedcells<uint>(N256 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
642       | 7ff7c840b9d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32i](n256,32i)                                                   | int blockedcells<int>(N256 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
643       | 7ff7c840b9f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[64u](n256,32i)                                                   | int blockedcells<ulong>(N256 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
644       | 7ff7c840ba10h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[64i](n256,32i)                                                   | int blockedcells<long>(N256 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
645       | 7ff7c840ba30h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32f](n256,32i)                                                   | int blockedcells<float>(N256 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
646       | 7ff7c840ba50h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[64f](n256,32i)                                                   | int blockedcells<double>(N256 n, int blocks)                                                                  | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
647       | 7ff7c840ba70h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8u](n512,32i)                                                    | int blockedcells<byte>(N512 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 06 c3
648       | 7ff7c840ba90h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8i](n512,32i)                                                    | int blockedcells<sbyte>(N512 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 06 c3
649       | 7ff7c840bab0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[16u](n512,32i)                                                   | int blockedcells<ushort>(N512 n, int blocks)                                                                  | 0f 1f 44 00 00 8b c2 c1 e0 05 c3
650       | 7ff7c840bad0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[16i](n512,32i)                                                   | int blockedcells<short>(N512 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 05 c3
651       | 7ff7c840baf0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32u](n512,32i)                                                   | int blockedcells<uint>(N512 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
652       | 7ff7c840bb10h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32i](n512,32i)                                                   | int blockedcells<int>(N512 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
653       | 7ff7c840bb30h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[64u](n512,32i)                                                   | int blockedcells<ulong>(N512 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
654       | 7ff7c840bb50h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[64i](n512,32i)                                                   | int blockedcells<long>(N512 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
655       | 7ff7c840bb70h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32f](n512,32i)                                                   | int blockedcells<float>(N512 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
656       | 7ff7c840bb90h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[64f](n512,32i)                                                   | int blockedcells<double>(N512 n, int blocks)                                                                  | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
657       | 7ff7c840c270h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8u](n8,8u)                                                               | int blocklen<byte>(N8 w, byte t)                                                                              | 0f 1f 44 00 00 b8 01 00 00 00 c3
658       | 7ff7c840c290h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8i](n8,8i)                                                               | int blocklen<sbyte>(N8 w, sbyte t)                                                                            | 0f 1f 44 00 00 b8 01 00 00 00 c3
659       | 7ff7c840c2b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8u](n16,8u)                                                              | int blocklen<byte>(N16 w, byte t)                                                                             | 0f 1f 44 00 00 b8 02 00 00 00 c3
660       | 7ff7c840c2d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8i](n16,8i)                                                              | int blocklen<sbyte>(N16 w, sbyte t)                                                                           | 0f 1f 44 00 00 b8 02 00 00 00 c3
661       | 7ff7c840c2f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16u](n16,16u)                                                            | int blocklen<ushort>(N16 w, ushort t)                                                                         | 0f 1f 44 00 00 b8 01 00 00 00 c3
662       | 7ff7c840c310h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16i](n16,16i)                                                            | int blocklen<short>(N16 w, short t)                                                                           | 0f 1f 44 00 00 b8 01 00 00 00 c3
663       | 7ff7c840c330h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8u](n32,8u)                                                              | int blocklen<byte>(N32 w, byte t)                                                                             | 0f 1f 44 00 00 b8 04 00 00 00 c3
664       | 7ff7c840c350h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8i](n32,8i)                                                              | int blocklen<sbyte>(N32 w, sbyte t)                                                                           | 0f 1f 44 00 00 b8 04 00 00 00 c3
665       | 7ff7c840c370h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16u](n32,16u)                                                            | int blocklen<ushort>(N32 w, ushort t)                                                                         | 0f 1f 44 00 00 b8 02 00 00 00 c3
666       | 7ff7c840c390h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16i](n32,16i)                                                            | int blocklen<short>(N32 w, short t)                                                                           | 0f 1f 44 00 00 b8 02 00 00 00 c3
667       | 7ff7c840c3b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32u](n32,32u)                                                            | int blocklen<uint>(N32 w, uint t)                                                                             | 0f 1f 44 00 00 b8 01 00 00 00 c3
668       | 7ff7c840c3d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32i](n32,32i)                                                            | int blocklen<int>(N32 w, int t)                                                                               | 0f 1f 44 00 00 b8 01 00 00 00 c3
669       | 7ff7c840c3f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32f](n32,32f)                                                            | int blocklen<float>(N32 w, float t)                                                                           | 0f 1f 44 00 00 b8 01 00 00 00 c3
670       | 7ff7c840c410h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8u](n64,8u)                                                              | int blocklen<byte>(N64 w, byte t)                                                                             | 0f 1f 44 00 00 b8 08 00 00 00 c3
671       | 7ff7c840c430h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8i](n64,8i)                                                              | int blocklen<sbyte>(N64 w, sbyte t)                                                                           | 0f 1f 44 00 00 b8 08 00 00 00 c3
672       | 7ff7c840c450h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16u](n64,16u)                                                            | int blocklen<ushort>(N64 w, ushort t)                                                                         | 0f 1f 44 00 00 b8 04 00 00 00 c3
673       | 7ff7c840c470h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16i](n64,16i)                                                            | int blocklen<short>(N64 w, short t)                                                                           | 0f 1f 44 00 00 b8 04 00 00 00 c3
674       | 7ff7c840c490h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32u](n64,32u)                                                            | int blocklen<uint>(N64 w, uint t)                                                                             | 0f 1f 44 00 00 b8 02 00 00 00 c3
675       | 7ff7c840c4b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32i](n64,32i)                                                            | int blocklen<int>(N64 w, int t)                                                                               | 0f 1f 44 00 00 b8 02 00 00 00 c3
676       | 7ff7c840c4d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64u](n64,64u)                                                            | int blocklen<ulong>(N64 w, ulong t)                                                                           | 0f 1f 44 00 00 b8 01 00 00 00 c3
677       | 7ff7c840c4f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64i](n64,64i)                                                            | int blocklen<long>(N64 w, long t)                                                                             | 0f 1f 44 00 00 b8 01 00 00 00 c3
678       | 7ff7c840c510h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32f](n64,32f)                                                            | int blocklen<float>(N64 w, float t)                                                                           | 0f 1f 44 00 00 b8 02 00 00 00 c3
679       | 7ff7c840c530h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64f](n64,64f)                                                            | int blocklen<double>(N64 w, double t)                                                                         | 0f 1f 44 00 00 b8 01 00 00 00 c3
680       | 7ff7c840c550h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8u](n128,8u)                                                             | int blocklen<byte>(N128 w, byte t)                                                                            | 0f 1f 44 00 00 b8 10 00 00 00 c3
681       | 7ff7c840c570h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8i](n128,8i)                                                             | int blocklen<sbyte>(N128 w, sbyte t)                                                                          | 0f 1f 44 00 00 b8 10 00 00 00 c3
682       | 7ff7c840c590h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16u](n128,16u)                                                           | int blocklen<ushort>(N128 w, ushort t)                                                                        | 0f 1f 44 00 00 b8 08 00 00 00 c3
683       | 7ff7c840c5b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16i](n128,16i)                                                           | int blocklen<short>(N128 w, short t)                                                                          | 0f 1f 44 00 00 b8 08 00 00 00 c3
684       | 7ff7c840c5d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32u](n128,32u)                                                           | int blocklen<uint>(N128 w, uint t)                                                                            | 0f 1f 44 00 00 b8 04 00 00 00 c3
685       | 7ff7c840c5f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32i](n128,32i)                                                           | int blocklen<int>(N128 w, int t)                                                                              | 0f 1f 44 00 00 b8 04 00 00 00 c3
686       | 7ff7c840c610h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64u](n128,64u)                                                           | int blocklen<ulong>(N128 w, ulong t)                                                                          | 0f 1f 44 00 00 b8 02 00 00 00 c3
687       | 7ff7c840c630h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64i](n128,64i)                                                           | int blocklen<long>(N128 w, long t)                                                                            | 0f 1f 44 00 00 b8 02 00 00 00 c3
688       | 7ff7c840c650h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32f](n128,32f)                                                           | int blocklen<float>(N128 w, float t)                                                                          | 0f 1f 44 00 00 b8 04 00 00 00 c3
689       | 7ff7c840c670h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64f](n128,64f)                                                           | int blocklen<double>(N128 w, double t)                                                                        | 0f 1f 44 00 00 b8 02 00 00 00 c3
690       | 7ff7c840c690h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8u](n256,8u)                                                             | int blocklen<byte>(N256 w, byte t)                                                                            | 0f 1f 44 00 00 b8 20 00 00 00 c3
691       | 7ff7c840c6b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8i](n256,8i)                                                             | int blocklen<sbyte>(N256 w, sbyte t)                                                                          | 0f 1f 44 00 00 b8 20 00 00 00 c3
692       | 7ff7c840c6d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16u](n256,16u)                                                           | int blocklen<ushort>(N256 w, ushort t)                                                                        | 0f 1f 44 00 00 b8 10 00 00 00 c3
693       | 7ff7c840c6f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16i](n256,16i)                                                           | int blocklen<short>(N256 w, short t)                                                                          | 0f 1f 44 00 00 b8 10 00 00 00 c3
694       | 7ff7c840c710h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32u](n256,32u)                                                           | int blocklen<uint>(N256 w, uint t)                                                                            | 0f 1f 44 00 00 b8 08 00 00 00 c3
695       | 7ff7c840c730h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32i](n256,32i)                                                           | int blocklen<int>(N256 w, int t)                                                                              | 0f 1f 44 00 00 b8 08 00 00 00 c3
696       | 7ff7c840c750h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64u](n256,64u)                                                           | int blocklen<ulong>(N256 w, ulong t)                                                                          | 0f 1f 44 00 00 b8 04 00 00 00 c3
697       | 7ff7c840c770h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64i](n256,64i)                                                           | int blocklen<long>(N256 w, long t)                                                                            | 0f 1f 44 00 00 b8 04 00 00 00 c3
698       | 7ff7c840c790h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32f](n256,32f)                                                           | int blocklen<float>(N256 w, float t)                                                                          | 0f 1f 44 00 00 b8 08 00 00 00 c3
699       | 7ff7c840c7b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64f](n256,64f)                                                           | int blocklen<double>(N256 w, double t)                                                                        | 0f 1f 44 00 00 b8 04 00 00 00 c3
700       | 7ff7c840c7d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8u](n512,8u)                                                             | int blocklen<byte>(N512 w, byte t)                                                                            | 0f 1f 44 00 00 b8 40 00 00 00 c3
701       | 7ff7c840c7f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8i](n512,8i)                                                             | int blocklen<sbyte>(N512 w, sbyte t)                                                                          | 0f 1f 44 00 00 b8 40 00 00 00 c3
702       | 7ff7c840c810h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16u](n512,16u)                                                           | int blocklen<ushort>(N512 w, ushort t)                                                                        | 0f 1f 44 00 00 b8 20 00 00 00 c3
703       | 7ff7c840c830h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16i](n512,16i)                                                           | int blocklen<short>(N512 w, short t)                                                                          | 0f 1f 44 00 00 b8 20 00 00 00 c3
704       | 7ff7c840c850h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32u](n512,32u)                                                           | int blocklen<uint>(N512 w, uint t)                                                                            | 0f 1f 44 00 00 b8 10 00 00 00 c3
705       | 7ff7c840c870h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32i](n512,32i)                                                           | int blocklen<int>(N512 w, int t)                                                                              | 0f 1f 44 00 00 b8 10 00 00 00 c3
706       | 7ff7c840c890h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64u](n512,64u)                                                           | int blocklen<ulong>(N512 w, ulong t)                                                                          | 0f 1f 44 00 00 b8 08 00 00 00 c3
707       | 7ff7c840c8b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64i](n512,64i)                                                           | int blocklen<long>(N512 w, long t)                                                                            | 0f 1f 44 00 00 b8 08 00 00 00 c3
708       | 7ff7c840c8d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32f](n512,32f)                                                           | int blocklen<float>(N512 w, float t)                                                                          | 0f 1f 44 00 00 b8 10 00 00 00 c3
709       | 7ff7c840c8f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64f](n512,64f)                                                           | int blocklen<double>(N512 w, double t)                                                                        | 0f 1f 44 00 00 b8 08 00 00 00 c3
710       | 7ff7c840c910h   | 17      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8u](b16x8u~in,32i)                                                       | ref byte blockref<byte>(in Block16<byte> src, int index)                                                      | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 03 c2 c3
711       | 7ff7c840c940h   | 17      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8i](b16x8i~in,32i)                                                       | ref sbyte blockref<sbyte>(in Block16<sbyte> src, int index)                                                   | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 03 c2 c3
712       | 7ff7c840c970h   | 16      | CTC_RET_SBB         | hex://blocks/api?blockref#blockref_g[16u](b16x16u~in,32i)                                                     | ref ushort blockref<ushort>(in Block16<ushort> src, int index)                                                | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 50 c3
713       | 7ff7c840c990h   | 16      | CTC_RET_SBB         | hex://blocks/api?blockref#blockref_g[16i](b16x16i~in,32i)                                                     | ref short blockref<short>(in Block16<short> src, int index)                                                   | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 50 c3
714       | 7ff7c840c9b0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8u](b32x8u~in,32i)                                                       | ref byte blockref<byte>(in Block32<byte> src, int index)                                                      | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 03 c2 c3
715       | 7ff7c840c9e0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8i](b32x8i~in,32i)                                                       | ref sbyte blockref<sbyte>(in Block32<sbyte> src, int index)                                                   | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 03 c2 c3
716       | 7ff7c840ca10h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[16u](b32x16u~in,32i)                                                     | ref ushort blockref<ushort>(in Block32<ushort> src, int index)                                                | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 50 c3
717       | 7ff7c840ca40h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[16i](b32x16i~in,32i)                                                     | ref short blockref<short>(in Block32<short> src, int index)                                                   | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 50 c3
718       | 7ff7c840ca70h   | 16      | CTC_RET_SBB         | hex://blocks/api?blockref#blockref_g[32u](b32x32u~in,32i)                                                     | ref uint blockref<uint>(in Block32<uint> src, int index)                                                      | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
719       | 7ff7c840ca90h   | 16      | CTC_RET_SBB         | hex://blocks/api?blockref#blockref_g[32i](b32x32i~in,32i)                                                     | ref int blockref<int>(in Block32<int> src, int index)                                                         | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
720       | 7ff7c840cab0h   | 16      | CTC_RET_SBB         | hex://blocks/api?blockref#blockref_g[32f](b32x32f~in,32i)                                                     | ref float blockref<float>(in Block32<float> src, int index)                                                   | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
721       | 7ff7c840cad0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8u](b64x8u~in,32i)                                                       | ref byte blockref<byte>(in Block64<byte> src, int index)                                                      | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 03 c2 c3
722       | 7ff7c840cb00h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8i](b64x8i~in,32i)                                                       | ref sbyte blockref<sbyte>(in Block64<sbyte> src, int index)                                                   | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 03 c2 c3
723       | 7ff7c840cb30h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[16u](b64x16u~in,32i)                                                     | ref ushort blockref<ushort>(in Block64<ushort> src, int index)                                                | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 50 c3
724       | 7ff7c840cb60h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[16i](b64x16i~in,32i)                                                     | ref short blockref<short>(in Block64<short> src, int index)                                                   | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 50 c3
725       | 7ff7c840cb90h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[32u](b64x32u~in,32i)                                                     | ref uint blockref<uint>(in Block64<uint> src, int index)                                                      | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
726       | 7ff7c840cbc0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[32i](b64x32i~in,32i)                                                     | ref int blockref<int>(in Block64<int> src, int index)                                                         | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
727       | 7ff7c840cbf0h   | 16      | CTC_RET_SBB         | hex://blocks/api?blockref#blockref_g[64u](b64x64u~in,32i)                                                     | ref ulong blockref<ulong>(in Block64<ulong> src, int index)                                                   | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
728       | 7ff7c840cc10h   | 16      | CTC_RET_SBB         | hex://blocks/api?blockref#blockref_g[64i](b64x64i~in,32i)                                                     | ref long blockref<long>(in Block64<long> src, int index)                                                      | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
729       | 7ff7c840cc30h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[32f](b64x32f~in,32i)                                                     | ref float blockref<float>(in Block64<float> src, int index)                                                   | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
730       | 7ff7c840cc60h   | 16      | CTC_RET_SBB         | hex://blocks/api?blockref#blockref_g[64f](b64x64f~in,32i)                                                     | ref double blockref<double>(in Block64<double> src, int index)                                                | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
731       | 7ff7c840d090h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8u](b128x8u~in,32i)                                                      | ref byte blockref<byte>(in Block128<byte> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 03 c2 c3
732       | 7ff7c840d0c0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8i](b128x8i~in,32i)                                                      | ref sbyte blockref<sbyte>(in Block128<sbyte> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 03 c2 c3
733       | 7ff7c840d0f0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[16u](b128x16u~in,32i)                                                    | ref ushort blockref<ushort>(in Block128<ushort> src, int index)                                               | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 50 c3
734       | 7ff7c840d120h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[16i](b128x16i~in,32i)                                                    | ref short blockref<short>(in Block128<short> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 50 c3
735       | 7ff7c840d150h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[32u](b128x32u~in,32i)                                                    | ref uint blockref<uint>(in Block128<uint> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
736       | 7ff7c840d180h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[32i](b128x32i~in,32i)                                                    | ref int blockref<int>(in Block128<int> src, int index)                                                        | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
737       | 7ff7c840d1b0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[64u](b128x64u~in,32i)                                                    | ref ulong blockref<ulong>(in Block128<ulong> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
738       | 7ff7c840d1e0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[64i](b128x64i~in,32i)                                                    | ref long blockref<long>(in Block128<long> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
739       | 7ff7c840d210h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[32f](b128x32f~in,32i)                                                    | ref float blockref<float>(in Block128<float> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
740       | 7ff7c840d240h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[64f](b128x64f~in,32i)                                                    | ref double blockref<double>(in Block128<double> src, int index)                                               | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
741       | 7ff7c840d270h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8u](b256x8u~in,32i)                                                      | ref byte blockref<byte>(in Block256<byte> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 03 c2 c3
742       | 7ff7c840d2a0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8i](b256x8i~in,32i)                                                      | ref sbyte blockref<sbyte>(in Block256<sbyte> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 03 c2 c3
743       | 7ff7c840d2d0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[16u](b256x16u~in,32i)                                                    | ref ushort blockref<ushort>(in Block256<ushort> src, int index)                                               | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 50 c3
744       | 7ff7c840d300h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[16i](b256x16i~in,32i)                                                    | ref short blockref<short>(in Block256<short> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 50 c3
745       | 7ff7c840d330h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[32u](b256x32u~in,32i)                                                    | ref uint blockref<uint>(in Block256<uint> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
746       | 7ff7c840d360h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[32i](b256x32i~in,32i)                                                    | ref int blockref<int>(in Block256<int> src, int index)                                                        | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
747       | 7ff7c840d390h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[64u](b256x64u~in,32i)                                                    | ref ulong blockref<ulong>(in Block256<ulong> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
748       | 7ff7c840d3c0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[64i](b256x64i~in,32i)                                                    | ref long blockref<long>(in Block256<long> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
749       | 7ff7c840d3f0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[32f](b256x32f~in,32i)                                                    | ref float blockref<float>(in Block256<float> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
750       | 7ff7c840d420h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[64f](b256x64f~in,32i)                                                    | ref double blockref<double>(in Block256<double> src, int index)                                               | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
751       | 7ff7c840d850h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8u](b512x8u~in,32i)                                                      | ref byte blockref<byte>(in Block512<byte> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 06 48 63 d2 48 03 c2 c3
752       | 7ff7c840d880h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8i](b512x8i~in,32i)                                                      | ref sbyte blockref<sbyte>(in Block512<sbyte> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 06 48 63 d2 48 03 c2 c3
753       | 7ff7c840d8b0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[16u](b512x16u~in,32i)                                                    | ref ushort blockref<ushort>(in Block512<ushort> src, int index)                                               | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 8d 04 50 c3
754       | 7ff7c840d8e0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[16i](b512x16i~in,32i)                                                    | ref short blockref<short>(in Block512<short> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 8d 04 50 c3
755       | 7ff7c840d910h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[32u](b512x32u~in,32i)                                                    | ref uint blockref<uint>(in Block512<uint> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 c3
756       | 7ff7c840d940h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[32i](b512x32i~in,32i)                                                    | ref int blockref<int>(in Block512<int> src, int index)                                                        | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 c3
757       | 7ff7c840d970h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[64u](b512x64u~in,32i)                                                    | ref ulong blockref<ulong>(in Block512<ulong> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 c3
758       | 7ff7c840d9a0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[64i](b512x64i~in,32i)                                                    | ref long blockref<long>(in Block512<long> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 c3
759       | 7ff7c840d9d0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[32f](b512x32f~in,32i)                                                    | ref float blockref<float>(in Block512<float> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 c3
760       | 7ff7c840da00h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[64f](b512x64f~in,32i)                                                    | ref double blockref<double>(in Block512<double> src, int index)                                               | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 c3
761       | 7ff7c840da30h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b16x8u~in)                                                      | void broadcast<byte>(byte data, in Block16<byte> dst)                                                         | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 10 0d ad c7 f7 7f 00 00 48 ff e0
762       | 7ff7c840da60h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b16x8i~in)                                                      | void broadcast<sbyte>(sbyte data, in Block16<sbyte> dst)                                                      | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 38 08 0d c8 f7 7f 00 00 48 ff e0
763       | 7ff7c840da90h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b16x16u~in)                                                   | void broadcast<ushort>(ushort data, in Block16<ushort> dst)                                                   | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 e0 b3 ad c7 f7 7f 00 00 48 ff e0
764       | 7ff7c840dac0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b16x16i~in)                                                   | void broadcast<short>(short data, in Block16<short> dst)                                                      | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 c0 10 0d c8 f7 7f 00 00 48 ff e0
765       | 7ff7c840df00h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b32x8u~in)                                                      | void broadcast<byte>(byte data, in Block32<byte> dst)                                                         | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 10 0d ad c7 f7 7f 00 00 48 ff e0
766       | 7ff7c840df30h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b32x8i~in)                                                      | void broadcast<sbyte>(sbyte data, in Block32<sbyte> dst)                                                      | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 38 08 0d c8 f7 7f 00 00 48 ff e0
767       | 7ff7c840df60h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b32x16u~in)                                                   | void broadcast<ushort>(ushort data, in Block32<ushort> dst)                                                   | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 e0 b3 ad c7 f7 7f 00 00 48 ff e0
768       | 7ff7c840df90h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b32x16i~in)                                                   | void broadcast<short>(short data, in Block32<short> dst)                                                      | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 c0 10 0d c8 f7 7f 00 00 48 ff e0
769       | 7ff7c840dfc0h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32u](32u,b32x32u~in)                                                   | void broadcast<uint>(uint data, in Block32<uint> dst)                                                         | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 f0 b5 ad c7 f7 7f 00 00 48 ff e0
770       | 7ff7c840dff0h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32i](32i,b32x32i~in)                                                   | void broadcast<int>(int data, in Block32<int> dst)                                                            | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 f0 0f ac c7 f7 7f 00 00 48 ff e0
771       | 7ff7c840e020h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32f](32f,b32x32f~in)                                                   | void broadcast<float>(float data, in Block32<float> dst)                                                      | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 b8 20 0d c8 f7 7f 00 00 48 ff e0
772       | 7ff7c840e050h   | 106     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n16,16u)                                                                        | Block16<ushort> cells(N16 n, ushort x0)                                                                       | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 48 b9 c0 7f 17 c8 f7 7f 00 00 ba 01 00 00 00 e8 65 8d e5 5e 66 89 70 10 48 83 c0 10 ba 01 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 e3 7d e5 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
773       | 7ff7c840e0e0h   | 210     | CTC_INTRx2          | hex://blocks/api?cells#cells_(n16,64u)                                                                        | Block16<ulong> cells(N16 n, ulong x0)                                                                         | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 48 b9 e0 2f ba c7 f7 7f 00 00 ba 01 00 00 00 e8 d5 8c e5 5e 48 8b c8 48 89 71 10 b8 01 00 00 00 45 33 c0 99 41 f7 f8 b8 01 00 00 00 83 e8 00 75 3b 48 83 c1 10 b8 01 00 00 00 48 8d 54 24 30 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 30 48 89 0a 89 42 08 48 8b fb 48 8d 74 24 30 e8 3a 7d e5 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 ba 1a 00 00 00 41 b8 01 00 00 00 49 b9 78 7a d0 ec b2 01 00 00 4d 8b 09 48 b9 80 7a d0 ec b2 01 00 00 48 8b 09 48 8d 44 24 28 44 88 00 89 50 04 48 8b 54 24 28 48 89 54 24 20 ba 01 00 00 00 4d 8b c1 4c 8b c9 b9 10 00 00 00 e8 8e 64 34 ff
774       | 7ff7c840e1d0h   | 210     | CTC_INTRx2          | hex://blocks/api?cells#cells_(n32,64u)                                                                        | Block32<ulong> cells(N32 n, ulong x0)                                                                         | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 48 b9 e0 2f ba c7 f7 7f 00 00 ba 01 00 00 00 e8 e5 8b e5 5e 48 8b c8 48 89 71 10 b8 01 00 00 00 45 33 c0 99 41 f7 f8 b8 01 00 00 00 83 e8 00 75 3b 48 83 c1 10 b8 01 00 00 00 48 8d 54 24 30 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 30 48 89 0a 89 42 08 48 8b fb 48 8d 74 24 30 e8 4a 7c e5 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 ba 2a 00 00 00 41 b8 01 00 00 00 49 b9 78 7a d0 ec b2 01 00 00 4d 8b 09 48 b9 80 7a d0 ec b2 01 00 00 48 8b 09 48 8d 44 24 28 44 88 00 89 50 04 48 8b 54 24 28 48 89 54 24 20 ba 01 00 00 00 4d 8b c1 4c 8b c9 b9 20 00 00 00 e8 9e 63 34 ff
775       | 7ff7c840e2c0h   | 135     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n32,8u,8u,8u,8u)                                                                | Block32<byte> cells(N32 n, byte x0, byte x1, byte x2, byte x3)                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 10 ea 71 c7 f7 7f 00 00 ba 04 00 00 00 e8 f2 8a e5 5e 40 88 70 10 40 88 78 11 8b b4 24 80 00 00 00 40 88 70 12 8b b4 24 88 00 00 00 40 88 70 13 48 83 c0 10 ba 04 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 56 7b e5 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
776       | 7ff7c840e370h   | 113     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n32,16u,16u)                                                                    | Block32<ushort> cells(N32 n, ushort x0, ushort x1)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 c0 7f 17 c8 f7 7f 00 00 ba 02 00 00 00 e8 42 8a e5 5e 66 89 70 10 66 89 78 12 48 83 c0 10 ba 02 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 bc 7a e5 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
777       | 7ff7c840e400h   | 105     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n32,32u)                                                                        | Block32<uint> cells(N32 n, uint x0)                                                                           | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 48 b9 58 6f 17 c8 f7 7f 00 00 ba 01 00 00 00 e8 b5 89 e5 5e 89 70 10 48 83 c0 10 ba 01 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 34 7a e5 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
778       | 7ff7c840e490h   | 179     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n64,8u,8u,8u,8u,8u,8u,8u,8u)                                                    | Block64<byte> cells(N64 n, byte x0, byte x1, byte x2, byte x3, byte x4, byte x5, byte x6, byte x7)            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 10 ea 71 c7 f7 7f 00 00 ba 08 00 00 00 e8 22 89 e5 5e 40 88 70 10 40 88 78 11 8b b4 24 80 00 00 00 40 88 70 12 8b b4 24 88 00 00 00 40 88 70 13 8b b4 24 90 00 00 00 40 88 70 14 8b b4 24 98 00 00 00 40 88 70 15 8b b4 24 a0 00 00 00 40 88 70 16 8b b4 24 a8 00 00 00 40 88 70 17 48 83 c0 10 ba 08 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 5a 79 e5 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
779       | 7ff7c840e560h   | 135     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n64,16u,16u,16u,16u)                                                            | Block64<ushort> cells(N64 n, ushort x0, ushort x1, ushort x2, ushort x3)                                      | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 c0 7f 17 c8 f7 7f 00 00 ba 04 00 00 00 e8 52 88 e5 5e 66 89 70 10 66 89 78 12 8b b4 24 80 00 00 00 66 89 70 14 8b b4 24 88 00 00 00 66 89 70 16 48 83 c0 10 ba 04 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 b6 78 e5 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
780       | 7ff7c840e610h   | 111     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n64,32u,32u)                                                                    | Block64<uint> cells(N64 n, uint x0, uint x1)                                                                  | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 58 6f 17 c8 f7 7f 00 00 ba 02 00 00 00 e8 a2 87 e5 5e 89 70 10 89 78 14 48 83 c0 10 ba 02 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 1e 78 e5 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
781       | 7ff7c840e6a0h   | 106     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n64,64u)                                                                        | Block64<ulong> cells(N64 n, ulong x0)                                                                         | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 48 b9 e0 2f ba c7 f7 7f 00 00 ba 01 00 00 00 e8 15 87 e5 5e 48 89 70 10 48 83 c0 10 ba 01 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 93 77 e5 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
782       | 7ff7c840e730h   | 272     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n128,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u)                           | Block128<byte> cells(N128 n, byte x0, byte x1, byte x2, byte x3, byte x4, byte x5, byte x6, byte x7, byte x8, byte x9, byte xA, byte xB, byte xC, byte xD, byte xE, byte xF)| 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 89 44 24 38 48 8b d9 41 8b f0 41 8b f9 48 b9 10 ea 71 c7 f7 7f 00 00 ba 10 00 00 00 e8 7d 86 e5 5e 40 88 70 10 40 88 78 11 8b b4 24 80 00 00 00 40 88 70 12 8b b4 24 88 00 00 00 40 88 70 13 8b b4 24 90 00 00 00 40 88 70 14 8b b4 24 98 00 00 00 40 88 70 15 8b b4 24 a0 00 00 00 40 88 70 16 8b b4 24 a8 00 00 00 40 88 70 17 8b b4 24 b0 00 00 00 40 88 70 18 8b b4 24 b8 00 00 00 40 88 70 19 8b b4 24 c0 00 00 00 40 88 70 1a 8b b4 24 c8 00 00 00 40 88 70 1b 8b b4 24 d0 00 00 00 40 88 70 1c 8b b4 24 d8 00 00 00 40 88 70 1d 8b b4 24 e0 00 00 00 40 88 70 1e 8b b4 24 e8 00 00 00 40 88 70 1f 48 83 c0 10 ba 10 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 5d 76 e5 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
783       | 7ff7c840e860h   | 179     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n128,16u,16u,16u,16u,16u,16u,16u,16u)                                           | Block128<ushort> cells(N128 n, ushort x0, ushort x1, ushort x2, ushort x3, ushort x4, ushort x5, ushort x6, ushort x7)| 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 c0 7f 17 c8 f7 7f 00 00 ba 08 00 00 00 e8 52 85 e5 5e 66 89 70 10 66 89 78 12 8b b4 24 80 00 00 00 66 89 70 14 8b b4 24 88 00 00 00 66 89 70 16 8b b4 24 90 00 00 00 66 89 70 18 8b b4 24 98 00 00 00 66 89 70 1a 8b b4 24 a0 00 00 00 66 89 70 1c 8b b4 24 a8 00 00 00 66 89 70 1e 48 83 c0 10 ba 08 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 8a 75 e5 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
784       | 7ff7c840e930h   | 131     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n128,32u,32u,32u,32u)                                                           | Block128<uint> cells(N128 n, uint x0, uint x1, uint x2, uint x3)                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 58 6f 17 c8 f7 7f 00 00 ba 04 00 00 00 e8 82 84 e5 5e 89 70 10 89 78 14 8b b4 24 80 00 00 00 89 70 18 8b b4 24 88 00 00 00 89 70 1c 48 83 c0 10 ba 04 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ea 74 e5 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
785       | 7ff7c840e9d0h   | 113     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n128,64u,64u)                                                                   | Block128<ulong> cells(N128 n, ulong x0, ulong x1)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 49 8b f9 48 b9 e0 2f ba c7 f7 7f 00 00 ba 02 00 00 00 e8 e2 83 e5 5e 48 89 70 10 48 89 78 18 48 83 c0 10 ba 02 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 5c 74 e5 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
786       | 7ff7c840ea60h   | 448     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n256,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u)| Block256<byte> cells(N256 n, byte x0, byte x1, byte x2, byte x3, byte x4, byte x5, byte x6, byte x7, byte x8, byte x9, byte xA, byte xB, byte xC, byte xD, byte xE, byte xF, byte x10, byte x11, byte x12, byte x13, byte x14, byte x15, byte x16, byte x17, byte x18, byte x19, byte x1A, byte x1B, byte x1C, byte x1D, byte x1E, byte x1F)| 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 89 44 24 38 48 8b d9 41 8b f0 41 8b f9 48 b9 10 ea 71 c7 f7 7f 00 00 ba 20 00 00 00 e8 4d 83 e5 5e 40 88 70 10 40 88 78 11 8b b4 24 80 00 00 00 40 88 70 12 8b b4 24 88 00 00 00 40 88 70 13 8b b4 24 90 00 00 00 40 88 70 14 8b b4 24 98 00 00 00 40 88 70 15 8b b4 24 a0 00 00 00 40 88 70 16 8b b4 24 a8 00 00 00 40 88 70 17 8b b4 24 b0 00 00 00 40 88 70 18 8b b4 24 b8 00 00 00 40 88 70 19 8b b4 24 c0 00 00 00 40 88 70 1a 8b b4 24 c8 00 00 00 40 88 70 1b 8b b4 24 d0 00 00 00 40 88 70 1c 8b b4 24 d8 00 00 00 40 88 70 1d 8b b4 24 e0 00 00 00 40 88 70 1e 8b b4 24 e8 00 00 00 40 88 70 1f 8b b4 24 f0 00 00 00 40 88 70 20 8b b4 24 f8 00 00 00 40 88 70 21 8b b4 24 00 01 00 00 40 88 70 22 8b b4 24 08 01 00 00 40 88 70 23 8b b4 24 10 01 00 00 40 88 70 24 8b b4 24 18 01 00 00 40 88 70 25 8b b4 24 20 01 00 00 40 88 70 26 8b b4 24 28 01 00 00 40 88 70 27 8b b4 24 30 01 00 00 40 88 70 28 8b b4 24 38 01 00 00 40 88 70 29 8b b4 24 40 01 00 00 40 88 70 2a 8b b4 24 48 01 00 00 40 88 70 2b 8b b4 24 50 01 00 00 40 88 70 2c 8b b4 24 58 01 00 00 40 88 70 2d 8b b4 24 60 01 00 00 40 88 70 2e 8b b4 24 68 01 00 00 40 88 70 2f 48 83 c0 10 ba 20 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 7d 72 e5 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
787       | 7ff7c840ec40h   | 272     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n256,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u)           | Block256<ushort> cells(N256 n, ushort x0, ushort x1, ushort x2, ushort x3, ushort x4, ushort x5, ushort x6, ushort x7, ushort x8, ushort x9, ushort xA, ushort xB, ushort xC, ushort xD, ushort xE, ushort xF)| 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 89 44 24 38 48 8b d9 41 8b f0 41 8b f9 48 b9 c0 7f 17 c8 f7 7f 00 00 ba 10 00 00 00 e8 6d 81 e5 5e 66 89 70 10 66 89 78 12 8b b4 24 80 00 00 00 66 89 70 14 8b b4 24 88 00 00 00 66 89 70 16 8b b4 24 90 00 00 00 66 89 70 18 8b b4 24 98 00 00 00 66 89 70 1a 8b b4 24 a0 00 00 00 66 89 70 1c 8b b4 24 a8 00 00 00 66 89 70 1e 8b b4 24 b0 00 00 00 66 89 70 20 8b b4 24 b8 00 00 00 66 89 70 22 8b b4 24 c0 00 00 00 66 89 70 24 8b b4 24 c8 00 00 00 66 89 70 26 8b b4 24 d0 00 00 00 66 89 70 28 8b b4 24 d8 00 00 00 66 89 70 2a 8b b4 24 e0 00 00 00 66 89 70 2c 8b b4 24 e8 00 00 00 66 89 70 2e 48 83 c0 10 ba 10 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 4d 71 e5 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
788       | 7ff7c840ed70h   | 171     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n256,32u,32u,32u,32u,32u,32u,32u,32u)                                           | Block256<uint> cells(N256 n, uint x0, uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7)          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 58 6f 17 c8 f7 7f 00 00 ba 08 00 00 00 e8 42 80 e5 5e 89 70 10 89 78 14 8b b4 24 80 00 00 00 89 70 18 8b b4 24 88 00 00 00 89 70 1c 8b b4 24 90 00 00 00 89 70 20 8b b4 24 98 00 00 00 89 70 24 8b b4 24 a0 00 00 00 89 70 28 8b b4 24 a8 00 00 00 89 70 2c 48 83 c0 10 ba 08 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 82 70 e5 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
789       | 7ff7c840ee40h   | 137     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n256,64u,64u,64u,64u)                                                           | Block256<ulong> cells(N256 n, ulong x0, ulong x1, ulong x2, ulong x3)                                         | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 49 8b f9 48 b9 e0 2f ba c7 f7 7f 00 00 ba 04 00 00 00 e8 72 7f e5 5e 48 89 70 10 48 89 78 18 48 8b b4 24 80 00 00 00 48 89 70 20 48 8b b4 24 88 00 00 00 48 89 70 28 48 83 c0 10 ba 04 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 d4 6f e5 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
