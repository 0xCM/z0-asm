Sequence  | Address         | Length  | TermCode            | Uri                                                                                                           | OpSig                                                                                                         | Data
0         | 7ff7c826ffd0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n16,span8u)                                                      | Block16<byte> unsafeload<byte>(N16 w, Span<byte> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 84 5e ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
1         | 7ff7c8270040h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n16,span8i)                                                      | Block16<sbyte> unsafeload<sbyte>(N16 w, Span<sbyte> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 14 5e ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
2         | 7ff7c82700b0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n16,span16u)                                                    | Block16<ushort> unsafeload<ushort>(N16 w, Span<ushort> src)                                                   | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 a4 5d ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
3         | 7ff7c8270520h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n16,span16i)                                                    | Block16<short> unsafeload<short>(N16 w, Span<short> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 34 59 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
4         | 7ff7c8270590h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n32,span8u)                                                      | Block32<byte> unsafeload<byte>(N32 w, Span<byte> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 c4 58 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
5         | 7ff7c8270600h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n32,span8i)                                                      | Block32<sbyte> unsafeload<sbyte>(N32 w, Span<sbyte> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 54 58 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
6         | 7ff7c8270670h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n32,span16u)                                                    | Block32<ushort> unsafeload<ushort>(N32 w, Span<ushort> src)                                                   | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 e4 57 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
7         | 7ff7c82706e0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n32,span16i)                                                    | Block32<short> unsafeload<short>(N32 w, Span<short> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 74 57 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
8         | 7ff7c8270750h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32u](n32,span32u)                                                    | Block32<uint> unsafeload<uint>(N32 w, Span<uint> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 04 57 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
9         | 7ff7c8270bc0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32i](n32,span32i)                                                    | Block32<int> unsafeload<int>(N32 w, Span<int> src)                                                            | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 94 52 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
10        | 7ff7c8270c30h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32f](n32,span32f)                                                    | Block32<float> unsafeload<float>(N32 w, Span<float> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 24 52 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
11        | 7ff7c8270ca0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n64,span8u)                                                      | Block64<byte> unsafeload<byte>(N64 w, Span<byte> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 b4 51 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
12        | 7ff7c8270d10h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n64,span8i)                                                      | Block64<sbyte> unsafeload<sbyte>(N64 w, Span<sbyte> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 44 51 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
13        | 7ff7c8270d80h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n64,span16u)                                                    | Block64<ushort> unsafeload<ushort>(N64 w, Span<ushort> src)                                                   | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 d4 50 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
14        | 7ff7c82711f0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n64,span16i)                                                    | Block64<short> unsafeload<short>(N64 w, Span<short> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 64 4c ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
15        | 7ff7c8271260h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32u](n64,span32u)                                                    | Block64<uint> unsafeload<uint>(N64 w, Span<uint> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 f4 4b ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
16        | 7ff7c82712d0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32i](n64,span32i)                                                    | Block64<int> unsafeload<int>(N64 w, Span<int> src)                                                            | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 84 4b ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
17        | 7ff7c8271340h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64u](n64,span64u)                                                    | Block64<ulong> unsafeload<ulong>(N64 w, Span<ulong> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 14 4b ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
18        | 7ff7c82713b0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64i](n64,span64i)                                                    | Block64<long> unsafeload<long>(N64 w, Span<long> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 a4 4a ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
19        | 7ff7c8271420h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32f](n64,span32f)                                                    | Block64<float> unsafeload<float>(N64 w, Span<float> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 34 4a ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
20        | 7ff7c8271490h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64f](n64,span64f)                                                    | Block64<double> unsafeload<double>(N64 w, Span<double> src)                                                   | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 c4 49 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
21        | 7ff7c8271900h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n128,span8u)                                                     | Block128<byte> unsafeload<byte>(N128 w, Span<byte> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 54 45 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
22        | 7ff7c8271970h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n128,span8i)                                                     | Block128<sbyte> unsafeload<sbyte>(N128 w, Span<sbyte> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 e4 44 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
23        | 7ff7c82719e0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n128,span16u)                                                   | Block128<ushort> unsafeload<ushort>(N128 w, Span<ushort> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 74 44 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
24        | 7ff7c8271a50h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n128,span16i)                                                   | Block128<short> unsafeload<short>(N128 w, Span<short> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 04 44 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
25        | 7ff7c8271ac0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32u](n128,span32u)                                                   | Block128<uint> unsafeload<uint>(N128 w, Span<uint> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 94 43 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
26        | 7ff7c8271f30h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32i](n128,span32i)                                                   | Block128<int> unsafeload<int>(N128 w, Span<int> src)                                                          | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 24 3f ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
27        | 7ff7c8271fa0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64u](n128,span64u)                                                   | Block128<ulong> unsafeload<ulong>(N128 w, Span<ulong> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 b4 3e ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
28        | 7ff7c8272010h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64i](n128,span64i)                                                   | Block128<long> unsafeload<long>(N128 w, Span<long> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 44 3e ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
29        | 7ff7c8272080h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32f](n128,span32f)                                                   | Block128<float> unsafeload<float>(N128 w, Span<float> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 d4 3d ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
30        | 7ff7c82720f0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64f](n128,span64f)                                                   | Block128<double> unsafeload<double>(N128 w, Span<double> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 64 3d ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
31        | 7ff7c8272560h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n256,span8u)                                                     | Block256<byte> unsafeload<byte>(N256 w, Span<byte> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 f4 38 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
32        | 7ff7c82725d0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n256,span8i)                                                     | Block256<sbyte> unsafeload<sbyte>(N256 w, Span<sbyte> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 84 38 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
33        | 7ff7c8272640h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n256,span16u)                                                   | Block256<ushort> unsafeload<ushort>(N256 w, Span<ushort> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 14 38 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
34        | 7ff7c82726b0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n256,span16i)                                                   | Block256<short> unsafeload<short>(N256 w, Span<short> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 a4 37 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
35        | 7ff7c8272720h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32u](n256,span32u)                                                   | Block256<uint> unsafeload<uint>(N256 w, Span<uint> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 34 37 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
36        | 7ff7c8272790h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32i](n256,span32i)                                                   | Block256<int> unsafeload<int>(N256 w, Span<int> src)                                                          | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 c4 36 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
37        | 7ff7c8272800h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64u](n256,span64u)                                                   | Block256<ulong> unsafeload<ulong>(N256 w, Span<ulong> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 54 36 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
38        | 7ff7c8272870h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64i](n256,span64i)                                                   | Block256<long> unsafeload<long>(N256 w, Span<long> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 e4 35 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
39        | 7ff7c82728e0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32f](n256,span32f)                                                   | Block256<float> unsafeload<float>(N256 w, Span<float> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 74 35 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
40        | 7ff7c8272950h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64f](n256,span64f)                                                   | Block256<double> unsafeload<double>(N256 w, Span<double> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 04 35 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
41        | 7ff7c82729c0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n512,span8u)                                                     | Block512<byte> unsafeload<byte>(N512 w, Span<byte> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 94 34 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
42        | 7ff7c8272e60h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n512,span8i)                                                     | Block512<sbyte> unsafeload<sbyte>(N512 w, Span<sbyte> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 f4 2f ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
43        | 7ff7c8272ed0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n512,span16u)                                                   | Block512<ushort> unsafeload<ushort>(N512 w, Span<ushort> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 84 2f ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
44        | 7ff7c8272f40h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n512,span16i)                                                   | Block512<short> unsafeload<short>(N512 w, Span<short> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 14 2f ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
45        | 7ff7c8272fb0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32u](n512,span32u)                                                   | Block512<uint> unsafeload<uint>(N512 w, Span<uint> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 a4 2e ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
46        | 7ff7c8273020h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32i](n512,span32i)                                                   | Block512<int> unsafeload<int>(N512 w, Span<int> src)                                                          | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 34 2e ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
47        | 7ff7c8273490h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64u](n512,span64u)                                                   | Block512<ulong> unsafeload<ulong>(N512 w, Span<ulong> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 c4 29 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
48        | 7ff7c8273500h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64i](n512,span64i)                                                   | Block512<long> unsafeload<long>(N512 w, Span<long> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 54 29 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
49        | 7ff7c8273570h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32f](n512,span32f)                                                   | Block512<float> unsafeload<float>(N512 w, Span<float> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 e4 28 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
50        | 7ff7c82735e0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64f](n512,span64f)                                                   | Block512<double> unsafeload<double>(N512 w, Span<double> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 74 28 ff 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
51        | 7ff7c8273a50h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[8u](8u~in,b256x8u~in,32i,32i)                                                  | void write<byte>(in byte src, in Block256<byte> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 e4 25 ff 5e 90 c3
52        | 7ff7c8273a80h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[8i](8u~in,b256x8i~in,32i,32i)                                                  | void write<sbyte>(in byte src, in Block256<sbyte> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 b4 25 ff 5e 90 c3
53        | 7ff7c8273ab0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[16u](8u~in,b256x16u~in,32i,32i)                                                | void write<ushort>(in byte src, in Block256<ushort> dst, int offset, int count)                               | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 84 25 ff 5e 90 c3
54        | 7ff7c8273ae0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[16i](8u~in,b256x16i~in,32i,32i)                                                | void write<short>(in byte src, in Block256<short> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 54 25 ff 5e 90 c3
55        | 7ff7c8273b10h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32u](8u~in,b256x32u~in,32i,32i)                                                | void write<uint>(in byte src, in Block256<uint> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 24 25 ff 5e 90 c3
56        | 7ff7c8273b40h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32i](8u~in,b256x32i~in,32i,32i)                                                | void write<int>(in byte src, in Block256<int> dst, int offset, int count)                                     | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 f4 24 ff 5e 90 c3
57        | 7ff7c8273b70h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64u](8u~in,b256x64u~in,32i,32i)                                                | void write<ulong>(in byte src, in Block256<ulong> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 c4 24 ff 5e 90 c3
58        | 7ff7c8273ba0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64i](8u~in,b256x64i~in,32i,32i)                                                | void write<long>(in byte src, in Block256<long> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 94 24 ff 5e 90 c3
59        | 7ff7c8273bd0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32f](8u~in,b256x32f~in,32i,32i)                                                | void write<float>(in byte src, in Block256<float> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 64 24 ff 5e 90 c3
60        | 7ff7c8273c00h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64f](8u~in,b256x64f~in,32i,32i)                                                | void write<double>(in byte src, in Block256<double> dst, int offset, int count)                               | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 34 24 ff 5e 90 c3
61        | 7ff7c8273c30h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[8u](8u~in,b512x8u~in,32i,32i)                                                  | void write<byte>(in byte src, in Block512<byte> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 04 24 ff 5e 90 c3
62        | 7ff7c8273c60h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[8i](8u~in,b512x8i~in,32i,32i)                                                  | void write<sbyte>(in byte src, in Block512<sbyte> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 d4 23 ff 5e 90 c3
63        | 7ff7c8273c90h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[16u](8u~in,b512x16u~in,32i,32i)                                                | void write<ushort>(in byte src, in Block512<ushort> dst, int offset, int count)                               | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 a4 23 ff 5e 90 c3
64        | 7ff7c8273cc0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[16i](8u~in,b512x16i~in,32i,32i)                                                | void write<short>(in byte src, in Block512<short> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 74 23 ff 5e 90 c3
65        | 7ff7c8273cf0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32u](8u~in,b512x32u~in,32i,32i)                                                | void write<uint>(in byte src, in Block512<uint> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 44 23 ff 5e 90 c3
66        | 7ff7c8273d20h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32i](8u~in,b512x32i~in,32i,32i)                                                | void write<int>(in byte src, in Block512<int> dst, int offset, int count)                                     | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 14 23 ff 5e 90 c3
67        | 7ff7c8273d50h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64u](8u~in,b512x64u~in,32i,32i)                                                | void write<ulong>(in byte src, in Block512<ulong> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 e4 22 ff 5e 90 c3
68        | 7ff7c8273d80h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64i](8u~in,b512x64i~in,32i,32i)                                                | void write<long>(in byte src, in Block512<long> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 b4 22 ff 5e 90 c3
69        | 7ff7c8273db0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32f](8u~in,b512x32f~in,32i,32i)                                                | void write<float>(in byte src, in Block512<float> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 84 22 ff 5e 90 c3
70        | 7ff7c8273de0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64f](8u~in,b512x64f~in,32i,32i)                                                | void write<double>(in byte src, in Block512<double> dst, int offset, int count)                               | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 54 22 ff 5e 90 c3
71        | 7ff7c8274220h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b64x8u~in)                                                      | void broadcast<byte>(byte data, in Block64<byte> dst)                                                         | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 78 32 ac c7 f7 7f 00 00 48 ff e0
72        | 7ff7c8274250h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b64x8i~in)                                                      | void broadcast<sbyte>(sbyte data, in Block64<sbyte> dst)                                                      | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 20 9a 09 c8 f7 7f 00 00 48 ff e0
73        | 7ff7c8274280h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b64x16u~in)                                                   | void broadcast<ushort>(ushort data, in Block64<ushort> dst)                                                   | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 90 7f ac c7 f7 7f 00 00 48 ff e0
74        | 7ff7c82742b0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b64x16i~in)                                                   | void broadcast<short>(short data, in Block64<short> dst)                                                      | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 70 a2 09 c8 f7 7f 00 00 48 ff e0
75        | 7ff7c82742e0h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32u](32u,b64x32u~in)                                                   | void broadcast<uint>(uint data, in Block64<uint> dst)                                                         | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 a0 81 ac c7 f7 7f 00 00 48 ff e0
76        | 7ff7c8274310h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32i](32i,b64x32i~in)                                                   | void broadcast<int>(int data, in Block64<int> dst)                                                            | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 30 15 ab c7 f7 7f 00 00 48 ff e0
77        | 7ff7c8274340h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64u](64u,b64x64u~in)                                                   | void broadcast<ulong>(ulong data, in Block64<ulong> dst)                                                      | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 a0 84 ac c7 f7 7f 00 00 48 ff e0
78        | 7ff7c8274370h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64i](64i,b64x64i~in)                                                   | void broadcast<long>(long data, in Block64<long> dst)                                                         | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 b8 af 09 c8 f7 7f 00 00 48 ff e0
79        | 7ff7c82743a0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32f](32f,b64x32f~in)                                                   | void broadcast<float>(float data, in Block64<float> dst)                                                      | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 70 b2 09 c8 f7 7f 00 00 48 ff e0
80        | 7ff7c82743d0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64f](64f,b64x64f~in)                                                   | void broadcast<double>(double data, in Block64<double> dst)                                                   | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 88 b6 09 c8 f7 7f 00 00 48 ff e0
81        | 7ff7c8274400h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b128x8u~in)                                                     | void broadcast<byte>(byte data, in Block128<byte> dst)                                                        | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 78 32 ac c7 f7 7f 00 00 48 ff e0
82        | 7ff7c8274430h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b128x8i~in)                                                     | void broadcast<sbyte>(sbyte data, in Block128<sbyte> dst)                                                     | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 20 9a 09 c8 f7 7f 00 00 48 ff e0
83        | 7ff7c8274460h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b128x16u~in)                                                  | void broadcast<ushort>(ushort data, in Block128<ushort> dst)                                                  | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 90 7f ac c7 f7 7f 00 00 48 ff e0
84        | 7ff7c8274490h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b128x16i~in)                                                  | void broadcast<short>(short data, in Block128<short> dst)                                                     | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 70 a2 09 c8 f7 7f 00 00 48 ff e0
85        | 7ff7c82744c0h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32u](32u,b128x32u~in)                                                  | void broadcast<uint>(uint data, in Block128<uint> dst)                                                        | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 a0 81 ac c7 f7 7f 00 00 48 ff e0
86        | 7ff7c82748f0h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32i](32i,b128x32i~in)                                                  | void broadcast<int>(int data, in Block128<int> dst)                                                           | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 30 15 ab c7 f7 7f 00 00 48 ff e0
87        | 7ff7c8274920h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64u](64u,b128x64u~in)                                                  | void broadcast<ulong>(ulong data, in Block128<ulong> dst)                                                     | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 a0 84 ac c7 f7 7f 00 00 48 ff e0
88        | 7ff7c8274950h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64i](64i,b128x64i~in)                                                  | void broadcast<long>(long data, in Block128<long> dst)                                                        | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 b8 af 09 c8 f7 7f 00 00 48 ff e0
89        | 7ff7c8274980h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32f](32f,b128x32f~in)                                                  | void broadcast<float>(float data, in Block128<float> dst)                                                     | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 70 b2 09 c8 f7 7f 00 00 48 ff e0
90        | 7ff7c82749b0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64f](64f,b128x64f~in)                                                  | void broadcast<double>(double data, in Block128<double> dst)                                                  | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 88 b6 09 c8 f7 7f 00 00 48 ff e0
91        | 7ff7c82749e0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b256x8u~in)                                                     | void broadcast<byte>(byte data, in Block256<byte> dst)                                                        | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 78 32 ac c7 f7 7f 00 00 48 ff e0
92        | 7ff7c8274a10h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b256x8i~in)                                                     | void broadcast<sbyte>(sbyte data, in Block256<sbyte> dst)                                                     | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 20 9a 09 c8 f7 7f 00 00 48 ff e0
93        | 7ff7c8274a40h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b256x16u~in)                                                  | void broadcast<ushort>(ushort data, in Block256<ushort> dst)                                                  | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 90 7f ac c7 f7 7f 00 00 48 ff e0
94        | 7ff7c8274a70h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b256x16i~in)                                                  | void broadcast<short>(short data, in Block256<short> dst)                                                     | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 70 a2 09 c8 f7 7f 00 00 48 ff e0
95        | 7ff7c8274aa0h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32u](32u,b256x32u~in)                                                  | void broadcast<uint>(uint data, in Block256<uint> dst)                                                        | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 a0 81 ac c7 f7 7f 00 00 48 ff e0
96        | 7ff7c8274ad0h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32i](32i,b256x32i~in)                                                  | void broadcast<int>(int data, in Block256<int> dst)                                                           | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 30 15 ab c7 f7 7f 00 00 48 ff e0
97        | 7ff7c8274b00h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64u](64u,b256x64u~in)                                                  | void broadcast<ulong>(ulong data, in Block256<ulong> dst)                                                     | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 a0 84 ac c7 f7 7f 00 00 48 ff e0
98        | 7ff7c8274b30h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64i](64i,b256x64i~in)                                                  | void broadcast<long>(long data, in Block256<long> dst)                                                        | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 b8 af 09 c8 f7 7f 00 00 48 ff e0
99        | 7ff7c8274b60h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32f](32f,b256x32f~in)                                                  | void broadcast<float>(float data, in Block256<float> dst)                                                     | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 70 b2 09 c8 f7 7f 00 00 48 ff e0
100       | 7ff7c8274b90h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64f](64f,b256x64f~in)                                                  | void broadcast<double>(double data, in Block256<double> dst)                                                  | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 88 b6 09 c8 f7 7f 00 00 48 ff e0
101       | 7ff7c8274fd0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b512x8u~in)                                                     | void broadcast<byte>(byte data, in Block512<byte> dst)                                                        | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 78 32 ac c7 f7 7f 00 00 48 ff e0
102       | 7ff7c8275000h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b512x8i~in)                                                     | void broadcast<sbyte>(sbyte data, in Block512<sbyte> dst)                                                     | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 20 9a 09 c8 f7 7f 00 00 48 ff e0
103       | 7ff7c8275030h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b512x16u~in)                                                  | void broadcast<ushort>(ushort data, in Block512<ushort> dst)                                                  | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 90 7f ac c7 f7 7f 00 00 48 ff e0
104       | 7ff7c8275060h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b512x16i~in)                                                  | void broadcast<short>(short data, in Block512<short> dst)                                                     | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 70 a2 09 c8 f7 7f 00 00 48 ff e0
105       | 7ff7c8275090h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32u](32u,b512x32u~in)                                                  | void broadcast<uint>(uint data, in Block512<uint> dst)                                                        | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 a0 81 ac c7 f7 7f 00 00 48 ff e0
106       | 7ff7c82750c0h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32i](32i,b512x32i~in)                                                  | void broadcast<int>(int data, in Block512<int> dst)                                                           | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 30 15 ab c7 f7 7f 00 00 48 ff e0
107       | 7ff7c82750f0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64u](64u,b512x64u~in)                                                  | void broadcast<ulong>(ulong data, in Block512<ulong> dst)                                                     | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 a0 84 ac c7 f7 7f 00 00 48 ff e0
108       | 7ff7c8275120h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64i](64i,b512x64i~in)                                                  | void broadcast<long>(long data, in Block512<long> dst)                                                        | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 b8 af 09 c8 f7 7f 00 00 48 ff e0
109       | 7ff7c8275150h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32f](32f,b512x32f~in)                                                  | void broadcast<float>(float data, in Block512<float> dst)                                                     | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 70 b2 09 c8 f7 7f 00 00 48 ff e0
110       | 7ff7c8275180h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64f](64f,b512x64f~in)                                                  | void broadcast<double>(double data, in Block512<double> dst)                                                  | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 88 b6 09 c8 f7 7f 00 00 48 ff e0
111       | 7ff7c82751b0h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[8u](n16,32i)                                                           | Block16<byte> cellalloc<byte>(N16 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 8d fc ff ff 48 8b c6 48 83 c4 20 5e c3
112       | 7ff7c8275210h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[8i](n16,32i)                                                           | Block16<sbyte> cellalloc<sbyte>(N16 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 9d fc ff ff 48 8b c6 48 83 c4 20 5e c3
113       | 7ff7c8275270h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[16u](n16,32i)                                                          | Block16<ushort> cellalloc<ushort>(N16 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 87 fc ff ff 48 8b c6 48 83 c4 20 5e c3
114       | 7ff7c82752d0h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[16i](n16,32i)                                                          | Block16<short> cellalloc<short>(N16 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 67 fc ff ff 48 8b c6 48 83 c4 20 5e c3
115       | 7ff7c8275730h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8u](n32,32i)                                                           | Block32<byte> cellalloc<byte>(N32 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 56 fd ff ff 48 8b c6 48 83 c4 20 5e c3
116       | 7ff7c82757a0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8i](n32,32i)                                                           | Block32<sbyte> cellalloc<sbyte>(N32 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 56 fd ff ff 48 8b c6 48 83 c4 20 5e c3
117       | 7ff7c8275810h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[16u](n32,32i)                                                          | Block32<ushort> cellalloc<ushort>(N32 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 2d fd ff ff 48 8b c6 48 83 c4 20 5e c3
118       | 7ff7c8275870h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[16i](n32,32i)                                                          | Block32<short> cellalloc<short>(N32 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 0d fd ff ff 48 8b c6 48 83 c4 20 5e c3
119       | 7ff7c82758d0h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[32u](n32,32i)                                                          | Block32<uint> cellalloc<uint>(N32 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 f7 fc ff ff 48 8b c6 48 83 c4 20 5e c3
120       | 7ff7c8275930h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[32i](n32,32i)                                                          | Block32<int> cellalloc<int>(N32 n, int cellcount)                                                             | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 d7 fc ff ff 48 8b c6 48 83 c4 20 5e c3
121       | 7ff7c8275990h   | 70      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[32f](n32,32i)                                                          | Block32<float> cellalloc<float>(N32 n, int cellcount)                                                         | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 b3 fc ff ff 48 8b c6 48 83 c4 20 5e c3
122       | 7ff7c8275e00h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8u](n64,32i)                                                           | Block64<byte> cellalloc<byte>(N64 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 9e f8 ff ff 48 8b c6 48 83 c4 20 5e c3
123       | 7ff7c8275e70h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8i](n64,32i)                                                           | Block64<sbyte> cellalloc<sbyte>(N64 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 ee fc ff ff 48 8b c6 48 83 c4 20 5e c3
124       | 7ff7c8275ee0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16u](n64,32i)                                                          | Block64<ushort> cellalloc<ushort>(N64 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 be fc ff ff 48 8b c6 48 83 c4 20 5e c3
125       | 7ff7c8275f50h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16i](n64,32i)                                                          | Block64<short> cellalloc<short>(N64 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 8e fc ff ff 48 8b c6 48 83 c4 20 5e c3
126       | 7ff7c8275fc0h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[32u](n64,32i)                                                          | Block64<uint> cellalloc<uint>(N64 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 65 fc ff ff 48 8b c6 48 83 c4 20 5e c3
127       | 7ff7c8276020h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[32i](n64,32i)                                                          | Block64<int> cellalloc<int>(N64 n, int cellcount)                                                             | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 45 fc ff ff 48 8b c6 48 83 c4 20 5e c3
128       | 7ff7c8276080h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[64u](n64,32i)                                                          | Block64<ulong> cellalloc<ulong>(N64 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 2f fc ff ff 48 8b c6 48 83 c4 20 5e c3
129       | 7ff7c82760e0h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[64i](n64,32i)                                                          | Block64<long> cellalloc<long>(N64 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 0f fc ff ff 48 8b c6 48 83 c4 20 5e c3
130       | 7ff7c8276140h   | 80      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[32f](n64,32i)                                                          | Block64<float> cellalloc<float>(N64 n, int cellcount)                                                         | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 e1 fb ff ff 48 8b c6 48 83 c4 20 5e c3
131       | 7ff7c82761b0h   | 70      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[64f](n64,32i)                                                          | Block64<double> cellalloc<double>(N64 n, int cellcount)                                                       | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 bb fb ff ff 48 8b c6 48 83 c4 20 5e c3
132       | 7ff7c8276620h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8u](n128,32i)                                                          | Block128<byte> cellalloc<byte>(N128 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 4e fd ff ff 48 8b c6 48 83 c4 20 5e c3
133       | 7ff7c8276690h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8i](n128,32i)                                                          | Block128<sbyte> cellalloc<sbyte>(N128 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 4e fd ff ff 48 8b c6 48 83 c4 20 5e c3
134       | 7ff7c8276700h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16u](n128,32i)                                                         | Block128<ushort> cellalloc<ushort>(N128 n, int cellcount)                                                     | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 1e fd ff ff 48 8b c6 48 83 c4 20 5e c3
135       | 7ff7c8276770h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16i](n128,32i)                                                         | Block128<short> cellalloc<short>(N128 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 ee fc ff ff 48 8b c6 48 83 c4 20 5e c3
136       | 7ff7c82767e0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32u](n128,32i)                                                         | Block128<uint> cellalloc<uint>(N128 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 be fc ff ff 48 8b c6 48 83 c4 20 5e c3
137       | 7ff7c8276850h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32i](n128,32i)                                                         | Block128<int> cellalloc<int>(N128 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 8e fc ff ff 48 8b c6 48 83 c4 20 5e c3
138       | 7ff7c82768c0h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[64u](n128,32i)                                                         | Block128<ulong> cellalloc<ulong>(N128 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 65 fc ff ff 48 8b c6 48 83 c4 20 5e c3
139       | 7ff7c8276920h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[64i](n128,32i)                                                         | Block128<long> cellalloc<long>(N128 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 45 fc ff ff 48 8b c6 48 83 c4 20 5e c3
140       | 7ff7c8276980h   | 87      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[32f](n128,32i)                                                         | Block128<float> cellalloc<float>(N128 n, int cellcount)                                                       | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 1a fc ff ff 48 8b c6 48 83 c4 20 5e c3
141       | 7ff7c8276e00h   | 80      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[64f](n128,32i)                                                         | Block128<double> cellalloc<double>(N128 n, int cellcount)                                                     | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 c9 fb ff ff 48 8b c6 48 83 c4 20 5e c3
142       | 7ff7c8276e70h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8u](n256,32i)                                                          | Block256<byte> cellalloc<byte>(N256 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 1f 41 03 c8 c1 f9 05 41 8b d0 c1 fa 1f 83 e2 1f 41 03 d0 83 e2 e0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 4e fd ff ff 48 8b c6 48 83 c4 20 5e c3
143       | 7ff7c8276ee0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8i](n256,32i)                                                          | Block256<sbyte> cellalloc<sbyte>(N256 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 1f 41 03 c8 c1 f9 05 41 8b d0 c1 fa 1f 83 e2 1f 41 03 d0 83 e2 e0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 2e fd ff ff 48 8b c6 48 83 c4 20 5e c3
144       | 7ff7c8276f50h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16u](n256,32i)                                                         | Block256<ushort> cellalloc<ushort>(N256 n, int cellcount)                                                     | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 fe fc ff ff 48 8b c6 48 83 c4 20 5e c3
145       | 7ff7c8276fc0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16i](n256,32i)                                                         | Block256<short> cellalloc<short>(N256 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 be fc ff ff 48 8b c6 48 83 c4 20 5e c3
146       | 7ff7c8277030h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32u](n256,32i)                                                         | Block256<uint> cellalloc<uint>(N256 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 8e fc ff ff 48 8b c6 48 83 c4 20 5e c3
147       | 7ff7c82770a0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32i](n256,32i)                                                         | Block256<int> cellalloc<int>(N256 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 4e fc ff ff 48 8b c6 48 83 c4 20 5e c3
148       | 7ff7c8277110h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[64u](n256,32i)                                                         | Block256<ulong> cellalloc<ulong>(N256 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 1e fc ff ff 48 8b c6 48 83 c4 20 5e c3
149       | 7ff7c8277180h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[64i](n256,32i)                                                         | Block256<long> cellalloc<long>(N256 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 de fb ff ff 48 8b c6 48 83 c4 20 5e c3
150       | 7ff7c82775f0h   | 87      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[32f](n256,32i)                                                         | Block256<float> cellalloc<float>(N256 n, int cellcount)                                                       | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 aa fb ff ff 48 8b c6 48 83 c4 20 5e c3
151       | 7ff7c8277660h   | 87      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[64f](n256,32i)                                                         | Block256<double> cellalloc<double>(N256 n, int cellcount)                                                     | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 7a fb ff ff 48 8b c6 48 83 c4 20 5e c3
152       | 7ff7c82776d0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8u](n512,32i)                                                          | Block512<byte> cellalloc<byte>(N512 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 3f 41 03 c8 c1 f9 06 41 8b d0 c1 fa 1f 83 e2 3f 41 03 d0 83 e2 c0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 0e fd ff ff 48 8b c6 48 83 c4 20 5e c3
153       | 7ff7c8277740h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8i](n512,32i)                                                          | Block512<sbyte> cellalloc<sbyte>(N512 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 3f 41 03 c8 c1 f9 06 41 8b d0 c1 fa 1f 83 e2 3f 41 03 d0 83 e2 c0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 0e fd ff ff 48 8b c6 48 83 c4 20 5e c3
154       | 7ff7c82777b0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16u](n512,32i)                                                         | Block512<ushort> cellalloc<ushort>(N512 n, int cellcount)                                                     | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 1f 41 03 c8 c1 f9 05 41 8b d0 c1 fa 1f 83 e2 1f 41 03 d0 83 e2 e0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 de fc ff ff 48 8b c6 48 83 c4 20 5e c3
155       | 7ff7c8277820h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16i](n512,32i)                                                         | Block512<short> cellalloc<short>(N512 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 1f 41 03 c8 c1 f9 05 41 8b d0 c1 fa 1f 83 e2 1f 41 03 d0 83 e2 e0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 ae fc ff ff 48 8b c6 48 83 c4 20 5e c3
156       | 7ff7c8277890h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32u](n512,32i)                                                         | Block512<uint> cellalloc<uint>(N512 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 7e fc ff ff 48 8b c6 48 83 c4 20 5e c3
157       | 7ff7c8277900h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32i](n512,32i)                                                         | Block512<int> cellalloc<int>(N512 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 4e fc ff ff 48 8b c6 48 83 c4 20 5e c3
158       | 7ff7c8277d70h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[64u](n512,32i)                                                         | Block512<ulong> cellalloc<ulong>(N512 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 1e f8 ff ff 48 8b c6 48 83 c4 20 5e c3
159       | 7ff7c8277de0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[64i](n512,32i)                                                         | Block512<long> cellalloc<long>(N512 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 6e fb ff ff 48 8b c6 48 83 c4 20 5e c3
160       | 7ff7c8277e50h   | 87      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[32f](n512,32i)                                                         | Block512<float> cellalloc<float>(N512 n, int cellcount)                                                       | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 3a fb ff ff 48 8b c6 48 83 c4 20 5e c3
161       | 7ff7c8277ec0h   | 87      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[64f](n512,32i)                                                         | Block512<double> cellalloc<double>(N512 n, int cellcount)                                                     | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 0a fb ff ff 48 8b c6 48 83 c4 20 5e c3
162       | 7ff7c8277f30h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[8u]()                                                                    | int cellsize<byte>()                                                                                          | 0f 1f 44 00 00 b8 01 00 00 00 c3
163       | 7ff7c8278360h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[8i]()                                                                    | int cellsize<sbyte>()                                                                                         | 0f 1f 44 00 00 b8 01 00 00 00 c3
164       | 7ff7c8278380h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[16u]()                                                                   | int cellsize<ushort>()                                                                                        | 0f 1f 44 00 00 b8 02 00 00 00 c3
165       | 7ff7c82783a0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[16i]()                                                                   | int cellsize<short>()                                                                                         | 0f 1f 44 00 00 b8 02 00 00 00 c3
166       | 7ff7c82783c0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[32u]()                                                                   | int cellsize<uint>()                                                                                          | 0f 1f 44 00 00 b8 04 00 00 00 c3
167       | 7ff7c82783e0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[32i]()                                                                   | int cellsize<int>()                                                                                           | 0f 1f 44 00 00 b8 04 00 00 00 c3
168       | 7ff7c8278400h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[64u]()                                                                   | int cellsize<ulong>()                                                                                         | 0f 1f 44 00 00 b8 08 00 00 00 c3
169       | 7ff7c8278420h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[64i]()                                                                   | int cellsize<long>()                                                                                          | 0f 1f 44 00 00 b8 08 00 00 00 c3
170       | 7ff7c8278440h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[32f]()                                                                   | int cellsize<float>()                                                                                         | 0f 1f 44 00 00 b8 04 00 00 00 c3
171       | 7ff7c8278460h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[64f]()                                                                   | int cellsize<double>()                                                                                        | 0f 1f 44 00 00 b8 08 00 00 00 c3
172       | 7ff7c8278480h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[8u]()                                                                  | int cellwidth<byte>()                                                                                         | 0f 1f 44 00 00 b8 08 00 00 00 c3
173       | 7ff7c82784a0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[8i]()                                                                  | int cellwidth<sbyte>()                                                                                        | 0f 1f 44 00 00 b8 08 00 00 00 c3
174       | 7ff7c82784c0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[16u]()                                                                 | int cellwidth<ushort>()                                                                                       | 0f 1f 44 00 00 b8 10 00 00 00 c3
175       | 7ff7c82784e0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[16i]()                                                                 | int cellwidth<short>()                                                                                        | 0f 1f 44 00 00 b8 10 00 00 00 c3
176       | 7ff7c8278500h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[32u]()                                                                 | int cellwidth<uint>()                                                                                         | 0f 1f 44 00 00 b8 20 00 00 00 c3
177       | 7ff7c8278520h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[32i]()                                                                 | int cellwidth<int>()                                                                                          | 0f 1f 44 00 00 b8 20 00 00 00 c3
178       | 7ff7c8278540h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[64u]()                                                                 | int cellwidth<ulong>()                                                                                        | 0f 1f 44 00 00 b8 40 00 00 00 c3
179       | 7ff7c8278560h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[64i]()                                                                 | int cellwidth<long>()                                                                                         | 0f 1f 44 00 00 b8 40 00 00 00 c3
180       | 7ff7c8278580h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[32f]()                                                                 | int cellwidth<float>()                                                                                        | 0f 1f 44 00 00 b8 20 00 00 00 c3
181       | 7ff7c82785a0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[64f]()                                                                 | int cellwidth<double>()                                                                                       | 0f 1f 44 00 00 b8 40 00 00 00 c3
182       | 7ff7c82789d0h   | 218     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n16,span8u,32i)                                                              | Block16<byte> load<byte>(N16 w, Span<byte> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 4b d4 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 1b 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 c4 bb 4d ff cc e8 8e bf 4d ff
183       | 7ff7c8278ad0h   | 218     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n16,span8i,32i)                                                              | Block16<sbyte> load<sbyte>(N16 w, Span<sbyte> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 4b d3 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 1b 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 c4 ba 4d ff cc e8 8e be 4d ff
184       | 7ff7c8278bd0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n16,span16u,32i)                                                            | Block16<ushort> load<ushort>(N16 w, Span<ushort> src, int offset)                                             | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 4a d2 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 1b 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 c3 b9 4d ff cc e8 8d bd 4d ff
185       | 7ff7c8278cd0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n16,span16i,32i)                                                            | Block16<short> load<short>(N16 w, Span<short> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 4a d1 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 1b 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 c3 b8 4d ff cc e8 8d bc 4d ff
186       | 7ff7c8278dd0h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n32,span8u,32i)                                                              | Block32<byte> load<byte>(N32 w, Span<byte> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 48 d0 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 c1 b7 4d ff cc e8 8b bb 4d ff
187       | 7ff7c8278ed0h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n32,span8i,32i)                                                              | Block32<sbyte> load<sbyte>(N32 w, Span<sbyte> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 48 cf fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 c1 b6 4d ff cc e8 8b ba 4d ff
188       | 7ff7c8278fd0h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n32,span16u,32i)                                                            | Block32<ushort> load<ushort>(N32 w, Span<ushort> src, int offset)                                             | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 4d ce fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 c6 b5 4d ff cc e8 90 b9 4d ff
189       | 7ff7c82790d0h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n32,span16i,32i)                                                            | Block32<short> load<short>(N32 w, Span<short> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 4d cd fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 c6 b4 4d ff cc e8 90 b8 4d ff
190       | 7ff7c82795d0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32u](n32,span32u,32i)                                                            | Block32<uint> load<uint>(N32 w, Span<uint> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 4a c8 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 c3 af 4d ff cc e8 8d b3 4d ff
191       | 7ff7c82796d0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32i](n32,span32i,32i)                                                            | Block32<int> load<int>(N32 w, Span<int> src, int offset)                                                      | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 4a c7 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 c3 ae 4d ff cc e8 8d b2 4d ff
192       | 7ff7c82797d0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32f](n32,span32f,32i)                                                            | Block32<float> load<float>(N32 w, Span<float> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 4a c6 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 c3 ad 4d ff cc e8 8d b1 4d ff
193       | 7ff7c82798d0h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n64,span8u,32i)                                                              | Block64<byte> load<byte>(N64 w, Span<byte> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 48 c5 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 c1 ac 4d ff cc e8 8b b0 4d ff
194       | 7ff7c82799d0h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n64,span8i,32i)                                                              | Block64<sbyte> load<sbyte>(N64 w, Span<sbyte> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 48 c4 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 c1 ab 4d ff cc e8 8b af 4d ff
195       | 7ff7c8279ad0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n64,span16u,32i)                                                            | Block64<ushort> load<ushort>(N64 w, Span<ushort> src, int offset)                                             | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 4a c3 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 c3 aa 4d ff cc e8 8d ae 4d ff
196       | 7ff7c8279bd0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n64,span16i,32i)                                                            | Block64<short> load<short>(N64 w, Span<short> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 4a c2 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 c3 a9 4d ff cc e8 8d ad 4d ff
197       | 7ff7c8279cd0h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[32u](n64,span32u,32i)                                                            | Block64<uint> load<uint>(N64 w, Span<uint> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 4d c1 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 c6 a8 4d ff cc e8 90 ac 4d ff
198       | 7ff7c8279dd0h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[32i](n64,span32i,32i)                                                            | Block64<int> load<int>(N64 w, Span<int> src, int offset)                                                      | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 4d c0 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 c6 a7 4d ff cc e8 90 ab 4d ff
199       | 7ff7c8279ed0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64u](n64,span64u,32i)                                                            | Block64<ulong> load<ulong>(N64 w, Span<ulong> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 4a bf fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 c3 a6 4d ff cc e8 8d aa 4d ff
200       | 7ff7c8279fd0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64i](n64,span64i,32i)                                                            | Block64<long> load<long>(N64 w, Span<long> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 4a be fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 c3 a5 4d ff cc e8 8d a9 4d ff
201       | 7ff7c827a0d0h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[32f](n64,span32f,32i)                                                            | Block64<float> load<float>(N64 w, Span<float> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 4d bd fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 c6 a4 4d ff cc e8 90 a8 4d ff
202       | 7ff7c827a1d0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64f](n64,span64f,32i)                                                            | Block64<double> load<double>(N64 w, Span<double> src, int offset)                                             | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 4a bc fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 c3 a3 4d ff cc e8 8d a7 4d ff
203       | 7ff7c827a6e0h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n128,span8u,32i)                                                             | Block128<byte> load<byte>(N128 w, Span<byte> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 38 b7 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 b1 9e 4d ff cc e8 7b a2 4d ff
204       | 7ff7c827a7e0h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n128,span8i,32i)                                                             | Block128<sbyte> load<sbyte>(N128 w, Span<sbyte> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 38 b6 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 b1 9d 4d ff cc e8 7b a1 4d ff
205       | 7ff7c827a8e0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n128,span16u,32i)                                                           | Block128<ushort> load<ushort>(N128 w, Span<ushort> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 3a b5 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 b3 9c 4d ff cc e8 7d a0 4d ff
206       | 7ff7c827a9e0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n128,span16i,32i)                                                           | Block128<short> load<short>(N128 w, Span<short> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 3a b4 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 b3 9b 4d ff cc e8 7d 9f 4d ff
207       | 7ff7c827aae0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32u](n128,span32u,32i)                                                           | Block128<uint> load<uint>(N128 w, Span<uint> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 3a b3 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 b3 9a 4d ff cc e8 7d 9e 4d ff
208       | 7ff7c827abe0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32i](n128,span32i,32i)                                                           | Block128<int> load<int>(N128 w, Span<int> src, int offset)                                                    | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 3a b2 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 b3 99 4d ff cc e8 7d 9d 4d ff
209       | 7ff7c827ace0h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[64u](n128,span64u,32i)                                                           | Block128<ulong> load<ulong>(N128 w, Span<ulong> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 3d b1 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 b6 98 4d ff cc e8 80 9c 4d ff
210       | 7ff7c827ade0h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[64i](n128,span64i,32i)                                                           | Block128<long> load<long>(N128 w, Span<long> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 3d b0 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 b6 97 4d ff cc e8 80 9b 4d ff
211       | 7ff7c827aee0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32f](n128,span32f,32i)                                                           | Block128<float> load<float>(N128 w, Span<float> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 3a af fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 b3 96 4d ff cc e8 7d 9a 4d ff
212       | 7ff7c827afe0h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[64f](n128,span64f,32i)                                                           | Block128<double> load<double>(N128 w, Span<double> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 3d ae fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 b6 95 4d ff cc e8 80 99 4d ff
213       | 7ff7c827b4e0h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n256,span8u,32i)                                                             | Block256<byte> load<byte>(N256 w, Span<byte> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 38 a9 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 b1 90 4d ff cc e8 7b 94 4d ff
214       | 7ff7c827b5e0h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n256,span8i,32i)                                                             | Block256<sbyte> load<sbyte>(N256 w, Span<sbyte> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 38 a8 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 b1 8f 4d ff cc e8 7b 93 4d ff
215       | 7ff7c827b6e0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n256,span16u,32i)                                                           | Block256<ushort> load<ushort>(N256 w, Span<ushort> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 3a a7 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 b3 8e 4d ff cc e8 7d 92 4d ff
216       | 7ff7c827b7e0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n256,span16i,32i)                                                           | Block256<short> load<short>(N256 w, Span<short> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 3a a6 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 b3 8d 4d ff cc e8 7d 91 4d ff
217       | 7ff7c827b8e0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32u](n256,span32u,32i)                                                           | Block256<uint> load<uint>(N256 w, Span<uint> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 3a a5 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 b3 8c 4d ff cc e8 7d 90 4d ff
218       | 7ff7c827b9e0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32i](n256,span32i,32i)                                                           | Block256<int> load<int>(N256 w, Span<int> src, int offset)                                                    | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 3a a4 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 b3 8b 4d ff cc e8 7d 8f 4d ff
219       | 7ff7c827bae0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64u](n256,span64u,32i)                                                           | Block256<ulong> load<ulong>(N256 w, Span<ulong> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 3a a3 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 b3 8a 4d ff cc e8 7d 8e 4d ff
220       | 7ff7c827bbe0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64i](n256,span64i,32i)                                                           | Block256<long> load<long>(N256 w, Span<long> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 3a a2 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 b3 89 4d ff cc e8 7d 8d 4d ff
221       | 7ff7c827bce0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32f](n256,span32f,32i)                                                           | Block256<float> load<float>(N256 w, Span<float> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 3a a1 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 b3 88 4d ff cc e8 7d 8c 4d ff
222       | 7ff7c827bde0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64f](n256,span64f,32i)                                                           | Block256<double> load<double>(N256 w, Span<double> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 3a a0 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 b3 87 4d ff cc e8 7d 8b 4d ff
223       | 7ff7c827bee0h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n512,span8u,32i)                                                             | Block512<byte> load<byte>(N512 w, Span<byte> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 3f 03 ca 83 e1 c0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 38 9f fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 b1 86 4d ff cc e8 7b 8a 4d ff
224       | 7ff7c827c3f0h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n512,span8i,32i)                                                             | Block512<sbyte> load<sbyte>(N512 w, Span<sbyte> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 3f 03 ca 83 e1 c0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 28 9a fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 a1 81 4d ff cc e8 6b 85 4d ff
225       | 7ff7c827c4f0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n512,span16u,32i)                                                           | Block512<ushort> load<ushort>(N512 w, Span<ushort> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 2a 99 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 a3 80 4d ff cc e8 6d 84 4d ff
226       | 7ff7c827c5f0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n512,span16i,32i)                                                           | Block512<short> load<short>(N512 w, Span<short> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 2a 98 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 a3 7f 4d ff cc e8 6d 83 4d ff
227       | 7ff7c827c6f0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32u](n512,span32u,32i)                                                           | Block512<uint> load<uint>(N512 w, Span<uint> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 2a 97 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 a3 7e 4d ff cc e8 6d 82 4d ff
228       | 7ff7c827c7f0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32i](n512,span32i,32i)                                                           | Block512<int> load<int>(N512 w, Span<int> src, int offset)                                                    | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 2a 96 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 a3 7d 4d ff cc e8 6d 81 4d ff
229       | 7ff7c827c8f0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64u](n512,span64u,32i)                                                           | Block512<ulong> load<ulong>(N512 w, Span<ulong> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 2a 95 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 a3 7c 4d ff cc e8 6d 80 4d ff
230       | 7ff7c827c9f0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64i](n512,span64i,32i)                                                           | Block512<long> load<long>(N512 w, Span<long> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 2a 94 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 a3 7b 4d ff cc e8 6d 7f 4d ff
231       | 7ff7c827caf0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32f](n512,span32f,32i)                                                           | Block512<float> load<float>(N512 w, Span<float> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 2a 93 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 a3 7a 4d ff cc e8 6d 7e 4d ff
232       | 7ff7c827cbf0h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64f](n512,span64f,32i)                                                           | Block512<double> load<double>(N512 w, Span<double> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 2a 92 fe 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 98 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 a0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 a3 79 4d ff cc e8 6d 7d 4d ff
233       | 7ff7c827ccf0h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n16)                                                                       | Block16<byte> parts<byte>(N16 w, Byte[] src)                                                                  | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 4d 91 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 1a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 c8 78 4d ff
234       | 7ff7c827cdc0h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n16)                                                                       | Block16<sbyte> parts<sbyte>(N16 w, SByte[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 7d 90 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 1a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 f8 77 4d ff
235       | 7ff7c827ce90h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n16)                                                                      | Block16<ushort> parts<ushort>(N16 w, UInt16[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 aa 8f fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 1a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 25 77 4d ff
236       | 7ff7c827d370h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n16)                                                                      | Block16<short> parts<short>(N16 w, Int16[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ca 8a fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 1a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 45 72 4d ff
237       | 7ff7c827d440h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n32)                                                                       | Block32<byte> parts<byte>(N32 w, Byte[] src)                                                                  | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 fa 89 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 75 71 4d ff
238       | 7ff7c827d510h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n32)                                                                       | Block32<sbyte> parts<sbyte>(N32 w, SByte[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 2a 89 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 a5 70 4d ff
239       | 7ff7c827d9f0h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n32)                                                                      | Block32<ushort> parts<ushort>(N32 w, UInt16[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 4d 84 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 c8 6b 4d ff
240       | 7ff7c827dac0h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n32)                                                                      | Block32<short> parts<short>(N32 w, Int16[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 7d 83 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 f8 6a 4d ff
241       | 7ff7c827db90h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32u](n32)                                                                      | Block32<uint> parts<uint>(N32 w, UInt32[] src)                                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 aa 82 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 25 6a 4d ff
242       | 7ff7c827dc60h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32i](n32)                                                                      | Block32<int> parts<int>(N32 w, Int32[] src)                                                                   | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 da 81 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 55 69 4d ff
243       | 7ff7c827dd30h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32f](n32)                                                                      | Block32<float> parts<float>(N32 w, Single[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 0a 81 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 85 68 4d ff
244       | 7ff7c827e210h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n64)                                                                       | Block64<byte> parts<byte>(N64 w, Byte[] src)                                                                  | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 2a 7c fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 a5 63 4d ff
245       | 7ff7c827e2e0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n64)                                                                       | Block64<sbyte> parts<sbyte>(N64 w, SByte[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 5a 7b fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 d5 62 4d ff
246       | 7ff7c827e3b0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n64)                                                                      | Block64<ushort> parts<ushort>(N64 w, UInt16[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 8a 7a fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 05 62 4d ff
247       | 7ff7c827e480h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n64)                                                                      | Block64<short> parts<short>(N64 w, Int16[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ba 79 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 35 61 4d ff
248       | 7ff7c827e550h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32u](n64)                                                                      | Block64<uint> parts<uint>(N64 w, UInt32[] src)                                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ed 78 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 68 60 4d ff
249       | 7ff7c827e620h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32i](n64)                                                                      | Block64<int> parts<int>(N64 w, Int32[] src)                                                                   | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 1d 78 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 98 5f 4d ff
250       | 7ff7c827e6f0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64u](n64)                                                                      | Block64<ulong> parts<ulong>(N64 w, UInt64[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 4a 77 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 c5 5e 4d ff
251       | 7ff7c827e7c0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64i](n64)                                                                      | Block64<long> parts<long>(N64 w, Int64[] src)                                                                 | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 7a 76 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 f5 5d 4d ff
252       | 7ff7c827e890h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32f](n64)                                                                      | Block64<float> parts<float>(N64 w, Single[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ad 75 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 28 5d 4d ff
253       | 7ff7c827e960h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64f](n64)                                                                      | Block64<double> parts<double>(N64 w, Double[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 da 74 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 55 5c 4d ff
254       | 7ff7c827ee40h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n128)                                                                      | Block128<byte> parts<byte>(N128 w, Byte[] src)                                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 fa 6f fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 75 57 4d ff
255       | 7ff7c827ef10h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n128)                                                                      | Block128<sbyte> parts<sbyte>(N128 w, SByte[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 2a 6f fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 a5 56 4d ff
256       | 7ff7c827efe0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n128)                                                                     | Block128<ushort> parts<ushort>(N128 w, UInt16[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 5a 6e fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 d5 55 4d ff
257       | 7ff7c827f0b0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n128)                                                                     | Block128<short> parts<short>(N128 w, Int16[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 8a 6d fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 05 55 4d ff
258       | 7ff7c827f180h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32u](n128)                                                                     | Block128<uint> parts<uint>(N128 w, UInt32[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ba 6c fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 35 54 4d ff
259       | 7ff7c827f250h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32i](n128)                                                                     | Block128<int> parts<int>(N128 w, Int32[] src)                                                                 | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ea 6b fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 65 53 4d ff
260       | 7ff7c827f320h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64u](n128)                                                                     | Block128<ulong> parts<ulong>(N128 w, UInt64[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 1d 6b fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 98 52 4d ff
261       | 7ff7c827f3f0h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64i](n128)                                                                     | Block128<long> parts<long>(N128 w, Int64[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 4d 6a fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 c8 51 4d ff
262       | 7ff7c827f4c0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32f](n128)                                                                     | Block128<float> parts<float>(N128 w, Single[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 7a 69 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 f5 50 4d ff
263       | 7ff7c827f590h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64f](n128)                                                                     | Block128<double> parts<double>(N128 w, Double[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ad 68 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 28 50 4d ff
264       | 7ff7c827f660h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n256)                                                                      | Block256<byte> parts<byte>(N256 w, Byte[] src)                                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 1f 03 d0 83 e2 e0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 da 67 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 55 4f 4d ff
265       | 7ff7c827f730h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n256)                                                                      | Block256<sbyte> parts<sbyte>(N256 w, SByte[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 1f 03 d0 83 e2 e0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 0a 67 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 85 4e 4d ff
266       | 7ff7c827f800h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n256)                                                                     | Block256<ushort> parts<ushort>(N256 w, UInt16[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 3a 66 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 b5 4d 4d ff
267       | 7ff7c827f8d0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n256)                                                                     | Block256<short> parts<short>(N256 w, Int16[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 6a 65 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 e5 4c 4d ff
268       | 7ff7c827f9a0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32u](n256)                                                                     | Block256<uint> parts<uint>(N256 w, UInt32[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 9a 64 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 15 4c 4d ff
269       | 7ff7c827fe80h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32i](n256)                                                                     | Block256<int> parts<int>(N256 w, Int32[] src)                                                                 | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ba 5f fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 35 47 4d ff
270       | 7ff7c827ff50h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64u](n256)                                                                     | Block256<ulong> parts<ulong>(N256 w, UInt64[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ea 5e fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 65 46 4d ff
271       | 7ff7c8280020h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64i](n256)                                                                     | Block256<long> parts<long>(N256 w, Int64[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 1a 5e fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 95 45 4d ff
272       | 7ff7c82800f0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32f](n256)                                                                     | Block256<float> parts<float>(N256 w, Single[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 4a 5d fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 c5 44 4d ff
273       | 7ff7c82801c0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64f](n256)                                                                     | Block256<double> parts<double>(N256 w, Double[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 7a 5c fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 f5 43 4d ff
274       | 7ff7c8280290h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n512)                                                                      | Block512<byte> parts<byte>(N512 w, Byte[] src)                                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 3f 03 d0 83 e2 c0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 aa 5b fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 25 43 4d ff
275       | 7ff7c8280360h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n512)                                                                      | Block512<sbyte> parts<sbyte>(N512 w, SByte[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 3f 03 d0 83 e2 c0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 da 5a fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 55 42 4d ff
276       | 7ff7c8280430h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n512)                                                                     | Block512<ushort> parts<ushort>(N512 w, UInt16[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 1f 03 d0 83 e2 e0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 0a 5a fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 85 41 4d ff
277       | 7ff7c8280500h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n512)                                                                     | Block512<short> parts<short>(N512 w, Int16[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 1f 03 d0 83 e2 e0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 3a 59 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 b5 40 4d ff
278       | 7ff7c82805d0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32u](n512)                                                                     | Block512<uint> parts<uint>(N512 w, UInt32[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 6a 58 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 e5 3f 4d ff
279       | 7ff7c82806a0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32i](n512)                                                                     | Block512<int> parts<int>(N512 w, Int32[] src)                                                                 | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 9a 57 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 15 3f 4d ff
280       | 7ff7c8280770h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64u](n512)                                                                     | Block512<ulong> parts<ulong>(N512 w, UInt64[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ca 56 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 45 3e 4d ff
281       | 7ff7c8280840h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64i](n512)                                                                     | Block512<long> parts<long>(N512 w, Int64[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 fa 55 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 75 3d 4d ff
282       | 7ff7c8280910h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32f](n512)                                                                     | Block512<float> parts<float>(N512 w, Single[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 2a 55 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 a5 3c 4d ff
283       | 7ff7c82809e0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64f](n512)                                                                     | Block512<double> parts<double>(N512 w, Double[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 5a 54 fe 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 a8 7a 5c 43 7e 01 00 00 48 8b 09 48 b8 b0 7a 5c 43 7e 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 d5 3b 4d ff
284       | 7ff7c8280ab0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[8u](8u~ref)                                                                    | in void* pvoid<byte>(ref byte src)                                                                            | 0f 1f 44 00 00 48 8b c1 c3
285       | 7ff7c8280ad0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[8i](8i~ref)                                                                    | in void* pvoid<sbyte>(ref sbyte src)                                                                          | 0f 1f 44 00 00 48 8b c1 c3
286       | 7ff7c8280af0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[16u](16u~ref)                                                                  | in void* pvoid<ushort>(ref ushort src)                                                                        | 0f 1f 44 00 00 48 8b c1 c3
287       | 7ff7c8280b10h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[16i](16i~ref)                                                                  | in void* pvoid<short>(ref short src)                                                                          | 0f 1f 44 00 00 48 8b c1 c3
288       | 7ff7c8280b30h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[32u](32u~ref)                                                                  | in void* pvoid<uint>(ref uint src)                                                                            | 0f 1f 44 00 00 48 8b c1 c3
289       | 7ff7c8280b50h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[32i](32i~ref)                                                                  | in void* pvoid<int>(ref int src)                                                                              | 0f 1f 44 00 00 48 8b c1 c3
290       | 7ff7c8280b70h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[64u](64u~ref)                                                                  | in void* pvoid<ulong>(ref ulong src)                                                                          | 0f 1f 44 00 00 48 8b c1 c3
291       | 7ff7c8280b90h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[64i](64i~ref)                                                                  | in void* pvoid<long>(ref long src)                                                                            | 0f 1f 44 00 00 48 8b c1 c3
292       | 7ff7c8280bb0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[32f](32f~ref)                                                                  | in void* pvoid<float>(ref float src)                                                                          | 0f 1f 44 00 00 48 8b c1 c3
293       | 7ff7c8280bd0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[64f](64f~ref)                                                                  | in void* pvoid<double>(ref double src)                                                                        | 0f 1f 44 00 00 48 8b c1 c3
294       | 7ff7c8280bf0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](8u~ref)                                                                        | in byte* ptr<byte>(ref byte src)                                                                              | 0f 1f 44 00 00 48 8b c1 c3
295       | 7ff7c8280c10h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](8i~ref)                                                                        | in sbyte* ptr<sbyte>(ref sbyte src)                                                                           | 0f 1f 44 00 00 48 8b c1 c3
296       | 7ff7c8280c30h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](16u~ref)                                                                      | in ushort* ptr<ushort>(ref ushort src)                                                                        | 0f 1f 44 00 00 48 8b c1 c3
297       | 7ff7c8281060h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](16i~ref)                                                                      | in short* ptr<short>(ref short src)                                                                           | 0f 1f 44 00 00 48 8b c1 c3
298       | 7ff7c8281080h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](32u~ref)                                                                      | in uint* ptr<uint>(ref uint src)                                                                              | 0f 1f 44 00 00 48 8b c1 c3
299       | 7ff7c82810a0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](32i~ref)                                                                      | in int* ptr<int>(ref int src)                                                                                 | 0f 1f 44 00 00 48 8b c1 c3
300       | 7ff7c82810c0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64u](64u~ref)                                                                      | in ulong* ptr<ulong>(ref ulong src)                                                                           | 0f 1f 44 00 00 48 8b c1 c3
301       | 7ff7c82810e0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64i](64i~ref)                                                                      | in long* ptr<long>(ref long src)                                                                              | 0f 1f 44 00 00 48 8b c1 c3
302       | 7ff7c8281100h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](32f~ref)                                                                      | in float* ptr<float>(ref float src)                                                                           | 0f 1f 44 00 00 48 8b c1 c3
303       | 7ff7c8281120h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64f](64f~ref)                                                                      | in double* ptr<double>(ref double src)                                                                        | 0f 1f 44 00 00 48 8b c1 c3
304       | 7ff7c8281140h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b16x8u~in)                                                                     | in byte* ptr<byte>(in Block16<byte> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
305       | 7ff7c8281160h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b16x8i~in)                                                                     | in sbyte* ptr<sbyte>(in Block16<sbyte> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
306       | 7ff7c8281180h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b16x16u~in)                                                                   | in ushort* ptr<ushort>(in Block16<ushort> src)                                                                | 0f 1f 44 00 00 48 8b 01 c3
307       | 7ff7c82811a0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b16x16i~in)                                                                   | in short* ptr<short>(in Block16<short> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
308       | 7ff7c82815d0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b32x8u~in)                                                                     | in byte* ptr<byte>(in Block32<byte> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
309       | 7ff7c82815f0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b32x8i~in)                                                                     | in sbyte* ptr<sbyte>(in Block32<sbyte> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
310       | 7ff7c8281610h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b32x16u~in)                                                                   | in ushort* ptr<ushort>(in Block32<ushort> src)                                                                | 0f 1f 44 00 00 48 8b 01 c3
311       | 7ff7c8281630h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b32x16i~in)                                                                   | in short* ptr<short>(in Block32<short> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
312       | 7ff7c8281650h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](b32x32u~in)                                                                   | in uint* ptr<uint>(in Block32<uint> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
313       | 7ff7c8281670h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](b32x32i~in)                                                                   | in int* ptr<int>(in Block32<int> src)                                                                         | 0f 1f 44 00 00 48 8b 01 c3
314       | 7ff7c8281690h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](b32x32f~in)                                                                   | in float* ptr<float>(in Block32<float> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
315       | 7ff7c82816b0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b64x8u~in)                                                                     | in byte* ptr<byte>(in Block64<byte> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
316       | 7ff7c82816d0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b64x8i~in)                                                                     | in sbyte* ptr<sbyte>(in Block64<sbyte> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
317       | 7ff7c82816f0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b64x16u~in)                                                                   | in ushort* ptr<ushort>(in Block64<ushort> src)                                                                | 0f 1f 44 00 00 48 8b 01 c3
318       | 7ff7c8281710h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b64x16i~in)                                                                   | in short* ptr<short>(in Block64<short> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
319       | 7ff7c8281730h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](b64x32u~in)                                                                   | in uint* ptr<uint>(in Block64<uint> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
320       | 7ff7c8281750h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](b64x32i~in)                                                                   | in int* ptr<int>(in Block64<int> src)                                                                         | 0f 1f 44 00 00 48 8b 01 c3
321       | 7ff7c8281770h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64u](b64x64u~in)                                                                   | in ulong* ptr<ulong>(in Block64<ulong> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
322       | 7ff7c8281790h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64i](b64x64i~in)                                                                   | in long* ptr<long>(in Block64<long> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
323       | 7ff7c82817b0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](b64x32f~in)                                                                   | in float* ptr<float>(in Block64<float> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
324       | 7ff7c82817d0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64f](b64x64f~in)                                                                   | in double* ptr<double>(in Block64<double> src)                                                                | 0f 1f 44 00 00 48 8b 01 c3
325       | 7ff7c8281c00h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b128x8u~in)                                                                    | in byte* ptr<byte>(in Block128<byte> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
326       | 7ff7c8281c20h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b128x8i~in)                                                                    | in sbyte* ptr<sbyte>(in Block128<sbyte> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
327       | 7ff7c8281c40h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b128x16u~in)                                                                  | in ushort* ptr<ushort>(in Block128<ushort> src)                                                               | 0f 1f 44 00 00 48 8b 01 c3
328       | 7ff7c8281c60h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b128x16i~in)                                                                  | in short* ptr<short>(in Block128<short> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
329       | 7ff7c8281c80h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](b128x32u~in)                                                                  | in uint* ptr<uint>(in Block128<uint> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
330       | 7ff7c8281ca0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](b128x32i~in)                                                                  | in int* ptr<int>(in Block128<int> src)                                                                        | 0f 1f 44 00 00 48 8b 01 c3
331       | 7ff7c8281cc0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64u](b128x64u~in)                                                                  | in ulong* ptr<ulong>(in Block128<ulong> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
332       | 7ff7c8281ce0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64i](b128x64i~in)                                                                  | in long* ptr<long>(in Block128<long> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
333       | 7ff7c8281d00h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](b128x32f~in)                                                                  | in float* ptr<float>(in Block128<float> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
334       | 7ff7c8281d20h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64f](b128x64f~in)                                                                  | in double* ptr<double>(in Block128<double> src)                                                               | 0f 1f 44 00 00 48 8b 01 c3
335       | 7ff7c8281d40h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b256x8u~in)                                                                    | in byte* ptr<byte>(in Block256<byte> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
336       | 7ff7c8281d60h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b256x8i~in)                                                                    | in sbyte* ptr<sbyte>(in Block256<sbyte> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
337       | 7ff7c8281d80h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b256x16u~in)                                                                  | in ushort* ptr<ushort>(in Block256<ushort> src)                                                               | 0f 1f 44 00 00 48 8b 01 c3
338       | 7ff7c8281da0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b256x16i~in)                                                                  | in short* ptr<short>(in Block256<short> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
339       | 7ff7c8281dc0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](b256x32u~in)                                                                  | in uint* ptr<uint>(in Block256<uint> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
340       | 7ff7c8281de0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](b256x32i~in)                                                                  | in int* ptr<int>(in Block256<int> src)                                                                        | 0f 1f 44 00 00 48 8b 01 c3
341       | 7ff7c8281e00h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64u](b256x64u~in)                                                                  | in ulong* ptr<ulong>(in Block256<ulong> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
342       | 7ff7c8281e20h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64i](b256x64i~in)                                                                  | in long* ptr<long>(in Block256<long> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
343       | 7ff7c8281e40h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](b256x32f~in)                                                                  | in float* ptr<float>(in Block256<float> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
344       | 7ff7c8281e60h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64f](b256x64f~in)                                                                  | in double* ptr<double>(in Block256<double> src)                                                               | 0f 1f 44 00 00 48 8b 01 c3
345       | 7ff7c8282290h   | 17      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b16x8u~in,32i)                                                                 | in byte* ptr<byte>(in Block16<byte> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 03 c2 c3
346       | 7ff7c82822c0h   | 17      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b16x8i~in,32i)                                                                 | in sbyte* ptr<sbyte>(in Block16<sbyte> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 03 c2 c3
347       | 7ff7c82822f0h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[16u](b16x16u~in,32i)                                                               | in ushort* ptr<ushort>(in Block16<ushort> src, int block)                                                     | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 50 c3
348       | 7ff7c8282310h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[16i](b16x16i~in,32i)                                                               | in short* ptr<short>(in Block16<short> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 50 c3
349       | 7ff7c8282740h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b32x8u~in,32i)                                                                 | in byte* ptr<byte>(in Block32<byte> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 03 c2 c3
350       | 7ff7c8282770h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b32x8i~in,32i)                                                                 | in sbyte* ptr<sbyte>(in Block32<sbyte> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 03 c2 c3
351       | 7ff7c82827a0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b32x16u~in,32i)                                                               | in ushort* ptr<ushort>(in Block32<ushort> src, int block)                                                     | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 50 c3
352       | 7ff7c8282bd0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b32x16i~in,32i)                                                               | in short* ptr<short>(in Block32<short> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 50 c3
353       | 7ff7c8282c00h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[32u](b32x32u~in,32i)                                                               | in uint* ptr<uint>(in Block32<uint> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
354       | 7ff7c8282c20h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[32i](b32x32i~in,32i)                                                               | in int* ptr<int>(in Block32<int> src, int block)                                                              | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
355       | 7ff7c8282c40h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[32f](b32x32f~in,32i)                                                               | in float* ptr<float>(in Block32<float> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
356       | 7ff7c8283070h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b64x8u~in,32i)                                                                 | in byte* ptr<byte>(in Block64<byte> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 03 c2 c3
357       | 7ff7c82830a0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b64x8i~in,32i)                                                                 | in sbyte* ptr<sbyte>(in Block64<sbyte> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 03 c2 c3
358       | 7ff7c82830d0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16u](b64x16u~in,32i)                                                               | in ushort* ptr<ushort>(in Block64<ushort> src, int block)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 50 c3
359       | 7ff7c8283100h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16i](b64x16i~in,32i)                                                               | in short* ptr<short>(in Block64<short> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 50 c3
360       | 7ff7c8283130h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](b64x32u~in,32i)                                                               | in uint* ptr<uint>(in Block64<uint> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
361       | 7ff7c8283160h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](b64x32i~in,32i)                                                               | in int* ptr<int>(in Block64<int> src, int block)                                                              | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
362       | 7ff7c8283190h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[64u](b64x64u~in,32i)                                                               | in ulong* ptr<ulong>(in Block64<ulong> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
363       | 7ff7c82831b0h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[64i](b64x64i~in,32i)                                                               | in long* ptr<long>(in Block64<long> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
364       | 7ff7c82831d0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](b64x32f~in,32i)                                                               | in float* ptr<float>(in Block64<float> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
365       | 7ff7c8283200h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[64f](b64x64f~in,32i)                                                               | in double* ptr<double>(in Block64<double> src, int block)                                                     | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
366       | 7ff7c8283630h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b128x8u~in,32i)                                                                | in byte* ptr<byte>(in Block128<byte> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 03 c2 c3
367       | 7ff7c8283660h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b128x8i~in,32i)                                                                | in sbyte* ptr<sbyte>(in Block128<sbyte> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 03 c2 c3
368       | 7ff7c8283690h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16u](b128x16u~in,32i)                                                              | in ushort* ptr<ushort>(in Block128<ushort> src, int block)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 50 c3
369       | 7ff7c82836c0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16i](b128x16i~in,32i)                                                              | in short* ptr<short>(in Block128<short> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 50 c3
370       | 7ff7c82836f0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32u](b128x32u~in,32i)                                                              | in uint* ptr<uint>(in Block128<uint> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
371       | 7ff7c8283720h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32i](b128x32i~in,32i)                                                              | in int* ptr<int>(in Block128<int> src, int block)                                                             | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
372       | 7ff7c8283750h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64u](b128x64u~in,32i)                                                              | in ulong* ptr<ulong>(in Block128<ulong> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
373       | 7ff7c8283780h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64i](b128x64i~in,32i)                                                              | in long* ptr<long>(in Block128<long> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
374       | 7ff7c82837b0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32f](b128x32f~in,32i)                                                              | in float* ptr<float>(in Block128<float> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
375       | 7ff7c82837e0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64f](b128x64f~in,32i)                                                              | in double* ptr<double>(in Block128<double> src, int block)                                                    | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
376       | 7ff7c8283c10h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b256x8u~in,32i)                                                                | in byte* ptr<byte>(in Block256<byte> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 03 c2 c3
377       | 7ff7c8283c40h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b256x8i~in,32i)                                                                | in sbyte* ptr<sbyte>(in Block256<sbyte> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 03 c2 c3
378       | 7ff7c8283c70h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16u](b256x16u~in,32i)                                                              | in ushort* ptr<ushort>(in Block256<ushort> src, int block)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 50 c3
379       | 7ff7c8283ca0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16i](b256x16i~in,32i)                                                              | in short* ptr<short>(in Block256<short> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 50 c3
380       | 7ff7c8283cd0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32u](b256x32u~in,32i)                                                              | in uint* ptr<uint>(in Block256<uint> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
381       | 7ff7c8283d00h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32i](b256x32i~in,32i)                                                              | in int* ptr<int>(in Block256<int> src, int block)                                                             | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
382       | 7ff7c8283d30h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[64u](b256x64u~in,32i)                                                              | in ulong* ptr<ulong>(in Block256<ulong> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
383       | 7ff7c8283d60h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[64i](b256x64i~in,32i)                                                              | in long* ptr<long>(in Block256<long> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
384       | 7ff7c8283d90h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32f](b256x32f~in,32i)                                                              | in float* ptr<float>(in Block256<float> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
385       | 7ff7c8283dc0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[64f](b256x64f~in,32i)                                                              | in double* ptr<double>(in Block256<double> src, int block)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
386       | 7ff7c8283df0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n8,32i)                                                                | bool aligned<byte>(N8 n, int count)                                                                           | 0f 1f 44 00 00 b8 01 00 00 00 c3
387       | 7ff7c8283e10h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n8,32i)                                                                | bool aligned<sbyte>(N8 n, int count)                                                                          | 0f 1f 44 00 00 b8 01 00 00 00 c3
388       | 7ff7c8283e30h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[16u](n8,32i)                                                               | bool aligned<ushort>(N8 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
389       | 7ff7c8283e60h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[16i](n8,32i)                                                               | bool aligned<short>(N8 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
390       | 7ff7c8283e90h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32u](n8,32i)                                                               | bool aligned<uint>(N8 n, int count)                                                                           | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
391       | 7ff7c8283ec0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32i](n8,32i)                                                               | bool aligned<int>(N8 n, int count)                                                                            | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
392       | 7ff7c8283ef0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64u](n8,32i)                                                               | bool aligned<ulong>(N8 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
393       | 7ff7c8283f20h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64i](n8,32i)                                                               | bool aligned<long>(N8 n, int count)                                                                           | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
394       | 7ff7c8283f50h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32f](n8,32i)                                                               | bool aligned<float>(N8 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
395       | 7ff7c8283f80h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64f](n8,32i)                                                               | bool aligned<double>(N8 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
396       | 7ff7c8283fb0h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[8u](n16,32i)                                                               | bool aligned<byte>(N16 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
397       | 7ff7c8283fe0h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[8i](n16,32i)                                                               | bool aligned<sbyte>(N16 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
398       | 7ff7c8284010h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16u](n16,32i)                                                              | bool aligned<ushort>(N16 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
399       | 7ff7c8284040h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16i](n16,32i)                                                              | bool aligned<short>(N16 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
400       | 7ff7c8284070h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[32u](n16,32i)                                                              | bool aligned<uint>(N16 n, int count)                                                                          | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
401       | 7ff7c82840a0h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[32i](n16,32i)                                                              | bool aligned<int>(N16 n, int count)                                                                           | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
402       | 7ff7c82840d0h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64u](n16,32i)                                                              | bool aligned<ulong>(N16 n, int count)                                                                         | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
403       | 7ff7c8284100h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64i](n16,32i)                                                              | bool aligned<long>(N16 n, int count)                                                                          | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
404       | 7ff7c8284130h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[32f](n16,32i)                                                              | bool aligned<float>(N16 n, int count)                                                                         | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
405       | 7ff7c8284160h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64f](n16,32i)                                                              | bool aligned<double>(N16 n, int count)                                                                        | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
406       | 7ff7c8284190h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n32,32i)                                                               | bool aligned<byte>(N32 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
407       | 7ff7c82841c0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n32,32i)                                                               | bool aligned<sbyte>(N32 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
408       | 7ff7c82841f0h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[16u](n32,32i)                                                              | bool aligned<ushort>(N32 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
409       | 7ff7c8284220h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[16i](n32,32i)                                                              | bool aligned<short>(N32 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
410       | 7ff7c8284250h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32u](n32,32i)                                                              | bool aligned<uint>(N32 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
411       | 7ff7c8284280h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32i](n32,32i)                                                              | bool aligned<int>(N32 n, int count)                                                                           | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
412       | 7ff7c82842b0h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64u](n32,32i)                                                              | bool aligned<ulong>(N32 n, int count)                                                                         | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
413       | 7ff7c83c0480h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64i](n32,32i)                                                              | bool aligned<long>(N32 n, int count)                                                                          | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
414       | 7ff7c83c04b0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32f](n32,32i)                                                              | bool aligned<float>(N32 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
415       | 7ff7c83c04e0h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64f](n32,32i)                                                              | bool aligned<double>(N32 n, int count)                                                                        | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
416       | 7ff7c83c0510h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n64,32i)                                                               | bool aligned<byte>(N64 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
417       | 7ff7c83c0540h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n64,32i)                                                               | bool aligned<sbyte>(N64 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
418       | 7ff7c83c0570h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16u](n64,32i)                                                              | bool aligned<ushort>(N64 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
419       | 7ff7c83c05a0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16i](n64,32i)                                                              | bool aligned<short>(N64 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
420       | 7ff7c83c05d0h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[32u](n64,32i)                                                              | bool aligned<uint>(N64 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
421       | 7ff7c83c0600h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[32i](n64,32i)                                                              | bool aligned<int>(N64 n, int count)                                                                           | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
422       | 7ff7c83c0630h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64u](n64,32i)                                                              | bool aligned<ulong>(N64 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
423       | 7ff7c83c0660h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64i](n64,32i)                                                              | bool aligned<long>(N64 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
424       | 7ff7c83c0690h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[32f](n64,32i)                                                              | bool aligned<float>(N64 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
425       | 7ff7c83c06c0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64f](n64,32i)                                                              | bool aligned<double>(N64 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
426       | 7ff7c83c06f0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n128,32i)                                                              | bool aligned<byte>(N128 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
427       | 7ff7c83c0720h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n128,32i)                                                              | bool aligned<sbyte>(N128 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
428       | 7ff7c83c0750h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16u](n128,32i)                                                             | bool aligned<ushort>(N128 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
429       | 7ff7c83c0780h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16i](n128,32i)                                                             | bool aligned<short>(N128 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
430       | 7ff7c83c07b0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32u](n128,32i)                                                             | bool aligned<uint>(N128 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
431       | 7ff7c83c07e0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32i](n128,32i)                                                             | bool aligned<int>(N128 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
432       | 7ff7c83c0810h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[64u](n128,32i)                                                             | bool aligned<ulong>(N128 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
433       | 7ff7c83c0840h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[64i](n128,32i)                                                             | bool aligned<long>(N128 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
434       | 7ff7c83c0870h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32f](n128,32i)                                                             | bool aligned<float>(N128 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
435       | 7ff7c83c08a0h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[64f](n128,32i)                                                             | bool aligned<double>(N128 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
436       | 7ff7c83c08d0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n256,32i)                                                              | bool aligned<byte>(N256 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 83 e0 e0 2b d0 0f 94 c0 0f b6 c0 c3
437       | 7ff7c83c0900h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n256,32i)                                                              | bool aligned<sbyte>(N256 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 83 e0 e0 2b d0 0f 94 c0 0f b6 c0 c3
438       | 7ff7c83c0930h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16u](n256,32i)                                                             | bool aligned<ushort>(N256 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
439       | 7ff7c83c0960h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16i](n256,32i)                                                             | bool aligned<short>(N256 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
440       | 7ff7c83c0990h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32u](n256,32i)                                                             | bool aligned<uint>(N256 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
441       | 7ff7c83c09c0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32i](n256,32i)                                                             | bool aligned<int>(N256 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
442       | 7ff7c83c09f0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64u](n256,32i)                                                             | bool aligned<ulong>(N256 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
443       | 7ff7c83c0a20h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64i](n256,32i)                                                             | bool aligned<long>(N256 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
444       | 7ff7c83c0a50h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32f](n256,32i)                                                             | bool aligned<float>(N256 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
445       | 7ff7c83c0a80h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64f](n256,32i)                                                             | bool aligned<double>(N256 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
446       | 7ff7c83c0ab0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n512,32i)                                                              | bool aligned<byte>(N512 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 3f 03 c2 83 e0 c0 2b d0 0f 94 c0 0f b6 c0 c3
447       | 7ff7c83c0ae0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n512,32i)                                                              | bool aligned<sbyte>(N512 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 3f 03 c2 83 e0 c0 2b d0 0f 94 c0 0f b6 c0 c3
448       | 7ff7c83c0b10h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16u](n512,32i)                                                             | bool aligned<ushort>(N512 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 83 e0 e0 2b d0 0f 94 c0 0f b6 c0 c3
449       | 7ff7c83c0b40h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16i](n512,32i)                                                             | bool aligned<short>(N512 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 83 e0 e0 2b d0 0f 94 c0 0f b6 c0 c3
450       | 7ff7c83c0b70h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32u](n512,32i)                                                             | bool aligned<uint>(N512 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
451       | 7ff7c83c0ba0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32i](n512,32i)                                                             | bool aligned<int>(N512 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
452       | 7ff7c83c0bd0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64u](n512,32i)                                                             | bool aligned<ulong>(N512 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
453       | 7ff7c83c0c00h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64i](n512,32i)                                                             | bool aligned<long>(N512 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
454       | 7ff7c83c0c30h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32f](n512,32i)                                                             | bool aligned<float>(N512 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
455       | 7ff7c83c0c60h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64f](n512,32i)                                                             | bool aligned<double>(N512 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
456       | 7ff7c83c0c90h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[8u](n16,32i,8u)                                                                | Block16<byte> alloc<byte>(N16 w, int blocks, byte t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 10 ea 71 c7 f7 7f 00 00 e8 25 61 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 b6 51 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
457       | 7ff7c83c0d00h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[8i](n16,32i,8i)                                                                | Block16<sbyte> alloc<sbyte>(N16 w, int blocks, sbyte t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 98 f0 71 c7 f7 7f 00 00 e8 b5 60 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 46 51 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
458       | 7ff7c83c0d70h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16u](n16,32i,16u)                                                              | Block16<ushort> alloc<ushort>(N16 w, int blocks, ushort t)                                                    | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 90 c4 12 c8 f7 7f 00 00 e8 48 60 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 d9 50 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
459       | 7ff7c83c0de0h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16i](n16,32i,16i)                                                              | Block16<short> alloc<short>(N16 w, int blocks, short t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 70 45 39 c8 f7 7f 00 00 e8 d8 5f ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 69 50 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
460       | 7ff7c83c0e50h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8u](n32,32i,8u)                                                                | Block32<byte> alloc<byte>(N32 w, int blocks, byte t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 10 ea 71 c7 f7 7f 00 00 e8 64 5f ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 f5 4f ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
461       | 7ff7c83c0ec0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8i](n32,32i,8i)                                                                | Block32<sbyte> alloc<sbyte>(N32 w, int blocks, sbyte t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 98 f0 71 c7 f7 7f 00 00 e8 f4 5e ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 85 4f ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
462       | 7ff7c83c0f30h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[16u](n32,32i,16u)                                                              | Block32<ushort> alloc<ushort>(N32 w, int blocks, ushort t)                                                    | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 90 c4 12 c8 f7 7f 00 00 e8 85 5e ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 16 4f ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
463       | 7ff7c83c0fa0h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[16i](n32,32i,16i)                                                              | Block32<short> alloc<short>(N32 w, int blocks, short t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 70 45 39 c8 f7 7f 00 00 e8 15 5e ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 a6 4e ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
464       | 7ff7c83c1010h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32u](n32,32i,32u)                                                              | Block32<uint> alloc<uint>(N32 w, int blocks, uint t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 28 b4 12 c8 f7 7f 00 00 e8 a8 5d ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 39 4e ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
465       | 7ff7c83c1080h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32i](n32,32i,32i)                                                              | Block32<int> alloc<int>(N32 w, int blocks, int t)                                                             | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 48 5f 7e c7 f7 7f 00 00 e8 38 5d ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 c9 4d ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
466       | 7ff7c83c10f0h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32f](n32,32i,32f)                                                              | Block32<float> alloc<float>(N32 w, int blocks, float t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 18 45 c5 c7 f7 7f 00 00 e8 c8 5c ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 59 4d ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
467       | 7ff7c83c1570h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8u](n64,32i,8u)                                                                | Block64<byte> alloc<byte>(N64 w, int blocks, byte t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 10 ea 71 c7 f7 7f 00 00 e8 44 58 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 d5 48 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
468       | 7ff7c83c15e0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8i](n64,32i,8i)                                                                | Block64<sbyte> alloc<sbyte>(N64 w, int blocks, sbyte t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 98 f0 71 c7 f7 7f 00 00 e8 d4 57 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 65 48 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
469       | 7ff7c83c1650h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16u](n64,32i,16u)                                                              | Block64<ushort> alloc<ushort>(N64 w, int blocks, ushort t)                                                    | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 90 c4 12 c8 f7 7f 00 00 e8 64 57 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 f5 47 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
470       | 7ff7c83c16c0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16i](n64,32i,16i)                                                              | Block64<short> alloc<short>(N64 w, int blocks, short t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 70 45 39 c8 f7 7f 00 00 e8 f4 56 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 85 47 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
471       | 7ff7c83c1730h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[32u](n64,32i,32u)                                                              | Block64<uint> alloc<uint>(N64 w, int blocks, uint t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 28 b4 12 c8 f7 7f 00 00 e8 85 56 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 16 47 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
472       | 7ff7c83c17a0h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[32i](n64,32i,32i)                                                              | Block64<int> alloc<int>(N64 w, int blocks, int t)                                                             | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 48 5f 7e c7 f7 7f 00 00 e8 15 56 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 a6 46 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
473       | 7ff7c83c1810h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64u](n64,32i,64u)                                                              | Block64<ulong> alloc<ulong>(N64 w, int blocks, ulong t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 38 d6 ba c7 f7 7f 00 00 e8 a8 55 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 39 46 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
474       | 7ff7c83c1880h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64i](n64,32i,64i)                                                              | Block64<long> alloc<long>(N64 w, int blocks, long t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 f0 6d 39 c8 f7 7f 00 00 e8 38 55 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 c9 45 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
475       | 7ff7c83c18f0h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[32f](n64,32i,32f)                                                              | Block64<float> alloc<float>(N64 w, int blocks, float t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 18 45 c5 c7 f7 7f 00 00 e8 c5 54 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 56 45 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
476       | 7ff7c83c1960h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64f](n64,32i,64f)                                                              | Block64<double> alloc<double>(N64 w, int blocks, double t)                                                    | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 20 47 c5 c7 f7 7f 00 00 e8 58 54 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 e9 44 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
477       | 7ff7c83c19d0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8u](n128,32i,8u)                                                               | Block128<byte> alloc<byte>(N128 w, int blocks, byte t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 10 ea 71 c7 f7 7f 00 00 e8 e4 53 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 75 44 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
478       | 7ff7c83c1a40h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8i](n128,32i,8i)                                                               | Block128<sbyte> alloc<sbyte>(N128 w, int blocks, sbyte t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 98 f0 71 c7 f7 7f 00 00 e8 74 53 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 05 44 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
479       | 7ff7c83c1ab0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16u](n128,32i,16u)                                                             | Block128<ushort> alloc<ushort>(N128 w, int blocks, ushort t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 90 c4 12 c8 f7 7f 00 00 e8 04 53 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 95 43 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
480       | 7ff7c83c1b20h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16i](n128,32i,16i)                                                             | Block128<short> alloc<short>(N128 w, int blocks, short t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 70 45 39 c8 f7 7f 00 00 e8 94 52 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 25 43 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
481       | 7ff7c83c1b90h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32u](n128,32i,32u)                                                             | Block128<uint> alloc<uint>(N128 w, int blocks, uint t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 28 b4 12 c8 f7 7f 00 00 e8 24 52 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 b5 42 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
482       | 7ff7c83c1c00h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32i](n128,32i,32i)                                                             | Block128<int> alloc<int>(N128 w, int blocks, int t)                                                           | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 48 5f 7e c7 f7 7f 00 00 e8 b4 51 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 45 42 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
483       | 7ff7c83c1c70h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[64u](n128,32i,64u)                                                             | Block128<ulong> alloc<ulong>(N128 w, int blocks, ulong t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 38 d6 ba c7 f7 7f 00 00 e8 45 51 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 d6 41 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
484       | 7ff7c83c1ce0h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[64i](n128,32i,64i)                                                             | Block128<long> alloc<long>(N128 w, int blocks, long t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 f0 6d 39 c8 f7 7f 00 00 e8 d5 50 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 66 41 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
485       | 7ff7c83c1d50h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32f](n128,32i,32f)                                                             | Block128<float> alloc<float>(N128 w, int blocks, float t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 18 45 c5 c7 f7 7f 00 00 e8 64 50 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 f5 40 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
486       | 7ff7c83c1dc0h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[64f](n128,32i,64f)                                                             | Block128<double> alloc<double>(N128 w, int blocks, double t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 20 47 c5 c7 f7 7f 00 00 e8 f5 4f ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 86 40 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
487       | 7ff7c83c2240h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8u](n256,32i,8u)                                                               | Block256<byte> alloc<byte>(N256 w, int blocks, byte t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 05 49 63 d0 48 b9 10 ea 71 c7 f7 7f 00 00 e8 74 4b ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 05 3c ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
488       | 7ff7c83c22b0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8i](n256,32i,8i)                                                               | Block256<sbyte> alloc<sbyte>(N256 w, int blocks, sbyte t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 05 49 63 d0 48 b9 98 f0 71 c7 f7 7f 00 00 e8 04 4b ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 95 3b ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
489       | 7ff7c83c2320h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16u](n256,32i,16u)                                                             | Block256<ushort> alloc<ushort>(N256 w, int blocks, ushort t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 90 c4 12 c8 f7 7f 00 00 e8 94 4a ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 25 3b ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
490       | 7ff7c83c2390h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16i](n256,32i,16i)                                                             | Block256<short> alloc<short>(N256 w, int blocks, short t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 70 45 39 c8 f7 7f 00 00 e8 24 4a ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 b5 3a ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
491       | 7ff7c83c2400h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32u](n256,32i,32u)                                                             | Block256<uint> alloc<uint>(N256 w, int blocks, uint t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 28 b4 12 c8 f7 7f 00 00 e8 b4 49 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 45 3a ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
492       | 7ff7c83c2470h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32i](n256,32i,32i)                                                             | Block256<int> alloc<int>(N256 w, int blocks, int t)                                                           | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 48 5f 7e c7 f7 7f 00 00 e8 44 49 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 d5 39 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
493       | 7ff7c83c24e0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64u](n256,32i,64u)                                                             | Block256<ulong> alloc<ulong>(N256 w, int blocks, ulong t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 38 d6 ba c7 f7 7f 00 00 e8 d4 48 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 65 39 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
494       | 7ff7c83c2550h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64i](n256,32i,64i)                                                             | Block256<long> alloc<long>(N256 w, int blocks, long t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 f0 6d 39 c8 f7 7f 00 00 e8 64 48 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 f5 38 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
495       | 7ff7c83c25c0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32f](n256,32i,32f)                                                             | Block256<float> alloc<float>(N256 w, int blocks, float t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 18 45 c5 c7 f7 7f 00 00 e8 f4 47 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 85 38 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
496       | 7ff7c83c2630h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64f](n256,32i,64f)                                                             | Block256<double> alloc<double>(N256 w, int blocks, double t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 20 47 c5 c7 f7 7f 00 00 e8 84 47 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 15 38 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
497       | 7ff7c83c26a0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8u](n512,32i,8u)                                                               | Block512<byte> alloc<byte>(N512 w, int blocks, byte t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 06 49 63 d0 48 b9 10 ea 71 c7 f7 7f 00 00 e8 14 47 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 a5 37 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
498       | 7ff7c83c2710h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8i](n512,32i,8i)                                                               | Block512<sbyte> alloc<sbyte>(N512 w, int blocks, sbyte t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 06 49 63 d0 48 b9 98 f0 71 c7 f7 7f 00 00 e8 a4 46 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 35 37 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
499       | 7ff7c83c2780h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16u](n512,32i,16u)                                                             | Block512<ushort> alloc<ushort>(N512 w, int blocks, ushort t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 05 49 63 d0 48 b9 90 c4 12 c8 f7 7f 00 00 e8 34 46 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 c5 36 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
500       | 7ff7c83c27f0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16i](n512,32i,16i)                                                             | Block512<short> alloc<short>(N512 w, int blocks, short t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 05 49 63 d0 48 b9 70 45 39 c8 f7 7f 00 00 e8 c4 45 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 55 36 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
501       | 7ff7c83c2860h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32u](n512,32i,32u)                                                             | Block512<uint> alloc<uint>(N512 w, int blocks, uint t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 28 b4 12 c8 f7 7f 00 00 e8 54 45 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 e5 35 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
502       | 7ff7c83c28d0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32i](n512,32i,32i)                                                             | Block512<int> alloc<int>(N512 w, int blocks, int t)                                                           | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 48 5f 7e c7 f7 7f 00 00 e8 e4 44 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 75 35 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
503       | 7ff7c83c2940h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64u](n512,32i,64u)                                                             | Block512<ulong> alloc<ulong>(N512 w, int blocks, ulong t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 38 d6 ba c7 f7 7f 00 00 e8 74 44 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 05 35 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
504       | 7ff7c83c29b0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64i](n512,32i,64i)                                                             | Block512<long> alloc<long>(N512 w, int blocks, long t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 f0 6d 39 c8 f7 7f 00 00 e8 04 44 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 95 34 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
505       | 7ff7c83c2a20h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32f](n512,32i,32f)                                                             | Block512<float> alloc<float>(N512 w, int blocks, float t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 18 45 c5 c7 f7 7f 00 00 e8 94 43 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 25 34 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
506       | 7ff7c83c2a90h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64f](n512,32i,64f)                                                             | Block512<double> alloc<double>(N512 w, int blocks, double t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 20 47 c5 c7 f7 7f 00 00 e8 24 43 ea 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 b5 33 ea 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
507       | 7ff7c83c2b00h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[8u](32i)                                                                 | int bitcount<byte>(int cellcount)                                                                             | 0f 1f 44 00 00 8b c1 c1 e0 03 c3
508       | 7ff7c83c2b20h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[8i](32i)                                                                 | int bitcount<sbyte>(int cellcount)                                                                            | 0f 1f 44 00 00 8b c1 c1 e0 03 c3
509       | 7ff7c83c2b40h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[16u](32i)                                                                | int bitcount<ushort>(int cellcount)                                                                           | 0f 1f 44 00 00 8b c1 c1 e0 04 c3
510       | 7ff7c83c2b60h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[16i](32i)                                                                | int bitcount<short>(int cellcount)                                                                            | 0f 1f 44 00 00 8b c1 c1 e0 04 c3
511       | 7ff7c83c2b80h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[32u](32i)                                                                | int bitcount<uint>(int cellcount)                                                                             | 0f 1f 44 00 00 8b c1 c1 e0 05 c3
512       | 7ff7c83c2ba0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[32i](32i)                                                                | int bitcount<int>(int cellcount)                                                                              | 0f 1f 44 00 00 8b c1 c1 e0 05 c3
513       | 7ff7c83c2bc0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[64u](32i)                                                                | int bitcount<ulong>(int cellcount)                                                                            | 0f 1f 44 00 00 8b c1 c1 e0 06 c3
514       | 7ff7c83c2be0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[64i](32i)                                                                | int bitcount<long>(int cellcount)                                                                             | 0f 1f 44 00 00 8b c1 c1 e0 06 c3
515       | 7ff7c83c2c00h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[32f](32i)                                                                | int bitcount<float>(int cellcount)                                                                            | 0f 1f 44 00 00 8b c1 c1 e0 05 c3
516       | 7ff7c83c2c20h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[64f](32i)                                                                | int bitcount<double>(int cellcount)                                                                           | 0f 1f 44 00 00 8b c1 c1 e0 06 c3
517       | 7ff7c83c2c40h   | 8       | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[8u](n8,32i)                                                            | int minblocks<byte>(N8 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b c2 c3
518       | 7ff7c83c2c60h   | 8       | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[8i](n8,32i)                                                            | int minblocks<sbyte>(N8 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c3
519       | 7ff7c83c2c80h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[16u](n8,32i)                                                           | int minblocks<ushort>(N8 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
520       | 7ff7c83c2cb0h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[16i](n8,32i)                                                           | int minblocks<short>(N8 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
521       | 7ff7c83c2ce0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32u](n8,32i)                                                           | int minblocks<uint>(N8 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
522       | 7ff7c83c2d20h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32i](n8,32i)                                                           | int minblocks<int>(N8 n, int cellcount)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
523       | 7ff7c83c2d60h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[64u](n8,32i)                                                           | int minblocks<ulong>(N8 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
524       | 7ff7c83c2da0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[64i](n8,32i)                                                           | int minblocks<long>(N8 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
525       | 7ff7c83c2de0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32f](n8,32i)                                                           | int minblocks<float>(N8 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
526       | 7ff7c83c2e20h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[64f](n8,32i)                                                           | int minblocks<double>(N8 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
527       | 7ff7c83c2e60h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[8u](n16,32i)                                                           | int minblocks<byte>(N16 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
528       | 7ff7c83c2e90h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[8i](n16,32i)                                                           | int minblocks<sbyte>(N16 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
529       | 7ff7c83c2ec0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[16u](n16,32i)                                                          | int minblocks<ushort>(N16 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
530       | 7ff7c83c2ef0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[16i](n16,32i)                                                          | int minblocks<short>(N16 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
531       | 7ff7c83c2f20h   | 41      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[32u](n16,32i)                                                          | int minblocks<uint>(N16 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
532       | 7ff7c83c2f60h   | 41      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[32i](n16,32i)                                                          | int minblocks<int>(N16 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
533       | 7ff7c83c33b0h   | 41      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[64u](n16,32i)                                                          | int minblocks<ulong>(N16 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
534       | 7ff7c83c33f0h   | 41      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[64i](n16,32i)                                                          | int minblocks<long>(N16 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
535       | 7ff7c83c3430h   | 41      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[32f](n16,32i)                                                          | int minblocks<float>(N16 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
536       | 7ff7c83c3470h   | 41      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[64f](n16,32i)                                                          | int minblocks<double>(N16 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
537       | 7ff7c83c34b0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8u](n32,32i)                                                           | int minblocks<byte>(N32 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
538       | 7ff7c83c34f0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8i](n32,32i)                                                           | int minblocks<sbyte>(N32 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
539       | 7ff7c83c3530h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[16u](n32,32i)                                                          | int minblocks<ushort>(N32 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
540       | 7ff7c83c3560h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[16i](n32,32i)                                                          | int minblocks<short>(N32 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
541       | 7ff7c83c3590h   | 30      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[32u](n32,32i)                                                          | int minblocks<uint>(N32 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
542       | 7ff7c83c35c0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[32i](n32,32i)                                                          | int minblocks<int>(N32 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
543       | 7ff7c83c35f0h   | 41      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[64u](n32,32i)                                                          | int minblocks<ulong>(N32 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
544       | 7ff7c83c3630h   | 41      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[64i](n32,32i)                                                          | int minblocks<long>(N32 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
545       | 7ff7c83c3670h   | 30      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[32f](n32,32i)                                                          | int minblocks<float>(N32 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
546       | 7ff7c83c36a0h   | 41      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[64f](n32,32i)                                                          | int minblocks<double>(N32 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
547       | 7ff7c83c36e0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8u](n64,32i)                                                           | int minblocks<byte>(N64 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
548       | 7ff7c83c3720h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8i](n64,32i)                                                           | int minblocks<sbyte>(N64 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
549       | 7ff7c83c3760h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[16u](n64,32i)                                                          | int minblocks<ushort>(N64 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
550       | 7ff7c83c37a0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[16i](n64,32i)                                                          | int minblocks<short>(N64 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
551       | 7ff7c83c37e0h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[32u](n64,32i)                                                          | int minblocks<uint>(N64 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
552       | 7ff7c83c3810h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[32i](n64,32i)                                                          | int minblocks<int>(N64 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
553       | 7ff7c83c3840h   | 30      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[64u](n64,32i)                                                          | int minblocks<ulong>(N64 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
554       | 7ff7c83c3870h   | 30      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[64i](n64,32i)                                                          | int minblocks<long>(N64 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
555       | 7ff7c83c38a0h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[32f](n64,32i)                                                          | int minblocks<float>(N64 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
556       | 7ff7c83c38d0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[64f](n64,32i)                                                          | int minblocks<double>(N64 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
557       | 7ff7c83c3900h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8u](n128,32i)                                                          | int minblocks<byte>(N128 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
558       | 7ff7c83c3940h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8i](n128,32i)                                                          | int minblocks<sbyte>(N128 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
559       | 7ff7c83c3980h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[16u](n128,32i)                                                         | int minblocks<ushort>(N128 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
560       | 7ff7c83c39c0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[16i](n128,32i)                                                         | int minblocks<short>(N128 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
561       | 7ff7c83c3a00h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32u](n128,32i)                                                         | int minblocks<uint>(N128 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
562       | 7ff7c83c3a40h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32i](n128,32i)                                                         | int minblocks<int>(N128 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
563       | 7ff7c83c3a80h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[64u](n128,32i)                                                         | int minblocks<ulong>(N128 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
564       | 7ff7c83c3ab0h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[64i](n128,32i)                                                         | int minblocks<long>(N128 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
565       | 7ff7c83c3ae0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32f](n128,32i)                                                         | int minblocks<float>(N128 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
566       | 7ff7c83c3b20h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[64f](n128,32i)                                                         | int minblocks<double>(N128 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
567       | 7ff7c83c3b50h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8u](n256,32i)                                                          | int minblocks<byte>(N256 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 c1 f8 05 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 74 03 ff c0 c3 c3
568       | 7ff7c83c3b90h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8i](n256,32i)                                                          | int minblocks<sbyte>(N256 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 c1 f8 05 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 74 03 ff c0 c3 c3
569       | 7ff7c83c3bd0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[16u](n256,32i)                                                         | int minblocks<ushort>(N256 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
570       | 7ff7c83c3c10h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[16i](n256,32i)                                                         | int minblocks<short>(N256 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
571       | 7ff7c83c3c50h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32u](n256,32i)                                                         | int minblocks<uint>(N256 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
572       | 7ff7c83c3c90h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32i](n256,32i)                                                         | int minblocks<int>(N256 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
573       | 7ff7c83c3cd0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[64u](n256,32i)                                                         | int minblocks<ulong>(N256 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
574       | 7ff7c83c3d10h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[64i](n256,32i)                                                         | int minblocks<long>(N256 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
575       | 7ff7c83c3d50h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32f](n256,32i)                                                         | int minblocks<float>(N256 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
576       | 7ff7c83c3d90h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[64f](n256,32i)                                                         | int minblocks<double>(N256 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
577       | 7ff7c83c3dd0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8u](n512,32i)                                                          | int minblocks<byte>(N512 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 3f 03 c2 c1 f8 06 8b ca c1 f9 1f 83 e1 3f 03 ca 83 e1 c0 2b d1 74 03 ff c0 c3 c3
578       | 7ff7c83c3e10h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8i](n512,32i)                                                          | int minblocks<sbyte>(N512 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 3f 03 c2 c1 f8 06 8b ca c1 f9 1f 83 e1 3f 03 ca 83 e1 c0 2b d1 74 03 ff c0 c3 c3
579       | 7ff7c83c3e50h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[16u](n512,32i)                                                         | int minblocks<ushort>(N512 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 c1 f8 05 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 74 03 ff c0 c3 c3
580       | 7ff7c83c3e90h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[16i](n512,32i)                                                         | int minblocks<short>(N512 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 c1 f8 05 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 74 03 ff c0 c3 c3
581       | 7ff7c83c3ed0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32u](n512,32i)                                                         | int minblocks<uint>(N512 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
582       | 7ff7c83c3f10h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32i](n512,32i)                                                         | int minblocks<int>(N512 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
583       | 7ff7c83c3f50h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[64u](n512,32i)                                                         | int minblocks<ulong>(N512 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
584       | 7ff7c83c3f90h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[64i](n512,32i)                                                         | int minblocks<long>(N512 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
585       | 7ff7c83c3fd0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32f](n512,32i)                                                         | int minblocks<float>(N512 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
586       | 7ff7c83c4010h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[64f](n512,32i)                                                         | int minblocks<double>(N512 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
587       | 7ff7c83c4050h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[8u](n8,32i)                                                      | int blockedcells<byte>(N8 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c3
588       | 7ff7c83c4070h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[8i](n8,32i)                                                      | int blockedcells<sbyte>(N8 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c3
589       | 7ff7c83c4090h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[16u](n8,32i)                                                     | int blockedcells<ushort>(N8 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 d1 e0 c3
590       | 7ff7c83c40b0h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[16i](n8,32i)                                                     | int blockedcells<short>(N8 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 d1 e0 c3
591       | 7ff7c83c40d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32u](n8,32i)                                                     | int blockedcells<uint>(N8 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
592       | 7ff7c83c40f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32i](n8,32i)                                                     | int blockedcells<int>(N8 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
593       | 7ff7c83c4110h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[64u](n8,32i)                                                     | int blockedcells<ulong>(N8 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
594       | 7ff7c83c4130h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[64i](n8,32i)                                                     | int blockedcells<long>(N8 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
595       | 7ff7c83c4150h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32f](n8,32i)                                                     | int blockedcells<float>(N8 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
596       | 7ff7c83c4170h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[64f](n8,32i)                                                     | int blockedcells<double>(N8 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
597       | 7ff7c83c4190h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[8u](n16,32i)                                                     | int blockedcells<byte>(N16 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 d1 e0 c3
598       | 7ff7c83c41b0h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[8i](n16,32i)                                                     | int blockedcells<sbyte>(N16 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 d1 e0 c3
599       | 7ff7c83c41d0h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[16u](n16,32i)                                                    | int blockedcells<ushort>(N16 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c3
600       | 7ff7c83c41f0h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[16i](n16,32i)                                                    | int blockedcells<short>(N16 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c3
601       | 7ff7c83c4210h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[32u](n16,32i)                                                    | int blockedcells<uint>(N16 n, int blocks)                                                                     | 0f 1f 44 00 00 33 c0 c3
602       | 7ff7c83c4230h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[32i](n16,32i)                                                    | int blockedcells<int>(N16 n, int blocks)                                                                      | 0f 1f 44 00 00 33 c0 c3
603       | 7ff7c83c4250h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[64u](n16,32i)                                                    | int blockedcells<ulong>(N16 n, int blocks)                                                                    | 0f 1f 44 00 00 33 c0 c3
604       | 7ff7c83c4270h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[64i](n16,32i)                                                    | int blockedcells<long>(N16 n, int blocks)                                                                     | 0f 1f 44 00 00 33 c0 c3
605       | 7ff7c83c4290h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[32f](n16,32i)                                                    | int blockedcells<float>(N16 n, int blocks)                                                                    | 0f 1f 44 00 00 33 c0 c3
606       | 7ff7c83c42b0h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[64f](n16,32i)                                                    | int blockedcells<double>(N16 n, int blocks)                                                                   | 0f 1f 44 00 00 33 c0 c3
607       | 7ff7c83c42d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8u](n32,32i)                                                     | int blockedcells<byte>(N32 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
608       | 7ff7c83c42f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8i](n32,32i)                                                     | int blockedcells<sbyte>(N32 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
609       | 7ff7c83c4310h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[16u](n32,32i)                                                    | int blockedcells<ushort>(N32 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 d1 e0 c3
610       | 7ff7c83c4330h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[16i](n32,32i)                                                    | int blockedcells<short>(N32 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 d1 e0 c3
611       | 7ff7c83c4350h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[32u](n32,32i)                                                    | int blockedcells<uint>(N32 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c3
612       | 7ff7c83c4370h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[32i](n32,32i)                                                    | int blockedcells<int>(N32 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c3
613       | 7ff7c83c4390h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[64u](n32,32i)                                                    | int blockedcells<ulong>(N32 n, int blocks)                                                                    | 0f 1f 44 00 00 33 c0 c3
614       | 7ff7c83c43b0h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[64i](n32,32i)                                                    | int blockedcells<long>(N32 n, int blocks)                                                                     | 0f 1f 44 00 00 33 c0 c3
615       | 7ff7c83c43d0h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[32f](n32,32i)                                                    | int blockedcells<float>(N32 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c3
616       | 7ff7c83c43f0h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[64f](n32,32i)                                                    | int blockedcells<double>(N32 n, int blocks)                                                                   | 0f 1f 44 00 00 33 c0 c3
617       | 7ff7c83c4410h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8u](n64,32i)                                                     | int blockedcells<byte>(N64 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
618       | 7ff7c83c4430h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8i](n64,32i)                                                     | int blockedcells<sbyte>(N64 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
619       | 7ff7c83c4450h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[16u](n64,32i)                                                    | int blockedcells<ushort>(N64 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
620       | 7ff7c83c4470h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[16i](n64,32i)                                                    | int blockedcells<short>(N64 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
621       | 7ff7c83c4490h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[32u](n64,32i)                                                    | int blockedcells<uint>(N64 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 d1 e0 c3
622       | 7ff7c83c44b0h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[32i](n64,32i)                                                    | int blockedcells<int>(N64 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 d1 e0 c3
623       | 7ff7c83c44d0h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[64u](n64,32i)                                                    | int blockedcells<ulong>(N64 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c3
624       | 7ff7c83c44f0h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[64i](n64,32i)                                                    | int blockedcells<long>(N64 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c3
625       | 7ff7c83c4510h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[32f](n64,32i)                                                    | int blockedcells<float>(N64 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 d1 e0 c3
626       | 7ff7c83c4530h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[64f](n64,32i)                                                    | int blockedcells<double>(N64 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c3
627       | 7ff7c83c4550h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8u](n128,32i)                                                    | int blockedcells<byte>(N128 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
628       | 7ff7c83c4570h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8i](n128,32i)                                                    | int blockedcells<sbyte>(N128 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
629       | 7ff7c83c4590h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[16u](n128,32i)                                                   | int blockedcells<ushort>(N128 n, int blocks)                                                                  | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
630       | 7ff7c83c45b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[16i](n128,32i)                                                   | int blockedcells<short>(N128 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
631       | 7ff7c83c45d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32u](n128,32i)                                                   | int blockedcells<uint>(N128 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
632       | 7ff7c83c45f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32i](n128,32i)                                                   | int blockedcells<int>(N128 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
633       | 7ff7c83c4610h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[64u](n128,32i)                                                   | int blockedcells<ulong>(N128 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 d1 e0 c3
634       | 7ff7c83c4630h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[64i](n128,32i)                                                   | int blockedcells<long>(N128 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 d1 e0 c3
635       | 7ff7c83c4650h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32f](n128,32i)                                                   | int blockedcells<float>(N128 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
636       | 7ff7c83c4670h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[64f](n128,32i)                                                   | int blockedcells<double>(N128 n, int blocks)                                                                  | 0f 1f 44 00 00 8b c2 d1 e0 c3
637       | 7ff7c83c4690h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8u](n256,32i)                                                    | int blockedcells<byte>(N256 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 05 c3
638       | 7ff7c83c4ac0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8i](n256,32i)                                                    | int blockedcells<sbyte>(N256 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 05 c3
639       | 7ff7c83c4ae0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[16u](n256,32i)                                                   | int blockedcells<ushort>(N256 n, int blocks)                                                                  | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
640       | 7ff7c83c4b00h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[16i](n256,32i)                                                   | int blockedcells<short>(N256 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
641       | 7ff7c83c4b20h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32u](n256,32i)                                                   | int blockedcells<uint>(N256 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
642       | 7ff7c83c4b40h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32i](n256,32i)                                                   | int blockedcells<int>(N256 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
643       | 7ff7c83c4b60h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[64u](n256,32i)                                                   | int blockedcells<ulong>(N256 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
644       | 7ff7c83c4b80h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[64i](n256,32i)                                                   | int blockedcells<long>(N256 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
645       | 7ff7c83c4ba0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32f](n256,32i)                                                   | int blockedcells<float>(N256 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
646       | 7ff7c83c4bc0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[64f](n256,32i)                                                   | int blockedcells<double>(N256 n, int blocks)                                                                  | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
647       | 7ff7c83c4be0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8u](n512,32i)                                                    | int blockedcells<byte>(N512 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 06 c3
648       | 7ff7c83c4c00h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8i](n512,32i)                                                    | int blockedcells<sbyte>(N512 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 06 c3
649       | 7ff7c83c4c20h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[16u](n512,32i)                                                   | int blockedcells<ushort>(N512 n, int blocks)                                                                  | 0f 1f 44 00 00 8b c2 c1 e0 05 c3
650       | 7ff7c83c4c40h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[16i](n512,32i)                                                   | int blockedcells<short>(N512 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 05 c3
651       | 7ff7c83c4c60h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32u](n512,32i)                                                   | int blockedcells<uint>(N512 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
652       | 7ff7c83c4c80h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32i](n512,32i)                                                   | int blockedcells<int>(N512 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
653       | 7ff7c83c4ca0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[64u](n512,32i)                                                   | int blockedcells<ulong>(N512 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
654       | 7ff7c83c4cc0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[64i](n512,32i)                                                   | int blockedcells<long>(N512 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
655       | 7ff7c83c4ce0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32f](n512,32i)                                                   | int blockedcells<float>(N512 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
656       | 7ff7c83c4d00h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[64f](n512,32i)                                                   | int blockedcells<double>(N512 n, int blocks)                                                                  | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
657       | 7ff7c83c53e0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8u](n8,8u)                                                               | int blocklen<byte>(N8 w, byte t)                                                                              | 0f 1f 44 00 00 b8 01 00 00 00 c3
658       | 7ff7c83c5400h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8i](n8,8i)                                                               | int blocklen<sbyte>(N8 w, sbyte t)                                                                            | 0f 1f 44 00 00 b8 01 00 00 00 c3
659       | 7ff7c83c5420h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8u](n16,8u)                                                              | int blocklen<byte>(N16 w, byte t)                                                                             | 0f 1f 44 00 00 b8 02 00 00 00 c3
660       | 7ff7c83c5440h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8i](n16,8i)                                                              | int blocklen<sbyte>(N16 w, sbyte t)                                                                           | 0f 1f 44 00 00 b8 02 00 00 00 c3
661       | 7ff7c83c5460h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16u](n16,16u)                                                            | int blocklen<ushort>(N16 w, ushort t)                                                                         | 0f 1f 44 00 00 b8 01 00 00 00 c3
662       | 7ff7c83c5480h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16i](n16,16i)                                                            | int blocklen<short>(N16 w, short t)                                                                           | 0f 1f 44 00 00 b8 01 00 00 00 c3
663       | 7ff7c83c54a0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8u](n32,8u)                                                              | int blocklen<byte>(N32 w, byte t)                                                                             | 0f 1f 44 00 00 b8 04 00 00 00 c3
664       | 7ff7c83c54c0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8i](n32,8i)                                                              | int blocklen<sbyte>(N32 w, sbyte t)                                                                           | 0f 1f 44 00 00 b8 04 00 00 00 c3
665       | 7ff7c83c54e0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16u](n32,16u)                                                            | int blocklen<ushort>(N32 w, ushort t)                                                                         | 0f 1f 44 00 00 b8 02 00 00 00 c3
666       | 7ff7c83c5500h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16i](n32,16i)                                                            | int blocklen<short>(N32 w, short t)                                                                           | 0f 1f 44 00 00 b8 02 00 00 00 c3
667       | 7ff7c83c5520h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32u](n32,32u)                                                            | int blocklen<uint>(N32 w, uint t)                                                                             | 0f 1f 44 00 00 b8 01 00 00 00 c3
668       | 7ff7c83c5540h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32i](n32,32i)                                                            | int blocklen<int>(N32 w, int t)                                                                               | 0f 1f 44 00 00 b8 01 00 00 00 c3
669       | 7ff7c83c5560h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32f](n32,32f)                                                            | int blocklen<float>(N32 w, float t)                                                                           | 0f 1f 44 00 00 b8 01 00 00 00 c3
670       | 7ff7c83c5580h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8u](n64,8u)                                                              | int blocklen<byte>(N64 w, byte t)                                                                             | 0f 1f 44 00 00 b8 08 00 00 00 c3
671       | 7ff7c83c55a0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8i](n64,8i)                                                              | int blocklen<sbyte>(N64 w, sbyte t)                                                                           | 0f 1f 44 00 00 b8 08 00 00 00 c3
672       | 7ff7c83c55c0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16u](n64,16u)                                                            | int blocklen<ushort>(N64 w, ushort t)                                                                         | 0f 1f 44 00 00 b8 04 00 00 00 c3
673       | 7ff7c83c55e0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16i](n64,16i)                                                            | int blocklen<short>(N64 w, short t)                                                                           | 0f 1f 44 00 00 b8 04 00 00 00 c3
674       | 7ff7c83c5600h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32u](n64,32u)                                                            | int blocklen<uint>(N64 w, uint t)                                                                             | 0f 1f 44 00 00 b8 02 00 00 00 c3
675       | 7ff7c83c5620h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32i](n64,32i)                                                            | int blocklen<int>(N64 w, int t)                                                                               | 0f 1f 44 00 00 b8 02 00 00 00 c3
676       | 7ff7c83c5640h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64u](n64,64u)                                                            | int blocklen<ulong>(N64 w, ulong t)                                                                           | 0f 1f 44 00 00 b8 01 00 00 00 c3
677       | 7ff7c83c5660h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64i](n64,64i)                                                            | int blocklen<long>(N64 w, long t)                                                                             | 0f 1f 44 00 00 b8 01 00 00 00 c3
678       | 7ff7c83c5680h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32f](n64,32f)                                                            | int blocklen<float>(N64 w, float t)                                                                           | 0f 1f 44 00 00 b8 02 00 00 00 c3
679       | 7ff7c83c56a0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64f](n64,64f)                                                            | int blocklen<double>(N64 w, double t)                                                                         | 0f 1f 44 00 00 b8 01 00 00 00 c3
680       | 7ff7c83c56c0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8u](n128,8u)                                                             | int blocklen<byte>(N128 w, byte t)                                                                            | 0f 1f 44 00 00 b8 10 00 00 00 c3
681       | 7ff7c83c56e0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8i](n128,8i)                                                             | int blocklen<sbyte>(N128 w, sbyte t)                                                                          | 0f 1f 44 00 00 b8 10 00 00 00 c3
682       | 7ff7c83c5700h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16u](n128,16u)                                                           | int blocklen<ushort>(N128 w, ushort t)                                                                        | 0f 1f 44 00 00 b8 08 00 00 00 c3
683       | 7ff7c83c5720h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16i](n128,16i)                                                           | int blocklen<short>(N128 w, short t)                                                                          | 0f 1f 44 00 00 b8 08 00 00 00 c3
684       | 7ff7c83c5740h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32u](n128,32u)                                                           | int blocklen<uint>(N128 w, uint t)                                                                            | 0f 1f 44 00 00 b8 04 00 00 00 c3
685       | 7ff7c83c5760h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32i](n128,32i)                                                           | int blocklen<int>(N128 w, int t)                                                                              | 0f 1f 44 00 00 b8 04 00 00 00 c3
686       | 7ff7c83c5780h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64u](n128,64u)                                                           | int blocklen<ulong>(N128 w, ulong t)                                                                          | 0f 1f 44 00 00 b8 02 00 00 00 c3
687       | 7ff7c83c57a0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64i](n128,64i)                                                           | int blocklen<long>(N128 w, long t)                                                                            | 0f 1f 44 00 00 b8 02 00 00 00 c3
688       | 7ff7c83c57c0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32f](n128,32f)                                                           | int blocklen<float>(N128 w, float t)                                                                          | 0f 1f 44 00 00 b8 04 00 00 00 c3
689       | 7ff7c83c57e0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64f](n128,64f)                                                           | int blocklen<double>(N128 w, double t)                                                                        | 0f 1f 44 00 00 b8 02 00 00 00 c3
690       | 7ff7c83c5800h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8u](n256,8u)                                                             | int blocklen<byte>(N256 w, byte t)                                                                            | 0f 1f 44 00 00 b8 20 00 00 00 c3
691       | 7ff7c83c5820h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8i](n256,8i)                                                             | int blocklen<sbyte>(N256 w, sbyte t)                                                                          | 0f 1f 44 00 00 b8 20 00 00 00 c3
692       | 7ff7c83c5840h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16u](n256,16u)                                                           | int blocklen<ushort>(N256 w, ushort t)                                                                        | 0f 1f 44 00 00 b8 10 00 00 00 c3
693       | 7ff7c83c5860h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16i](n256,16i)                                                           | int blocklen<short>(N256 w, short t)                                                                          | 0f 1f 44 00 00 b8 10 00 00 00 c3
694       | 7ff7c83c5880h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32u](n256,32u)                                                           | int blocklen<uint>(N256 w, uint t)                                                                            | 0f 1f 44 00 00 b8 08 00 00 00 c3
695       | 7ff7c83c58a0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32i](n256,32i)                                                           | int blocklen<int>(N256 w, int t)                                                                              | 0f 1f 44 00 00 b8 08 00 00 00 c3
696       | 7ff7c83c58c0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64u](n256,64u)                                                           | int blocklen<ulong>(N256 w, ulong t)                                                                          | 0f 1f 44 00 00 b8 04 00 00 00 c3
697       | 7ff7c83c58e0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64i](n256,64i)                                                           | int blocklen<long>(N256 w, long t)                                                                            | 0f 1f 44 00 00 b8 04 00 00 00 c3
698       | 7ff7c83c5900h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32f](n256,32f)                                                           | int blocklen<float>(N256 w, float t)                                                                          | 0f 1f 44 00 00 b8 08 00 00 00 c3
699       | 7ff7c83c5920h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64f](n256,64f)                                                           | int blocklen<double>(N256 w, double t)                                                                        | 0f 1f 44 00 00 b8 04 00 00 00 c3
700       | 7ff7c83c5940h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8u](n512,8u)                                                             | int blocklen<byte>(N512 w, byte t)                                                                            | 0f 1f 44 00 00 b8 40 00 00 00 c3
701       | 7ff7c83c5960h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8i](n512,8i)                                                             | int blocklen<sbyte>(N512 w, sbyte t)                                                                          | 0f 1f 44 00 00 b8 40 00 00 00 c3
702       | 7ff7c83c5980h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16u](n512,16u)                                                           | int blocklen<ushort>(N512 w, ushort t)                                                                        | 0f 1f 44 00 00 b8 20 00 00 00 c3
703       | 7ff7c83c59a0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16i](n512,16i)                                                           | int blocklen<short>(N512 w, short t)                                                                          | 0f 1f 44 00 00 b8 20 00 00 00 c3
704       | 7ff7c83c59c0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32u](n512,32u)                                                           | int blocklen<uint>(N512 w, uint t)                                                                            | 0f 1f 44 00 00 b8 10 00 00 00 c3
705       | 7ff7c83c59e0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32i](n512,32i)                                                           | int blocklen<int>(N512 w, int t)                                                                              | 0f 1f 44 00 00 b8 10 00 00 00 c3
706       | 7ff7c83c5a00h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64u](n512,64u)                                                           | int blocklen<ulong>(N512 w, ulong t)                                                                          | 0f 1f 44 00 00 b8 08 00 00 00 c3
707       | 7ff7c83c5a20h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64i](n512,64i)                                                           | int blocklen<long>(N512 w, long t)                                                                            | 0f 1f 44 00 00 b8 08 00 00 00 c3
708       | 7ff7c83c5a40h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32f](n512,32f)                                                           | int blocklen<float>(N512 w, float t)                                                                          | 0f 1f 44 00 00 b8 10 00 00 00 c3
709       | 7ff7c83c5a60h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64f](n512,64f)                                                           | int blocklen<double>(N512 w, double t)                                                                        | 0f 1f 44 00 00 b8 08 00 00 00 c3
710       | 7ff7c83c5a80h   | 17      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8u](b16x8u~in,32i)                                                       | ref byte blockref<byte>(in Block16<byte> src, int index)                                                      | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 03 c2 c3
711       | 7ff7c83c5ab0h   | 17      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8i](b16x8i~in,32i)                                                       | ref sbyte blockref<sbyte>(in Block16<sbyte> src, int index)                                                   | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 03 c2 c3
712       | 7ff7c83c5ae0h   | 16      | CTC_RET_SBB         | hex://blocks/api?blockref#blockref_g[16u](b16x16u~in,32i)                                                     | ref ushort blockref<ushort>(in Block16<ushort> src, int index)                                                | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 50 c3
713       | 7ff7c83c5b00h   | 16      | CTC_RET_SBB         | hex://blocks/api?blockref#blockref_g[16i](b16x16i~in,32i)                                                     | ref short blockref<short>(in Block16<short> src, int index)                                                   | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 50 c3
714       | 7ff7c83c5b20h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8u](b32x8u~in,32i)                                                       | ref byte blockref<byte>(in Block32<byte> src, int index)                                                      | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 03 c2 c3
715       | 7ff7c83c5b50h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8i](b32x8i~in,32i)                                                       | ref sbyte blockref<sbyte>(in Block32<sbyte> src, int index)                                                   | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 03 c2 c3
716       | 7ff7c83c5b80h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[16u](b32x16u~in,32i)                                                     | ref ushort blockref<ushort>(in Block32<ushort> src, int index)                                                | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 50 c3
717       | 7ff7c83c5bb0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[16i](b32x16i~in,32i)                                                     | ref short blockref<short>(in Block32<short> src, int index)                                                   | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 50 c3
718       | 7ff7c83c5be0h   | 16      | CTC_RET_SBB         | hex://blocks/api?blockref#blockref_g[32u](b32x32u~in,32i)                                                     | ref uint blockref<uint>(in Block32<uint> src, int index)                                                      | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
719       | 7ff7c83c5c00h   | 16      | CTC_RET_SBB         | hex://blocks/api?blockref#blockref_g[32i](b32x32i~in,32i)                                                     | ref int blockref<int>(in Block32<int> src, int index)                                                         | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
720       | 7ff7c83c5c20h   | 16      | CTC_RET_SBB         | hex://blocks/api?blockref#blockref_g[32f](b32x32f~in,32i)                                                     | ref float blockref<float>(in Block32<float> src, int index)                                                   | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
721       | 7ff7c83c5c40h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8u](b64x8u~in,32i)                                                       | ref byte blockref<byte>(in Block64<byte> src, int index)                                                      | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 03 c2 c3
722       | 7ff7c83c5c70h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8i](b64x8i~in,32i)                                                       | ref sbyte blockref<sbyte>(in Block64<sbyte> src, int index)                                                   | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 03 c2 c3
723       | 7ff7c83c5ca0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[16u](b64x16u~in,32i)                                                     | ref ushort blockref<ushort>(in Block64<ushort> src, int index)                                                | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 50 c3
724       | 7ff7c83c5cd0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[16i](b64x16i~in,32i)                                                     | ref short blockref<short>(in Block64<short> src, int index)                                                   | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 50 c3
725       | 7ff7c83c5d00h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[32u](b64x32u~in,32i)                                                     | ref uint blockref<uint>(in Block64<uint> src, int index)                                                      | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
726       | 7ff7c83c5d30h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[32i](b64x32i~in,32i)                                                     | ref int blockref<int>(in Block64<int> src, int index)                                                         | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
727       | 7ff7c83c5d60h   | 16      | CTC_RET_SBB         | hex://blocks/api?blockref#blockref_g[64u](b64x64u~in,32i)                                                     | ref ulong blockref<ulong>(in Block64<ulong> src, int index)                                                   | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
728       | 7ff7c83c5d80h   | 16      | CTC_RET_SBB         | hex://blocks/api?blockref#blockref_g[64i](b64x64i~in,32i)                                                     | ref long blockref<long>(in Block64<long> src, int index)                                                      | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
729       | 7ff7c83c5da0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[32f](b64x32f~in,32i)                                                     | ref float blockref<float>(in Block64<float> src, int index)                                                   | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
730       | 7ff7c83c5dd0h   | 16      | CTC_RET_SBB         | hex://blocks/api?blockref#blockref_g[64f](b64x64f~in,32i)                                                     | ref double blockref<double>(in Block64<double> src, int index)                                                | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
731       | 7ff7c83c5df0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8u](b128x8u~in,32i)                                                      | ref byte blockref<byte>(in Block128<byte> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 03 c2 c3
732       | 7ff7c83c5e20h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8i](b128x8i~in,32i)                                                      | ref sbyte blockref<sbyte>(in Block128<sbyte> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 03 c2 c3
733       | 7ff7c83c5e50h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[16u](b128x16u~in,32i)                                                    | ref ushort blockref<ushort>(in Block128<ushort> src, int index)                                               | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 50 c3
734       | 7ff7c83c5e80h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[16i](b128x16i~in,32i)                                                    | ref short blockref<short>(in Block128<short> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 50 c3
735       | 7ff7c83c5eb0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[32u](b128x32u~in,32i)                                                    | ref uint blockref<uint>(in Block128<uint> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
736       | 7ff7c83c5ee0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[32i](b128x32i~in,32i)                                                    | ref int blockref<int>(in Block128<int> src, int index)                                                        | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
737       | 7ff7c83c5f10h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[64u](b128x64u~in,32i)                                                    | ref ulong blockref<ulong>(in Block128<ulong> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
738       | 7ff7c83c5f40h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[64i](b128x64i~in,32i)                                                    | ref long blockref<long>(in Block128<long> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
739       | 7ff7c83c5f70h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[32f](b128x32f~in,32i)                                                    | ref float blockref<float>(in Block128<float> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
740       | 7ff7c83c5fa0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[64f](b128x64f~in,32i)                                                    | ref double blockref<double>(in Block128<double> src, int index)                                               | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
741       | 7ff7c83c63d0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8u](b256x8u~in,32i)                                                      | ref byte blockref<byte>(in Block256<byte> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 03 c2 c3
742       | 7ff7c83c6400h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8i](b256x8i~in,32i)                                                      | ref sbyte blockref<sbyte>(in Block256<sbyte> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 03 c2 c3
743       | 7ff7c83c6430h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[16u](b256x16u~in,32i)                                                    | ref ushort blockref<ushort>(in Block256<ushort> src, int index)                                               | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 50 c3
744       | 7ff7c83c6460h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[16i](b256x16i~in,32i)                                                    | ref short blockref<short>(in Block256<short> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 50 c3
745       | 7ff7c83c6490h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[32u](b256x32u~in,32i)                                                    | ref uint blockref<uint>(in Block256<uint> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
746       | 7ff7c83c64c0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[32i](b256x32i~in,32i)                                                    | ref int blockref<int>(in Block256<int> src, int index)                                                        | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
747       | 7ff7c83c64f0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[64u](b256x64u~in,32i)                                                    | ref ulong blockref<ulong>(in Block256<ulong> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
748       | 7ff7c83c6520h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[64i](b256x64i~in,32i)                                                    | ref long blockref<long>(in Block256<long> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
749       | 7ff7c83c6550h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[32f](b256x32f~in,32i)                                                    | ref float blockref<float>(in Block256<float> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
750       | 7ff7c83c6580h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[64f](b256x64f~in,32i)                                                    | ref double blockref<double>(in Block256<double> src, int index)                                               | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
751       | 7ff7c83c65b0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8u](b512x8u~in,32i)                                                      | ref byte blockref<byte>(in Block512<byte> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 06 48 63 d2 48 03 c2 c3
752       | 7ff7c83c65e0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8i](b512x8i~in,32i)                                                      | ref sbyte blockref<sbyte>(in Block512<sbyte> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 06 48 63 d2 48 03 c2 c3
753       | 7ff7c83c6610h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[16u](b512x16u~in,32i)                                                    | ref ushort blockref<ushort>(in Block512<ushort> src, int index)                                               | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 8d 04 50 c3
754       | 7ff7c83c6640h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[16i](b512x16i~in,32i)                                                    | ref short blockref<short>(in Block512<short> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 8d 04 50 c3
755       | 7ff7c83c6a70h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[32u](b512x32u~in,32i)                                                    | ref uint blockref<uint>(in Block512<uint> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 c3
756       | 7ff7c83c6aa0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[32i](b512x32i~in,32i)                                                    | ref int blockref<int>(in Block512<int> src, int index)                                                        | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 c3
757       | 7ff7c83c6ad0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[64u](b512x64u~in,32i)                                                    | ref ulong blockref<ulong>(in Block512<ulong> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 c3
758       | 7ff7c83c6b00h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[64i](b512x64i~in,32i)                                                    | ref long blockref<long>(in Block512<long> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 c3
759       | 7ff7c83c6b30h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[32f](b512x32f~in,32i)                                                    | ref float blockref<float>(in Block512<float> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 c3
760       | 7ff7c83c6b60h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[64f](b512x64f~in,32i)                                                    | ref double blockref<double>(in Block512<double> src, int index)                                               | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 c3
761       | 7ff7c83c6b90h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b16x8u~in)                                                      | void broadcast<byte>(byte data, in Block16<byte> dst)                                                         | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 78 32 ac c7 f7 7f 00 00 48 ff e0
762       | 7ff7c83c6bc0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b16x8i~in)                                                      | void broadcast<sbyte>(sbyte data, in Block16<sbyte> dst)                                                      | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 20 9a 09 c8 f7 7f 00 00 48 ff e0
763       | 7ff7c83c6bf0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b16x16u~in)                                                   | void broadcast<ushort>(ushort data, in Block16<ushort> dst)                                                   | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 90 7f ac c7 f7 7f 00 00 48 ff e0
764       | 7ff7c83c6c20h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b16x16i~in)                                                   | void broadcast<short>(short data, in Block16<short> dst)                                                      | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 70 a2 09 c8 f7 7f 00 00 48 ff e0
765       | 7ff7c83c6c50h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b32x8u~in)                                                      | void broadcast<byte>(byte data, in Block32<byte> dst)                                                         | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 78 32 ac c7 f7 7f 00 00 48 ff e0
766       | 7ff7c83c6c80h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b32x8i~in)                                                      | void broadcast<sbyte>(sbyte data, in Block32<sbyte> dst)                                                      | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 20 9a 09 c8 f7 7f 00 00 48 ff e0
767       | 7ff7c83c70c0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b32x16u~in)                                                   | void broadcast<ushort>(ushort data, in Block32<ushort> dst)                                                   | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 90 7f ac c7 f7 7f 00 00 48 ff e0
768       | 7ff7c83c70f0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b32x16i~in)                                                   | void broadcast<short>(short data, in Block32<short> dst)                                                      | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 70 a2 09 c8 f7 7f 00 00 48 ff e0
769       | 7ff7c83c7120h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32u](32u,b32x32u~in)                                                   | void broadcast<uint>(uint data, in Block32<uint> dst)                                                         | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 a0 81 ac c7 f7 7f 00 00 48 ff e0
770       | 7ff7c83c7150h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32i](32i,b32x32i~in)                                                   | void broadcast<int>(int data, in Block32<int> dst)                                                            | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 30 15 ab c7 f7 7f 00 00 48 ff e0
771       | 7ff7c83c7180h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32f](32f,b32x32f~in)                                                   | void broadcast<float>(float data, in Block32<float> dst)                                                      | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 70 b2 09 c8 f7 7f 00 00 48 ff e0
772       | 7ff7c83c71b0h   | 106     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n16,16u)                                                                        | Block16<ushort> cells(N16 n, ushort x0)                                                                       | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 48 b9 90 c4 12 c8 f7 7f 00 00 ba 01 00 00 00 e8 05 fc e9 5e 66 89 70 10 48 83 c0 10 ba 01 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 83 ec e9 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
773       | 7ff7c83c7240h   | 210     | CTC_INTRx2          | hex://blocks/api?cells#cells_(n16,64u)                                                                        | Block16<ulong> cells(N16 n, ulong x0)                                                                         | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 48 b9 38 d6 ba c7 f7 7f 00 00 ba 01 00 00 00 e8 75 fb e9 5e 48 8b c8 48 89 71 10 b8 01 00 00 00 45 33 c0 99 41 f7 f8 b8 01 00 00 00 83 e8 00 75 3b 48 83 c1 10 b8 01 00 00 00 48 8d 54 24 30 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 30 48 89 0a 89 42 08 48 8b fb 48 8d 74 24 30 e8 da eb e9 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 ba 1a 00 00 00 41 b8 01 00 00 00 49 b9 a8 7a 5c 43 7e 01 00 00 4d 8b 09 48 b9 b0 7a 5c 43 7e 01 00 00 48 8b 09 48 8d 44 24 28 44 88 00 89 50 04 48 8b 54 24 28 48 89 54 24 20 ba 01 00 00 00 4d 8b c1 4c 8b c9 b9 10 00 00 00 e8 56 d3 38 ff
774       | 7ff7c83c7330h   | 210     | CTC_INTRx2          | hex://blocks/api?cells#cells_(n32,64u)                                                                        | Block32<ulong> cells(N32 n, ulong x0)                                                                         | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 48 b9 38 d6 ba c7 f7 7f 00 00 ba 01 00 00 00 e8 85 fa e9 5e 48 8b c8 48 89 71 10 b8 01 00 00 00 45 33 c0 99 41 f7 f8 b8 01 00 00 00 83 e8 00 75 3b 48 83 c1 10 b8 01 00 00 00 48 8d 54 24 30 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 30 48 89 0a 89 42 08 48 8b fb 48 8d 74 24 30 e8 ea ea e9 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 ba 2a 00 00 00 41 b8 01 00 00 00 49 b9 a8 7a 5c 43 7e 01 00 00 4d 8b 09 48 b9 b0 7a 5c 43 7e 01 00 00 48 8b 09 48 8d 44 24 28 44 88 00 89 50 04 48 8b 54 24 28 48 89 54 24 20 ba 01 00 00 00 4d 8b c1 4c 8b c9 b9 20 00 00 00 e8 66 d2 38 ff
775       | 7ff7c83c7420h   | 135     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n32,8u,8u,8u,8u)                                                                | Block32<byte> cells(N32 n, byte x0, byte x1, byte x2, byte x3)                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 10 ea 71 c7 f7 7f 00 00 ba 04 00 00 00 e8 92 f9 e9 5e 40 88 70 10 40 88 78 11 8b b4 24 80 00 00 00 40 88 70 12 8b b4 24 88 00 00 00 40 88 70 13 48 83 c0 10 ba 04 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 f6 e9 e9 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
776       | 7ff7c83c74d0h   | 113     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n32,16u,16u)                                                                    | Block32<ushort> cells(N32 n, ushort x0, ushort x1)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 90 c4 12 c8 f7 7f 00 00 ba 02 00 00 00 e8 e2 f8 e9 5e 66 89 70 10 66 89 78 12 48 83 c0 10 ba 02 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 5c e9 e9 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
777       | 7ff7c83c7560h   | 105     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n32,32u)                                                                        | Block32<uint> cells(N32 n, uint x0)                                                                           | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 48 b9 28 b4 12 c8 f7 7f 00 00 ba 01 00 00 00 e8 55 f8 e9 5e 89 70 10 48 83 c0 10 ba 01 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 d4 e8 e9 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
778       | 7ff7c83c75f0h   | 179     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n64,8u,8u,8u,8u,8u,8u,8u,8u)                                                    | Block64<byte> cells(N64 n, byte x0, byte x1, byte x2, byte x3, byte x4, byte x5, byte x6, byte x7)            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 10 ea 71 c7 f7 7f 00 00 ba 08 00 00 00 e8 c2 f7 e9 5e 40 88 70 10 40 88 78 11 8b b4 24 80 00 00 00 40 88 70 12 8b b4 24 88 00 00 00 40 88 70 13 8b b4 24 90 00 00 00 40 88 70 14 8b b4 24 98 00 00 00 40 88 70 15 8b b4 24 a0 00 00 00 40 88 70 16 8b b4 24 a8 00 00 00 40 88 70 17 48 83 c0 10 ba 08 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 fa e7 e9 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
779       | 7ff7c83c76c0h   | 135     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n64,16u,16u,16u,16u)                                                            | Block64<ushort> cells(N64 n, ushort x0, ushort x1, ushort x2, ushort x3)                                      | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 90 c4 12 c8 f7 7f 00 00 ba 04 00 00 00 e8 f2 f6 e9 5e 66 89 70 10 66 89 78 12 8b b4 24 80 00 00 00 66 89 70 14 8b b4 24 88 00 00 00 66 89 70 16 48 83 c0 10 ba 04 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 56 e7 e9 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
780       | 7ff7c83c7770h   | 111     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n64,32u,32u)                                                                    | Block64<uint> cells(N64 n, uint x0, uint x1)                                                                  | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 28 b4 12 c8 f7 7f 00 00 ba 02 00 00 00 e8 42 f6 e9 5e 89 70 10 89 78 14 48 83 c0 10 ba 02 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 be e6 e9 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
781       | 7ff7c83c7800h   | 106     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n64,64u)                                                                        | Block64<ulong> cells(N64 n, ulong x0)                                                                         | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 48 b9 38 d6 ba c7 f7 7f 00 00 ba 01 00 00 00 e8 b5 f5 e9 5e 48 89 70 10 48 83 c0 10 ba 01 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 33 e6 e9 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
782       | 7ff7c83c7890h   | 272     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n128,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u)                           | Block128<byte> cells(N128 n, byte x0, byte x1, byte x2, byte x3, byte x4, byte x5, byte x6, byte x7, byte x8, byte x9, byte xA, byte xB, byte xC, byte xD, byte xE, byte xF)| 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 89 44 24 38 48 8b d9 41 8b f0 41 8b f9 48 b9 10 ea 71 c7 f7 7f 00 00 ba 10 00 00 00 e8 1d f5 e9 5e 40 88 70 10 40 88 78 11 8b b4 24 80 00 00 00 40 88 70 12 8b b4 24 88 00 00 00 40 88 70 13 8b b4 24 90 00 00 00 40 88 70 14 8b b4 24 98 00 00 00 40 88 70 15 8b b4 24 a0 00 00 00 40 88 70 16 8b b4 24 a8 00 00 00 40 88 70 17 8b b4 24 b0 00 00 00 40 88 70 18 8b b4 24 b8 00 00 00 40 88 70 19 8b b4 24 c0 00 00 00 40 88 70 1a 8b b4 24 c8 00 00 00 40 88 70 1b 8b b4 24 d0 00 00 00 40 88 70 1c 8b b4 24 d8 00 00 00 40 88 70 1d 8b b4 24 e0 00 00 00 40 88 70 1e 8b b4 24 e8 00 00 00 40 88 70 1f 48 83 c0 10 ba 10 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 fd e4 e9 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
783       | 7ff7c83c79c0h   | 179     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n128,16u,16u,16u,16u,16u,16u,16u,16u)                                           | Block128<ushort> cells(N128 n, ushort x0, ushort x1, ushort x2, ushort x3, ushort x4, ushort x5, ushort x6, ushort x7)| 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 90 c4 12 c8 f7 7f 00 00 ba 08 00 00 00 e8 f2 f3 e9 5e 66 89 70 10 66 89 78 12 8b b4 24 80 00 00 00 66 89 70 14 8b b4 24 88 00 00 00 66 89 70 16 8b b4 24 90 00 00 00 66 89 70 18 8b b4 24 98 00 00 00 66 89 70 1a 8b b4 24 a0 00 00 00 66 89 70 1c 8b b4 24 a8 00 00 00 66 89 70 1e 48 83 c0 10 ba 08 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 2a e4 e9 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
784       | 7ff7c83c7a90h   | 131     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n128,32u,32u,32u,32u)                                                           | Block128<uint> cells(N128 n, uint x0, uint x1, uint x2, uint x3)                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 28 b4 12 c8 f7 7f 00 00 ba 04 00 00 00 e8 22 f3 e9 5e 89 70 10 89 78 14 8b b4 24 80 00 00 00 89 70 18 8b b4 24 88 00 00 00 89 70 1c 48 83 c0 10 ba 04 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 8a e3 e9 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
785       | 7ff7c83c7b30h   | 113     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n128,64u,64u)                                                                   | Block128<ulong> cells(N128 n, ulong x0, ulong x1)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 49 8b f9 48 b9 38 d6 ba c7 f7 7f 00 00 ba 02 00 00 00 e8 82 f2 e9 5e 48 89 70 10 48 89 78 18 48 83 c0 10 ba 02 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 fc e2 e9 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
786       | 7ff7c83c7bc0h   | 448     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n256,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u)| Block256<byte> cells(N256 n, byte x0, byte x1, byte x2, byte x3, byte x4, byte x5, byte x6, byte x7, byte x8, byte x9, byte xA, byte xB, byte xC, byte xD, byte xE, byte xF, byte x10, byte x11, byte x12, byte x13, byte x14, byte x15, byte x16, byte x17, byte x18, byte x19, byte x1A, byte x1B, byte x1C, byte x1D, byte x1E, byte x1F)| 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 89 44 24 38 48 8b d9 41 8b f0 41 8b f9 48 b9 10 ea 71 c7 f7 7f 00 00 ba 20 00 00 00 e8 ed f1 e9 5e 40 88 70 10 40 88 78 11 8b b4 24 80 00 00 00 40 88 70 12 8b b4 24 88 00 00 00 40 88 70 13 8b b4 24 90 00 00 00 40 88 70 14 8b b4 24 98 00 00 00 40 88 70 15 8b b4 24 a0 00 00 00 40 88 70 16 8b b4 24 a8 00 00 00 40 88 70 17 8b b4 24 b0 00 00 00 40 88 70 18 8b b4 24 b8 00 00 00 40 88 70 19 8b b4 24 c0 00 00 00 40 88 70 1a 8b b4 24 c8 00 00 00 40 88 70 1b 8b b4 24 d0 00 00 00 40 88 70 1c 8b b4 24 d8 00 00 00 40 88 70 1d 8b b4 24 e0 00 00 00 40 88 70 1e 8b b4 24 e8 00 00 00 40 88 70 1f 8b b4 24 f0 00 00 00 40 88 70 20 8b b4 24 f8 00 00 00 40 88 70 21 8b b4 24 00 01 00 00 40 88 70 22 8b b4 24 08 01 00 00 40 88 70 23 8b b4 24 10 01 00 00 40 88 70 24 8b b4 24 18 01 00 00 40 88 70 25 8b b4 24 20 01 00 00 40 88 70 26 8b b4 24 28 01 00 00 40 88 70 27 8b b4 24 30 01 00 00 40 88 70 28 8b b4 24 38 01 00 00 40 88 70 29 8b b4 24 40 01 00 00 40 88 70 2a 8b b4 24 48 01 00 00 40 88 70 2b 8b b4 24 50 01 00 00 40 88 70 2c 8b b4 24 58 01 00 00 40 88 70 2d 8b b4 24 60 01 00 00 40 88 70 2e 8b b4 24 68 01 00 00 40 88 70 2f 48 83 c0 10 ba 20 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 1d e1 e9 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
787       | 7ff7c83c7da0h   | 272     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n256,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u)           | Block256<ushort> cells(N256 n, ushort x0, ushort x1, ushort x2, ushort x3, ushort x4, ushort x5, ushort x6, ushort x7, ushort x8, ushort x9, ushort xA, ushort xB, ushort xC, ushort xD, ushort xE, ushort xF)| 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 89 44 24 38 48 8b d9 41 8b f0 41 8b f9 48 b9 90 c4 12 c8 f7 7f 00 00 ba 10 00 00 00 e8 0d f0 e9 5e 66 89 70 10 66 89 78 12 8b b4 24 80 00 00 00 66 89 70 14 8b b4 24 88 00 00 00 66 89 70 16 8b b4 24 90 00 00 00 66 89 70 18 8b b4 24 98 00 00 00 66 89 70 1a 8b b4 24 a0 00 00 00 66 89 70 1c 8b b4 24 a8 00 00 00 66 89 70 1e 8b b4 24 b0 00 00 00 66 89 70 20 8b b4 24 b8 00 00 00 66 89 70 22 8b b4 24 c0 00 00 00 66 89 70 24 8b b4 24 c8 00 00 00 66 89 70 26 8b b4 24 d0 00 00 00 66 89 70 28 8b b4 24 d8 00 00 00 66 89 70 2a 8b b4 24 e0 00 00 00 66 89 70 2c 8b b4 24 e8 00 00 00 66 89 70 2e 48 83 c0 10 ba 10 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ed df e9 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
788       | 7ff7c83c7ed0h   | 171     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n256,32u,32u,32u,32u,32u,32u,32u,32u)                                           | Block256<uint> cells(N256 n, uint x0, uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7)          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 28 b4 12 c8 f7 7f 00 00 ba 08 00 00 00 e8 e2 ee e9 5e 89 70 10 89 78 14 8b b4 24 80 00 00 00 89 70 18 8b b4 24 88 00 00 00 89 70 1c 8b b4 24 90 00 00 00 89 70 20 8b b4 24 98 00 00 00 89 70 24 8b b4 24 a0 00 00 00 89 70 28 8b b4 24 a8 00 00 00 89 70 2c 48 83 c0 10 ba 08 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 22 df e9 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
789       | 7ff7c83c7fa0h   | 137     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n256,64u,64u,64u,64u)                                                           | Block256<ulong> cells(N256 n, ulong x0, ulong x1, ulong x2, ulong x3)                                         | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 49 8b f9 48 b9 38 d6 ba c7 f7 7f 00 00 ba 04 00 00 00 e8 12 ee e9 5e 48 89 70 10 48 89 78 18 48 8b b4 24 80 00 00 00 48 89 70 20 48 8b b4 24 88 00 00 00 48 89 70 28 48 83 c0 10 ba 04 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 74 de e9 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
