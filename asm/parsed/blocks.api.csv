Sequence  | Address         | Length  | TermCode            | Uri                                                                                                           | OpSig                                                                                                         | Data
0         | 7ff7c82adef0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n16,span8u)                                                      | Block16<byte> unsafeload<byte>(N16 w, Span<byte> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 64 7f fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
1         | 7ff7c82adf60h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n16,span8i)                                                      | Block16<sbyte> unsafeload<sbyte>(N16 w, Span<sbyte> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 f4 7e fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
2         | 7ff7c82adfd0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n16,span16u)                                                    | Block16<ushort> unsafeload<ushort>(N16 w, Span<ushort> src)                                                   | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 84 7e fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
3         | 7ff7c82ae440h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n16,span16i)                                                    | Block16<short> unsafeload<short>(N16 w, Span<short> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 14 7a fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
4         | 7ff7c82ae4b0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n32,span8u)                                                      | Block32<byte> unsafeload<byte>(N32 w, Span<byte> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 a4 79 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
5         | 7ff7c82ae520h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n32,span8i)                                                      | Block32<sbyte> unsafeload<sbyte>(N32 w, Span<sbyte> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 34 79 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
6         | 7ff7c82ae590h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n32,span16u)                                                    | Block32<ushort> unsafeload<ushort>(N32 w, Span<ushort> src)                                                   | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 c4 78 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
7         | 7ff7c82ae600h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n32,span16i)                                                    | Block32<short> unsafeload<short>(N32 w, Span<short> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 54 78 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
8         | 7ff7c82ae670h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32u](n32,span32u)                                                    | Block32<uint> unsafeload<uint>(N32 w, Span<uint> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 e4 77 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
9         | 7ff7c82aeae0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32i](n32,span32i)                                                    | Block32<int> unsafeload<int>(N32 w, Span<int> src)                                                            | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 74 73 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
10        | 7ff7c82aeb50h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32f](n32,span32f)                                                    | Block32<float> unsafeload<float>(N32 w, Span<float> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 04 73 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
11        | 7ff7c82aebc0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n64,span8u)                                                      | Block64<byte> unsafeload<byte>(N64 w, Span<byte> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 94 72 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
12        | 7ff7c82aec30h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n64,span8i)                                                      | Block64<sbyte> unsafeload<sbyte>(N64 w, Span<sbyte> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 24 72 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
13        | 7ff7c82aeca0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n64,span16u)                                                    | Block64<ushort> unsafeload<ushort>(N64 w, Span<ushort> src)                                                   | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 b4 71 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
14        | 7ff7c82af110h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n64,span16i)                                                    | Block64<short> unsafeload<short>(N64 w, Span<short> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 44 6d fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
15        | 7ff7c82af180h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32u](n64,span32u)                                                    | Block64<uint> unsafeload<uint>(N64 w, Span<uint> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 d4 6c fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
16        | 7ff7c82af1f0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32i](n64,span32i)                                                    | Block64<int> unsafeload<int>(N64 w, Span<int> src)                                                            | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 64 6c fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
17        | 7ff7c82af260h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64u](n64,span64u)                                                    | Block64<ulong> unsafeload<ulong>(N64 w, Span<ulong> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 f4 6b fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
18        | 7ff7c82af2d0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64i](n64,span64i)                                                    | Block64<long> unsafeload<long>(N64 w, Span<long> src)                                                         | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 84 6b fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
19        | 7ff7c82af340h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32f](n64,span32f)                                                    | Block64<float> unsafeload<float>(N64 w, Span<float> src)                                                      | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 14 6b fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
20        | 7ff7c82af3b0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64f](n64,span64f)                                                    | Block64<double> unsafeload<double>(N64 w, Span<double> src)                                                   | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 a4 6a fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
21        | 7ff7c82af820h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n128,span8u)                                                     | Block128<byte> unsafeload<byte>(N128 w, Span<byte> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 34 66 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
22        | 7ff7c82af890h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n128,span8i)                                                     | Block128<sbyte> unsafeload<sbyte>(N128 w, Span<sbyte> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 c4 65 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
23        | 7ff7c82af900h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n128,span16u)                                                   | Block128<ushort> unsafeload<ushort>(N128 w, Span<ushort> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 54 65 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
24        | 7ff7c82af970h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n128,span16i)                                                   | Block128<short> unsafeload<short>(N128 w, Span<short> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 e4 64 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
25        | 7ff7c82af9e0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32u](n128,span32u)                                                   | Block128<uint> unsafeload<uint>(N128 w, Span<uint> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 74 64 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
26        | 7ff7c82afe50h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32i](n128,span32i)                                                   | Block128<int> unsafeload<int>(N128 w, Span<int> src)                                                          | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 04 60 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
27        | 7ff7c82afec0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64u](n128,span64u)                                                   | Block128<ulong> unsafeload<ulong>(N128 w, Span<ulong> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 94 5f fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
28        | 7ff7c82aff30h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64i](n128,span64i)                                                   | Block128<long> unsafeload<long>(N128 w, Span<long> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 24 5f fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
29        | 7ff7c82affa0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32f](n128,span32f)                                                   | Block128<float> unsafeload<float>(N128 w, Span<float> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 b4 5e fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
30        | 7ff7c82b0010h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64f](n128,span64f)                                                   | Block128<double> unsafeload<double>(N128 w, Span<double> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 44 5e fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
31        | 7ff7c82b0480h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n256,span8u)                                                     | Block256<byte> unsafeload<byte>(N256 w, Span<byte> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 d4 59 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
32        | 7ff7c82b04f0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n256,span8i)                                                     | Block256<sbyte> unsafeload<sbyte>(N256 w, Span<sbyte> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 64 59 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
33        | 7ff7c82b0560h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n256,span16u)                                                   | Block256<ushort> unsafeload<ushort>(N256 w, Span<ushort> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 f4 58 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
34        | 7ff7c82b05d0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n256,span16i)                                                   | Block256<short> unsafeload<short>(N256 w, Span<short> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 84 58 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
35        | 7ff7c82b0640h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32u](n256,span32u)                                                   | Block256<uint> unsafeload<uint>(N256 w, Span<uint> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 14 58 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
36        | 7ff7c82b06b0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32i](n256,span32i)                                                   | Block256<int> unsafeload<int>(N256 w, Span<int> src)                                                          | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 a4 57 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
37        | 7ff7c82b0720h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64u](n256,span64u)                                                   | Block256<ulong> unsafeload<ulong>(N256 w, Span<ulong> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 34 57 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
38        | 7ff7c82b0790h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64i](n256,span64i)                                                   | Block256<long> unsafeload<long>(N256 w, Span<long> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 c4 56 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
39        | 7ff7c82b0800h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32f](n256,span32f)                                                   | Block256<float> unsafeload<float>(N256 w, Span<float> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 54 56 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
40        | 7ff7c82b0870h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64f](n256,span64f)                                                   | Block256<double> unsafeload<double>(N256 w, Span<double> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 e4 55 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
41        | 7ff7c82b08e0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8u](n512,span8u)                                                     | Block512<byte> unsafeload<byte>(N512 w, Span<byte> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 74 55 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
42        | 7ff7c82b0d80h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[8i](n512,span8i)                                                     | Block512<sbyte> unsafeload<sbyte>(N512 w, Span<sbyte> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 d4 50 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
43        | 7ff7c82b0df0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16u](n512,span16u)                                                   | Block512<ushort> unsafeload<ushort>(N512 w, Span<ushort> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 64 50 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
44        | 7ff7c82b0e60h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[16i](n512,span16i)                                                   | Block512<short> unsafeload<short>(N512 w, Span<short> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 f4 4f fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
45        | 7ff7c82b0ed0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32u](n512,span32u)                                                   | Block512<uint> unsafeload<uint>(N512 w, Span<uint> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 84 4f fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
46        | 7ff7c82b0f40h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32i](n512,span32i)                                                   | Block512<int> unsafeload<int>(N512 w, Span<int> src)                                                          | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 14 4f fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
47        | 7ff7c82b13b0h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64u](n512,span64u)                                                   | Block512<ulong> unsafeload<ulong>(N512 w, Span<ulong> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 a4 4a fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
48        | 7ff7c82b1420h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64i](n512,span64i)                                                   | Block512<long> unsafeload<long>(N512 w, Span<long> src)                                                       | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 34 4a fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
49        | 7ff7c82b1490h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[32f](n512,span32f)                                                   | Block512<float> unsafeload<float>(N512 w, Span<float> src)                                                    | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 c4 49 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
50        | 7ff7c82b1500h   | 73      | CTC_RET_INTR        | hex://blocks/api?unsafeload#unsafeload_g[64f](n512,span64f)                                                   | Block512<double> unsafeload<double>(N512 w, Span<double> src)                                                 | 57 56 53 48 83 ec 10 c5 f8 77 33 c0 48 89 04 24 48 8b d9 48 8d 04 24 c5 f8 57 c0 c5 fa 7f 00 49 8b 00 41 8b 50 08 48 8d 0c 24 48 89 01 89 51 08 48 8b fb 48 8d 34 24 e8 54 49 fb 5e 48 a5 48 8b c3 48 83 c4 10 5b 5e 5f c3
51        | 7ff7c82b1970h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[8u](8u~in,b256x8u~in,32i,32i)                                                  | void write<byte>(in byte src, in Block256<byte> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 c4 46 fb 5e 90 c3
52        | 7ff7c82b19a0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[8i](8u~in,b256x8i~in,32i,32i)                                                  | void write<sbyte>(in byte src, in Block256<sbyte> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 94 46 fb 5e 90 c3
53        | 7ff7c82b19d0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[16u](8u~in,b256x16u~in,32i,32i)                                                | void write<ushort>(in byte src, in Block256<ushort> dst, int offset, int count)                               | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 64 46 fb 5e 90 c3
54        | 7ff7c82b1a00h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[16i](8u~in,b256x16i~in,32i,32i)                                                | void write<short>(in byte src, in Block256<short> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 34 46 fb 5e 90 c3
55        | 7ff7c82b1a30h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32u](8u~in,b256x32u~in,32i,32i)                                                | void write<uint>(in byte src, in Block256<uint> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 04 46 fb 5e 90 c3
56        | 7ff7c82b1a60h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32i](8u~in,b256x32i~in,32i,32i)                                                | void write<int>(in byte src, in Block256<int> dst, int offset, int count)                                     | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 d4 45 fb 5e 90 c3
57        | 7ff7c82b1a90h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64u](8u~in,b256x64u~in,32i,32i)                                                | void write<ulong>(in byte src, in Block256<ulong> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 a4 45 fb 5e 90 c3
58        | 7ff7c82b1ac0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64i](8u~in,b256x64i~in,32i,32i)                                                | void write<long>(in byte src, in Block256<long> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 74 45 fb 5e 90 c3
59        | 7ff7c82b1af0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32f](8u~in,b256x32f~in,32i,32i)                                                | void write<float>(in byte src, in Block256<float> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 44 45 fb 5e 90 c3
60        | 7ff7c82b1b20h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64f](8u~in,b256x64f~in,32i,32i)                                                | void write<double>(in byte src, in Block256<double> dst, int offset, int count)                               | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 14 45 fb 5e 90 c3
61        | 7ff7c82b1b50h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[8u](8u~in,b512x8u~in,32i,32i)                                                  | void write<byte>(in byte src, in Block512<byte> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 e4 44 fb 5e 90 c3
62        | 7ff7c82b1b80h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[8i](8u~in,b512x8i~in,32i,32i)                                                  | void write<sbyte>(in byte src, in Block512<sbyte> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 b4 44 fb 5e 90 c3
63        | 7ff7c82b1bb0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[16u](8u~in,b512x16u~in,32i,32i)                                                | void write<ushort>(in byte src, in Block512<ushort> dst, int offset, int count)                               | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 84 44 fb 5e 90 c3
64        | 7ff7c82b1be0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[16i](8u~in,b512x16i~in,32i,32i)                                                | void write<short>(in byte src, in Block512<short> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 54 44 fb 5e 90 c3
65        | 7ff7c82b1c10h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32u](8u~in,b512x32u~in,32i,32i)                                                | void write<uint>(in byte src, in Block512<uint> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 24 44 fb 5e 90 c3
66        | 7ff7c82b1c40h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32i](8u~in,b512x32i~in,32i,32i)                                                | void write<int>(in byte src, in Block512<int> dst, int offset, int count)                                     | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 f4 43 fb 5e 90 c3
67        | 7ff7c82b1c70h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64u](8u~in,b512x64u~in,32i,32i)                                                | void write<ulong>(in byte src, in Block512<ulong> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 c4 43 fb 5e 90 c3
68        | 7ff7c82b1ca0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64i](8u~in,b512x64i~in,32i,32i)                                                | void write<long>(in byte src, in Block512<long> dst, int offset, int count)                                   | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 94 43 fb 5e 90 c3
69        | 7ff7c82b1cd0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[32f](8u~in,b512x32f~in,32i,32i)                                                | void write<float>(in byte src, in Block512<float> dst, int offset, int count)                                 | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 64 43 fb 5e 90 c3
70        | 7ff7c82b1d00h   | 30      | CTC_RET_Zx3         | hex://blocks/api?write#write_g[64f](8u~in,b512x64f~in,32i,32i)                                                | void write<double>(in byte src, in Block512<double> dst, int offset, int count)                               | 0f 1f 44 00 00 48 8b c1 48 8b 0a 49 63 d0 48 03 ca 48 8b d0 45 8b c1 e8 34 43 fb 5e 90 c3
71        | 7ff7c82b2140h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b64x8u~in)                                                      | void broadcast<byte>(byte data, in Block64<byte> dst)                                                         | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 48 0b af c7 f7 7f 00 00 48 ff e0
72        | 7ff7c82b2170h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b64x8i~in)                                                      | void broadcast<sbyte>(sbyte data, in Block64<sbyte> dst)                                                      | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 78 72 0d c8 f7 7f 00 00 48 ff e0
73        | 7ff7c82b21a0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b64x16u~in)                                                   | void broadcast<ushort>(ushort data, in Block64<ushort> dst)                                                   | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 f0 59 af c7 f7 7f 00 00 48 ff e0
74        | 7ff7c82b21d0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b64x16i~in)                                                   | void broadcast<short>(short data, in Block64<short> dst)                                                      | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 10 7b 0d c8 f7 7f 00 00 48 ff e0
75        | 7ff7c82b2200h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32u](32u,b64x32u~in)                                                   | void broadcast<uint>(uint data, in Block64<uint> dst)                                                         | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 00 5c af c7 f7 7f 00 00 48 ff e0
76        | 7ff7c82b2230h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32i](32i,b64x32i~in)                                                   | void broadcast<int>(int data, in Block64<int> dst)                                                            | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 38 10 ae c7 f7 7f 00 00 48 ff e0
77        | 7ff7c82b2260h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64u](64u,b64x64u~in)                                                   | void broadcast<ulong>(ulong data, in Block64<ulong> dst)                                                      | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 00 5f af c7 f7 7f 00 00 48 ff e0
78        | 7ff7c82b2290h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64i](64i,b64x64i~in)                                                   | void broadcast<long>(long data, in Block64<long> dst)                                                         | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 78 88 0d c8 f7 7f 00 00 48 ff e0
79        | 7ff7c82b22c0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32f](32f,b64x32f~in)                                                   | void broadcast<float>(float data, in Block64<float> dst)                                                      | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 c8 8a 0d c8 f7 7f 00 00 48 ff e0
80        | 7ff7c82b22f0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64f](64f,b64x64f~in)                                                   | void broadcast<double>(double data, in Block64<double> dst)                                                   | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 d0 8e 0d c8 f7 7f 00 00 48 ff e0
81        | 7ff7c82b2320h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b128x8u~in)                                                     | void broadcast<byte>(byte data, in Block128<byte> dst)                                                        | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 48 0b af c7 f7 7f 00 00 48 ff e0
82        | 7ff7c82b2350h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b128x8i~in)                                                     | void broadcast<sbyte>(sbyte data, in Block128<sbyte> dst)                                                     | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 78 72 0d c8 f7 7f 00 00 48 ff e0
83        | 7ff7c82b2380h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b128x16u~in)                                                  | void broadcast<ushort>(ushort data, in Block128<ushort> dst)                                                  | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 f0 59 af c7 f7 7f 00 00 48 ff e0
84        | 7ff7c82b23b0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b128x16i~in)                                                  | void broadcast<short>(short data, in Block128<short> dst)                                                     | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 10 7b 0d c8 f7 7f 00 00 48 ff e0
85        | 7ff7c82b23e0h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32u](32u,b128x32u~in)                                                  | void broadcast<uint>(uint data, in Block128<uint> dst)                                                        | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 00 5c af c7 f7 7f 00 00 48 ff e0
86        | 7ff7c82b2410h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32i](32i,b128x32i~in)                                                  | void broadcast<int>(int data, in Block128<int> dst)                                                           | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 38 10 ae c7 f7 7f 00 00 48 ff e0
87        | 7ff7c82b2440h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64u](64u,b128x64u~in)                                                  | void broadcast<ulong>(ulong data, in Block128<ulong> dst)                                                     | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 00 5f af c7 f7 7f 00 00 48 ff e0
88        | 7ff7c82b2470h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64i](64i,b128x64i~in)                                                  | void broadcast<long>(long data, in Block128<long> dst)                                                        | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 78 88 0d c8 f7 7f 00 00 48 ff e0
89        | 7ff7c82b24a0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32f](32f,b128x32f~in)                                                  | void broadcast<float>(float data, in Block128<float> dst)                                                     | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 c8 8a 0d c8 f7 7f 00 00 48 ff e0
90        | 7ff7c82b28e0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64f](64f,b128x64f~in)                                                  | void broadcast<double>(double data, in Block128<double> dst)                                                  | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 d0 8e 0d c8 f7 7f 00 00 48 ff e0
91        | 7ff7c82b2910h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b256x8u~in)                                                     | void broadcast<byte>(byte data, in Block256<byte> dst)                                                        | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 48 0b af c7 f7 7f 00 00 48 ff e0
92        | 7ff7c82b2940h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b256x8i~in)                                                     | void broadcast<sbyte>(sbyte data, in Block256<sbyte> dst)                                                     | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 78 72 0d c8 f7 7f 00 00 48 ff e0
93        | 7ff7c82b2970h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b256x16u~in)                                                  | void broadcast<ushort>(ushort data, in Block256<ushort> dst)                                                  | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 f0 59 af c7 f7 7f 00 00 48 ff e0
94        | 7ff7c82b29a0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b256x16i~in)                                                  | void broadcast<short>(short data, in Block256<short> dst)                                                     | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 10 7b 0d c8 f7 7f 00 00 48 ff e0
95        | 7ff7c82b29d0h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32u](32u,b256x32u~in)                                                  | void broadcast<uint>(uint data, in Block256<uint> dst)                                                        | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 00 5c af c7 f7 7f 00 00 48 ff e0
96        | 7ff7c82b2a00h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32i](32i,b256x32i~in)                                                  | void broadcast<int>(int data, in Block256<int> dst)                                                           | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 38 10 ae c7 f7 7f 00 00 48 ff e0
97        | 7ff7c82b2a30h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64u](64u,b256x64u~in)                                                  | void broadcast<ulong>(ulong data, in Block256<ulong> dst)                                                     | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 00 5f af c7 f7 7f 00 00 48 ff e0
98        | 7ff7c82b2a60h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64i](64i,b256x64i~in)                                                  | void broadcast<long>(long data, in Block256<long> dst)                                                        | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 78 88 0d c8 f7 7f 00 00 48 ff e0
99        | 7ff7c82b2a90h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32f](32f,b256x32f~in)                                                  | void broadcast<float>(float data, in Block256<float> dst)                                                     | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 c8 8a 0d c8 f7 7f 00 00 48 ff e0
100       | 7ff7c82b2ac0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64f](64f,b256x64f~in)                                                  | void broadcast<double>(double data, in Block256<double> dst)                                                  | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 d0 8e 0d c8 f7 7f 00 00 48 ff e0
101       | 7ff7c82b2f00h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b512x8u~in)                                                     | void broadcast<byte>(byte data, in Block512<byte> dst)                                                        | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 48 0b af c7 f7 7f 00 00 48 ff e0
102       | 7ff7c82b2f30h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b512x8i~in)                                                     | void broadcast<sbyte>(sbyte data, in Block512<sbyte> dst)                                                     | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 78 72 0d c8 f7 7f 00 00 48 ff e0
103       | 7ff7c82b2f60h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b512x16u~in)                                                  | void broadcast<ushort>(ushort data, in Block512<ushort> dst)                                                  | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 f0 59 af c7 f7 7f 00 00 48 ff e0
104       | 7ff7c82b2f90h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b512x16i~in)                                                  | void broadcast<short>(short data, in Block512<short> dst)                                                     | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 10 7b 0d c8 f7 7f 00 00 48 ff e0
105       | 7ff7c82b2fc0h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32u](32u,b512x32u~in)                                                  | void broadcast<uint>(uint data, in Block512<uint> dst)                                                        | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 00 5c af c7 f7 7f 00 00 48 ff e0
106       | 7ff7c82b2ff0h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32i](32i,b512x32i~in)                                                  | void broadcast<int>(int data, in Block512<int> dst)                                                           | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 38 10 ae c7 f7 7f 00 00 48 ff e0
107       | 7ff7c82b3020h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64u](64u,b512x64u~in)                                                  | void broadcast<ulong>(ulong data, in Block512<ulong> dst)                                                     | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 00 5f af c7 f7 7f 00 00 48 ff e0
108       | 7ff7c82b3050h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64i](64i,b512x64i~in)                                                  | void broadcast<long>(long data, in Block512<long> dst)                                                        | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 78 88 0d c8 f7 7f 00 00 48 ff e0
109       | 7ff7c82b3080h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32f](32f,b512x32f~in)                                                  | void broadcast<float>(float data, in Block512<float> dst)                                                     | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 c8 8a 0d c8 f7 7f 00 00 48 ff e0
110       | 7ff7c82b30b0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[64f](64f,b512x64f~in)                                                  | void broadcast<double>(double data, in Block512<double> dst)                                                  | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 d0 8e 0d c8 f7 7f 00 00 48 ff e0
111       | 7ff7c82b30e0h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[8u](n16,32i)                                                           | Block16<byte> cellalloc<byte>(N16 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 4d fc ff ff 48 8b c6 48 83 c4 20 5e c3
112       | 7ff7c82b3140h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[8i](n16,32i)                                                           | Block16<sbyte> cellalloc<sbyte>(N16 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 5d fc ff ff 48 8b c6 48 83 c4 20 5e c3
113       | 7ff7c82b31a0h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[16u](n16,32i)                                                          | Block16<ushort> cellalloc<ushort>(N16 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 47 fc ff ff 48 8b c6 48 83 c4 20 5e c3
114       | 7ff7c82b3200h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[16i](n16,32i)                                                          | Block16<short> cellalloc<short>(N16 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 27 fc ff ff 48 8b c6 48 83 c4 20 5e c3
115       | 7ff7c82b3660h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8u](n32,32i)                                                           | Block32<byte> cellalloc<byte>(N32 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 1e f8 ff ff 48 8b c6 48 83 c4 20 5e c3
116       | 7ff7c82b36d0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8i](n32,32i)                                                           | Block32<sbyte> cellalloc<sbyte>(N32 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 16 fd ff ff 48 8b c6 48 83 c4 20 5e c3
117       | 7ff7c82b3740h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[16u](n32,32i)                                                          | Block32<ushort> cellalloc<ushort>(N32 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 ed fc ff ff 48 8b c6 48 83 c4 20 5e c3
118       | 7ff7c82b37a0h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[16i](n32,32i)                                                          | Block32<short> cellalloc<short>(N32 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 cd fc ff ff 48 8b c6 48 83 c4 20 5e c3
119       | 7ff7c82b3800h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[32u](n32,32i)                                                          | Block32<uint> cellalloc<uint>(N32 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 b7 fc ff ff 48 8b c6 48 83 c4 20 5e c3
120       | 7ff7c82b3860h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[32i](n32,32i)                                                          | Block32<int> cellalloc<int>(N32 n, int cellcount)                                                             | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 97 fc ff ff 48 8b c6 48 83 c4 20 5e c3
121       | 7ff7c82b38c0h   | 70      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[32f](n32,32i)                                                          | Block32<float> cellalloc<float>(N32 n, int cellcount)                                                         | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 73 fc ff ff 48 8b c6 48 83 c4 20 5e c3
122       | 7ff7c82b3d30h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8u](n64,32i)                                                           | Block64<byte> cellalloc<byte>(N64 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 ae fc ff ff 48 8b c6 48 83 c4 20 5e c3
123       | 7ff7c82b3da0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8i](n64,32i)                                                           | Block64<sbyte> cellalloc<sbyte>(N64 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 ae fc ff ff 48 8b c6 48 83 c4 20 5e c3
124       | 7ff7c82b3e10h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16u](n64,32i)                                                          | Block64<ushort> cellalloc<ushort>(N64 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 7e fc ff ff 48 8b c6 48 83 c4 20 5e c3
125       | 7ff7c82b3e80h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16i](n64,32i)                                                          | Block64<short> cellalloc<short>(N64 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 4e fc ff ff 48 8b c6 48 83 c4 20 5e c3
126       | 7ff7c82b3ef0h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[32u](n64,32i)                                                          | Block64<uint> cellalloc<uint>(N64 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 25 fc ff ff 48 8b c6 48 83 c4 20 5e c3
127       | 7ff7c82b3f50h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[32i](n64,32i)                                                          | Block64<int> cellalloc<int>(N64 n, int cellcount)                                                             | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 05 fc ff ff 48 8b c6 48 83 c4 20 5e c3
128       | 7ff7c82b3fb0h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[64u](n64,32i)                                                          | Block64<ulong> cellalloc<ulong>(N64 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 ef fb ff ff 48 8b c6 48 83 c4 20 5e c3
129       | 7ff7c82b4010h   | 66      | CTC_RET_Zx3         | hex://blocks/api?cellalloc#cellalloc_g[64i](n64,32i)                                                          | Block64<long> cellalloc<long>(N64 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 cf fb ff ff 48 8b c6 48 83 c4 20 5e c3
130       | 7ff7c82b4070h   | 80      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[32f](n64,32i)                                                          | Block64<float> cellalloc<float>(N64 n, int cellcount)                                                         | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 a1 fb ff ff 48 8b c6 48 83 c4 20 5e c3
131       | 7ff7c82b40e0h   | 70      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[64f](n64,32i)                                                          | Block64<double> cellalloc<double>(N64 n, int cellcount)                                                       | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 7b fb ff ff 48 8b c6 48 83 c4 20 5e c3
132       | 7ff7c82b4550h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8u](n128,32i)                                                          | Block128<byte> cellalloc<byte>(N128 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 66 f7 ff ff 48 8b c6 48 83 c4 20 5e c3
133       | 7ff7c82b45c0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8i](n128,32i)                                                          | Block128<sbyte> cellalloc<sbyte>(N128 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 0e fd ff ff 48 8b c6 48 83 c4 20 5e c3
134       | 7ff7c82b4630h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16u](n128,32i)                                                         | Block128<ushort> cellalloc<ushort>(N128 n, int cellcount)                                                     | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 de fc ff ff 48 8b c6 48 83 c4 20 5e c3
135       | 7ff7c82b46a0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16i](n128,32i)                                                         | Block128<short> cellalloc<short>(N128 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 ae fc ff ff 48 8b c6 48 83 c4 20 5e c3
136       | 7ff7c82b4710h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32u](n128,32i)                                                         | Block128<uint> cellalloc<uint>(N128 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 7e fc ff ff 48 8b c6 48 83 c4 20 5e c3
137       | 7ff7c82b4780h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32i](n128,32i)                                                         | Block128<int> cellalloc<int>(N128 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 4e fc ff ff 48 8b c6 48 83 c4 20 5e c3
138       | 7ff7c82b47f0h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[64u](n128,32i)                                                         | Block128<ulong> cellalloc<ulong>(N128 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 25 fc ff ff 48 8b c6 48 83 c4 20 5e c3
139       | 7ff7c82b4850h   | 76      | CTC_RET_SBB         | hex://blocks/api?cellalloc#cellalloc_g[64i](n128,32i)                                                         | Block128<long> cellalloc<long>(N128 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 05 fc ff ff 48 8b c6 48 83 c4 20 5e c3
140       | 7ff7c82b48b0h   | 87      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[32f](n128,32i)                                                         | Block128<float> cellalloc<float>(N128 n, int cellcount)                                                       | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 da fb ff ff 48 8b c6 48 83 c4 20 5e c3
141       | 7ff7c82b4920h   | 80      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[64f](n128,32i)                                                         | Block128<double> cellalloc<double>(N128 n, int cellcount)                                                     | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 b1 fb ff ff 48 8b c6 48 83 c4 20 5e c3
142       | 7ff7c82b4d90h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8u](n256,32i)                                                          | Block256<byte> cellalloc<byte>(N256 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 1f 41 03 c8 c1 f9 05 41 8b d0 c1 fa 1f 83 e2 1f 41 03 d0 83 e2 e0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 86 fd ff ff 48 8b c6 48 83 c4 20 5e c3
143       | 7ff7c82b4e00h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8i](n256,32i)                                                          | Block256<sbyte> cellalloc<sbyte>(N256 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 1f 41 03 c8 c1 f9 05 41 8b d0 c1 fa 1f 83 e2 1f 41 03 d0 83 e2 e0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 66 fd ff ff 48 8b c6 48 83 c4 20 5e c3
144       | 7ff7c82b4e70h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16u](n256,32i)                                                         | Block256<ushort> cellalloc<ushort>(N256 n, int cellcount)                                                     | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 36 fd ff ff 48 8b c6 48 83 c4 20 5e c3
145       | 7ff7c82b4ee0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16i](n256,32i)                                                         | Block256<short> cellalloc<short>(N256 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 f6 fc ff ff 48 8b c6 48 83 c4 20 5e c3
146       | 7ff7c82b4f50h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32u](n256,32i)                                                         | Block256<uint> cellalloc<uint>(N256 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 c6 fc ff ff 48 8b c6 48 83 c4 20 5e c3
147       | 7ff7c82b4fc0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32i](n256,32i)                                                         | Block256<int> cellalloc<int>(N256 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 86 fc ff ff 48 8b c6 48 83 c4 20 5e c3
148       | 7ff7c82b5030h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[64u](n256,32i)                                                         | Block256<ulong> cellalloc<ulong>(N256 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 56 fc ff ff 48 8b c6 48 83 c4 20 5e c3
149       | 7ff7c82b50a0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[64i](n256,32i)                                                         | Block256<long> cellalloc<long>(N256 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 16 fc ff ff 48 8b c6 48 83 c4 20 5e c3
150       | 7ff7c82b5110h   | 87      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[32f](n256,32i)                                                         | Block256<float> cellalloc<float>(N256 n, int cellcount)                                                       | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 e2 fb ff ff 48 8b c6 48 83 c4 20 5e c3
151       | 7ff7c82b5590h   | 87      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[64f](n256,32i)                                                         | Block256<double> cellalloc<double>(N256 n, int cellcount)                                                     | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 a2 fb ff ff 48 8b c6 48 83 c4 20 5e c3
152       | 7ff7c82b5600h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8u](n512,32i)                                                          | Block512<byte> cellalloc<byte>(N512 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 3f 41 03 c8 c1 f9 06 41 8b d0 c1 fa 1f 83 e2 3f 41 03 d0 83 e2 c0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 36 fd ff ff 48 8b c6 48 83 c4 20 5e c3
153       | 7ff7c82b5670h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[8i](n512,32i)                                                          | Block512<sbyte> cellalloc<sbyte>(N512 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 3f 41 03 c8 c1 f9 06 41 8b d0 c1 fa 1f 83 e2 3f 41 03 d0 83 e2 c0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 36 fd ff ff 48 8b c6 48 83 c4 20 5e c3
154       | 7ff7c82b56e0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16u](n512,32i)                                                         | Block512<ushort> cellalloc<ushort>(N512 n, int cellcount)                                                     | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 1f 41 03 c8 c1 f9 05 41 8b d0 c1 fa 1f 83 e2 1f 41 03 d0 83 e2 e0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 06 fd ff ff 48 8b c6 48 83 c4 20 5e c3
155       | 7ff7c82b5750h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[16i](n512,32i)                                                         | Block512<short> cellalloc<short>(N512 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 1f 41 03 c8 c1 f9 05 41 8b d0 c1 fa 1f 83 e2 1f 41 03 d0 83 e2 e0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 d6 fc ff ff 48 8b c6 48 83 c4 20 5e c3
156       | 7ff7c82b57c0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32u](n512,32i)                                                         | Block512<uint> cellalloc<uint>(N512 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 a6 fc ff ff 48 8b c6 48 83 c4 20 5e c3
157       | 7ff7c82b5830h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[32i](n512,32i)                                                         | Block512<int> cellalloc<int>(N512 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 76 fc ff ff 48 8b c6 48 83 c4 20 5e c3
158       | 7ff7c82b58a0h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[64u](n512,32i)                                                         | Block512<ulong> cellalloc<ulong>(N512 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 46 fc ff ff 48 8b c6 48 83 c4 20 5e c3
159       | 7ff7c82b5d10h   | 83      | CTC_RET_ZED_SBB     | hex://blocks/api?cellalloc#cellalloc_g[64i](n512,32i)                                                         | Block512<long> cellalloc<long>(N512 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 16 f8 ff ff 48 8b c6 48 83 c4 20 5e c3
160       | 7ff7c82b5d80h   | 87      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[32f](n512,32i)                                                         | Block512<float> cellalloc<float>(N512 n, int cellcount)                                                       | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 6a fb ff ff 48 8b c6 48 83 c4 20 5e c3
161       | 7ff7c82b5df0h   | 87      | CTC_RET_INTR        | hex://blocks/api?cellalloc#cellalloc_g[64f](n512,32i)                                                         | Block512<double> cellalloc<double>(N512 n, int cellcount)                                                     | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 3a fb ff ff 48 8b c6 48 83 c4 20 5e c3
162       | 7ff7c82b6270h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[8u]()                                                                    | int cellsize<byte>()                                                                                          | 0f 1f 44 00 00 b8 01 00 00 00 c3
163       | 7ff7c82b6290h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[8i]()                                                                    | int cellsize<sbyte>()                                                                                         | 0f 1f 44 00 00 b8 01 00 00 00 c3
164       | 7ff7c82b62b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[16u]()                                                                   | int cellsize<ushort>()                                                                                        | 0f 1f 44 00 00 b8 02 00 00 00 c3
165       | 7ff7c82b62d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[16i]()                                                                   | int cellsize<short>()                                                                                         | 0f 1f 44 00 00 b8 02 00 00 00 c3
166       | 7ff7c82b62f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[32u]()                                                                   | int cellsize<uint>()                                                                                          | 0f 1f 44 00 00 b8 04 00 00 00 c3
167       | 7ff7c82b6310h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[32i]()                                                                   | int cellsize<int>()                                                                                           | 0f 1f 44 00 00 b8 04 00 00 00 c3
168       | 7ff7c82b6330h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[64u]()                                                                   | int cellsize<ulong>()                                                                                         | 0f 1f 44 00 00 b8 08 00 00 00 c3
169       | 7ff7c82b6350h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[64i]()                                                                   | int cellsize<long>()                                                                                          | 0f 1f 44 00 00 b8 08 00 00 00 c3
170       | 7ff7c82b6370h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[32f]()                                                                   | int cellsize<float>()                                                                                         | 0f 1f 44 00 00 b8 04 00 00 00 c3
171       | 7ff7c82b6390h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellsize#cellsize_g[64f]()                                                                   | int cellsize<double>()                                                                                        | 0f 1f 44 00 00 b8 08 00 00 00 c3
172       | 7ff7c82b63b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[8u]()                                                                  | int cellwidth<byte>()                                                                                         | 0f 1f 44 00 00 b8 08 00 00 00 c3
173       | 7ff7c82b63d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[8i]()                                                                  | int cellwidth<sbyte>()                                                                                        | 0f 1f 44 00 00 b8 08 00 00 00 c3
174       | 7ff7c82b63f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[16u]()                                                                 | int cellwidth<ushort>()                                                                                       | 0f 1f 44 00 00 b8 10 00 00 00 c3
175       | 7ff7c82b6410h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[16i]()                                                                 | int cellwidth<short>()                                                                                        | 0f 1f 44 00 00 b8 10 00 00 00 c3
176       | 7ff7c82b6430h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[32u]()                                                                 | int cellwidth<uint>()                                                                                         | 0f 1f 44 00 00 b8 20 00 00 00 c3
177       | 7ff7c82b6450h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[32i]()                                                                 | int cellwidth<int>()                                                                                          | 0f 1f 44 00 00 b8 20 00 00 00 c3
178       | 7ff7c82b6470h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[64u]()                                                                 | int cellwidth<ulong>()                                                                                        | 0f 1f 44 00 00 b8 40 00 00 00 c3
179       | 7ff7c82b6490h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[64i]()                                                                 | int cellwidth<long>()                                                                                         | 0f 1f 44 00 00 b8 40 00 00 00 c3
180       | 7ff7c82b64b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[32f]()                                                                 | int cellwidth<float>()                                                                                        | 0f 1f 44 00 00 b8 20 00 00 00 c3
181       | 7ff7c82b64d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?cellwidth#cellwidth_g[64f]()                                                                 | int cellwidth<double>()                                                                                       | 0f 1f 44 00 00 b8 40 00 00 00 c3
182       | 7ff7c82b6900h   | 218     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n16,span8u,32i)                                                              | Block16<byte> load<byte>(N16 w, Span<byte> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 1b f5 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 1b 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 6c dc 4b ff cc e8 5e e0 4b ff
183       | 7ff7c82b6a00h   | 218     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n16,span8i,32i)                                                              | Block16<sbyte> load<sbyte>(N16 w, Span<sbyte> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 1b f4 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 1b 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 6c db 4b ff cc e8 5e df 4b ff
184       | 7ff7c82b6b00h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n16,span16u,32i)                                                            | Block16<ushort> load<ushort>(N16 w, Span<ushort> src, int offset)                                             | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1a f3 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 1b 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 6b da 4b ff cc e8 5d de 4b ff
185       | 7ff7c82b6c00h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n16,span16i,32i)                                                            | Block16<short> load<short>(N16 w, Span<short> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1a f2 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 1b 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 6b d9 4b ff cc e8 5d dd 4b ff
186       | 7ff7c82b6d00h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n32,span8u,32i)                                                              | Block32<byte> load<byte>(N32 w, Span<byte> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 18 f1 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 69 d8 4b ff cc e8 5b dc 4b ff
187       | 7ff7c82b6e00h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n32,span8i,32i)                                                              | Block32<sbyte> load<sbyte>(N32 w, Span<sbyte> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 18 f0 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 69 d7 4b ff cc e8 5b db 4b ff
188       | 7ff7c82b6f00h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n32,span16u,32i)                                                            | Block32<ushort> load<ushort>(N32 w, Span<ushort> src, int offset)                                             | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1d ef fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 6e d6 4b ff cc e8 60 da 4b ff
189       | 7ff7c82b7000h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n32,span16i,32i)                                                            | Block32<short> load<short>(N32 w, Span<short> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1d ee fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 6e d5 4b ff cc e8 60 d9 4b ff
190       | 7ff7c82b7100h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32u](n32,span32u,32i)                                                            | Block32<uint> load<uint>(N32 w, Span<uint> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1a ed fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 6b d4 4b ff cc e8 5d d8 4b ff
191       | 7ff7c82b7200h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32i](n32,span32i,32i)                                                            | Block32<int> load<int>(N32 w, Span<int> src, int offset)                                                      | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 1a ec fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 6b d3 4b ff cc e8 5d d7 4b ff
192       | 7ff7c82b7710h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32f](n32,span32f,32i)                                                            | Block32<float> load<float>(N32 w, Span<float> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 0a e7 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 2c 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 5b ce 4b ff cc e8 4d d2 4b ff
193       | 7ff7c82b7810h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n64,span8u,32i)                                                              | Block64<byte> load<byte>(N64 w, Span<byte> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 08 e6 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 59 cd 4b ff cc e8 4b d1 4b ff
194       | 7ff7c82b7910h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n64,span8i,32i)                                                              | Block64<sbyte> load<sbyte>(N64 w, Span<sbyte> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 08 e5 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 59 cc 4b ff cc e8 4b d0 4b ff
195       | 7ff7c82b7a10h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n64,span16u,32i)                                                            | Block64<ushort> load<ushort>(N64 w, Span<ushort> src, int offset)                                             | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 0a e4 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 5b cb 4b ff cc e8 4d cf 4b ff
196       | 7ff7c82b7b10h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n64,span16i,32i)                                                            | Block64<short> load<short>(N64 w, Span<short> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 0a e3 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 5b ca 4b ff cc e8 4d ce 4b ff
197       | 7ff7c82b7c10h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[32u](n64,span32u,32i)                                                            | Block64<uint> load<uint>(N64 w, Span<uint> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 0d e2 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 5e c9 4b ff cc e8 50 cd 4b ff
198       | 7ff7c82b7d10h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[32i](n64,span32i,32i)                                                            | Block64<int> load<int>(N64 w, Span<int> src, int offset)                                                      | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 0d e1 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 5e c8 4b ff cc e8 50 cc 4b ff
199       | 7ff7c82b7e10h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64u](n64,span64u,32i)                                                            | Block64<ulong> load<ulong>(N64 w, Span<ulong> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 0a e0 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 5b c7 4b ff cc e8 4d cb 4b ff
200       | 7ff7c82b7f10h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64i](n64,span64i,32i)                                                            | Block64<long> load<long>(N64 w, Span<long> src, int offset)                                                   | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 0a df fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 5b c6 4b ff cc e8 4d ca 4b ff
201       | 7ff7c82b8010h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[32f](n64,span32f,32i)                                                            | Block64<float> load<float>(N64 w, Span<float> src, int offset)                                                | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 0d de fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 5e c5 4b ff cc e8 50 c9 4b ff
202       | 7ff7c82b8110h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64f](n64,span64f,32i)                                                            | Block64<double> load<double>(N64 w, Span<double> src, int offset)                                             | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 00 03 ca 83 e1 ff 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 0a dd fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 3d 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 5b c4 4b ff cc e8 4d c8 4b ff
203       | 7ff7c82b8620h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n128,span8u,32i)                                                             | Block128<byte> load<byte>(N128 w, Span<byte> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 f8 d7 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 49 bf 4b ff cc e8 3b c3 4b ff
204       | 7ff7c82b8720h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n128,span8i,32i)                                                             | Block128<sbyte> load<sbyte>(N128 w, Span<sbyte> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 f8 d6 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 49 be 4b ff cc e8 3b c2 4b ff
205       | 7ff7c82b8820h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n128,span16u,32i)                                                           | Block128<ushort> load<ushort>(N128 w, Span<ushort> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 fa d5 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 4b bd 4b ff cc e8 3d c1 4b ff
206       | 7ff7c82b8920h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n128,span16i,32i)                                                           | Block128<short> load<short>(N128 w, Span<short> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 fa d4 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 4b bc 4b ff cc e8 3d c0 4b ff
207       | 7ff7c82b8a20h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32u](n128,span32u,32i)                                                           | Block128<uint> load<uint>(N128 w, Span<uint> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 fa d3 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 4b bb 4b ff cc e8 3d bf 4b ff
208       | 7ff7c82b8b20h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32i](n128,span32i,32i)                                                           | Block128<int> load<int>(N128 w, Span<int> src, int offset)                                                    | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 fa d2 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 4b ba 4b ff cc e8 3d be 4b ff
209       | 7ff7c82b8c20h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[64u](n128,span64u,32i)                                                           | Block128<ulong> load<ulong>(N128 w, Span<ulong> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 fd d1 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 4e b9 4b ff cc e8 40 bd 4b ff
210       | 7ff7c82b8d20h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[64i](n128,span64i,32i)                                                           | Block128<long> load<long>(N128 w, Span<long> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 fd d0 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 4e b8 4b ff cc e8 40 bc 4b ff
211       | 7ff7c82b8e20h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32f](n128,span32f,32i)                                                           | Block128<float> load<float>(N128 w, Span<float> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 fa cf fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 4b b7 4b ff cc e8 3d bb 4b ff
212       | 7ff7c82b8f20h   | 216     | CTC_INTRx2          | hex://blocks/api?load#load_g[64f](n128,span64f,32i)                                                           | Block128<double> load<double>(N128 w, Span<double> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 fd ce fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 4e 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 4e b6 4b ff cc e8 40 ba 4b ff
213       | 7ff7c82b9420h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n256,span8u,32i)                                                             | Block256<byte> load<byte>(N256 w, Span<byte> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 f8 c9 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 49 b1 4b ff cc e8 3b b5 4b ff
214       | 7ff7c82b9520h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n256,span8i,32i)                                                             | Block256<sbyte> load<sbyte>(N256 w, Span<sbyte> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 f8 c8 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 49 b0 4b ff cc e8 3b b4 4b ff
215       | 7ff7c82b9620h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n256,span16u,32i)                                                           | Block256<ushort> load<ushort>(N256 w, Span<ushort> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 fa c7 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 4b af 4b ff cc e8 3d b3 4b ff
216       | 7ff7c82b9720h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n256,span16i,32i)                                                           | Block256<short> load<short>(N256 w, Span<short> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 fa c6 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 4b ae 4b ff cc e8 3d b2 4b ff
217       | 7ff7c82b9820h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32u](n256,span32u,32i)                                                           | Block256<uint> load<uint>(N256 w, Span<uint> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 fa c5 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 4b ad 4b ff cc e8 3d b1 4b ff
218       | 7ff7c82b9920h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32i](n256,span32i,32i)                                                           | Block256<int> load<int>(N256 w, Span<int> src, int offset)                                                    | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 fa c4 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 4b ac 4b ff cc e8 3d b0 4b ff
219       | 7ff7c82b9a20h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64u](n256,span64u,32i)                                                           | Block256<ulong> load<ulong>(N256 w, Span<ulong> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 fa c3 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 4b ab 4b ff cc e8 3d af 4b ff
220       | 7ff7c82b9b20h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64i](n256,span64i,32i)                                                           | Block256<long> load<long>(N256 w, Span<long> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 fa c2 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 4b aa 4b ff cc e8 3d ae 4b ff
221       | 7ff7c82b9c20h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32f](n256,span32f,32i)                                                           | Block256<float> load<float>(N256 w, Span<float> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 fa c1 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 4b a9 4b ff cc e8 3d ad 4b ff
222       | 7ff7c82b9d20h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64f](n256,span64f,32i)                                                           | Block256<double> load<double>(N256 w, Span<double> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 fa c0 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 5f 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 4b a8 4b ff cc e8 3d ac 4b ff
223       | 7ff7c82b9e20h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8u](n512,span8u,32i)                                                             | Block512<byte> load<byte>(N512 w, Span<byte> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 3f 03 ca 83 e1 c0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 f8 bf fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 49 a7 4b ff cc e8 3b ab 4b ff
224       | 7ff7c82b9f20h   | 221     | CTC_INTRx2          | hex://blocks/api?load#load_g[8i](n512,span8i,32i)                                                             | Block512<sbyte> load<sbyte>(N512 w, Span<sbyte> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 3f 03 ca 83 e1 c0 2b d1 75 4f 45 85 c9 74 14 44 3b cd 0f 87 93 00 00 00 41 2b e9 49 63 d1 48 03 d0 eb 03 48 8b d0 48 8d 44 24 38 c5 f8 57 c0 c5 fa 7f 00 48 8d 44 24 38 48 89 10 89 68 08 48 8b fb 48 8d 74 24 38 e8 f8 be fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 49 a6 4b ff cc e8 3b aa 4b ff
225       | 7ff7c82ba020h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16u](n512,span16u,32i)                                                           | Block512<ushort> load<ushort>(N512 w, Span<ushort> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 fa bd fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 4b a5 4b ff cc e8 3d a9 4b ff
226       | 7ff7c82ba530h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[16i](n512,span16i,32i)                                                           | Block512<short> load<short>(N512 w, Span<short> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 50 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 ea b8 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 3b a0 4b ff cc e8 2d a4 4b ff
227       | 7ff7c82ba630h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32u](n512,span32u,32i)                                                           | Block512<uint> load<uint>(N512 w, Span<uint> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 ea b7 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 3b 9f 4b ff cc e8 2d a3 4b ff
228       | 7ff7c82ba730h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32i](n512,span32i,32i)                                                           | Block512<int> load<int>(N512 w, Span<int> src, int offset)                                                    | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 ea b6 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 3b 9e 4b ff cc e8 2d a2 4b ff
229       | 7ff7c82ba830h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64u](n512,span64u,32i)                                                           | Block512<ulong> load<ulong>(N512 w, Span<ulong> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 ea b5 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 3b 9d 4b ff cc e8 2d a1 4b ff
230       | 7ff7c82ba930h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64i](n512,span64i,32i)                                                           | Block512<long> load<long>(N512 w, Span<long> src, int offset)                                                 | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 ea b4 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 3b 9c 4b ff cc e8 2d a0 4b ff
231       | 7ff7c82baa30h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[32f](n512,span32f,32i)                                                           | Block512<float> load<float>(N512 w, Span<float> src, int offset)                                              | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 90 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 ea b3 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 3b 9b 4b ff cc e8 2d 9f 4b ff
232       | 7ff7c82bab30h   | 219     | CTC_INTRx2          | hex://blocks/api?load#load_g[64f](n512,span64f,32i)                                                           | Block512<double> load<double>(N512 w, Span<double> src, int offset)                                           | 57 56 55 53 48 83 ec 48 c5 f8 77 33 c0 48 89 44 24 38 48 89 44 24 40 48 8b d9 49 8b 00 41 8b 68 08 8b d5 41 2b d1 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 75 4d 45 85 c9 74 15 44 3b cd 0f 87 91 00 00 00 41 2b e9 49 63 d1 48 8d 04 d0 eb 00 48 8d 54 24 38 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 38 48 89 02 89 6a 08 48 8b fb 48 8d 74 24 38 e8 ea b2 fa 5e 48 a5 48 8b c3 48 83 c4 48 5b 5d 5e 5f c3 8b d5 41 2b d1 41 b8 70 00 00 00 41 b9 01 00 00 00 48 b9 78 7a ca 1d fa 01 00 00 48 8b 09 48 b8 80 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 30 45 88 0a 45 89 42 04 4c 8b 44 24 30 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 3b 9a 4b ff cc e8 2d 9e 4b ff
233       | 7ff7c82bac30h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n16)                                                                       | Block16<byte> parts<byte>(N16 w, Byte[] src)                                                                  | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 0d b2 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 1a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 60 99 4b ff
234       | 7ff7c82bad00h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n16)                                                                       | Block16<sbyte> parts<sbyte>(N16 w, SByte[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 3d b1 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 1a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 90 98 4b ff
235       | 7ff7c82badd0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n16)                                                                      | Block16<ushort> parts<ushort>(N16 w, UInt16[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 6a b0 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 1a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 bd 97 4b ff
236       | 7ff7c82bb2b0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n16)                                                                      | Block16<short> parts<short>(N16 w, Int16[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 8a ab fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 1a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 10 00 00 00 e8 dd 92 4b ff
237       | 7ff7c82bb380h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n32)                                                                       | Block32<byte> parts<byte>(N32 w, Byte[] src)                                                                  | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ba aa fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 0d 92 4b ff
238       | 7ff7c82bb450h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n32)                                                                       | Block32<sbyte> parts<sbyte>(N32 w, SByte[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ea a9 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 3d 91 4b ff
239       | 7ff7c82bb520h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n32)                                                                      | Block32<ushort> parts<ushort>(N32 w, UInt16[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 1d a9 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 70 90 4b ff
240       | 7ff7c82bb5f0h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n32)                                                                      | Block32<short> parts<short>(N32 w, Int16[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 4d a8 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 a0 8f 4b ff
241       | 7ff7c82bb6c0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32u](n32)                                                                      | Block32<uint> parts<uint>(N32 w, UInt32[] src)                                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 7a a7 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 cd 8e 4b ff
242       | 7ff7c82bbba0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32i](n32)                                                                      | Block32<int> parts<int>(N32 w, Int32[] src)                                                                   | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 9a a2 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 ed 89 4b ff
243       | 7ff7c82bbc70h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32f](n32)                                                                      | Block32<float> parts<float>(N32 w, Single[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ca a1 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 2a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 20 00 00 00 e8 1d 89 4b ff
244       | 7ff7c82bbd40h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n64)                                                                       | Block64<byte> parts<byte>(N64 w, Byte[] src)                                                                  | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 fa a0 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 4d 88 4b ff
245       | 7ff7c82bbe10h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n64)                                                                       | Block64<sbyte> parts<sbyte>(N64 w, SByte[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 2a a0 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 7d 87 4b ff
246       | 7ff7c82bbee0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n64)                                                                      | Block64<ushort> parts<ushort>(N64 w, UInt16[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 5a 9f fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 ad 86 4b ff
247       | 7ff7c82bbfb0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n64)                                                                      | Block64<short> parts<short>(N64 w, Int16[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 8a 9e fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 dd 85 4b ff
248       | 7ff7c82bc080h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32u](n64)                                                                      | Block64<uint> parts<uint>(N64 w, UInt32[] src)                                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 bd 9d fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 10 85 4b ff
249       | 7ff7c82bc560h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32i](n64)                                                                      | Block64<int> parts<int>(N64 w, Int32[] src)                                                                   | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 dd 98 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 30 80 4b ff
250       | 7ff7c82bc630h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64u](n64)                                                                      | Block64<ulong> parts<ulong>(N64 w, UInt64[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 0a 98 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 5d 7f 4b ff
251       | 7ff7c82bc700h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64i](n64)                                                                      | Block64<long> parts<long>(N64 w, Int64[] src)                                                                 | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 3a 97 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 8d 7e 4b ff
252       | 7ff7c82bc7d0h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32f](n64)                                                                      | Block64<float> parts<float>(N64 w, Single[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 6d 96 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 c0 7d 4b ff
253       | 7ff7c82bc8a0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64f](n64)                                                                      | Block64<double> parts<double>(N64 w, Double[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 9a 95 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 3a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 40 00 00 00 e8 ed 7c 4b ff
254       | 7ff7c82bcd80h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n128)                                                                      | Block128<byte> parts<byte>(N128 w, Byte[] src)                                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ba 90 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 0d 78 4b ff
255       | 7ff7c82bce50h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n128)                                                                      | Block128<sbyte> parts<sbyte>(N128 w, SByte[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ea 8f fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 3d 77 4b ff
256       | 7ff7c82bcf20h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n128)                                                                     | Block128<ushort> parts<ushort>(N128 w, UInt16[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 1a 8f fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 6d 76 4b ff
257       | 7ff7c82bcff0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n128)                                                                     | Block128<short> parts<short>(N128 w, Int16[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 4a 8e fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 9d 75 4b ff
258       | 7ff7c82bd0c0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32u](n128)                                                                     | Block128<uint> parts<uint>(N128 w, UInt32[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 7a 8d fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 cd 74 4b ff
259       | 7ff7c82bd190h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32i](n128)                                                                     | Block128<int> parts<int>(N128 w, Int32[] src)                                                                 | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 aa 8c fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 fd 73 4b ff
260       | 7ff7c82bd260h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64u](n128)                                                                     | Block128<ulong> parts<ulong>(N128 w, UInt64[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 dd 8b fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 30 73 4b ff
261       | 7ff7c82bd330h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64i](n128)                                                                     | Block128<long> parts<long>(N128 w, Int64[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 0d 8b fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 60 72 4b ff
262       | 7ff7c82bd400h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32f](n128)                                                                     | Block128<float> parts<float>(N128 w, Single[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 3a 8a fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 8d 71 4b ff
263       | 7ff7c82bd4d0h   | 176     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64f](n128)                                                                     | Block128<double> parts<double>(N128 w, Double[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 ea 1f 03 d0 83 e2 fe 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 6d 89 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 4a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 80 00 00 00 e8 c0 70 4b ff
264       | 7ff7c82bd5a0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n256)                                                                      | Block256<byte> parts<byte>(N256 w, Byte[] src)                                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 1f 03 d0 83 e2 e0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 9a 88 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 ed 6f 4b ff
265       | 7ff7c82bd670h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n256)                                                                      | Block256<sbyte> parts<sbyte>(N256 w, SByte[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 1f 03 d0 83 e2 e0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ca 87 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 1d 6f 4b ff
266       | 7ff7c82bd740h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n256)                                                                     | Block256<ushort> parts<ushort>(N256 w, UInt16[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 fa 86 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 4d 6e 4b ff
267       | 7ff7c82bd810h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n256)                                                                     | Block256<short> parts<short>(N256 w, Int16[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 2a 86 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 7d 6d 4b ff
268       | 7ff7c82bd8e0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32u](n256)                                                                     | Block256<uint> parts<uint>(N256 w, UInt32[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 5a 85 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 ad 6c 4b ff
269       | 7ff7c82bd9b0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32i](n256)                                                                     | Block256<int> parts<int>(N256 w, Int32[] src)                                                                 | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 8a 84 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 dd 6b 4b ff
270       | 7ff7c82bda80h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64u](n256)                                                                     | Block256<ulong> parts<ulong>(N256 w, UInt64[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ba 83 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 0d 6b 4b ff
271       | 7ff7c82bdb50h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64i](n256)                                                                     | Block256<long> parts<long>(N256 w, Int64[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ea 82 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 3d 6a 4b ff
272       | 7ff7c82bdc20h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32f](n256)                                                                     | Block256<float> parts<float>(N256 w, Single[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 1a 82 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 6d 69 4b ff
273       | 7ff7c82bdcf0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64f](n256)                                                                     | Block256<double> parts<double>(N256 w, Double[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 03 03 d0 83 e2 fc 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 4a 81 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 5a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 01 00 00 e8 9d 68 4b ff
274       | 7ff7c82be1d0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8u](n512)                                                                      | Block512<byte> parts<byte>(N512 w, Byte[] src)                                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 3f 03 d0 83 e2 c0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 6a 7c fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 bd 63 4b ff
275       | 7ff7c82be2a0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[8i](n512)                                                                      | Block512<sbyte> parts<sbyte>(N512 w, SByte[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 3f 03 d0 83 e2 c0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 9a 7b fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 ed 62 4b ff
276       | 7ff7c82be370h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16u](n512)                                                                     | Block512<ushort> parts<ushort>(N512 w, UInt16[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 1f 03 d0 83 e2 e0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ca 7a fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 1d 62 4b ff
277       | 7ff7c82be440h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[16i](n512)                                                                     | Block512<short> parts<short>(N512 w, Int16[] src)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 1f 03 d0 83 e2 e0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 fa 79 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 4d 61 4b ff
278       | 7ff7c82be510h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32u](n512)                                                                     | Block512<uint> parts<uint>(N512 w, UInt32[] src)                                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 2a 79 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 7d 60 4b ff
279       | 7ff7c82be5e0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32i](n512)                                                                     | Block512<int> parts<int>(N512 w, Int32[] src)                                                                 | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 5a 78 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 ad 5f 4b ff
280       | 7ff7c82be6b0h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64u](n512)                                                                     | Block512<ulong> parts<ulong>(N512 w, UInt64[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 8a 77 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 dd 5e 4b ff
281       | 7ff7c82be780h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64i](n512)                                                                     | Block512<long> parts<long>(N512 w, Int64[] src)                                                               | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ba 76 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 0d 5e 4b ff
282       | 7ff7c82be850h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[32f](n512)                                                                     | Block512<float> parts<float>(N512 w, Single[] src)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 0f 03 d0 83 e2 f0 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ea 75 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 3d 5d 4b ff
283       | 7ff7c82be920h   | 179     | CTC_INTRx2          | hex://blocks/api?parts#parts_g[64f](n512)                                                                     | Block512<double> parts<double>(N512 w, Double[] src)                                                          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b 40 08 8b d0 c1 fa 1f 83 e2 07 03 d0 83 e2 f8 2b c2 75 3a 49 8d 40 10 41 8b 50 08 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 1a 75 fa 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 41 8b 50 08 41 b8 6a 00 00 00 41 b9 01 00 00 00 48 b9 88 7a ca 1d fa 01 00 00 48 8b 09 48 b8 90 7a ca 1d fa 01 00 00 48 8b 00 4c 8d 54 24 28 45 88 0a 45 89 42 04 4c 8b 44 24 28 4c 89 44 24 20 4c 8b c1 4c 8b c8 b9 00 02 00 00 e8 6d 5c 4b ff
284       | 7ff7c82be9f0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[8u](8u~ref)                                                                    | in void* pvoid<byte>(ref byte src)                                                                            | 0f 1f 44 00 00 48 8b c1 c3
285       | 7ff7c82bea10h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[8i](8i~ref)                                                                    | in void* pvoid<sbyte>(ref sbyte src)                                                                          | 0f 1f 44 00 00 48 8b c1 c3
286       | 7ff7c82bea30h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[16u](16u~ref)                                                                  | in void* pvoid<ushort>(ref ushort src)                                                                        | 0f 1f 44 00 00 48 8b c1 c3
287       | 7ff7c82bea50h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[16i](16i~ref)                                                                  | in void* pvoid<short>(ref short src)                                                                          | 0f 1f 44 00 00 48 8b c1 c3
288       | 7ff7c82bea70h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[32u](32u~ref)                                                                  | in void* pvoid<uint>(ref uint src)                                                                            | 0f 1f 44 00 00 48 8b c1 c3
289       | 7ff7c82bea90h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[32i](32i~ref)                                                                  | in void* pvoid<int>(ref int src)                                                                              | 0f 1f 44 00 00 48 8b c1 c3
290       | 7ff7c82beab0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[64u](64u~ref)                                                                  | in void* pvoid<ulong>(ref ulong src)                                                                          | 0f 1f 44 00 00 48 8b c1 c3
291       | 7ff7c82bead0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[64i](64i~ref)                                                                  | in void* pvoid<long>(ref long src)                                                                            | 0f 1f 44 00 00 48 8b c1 c3
292       | 7ff7c82beaf0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[32f](32f~ref)                                                                  | in void* pvoid<float>(ref float src)                                                                          | 0f 1f 44 00 00 48 8b c1 c3
293       | 7ff7c82beb10h   | 9       | CTC_RET_Zx3         | hex://blocks/api?pvoid#pvoid_g[64f](64f~ref)                                                                  | in void* pvoid<double>(ref double src)                                                                        | 0f 1f 44 00 00 48 8b c1 c3
294       | 7ff7c82beb30h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](8u~ref)                                                                        | in byte* ptr<byte>(ref byte src)                                                                              | 0f 1f 44 00 00 48 8b c1 c3
295       | 7ff7c82beb50h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](8i~ref)                                                                        | in sbyte* ptr<sbyte>(ref sbyte src)                                                                           | 0f 1f 44 00 00 48 8b c1 c3
296       | 7ff7c82beb70h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](16u~ref)                                                                      | in ushort* ptr<ushort>(ref ushort src)                                                                        | 0f 1f 44 00 00 48 8b c1 c3
297       | 7ff7c82beb90h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](16i~ref)                                                                      | in short* ptr<short>(ref short src)                                                                           | 0f 1f 44 00 00 48 8b c1 c3
298       | 7ff7c82bebb0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](32u~ref)                                                                      | in uint* ptr<uint>(ref uint src)                                                                              | 0f 1f 44 00 00 48 8b c1 c3
299       | 7ff7c82bebd0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](32i~ref)                                                                      | in int* ptr<int>(ref int src)                                                                                 | 0f 1f 44 00 00 48 8b c1 c3
300       | 7ff7c82bebf0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64u](64u~ref)                                                                      | in ulong* ptr<ulong>(ref ulong src)                                                                           | 0f 1f 44 00 00 48 8b c1 c3
301       | 7ff7c82bec10h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64i](64i~ref)                                                                      | in long* ptr<long>(ref long src)                                                                              | 0f 1f 44 00 00 48 8b c1 c3
302       | 7ff7c82bf040h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](32f~ref)                                                                      | in float* ptr<float>(ref float src)                                                                           | 0f 1f 44 00 00 48 8b c1 c3
303       | 7ff7c82bf060h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64f](64f~ref)                                                                      | in double* ptr<double>(ref double src)                                                                        | 0f 1f 44 00 00 48 8b c1 c3
304       | 7ff7c82bf080h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b16x8u~in)                                                                     | in byte* ptr<byte>(in Block16<byte> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
305       | 7ff7c82bf0a0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b16x8i~in)                                                                     | in sbyte* ptr<sbyte>(in Block16<sbyte> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
306       | 7ff7c82bf0c0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b16x16u~in)                                                                   | in ushort* ptr<ushort>(in Block16<ushort> src)                                                                | 0f 1f 44 00 00 48 8b 01 c3
307       | 7ff7c82bf0e0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b16x16i~in)                                                                   | in short* ptr<short>(in Block16<short> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
308       | 7ff7c82bf100h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b32x8u~in)                                                                     | in byte* ptr<byte>(in Block32<byte> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
309       | 7ff7c82bf120h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b32x8i~in)                                                                     | in sbyte* ptr<sbyte>(in Block32<sbyte> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
310       | 7ff7c82bf140h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b32x16u~in)                                                                   | in ushort* ptr<ushort>(in Block32<ushort> src)                                                                | 0f 1f 44 00 00 48 8b 01 c3
311       | 7ff7c82bf160h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b32x16i~in)                                                                   | in short* ptr<short>(in Block32<short> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
312       | 7ff7c82bf590h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](b32x32u~in)                                                                   | in uint* ptr<uint>(in Block32<uint> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
313       | 7ff7c82bf5b0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](b32x32i~in)                                                                   | in int* ptr<int>(in Block32<int> src)                                                                         | 0f 1f 44 00 00 48 8b 01 c3
314       | 7ff7c82bf5d0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](b32x32f~in)                                                                   | in float* ptr<float>(in Block32<float> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
315       | 7ff7c82bf5f0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b64x8u~in)                                                                     | in byte* ptr<byte>(in Block64<byte> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
316       | 7ff7c82bf610h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b64x8i~in)                                                                     | in sbyte* ptr<sbyte>(in Block64<sbyte> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
317       | 7ff7c82bf630h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b64x16u~in)                                                                   | in ushort* ptr<ushort>(in Block64<ushort> src)                                                                | 0f 1f 44 00 00 48 8b 01 c3
318       | 7ff7c82bf650h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b64x16i~in)                                                                   | in short* ptr<short>(in Block64<short> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
319       | 7ff7c82bf670h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](b64x32u~in)                                                                   | in uint* ptr<uint>(in Block64<uint> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
320       | 7ff7c82bf690h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](b64x32i~in)                                                                   | in int* ptr<int>(in Block64<int> src)                                                                         | 0f 1f 44 00 00 48 8b 01 c3
321       | 7ff7c82bf6b0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64u](b64x64u~in)                                                                   | in ulong* ptr<ulong>(in Block64<ulong> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
322       | 7ff7c82bf6d0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64i](b64x64i~in)                                                                   | in long* ptr<long>(in Block64<long> src)                                                                      | 0f 1f 44 00 00 48 8b 01 c3
323       | 7ff7c82bf6f0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](b64x32f~in)                                                                   | in float* ptr<float>(in Block64<float> src)                                                                   | 0f 1f 44 00 00 48 8b 01 c3
324       | 7ff7c82bf710h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64f](b64x64f~in)                                                                   | in double* ptr<double>(in Block64<double> src)                                                                | 0f 1f 44 00 00 48 8b 01 c3
325       | 7ff7c82bfb40h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b128x8u~in)                                                                    | in byte* ptr<byte>(in Block128<byte> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
326       | 7ff7c82bfb60h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b128x8i~in)                                                                    | in sbyte* ptr<sbyte>(in Block128<sbyte> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
327       | 7ff7c82bfb80h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b128x16u~in)                                                                  | in ushort* ptr<ushort>(in Block128<ushort> src)                                                               | 0f 1f 44 00 00 48 8b 01 c3
328       | 7ff7c82bfba0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b128x16i~in)                                                                  | in short* ptr<short>(in Block128<short> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
329       | 7ff7c82bfbc0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](b128x32u~in)                                                                  | in uint* ptr<uint>(in Block128<uint> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
330       | 7ff7c82bfbe0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](b128x32i~in)                                                                  | in int* ptr<int>(in Block128<int> src)                                                                        | 0f 1f 44 00 00 48 8b 01 c3
331       | 7ff7c82bfc00h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64u](b128x64u~in)                                                                  | in ulong* ptr<ulong>(in Block128<ulong> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
332       | 7ff7c82bfc20h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64i](b128x64i~in)                                                                  | in long* ptr<long>(in Block128<long> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
333       | 7ff7c82bfc40h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](b128x32f~in)                                                                  | in float* ptr<float>(in Block128<float> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
334       | 7ff7c82bfc60h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64f](b128x64f~in)                                                                  | in double* ptr<double>(in Block128<double> src)                                                               | 0f 1f 44 00 00 48 8b 01 c3
335       | 7ff7c82bfc80h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b256x8u~in)                                                                    | in byte* ptr<byte>(in Block256<byte> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
336       | 7ff7c82bfca0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b256x8i~in)                                                                    | in sbyte* ptr<sbyte>(in Block256<sbyte> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
337       | 7ff7c82bfcc0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b256x16u~in)                                                                  | in ushort* ptr<ushort>(in Block256<ushort> src)                                                               | 0f 1f 44 00 00 48 8b 01 c3
338       | 7ff7c82bfce0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b256x16i~in)                                                                  | in short* ptr<short>(in Block256<short> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
339       | 7ff7c82bfd00h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](b256x32u~in)                                                                  | in uint* ptr<uint>(in Block256<uint> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
340       | 7ff7c82bfd20h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](b256x32i~in)                                                                  | in int* ptr<int>(in Block256<int> src)                                                                        | 0f 1f 44 00 00 48 8b 01 c3
341       | 7ff7c82bfd40h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64u](b256x64u~in)                                                                  | in ulong* ptr<ulong>(in Block256<ulong> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
342       | 7ff7c82bfd60h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64i](b256x64i~in)                                                                  | in long* ptr<long>(in Block256<long> src)                                                                     | 0f 1f 44 00 00 48 8b 01 c3
343       | 7ff7c82bfd80h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](b256x32f~in)                                                                  | in float* ptr<float>(in Block256<float> src)                                                                  | 0f 1f 44 00 00 48 8b 01 c3
344       | 7ff7c82bfda0h   | 9       | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64f](b256x64f~in)                                                                  | in double* ptr<double>(in Block256<double> src)                                                               | 0f 1f 44 00 00 48 8b 01 c3
345       | 7ff7c82c01d0h   | 17      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b16x8u~in,32i)                                                                 | in byte* ptr<byte>(in Block16<byte> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 03 c2 c3
346       | 7ff7c82c0200h   | 17      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b16x8i~in,32i)                                                                 | in sbyte* ptr<sbyte>(in Block16<sbyte> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 03 c2 c3
347       | 7ff7c82c0230h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[16u](b16x16u~in,32i)                                                               | in ushort* ptr<ushort>(in Block16<ushort> src, int block)                                                     | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 50 c3
348       | 7ff7c82c0250h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[16i](b16x16i~in,32i)                                                               | in short* ptr<short>(in Block16<short> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 50 c3
349       | 7ff7c82c0680h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b32x8u~in,32i)                                                                 | in byte* ptr<byte>(in Block32<byte> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 03 c2 c3
350       | 7ff7c82c06b0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b32x8i~in,32i)                                                                 | in sbyte* ptr<sbyte>(in Block32<sbyte> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 03 c2 c3
351       | 7ff7c82c06e0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16u](b32x16u~in,32i)                                                               | in ushort* ptr<ushort>(in Block32<ushort> src, int block)                                                     | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 50 c3
352       | 7ff7c82c0710h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[16i](b32x16i~in,32i)                                                               | in short* ptr<short>(in Block32<short> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 50 c3
353       | 7ff7c82c0740h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[32u](b32x32u~in,32i)                                                               | in uint* ptr<uint>(in Block32<uint> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
354       | 7ff7c82c0b70h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[32i](b32x32i~in,32i)                                                               | in int* ptr<int>(in Block32<int> src, int block)                                                              | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
355       | 7ff7c82c0b90h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[32f](b32x32f~in,32i)                                                               | in float* ptr<float>(in Block32<float> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
356       | 7ff7c82c0fc0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b64x8u~in,32i)                                                                 | in byte* ptr<byte>(in Block64<byte> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 03 c2 c3
357       | 7ff7c82c0ff0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b64x8i~in,32i)                                                                 | in sbyte* ptr<sbyte>(in Block64<sbyte> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 03 c2 c3
358       | 7ff7c82c1020h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16u](b64x16u~in,32i)                                                               | in ushort* ptr<ushort>(in Block64<ushort> src, int block)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 50 c3
359       | 7ff7c82c1050h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16i](b64x16i~in,32i)                                                               | in short* ptr<short>(in Block64<short> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 50 c3
360       | 7ff7c82c1080h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32u](b64x32u~in,32i)                                                               | in uint* ptr<uint>(in Block64<uint> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
361       | 7ff7c82c10b0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32i](b64x32i~in,32i)                                                               | in int* ptr<int>(in Block64<int> src, int block)                                                              | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
362       | 7ff7c82c10e0h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[64u](b64x64u~in,32i)                                                               | in ulong* ptr<ulong>(in Block64<ulong> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
363       | 7ff7c82c1100h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[64i](b64x64i~in,32i)                                                               | in long* ptr<long>(in Block64<long> src, int block)                                                           | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
364       | 7ff7c82c1120h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[32f](b64x32f~in,32i)                                                               | in float* ptr<float>(in Block64<float> src, int block)                                                        | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
365       | 7ff7c82c1150h   | 16      | CTC_RET_SBB         | hex://blocks/api?ptr#ptr_g[64f](b64x64f~in,32i)                                                               | in double* ptr<double>(in Block64<double> src, int block)                                                     | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
366       | 7ff7c82c1580h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b128x8u~in,32i)                                                                | in byte* ptr<byte>(in Block128<byte> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 03 c2 c3
367       | 7ff7c82c15b0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b128x8i~in,32i)                                                                | in sbyte* ptr<sbyte>(in Block128<sbyte> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 03 c2 c3
368       | 7ff7c82c15e0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16u](b128x16u~in,32i)                                                              | in ushort* ptr<ushort>(in Block128<ushort> src, int block)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 50 c3
369       | 7ff7c82c1610h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16i](b128x16i~in,32i)                                                              | in short* ptr<short>(in Block128<short> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 50 c3
370       | 7ff7c82c1640h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32u](b128x32u~in,32i)                                                              | in uint* ptr<uint>(in Block128<uint> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
371       | 7ff7c82c1670h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32i](b128x32i~in,32i)                                                              | in int* ptr<int>(in Block128<int> src, int block)                                                             | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
372       | 7ff7c82c16a0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64u](b128x64u~in,32i)                                                              | in ulong* ptr<ulong>(in Block128<ulong> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
373       | 7ff7c82c16d0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64i](b128x64i~in,32i)                                                              | in long* ptr<long>(in Block128<long> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
374       | 7ff7c82c1700h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32f](b128x32f~in,32i)                                                              | in float* ptr<float>(in Block128<float> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
375       | 7ff7c82c1730h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[64f](b128x64f~in,32i)                                                              | in double* ptr<double>(in Block128<double> src, int block)                                                    | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
376       | 7ff7c82c1b60h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8u](b256x8u~in,32i)                                                                | in byte* ptr<byte>(in Block256<byte> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 03 c2 c3
377       | 7ff7c82c1b90h   | 18      | CTC_RET_Zx3         | hex://blocks/api?ptr#ptr_g[8i](b256x8i~in,32i)                                                                | in sbyte* ptr<sbyte>(in Block256<sbyte> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 03 c2 c3
378       | 7ff7c82c1bc0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16u](b256x16u~in,32i)                                                              | in ushort* ptr<ushort>(in Block256<ushort> src, int block)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 50 c3
379       | 7ff7c82c1bf0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[16i](b256x16i~in,32i)                                                              | in short* ptr<short>(in Block256<short> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 50 c3
380       | 7ff7c82c1c20h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32u](b256x32u~in,32i)                                                              | in uint* ptr<uint>(in Block256<uint> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
381       | 7ff7c82c1c50h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32i](b256x32i~in,32i)                                                              | in int* ptr<int>(in Block256<int> src, int block)                                                             | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
382       | 7ff7c82c1c80h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[64u](b256x64u~in,32i)                                                              | in ulong* ptr<ulong>(in Block256<ulong> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
383       | 7ff7c82c1cb0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[64i](b256x64i~in,32i)                                                              | in long* ptr<long>(in Block256<long> src, int block)                                                          | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
384       | 7ff7c82c1ce0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[32f](b256x32f~in,32i)                                                              | in float* ptr<float>(in Block256<float> src, int block)                                                       | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
385       | 7ff7c82c1d10h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?ptr#ptr_g[64f](b256x64f~in,32i)                                                              | in double* ptr<double>(in Block256<double> src, int block)                                                    | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
386       | 7ff7c82c1d40h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n8,32i)                                                                | bool aligned<byte>(N8 n, int count)                                                                           | 0f 1f 44 00 00 b8 01 00 00 00 c3
387       | 7ff7c82c1d60h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n8,32i)                                                                | bool aligned<sbyte>(N8 n, int count)                                                                          | 0f 1f 44 00 00 b8 01 00 00 00 c3
388       | 7ff7c82c1d80h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[16u](n8,32i)                                                               | bool aligned<ushort>(N8 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
389       | 7ff7c82c1db0h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[16i](n8,32i)                                                               | bool aligned<short>(N8 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
390       | 7ff7c82c1de0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32u](n8,32i)                                                               | bool aligned<uint>(N8 n, int count)                                                                           | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
391       | 7ff7c82c1e10h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32i](n8,32i)                                                               | bool aligned<int>(N8 n, int count)                                                                            | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
392       | 7ff7c82c1e40h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64u](n8,32i)                                                               | bool aligned<ulong>(N8 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
393       | 7ff7c82c1e70h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64i](n8,32i)                                                               | bool aligned<long>(N8 n, int count)                                                                           | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
394       | 7ff7c82c1ea0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32f](n8,32i)                                                               | bool aligned<float>(N8 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
395       | 7ff7c82c1ed0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64f](n8,32i)                                                               | bool aligned<double>(N8 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
396       | 7ff7c82c1f00h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[8u](n16,32i)                                                               | bool aligned<byte>(N16 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
397       | 7ff7c82c1f30h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[8i](n16,32i)                                                               | bool aligned<sbyte>(N16 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
398       | 7ff7c82c1f60h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16u](n16,32i)                                                              | bool aligned<ushort>(N16 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
399       | 7ff7c82c1f90h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16i](n16,32i)                                                              | bool aligned<short>(N16 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
400       | 7ff7c82c1fc0h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[32u](n16,32i)                                                              | bool aligned<uint>(N16 n, int count)                                                                          | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
401       | 7ff7c82c1ff0h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[32i](n16,32i)                                                              | bool aligned<int>(N16 n, int count)                                                                           | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
402       | 7ff7c82c2020h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64u](n16,32i)                                                              | bool aligned<ulong>(N16 n, int count)                                                                         | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
403       | 7ff7c82c2050h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64i](n16,32i)                                                              | bool aligned<long>(N16 n, int count)                                                                          | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
404       | 7ff7c82c2080h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[32f](n16,32i)                                                              | bool aligned<float>(N16 n, int count)                                                                         | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
405       | 7ff7c82c20b0h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64f](n16,32i)                                                              | bool aligned<double>(N16 n, int count)                                                                        | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
406       | 7ff7c82c20e0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n32,32i)                                                               | bool aligned<byte>(N32 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
407       | 7ff7c82c2110h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n32,32i)                                                               | bool aligned<sbyte>(N32 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
408       | 7ff7c82c2140h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[16u](n32,32i)                                                              | bool aligned<ushort>(N32 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
409       | 7ff7c82c2170h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[16i](n32,32i)                                                              | bool aligned<short>(N32 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
410       | 7ff7c82c21a0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32u](n32,32i)                                                              | bool aligned<uint>(N32 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
411       | 7ff7c82c21d0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32i](n32,32i)                                                              | bool aligned<int>(N32 n, int count)                                                                           | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
412       | 7ff7c82c2200h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64u](n32,32i)                                                              | bool aligned<ulong>(N32 n, int count)                                                                         | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
413       | 7ff7c82c2230h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64i](n32,32i)                                                              | bool aligned<long>(N32 n, int count)                                                                          | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
414       | 7ff7c82c2260h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32f](n32,32i)                                                              | bool aligned<float>(N32 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
415       | 7ff7c82c2290h   | 21      | CTC_RET_Zx3         | hex://blocks/api?aligned#aligned_g[64f](n32,32i)                                                              | bool aligned<double>(N32 n, int count)                                                                        | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
416       | 7ff7c82c22c0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n64,32i)                                                               | bool aligned<byte>(N64 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
417       | 7ff7c82c22f0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n64,32i)                                                               | bool aligned<sbyte>(N64 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
418       | 7ff7c82c2320h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16u](n64,32i)                                                              | bool aligned<ushort>(N64 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
419       | 7ff7c82c2350h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16i](n64,32i)                                                              | bool aligned<short>(N64 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
420       | 7ff7c82c2380h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[32u](n64,32i)                                                              | bool aligned<uint>(N64 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
421       | 7ff7c82c23b0h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[32i](n64,32i)                                                              | bool aligned<int>(N64 n, int count)                                                                           | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
422       | 7ff7c82c23e0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64u](n64,32i)                                                              | bool aligned<ulong>(N64 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
423       | 7ff7c82c2410h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64i](n64,32i)                                                              | bool aligned<long>(N64 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
424       | 7ff7c82c2440h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[32f](n64,32i)                                                              | bool aligned<float>(N64 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
425       | 7ff7c82c2470h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64f](n64,32i)                                                              | bool aligned<double>(N64 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
426       | 7ff7c82c24a0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n128,32i)                                                              | bool aligned<byte>(N128 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
427       | 7ff7c82c24d0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n128,32i)                                                              | bool aligned<sbyte>(N128 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
428       | 7ff7c82c2500h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16u](n128,32i)                                                             | bool aligned<ushort>(N128 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
429       | 7ff7c82c2530h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16i](n128,32i)                                                             | bool aligned<short>(N128 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
430       | 7ff7c82c2560h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32u](n128,32i)                                                             | bool aligned<uint>(N128 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
431       | 7ff7c82c2590h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32i](n128,32i)                                                             | bool aligned<int>(N128 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
432       | 7ff7c82c25c0h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[64u](n128,32i)                                                             | bool aligned<ulong>(N128 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
433       | 7ff7c82c25f0h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[64i](n128,32i)                                                             | bool aligned<long>(N128 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
434       | 7ff7c82c2620h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32f](n128,32i)                                                             | bool aligned<float>(N128 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
435       | 7ff7c82c2650h   | 24      | CTC_RET_SBB         | hex://blocks/api?aligned#aligned_g[64f](n128,32i)                                                             | bool aligned<double>(N128 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
436       | 7ff7c82c2680h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n256,32i)                                                              | bool aligned<byte>(N256 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 83 e0 e0 2b d0 0f 94 c0 0f b6 c0 c3
437       | 7ff7c82c26b0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n256,32i)                                                              | bool aligned<sbyte>(N256 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 83 e0 e0 2b d0 0f 94 c0 0f b6 c0 c3
438       | 7ff7c82c26e0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16u](n256,32i)                                                             | bool aligned<ushort>(N256 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
439       | 7ff7c82c2710h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16i](n256,32i)                                                             | bool aligned<short>(N256 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
440       | 7ff7c82c2740h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32u](n256,32i)                                                             | bool aligned<uint>(N256 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
441       | 7ff7c82c2770h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32i](n256,32i)                                                             | bool aligned<int>(N256 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
442       | 7ff7c82c27a0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64u](n256,32i)                                                             | bool aligned<ulong>(N256 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
443       | 7ff7c82c27d0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64i](n256,32i)                                                             | bool aligned<long>(N256 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
444       | 7ff7c82c2800h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32f](n256,32i)                                                             | bool aligned<float>(N256 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
445       | 7ff7c82c2830h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64f](n256,32i)                                                             | bool aligned<double>(N256 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
446       | 7ff7c82c2860h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8u](n512,32i)                                                              | bool aligned<byte>(N512 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 3f 03 c2 83 e0 c0 2b d0 0f 94 c0 0f b6 c0 c3
447       | 7ff7c82c2890h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[8i](n512,32i)                                                              | bool aligned<sbyte>(N512 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 3f 03 c2 83 e0 c0 2b d0 0f 94 c0 0f b6 c0 c3
448       | 7ff7c82c28c0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16u](n512,32i)                                                             | bool aligned<ushort>(N512 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 83 e0 e0 2b d0 0f 94 c0 0f b6 c0 c3
449       | 7ff7c82c28f0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[16i](n512,32i)                                                             | bool aligned<short>(N512 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 83 e0 e0 2b d0 0f 94 c0 0f b6 c0 c3
450       | 7ff7c82c2920h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32u](n512,32i)                                                             | bool aligned<uint>(N512 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
451       | 7ff7c82c2950h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32i](n512,32i)                                                             | bool aligned<int>(N512 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
452       | 7ff7c82c2980h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64u](n512,32i)                                                             | bool aligned<ulong>(N512 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
453       | 7ff7c82c29b0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64i](n512,32i)                                                             | bool aligned<long>(N512 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
454       | 7ff7c82c29e0h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[32f](n512,32i)                                                             | bool aligned<float>(N512 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
455       | 7ff7c82c2a10h   | 27      | CTC_RET_ZED_SBB     | hex://blocks/api?aligned#aligned_g[64f](n512,32i)                                                             | bool aligned<double>(N512 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
456       | 7ff7c82c2e50h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[8u](n16,32i,8u)                                                                | Block16<byte> alloc<byte>(N16 w, int blocks, byte t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 10 ea 73 c7 f7 7f 00 00 e8 65 3f fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 f6 2f fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
457       | 7ff7c82c2ec0h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[8i](n16,32i,8i)                                                                | Block16<sbyte> alloc<sbyte>(N16 w, int blocks, sbyte t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 98 f0 73 c7 f7 7f 00 00 e8 f5 3e fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 86 2f fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
458       | 7ff7c82c2f30h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16u](n16,32i,16u)                                                              | Block16<ushort> alloc<ushort>(N16 w, int blocks, ushort t)                                                    | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 68 d4 15 c8 f7 7f 00 00 e8 88 3e fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 19 2f fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
459       | 7ff7c82c2fa0h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16i](n16,32i,16i)                                                              | Block16<short> alloc<short>(N16 w, int blocks, short t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 20 43 3d c8 f7 7f 00 00 e8 18 3e fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 a9 2e fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
460       | 7ff7c82c3010h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8u](n32,32i,8u)                                                                | Block32<byte> alloc<byte>(N32 w, int blocks, byte t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 10 ea 73 c7 f7 7f 00 00 e8 a4 3d fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 35 2e fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
461       | 7ff7c82c3080h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8i](n32,32i,8i)                                                                | Block32<sbyte> alloc<sbyte>(N32 w, int blocks, sbyte t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 98 f0 73 c7 f7 7f 00 00 e8 34 3d fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 c5 2d fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
462       | 7ff7c82c30f0h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[16u](n32,32i,16u)                                                              | Block32<ushort> alloc<ushort>(N32 w, int blocks, ushort t)                                                    | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 68 d4 15 c8 f7 7f 00 00 e8 c5 3c fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 56 2d fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
463       | 7ff7c82c3160h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[16i](n32,32i,16i)                                                              | Block32<short> alloc<short>(N32 w, int blocks, short t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 20 43 3d c8 f7 7f 00 00 e8 55 3c fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 e6 2c fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
464       | 7ff7c82c31d0h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32u](n32,32i,32u)                                                              | Block32<uint> alloc<uint>(N32 w, int blocks, uint t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 00 c4 15 c8 f7 7f 00 00 e8 e8 3b fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 79 2c fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
465       | 7ff7c82c3240h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32i](n32,32i,32i)                                                              | Block32<int> alloc<int>(N32 w, int blocks, int t)                                                             | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 48 5f 80 c7 f7 7f 00 00 e8 78 3b fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 09 2c fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
466       | 7ff7c82c32b0h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32f](n32,32i,32f)                                                              | Block32<float> alloc<float>(N32 w, int blocks, float t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 00 f3 03 c8 f7 7f 00 00 e8 08 3b fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 99 2b fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
467       | 7ff7c82c3730h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8u](n64,32i,8u)                                                                | Block64<byte> alloc<byte>(N64 w, int blocks, byte t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 10 ea 73 c7 f7 7f 00 00 e8 84 36 fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 15 27 fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
468       | 7ff7c82c37a0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8i](n64,32i,8i)                                                                | Block64<sbyte> alloc<sbyte>(N64 w, int blocks, sbyte t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 98 f0 73 c7 f7 7f 00 00 e8 14 36 fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 a5 26 fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
469       | 7ff7c82c3810h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16u](n64,32i,16u)                                                              | Block64<ushort> alloc<ushort>(N64 w, int blocks, ushort t)                                                    | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 68 d4 15 c8 f7 7f 00 00 e8 a4 35 fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 35 26 fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
470       | 7ff7c82c3880h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16i](n64,32i,16i)                                                              | Block64<short> alloc<short>(N64 w, int blocks, short t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 20 43 3d c8 f7 7f 00 00 e8 34 35 fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 c5 25 fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
471       | 7ff7c82c38f0h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[32u](n64,32i,32u)                                                              | Block64<uint> alloc<uint>(N64 w, int blocks, uint t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 00 c4 15 c8 f7 7f 00 00 e8 c5 34 fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 56 25 fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
472       | 7ff7c82c3960h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[32i](n64,32i,32i)                                                              | Block64<int> alloc<int>(N64 w, int blocks, int t)                                                             | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 48 5f 80 c7 f7 7f 00 00 e8 55 34 fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 e6 24 fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
473       | 7ff7c82c39d0h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64u](n64,32i,64u)                                                              | Block64<ulong> alloc<ulong>(N64 w, int blocks, ulong t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 e0 2f bc c7 f7 7f 00 00 e8 e8 33 fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 79 24 fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
474       | 7ff7c82c3a40h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64i](n64,32i,64i)                                                              | Block64<long> alloc<long>(N64 w, int blocks, long t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 a0 6b 3d c8 f7 7f 00 00 e8 78 33 fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 09 24 fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
475       | 7ff7c82c3ab0h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[32f](n64,32i,32f)                                                              | Block64<float> alloc<float>(N64 w, int blocks, float t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 00 f3 03 c8 f7 7f 00 00 e8 05 33 fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 96 23 fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
476       | 7ff7c82c3b20h   | 84      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64f](n64,32i,64f)                                                              | Block64<double> alloc<double>(N64 w, int blocks, double t)                                                    | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 08 f5 03 c8 f7 7f 00 00 e8 98 32 fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 29 23 fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
477       | 7ff7c82c3b90h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8u](n128,32i,8u)                                                               | Block128<byte> alloc<byte>(N128 w, int blocks, byte t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 10 ea 73 c7 f7 7f 00 00 e8 24 32 fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 b5 22 fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
478       | 7ff7c82c3c00h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8i](n128,32i,8i)                                                               | Block128<sbyte> alloc<sbyte>(N128 w, int blocks, sbyte t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 98 f0 73 c7 f7 7f 00 00 e8 b4 31 fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 45 22 fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
479       | 7ff7c82c3c70h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16u](n128,32i,16u)                                                             | Block128<ushort> alloc<ushort>(N128 w, int blocks, ushort t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 68 d4 15 c8 f7 7f 00 00 e8 44 31 fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 d5 21 fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
480       | 7ff7c82c3ce0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16i](n128,32i,16i)                                                             | Block128<short> alloc<short>(N128 w, int blocks, short t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 20 43 3d c8 f7 7f 00 00 e8 d4 30 fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 65 21 fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
481       | 7ff7c82c3d50h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32u](n128,32i,32u)                                                             | Block128<uint> alloc<uint>(N128 w, int blocks, uint t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 00 c4 15 c8 f7 7f 00 00 e8 64 30 fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 f5 20 fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
482       | 7ff7c82c3dc0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32i](n128,32i,32i)                                                             | Block128<int> alloc<int>(N128 w, int blocks, int t)                                                           | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 48 5f 80 c7 f7 7f 00 00 e8 f4 2f fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 85 20 fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
483       | 7ff7c82c3e30h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[64u](n128,32i,64u)                                                             | Block128<ulong> alloc<ulong>(N128 w, int blocks, ulong t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 e0 2f bc c7 f7 7f 00 00 e8 85 2f fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 16 20 fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
484       | 7ff7c82c3ea0h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[64i](n128,32i,64i)                                                             | Block128<long> alloc<long>(N128 w, int blocks, long t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 a0 6b 3d c8 f7 7f 00 00 e8 15 2f fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 a6 1f fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
485       | 7ff7c82c3f10h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32f](n128,32i,32f)                                                             | Block128<float> alloc<float>(N128 w, int blocks, float t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 00 f3 03 c8 f7 7f 00 00 e8 a4 2e fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 35 1f fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
486       | 7ff7c82c3f80h   | 87      | CTC_RET_ZED_SBB     | hex://blocks/api?alloc#alloc_g[64f](n128,32i,64f)                                                             | Block128<double> alloc<double>(N128 w, int blocks, double t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 08 f5 03 c8 f7 7f 00 00 e8 35 2e fa 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 c6 1e fa 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
487       | 7ff7c8400480h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8u](n256,32i,8u)                                                               | Block256<byte> alloc<byte>(N256 w, int blocks, byte t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 05 49 63 d0 48 b9 10 ea 73 c7 f7 7f 00 00 e8 34 69 e6 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 c5 59 e6 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
488       | 7ff7c84004f0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8i](n256,32i,8i)                                                               | Block256<sbyte> alloc<sbyte>(N256 w, int blocks, sbyte t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 05 49 63 d0 48 b9 98 f0 73 c7 f7 7f 00 00 e8 c4 68 e6 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 55 59 e6 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
489       | 7ff7c8400560h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16u](n256,32i,16u)                                                             | Block256<ushort> alloc<ushort>(N256 w, int blocks, ushort t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 68 d4 15 c8 f7 7f 00 00 e8 54 68 e6 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 e5 58 e6 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
490       | 7ff7c84005d0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16i](n256,32i,16i)                                                             | Block256<short> alloc<short>(N256 w, int blocks, short t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 20 43 3d c8 f7 7f 00 00 e8 e4 67 e6 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 75 58 e6 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
491       | 7ff7c8400640h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32u](n256,32i,32u)                                                             | Block256<uint> alloc<uint>(N256 w, int blocks, uint t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 00 c4 15 c8 f7 7f 00 00 e8 74 67 e6 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 05 58 e6 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
492       | 7ff7c84006b0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32i](n256,32i,32i)                                                             | Block256<int> alloc<int>(N256 w, int blocks, int t)                                                           | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 48 5f 80 c7 f7 7f 00 00 e8 04 67 e6 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 95 57 e6 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
493       | 7ff7c8400720h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64u](n256,32i,64u)                                                             | Block256<ulong> alloc<ulong>(N256 w, int blocks, ulong t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 e0 2f bc c7 f7 7f 00 00 e8 94 66 e6 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 25 57 e6 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
494       | 7ff7c8400790h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64i](n256,32i,64i)                                                             | Block256<long> alloc<long>(N256 w, int blocks, long t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 a0 6b 3d c8 f7 7f 00 00 e8 24 66 e6 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 b5 56 e6 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
495       | 7ff7c8400800h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32f](n256,32i,32f)                                                             | Block256<float> alloc<float>(N256 w, int blocks, float t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 00 f3 03 c8 f7 7f 00 00 e8 b4 65 e6 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 45 56 e6 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
496       | 7ff7c8400870h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64f](n256,32i,64f)                                                             | Block256<double> alloc<double>(N256 w, int blocks, double t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 08 f5 03 c8 f7 7f 00 00 e8 44 65 e6 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 d5 55 e6 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
497       | 7ff7c84008e0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8u](n512,32i,8u)                                                               | Block512<byte> alloc<byte>(N512 w, int blocks, byte t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 06 49 63 d0 48 b9 10 ea 73 c7 f7 7f 00 00 e8 d4 64 e6 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 65 55 e6 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
498       | 7ff7c8400950h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[8i](n512,32i,8i)                                                               | Block512<sbyte> alloc<sbyte>(N512 w, int blocks, sbyte t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 06 49 63 d0 48 b9 98 f0 73 c7 f7 7f 00 00 e8 64 64 e6 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 f5 54 e6 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
499       | 7ff7c84009c0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16u](n512,32i,16u)                                                             | Block512<ushort> alloc<ushort>(N512 w, int blocks, ushort t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 05 49 63 d0 48 b9 68 d4 15 c8 f7 7f 00 00 e8 f4 63 e6 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 85 54 e6 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
500       | 7ff7c8400a30h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[16i](n512,32i,16i)                                                             | Block512<short> alloc<short>(N512 w, int blocks, short t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 05 49 63 d0 48 b9 20 43 3d c8 f7 7f 00 00 e8 84 63 e6 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 15 54 e6 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
501       | 7ff7c8400aa0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32u](n512,32i,32u)                                                             | Block512<uint> alloc<uint>(N512 w, int blocks, uint t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 00 c4 15 c8 f7 7f 00 00 e8 14 63 e6 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 a5 53 e6 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
502       | 7ff7c8400b10h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32i](n512,32i,32i)                                                             | Block512<int> alloc<int>(N512 w, int blocks, int t)                                                           | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 48 5f 80 c7 f7 7f 00 00 e8 a4 62 e6 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 35 53 e6 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
503       | 7ff7c8400b80h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64u](n512,32i,64u)                                                             | Block512<ulong> alloc<ulong>(N512 w, int blocks, ulong t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 e0 2f bc c7 f7 7f 00 00 e8 34 62 e6 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 c5 52 e6 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
504       | 7ff7c8400bf0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64i](n512,32i,64i)                                                             | Block512<long> alloc<long>(N512 w, int blocks, long t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 a0 6b 3d c8 f7 7f 00 00 e8 c4 61 e6 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 55 52 e6 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
505       | 7ff7c8400c60h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[32f](n512,32i,32f)                                                             | Block512<float> alloc<float>(N512 w, int blocks, float t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 00 f3 03 c8 f7 7f 00 00 e8 54 61 e6 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 e5 51 e6 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
506       | 7ff7c8400cd0h   | 88      | CTC_RET_SBB         | hex://blocks/api?alloc#alloc_g[64f](n512,32i,64f)                                                             | Block512<double> alloc<double>(N512 w, int blocks, double t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 08 f5 03 c8 f7 7f 00 00 e8 e4 60 e6 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 75 51 e6 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
507       | 7ff7c8400d40h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[8u](32i)                                                                 | int bitcount<byte>(int cellcount)                                                                             | 0f 1f 44 00 00 8b c1 c1 e0 03 c3
508       | 7ff7c8400d60h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[8i](32i)                                                                 | int bitcount<sbyte>(int cellcount)                                                                            | 0f 1f 44 00 00 8b c1 c1 e0 03 c3
509       | 7ff7c8400d80h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[16u](32i)                                                                | int bitcount<ushort>(int cellcount)                                                                           | 0f 1f 44 00 00 8b c1 c1 e0 04 c3
510       | 7ff7c8400da0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[16i](32i)                                                                | int bitcount<short>(int cellcount)                                                                            | 0f 1f 44 00 00 8b c1 c1 e0 04 c3
511       | 7ff7c8400dc0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[32u](32i)                                                                | int bitcount<uint>(int cellcount)                                                                             | 0f 1f 44 00 00 8b c1 c1 e0 05 c3
512       | 7ff7c8400de0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[32i](32i)                                                                | int bitcount<int>(int cellcount)                                                                              | 0f 1f 44 00 00 8b c1 c1 e0 05 c3
513       | 7ff7c8400e00h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[64u](32i)                                                                | int bitcount<ulong>(int cellcount)                                                                            | 0f 1f 44 00 00 8b c1 c1 e0 06 c3
514       | 7ff7c8400e20h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[64i](32i)                                                                | int bitcount<long>(int cellcount)                                                                             | 0f 1f 44 00 00 8b c1 c1 e0 06 c3
515       | 7ff7c8400e40h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[32f](32i)                                                                | int bitcount<float>(int cellcount)                                                                            | 0f 1f 44 00 00 8b c1 c1 e0 05 c3
516       | 7ff7c8400e60h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?bitcount#bitcount_g[64f](32i)                                                                | int bitcount<double>(int cellcount)                                                                           | 0f 1f 44 00 00 8b c1 c1 e0 06 c3
517       | 7ff7c8400e80h   | 8       | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[8u](n8,32i)                                                            | int minblocks<byte>(N8 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b c2 c3
518       | 7ff7c8400ea0h   | 8       | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[8i](n8,32i)                                                            | int minblocks<sbyte>(N8 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c3
519       | 7ff7c8400ec0h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[16u](n8,32i)                                                           | int minblocks<ushort>(N8 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
520       | 7ff7c8400ef0h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[16i](n8,32i)                                                           | int minblocks<short>(N8 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
521       | 7ff7c8400f20h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32u](n8,32i)                                                           | int minblocks<uint>(N8 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
522       | 7ff7c8400f60h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32i](n8,32i)                                                           | int minblocks<int>(N8 n, int cellcount)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
523       | 7ff7c8400fa0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[64u](n8,32i)                                                           | int minblocks<ulong>(N8 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
524       | 7ff7c8400fe0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[64i](n8,32i)                                                           | int minblocks<long>(N8 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
525       | 7ff7c8401020h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32f](n8,32i)                                                           | int minblocks<float>(N8 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
526       | 7ff7c8401060h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[64f](n8,32i)                                                           | int minblocks<double>(N8 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
527       | 7ff7c84010a0h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[8u](n16,32i)                                                           | int minblocks<byte>(N16 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
528       | 7ff7c84010d0h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[8i](n16,32i)                                                           | int minblocks<sbyte>(N16 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
529       | 7ff7c8401100h   | 30      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[16u](n16,32i)                                                          | int minblocks<ushort>(N16 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
530       | 7ff7c8401130h   | 30      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[16i](n16,32i)                                                          | int minblocks<short>(N16 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
531       | 7ff7c8401160h   | 41      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[32u](n16,32i)                                                          | int minblocks<uint>(N16 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
532       | 7ff7c84011a0h   | 41      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[32i](n16,32i)                                                          | int minblocks<int>(N16 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
533       | 7ff7c84011e0h   | 41      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[64u](n16,32i)                                                          | int minblocks<ulong>(N16 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
534       | 7ff7c8401220h   | 41      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[64i](n16,32i)                                                          | int minblocks<long>(N16 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
535       | 7ff7c8401260h   | 41      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[32f](n16,32i)                                                          | int minblocks<float>(N16 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
536       | 7ff7c84012a0h   | 41      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[64f](n16,32i)                                                          | int minblocks<double>(N16 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
537       | 7ff7c84012e0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8u](n32,32i)                                                           | int minblocks<byte>(N32 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
538       | 7ff7c8401320h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8i](n32,32i)                                                           | int minblocks<sbyte>(N32 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
539       | 7ff7c8401360h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[16u](n32,32i)                                                          | int minblocks<ushort>(N32 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
540       | 7ff7c8401390h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[16i](n32,32i)                                                          | int minblocks<short>(N32 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
541       | 7ff7c84013c0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[32u](n32,32i)                                                          | int minblocks<uint>(N32 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
542       | 7ff7c84013f0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[32i](n32,32i)                                                          | int minblocks<int>(N32 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
543       | 7ff7c8401420h   | 41      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[64u](n32,32i)                                                          | int minblocks<ulong>(N32 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
544       | 7ff7c8401460h   | 41      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[64i](n32,32i)                                                          | int minblocks<long>(N32 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
545       | 7ff7c84014a0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[32f](n32,32i)                                                          | int minblocks<float>(N32 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
546       | 7ff7c84018e0h   | 41      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[64f](n32,32i)                                                          | int minblocks<double>(N32 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b ca 45 33 c0 8b c1 99 41 f7 f8 44 8b c0 45 33 c9 8b c1 99 41 f7 f9 85 d2 74 05 41 8d 40 01 c3 41 8b c0 c3
547       | 7ff7c8401920h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8u](n64,32i)                                                           | int minblocks<byte>(N64 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
548       | 7ff7c8401960h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8i](n64,32i)                                                           | int minblocks<sbyte>(N64 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
549       | 7ff7c84019a0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[16u](n64,32i)                                                          | int minblocks<ushort>(N64 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
550       | 7ff7c84019e0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[16i](n64,32i)                                                          | int minblocks<short>(N64 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
551       | 7ff7c8401a20h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[32u](n64,32i)                                                          | int minblocks<uint>(N64 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
552       | 7ff7c8401a50h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[32i](n64,32i)                                                          | int minblocks<int>(N64 n, int cellcount)                                                                      | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
553       | 7ff7c8401a80h   | 30      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[64u](n64,32i)                                                          | int minblocks<ulong>(N64 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
554       | 7ff7c8401ab0h   | 30      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[64i](n64,32i)                                                          | int minblocks<long>(N64 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
555       | 7ff7c8401ae0h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[32f](n64,32i)                                                          | int minblocks<float>(N64 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
556       | 7ff7c8401b10h   | 30      | CTC_RET_Zx3         | hex://blocks/api?minblocks#minblocks_g[64f](n64,32i)                                                          | int minblocks<double>(N64 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 8b d0 c1 fa 1f 83 e2 00 03 d0 83 e2 ff 8b c8 2b ca 74 03 ff c0 c3 c3
557       | 7ff7c8401b40h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8u](n128,32i)                                                          | int minblocks<byte>(N128 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
558       | 7ff7c8401b80h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8i](n128,32i)                                                          | int minblocks<sbyte>(N128 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
559       | 7ff7c8401bc0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[16u](n128,32i)                                                         | int minblocks<ushort>(N128 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
560       | 7ff7c8401c00h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[16i](n128,32i)                                                         | int minblocks<short>(N128 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
561       | 7ff7c8401c40h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32u](n128,32i)                                                         | int minblocks<uint>(N128 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
562       | 7ff7c8401c80h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32i](n128,32i)                                                         | int minblocks<int>(N128 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
563       | 7ff7c8401cc0h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[64u](n128,32i)                                                         | int minblocks<ulong>(N128 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
564       | 7ff7c8401cf0h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[64i](n128,32i)                                                         | int minblocks<long>(N128 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
565       | 7ff7c8401d20h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32f](n128,32i)                                                         | int minblocks<float>(N128 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
566       | 7ff7c8401d60h   | 32      | CTC_RET_SBB         | hex://blocks/api?minblocks#minblocks_g[64f](n128,32i)                                                         | int minblocks<double>(N128 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 d1 f8 8b ca c1 e9 1f 03 ca 83 e1 fe 2b d1 74 03 ff c0 c3 c3
567       | 7ff7c8401d90h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8u](n256,32i)                                                          | int minblocks<byte>(N256 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 c1 f8 05 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 74 03 ff c0 c3 c3
568       | 7ff7c8401dd0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8i](n256,32i)                                                          | int minblocks<sbyte>(N256 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 c1 f8 05 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 74 03 ff c0 c3 c3
569       | 7ff7c8401e10h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[16u](n256,32i)                                                         | int minblocks<ushort>(N256 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
570       | 7ff7c8401e50h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[16i](n256,32i)                                                         | int minblocks<short>(N256 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
571       | 7ff7c8401e90h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32u](n256,32i)                                                         | int minblocks<uint>(N256 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
572       | 7ff7c8401ed0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32i](n256,32i)                                                         | int minblocks<int>(N256 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
573       | 7ff7c8401f10h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[64u](n256,32i)                                                         | int minblocks<ulong>(N256 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
574       | 7ff7c8401f50h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[64i](n256,32i)                                                         | int minblocks<long>(N256 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
575       | 7ff7c8401f90h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32f](n256,32i)                                                         | int minblocks<float>(N256 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
576       | 7ff7c8401fd0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[64f](n256,32i)                                                         | int minblocks<double>(N256 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 c1 f8 02 8b ca c1 f9 1f 83 e1 03 03 ca 83 e1 fc 2b d1 74 03 ff c0 c3 c3
577       | 7ff7c8402010h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8u](n512,32i)                                                          | int minblocks<byte>(N512 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 3f 03 c2 c1 f8 06 8b ca c1 f9 1f 83 e1 3f 03 ca 83 e1 c0 2b d1 74 03 ff c0 c3 c3
578       | 7ff7c8402050h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[8i](n512,32i)                                                          | int minblocks<sbyte>(N512 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 3f 03 c2 c1 f8 06 8b ca c1 f9 1f 83 e1 3f 03 ca 83 e1 c0 2b d1 74 03 ff c0 c3 c3
579       | 7ff7c8402090h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[16u](n512,32i)                                                         | int minblocks<ushort>(N512 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 c1 f8 05 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 74 03 ff c0 c3 c3
580       | 7ff7c84020d0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[16i](n512,32i)                                                         | int minblocks<short>(N512 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 c1 f8 05 8b ca c1 f9 1f 83 e1 1f 03 ca 83 e1 e0 2b d1 74 03 ff c0 c3 c3
581       | 7ff7c8402110h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32u](n512,32i)                                                         | int minblocks<uint>(N512 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
582       | 7ff7c8402150h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32i](n512,32i)                                                         | int minblocks<int>(N512 n, int cellcount)                                                                     | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
583       | 7ff7c8402190h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[64u](n512,32i)                                                         | int minblocks<ulong>(N512 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
584       | 7ff7c84021d0h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[64i](n512,32i)                                                         | int minblocks<long>(N512 n, int cellcount)                                                                    | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
585       | 7ff7c8402210h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[32f](n512,32i)                                                         | int minblocks<float>(N512 n, int cellcount)                                                                   | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 c1 f8 04 8b ca c1 f9 1f 83 e1 0f 03 ca 83 e1 f0 2b d1 74 03 ff c0 c3 c3
586       | 7ff7c8402250h   | 39      | CTC_RET_ZED_SBB     | hex://blocks/api?minblocks#minblocks_g[64f](n512,32i)                                                         | int minblocks<double>(N512 n, int cellcount)                                                                  | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 c1 f8 03 8b ca c1 f9 1f 83 e1 07 03 ca 83 e1 f8 2b d1 74 03 ff c0 c3 c3
587       | 7ff7c8402290h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[8u](n8,32i)                                                      | int blockedcells<byte>(N8 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c3
588       | 7ff7c84022b0h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[8i](n8,32i)                                                      | int blockedcells<sbyte>(N8 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c3
589       | 7ff7c84022d0h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[16u](n8,32i)                                                     | int blockedcells<ushort>(N8 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 d1 e0 c3
590       | 7ff7c84022f0h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[16i](n8,32i)                                                     | int blockedcells<short>(N8 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 d1 e0 c3
591       | 7ff7c8402310h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32u](n8,32i)                                                     | int blockedcells<uint>(N8 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
592       | 7ff7c8402330h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32i](n8,32i)                                                     | int blockedcells<int>(N8 n, int blocks)                                                                       | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
593       | 7ff7c8402350h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[64u](n8,32i)                                                     | int blockedcells<ulong>(N8 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
594       | 7ff7c8402370h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[64i](n8,32i)                                                     | int blockedcells<long>(N8 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
595       | 7ff7c8402390h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32f](n8,32i)                                                     | int blockedcells<float>(N8 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
596       | 7ff7c84023b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[64f](n8,32i)                                                     | int blockedcells<double>(N8 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
597       | 7ff7c84023d0h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[8u](n16,32i)                                                     | int blockedcells<byte>(N16 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 d1 e0 c3
598       | 7ff7c84023f0h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[8i](n16,32i)                                                     | int blockedcells<sbyte>(N16 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 d1 e0 c3
599       | 7ff7c8402410h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[16u](n16,32i)                                                    | int blockedcells<ushort>(N16 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c3
600       | 7ff7c8402430h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[16i](n16,32i)                                                    | int blockedcells<short>(N16 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c3
601       | 7ff7c8402450h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[32u](n16,32i)                                                    | int blockedcells<uint>(N16 n, int blocks)                                                                     | 0f 1f 44 00 00 33 c0 c3
602       | 7ff7c8402470h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[32i](n16,32i)                                                    | int blockedcells<int>(N16 n, int blocks)                                                                      | 0f 1f 44 00 00 33 c0 c3
603       | 7ff7c8402490h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[64u](n16,32i)                                                    | int blockedcells<ulong>(N16 n, int blocks)                                                                    | 0f 1f 44 00 00 33 c0 c3
604       | 7ff7c84024b0h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[64i](n16,32i)                                                    | int blockedcells<long>(N16 n, int blocks)                                                                     | 0f 1f 44 00 00 33 c0 c3
605       | 7ff7c84024d0h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[32f](n16,32i)                                                    | int blockedcells<float>(N16 n, int blocks)                                                                    | 0f 1f 44 00 00 33 c0 c3
606       | 7ff7c84024f0h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[64f](n16,32i)                                                    | int blockedcells<double>(N16 n, int blocks)                                                                   | 0f 1f 44 00 00 33 c0 c3
607       | 7ff7c8402510h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8u](n32,32i)                                                     | int blockedcells<byte>(N32 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
608       | 7ff7c8402530h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8i](n32,32i)                                                     | int blockedcells<sbyte>(N32 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
609       | 7ff7c8402550h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[16u](n32,32i)                                                    | int blockedcells<ushort>(N32 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 d1 e0 c3
610       | 7ff7c8402570h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[16i](n32,32i)                                                    | int blockedcells<short>(N32 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 d1 e0 c3
611       | 7ff7c8402590h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[32u](n32,32i)                                                    | int blockedcells<uint>(N32 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c3
612       | 7ff7c84025b0h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[32i](n32,32i)                                                    | int blockedcells<int>(N32 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 c3
613       | 7ff7c84025d0h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[64u](n32,32i)                                                    | int blockedcells<ulong>(N32 n, int blocks)                                                                    | 0f 1f 44 00 00 33 c0 c3
614       | 7ff7c84025f0h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[64i](n32,32i)                                                    | int blockedcells<long>(N32 n, int blocks)                                                                     | 0f 1f 44 00 00 33 c0 c3
615       | 7ff7c8402610h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[32f](n32,32i)                                                    | int blockedcells<float>(N32 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c3
616       | 7ff7c8402630h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[64f](n32,32i)                                                    | int blockedcells<double>(N32 n, int blocks)                                                                   | 0f 1f 44 00 00 33 c0 c3
617       | 7ff7c8402650h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8u](n64,32i)                                                     | int blockedcells<byte>(N64 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
618       | 7ff7c8402670h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8i](n64,32i)                                                     | int blockedcells<sbyte>(N64 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
619       | 7ff7c8402690h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[16u](n64,32i)                                                    | int blockedcells<ushort>(N64 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
620       | 7ff7c84026b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[16i](n64,32i)                                                    | int blockedcells<short>(N64 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
621       | 7ff7c84026d0h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[32u](n64,32i)                                                    | int blockedcells<uint>(N64 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 d1 e0 c3
622       | 7ff7c84026f0h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[32i](n64,32i)                                                    | int blockedcells<int>(N64 n, int blocks)                                                                      | 0f 1f 44 00 00 8b c2 d1 e0 c3
623       | 7ff7c8402710h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[64u](n64,32i)                                                    | int blockedcells<ulong>(N64 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c3
624       | 7ff7c8402730h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[64i](n64,32i)                                                    | int blockedcells<long>(N64 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c3
625       | 7ff7c8402750h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[32f](n64,32i)                                                    | int blockedcells<float>(N64 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 d1 e0 c3
626       | 7ff7c8402770h   | 8       | CTC_RET_SBB         | hex://blocks/api?blockedcells#blockedcells_g[64f](n64,32i)                                                    | int blockedcells<double>(N64 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c3
627       | 7ff7c8402790h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8u](n128,32i)                                                    | int blockedcells<byte>(N128 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
628       | 7ff7c84027b0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8i](n128,32i)                                                    | int blockedcells<sbyte>(N128 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
629       | 7ff7c84027d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[16u](n128,32i)                                                   | int blockedcells<ushort>(N128 n, int blocks)                                                                  | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
630       | 7ff7c84027f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[16i](n128,32i)                                                   | int blockedcells<short>(N128 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
631       | 7ff7c8402810h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32u](n128,32i)                                                   | int blockedcells<uint>(N128 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
632       | 7ff7c8402830h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32i](n128,32i)                                                   | int blockedcells<int>(N128 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
633       | 7ff7c8402850h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[64u](n128,32i)                                                   | int blockedcells<ulong>(N128 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 d1 e0 c3
634       | 7ff7c8402870h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[64i](n128,32i)                                                   | int blockedcells<long>(N128 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 d1 e0 c3
635       | 7ff7c8402890h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32f](n128,32i)                                                   | int blockedcells<float>(N128 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
636       | 7ff7c84028b0h   | 10      | CTC_RET_Zx3         | hex://blocks/api?blockedcells#blockedcells_g[64f](n128,32i)                                                   | int blockedcells<double>(N128 n, int blocks)                                                                  | 0f 1f 44 00 00 8b c2 d1 e0 c3
637       | 7ff7c84028d0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8u](n256,32i)                                                    | int blockedcells<byte>(N256 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 05 c3
638       | 7ff7c84028f0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8i](n256,32i)                                                    | int blockedcells<sbyte>(N256 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 05 c3
639       | 7ff7c8402910h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[16u](n256,32i)                                                   | int blockedcells<ushort>(N256 n, int blocks)                                                                  | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
640       | 7ff7c8402930h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[16i](n256,32i)                                                   | int blockedcells<short>(N256 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
641       | 7ff7c8402950h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32u](n256,32i)                                                   | int blockedcells<uint>(N256 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
642       | 7ff7c8402970h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32i](n256,32i)                                                   | int blockedcells<int>(N256 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
643       | 7ff7c8402990h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[64u](n256,32i)                                                   | int blockedcells<ulong>(N256 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
644       | 7ff7c8402dc0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[64i](n256,32i)                                                   | int blockedcells<long>(N256 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
645       | 7ff7c8402de0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32f](n256,32i)                                                   | int blockedcells<float>(N256 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
646       | 7ff7c8402e00h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[64f](n256,32i)                                                   | int blockedcells<double>(N256 n, int blocks)                                                                  | 0f 1f 44 00 00 8b c2 c1 e0 02 c3
647       | 7ff7c8402e20h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8u](n512,32i)                                                    | int blockedcells<byte>(N512 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 06 c3
648       | 7ff7c8402e40h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[8i](n512,32i)                                                    | int blockedcells<sbyte>(N512 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 06 c3
649       | 7ff7c8402e60h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[16u](n512,32i)                                                   | int blockedcells<ushort>(N512 n, int blocks)                                                                  | 0f 1f 44 00 00 8b c2 c1 e0 05 c3
650       | 7ff7c8402e80h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[16i](n512,32i)                                                   | int blockedcells<short>(N512 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 05 c3
651       | 7ff7c8402ea0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32u](n512,32i)                                                   | int blockedcells<uint>(N512 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
652       | 7ff7c8402ec0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32i](n512,32i)                                                   | int blockedcells<int>(N512 n, int blocks)                                                                     | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
653       | 7ff7c8402ee0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[64u](n512,32i)                                                   | int blockedcells<ulong>(N512 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
654       | 7ff7c8402f00h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[64i](n512,32i)                                                   | int blockedcells<long>(N512 n, int blocks)                                                                    | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
655       | 7ff7c8402f20h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[32f](n512,32i)                                                   | int blockedcells<float>(N512 n, int blocks)                                                                   | 0f 1f 44 00 00 8b c2 c1 e0 04 c3
656       | 7ff7c8402f40h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blockedcells#blockedcells_g[64f](n512,32i)                                                   | int blockedcells<double>(N512 n, int blocks)                                                                  | 0f 1f 44 00 00 8b c2 c1 e0 03 c3
657       | 7ff7c8403620h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8u](n8,8u)                                                               | int blocklen<byte>(N8 w, byte t)                                                                              | 0f 1f 44 00 00 b8 01 00 00 00 c3
658       | 7ff7c8403640h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8i](n8,8i)                                                               | int blocklen<sbyte>(N8 w, sbyte t)                                                                            | 0f 1f 44 00 00 b8 01 00 00 00 c3
659       | 7ff7c8403660h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8u](n16,8u)                                                              | int blocklen<byte>(N16 w, byte t)                                                                             | 0f 1f 44 00 00 b8 02 00 00 00 c3
660       | 7ff7c8403680h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8i](n16,8i)                                                              | int blocklen<sbyte>(N16 w, sbyte t)                                                                           | 0f 1f 44 00 00 b8 02 00 00 00 c3
661       | 7ff7c84036a0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16u](n16,16u)                                                            | int blocklen<ushort>(N16 w, ushort t)                                                                         | 0f 1f 44 00 00 b8 01 00 00 00 c3
662       | 7ff7c84036c0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16i](n16,16i)                                                            | int blocklen<short>(N16 w, short t)                                                                           | 0f 1f 44 00 00 b8 01 00 00 00 c3
663       | 7ff7c84036e0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8u](n32,8u)                                                              | int blocklen<byte>(N32 w, byte t)                                                                             | 0f 1f 44 00 00 b8 04 00 00 00 c3
664       | 7ff7c8403700h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8i](n32,8i)                                                              | int blocklen<sbyte>(N32 w, sbyte t)                                                                           | 0f 1f 44 00 00 b8 04 00 00 00 c3
665       | 7ff7c8403720h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16u](n32,16u)                                                            | int blocklen<ushort>(N32 w, ushort t)                                                                         | 0f 1f 44 00 00 b8 02 00 00 00 c3
666       | 7ff7c8403740h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16i](n32,16i)                                                            | int blocklen<short>(N32 w, short t)                                                                           | 0f 1f 44 00 00 b8 02 00 00 00 c3
667       | 7ff7c8403760h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32u](n32,32u)                                                            | int blocklen<uint>(N32 w, uint t)                                                                             | 0f 1f 44 00 00 b8 01 00 00 00 c3
668       | 7ff7c8403780h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32i](n32,32i)                                                            | int blocklen<int>(N32 w, int t)                                                                               | 0f 1f 44 00 00 b8 01 00 00 00 c3
669       | 7ff7c84037a0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32f](n32,32f)                                                            | int blocklen<float>(N32 w, float t)                                                                           | 0f 1f 44 00 00 b8 01 00 00 00 c3
670       | 7ff7c84037c0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8u](n64,8u)                                                              | int blocklen<byte>(N64 w, byte t)                                                                             | 0f 1f 44 00 00 b8 08 00 00 00 c3
671       | 7ff7c84037e0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8i](n64,8i)                                                              | int blocklen<sbyte>(N64 w, sbyte t)                                                                           | 0f 1f 44 00 00 b8 08 00 00 00 c3
672       | 7ff7c8403800h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16u](n64,16u)                                                            | int blocklen<ushort>(N64 w, ushort t)                                                                         | 0f 1f 44 00 00 b8 04 00 00 00 c3
673       | 7ff7c8403820h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16i](n64,16i)                                                            | int blocklen<short>(N64 w, short t)                                                                           | 0f 1f 44 00 00 b8 04 00 00 00 c3
674       | 7ff7c8403840h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32u](n64,32u)                                                            | int blocklen<uint>(N64 w, uint t)                                                                             | 0f 1f 44 00 00 b8 02 00 00 00 c3
675       | 7ff7c8403860h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32i](n64,32i)                                                            | int blocklen<int>(N64 w, int t)                                                                               | 0f 1f 44 00 00 b8 02 00 00 00 c3
676       | 7ff7c8403880h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64u](n64,64u)                                                            | int blocklen<ulong>(N64 w, ulong t)                                                                           | 0f 1f 44 00 00 b8 01 00 00 00 c3
677       | 7ff7c84038a0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64i](n64,64i)                                                            | int blocklen<long>(N64 w, long t)                                                                             | 0f 1f 44 00 00 b8 01 00 00 00 c3
678       | 7ff7c84038c0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32f](n64,32f)                                                            | int blocklen<float>(N64 w, float t)                                                                           | 0f 1f 44 00 00 b8 02 00 00 00 c3
679       | 7ff7c84038e0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64f](n64,64f)                                                            | int blocklen<double>(N64 w, double t)                                                                         | 0f 1f 44 00 00 b8 01 00 00 00 c3
680       | 7ff7c8403900h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8u](n128,8u)                                                             | int blocklen<byte>(N128 w, byte t)                                                                            | 0f 1f 44 00 00 b8 10 00 00 00 c3
681       | 7ff7c8403920h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8i](n128,8i)                                                             | int blocklen<sbyte>(N128 w, sbyte t)                                                                          | 0f 1f 44 00 00 b8 10 00 00 00 c3
682       | 7ff7c8403940h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16u](n128,16u)                                                           | int blocklen<ushort>(N128 w, ushort t)                                                                        | 0f 1f 44 00 00 b8 08 00 00 00 c3
683       | 7ff7c8403960h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16i](n128,16i)                                                           | int blocklen<short>(N128 w, short t)                                                                          | 0f 1f 44 00 00 b8 08 00 00 00 c3
684       | 7ff7c8403980h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32u](n128,32u)                                                           | int blocklen<uint>(N128 w, uint t)                                                                            | 0f 1f 44 00 00 b8 04 00 00 00 c3
685       | 7ff7c84039a0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32i](n128,32i)                                                           | int blocklen<int>(N128 w, int t)                                                                              | 0f 1f 44 00 00 b8 04 00 00 00 c3
686       | 7ff7c84039c0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64u](n128,64u)                                                           | int blocklen<ulong>(N128 w, ulong t)                                                                          | 0f 1f 44 00 00 b8 02 00 00 00 c3
687       | 7ff7c84039e0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64i](n128,64i)                                                           | int blocklen<long>(N128 w, long t)                                                                            | 0f 1f 44 00 00 b8 02 00 00 00 c3
688       | 7ff7c8403a00h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32f](n128,32f)                                                           | int blocklen<float>(N128 w, float t)                                                                          | 0f 1f 44 00 00 b8 04 00 00 00 c3
689       | 7ff7c8403a20h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64f](n128,64f)                                                           | int blocklen<double>(N128 w, double t)                                                                        | 0f 1f 44 00 00 b8 02 00 00 00 c3
690       | 7ff7c8403a40h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8u](n256,8u)                                                             | int blocklen<byte>(N256 w, byte t)                                                                            | 0f 1f 44 00 00 b8 20 00 00 00 c3
691       | 7ff7c8403a60h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8i](n256,8i)                                                             | int blocklen<sbyte>(N256 w, sbyte t)                                                                          | 0f 1f 44 00 00 b8 20 00 00 00 c3
692       | 7ff7c8403a80h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16u](n256,16u)                                                           | int blocklen<ushort>(N256 w, ushort t)                                                                        | 0f 1f 44 00 00 b8 10 00 00 00 c3
693       | 7ff7c8403aa0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16i](n256,16i)                                                           | int blocklen<short>(N256 w, short t)                                                                          | 0f 1f 44 00 00 b8 10 00 00 00 c3
694       | 7ff7c8403ac0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32u](n256,32u)                                                           | int blocklen<uint>(N256 w, uint t)                                                                            | 0f 1f 44 00 00 b8 08 00 00 00 c3
695       | 7ff7c8403ae0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32i](n256,32i)                                                           | int blocklen<int>(N256 w, int t)                                                                              | 0f 1f 44 00 00 b8 08 00 00 00 c3
696       | 7ff7c8403b00h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64u](n256,64u)                                                           | int blocklen<ulong>(N256 w, ulong t)                                                                          | 0f 1f 44 00 00 b8 04 00 00 00 c3
697       | 7ff7c8403b20h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64i](n256,64i)                                                           | int blocklen<long>(N256 w, long t)                                                                            | 0f 1f 44 00 00 b8 04 00 00 00 c3
698       | 7ff7c8403b40h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32f](n256,32f)                                                           | int blocklen<float>(N256 w, float t)                                                                          | 0f 1f 44 00 00 b8 08 00 00 00 c3
699       | 7ff7c8403b60h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64f](n256,64f)                                                           | int blocklen<double>(N256 w, double t)                                                                        | 0f 1f 44 00 00 b8 04 00 00 00 c3
700       | 7ff7c8403b80h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8u](n512,8u)                                                             | int blocklen<byte>(N512 w, byte t)                                                                            | 0f 1f 44 00 00 b8 40 00 00 00 c3
701       | 7ff7c8403ba0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[8i](n512,8i)                                                             | int blocklen<sbyte>(N512 w, sbyte t)                                                                          | 0f 1f 44 00 00 b8 40 00 00 00 c3
702       | 7ff7c8403bc0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16u](n512,16u)                                                           | int blocklen<ushort>(N512 w, ushort t)                                                                        | 0f 1f 44 00 00 b8 20 00 00 00 c3
703       | 7ff7c8403be0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[16i](n512,16i)                                                           | int blocklen<short>(N512 w, short t)                                                                          | 0f 1f 44 00 00 b8 20 00 00 00 c3
704       | 7ff7c8403c00h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32u](n512,32u)                                                           | int blocklen<uint>(N512 w, uint t)                                                                            | 0f 1f 44 00 00 b8 10 00 00 00 c3
705       | 7ff7c8403c20h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32i](n512,32i)                                                           | int blocklen<int>(N512 w, int t)                                                                              | 0f 1f 44 00 00 b8 10 00 00 00 c3
706       | 7ff7c8403c40h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64u](n512,64u)                                                           | int blocklen<ulong>(N512 w, ulong t)                                                                          | 0f 1f 44 00 00 b8 08 00 00 00 c3
707       | 7ff7c8403c60h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64i](n512,64i)                                                           | int blocklen<long>(N512 w, long t)                                                                            | 0f 1f 44 00 00 b8 08 00 00 00 c3
708       | 7ff7c8403c80h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[32f](n512,32f)                                                           | int blocklen<float>(N512 w, float t)                                                                          | 0f 1f 44 00 00 b8 10 00 00 00 c3
709       | 7ff7c8403ca0h   | 11      | CTC_RET_ZED_SBB     | hex://blocks/api?blocklen#blocklen_g[64f](n512,64f)                                                           | int blocklen<double>(N512 w, double t)                                                                        | 0f 1f 44 00 00 b8 08 00 00 00 c3
710       | 7ff7c8403cc0h   | 17      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8u](b16x8u~in,32i)                                                       | ref byte blockref<byte>(in Block16<byte> src, int index)                                                      | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 03 c2 c3
711       | 7ff7c8403cf0h   | 17      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8i](b16x8i~in,32i)                                                       | ref sbyte blockref<sbyte>(in Block16<sbyte> src, int index)                                                   | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 03 c2 c3
712       | 7ff7c8403d20h   | 16      | CTC_RET_SBB         | hex://blocks/api?blockref#blockref_g[16u](b16x16u~in,32i)                                                     | ref ushort blockref<ushort>(in Block16<ushort> src, int index)                                                | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 50 c3
713       | 7ff7c8403d40h   | 16      | CTC_RET_SBB         | hex://blocks/api?blockref#blockref_g[16i](b16x16i~in,32i)                                                     | ref short blockref<short>(in Block16<short> src, int index)                                                   | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 50 c3
714       | 7ff7c8403d60h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8u](b32x8u~in,32i)                                                       | ref byte blockref<byte>(in Block32<byte> src, int index)                                                      | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 03 c2 c3
715       | 7ff7c8403d90h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8i](b32x8i~in,32i)                                                       | ref sbyte blockref<sbyte>(in Block32<sbyte> src, int index)                                                   | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 03 c2 c3
716       | 7ff7c8403dc0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[16u](b32x16u~in,32i)                                                     | ref ushort blockref<ushort>(in Block32<ushort> src, int index)                                                | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 50 c3
717       | 7ff7c8403df0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[16i](b32x16i~in,32i)                                                     | ref short blockref<short>(in Block32<short> src, int index)                                                   | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 50 c3
718       | 7ff7c8403e20h   | 16      | CTC_RET_SBB         | hex://blocks/api?blockref#blockref_g[32u](b32x32u~in,32i)                                                     | ref uint blockref<uint>(in Block32<uint> src, int index)                                                      | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
719       | 7ff7c8403e40h   | 16      | CTC_RET_SBB         | hex://blocks/api?blockref#blockref_g[32i](b32x32i~in,32i)                                                     | ref int blockref<int>(in Block32<int> src, int index)                                                         | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
720       | 7ff7c8403e60h   | 16      | CTC_RET_SBB         | hex://blocks/api?blockref#blockref_g[32f](b32x32f~in,32i)                                                     | ref float blockref<float>(in Block32<float> src, int index)                                                   | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 90 c3
721       | 7ff7c8403e80h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8u](b64x8u~in,32i)                                                       | ref byte blockref<byte>(in Block64<byte> src, int index)                                                      | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 03 c2 c3
722       | 7ff7c8403eb0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8i](b64x8i~in,32i)                                                       | ref sbyte blockref<sbyte>(in Block64<sbyte> src, int index)                                                   | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 03 c2 c3
723       | 7ff7c8403ee0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[16u](b64x16u~in,32i)                                                     | ref ushort blockref<ushort>(in Block64<ushort> src, int index)                                                | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 50 c3
724       | 7ff7c8403f10h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[16i](b64x16i~in,32i)                                                     | ref short blockref<short>(in Block64<short> src, int index)                                                   | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 50 c3
725       | 7ff7c8403f40h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[32u](b64x32u~in,32i)                                                     | ref uint blockref<uint>(in Block64<uint> src, int index)                                                      | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
726       | 7ff7c8403f70h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[32i](b64x32i~in,32i)                                                     | ref int blockref<int>(in Block64<int> src, int index)                                                         | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
727       | 7ff7c8403fa0h   | 16      | CTC_RET_SBB         | hex://blocks/api?blockref#blockref_g[64u](b64x64u~in,32i)                                                     | ref ulong blockref<ulong>(in Block64<ulong> src, int index)                                                   | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
728       | 7ff7c8403fc0h   | 16      | CTC_RET_SBB         | hex://blocks/api?blockref#blockref_g[64i](b64x64i~in,32i)                                                     | ref long blockref<long>(in Block64<long> src, int index)                                                      | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
729       | 7ff7c8403fe0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[32f](b64x32f~in,32i)                                                     | ref float blockref<float>(in Block64<float> src, int index)                                                   | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 90 c3
730       | 7ff7c8404010h   | 16      | CTC_RET_SBB         | hex://blocks/api?blockref#blockref_g[64f](b64x64f~in,32i)                                                     | ref double blockref<double>(in Block64<double> src, int index)                                                | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8d 04 d0 c3
731       | 7ff7c8404030h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8u](b128x8u~in,32i)                                                      | ref byte blockref<byte>(in Block128<byte> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 03 c2 c3
732       | 7ff7c8404060h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8i](b128x8i~in,32i)                                                      | ref sbyte blockref<sbyte>(in Block128<sbyte> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 03 c2 c3
733       | 7ff7c8404090h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[16u](b128x16u~in,32i)                                                    | ref ushort blockref<ushort>(in Block128<ushort> src, int index)                                               | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 50 c3
734       | 7ff7c84040c0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[16i](b128x16i~in,32i)                                                    | ref short blockref<short>(in Block128<short> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 50 c3
735       | 7ff7c84040f0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[32u](b128x32u~in,32i)                                                    | ref uint blockref<uint>(in Block128<uint> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
736       | 7ff7c8404120h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[32i](b128x32i~in,32i)                                                    | ref int blockref<int>(in Block128<int> src, int index)                                                        | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
737       | 7ff7c8404150h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[64u](b128x64u~in,32i)                                                    | ref ulong blockref<ulong>(in Block128<ulong> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
738       | 7ff7c8404180h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[64i](b128x64i~in,32i)                                                    | ref long blockref<long>(in Block128<long> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
739       | 7ff7c84041b0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[32f](b128x32f~in,32i)                                                    | ref float blockref<float>(in Block128<float> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 90 c3
740       | 7ff7c84041e0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[64f](b128x64f~in,32i)                                                    | ref double blockref<double>(in Block128<double> src, int index)                                               | 0f 1f 44 00 00 48 8b 01 d1 e2 48 63 d2 48 8d 04 d0 c3
741       | 7ff7c8404610h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8u](b256x8u~in,32i)                                                      | ref byte blockref<byte>(in Block256<byte> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 03 c2 c3
742       | 7ff7c8404640h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8i](b256x8i~in,32i)                                                      | ref sbyte blockref<sbyte>(in Block256<sbyte> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 03 c2 c3
743       | 7ff7c8404670h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[16u](b256x16u~in,32i)                                                    | ref ushort blockref<ushort>(in Block256<ushort> src, int index)                                               | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 50 c3
744       | 7ff7c84046a0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[16i](b256x16i~in,32i)                                                    | ref short blockref<short>(in Block256<short> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 50 c3
745       | 7ff7c84046d0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[32u](b256x32u~in,32i)                                                    | ref uint blockref<uint>(in Block256<uint> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
746       | 7ff7c8404700h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[32i](b256x32i~in,32i)                                                    | ref int blockref<int>(in Block256<int> src, int index)                                                        | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
747       | 7ff7c8404730h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[64u](b256x64u~in,32i)                                                    | ref ulong blockref<ulong>(in Block256<ulong> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
748       | 7ff7c8404760h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[64i](b256x64i~in,32i)                                                    | ref long blockref<long>(in Block256<long> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
749       | 7ff7c8404790h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[32f](b256x32f~in,32i)                                                    | ref float blockref<float>(in Block256<float> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 90 c3
750       | 7ff7c84047c0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[64f](b256x64f~in,32i)                                                    | ref double blockref<double>(in Block256<double> src, int index)                                               | 0f 1f 44 00 00 48 8b 01 c1 e2 02 48 63 d2 48 8d 04 d0 c3
751       | 7ff7c84047f0h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8u](b512x8u~in,32i)                                                      | ref byte blockref<byte>(in Block512<byte> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 06 48 63 d2 48 03 c2 c3
752       | 7ff7c8404820h   | 18      | CTC_RET_Zx3         | hex://blocks/api?blockref#blockref_g[8i](b512x8i~in,32i)                                                      | ref sbyte blockref<sbyte>(in Block512<sbyte> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 06 48 63 d2 48 03 c2 c3
753       | 7ff7c8404850h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[16u](b512x16u~in,32i)                                                    | ref ushort blockref<ushort>(in Block512<ushort> src, int index)                                               | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 8d 04 50 c3
754       | 7ff7c8404880h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[16i](b512x16i~in,32i)                                                    | ref short blockref<short>(in Block512<short> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 05 48 63 d2 48 8d 04 50 c3
755       | 7ff7c84048b0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[32u](b512x32u~in,32i)                                                    | ref uint blockref<uint>(in Block512<uint> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 c3
756       | 7ff7c84048e0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[32i](b512x32i~in,32i)                                                    | ref int blockref<int>(in Block512<int> src, int index)                                                        | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 c3
757       | 7ff7c8404910h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[64u](b512x64u~in,32i)                                                    | ref ulong blockref<ulong>(in Block512<ulong> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 c3
758       | 7ff7c8404940h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[64i](b512x64i~in,32i)                                                    | ref long blockref<long>(in Block512<long> src, int index)                                                     | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 c3
759       | 7ff7c8404970h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[32f](b512x32f~in,32i)                                                    | ref float blockref<float>(in Block512<float> src, int index)                                                  | 0f 1f 44 00 00 48 8b 01 c1 e2 04 48 63 d2 48 8d 04 90 c3
760       | 7ff7c84049a0h   | 19      | CTC_RET_ZED_SBB     | hex://blocks/api?blockref#blockref_g[64f](b512x64f~in,32i)                                                    | ref double blockref<double>(in Block512<double> src, int index)                                               | 0f 1f 44 00 00 48 8b 01 c1 e2 03 48 63 d2 48 8d 04 d0 c3
761       | 7ff7c8404dd0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b16x8u~in)                                                      | void broadcast<byte>(byte data, in Block16<byte> dst)                                                         | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 48 0b af c7 f7 7f 00 00 48 ff e0
762       | 7ff7c8404e00h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b16x8i~in)                                                      | void broadcast<sbyte>(sbyte data, in Block16<sbyte> dst)                                                      | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 78 72 0d c8 f7 7f 00 00 48 ff e0
763       | 7ff7c8404e30h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b16x16u~in)                                                   | void broadcast<ushort>(ushort data, in Block16<ushort> dst)                                                   | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 f0 59 af c7 f7 7f 00 00 48 ff e0
764       | 7ff7c8404e60h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b16x16i~in)                                                   | void broadcast<short>(short data, in Block16<short> dst)                                                      | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 10 7b 0d c8 f7 7f 00 00 48 ff e0
765       | 7ff7c8404e90h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8u](8u,b32x8u~in)                                                      | void broadcast<byte>(byte data, in Block32<byte> dst)                                                         | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 48 0b af c7 f7 7f 00 00 48 ff e0
766       | 7ff7c8404ec0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[8i](8i,b32x8i~in)                                                      | void broadcast<sbyte>(sbyte data, in Block32<sbyte> dst)                                                      | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 78 72 0d c8 f7 7f 00 00 48 ff e0
767       | 7ff7c8404ef0h   | 24      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16u](16u,b32x16u~in)                                                   | void broadcast<ushort>(ushort data, in Block32<ushort> dst)                                                   | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 f0 59 af c7 f7 7f 00 00 48 ff e0
768       | 7ff7c8404f20h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[16i](16i,b32x16i~in)                                                   | void broadcast<short>(short data, in Block32<short> dst)                                                      | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 10 7b 0d c8 f7 7f 00 00 48 ff e0
769       | 7ff7c8404f50h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32u](32u,b32x32u~in)                                                   | void broadcast<uint>(uint data, in Block32<uint> dst)                                                         | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 00 5c af c7 f7 7f 00 00 48 ff e0
770       | 7ff7c8404f80h   | 23      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32i](32i,b32x32i~in)                                                   | void broadcast<int>(int data, in Block32<int> dst)                                                            | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 38 10 ae c7 f7 7f 00 00 48 ff e0
771       | 7ff7c8404fb0h   | 25      | CTC_JMP_RAX         | hex://blocks/api?broadcast#broadcast_g[32f](32f,b32x32f~in)                                                   | void broadcast<float>(float data, in Block32<float> dst)                                                      | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 c8 8a 0d c8 f7 7f 00 00 48 ff e0
772       | 7ff7c8404fe0h   | 106     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n16,16u)                                                                        | Block16<ushort> cells(N16 n, ushort x0)                                                                       | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 48 b9 68 d4 15 c8 f7 7f 00 00 ba 01 00 00 00 e8 d5 1d e6 5e 66 89 70 10 48 83 c0 10 ba 01 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 53 0e e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
773       | 7ff7c8405070h   | 210     | CTC_INTRx2          | hex://blocks/api?cells#cells_(n16,64u)                                                                        | Block16<ulong> cells(N16 n, ulong x0)                                                                         | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 48 b9 e0 2f bc c7 f7 7f 00 00 ba 01 00 00 00 e8 45 1d e6 5e 48 8b c8 48 89 71 10 b8 01 00 00 00 45 33 c0 99 41 f7 f8 b8 01 00 00 00 83 e8 00 75 3b 48 83 c1 10 b8 01 00 00 00 48 8d 54 24 30 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 30 48 89 0a 89 42 08 48 8b fb 48 8d 74 24 30 e8 aa 0d e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 ba 1a 00 00 00 41 b8 01 00 00 00 49 b9 88 7a ca 1d fa 01 00 00 4d 8b 09 48 b9 90 7a ca 1d fa 01 00 00 48 8b 09 48 8d 44 24 28 44 88 00 89 50 04 48 8b 54 24 28 48 89 54 24 20 ba 01 00 00 00 4d 8b c1 4c 8b c9 b9 10 00 00 00 e8 fe f4 36 ff
774       | 7ff7c8405570h   | 210     | CTC_INTRx2          | hex://blocks/api?cells#cells_(n32,64u)                                                                        | Block32<ulong> cells(N32 n, ulong x0)                                                                         | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 48 b9 e0 2f bc c7 f7 7f 00 00 ba 01 00 00 00 e8 45 18 e6 5e 48 8b c8 48 89 71 10 b8 01 00 00 00 45 33 c0 99 41 f7 f8 b8 01 00 00 00 83 e8 00 75 3b 48 83 c1 10 b8 01 00 00 00 48 8d 54 24 30 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 30 48 89 0a 89 42 08 48 8b fb 48 8d 74 24 30 e8 aa 08 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3 ba 2a 00 00 00 41 b8 01 00 00 00 49 b9 88 7a ca 1d fa 01 00 00 4d 8b 09 48 b9 90 7a ca 1d fa 01 00 00 48 8b 09 48 8d 44 24 28 44 88 00 89 50 04 48 8b 54 24 28 48 89 54 24 20 ba 01 00 00 00 4d 8b c1 4c 8b c9 b9 20 00 00 00 e8 fe ef 36 ff
775       | 7ff7c8405660h   | 135     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n32,8u,8u,8u,8u)                                                                | Block32<byte> cells(N32 n, byte x0, byte x1, byte x2, byte x3)                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 10 ea 73 c7 f7 7f 00 00 ba 04 00 00 00 e8 52 17 e6 5e 40 88 70 10 40 88 78 11 8b b4 24 80 00 00 00 40 88 70 12 8b b4 24 88 00 00 00 40 88 70 13 48 83 c0 10 ba 04 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 b6 07 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
776       | 7ff7c8405710h   | 113     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n32,16u,16u)                                                                    | Block32<ushort> cells(N32 n, ushort x0, ushort x1)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 68 d4 15 c8 f7 7f 00 00 ba 02 00 00 00 e8 a2 16 e6 5e 66 89 70 10 66 89 78 12 48 83 c0 10 ba 02 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 1c 07 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
777       | 7ff7c84057a0h   | 105     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n32,32u)                                                                        | Block32<uint> cells(N32 n, uint x0)                                                                           | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 48 b9 00 c4 15 c8 f7 7f 00 00 ba 01 00 00 00 e8 15 16 e6 5e 89 70 10 48 83 c0 10 ba 01 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 94 06 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
778       | 7ff7c8405830h   | 179     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n64,8u,8u,8u,8u,8u,8u,8u,8u)                                                    | Block64<byte> cells(N64 n, byte x0, byte x1, byte x2, byte x3, byte x4, byte x5, byte x6, byte x7)            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 10 ea 73 c7 f7 7f 00 00 ba 08 00 00 00 e8 82 15 e6 5e 40 88 70 10 40 88 78 11 8b b4 24 80 00 00 00 40 88 70 12 8b b4 24 88 00 00 00 40 88 70 13 8b b4 24 90 00 00 00 40 88 70 14 8b b4 24 98 00 00 00 40 88 70 15 8b b4 24 a0 00 00 00 40 88 70 16 8b b4 24 a8 00 00 00 40 88 70 17 48 83 c0 10 ba 08 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ba 05 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
779       | 7ff7c8405900h   | 135     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n64,16u,16u,16u,16u)                                                            | Block64<ushort> cells(N64 n, ushort x0, ushort x1, ushort x2, ushort x3)                                      | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 68 d4 15 c8 f7 7f 00 00 ba 04 00 00 00 e8 b2 14 e6 5e 66 89 70 10 66 89 78 12 8b b4 24 80 00 00 00 66 89 70 14 8b b4 24 88 00 00 00 66 89 70 16 48 83 c0 10 ba 04 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 16 05 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
780       | 7ff7c84059b0h   | 111     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n64,32u,32u)                                                                    | Block64<uint> cells(N64 n, uint x0, uint x1)                                                                  | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 00 c4 15 c8 f7 7f 00 00 ba 02 00 00 00 e8 02 14 e6 5e 89 70 10 89 78 14 48 83 c0 10 ba 02 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 7e 04 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
781       | 7ff7c8405a40h   | 106     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n64,64u)                                                                        | Block64<ulong> cells(N64 n, ulong x0)                                                                         | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 48 b9 e0 2f bc c7 f7 7f 00 00 ba 01 00 00 00 e8 75 13 e6 5e 48 89 70 10 48 83 c0 10 ba 01 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 f3 03 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
782       | 7ff7c8405ad0h   | 272     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n128,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u)                           | Block128<byte> cells(N128 n, byte x0, byte x1, byte x2, byte x3, byte x4, byte x5, byte x6, byte x7, byte x8, byte x9, byte xA, byte xB, byte xC, byte xD, byte xE, byte xF)| 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 89 44 24 38 48 8b d9 41 8b f0 41 8b f9 48 b9 10 ea 73 c7 f7 7f 00 00 ba 10 00 00 00 e8 dd 12 e6 5e 40 88 70 10 40 88 78 11 8b b4 24 80 00 00 00 40 88 70 12 8b b4 24 88 00 00 00 40 88 70 13 8b b4 24 90 00 00 00 40 88 70 14 8b b4 24 98 00 00 00 40 88 70 15 8b b4 24 a0 00 00 00 40 88 70 16 8b b4 24 a8 00 00 00 40 88 70 17 8b b4 24 b0 00 00 00 40 88 70 18 8b b4 24 b8 00 00 00 40 88 70 19 8b b4 24 c0 00 00 00 40 88 70 1a 8b b4 24 c8 00 00 00 40 88 70 1b 8b b4 24 d0 00 00 00 40 88 70 1c 8b b4 24 d8 00 00 00 40 88 70 1d 8b b4 24 e0 00 00 00 40 88 70 1e 8b b4 24 e8 00 00 00 40 88 70 1f 48 83 c0 10 ba 10 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 bd 02 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
783       | 7ff7c8405c00h   | 179     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n128,16u,16u,16u,16u,16u,16u,16u,16u)                                           | Block128<ushort> cells(N128 n, ushort x0, ushort x1, ushort x2, ushort x3, ushort x4, ushort x5, ushort x6, ushort x7)| 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 68 d4 15 c8 f7 7f 00 00 ba 08 00 00 00 e8 b2 11 e6 5e 66 89 70 10 66 89 78 12 8b b4 24 80 00 00 00 66 89 70 14 8b b4 24 88 00 00 00 66 89 70 16 8b b4 24 90 00 00 00 66 89 70 18 8b b4 24 98 00 00 00 66 89 70 1a 8b b4 24 a0 00 00 00 66 89 70 1c 8b b4 24 a8 00 00 00 66 89 70 1e 48 83 c0 10 ba 08 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ea 01 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
784       | 7ff7c8405cd0h   | 131     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n128,32u,32u,32u,32u)                                                           | Block128<uint> cells(N128 n, uint x0, uint x1, uint x2, uint x3)                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 00 c4 15 c8 f7 7f 00 00 ba 04 00 00 00 e8 e2 10 e6 5e 89 70 10 89 78 14 8b b4 24 80 00 00 00 89 70 18 8b b4 24 88 00 00 00 89 70 1c 48 83 c0 10 ba 04 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 4a 01 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
785       | 7ff7c8405d70h   | 113     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n128,64u,64u)                                                                   | Block128<ulong> cells(N128 n, ulong x0, ulong x1)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 49 8b f9 48 b9 e0 2f bc c7 f7 7f 00 00 ba 02 00 00 00 e8 42 10 e6 5e 48 89 70 10 48 89 78 18 48 83 c0 10 ba 02 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 bc 00 e6 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
786       | 7ff7c8405e00h   | 448     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n256,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u)| Block256<byte> cells(N256 n, byte x0, byte x1, byte x2, byte x3, byte x4, byte x5, byte x6, byte x7, byte x8, byte x9, byte xA, byte xB, byte xC, byte xD, byte xE, byte xF, byte x10, byte x11, byte x12, byte x13, byte x14, byte x15, byte x16, byte x17, byte x18, byte x19, byte x1A, byte x1B, byte x1C, byte x1D, byte x1E, byte x1F)| 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 89 44 24 38 48 8b d9 41 8b f0 41 8b f9 48 b9 10 ea 73 c7 f7 7f 00 00 ba 20 00 00 00 e8 ad 0f e6 5e 40 88 70 10 40 88 78 11 8b b4 24 80 00 00 00 40 88 70 12 8b b4 24 88 00 00 00 40 88 70 13 8b b4 24 90 00 00 00 40 88 70 14 8b b4 24 98 00 00 00 40 88 70 15 8b b4 24 a0 00 00 00 40 88 70 16 8b b4 24 a8 00 00 00 40 88 70 17 8b b4 24 b0 00 00 00 40 88 70 18 8b b4 24 b8 00 00 00 40 88 70 19 8b b4 24 c0 00 00 00 40 88 70 1a 8b b4 24 c8 00 00 00 40 88 70 1b 8b b4 24 d0 00 00 00 40 88 70 1c 8b b4 24 d8 00 00 00 40 88 70 1d 8b b4 24 e0 00 00 00 40 88 70 1e 8b b4 24 e8 00 00 00 40 88 70 1f 8b b4 24 f0 00 00 00 40 88 70 20 8b b4 24 f8 00 00 00 40 88 70 21 8b b4 24 00 01 00 00 40 88 70 22 8b b4 24 08 01 00 00 40 88 70 23 8b b4 24 10 01 00 00 40 88 70 24 8b b4 24 18 01 00 00 40 88 70 25 8b b4 24 20 01 00 00 40 88 70 26 8b b4 24 28 01 00 00 40 88 70 27 8b b4 24 30 01 00 00 40 88 70 28 8b b4 24 38 01 00 00 40 88 70 29 8b b4 24 40 01 00 00 40 88 70 2a 8b b4 24 48 01 00 00 40 88 70 2b 8b b4 24 50 01 00 00 40 88 70 2c 8b b4 24 58 01 00 00 40 88 70 2d 8b b4 24 60 01 00 00 40 88 70 2e 8b b4 24 68 01 00 00 40 88 70 2f 48 83 c0 10 ba 20 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 dd fe e5 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
787       | 7ff7c8405fe0h   | 272     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n256,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u)           | Block256<ushort> cells(N256 n, ushort x0, ushort x1, ushort x2, ushort x3, ushort x4, ushort x5, ushort x6, ushort x7, ushort x8, ushort x9, ushort xA, ushort xB, ushort xC, ushort xD, ushort xE, ushort xF)| 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 89 44 24 38 48 8b d9 41 8b f0 41 8b f9 48 b9 68 d4 15 c8 f7 7f 00 00 ba 10 00 00 00 e8 cd 0d e6 5e 66 89 70 10 66 89 78 12 8b b4 24 80 00 00 00 66 89 70 14 8b b4 24 88 00 00 00 66 89 70 16 8b b4 24 90 00 00 00 66 89 70 18 8b b4 24 98 00 00 00 66 89 70 1a 8b b4 24 a0 00 00 00 66 89 70 1c 8b b4 24 a8 00 00 00 66 89 70 1e 8b b4 24 b0 00 00 00 66 89 70 20 8b b4 24 b8 00 00 00 66 89 70 22 8b b4 24 c0 00 00 00 66 89 70 24 8b b4 24 c8 00 00 00 66 89 70 26 8b b4 24 d0 00 00 00 66 89 70 28 8b b4 24 d8 00 00 00 66 89 70 2a 8b b4 24 e0 00 00 00 66 89 70 2c 8b b4 24 e8 00 00 00 66 89 70 2e 48 83 c0 10 ba 10 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ad fd e5 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
788       | 7ff7c8406110h   | 171     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n256,32u,32u,32u,32u,32u,32u,32u,32u)                                           | Block256<uint> cells(N256 n, uint x0, uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7)          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 00 c4 15 c8 f7 7f 00 00 ba 08 00 00 00 e8 a2 0c e6 5e 89 70 10 89 78 14 8b b4 24 80 00 00 00 89 70 18 8b b4 24 88 00 00 00 89 70 1c 8b b4 24 90 00 00 00 89 70 20 8b b4 24 98 00 00 00 89 70 24 8b b4 24 a0 00 00 00 89 70 28 8b b4 24 a8 00 00 00 89 70 2c 48 83 c0 10 ba 08 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 e2 fc e5 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
789       | 7ff7c84061e0h   | 137     | CTC_RET_INTR        | hex://blocks/api?cells#cells_(n256,64u,64u,64u,64u)                                                           | Block256<ulong> cells(N256 n, ulong x0, ulong x1, ulong x2, ulong x3)                                         | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 49 8b f9 48 b9 e0 2f bc c7 f7 7f 00 00 ba 04 00 00 00 e8 d2 0b e6 5e 48 89 70 10 48 89 78 18 48 8b b4 24 80 00 00 00 48 89 70 20 48 8b b4 24 88 00 00 00 48 89 70 28 48 83 c0 10 ba 04 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 34 fc e5 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
