Sequence  | Address         | Length  | TermCode            | Uri                                                                                                           | OpSig                                                                                                         | Data
0         | 7ff7c82a0490h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[8u](n128,8u)                                                      | int blocklen<byte>(N128 w, byte t)                                                                            | 0f 1f 44 00 00 b8 10 00 00 00 c3
1         | 7ff7c82a04b0h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[8i](n128,8i)                                                      | int blocklen<sbyte>(N128 w, sbyte t)                                                                          | 0f 1f 44 00 00 b8 10 00 00 00 c3
2         | 7ff7c82a04d0h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[16u](n128,16u)                                                    | int blocklen<ushort>(N128 w, ushort t)                                                                        | 0f 1f 44 00 00 b8 08 00 00 00 c3
3         | 7ff7c82a04f0h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[16i](n128,16i)                                                    | int blocklen<short>(N128 w, short t)                                                                          | 0f 1f 44 00 00 b8 08 00 00 00 c3
4         | 7ff7c82a0510h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[32u](n128,32u)                                                    | int blocklen<uint>(N128 w, uint t)                                                                            | 0f 1f 44 00 00 b8 04 00 00 00 c3
5         | 7ff7c82a0530h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[32i](n128,32i)                                                    | int blocklen<int>(N128 w, int t)                                                                              | 0f 1f 44 00 00 b8 04 00 00 00 c3
6         | 7ff7c82a0550h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[64u](n128,64u)                                                    | int blocklen<ulong>(N128 w, ulong t)                                                                          | 0f 1f 44 00 00 b8 02 00 00 00 c3
7         | 7ff7c82a0570h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[64i](n128,64i)                                                    | int blocklen<long>(N128 w, long t)                                                                            | 0f 1f 44 00 00 b8 02 00 00 00 c3
8         | 7ff7c82a0590h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[32f](n128,32f)                                                    | int blocklen<float>(N128 w, float t)                                                                          | 0f 1f 44 00 00 b8 04 00 00 00 c3
9         | 7ff7c82a05b0h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[64f](n128,64f)                                                    | int blocklen<double>(N128 w, double t)                                                                        | 0f 1f 44 00 00 b8 02 00 00 00 c3
10        | 7ff7c82a05d0h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[8u](n256,8u)                                                      | int blocklen<byte>(N256 w, byte t)                                                                            | 0f 1f 44 00 00 b8 20 00 00 00 c3
11        | 7ff7c82a05f0h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[8i](n256,8i)                                                      | int blocklen<sbyte>(N256 w, sbyte t)                                                                          | 0f 1f 44 00 00 b8 20 00 00 00 c3
12        | 7ff7c82a0610h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[16u](n256,16u)                                                    | int blocklen<ushort>(N256 w, ushort t)                                                                        | 0f 1f 44 00 00 b8 10 00 00 00 c3
13        | 7ff7c82a0630h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[16i](n256,16i)                                                    | int blocklen<short>(N256 w, short t)                                                                          | 0f 1f 44 00 00 b8 10 00 00 00 c3
14        | 7ff7c82a0650h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[32u](n256,32u)                                                    | int blocklen<uint>(N256 w, uint t)                                                                            | 0f 1f 44 00 00 b8 08 00 00 00 c3
15        | 7ff7c82a0670h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[32i](n256,32i)                                                    | int blocklen<int>(N256 w, int t)                                                                              | 0f 1f 44 00 00 b8 08 00 00 00 c3
16        | 7ff7c82a0690h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[64u](n256,64u)                                                    | int blocklen<ulong>(N256 w, ulong t)                                                                          | 0f 1f 44 00 00 b8 04 00 00 00 c3
17        | 7ff7c82a06b0h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[64i](n256,64i)                                                    | int blocklen<long>(N256 w, long t)                                                                            | 0f 1f 44 00 00 b8 04 00 00 00 c3
18        | 7ff7c82a06d0h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[32f](n256,32f)                                                    | int blocklen<float>(N256 w, float t)                                                                          | 0f 1f 44 00 00 b8 08 00 00 00 c3
19        | 7ff7c82a06f0h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[64f](n256,64f)                                                    | int blocklen<double>(N256 w, double t)                                                                        | 0f 1f 44 00 00 b8 04 00 00 00 c3
20        | 7ff7c82a0710h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[8u](n512,8u)                                                      | int blocklen<byte>(N512 w, byte t)                                                                            | 0f 1f 44 00 00 b8 40 00 00 00 c3
21        | 7ff7c82a0750h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[8i](n512,8i)                                                      | int blocklen<sbyte>(N512 w, sbyte t)                                                                          | 0f 1f 44 00 00 b8 40 00 00 00 c3
22        | 7ff7c82a0770h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[16u](n512,16u)                                                    | int blocklen<ushort>(N512 w, ushort t)                                                                        | 0f 1f 44 00 00 b8 20 00 00 00 c3
23        | 7ff7c82a0790h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[16i](n512,16i)                                                    | int blocklen<short>(N512 w, short t)                                                                          | 0f 1f 44 00 00 b8 20 00 00 00 c3
24        | 7ff7c82a07b0h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[32u](n512,32u)                                                    | int blocklen<uint>(N512 w, uint t)                                                                            | 0f 1f 44 00 00 b8 10 00 00 00 c3
25        | 7ff7c82a07d0h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[32i](n512,32i)                                                    | int blocklen<int>(N512 w, int t)                                                                              | 0f 1f 44 00 00 b8 10 00 00 00 c3
26        | 7ff7c82a07f0h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[64u](n512,64u)                                                    | int blocklen<ulong>(N512 w, ulong t)                                                                          | 0f 1f 44 00 00 b8 08 00 00 00 c3
27        | 7ff7c82a0810h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[64i](n512,64i)                                                    | int blocklen<long>(N512 w, long t)                                                                            | 0f 1f 44 00 00 b8 08 00 00 00 c3
28        | 7ff7c82a0830h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[32f](n512,32f)                                                    | int blocklen<float>(N512 w, float t)                                                                          | 0f 1f 44 00 00 b8 10 00 00 00 c3
29        | 7ff7c82a0850h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[64f](n512,64f)                                                    | int blocklen<double>(N512 w, double t)                                                                        | 0f 1f 44 00 00 b8 08 00 00 00 c3
30        | 7ff7c82a0c80h   | 24      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[8u](8u,b16x8u~in)                                               | void broadcast<byte>(byte data, in Block16<byte> dst)                                                         | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 10 15 78 c7 f7 7f 00 00 48 ff e0
31        | 7ff7c82a0cb0h   | 25      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[8i](8i,b16x8i~in)                                               | void broadcast<sbyte>(sbyte data, in Block16<sbyte> dst)                                                      | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 d0 b2 0b c8 f7 7f 00 00 48 ff e0
32        | 7ff7c82a0ce0h   | 24      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[16u](16u,b16x16u~in)                                            | void broadcast<ushort>(ushort data, in Block16<ushort> dst)                                                   | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 00 3f a6 c7 f7 7f 00 00 48 ff e0
33        | 7ff7c82a0d10h   | 25      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[16i](16i,b16x16i~in)                                            | void broadcast<short>(short data, in Block16<short> dst)                                                      | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 28 ba 0b c8 f7 7f 00 00 48 ff e0
34        | 7ff7c82a0d40h   | 24      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[8u](8u,b32x8u~in)                                               | void broadcast<byte>(byte data, in Block32<byte> dst)                                                         | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 10 15 78 c7 f7 7f 00 00 48 ff e0
35        | 7ff7c82a1170h   | 25      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[8i](8i,b32x8i~in)                                               | void broadcast<sbyte>(sbyte data, in Block32<sbyte> dst)                                                      | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 d0 b2 0b c8 f7 7f 00 00 48 ff e0
36        | 7ff7c82a11a0h   | 24      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[16u](16u,b32x16u~in)                                            | void broadcast<ushort>(ushort data, in Block32<ushort> dst)                                                   | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 00 3f a6 c7 f7 7f 00 00 48 ff e0
37        | 7ff7c82a11d0h   | 25      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[16i](16i,b32x16i~in)                                            | void broadcast<short>(short data, in Block32<short> dst)                                                      | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 28 ba 0b c8 f7 7f 00 00 48 ff e0
38        | 7ff7c82a1200h   | 23      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[32u](32u,b32x32u~in)                                            | void broadcast<uint>(uint data, in Block32<uint> dst)                                                         | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 90 41 a6 c7 f7 7f 00 00 48 ff e0
39        | 7ff7c82a1230h   | 23      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[32i](32i,b32x32i~in)                                            | void broadcast<int>(int data, in Block32<int> dst)                                                            | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 20 9d a4 c7 f7 7f 00 00 48 ff e0
40        | 7ff7c82a1260h   | 25      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[32f](32f,b32x32f~in)                                            | void broadcast<float>(float data, in Block32<float> dst)                                                      | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 18 ca 0b c8 f7 7f 00 00 48 ff e0
41        | 7ff7c82a16a0h   | 24      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[8u](8u,b64x8u~in)                                               | void broadcast<byte>(byte data, in Block64<byte> dst)                                                         | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 10 15 78 c7 f7 7f 00 00 48 ff e0
42        | 7ff7c82a16d0h   | 25      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[8i](8i,b64x8i~in)                                               | void broadcast<sbyte>(sbyte data, in Block64<sbyte> dst)                                                      | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 d0 b2 0b c8 f7 7f 00 00 48 ff e0
43        | 7ff7c82a1700h   | 24      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[16u](16u,b64x16u~in)                                            | void broadcast<ushort>(ushort data, in Block64<ushort> dst)                                                   | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 00 3f a6 c7 f7 7f 00 00 48 ff e0
44        | 7ff7c82a1730h   | 25      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[16i](16i,b64x16i~in)                                            | void broadcast<short>(short data, in Block64<short> dst)                                                      | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 28 ba 0b c8 f7 7f 00 00 48 ff e0
45        | 7ff7c82a1760h   | 23      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[32u](32u,b64x32u~in)                                            | void broadcast<uint>(uint data, in Block64<uint> dst)                                                         | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 90 41 a6 c7 f7 7f 00 00 48 ff e0
46        | 7ff7c82a1790h   | 23      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[32i](32i,b64x32i~in)                                            | void broadcast<int>(int data, in Block64<int> dst)                                                            | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 20 9d a4 c7 f7 7f 00 00 48 ff e0
47        | 7ff7c82a17c0h   | 24      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[64u](64u,b64x64u~in)                                            | void broadcast<ulong>(ulong data, in Block64<ulong> dst)                                                      | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 60 44 a6 c7 f7 7f 00 00 48 ff e0
48        | 7ff7c82a17f0h   | 24      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[64i](64i,b64x64i~in)                                            | void broadcast<long>(long data, in Block64<long> dst)                                                         | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 88 c7 0b c8 f7 7f 00 00 48 ff e0
49        | 7ff7c82a1820h   | 25      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[32f](32f,b64x32f~in)                                            | void broadcast<float>(float data, in Block64<float> dst)                                                      | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 18 ca 0b c8 f7 7f 00 00 48 ff e0
50        | 7ff7c82a1c60h   | 25      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[64f](64f,b64x64f~in)                                            | void broadcast<double>(double data, in Block64<double> dst)                                                   | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 40 ce 0b c8 f7 7f 00 00 48 ff e0
51        | 7ff7c82a1c90h   | 24      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[8u](8u,b128x8u~in)                                              | void broadcast<byte>(byte data, in Block128<byte> dst)                                                        | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 10 15 78 c7 f7 7f 00 00 48 ff e0
52        | 7ff7c82a1cc0h   | 25      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[8i](8i,b128x8i~in)                                              | void broadcast<sbyte>(sbyte data, in Block128<sbyte> dst)                                                     | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 d0 b2 0b c8 f7 7f 00 00 48 ff e0
53        | 7ff7c82a1cf0h   | 24      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[16u](16u,b128x16u~in)                                           | void broadcast<ushort>(ushort data, in Block128<ushort> dst)                                                  | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 00 3f a6 c7 f7 7f 00 00 48 ff e0
54        | 7ff7c82a2120h   | 25      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[16i](16i,b128x16i~in)                                           | void broadcast<short>(short data, in Block128<short> dst)                                                     | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 28 ba 0b c8 f7 7f 00 00 48 ff e0
55        | 7ff7c82a2150h   | 23      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[32u](32u,b128x32u~in)                                           | void broadcast<uint>(uint data, in Block128<uint> dst)                                                        | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 90 41 a6 c7 f7 7f 00 00 48 ff e0
56        | 7ff7c82a2180h   | 23      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[32i](32i,b128x32i~in)                                           | void broadcast<int>(int data, in Block128<int> dst)                                                           | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 20 9d a4 c7 f7 7f 00 00 48 ff e0
57        | 7ff7c82a21b0h   | 24      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[64u](64u,b128x64u~in)                                           | void broadcast<ulong>(ulong data, in Block128<ulong> dst)                                                     | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 60 44 a6 c7 f7 7f 00 00 48 ff e0
58        | 7ff7c82a21e0h   | 24      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[64i](64i,b128x64i~in)                                           | void broadcast<long>(long data, in Block128<long> dst)                                                        | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 88 c7 0b c8 f7 7f 00 00 48 ff e0
59        | 7ff7c82a2210h   | 25      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[32f](32f,b128x32f~in)                                           | void broadcast<float>(float data, in Block128<float> dst)                                                     | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 18 ca 0b c8 f7 7f 00 00 48 ff e0
60        | 7ff7c82a2650h   | 25      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[64f](64f,b128x64f~in)                                           | void broadcast<double>(double data, in Block128<double> dst)                                                  | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 40 ce 0b c8 f7 7f 00 00 48 ff e0
61        | 7ff7c82a2680h   | 24      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[8u](8u,b256x8u~in)                                              | void broadcast<byte>(byte data, in Block256<byte> dst)                                                        | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 10 15 78 c7 f7 7f 00 00 48 ff e0
62        | 7ff7c82a26b0h   | 25      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[8i](8i,b256x8i~in)                                              | void broadcast<sbyte>(sbyte data, in Block256<sbyte> dst)                                                     | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 d0 b2 0b c8 f7 7f 00 00 48 ff e0
63        | 7ff7c82a26e0h   | 24      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[16u](16u,b256x16u~in)                                           | void broadcast<ushort>(ushort data, in Block256<ushort> dst)                                                  | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 00 3f a6 c7 f7 7f 00 00 48 ff e0
64        | 7ff7c82a2710h   | 25      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[16i](16i,b256x16i~in)                                           | void broadcast<short>(short data, in Block256<short> dst)                                                     | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 28 ba 0b c8 f7 7f 00 00 48 ff e0
65        | 7ff7c82a2740h   | 23      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[32u](32u,b256x32u~in)                                           | void broadcast<uint>(uint data, in Block256<uint> dst)                                                        | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 90 41 a6 c7 f7 7f 00 00 48 ff e0
66        | 7ff7c82a2770h   | 23      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[32i](32i,b256x32i~in)                                           | void broadcast<int>(int data, in Block256<int> dst)                                                           | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 20 9d a4 c7 f7 7f 00 00 48 ff e0
67        | 7ff7c82a27a0h   | 24      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[64u](64u,b256x64u~in)                                           | void broadcast<ulong>(ulong data, in Block256<ulong> dst)                                                     | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 60 44 a6 c7 f7 7f 00 00 48 ff e0
68        | 7ff7c82a27d0h   | 24      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[64i](64i,b256x64i~in)                                           | void broadcast<long>(long data, in Block256<long> dst)                                                        | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 88 c7 0b c8 f7 7f 00 00 48 ff e0
69        | 7ff7c82a2800h   | 25      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[32f](32f,b256x32f~in)                                           | void broadcast<float>(float data, in Block256<float> dst)                                                     | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 18 ca 0b c8 f7 7f 00 00 48 ff e0
70        | 7ff7c82a2830h   | 25      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[64f](64f,b256x64f~in)                                           | void broadcast<double>(double data, in Block256<double> dst)                                                  | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 40 ce 0b c8 f7 7f 00 00 48 ff e0
71        | 7ff7c82a2c70h   | 24      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[8u](8u,b512x8u~in)                                              | void broadcast<byte>(byte data, in Block512<byte> dst)                                                        | 48 8b c2 66 90 0f b6 d1 48 8b c8 48 b8 10 15 78 c7 f7 7f 00 00 48 ff e0
72        | 7ff7c82a2ca0h   | 25      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[8i](8i,b512x8i~in)                                              | void broadcast<sbyte>(sbyte data, in Block512<sbyte> dst)                                                     | 48 8b c2 66 90 48 0f be d1 48 8b c8 48 b8 d0 b2 0b c8 f7 7f 00 00 48 ff e0
73        | 7ff7c82a2cd0h   | 24      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[16u](16u,b512x16u~in)                                           | void broadcast<ushort>(ushort data, in Block512<ushort> dst)                                                  | 48 8b c2 66 90 0f b7 d1 48 8b c8 48 b8 00 3f a6 c7 f7 7f 00 00 48 ff e0
74        | 7ff7c82a2d00h   | 25      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[16i](16i,b512x16i~in)                                           | void broadcast<short>(short data, in Block512<short> dst)                                                     | 48 8b c2 66 90 48 0f bf d1 48 8b c8 48 b8 28 ba 0b c8 f7 7f 00 00 48 ff e0
75        | 7ff7c82a3140h   | 23      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[32u](32u,b512x32u~in)                                           | void broadcast<uint>(uint data, in Block512<uint> dst)                                                        | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 90 41 a6 c7 f7 7f 00 00 48 ff e0
76        | 7ff7c82a3170h   | 23      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[32i](32i,b512x32i~in)                                           | void broadcast<int>(int data, in Block512<int> dst)                                                           | 8b c1 0f 1f 00 48 8b ca 8b d0 48 b8 20 9d a4 c7 f7 7f 00 00 48 ff e0
77        | 7ff7c82a31a0h   | 24      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[64u](64u,b512x64u~in)                                           | void broadcast<ulong>(ulong data, in Block512<ulong> dst)                                                     | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 60 44 a6 c7 f7 7f 00 00 48 ff e0
78        | 7ff7c82a31d0h   | 24      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[64i](64i,b512x64i~in)                                           | void broadcast<long>(long data, in Block512<long> dst)                                                        | 48 8b c1 66 90 48 8b ca 48 8b d0 48 b8 88 c7 0b c8 f7 7f 00 00 48 ff e0
79        | 7ff7c82a3200h   | 25      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[32f](32f,b512x32f~in)                                           | void broadcast<float>(float data, in Block512<float> dst)                                                     | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 18 ca 0b c8 f7 7f 00 00 48 ff e0
80        | 7ff7c82a3640h   | 25      | CTC_JMP_RAX         | hex://datablocks/blocks?broadcast#broadcast_g[64f](64f,b512x64f~in)                                           | void broadcast<double>(double data, in Block512<double> dst)                                                  | c5 f8 77 66 90 48 8b ca c5 f8 28 c8 48 b8 40 ce 0b c8 f7 7f 00 00 48 ff e0
81        | 7ff7c82a3670h   | 76      | CTC_RET_SBB         | hex://datablocks/blocks?cellalloc#cellalloc_g[8u](n16,32i)                                                    | Block16<byte> cellalloc<byte>(N16 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 85 f5 ff ff 48 8b c6 48 83 c4 20 5e c3
82        | 7ff7c82a36d0h   | 76      | CTC_RET_SBB         | hex://datablocks/blocks?cellalloc#cellalloc_g[8i](n16,32i)                                                    | Block16<sbyte> cellalloc<sbyte>(N16 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 dd f9 ff ff 48 8b c6 48 83 c4 20 5e c3
83        | 7ff7c82a3730h   | 66      | CTC_RET_Zx3         | hex://datablocks/blocks?cellalloc#cellalloc_g[16u](n16,32i)                                                   | Block16<ushort> cellalloc<ushort>(N16 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 ff fc ff ff 48 8b c6 48 83 c4 20 5e c3
84        | 7ff7c82a3790h   | 66      | CTC_RET_Zx3         | hex://datablocks/blocks?cellalloc#cellalloc_g[16i](n16,32i)                                                   | Block16<short> cellalloc<short>(N16 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 df fc ff ff 48 8b c6 48 83 c4 20 5e c3
85        | 7ff7c82a3bf0h   | 83      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?cellalloc#cellalloc_g[8u](n32,32i)                                                    | Block32<byte> cellalloc<byte>(N32 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 be f9 ff ff 48 8b c6 48 83 c4 20 5e c3
86        | 7ff7c82a3c60h   | 83      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?cellalloc#cellalloc_g[8i](n32,32i)                                                    | Block32<sbyte> cellalloc<sbyte>(N32 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 1e fc ff ff 48 8b c6 48 83 c4 20 5e c3
87        | 7ff7c82a3cd0h   | 76      | CTC_RET_SBB         | hex://datablocks/blocks?cellalloc#cellalloc_g[16u](n32,32i)                                                   | Block32<ushort> cellalloc<ushort>(N32 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 f5 fb ff ff 48 8b c6 48 83 c4 20 5e c3
88        | 7ff7c82a3d30h   | 76      | CTC_RET_SBB         | hex://datablocks/blocks?cellalloc#cellalloc_g[16i](n32,32i)                                                   | Block32<short> cellalloc<short>(N32 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 d5 fb ff ff 48 8b c6 48 83 c4 20 5e c3
89        | 7ff7c82a3d90h   | 66      | CTC_RET_Zx3         | hex://datablocks/blocks?cellalloc#cellalloc_g[32u](n32,32i)                                                   | Block32<uint> cellalloc<uint>(N32 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 bf fb ff ff 48 8b c6 48 83 c4 20 5e c3
90        | 7ff7c82a3df0h   | 66      | CTC_RET_Zx3         | hex://datablocks/blocks?cellalloc#cellalloc_g[32i](n32,32i)                                                   | Block32<int> cellalloc<int>(N32 n, int cellcount)                                                             | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 9f fb ff ff 48 8b c6 48 83 c4 20 5e c3
91        | 7ff7c82a3e50h   | 70      | CTC_RET_INTR        | hex://datablocks/blocks?cellalloc#cellalloc_g[32f](n32,32i)                                                   | Block32<float> cellalloc<float>(N32 n, int cellcount)                                                         | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 7b fb ff ff 48 8b c6 48 83 c4 20 5e c3
92        | 7ff7c82a42c0h   | 83      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?cellalloc#cellalloc_g[8u](n64,32i)                                                    | Block64<byte> cellalloc<byte>(N64 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 b6 fb ff ff 48 8b c6 48 83 c4 20 5e c3
93        | 7ff7c82a4330h   | 83      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?cellalloc#cellalloc_g[8i](n64,32i)                                                    | Block64<sbyte> cellalloc<sbyte>(N64 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 b6 fb ff ff 48 8b c6 48 83 c4 20 5e c3
94        | 7ff7c82a43a0h   | 83      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?cellalloc#cellalloc_g[16u](n64,32i)                                                   | Block64<ushort> cellalloc<ushort>(N64 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 86 fb ff ff 48 8b c6 48 83 c4 20 5e c3
95        | 7ff7c82a4410h   | 83      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?cellalloc#cellalloc_g[16i](n64,32i)                                                   | Block64<short> cellalloc<short>(N64 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 56 fb ff ff 48 8b c6 48 83 c4 20 5e c3
96        | 7ff7c82a4480h   | 76      | CTC_RET_SBB         | hex://datablocks/blocks?cellalloc#cellalloc_g[32u](n64,32i)                                                   | Block64<uint> cellalloc<uint>(N64 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 2d fb ff ff 48 8b c6 48 83 c4 20 5e c3
97        | 7ff7c82a44e0h   | 76      | CTC_RET_SBB         | hex://datablocks/blocks?cellalloc#cellalloc_g[32i](n64,32i)                                                   | Block64<int> cellalloc<int>(N64 n, int cellcount)                                                             | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 0d fb ff ff 48 8b c6 48 83 c4 20 5e c3
98        | 7ff7c82a4540h   | 66      | CTC_RET_Zx3         | hex://datablocks/blocks?cellalloc#cellalloc_g[64u](n64,32i)                                                   | Block64<ulong> cellalloc<ulong>(N64 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 f7 fa ff ff 48 8b c6 48 83 c4 20 5e c3
99        | 7ff7c82a45a0h   | 66      | CTC_RET_Zx3         | hex://datablocks/blocks?cellalloc#cellalloc_g[64i](n64,32i)                                                   | Block64<long> cellalloc<long>(N64 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 d7 fa ff ff 48 8b c6 48 83 c4 20 5e c3
100       | 7ff7c82a4600h   | 80      | CTC_RET_INTR        | hex://datablocks/blocks?cellalloc#cellalloc_g[32f](n64,32i)                                                   | Block64<float> cellalloc<float>(N64 n, int cellcount)                                                         | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 a9 fa ff ff 48 8b c6 48 83 c4 20 5e c3
101       | 7ff7c82a4670h   | 70      | CTC_RET_INTR        | hex://datablocks/blocks?cellalloc#cellalloc_g[64f](n64,32i)                                                   | Block64<double> cellalloc<double>(N64 n, int cellcount)                                                       | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 00 41 03 c8 83 e1 ff 41 8b d0 2b d1 74 05 41 ff c0 eb 00 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 83 fa ff ff 48 8b c6 48 83 c4 20 5e c3
102       | 7ff7c82a4ae0h   | 83      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?cellalloc#cellalloc_g[8u](n128,32i)                                                   | Block128<byte> cellalloc<byte>(N128 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 56 f7 ff ff 48 8b c6 48 83 c4 20 5e c3
103       | 7ff7c82a4b50h   | 83      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?cellalloc#cellalloc_g[8i](n128,32i)                                                   | Block128<sbyte> cellalloc<sbyte>(N128 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 f6 fb ff ff 48 8b c6 48 83 c4 20 5e c3
104       | 7ff7c82a4bc0h   | 83      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?cellalloc#cellalloc_g[16u](n128,32i)                                                  | Block128<ushort> cellalloc<ushort>(N128 n, int cellcount)                                                     | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 b6 fb ff ff 48 8b c6 48 83 c4 20 5e c3
105       | 7ff7c82a4c30h   | 83      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?cellalloc#cellalloc_g[16i](n128,32i)                                                  | Block128<short> cellalloc<short>(N128 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 76 fb ff ff 48 8b c6 48 83 c4 20 5e c3
106       | 7ff7c82a4ca0h   | 83      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?cellalloc#cellalloc_g[32u](n128,32i)                                                  | Block128<uint> cellalloc<uint>(N128 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 36 fb ff ff 48 8b c6 48 83 c4 20 5e c3
107       | 7ff7c82a4d10h   | 83      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?cellalloc#cellalloc_g[32i](n128,32i)                                                  | Block128<int> cellalloc<int>(N128 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 f6 fa ff ff 48 8b c6 48 83 c4 20 5e c3
108       | 7ff7c82a4d80h   | 76      | CTC_RET_SBB         | hex://datablocks/blocks?cellalloc#cellalloc_g[64u](n128,32i)                                                  | Block128<ulong> cellalloc<ulong>(N128 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 bd fa ff ff 48 8b c6 48 83 c4 20 5e c3
109       | 7ff7c82a4de0h   | 76      | CTC_RET_SBB         | hex://datablocks/blocks?cellalloc#cellalloc_g[64i](n128,32i)                                                  | Block128<long> cellalloc<long>(N128 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 8d fa ff ff 48 8b c6 48 83 c4 20 5e c3
110       | 7ff7c82a4e40h   | 87      | CTC_RET_INTR        | hex://datablocks/blocks?cellalloc#cellalloc_g[32f](n128,32i)                                                  | Block128<float> cellalloc<float>(N128 n, int cellcount)                                                       | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 52 fa ff ff 48 8b c6 48 83 c4 20 5e c3
111       | 7ff7c82a4eb0h   | 80      | CTC_RET_INTR        | hex://datablocks/blocks?cellalloc#cellalloc_g[64f](n128,32i)                                                  | Block128<double> cellalloc<double>(N128 n, int cellcount)                                                     | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 e9 1f 41 03 c8 d1 f9 41 8b d0 c1 ea 1f 41 03 d0 83 e2 fe 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 19 fa ff ff 48 8b c6 48 83 c4 20 5e c3
112       | 7ff7c82a5320h   | 83      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?cellalloc#cellalloc_g[8u](n256,32i)                                                   | Block256<byte> cellalloc<byte>(N256 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 1f 41 03 c8 c1 f9 05 41 8b d0 c1 fa 1f 83 e2 1f 41 03 d0 83 e2 e0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 de fb ff ff 48 8b c6 48 83 c4 20 5e c3
113       | 7ff7c82a5390h   | 83      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?cellalloc#cellalloc_g[8i](n256,32i)                                                   | Block256<sbyte> cellalloc<sbyte>(N256 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 1f 41 03 c8 c1 f9 05 41 8b d0 c1 fa 1f 83 e2 1f 41 03 d0 83 e2 e0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 be fb ff ff 48 8b c6 48 83 c4 20 5e c3
114       | 7ff7c82a5400h   | 83      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?cellalloc#cellalloc_g[16u](n256,32i)                                                  | Block256<ushort> cellalloc<ushort>(N256 n, int cellcount)                                                     | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 7e fb ff ff 48 8b c6 48 83 c4 20 5e c3
115       | 7ff7c82a5470h   | 83      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?cellalloc#cellalloc_g[16i](n256,32i)                                                  | Block256<short> cellalloc<short>(N256 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 3e fb ff ff 48 8b c6 48 83 c4 20 5e c3
116       | 7ff7c82a54e0h   | 83      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?cellalloc#cellalloc_g[32u](n256,32i)                                                  | Block256<uint> cellalloc<uint>(N256 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 fe fa ff ff 48 8b c6 48 83 c4 20 5e c3
117       | 7ff7c82a5550h   | 83      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?cellalloc#cellalloc_g[32i](n256,32i)                                                  | Block256<int> cellalloc<int>(N256 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 be fa ff ff 48 8b c6 48 83 c4 20 5e c3
118       | 7ff7c82a55c0h   | 83      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?cellalloc#cellalloc_g[64u](n256,32i)                                                  | Block256<ulong> cellalloc<ulong>(N256 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 7e fa ff ff 48 8b c6 48 83 c4 20 5e c3
119       | 7ff7c82a5630h   | 83      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?cellalloc#cellalloc_g[64i](n256,32i)                                                  | Block256<long> cellalloc<long>(N256 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 3e fa ff ff 48 8b c6 48 83 c4 20 5e c3
120       | 7ff7c82a56a0h   | 87      | CTC_RET_INTR        | hex://datablocks/blocks?cellalloc#cellalloc_g[32f](n256,32i)                                                  | Block256<float> cellalloc<float>(N256 n, int cellcount)                                                       | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 fa f9 ff ff 48 8b c6 48 83 c4 20 5e c3
121       | 7ff7c82a5710h   | 87      | CTC_RET_INTR        | hex://datablocks/blocks?cellalloc#cellalloc_g[64f](n256,32i)                                                  | Block256<double> cellalloc<double>(N256 n, int cellcount)                                                     | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 03 41 03 c8 c1 f9 02 41 8b d0 c1 fa 1f 83 e2 03 41 03 d0 83 e2 fc 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 ba f9 ff ff 48 8b c6 48 83 c4 20 5e c3
122       | 7ff7c82a5b90h   | 83      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?cellalloc#cellalloc_g[8u](n512,32i)                                                   | Block512<byte> cellalloc<byte>(N512 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 3f 41 03 c8 c1 f9 06 41 8b d0 c1 fa 1f 83 e2 3f 41 03 d0 83 e2 c0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 2e f7 ff ff 48 8b c6 48 83 c4 20 5e c3
123       | 7ff7c82a5c00h   | 83      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?cellalloc#cellalloc_g[8i](n512,32i)                                                   | Block512<sbyte> cellalloc<sbyte>(N512 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 3f 41 03 c8 c1 f9 06 41 8b d0 c1 fa 1f 83 e2 3f 41 03 d0 83 e2 c0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 76 fb ff ff 48 8b c6 48 83 c4 20 5e c3
124       | 7ff7c82a5c70h   | 83      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?cellalloc#cellalloc_g[16u](n512,32i)                                                  | Block512<ushort> cellalloc<ushort>(N512 n, int cellcount)                                                     | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 1f 41 03 c8 c1 f9 05 41 8b d0 c1 fa 1f 83 e2 1f 41 03 d0 83 e2 e0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 36 fb ff ff 48 8b c6 48 83 c4 20 5e c3
125       | 7ff7c82a5ce0h   | 83      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?cellalloc#cellalloc_g[16i](n512,32i)                                                  | Block512<short> cellalloc<short>(N512 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 1f 41 03 c8 c1 f9 05 41 8b d0 c1 fa 1f 83 e2 1f 41 03 d0 83 e2 e0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 f6 fa ff ff 48 8b c6 48 83 c4 20 5e c3
126       | 7ff7c82a5d50h   | 83      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?cellalloc#cellalloc_g[32u](n512,32i)                                                  | Block512<uint> cellalloc<uint>(N512 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 b6 fa ff ff 48 8b c6 48 83 c4 20 5e c3
127       | 7ff7c82a5dc0h   | 83      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?cellalloc#cellalloc_g[32i](n512,32i)                                                  | Block512<int> cellalloc<int>(N512 n, int cellcount)                                                           | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 76 fa ff ff 48 8b c6 48 83 c4 20 5e c3
128       | 7ff7c82a5e30h   | 83      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?cellalloc#cellalloc_g[64u](n512,32i)                                                  | Block512<ulong> cellalloc<ulong>(N512 n, int cellcount)                                                       | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 36 fa ff ff 48 8b c6 48 83 c4 20 5e c3
129       | 7ff7c82a5ea0h   | 83      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?cellalloc#cellalloc_g[64i](n512,32i)                                                  | Block512<long> cellalloc<long>(N512 n, int cellcount)                                                         | 56 48 83 ec 20 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 45 33 c9 e8 f6 f9 ff ff 48 8b c6 48 83 c4 20 5e c3
130       | 7ff7c82a5f10h   | 87      | CTC_RET_INTR        | hex://datablocks/blocks?cellalloc#cellalloc_g[32f](n512,32i)                                                  | Block512<float> cellalloc<float>(N512 n, int cellcount)                                                       | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 0f 41 03 c8 c1 f9 04 41 8b d0 c1 fa 1f 83 e2 0f 41 03 d0 83 e2 f0 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 b2 f9 ff ff 48 8b c6 48 83 c4 20 5e c3
131       | 7ff7c82a5f80h   | 87      | CTC_RET_INTR        | hex://datablocks/blocks?cellalloc#cellalloc_g[64f](n512,32i)                                                  | Block512<double> cellalloc<double>(N512 n, int cellcount)                                                     | 56 48 83 ec 20 c5 f8 77 48 89 54 24 38 48 8b f1 41 8b c8 c1 f9 1f 83 e1 07 41 03 c8 c1 f9 03 41 8b d0 c1 fa 1f 83 e2 07 41 03 d0 83 e2 f8 44 2b c2 74 06 44 8d 41 01 eb 03 44 8b c1 48 8b ce 48 0f be 54 24 38 c5 e0 57 db e8 72 f9 ff ff 48 8b c6 48 83 c4 20 5e c3
132       | 7ff7c82a5ff0h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[8u](n8,32i)                                                         | bool aligned<byte>(N8 n, int count)                                                                           | 0f 1f 44 00 00 b8 01 00 00 00 c3
133       | 7ff7c82a6010h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[8i](n8,32i)                                                         | bool aligned<sbyte>(N8 n, int count)                                                                          | 0f 1f 44 00 00 b8 01 00 00 00 c3
134       | 7ff7c82a6030h   | 24      | CTC_RET_SBB         | hex://datablocks/blocks?aligned#aligned_g[16u](n8,32i)                                                        | bool aligned<ushort>(N8 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
135       | 7ff7c82a6060h   | 24      | CTC_RET_SBB         | hex://datablocks/blocks?aligned#aligned_g[16i](n8,32i)                                                        | bool aligned<short>(N8 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
136       | 7ff7c82a6090h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[32u](n8,32i)                                                        | bool aligned<uint>(N8 n, int count)                                                                           | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
137       | 7ff7c82a60c0h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[32i](n8,32i)                                                        | bool aligned<int>(N8 n, int count)                                                                            | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
138       | 7ff7c82a60f0h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[64u](n8,32i)                                                        | bool aligned<ulong>(N8 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
139       | 7ff7c82a6120h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[64i](n8,32i)                                                        | bool aligned<long>(N8 n, int count)                                                                           | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
140       | 7ff7c82a6150h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[32f](n8,32i)                                                        | bool aligned<float>(N8 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
141       | 7ff7c82a6180h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[64f](n8,32i)                                                        | bool aligned<double>(N8 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
142       | 7ff7c82a61b0h   | 24      | CTC_RET_SBB         | hex://datablocks/blocks?aligned#aligned_g[8u](n16,32i)                                                        | bool aligned<byte>(N16 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
143       | 7ff7c82a61e0h   | 24      | CTC_RET_SBB         | hex://datablocks/blocks?aligned#aligned_g[8i](n16,32i)                                                        | bool aligned<sbyte>(N16 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
144       | 7ff7c82a6210h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[16u](n16,32i)                                                       | bool aligned<ushort>(N16 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
145       | 7ff7c82a6240h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[16i](n16,32i)                                                       | bool aligned<short>(N16 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
146       | 7ff7c82a6270h   | 21      | CTC_RET_Zx3         | hex://datablocks/blocks?aligned#aligned_g[32u](n16,32i)                                                       | bool aligned<uint>(N16 n, int count)                                                                          | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
147       | 7ff7c82a62a0h   | 21      | CTC_RET_Zx3         | hex://datablocks/blocks?aligned#aligned_g[32i](n16,32i)                                                       | bool aligned<int>(N16 n, int count)                                                                           | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
148       | 7ff7c82a62d0h   | 21      | CTC_RET_Zx3         | hex://datablocks/blocks?aligned#aligned_g[64u](n16,32i)                                                       | bool aligned<ulong>(N16 n, int count)                                                                         | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
149       | 7ff7c82a6300h   | 21      | CTC_RET_Zx3         | hex://datablocks/blocks?aligned#aligned_g[64i](n16,32i)                                                       | bool aligned<long>(N16 n, int count)                                                                          | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
150       | 7ff7c82a6730h   | 21      | CTC_RET_Zx3         | hex://datablocks/blocks?aligned#aligned_g[32f](n16,32i)                                                       | bool aligned<float>(N16 n, int count)                                                                         | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
151       | 7ff7c82a6760h   | 21      | CTC_RET_Zx3         | hex://datablocks/blocks?aligned#aligned_g[64f](n16,32i)                                                       | bool aligned<double>(N16 n, int count)                                                                        | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
152       | 7ff7c82a6790h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[8u](n32,32i)                                                        | bool aligned<byte>(N32 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
153       | 7ff7c82a67c0h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[8i](n32,32i)                                                        | bool aligned<sbyte>(N32 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
154       | 7ff7c82a67f0h   | 24      | CTC_RET_SBB         | hex://datablocks/blocks?aligned#aligned_g[16u](n32,32i)                                                       | bool aligned<ushort>(N32 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
155       | 7ff7c82a6820h   | 24      | CTC_RET_SBB         | hex://datablocks/blocks?aligned#aligned_g[16i](n32,32i)                                                       | bool aligned<short>(N32 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
156       | 7ff7c82a6850h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[32u](n32,32i)                                                       | bool aligned<uint>(N32 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
157       | 7ff7c82a6880h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[32i](n32,32i)                                                       | bool aligned<int>(N32 n, int count)                                                                           | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
158       | 7ff7c82a68b0h   | 21      | CTC_RET_Zx3         | hex://datablocks/blocks?aligned#aligned_g[64u](n32,32i)                                                       | bool aligned<ulong>(N32 n, int count)                                                                         | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
159       | 7ff7c82a68e0h   | 21      | CTC_RET_Zx3         | hex://datablocks/blocks?aligned#aligned_g[64i](n32,32i)                                                       | bool aligned<long>(N32 n, int count)                                                                          | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
160       | 7ff7c82a6910h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[32f](n32,32i)                                                       | bool aligned<float>(N32 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
161       | 7ff7c82a6940h   | 21      | CTC_RET_Zx3         | hex://datablocks/blocks?aligned#aligned_g[64f](n32,32i)                                                       | bool aligned<double>(N32 n, int count)                                                                        | 0f 1f 44 00 00 33 c9 8b c2 99 f7 f9 85 d2 0f 94 c0 0f b6 c0 c3
162       | 7ff7c82a6970h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[8u](n64,32i)                                                        | bool aligned<byte>(N64 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
163       | 7ff7c82a69a0h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[8i](n64,32i)                                                        | bool aligned<sbyte>(N64 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
164       | 7ff7c82a69d0h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[16u](n64,32i)                                                       | bool aligned<ushort>(N64 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
165       | 7ff7c82a6a00h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[16i](n64,32i)                                                       | bool aligned<short>(N64 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
166       | 7ff7c82a6a30h   | 24      | CTC_RET_SBB         | hex://datablocks/blocks?aligned#aligned_g[32u](n64,32i)                                                       | bool aligned<uint>(N64 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
167       | 7ff7c82a6a60h   | 24      | CTC_RET_SBB         | hex://datablocks/blocks?aligned#aligned_g[32i](n64,32i)                                                       | bool aligned<int>(N64 n, int count)                                                                           | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
168       | 7ff7c82a6a90h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[64u](n64,32i)                                                       | bool aligned<ulong>(N64 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
169       | 7ff7c82a6ac0h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[64i](n64,32i)                                                       | bool aligned<long>(N64 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
170       | 7ff7c82a6af0h   | 24      | CTC_RET_SBB         | hex://datablocks/blocks?aligned#aligned_g[32f](n64,32i)                                                       | bool aligned<float>(N64 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
171       | 7ff7c82a6b20h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[64f](n64,32i)                                                       | bool aligned<double>(N64 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 00 03 c2 83 e0 ff 2b d0 0f 94 c0 0f b6 c0 c3
172       | 7ff7c82a6b50h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[8u](n128,32i)                                                       | bool aligned<byte>(N128 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
173       | 7ff7c82a6b80h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[8i](n128,32i)                                                       | bool aligned<sbyte>(N128 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
174       | 7ff7c82a6bb0h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[16u](n128,32i)                                                      | bool aligned<ushort>(N128 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
175       | 7ff7c82a6be0h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[16i](n128,32i)                                                      | bool aligned<short>(N128 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
176       | 7ff7c82a6c10h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[32u](n128,32i)                                                      | bool aligned<uint>(N128 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
177       | 7ff7c82a6c40h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[32i](n128,32i)                                                      | bool aligned<int>(N128 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
178       | 7ff7c82a6c70h   | 24      | CTC_RET_SBB         | hex://datablocks/blocks?aligned#aligned_g[64u](n128,32i)                                                      | bool aligned<ulong>(N128 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
179       | 7ff7c82a6ca0h   | 24      | CTC_RET_SBB         | hex://datablocks/blocks?aligned#aligned_g[64i](n128,32i)                                                      | bool aligned<long>(N128 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
180       | 7ff7c82a6cd0h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[32f](n128,32i)                                                      | bool aligned<float>(N128 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
181       | 7ff7c82a6d00h   | 24      | CTC_RET_SBB         | hex://datablocks/blocks?aligned#aligned_g[64f](n128,32i)                                                      | bool aligned<double>(N128 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 e8 1f 03 c2 83 e0 fe 2b d0 0f 94 c0 0f b6 c0 c3
182       | 7ff7c82a6d30h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[8u](n256,32i)                                                       | bool aligned<byte>(N256 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 83 e0 e0 2b d0 0f 94 c0 0f b6 c0 c3
183       | 7ff7c82a6d60h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[8i](n256,32i)                                                       | bool aligned<sbyte>(N256 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 83 e0 e0 2b d0 0f 94 c0 0f b6 c0 c3
184       | 7ff7c82a6d90h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[16u](n256,32i)                                                      | bool aligned<ushort>(N256 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
185       | 7ff7c82a6dc0h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[16i](n256,32i)                                                      | bool aligned<short>(N256 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
186       | 7ff7c82a6df0h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[32u](n256,32i)                                                      | bool aligned<uint>(N256 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
187       | 7ff7c82a6e20h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[32i](n256,32i)                                                      | bool aligned<int>(N256 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
188       | 7ff7c82a6e50h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[64u](n256,32i)                                                      | bool aligned<ulong>(N256 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
189       | 7ff7c82a6e80h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[64i](n256,32i)                                                      | bool aligned<long>(N256 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
190       | 7ff7c82a6eb0h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[32f](n256,32i)                                                      | bool aligned<float>(N256 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
191       | 7ff7c82a6ee0h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[64f](n256,32i)                                                      | bool aligned<double>(N256 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 03 03 c2 83 e0 fc 2b d0 0f 94 c0 0f b6 c0 c3
192       | 7ff7c82a6f10h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[8u](n512,32i)                                                       | bool aligned<byte>(N512 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 3f 03 c2 83 e0 c0 2b d0 0f 94 c0 0f b6 c0 c3
193       | 7ff7c82a6f40h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[8i](n512,32i)                                                       | bool aligned<sbyte>(N512 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 3f 03 c2 83 e0 c0 2b d0 0f 94 c0 0f b6 c0 c3
194       | 7ff7c82a6f70h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[16u](n512,32i)                                                      | bool aligned<ushort>(N512 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 83 e0 e0 2b d0 0f 94 c0 0f b6 c0 c3
195       | 7ff7c82a6fa0h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[16i](n512,32i)                                                      | bool aligned<short>(N512 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 1f 03 c2 83 e0 e0 2b d0 0f 94 c0 0f b6 c0 c3
196       | 7ff7c82a6fd0h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[32u](n512,32i)                                                      | bool aligned<uint>(N512 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
197       | 7ff7c82a7000h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[32i](n512,32i)                                                      | bool aligned<int>(N512 n, int count)                                                                          | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
198       | 7ff7c82a7030h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[64u](n512,32i)                                                      | bool aligned<ulong>(N512 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
199       | 7ff7c82a7060h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[64i](n512,32i)                                                      | bool aligned<long>(N512 n, int count)                                                                         | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
200       | 7ff7c82a7090h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[32f](n512,32i)                                                      | bool aligned<float>(N512 n, int count)                                                                        | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 0f 03 c2 83 e0 f0 2b d0 0f 94 c0 0f b6 c0 c3
201       | 7ff7c82a70c0h   | 27      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?aligned#aligned_g[64f](n512,32i)                                                      | bool aligned<double>(N512 n, int count)                                                                       | 0f 1f 44 00 00 8b c2 c1 f8 1f 83 e0 07 03 c2 83 e0 f8 2b d0 0f 94 c0 0f b6 c0 c3
202       | 7ff7c82a7500h   | 87      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?alloc#alloc_g[8u](n16,32i,8u)                                                         | Block16<byte> alloc<byte>(N16 w, int blocks, byte t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 10 ea 72 c7 f7 7f 00 00 e8 b5 f8 fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 46 e9 fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
203       | 7ff7c82a7570h   | 87      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?alloc#alloc_g[8i](n16,32i,8i)                                                         | Block16<sbyte> alloc<sbyte>(N16 w, int blocks, sbyte t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 98 f0 72 c7 f7 7f 00 00 e8 45 f8 fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 d6 e8 fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
204       | 7ff7c82a75e0h   | 84      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[16u](n16,32i,16u)                                                       | Block16<ushort> alloc<ushort>(N16 w, int blocks, ushort t)                                                    | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 70 da 15 c8 f7 7f 00 00 e8 d8 f7 fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 69 e8 fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
205       | 7ff7c82a7650h   | 84      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[16i](n16,32i,16i)                                                       | Block16<short> alloc<short>(N16 w, int blocks, short t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 a0 59 3c c8 f7 7f 00 00 e8 68 f7 fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 f9 e7 fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
206       | 7ff7c82a76c0h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[8u](n32,32i,8u)                                                         | Block32<byte> alloc<byte>(N32 w, int blocks, byte t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 10 ea 72 c7 f7 7f 00 00 e8 f4 f6 fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 85 e7 fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
207       | 7ff7c82a7730h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[8i](n32,32i,8i)                                                         | Block32<sbyte> alloc<sbyte>(N32 w, int blocks, sbyte t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 98 f0 72 c7 f7 7f 00 00 e8 84 f6 fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 15 e7 fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
208       | 7ff7c82a77a0h   | 87      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?alloc#alloc_g[16u](n32,32i,16u)                                                       | Block32<ushort> alloc<ushort>(N32 w, int blocks, ushort t)                                                    | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 70 da 15 c8 f7 7f 00 00 e8 15 f6 fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 a6 e6 fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
209       | 7ff7c82a7810h   | 87      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?alloc#alloc_g[16i](n32,32i,16i)                                                       | Block32<short> alloc<short>(N32 w, int blocks, short t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 a0 59 3c c8 f7 7f 00 00 e8 a5 f5 fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 36 e6 fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
210       | 7ff7c82a7880h   | 84      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[32u](n32,32i,32u)                                                       | Block32<uint> alloc<uint>(N32 w, int blocks, uint t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 08 ca 15 c8 f7 7f 00 00 e8 38 f5 fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 c9 e5 fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
211       | 7ff7c82a78f0h   | 84      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[32i](n32,32i,32i)                                                       | Block32<int> alloc<int>(N32 w, int blocks, int t)                                                             | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 48 5f 7f c7 f7 7f 00 00 e8 c8 f4 fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 59 e5 fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
212       | 7ff7c82a7960h   | 84      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[32f](n32,32i,32f)                                                       | Block32<float> alloc<float>(N32 w, int blocks, float t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 a0 e3 b7 c7 f7 7f 00 00 e8 58 f4 fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 e9 e4 fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
213       | 7ff7c82a7de0h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[8u](n64,32i,8u)                                                         | Block64<byte> alloc<byte>(N64 w, int blocks, byte t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 10 ea 72 c7 f7 7f 00 00 e8 d4 ef fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 65 e0 fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
214       | 7ff7c82a7e50h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[8i](n64,32i,8i)                                                         | Block64<sbyte> alloc<sbyte>(N64 w, int blocks, sbyte t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 98 f0 72 c7 f7 7f 00 00 e8 64 ef fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 f5 df fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
215       | 7ff7c82a7ec0h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[16u](n64,32i,16u)                                                       | Block64<ushort> alloc<ushort>(N64 w, int blocks, ushort t)                                                    | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 70 da 15 c8 f7 7f 00 00 e8 f4 ee fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 85 df fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
216       | 7ff7c82a7f30h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[16i](n64,32i,16i)                                                       | Block64<short> alloc<short>(N64 w, int blocks, short t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 a0 59 3c c8 f7 7f 00 00 e8 84 ee fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 15 df fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
217       | 7ff7c82a7fa0h   | 87      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?alloc#alloc_g[32u](n64,32i,32u)                                                       | Block64<uint> alloc<uint>(N64 w, int blocks, uint t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 08 ca 15 c8 f7 7f 00 00 e8 15 ee fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 a6 de fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
218       | 7ff7c82a8010h   | 87      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?alloc#alloc_g[32i](n64,32i,32i)                                                       | Block64<int> alloc<int>(N64 w, int blocks, int t)                                                             | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 48 5f 7f c7 f7 7f 00 00 e8 a5 ed fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 36 de fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
219       | 7ff7c82a8080h   | 84      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[64u](n64,32i,64u)                                                       | Block64<ulong> alloc<ulong>(N64 w, int blocks, ulong t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 60 74 ad c7 f7 7f 00 00 e8 38 ed fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 c9 dd fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
220       | 7ff7c82a80f0h   | 84      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[64i](n64,32i,64i)                                                       | Block64<long> alloc<long>(N64 w, int blocks, long t)                                                          | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 08 68 3c c8 f7 7f 00 00 e8 c8 ec fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 59 dd fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
221       | 7ff7c82a8160h   | 87      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?alloc#alloc_g[32f](n64,32i,32f)                                                       | Block64<float> alloc<float>(N64 w, int blocks, float t)                                                       | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 a0 e3 b7 c7 f7 7f 00 00 e8 55 ec fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 e6 dc fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
222       | 7ff7c82a81d0h   | 84      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[64f](n64,32i,64f)                                                       | Block64<double> alloc<double>(N64 w, int blocks, double t)                                                    | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 49 63 d0 48 b9 a8 e5 b7 c7 f7 7f 00 00 e8 e8 eb fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 79 dc fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
223       | 7ff7c82a8240h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[8u](n128,32i,8u)                                                        | Block128<byte> alloc<byte>(N128 w, int blocks, byte t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 10 ea 72 c7 f7 7f 00 00 e8 74 eb fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 05 dc fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
224       | 7ff7c82a82b0h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[8i](n128,32i,8i)                                                        | Block128<sbyte> alloc<sbyte>(N128 w, int blocks, sbyte t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 98 f0 72 c7 f7 7f 00 00 e8 04 eb fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 95 db fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
225       | 7ff7c82a8320h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[16u](n128,32i,16u)                                                      | Block128<ushort> alloc<ushort>(N128 w, int blocks, ushort t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 70 da 15 c8 f7 7f 00 00 e8 94 ea fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 25 db fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
226       | 7ff7c82a8390h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[16i](n128,32i,16i)                                                      | Block128<short> alloc<short>(N128 w, int blocks, short t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 a0 59 3c c8 f7 7f 00 00 e8 24 ea fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 b5 da fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
227       | 7ff7c82a8400h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[32u](n128,32i,32u)                                                      | Block128<uint> alloc<uint>(N128 w, int blocks, uint t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 08 ca 15 c8 f7 7f 00 00 e8 b4 e9 fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 45 da fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
228       | 7ff7c82a8470h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[32i](n128,32i,32i)                                                      | Block128<int> alloc<int>(N128 w, int blocks, int t)                                                           | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 48 5f 7f c7 f7 7f 00 00 e8 44 e9 fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 d5 d9 fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
229       | 7ff7c82a84e0h   | 87      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?alloc#alloc_g[64u](n128,32i,64u)                                                      | Block128<ulong> alloc<ulong>(N128 w, int blocks, ulong t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 60 74 ad c7 f7 7f 00 00 e8 d5 e8 fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 66 d9 fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
230       | 7ff7c82a8550h   | 87      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?alloc#alloc_g[64i](n128,32i,64i)                                                      | Block128<long> alloc<long>(N128 w, int blocks, long t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 08 68 3c c8 f7 7f 00 00 e8 65 e8 fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 f6 d8 fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
231       | 7ff7c82a85c0h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[32f](n128,32i,32f)                                                      | Block128<float> alloc<float>(N128 w, int blocks, float t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 a0 e3 b7 c7 f7 7f 00 00 e8 f4 e7 fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 85 d8 fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
232       | 7ff7c82a8630h   | 87      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?alloc#alloc_g[64f](n128,32i,64f)                                                      | Block128<double> alloc<double>(N128 w, int blocks, double t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 d1 e0 49 63 d0 48 b9 a8 e5 b7 c7 f7 7f 00 00 e8 85 e7 fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 16 d8 fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
233       | 7ff7c82a8ab0h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[8u](n256,32i,8u)                                                        | Block256<byte> alloc<byte>(N256 w, int blocks, byte t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 05 49 63 d0 48 b9 10 ea 72 c7 f7 7f 00 00 e8 04 e3 fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 95 d3 fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
234       | 7ff7c82a8b20h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[8i](n256,32i,8i)                                                        | Block256<sbyte> alloc<sbyte>(N256 w, int blocks, sbyte t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 05 49 63 d0 48 b9 98 f0 72 c7 f7 7f 00 00 e8 94 e2 fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 25 d3 fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
235       | 7ff7c82a8b90h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[16u](n256,32i,16u)                                                      | Block256<ushort> alloc<ushort>(N256 w, int blocks, ushort t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 70 da 15 c8 f7 7f 00 00 e8 24 e2 fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 b5 d2 fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
236       | 7ff7c82a8c00h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[16i](n256,32i,16i)                                                      | Block256<short> alloc<short>(N256 w, int blocks, short t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 a0 59 3c c8 f7 7f 00 00 e8 b4 e1 fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 45 d2 fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
237       | 7ff7c82a8c70h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[32u](n256,32i,32u)                                                      | Block256<uint> alloc<uint>(N256 w, int blocks, uint t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 08 ca 15 c8 f7 7f 00 00 e8 44 e1 fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 d5 d1 fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
238       | 7ff7c82a8ce0h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[32i](n256,32i,32i)                                                      | Block256<int> alloc<int>(N256 w, int blocks, int t)                                                           | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 48 5f 7f c7 f7 7f 00 00 e8 d4 e0 fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 65 d1 fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
239       | 7ff7c82a8d50h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[64u](n256,32i,64u)                                                      | Block256<ulong> alloc<ulong>(N256 w, int blocks, ulong t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 60 74 ad c7 f7 7f 00 00 e8 64 e0 fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 f5 d0 fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
240       | 7ff7c82a8dc0h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[64i](n256,32i,64i)                                                      | Block256<long> alloc<long>(N256 w, int blocks, long t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 08 68 3c c8 f7 7f 00 00 e8 f4 df fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 85 d0 fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
241       | 7ff7c82a8e30h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[32f](n256,32i,32f)                                                      | Block256<float> alloc<float>(N256 w, int blocks, float t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 a0 e3 b7 c7 f7 7f 00 00 e8 84 df fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 15 d0 fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
242       | 7ff7c82a8ea0h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[64f](n256,32i,64f)                                                      | Block256<double> alloc<double>(N256 w, int blocks, double t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 02 49 63 d0 48 b9 a8 e5 b7 c7 f7 7f 00 00 e8 14 df fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 a5 cf fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
243       | 7ff7c82a8f10h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[8u](n512,32i,8u)                                                        | Block512<byte> alloc<byte>(N512 w, int blocks, byte t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 06 49 63 d0 48 b9 10 ea 72 c7 f7 7f 00 00 e8 a4 de fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 35 cf fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
244       | 7ff7c82a8f80h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[8i](n512,32i,8i)                                                        | Block512<sbyte> alloc<sbyte>(N512 w, int blocks, sbyte t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 06 49 63 d0 48 b9 98 f0 72 c7 f7 7f 00 00 e8 34 de fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 c5 ce fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
245       | 7ff7c82a8ff0h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[16u](n512,32i,16u)                                                      | Block512<ushort> alloc<ushort>(N512 w, int blocks, ushort t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 05 49 63 d0 48 b9 70 da 15 c8 f7 7f 00 00 e8 c4 dd fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 55 ce fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
246       | 7ff7c82a9060h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[16i](n512,32i,16i)                                                      | Block512<short> alloc<short>(N512 w, int blocks, short t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 05 49 63 d0 48 b9 a0 59 3c c8 f7 7f 00 00 e8 54 dd fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 e5 cd fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
247       | 7ff7c82a90d0h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[32u](n512,32i,32u)                                                      | Block512<uint> alloc<uint>(N512 w, int blocks, uint t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 08 ca 15 c8 f7 7f 00 00 e8 e4 dc fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 75 cd fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
248       | 7ff7c82a9140h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[32i](n512,32i,32i)                                                      | Block512<int> alloc<int>(N512 w, int blocks, int t)                                                           | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 48 5f 7f c7 f7 7f 00 00 e8 74 dc fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 05 cd fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
249       | 7ff7c82a91b0h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[64u](n512,32i,64u)                                                      | Block512<ulong> alloc<ulong>(N512 w, int blocks, ulong t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 60 74 ad c7 f7 7f 00 00 e8 04 dc fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 95 cc fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
250       | 7ff7c82a9220h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[64i](n512,32i,64i)                                                      | Block512<long> alloc<long>(N512 w, int blocks, long t)                                                        | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 08 68 3c c8 f7 7f 00 00 e8 94 db fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 25 cc fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
251       | 7ff7c82a9290h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[32f](n512,32i,32f)                                                      | Block512<float> alloc<float>(N512 w, int blocks, float t)                                                     | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 04 49 63 d0 48 b9 a0 e3 b7 c7 f7 7f 00 00 e8 24 db fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 b5 cb fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
252       | 7ff7c82a9300h   | 88      | CTC_RET_SBB         | hex://datablocks/blocks?alloc#alloc_g[64f](n512,32i,64f)                                                      | Block512<double> alloc<double>(N512 w, int blocks, double t)                                                  | 57 56 53 48 83 ec 30 33 c0 48 89 44 24 20 48 89 44 24 28 48 8b d9 41 c1 e0 03 49 63 d0 48 b9 a8 e5 b7 c7 f7 7f 00 00 e8 b4 da fb 5e 48 8d 50 10 8b 40 08 48 8d 4c 24 20 48 89 11 89 41 08 48 8b fb 48 8d 74 24 20 e8 45 cb fb 5e 48 a5 48 8b c3 48 83 c4 30 5b 5e 5f c3
253       | 7ff7c82a9a30h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[8u](n8,8u)                                                        | int blocklen<byte>(N8 w, byte t)                                                                              | 0f 1f 44 00 00 b8 01 00 00 00 c3
254       | 7ff7c82a9a50h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[8i](n8,8i)                                                        | int blocklen<sbyte>(N8 w, sbyte t)                                                                            | 0f 1f 44 00 00 b8 01 00 00 00 c3
255       | 7ff7c82a9a70h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[8u](n16,8u)                                                       | int blocklen<byte>(N16 w, byte t)                                                                             | 0f 1f 44 00 00 b8 02 00 00 00 c3
256       | 7ff7c82a9a90h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[8i](n16,8i)                                                       | int blocklen<sbyte>(N16 w, sbyte t)                                                                           | 0f 1f 44 00 00 b8 02 00 00 00 c3
257       | 7ff7c82a9ab0h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[16u](n16,16u)                                                     | int blocklen<ushort>(N16 w, ushort t)                                                                         | 0f 1f 44 00 00 b8 01 00 00 00 c3
258       | 7ff7c82a9ad0h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[16i](n16,16i)                                                     | int blocklen<short>(N16 w, short t)                                                                           | 0f 1f 44 00 00 b8 01 00 00 00 c3
259       | 7ff7c82a9af0h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[8u](n32,8u)                                                       | int blocklen<byte>(N32 w, byte t)                                                                             | 0f 1f 44 00 00 b8 04 00 00 00 c3
260       | 7ff7c82a9b10h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[8i](n32,8i)                                                       | int blocklen<sbyte>(N32 w, sbyte t)                                                                           | 0f 1f 44 00 00 b8 04 00 00 00 c3
261       | 7ff7c82a9b30h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[16u](n32,16u)                                                     | int blocklen<ushort>(N32 w, ushort t)                                                                         | 0f 1f 44 00 00 b8 02 00 00 00 c3
262       | 7ff7c82a9b50h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[16i](n32,16i)                                                     | int blocklen<short>(N32 w, short t)                                                                           | 0f 1f 44 00 00 b8 02 00 00 00 c3
263       | 7ff7c82a9b70h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[32u](n32,32u)                                                     | int blocklen<uint>(N32 w, uint t)                                                                             | 0f 1f 44 00 00 b8 01 00 00 00 c3
264       | 7ff7c82a9b90h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[32i](n32,32i)                                                     | int blocklen<int>(N32 w, int t)                                                                               | 0f 1f 44 00 00 b8 01 00 00 00 c3
265       | 7ff7c82a9bb0h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[32f](n32,32f)                                                     | int blocklen<float>(N32 w, float t)                                                                           | 0f 1f 44 00 00 b8 01 00 00 00 c3
266       | 7ff7c82a9bd0h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[8u](n64,8u)                                                       | int blocklen<byte>(N64 w, byte t)                                                                             | 0f 1f 44 00 00 b8 08 00 00 00 c3
267       | 7ff7c82a9bf0h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[8i](n64,8i)                                                       | int blocklen<sbyte>(N64 w, sbyte t)                                                                           | 0f 1f 44 00 00 b8 08 00 00 00 c3
268       | 7ff7c82a9c10h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[16u](n64,16u)                                                     | int blocklen<ushort>(N64 w, ushort t)                                                                         | 0f 1f 44 00 00 b8 04 00 00 00 c3
269       | 7ff7c82a9c30h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[16i](n64,16i)                                                     | int blocklen<short>(N64 w, short t)                                                                           | 0f 1f 44 00 00 b8 04 00 00 00 c3
270       | 7ff7c82a9c50h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[32u](n64,32u)                                                     | int blocklen<uint>(N64 w, uint t)                                                                             | 0f 1f 44 00 00 b8 02 00 00 00 c3
271       | 7ff7c82a9c70h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[32i](n64,32i)                                                     | int blocklen<int>(N64 w, int t)                                                                               | 0f 1f 44 00 00 b8 02 00 00 00 c3
272       | 7ff7c82a9c90h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[64u](n64,64u)                                                     | int blocklen<ulong>(N64 w, ulong t)                                                                           | 0f 1f 44 00 00 b8 01 00 00 00 c3
273       | 7ff7c82a9cb0h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[64i](n64,64i)                                                     | int blocklen<long>(N64 w, long t)                                                                             | 0f 1f 44 00 00 b8 01 00 00 00 c3
274       | 7ff7c82a9cd0h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[32f](n64,32f)                                                     | int blocklen<float>(N64 w, float t)                                                                           | 0f 1f 44 00 00 b8 02 00 00 00 c3
275       | 7ff7c82a9cf0h   | 11      | CTC_RET_ZED_SBB     | hex://datablocks/blocks?blocklen#blocklen_g[64f](n64,64f)                                                     | int blocklen<double>(N64 w, double t)                                                                         | 0f 1f 44 00 00 b8 01 00 00 00 c3
276       | 7ff7c82aa120h   | 106     | CTC_RET_INTR        | hex://datablocks/blocks?cells#cells_(n16,16u)                                                                 | Block16<ushort> cells(N16 n, ushort x0)                                                                       | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 48 b9 70 da 15 c8 f7 7f 00 00 ba 01 00 00 00 e8 95 cc fb 5e 66 89 70 10 48 83 c0 10 ba 01 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 13 bd fb 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
277       | 7ff7c82aa1b0h   | 210     | CTC_RET_INTR        | hex://datablocks/blocks?cells#cells_(n16,64u)                                                                 | Block16<ulong> cells(N16 n, ulong x0)                                                                         | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 48 b9 60 74 ad c7 f7 7f 00 00 ba 01 00 00 00 e8 05 cc fb 5e 48 8b f8 48 89 77 10 b8 01 00 00 00 45 33 c0 99 41 f7 f8 ba 01 00 00 00 83 ea 00 74 4f ba 1a 00 00 00 41 b8 01 00 00 00 49 b9 58 7a 68 51 a6 01 00 00 4d 8b 09 48 b9 60 7a 68 51 a6 01 00 00 48 8b 09 48 8d 44 24 28 44 88 00 89 50 04 48 8b 54 24 28 48 89 54 24 20 ba 01 00 00 00 4d 8b c1 4c 8b c9 b9 10 00 00 00 e8 c9 ac 4b ff 48 83 c7 10 b8 01 00 00 00 48 8d 54 24 30 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 30 48 89 3a 89 42 08 48 8b fb 48 8d 74 24 30 e8 1b bc fb 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
278       | 7ff7c82aa2a0h   | 210     | CTC_RET_INTR        | hex://datablocks/blocks?cells#cells_(n32,64u)                                                                 | Block32<ulong> cells(N32 n, ulong x0)                                                                         | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 48 b9 60 74 ad c7 f7 7f 00 00 ba 01 00 00 00 e8 15 cb fb 5e 48 8b f8 48 89 77 10 b8 01 00 00 00 45 33 c0 99 41 f7 f8 ba 01 00 00 00 83 ea 00 74 4f ba 2a 00 00 00 41 b8 01 00 00 00 49 b9 58 7a 68 51 a6 01 00 00 4d 8b 09 48 b9 60 7a 68 51 a6 01 00 00 48 8b 09 48 8d 44 24 28 44 88 00 89 50 04 48 8b 54 24 28 48 89 54 24 20 ba 01 00 00 00 4d 8b c1 4c 8b c9 b9 20 00 00 00 e8 d9 ab 4b ff 48 83 c7 10 b8 01 00 00 00 48 8d 54 24 30 c5 f8 57 c0 c5 fa 7f 02 48 8d 54 24 30 48 89 3a 89 42 08 48 8b fb 48 8d 74 24 30 e8 2b bb fb 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
279       | 7ff7c82aa390h   | 135     | CTC_RET_INTR        | hex://datablocks/blocks?cells#cells_(n32,8u,8u,8u,8u)                                                         | Block32<byte> cells(N32 n, byte x0, byte x1, byte x2, byte x3)                                                | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 10 ea 72 c7 f7 7f 00 00 ba 04 00 00 00 e8 22 ca fb 5e 40 88 70 10 40 88 78 11 8b b4 24 80 00 00 00 40 88 70 12 8b b4 24 88 00 00 00 40 88 70 13 48 83 c0 10 ba 04 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 86 ba fb 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
280       | 7ff7c82aa440h   | 113     | CTC_RET_INTR        | hex://datablocks/blocks?cells#cells_(n32,16u,16u)                                                             | Block32<ushort> cells(N32 n, ushort x0, ushort x1)                                                            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 70 da 15 c8 f7 7f 00 00 ba 02 00 00 00 e8 72 c9 fb 5e 66 89 70 10 66 89 78 12 48 83 c0 10 ba 02 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ec b9 fb 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
281       | 7ff7c82aa4d0h   | 105     | CTC_RET_INTR        | hex://datablocks/blocks?cells#cells_(n32,32u)                                                                 | Block32<uint> cells(N32 n, uint x0)                                                                           | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 48 b9 08 ca 15 c8 f7 7f 00 00 ba 01 00 00 00 e8 e5 c8 fb 5e 89 70 10 48 83 c0 10 ba 01 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 64 b9 fb 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
282       | 7ff7c82aa960h   | 179     | CTC_RET_INTR        | hex://datablocks/blocks?cells#cells_(n64,8u,8u,8u,8u,8u,8u,8u,8u)                                             | Block64<byte> cells(N64 n, byte x0, byte x1, byte x2, byte x3, byte x4, byte x5, byte x6, byte x7)            | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 10 ea 72 c7 f7 7f 00 00 ba 08 00 00 00 e8 52 c4 fb 5e 40 88 70 10 40 88 78 11 8b b4 24 80 00 00 00 40 88 70 12 8b b4 24 88 00 00 00 40 88 70 13 8b b4 24 90 00 00 00 40 88 70 14 8b b4 24 98 00 00 00 40 88 70 15 8b b4 24 a0 00 00 00 40 88 70 16 8b b4 24 a8 00 00 00 40 88 70 17 48 83 c0 10 ba 08 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 8a b4 fb 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
283       | 7ff7c82aaa30h   | 135     | CTC_RET_INTR        | hex://datablocks/blocks?cells#cells_(n64,16u,16u,16u,16u)                                                     | Block64<ushort> cells(N64 n, ushort x0, ushort x1, ushort x2, ushort x3)                                      | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 70 da 15 c8 f7 7f 00 00 ba 04 00 00 00 e8 82 c3 fb 5e 66 89 70 10 66 89 78 12 8b b4 24 80 00 00 00 66 89 70 14 8b b4 24 88 00 00 00 66 89 70 16 48 83 c0 10 ba 04 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 e6 b3 fb 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
284       | 7ff7c82aaae0h   | 111     | CTC_RET_INTR        | hex://datablocks/blocks?cells#cells_(n64,32u,32u)                                                             | Block64<uint> cells(N64 n, uint x0, uint x1)                                                                  | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 08 ca 15 c8 f7 7f 00 00 ba 02 00 00 00 e8 d2 c2 fb 5e 89 70 10 89 78 14 48 83 c0 10 ba 02 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 4e b3 fb 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
285       | 7ff7c82aab70h   | 106     | CTC_RET_INTR        | hex://datablocks/blocks?cells#cells_(n64,64u)                                                                 | Block64<ulong> cells(N64 n, ulong x0)                                                                         | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 48 b9 60 74 ad c7 f7 7f 00 00 ba 01 00 00 00 e8 45 c2 fb 5e 48 89 70 10 48 83 c0 10 ba 01 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 c3 b2 fb 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
286       | 7ff7c82aac00h   | 272     | CTC_RET_INTR        | hex://datablocks/blocks?cells#cells_(n128,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u)                    | Block128<byte> cells(N128 n, byte x0, byte x1, byte x2, byte x3, byte x4, byte x5, byte x6, byte x7, byte x8, byte x9, byte xA, byte xB, byte xC, byte xD, byte xE, byte xF)| 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 89 44 24 38 48 8b d9 41 8b f0 41 8b f9 48 b9 10 ea 72 c7 f7 7f 00 00 ba 10 00 00 00 e8 ad c1 fb 5e 40 88 70 10 40 88 78 11 8b b4 24 80 00 00 00 40 88 70 12 8b b4 24 88 00 00 00 40 88 70 13 8b b4 24 90 00 00 00 40 88 70 14 8b b4 24 98 00 00 00 40 88 70 15 8b b4 24 a0 00 00 00 40 88 70 16 8b b4 24 a8 00 00 00 40 88 70 17 8b b4 24 b0 00 00 00 40 88 70 18 8b b4 24 b8 00 00 00 40 88 70 19 8b b4 24 c0 00 00 00 40 88 70 1a 8b b4 24 c8 00 00 00 40 88 70 1b 8b b4 24 d0 00 00 00 40 88 70 1c 8b b4 24 d8 00 00 00 40 88 70 1d 8b b4 24 e0 00 00 00 40 88 70 1e 8b b4 24 e8 00 00 00 40 88 70 1f 48 83 c0 10 ba 10 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 8d b1 fb 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
287       | 7ff7c82aad30h   | 179     | CTC_RET_INTR        | hex://datablocks/blocks?cells#cells_(n128,16u,16u,16u,16u,16u,16u,16u,16u)                                    | Block128<ushort> cells(N128 n, ushort x0, ushort x1, ushort x2, ushort x3, ushort x4, ushort x5, ushort x6, ushort x7)| 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 70 da 15 c8 f7 7f 00 00 ba 08 00 00 00 e8 82 c0 fb 5e 66 89 70 10 66 89 78 12 8b b4 24 80 00 00 00 66 89 70 14 8b b4 24 88 00 00 00 66 89 70 16 8b b4 24 90 00 00 00 66 89 70 18 8b b4 24 98 00 00 00 66 89 70 1a 8b b4 24 a0 00 00 00 66 89 70 1c 8b b4 24 a8 00 00 00 66 89 70 1e 48 83 c0 10 ba 08 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 ba b0 fb 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
288       | 7ff7c82aae00h   | 131     | CTC_RET_INTR        | hex://datablocks/blocks?cells#cells_(n128,32u,32u,32u,32u)                                                    | Block128<uint> cells(N128 n, uint x0, uint x1, uint x2, uint x3)                                              | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 08 ca 15 c8 f7 7f 00 00 ba 04 00 00 00 e8 b2 bf fb 5e 89 70 10 89 78 14 8b b4 24 80 00 00 00 89 70 18 8b b4 24 88 00 00 00 89 70 1c 48 83 c0 10 ba 04 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 1a b0 fb 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
289       | 7ff7c82aaea0h   | 113     | CTC_RET_INTR        | hex://datablocks/blocks?cells#cells_(n128,64u,64u)                                                            | Block128<ulong> cells(N128 n, ulong x0, ulong x1)                                                             | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 49 8b f9 48 b9 60 74 ad c7 f7 7f 00 00 ba 02 00 00 00 e8 12 bf fb 5e 48 89 70 10 48 89 78 18 48 83 c0 10 ba 02 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 8c af fb 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
290       | 7ff7c82ab340h   | 448     | CTC_RET_INTR        | hex://datablocks/blocks?cells#cells_(n256,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u,8u)| Block256<byte> cells(N256 n, byte x0, byte x1, byte x2, byte x3, byte x4, byte x5, byte x6, byte x7, byte x8, byte x9, byte xA, byte xB, byte xC, byte xD, byte xE, byte xF, byte x10, byte x11, byte x12, byte x13, byte x14, byte x15, byte x16, byte x17, byte x18, byte x19, byte x1A, byte x1B, byte x1C, byte x1D, byte x1E, byte x1F)| 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 89 44 24 38 48 8b d9 41 8b f0 41 8b f9 48 b9 10 ea 72 c7 f7 7f 00 00 ba 20 00 00 00 e8 6d ba fb 5e 40 88 70 10 40 88 78 11 8b b4 24 80 00 00 00 40 88 70 12 8b b4 24 88 00 00 00 40 88 70 13 8b b4 24 90 00 00 00 40 88 70 14 8b b4 24 98 00 00 00 40 88 70 15 8b b4 24 a0 00 00 00 40 88 70 16 8b b4 24 a8 00 00 00 40 88 70 17 8b b4 24 b0 00 00 00 40 88 70 18 8b b4 24 b8 00 00 00 40 88 70 19 8b b4 24 c0 00 00 00 40 88 70 1a 8b b4 24 c8 00 00 00 40 88 70 1b 8b b4 24 d0 00 00 00 40 88 70 1c 8b b4 24 d8 00 00 00 40 88 70 1d 8b b4 24 e0 00 00 00 40 88 70 1e 8b b4 24 e8 00 00 00 40 88 70 1f 8b b4 24 f0 00 00 00 40 88 70 20 8b b4 24 f8 00 00 00 40 88 70 21 8b b4 24 00 01 00 00 40 88 70 22 8b b4 24 08 01 00 00 40 88 70 23 8b b4 24 10 01 00 00 40 88 70 24 8b b4 24 18 01 00 00 40 88 70 25 8b b4 24 20 01 00 00 40 88 70 26 8b b4 24 28 01 00 00 40 88 70 27 8b b4 24 30 01 00 00 40 88 70 28 8b b4 24 38 01 00 00 40 88 70 29 8b b4 24 40 01 00 00 40 88 70 2a 8b b4 24 48 01 00 00 40 88 70 2b 8b b4 24 50 01 00 00 40 88 70 2c 8b b4 24 58 01 00 00 40 88 70 2d 8b b4 24 60 01 00 00 40 88 70 2e 8b b4 24 68 01 00 00 40 88 70 2f 48 83 c0 10 ba 20 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 9d a9 fb 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
291       | 7ff7c82ab520h   | 272     | CTC_RET_INTR        | hex://datablocks/blocks?cells#cells_(n256,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u,16u)    | Block256<ushort> cells(N256 n, ushort x0, ushort x1, ushort x2, ushort x3, ushort x4, ushort x5, ushort x6, ushort x7, ushort x8, ushort x9, ushort xA, ushort xB, ushort xC, ushort xD, ushort xE, ushort xF)| 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 89 44 24 38 48 8b d9 41 8b f0 41 8b f9 48 b9 70 da 15 c8 f7 7f 00 00 ba 10 00 00 00 e8 8d b8 fb 5e 66 89 70 10 66 89 78 12 8b b4 24 80 00 00 00 66 89 70 14 8b b4 24 88 00 00 00 66 89 70 16 8b b4 24 90 00 00 00 66 89 70 18 8b b4 24 98 00 00 00 66 89 70 1a 8b b4 24 a0 00 00 00 66 89 70 1c 8b b4 24 a8 00 00 00 66 89 70 1e 8b b4 24 b0 00 00 00 66 89 70 20 8b b4 24 b8 00 00 00 66 89 70 22 8b b4 24 c0 00 00 00 66 89 70 24 8b b4 24 c8 00 00 00 66 89 70 26 8b b4 24 d0 00 00 00 66 89 70 28 8b b4 24 d8 00 00 00 66 89 70 2a 8b b4 24 e0 00 00 00 66 89 70 2c 8b b4 24 e8 00 00 00 66 89 70 2e 48 83 c0 10 ba 10 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 6d a8 fb 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
292       | 7ff7c82ab650h   | 171     | CTC_RET_INTR        | hex://datablocks/blocks?cells#cells_(n256,32u,32u,32u,32u,32u,32u,32u,32u)                                    | Block256<uint> cells(N256 n, uint x0, uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7)          | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 41 8b f0 41 8b f9 48 b9 08 ca 15 c8 f7 7f 00 00 ba 08 00 00 00 e8 62 b7 fb 5e 89 70 10 89 78 14 8b b4 24 80 00 00 00 89 70 18 8b b4 24 88 00 00 00 89 70 1c 8b b4 24 90 00 00 00 89 70 20 8b b4 24 98 00 00 00 89 70 24 8b b4 24 a0 00 00 00 89 70 28 8b b4 24 a8 00 00 00 89 70 2c 48 83 c0 10 ba 08 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 a2 a7 fb 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
293       | 7ff7c82ab720h   | 137     | CTC_RET_INTR        | hex://datablocks/blocks?cells#cells_(n256,64u,64u,64u,64u)                                                    | Block256<ulong> cells(N256 n, ulong x0, ulong x1, ulong x2, ulong x3)                                         | 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 30 48 8b d9 49 8b f0 49 8b f9 48 b9 60 74 ad c7 f7 7f 00 00 ba 04 00 00 00 e8 92 b6 fb 5e 48 89 70 10 48 89 78 18 48 8b b4 24 80 00 00 00 48 89 70 20 48 8b b4 24 88 00 00 00 48 89 70 28 48 83 c0 10 ba 04 00 00 00 48 8d 4c 24 30 c5 f8 57 c0 c5 fa 7f 01 48 8d 4c 24 30 48 89 01 89 51 08 48 8b fb 48 8d 74 24 30 e8 f4 a6 fb 5e 48 a5 48 8b c3 48 83 c4 40 5b 5e 5f c3
