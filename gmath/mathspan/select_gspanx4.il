// Id := 100664178, Name := System.Span`1<T> Z0.mathspan::select<T>(System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.Span`1<T>)
// Span<byte> select<byte>(ReadOnlySpan<byte> a, ReadOnlySpan<byte> b, ReadOnlySpan<byte> c, Span<byte> dst)
// AggressiveInlining
Span<byte> select<byte>(ReadOnlySpan<byte> a, ReadOnlySpan<byte> b, ReadOnlySpan<byte> c, Span<byte> dst)
{
    IL_0000: ldloca.s V_0
    IL_0002: initobj T
    IL_0008: ldloc.0
    IL_0009: call Z0.GXTypes/Select`1<T> Z0.GX::select<T>(T)
    IL_000E: ldarg.0
    IL_000F: ldarg.1
    IL_0010: ldarg.2
    IL_0011: ldarg.3
    IL_0012: call System.Span`1<T> Z0.SpanFunc::apply<Z0.GXTypes/Select`1<T>,T,T,T,T>(Z0.GXTypes/Select`1<T>,System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.Span`1<T>)
    IL_0017: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664178, Name := System.Span`1<T> Z0.mathspan::select<T>(System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.Span`1<T>)
// Span<sbyte> select<sbyte>(ReadOnlySpan<sbyte> a, ReadOnlySpan<sbyte> b, ReadOnlySpan<sbyte> c, Span<sbyte> dst)
// AggressiveInlining
Span<sbyte> select<sbyte>(ReadOnlySpan<sbyte> a, ReadOnlySpan<sbyte> b, ReadOnlySpan<sbyte> c, Span<sbyte> dst)
{
    IL_0000: ldloca.s V_0
    IL_0002: initobj T
    IL_0008: ldloc.0
    IL_0009: call Z0.GXTypes/Select`1<T> Z0.GX::select<T>(T)
    IL_000E: ldarg.0
    IL_000F: ldarg.1
    IL_0010: ldarg.2
    IL_0011: ldarg.3
    IL_0012: call System.Span`1<T> Z0.SpanFunc::apply<Z0.GXTypes/Select`1<T>,T,T,T,T>(Z0.GXTypes/Select`1<T>,System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.Span`1<T>)
    IL_0017: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664178, Name := System.Span`1<T> Z0.mathspan::select<T>(System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.Span`1<T>)
// Span<ushort> select<ushort>(ReadOnlySpan<ushort> a, ReadOnlySpan<ushort> b, ReadOnlySpan<ushort> c, Span<ushort> dst)
// AggressiveInlining
Span<ushort> select<ushort>(ReadOnlySpan<ushort> a, ReadOnlySpan<ushort> b, ReadOnlySpan<ushort> c, Span<ushort> dst)
{
    IL_0000: ldloca.s V_0
    IL_0002: initobj T
    IL_0008: ldloc.0
    IL_0009: call Z0.GXTypes/Select`1<T> Z0.GX::select<T>(T)
    IL_000E: ldarg.0
    IL_000F: ldarg.1
    IL_0010: ldarg.2
    IL_0011: ldarg.3
    IL_0012: call System.Span`1<T> Z0.SpanFunc::apply<Z0.GXTypes/Select`1<T>,T,T,T,T>(Z0.GXTypes/Select`1<T>,System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.Span`1<T>)
    IL_0017: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664178, Name := System.Span`1<T> Z0.mathspan::select<T>(System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.Span`1<T>)
// Span<short> select<short>(ReadOnlySpan<short> a, ReadOnlySpan<short> b, ReadOnlySpan<short> c, Span<short> dst)
// AggressiveInlining
Span<short> select<short>(ReadOnlySpan<short> a, ReadOnlySpan<short> b, ReadOnlySpan<short> c, Span<short> dst)
{
    IL_0000: ldloca.s V_0
    IL_0002: initobj T
    IL_0008: ldloc.0
    IL_0009: call Z0.GXTypes/Select`1<T> Z0.GX::select<T>(T)
    IL_000E: ldarg.0
    IL_000F: ldarg.1
    IL_0010: ldarg.2
    IL_0011: ldarg.3
    IL_0012: call System.Span`1<T> Z0.SpanFunc::apply<Z0.GXTypes/Select`1<T>,T,T,T,T>(Z0.GXTypes/Select`1<T>,System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.Span`1<T>)
    IL_0017: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664178, Name := System.Span`1<T> Z0.mathspan::select<T>(System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.Span`1<T>)
// Span<uint> select<uint>(ReadOnlySpan<uint> a, ReadOnlySpan<uint> b, ReadOnlySpan<uint> c, Span<uint> dst)
// AggressiveInlining
Span<uint> select<uint>(ReadOnlySpan<uint> a, ReadOnlySpan<uint> b, ReadOnlySpan<uint> c, Span<uint> dst)
{
    IL_0000: ldloca.s V_0
    IL_0002: initobj T
    IL_0008: ldloc.0
    IL_0009: call Z0.GXTypes/Select`1<T> Z0.GX::select<T>(T)
    IL_000E: ldarg.0
    IL_000F: ldarg.1
    IL_0010: ldarg.2
    IL_0011: ldarg.3
    IL_0012: call System.Span`1<T> Z0.SpanFunc::apply<Z0.GXTypes/Select`1<T>,T,T,T,T>(Z0.GXTypes/Select`1<T>,System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.Span`1<T>)
    IL_0017: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664178, Name := System.Span`1<T> Z0.mathspan::select<T>(System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.Span`1<T>)
// Span<int> select<int>(ReadOnlySpan<int> a, ReadOnlySpan<int> b, ReadOnlySpan<int> c, Span<int> dst)
// AggressiveInlining
Span<int> select<int>(ReadOnlySpan<int> a, ReadOnlySpan<int> b, ReadOnlySpan<int> c, Span<int> dst)
{
    IL_0000: ldloca.s V_0
    IL_0002: initobj T
    IL_0008: ldloc.0
    IL_0009: call Z0.GXTypes/Select`1<T> Z0.GX::select<T>(T)
    IL_000E: ldarg.0
    IL_000F: ldarg.1
    IL_0010: ldarg.2
    IL_0011: ldarg.3
    IL_0012: call System.Span`1<T> Z0.SpanFunc::apply<Z0.GXTypes/Select`1<T>,T,T,T,T>(Z0.GXTypes/Select`1<T>,System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.Span`1<T>)
    IL_0017: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664178, Name := System.Span`1<T> Z0.mathspan::select<T>(System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.Span`1<T>)
// Span<ulong> select<ulong>(ReadOnlySpan<ulong> a, ReadOnlySpan<ulong> b, ReadOnlySpan<ulong> c, Span<ulong> dst)
// AggressiveInlining
Span<ulong> select<ulong>(ReadOnlySpan<ulong> a, ReadOnlySpan<ulong> b, ReadOnlySpan<ulong> c, Span<ulong> dst)
{
    IL_0000: ldloca.s V_0
    IL_0002: initobj T
    IL_0008: ldloc.0
    IL_0009: call Z0.GXTypes/Select`1<T> Z0.GX::select<T>(T)
    IL_000E: ldarg.0
    IL_000F: ldarg.1
    IL_0010: ldarg.2
    IL_0011: ldarg.3
    IL_0012: call System.Span`1<T> Z0.SpanFunc::apply<Z0.GXTypes/Select`1<T>,T,T,T,T>(Z0.GXTypes/Select`1<T>,System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.Span`1<T>)
    IL_0017: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664178, Name := System.Span`1<T> Z0.mathspan::select<T>(System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.Span`1<T>)
// Span<long> select<long>(ReadOnlySpan<long> a, ReadOnlySpan<long> b, ReadOnlySpan<long> c, Span<long> dst)
// AggressiveInlining
Span<long> select<long>(ReadOnlySpan<long> a, ReadOnlySpan<long> b, ReadOnlySpan<long> c, Span<long> dst)
{
    IL_0000: ldloca.s V_0
    IL_0002: initobj T
    IL_0008: ldloc.0
    IL_0009: call Z0.GXTypes/Select`1<T> Z0.GX::select<T>(T)
    IL_000E: ldarg.0
    IL_000F: ldarg.1
    IL_0010: ldarg.2
    IL_0011: ldarg.3
    IL_0012: call System.Span`1<T> Z0.SpanFunc::apply<Z0.GXTypes/Select`1<T>,T,T,T,T>(Z0.GXTypes/Select`1<T>,System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.ReadOnlySpan`1<T>,System.Span`1<T>)
    IL_0017: ret
}
------------------------------------------------------------------------------------------------------------------------
