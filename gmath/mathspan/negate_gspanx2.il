// Id := 100664155, Name := System.Span`1<T> Z0.mathspan::negate<T>(System.ReadOnlySpan`1<T>,System.Span`1<T>)
// Span<byte> negate<byte>(ReadOnlySpan<byte> src, Span<byte> dst)
// AggressiveInlining
Span<byte> negate<byte>(ReadOnlySpan<byte> src, Span<byte> dst)
{
    IL_0000: ldloca.s V_0
    IL_0002: initobj T
    IL_0008: ldloc.0
    IL_0009: call Z0.GXTypes/Negate`1<T> Z0.GX::negate<T>(T)
    IL_000E: ldarg.0
    IL_000F: ldarg.1
    IL_0010: call System.Span`1<T> Z0.SpanFunc::apply<Z0.GXTypes/Negate`1<T>,T,T>(Z0.GXTypes/Negate`1<T>,System.ReadOnlySpan`1<T>,System.Span`1<T>)
    IL_0015: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664155, Name := System.Span`1<T> Z0.mathspan::negate<T>(System.ReadOnlySpan`1<T>,System.Span`1<T>)
// Span<sbyte> negate<sbyte>(ReadOnlySpan<sbyte> src, Span<sbyte> dst)
// AggressiveInlining
Span<sbyte> negate<sbyte>(ReadOnlySpan<sbyte> src, Span<sbyte> dst)
{
    IL_0000: ldloca.s V_0
    IL_0002: initobj T
    IL_0008: ldloc.0
    IL_0009: call Z0.GXTypes/Negate`1<T> Z0.GX::negate<T>(T)
    IL_000E: ldarg.0
    IL_000F: ldarg.1
    IL_0010: call System.Span`1<T> Z0.SpanFunc::apply<Z0.GXTypes/Negate`1<T>,T,T>(Z0.GXTypes/Negate`1<T>,System.ReadOnlySpan`1<T>,System.Span`1<T>)
    IL_0015: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664155, Name := System.Span`1<T> Z0.mathspan::negate<T>(System.ReadOnlySpan`1<T>,System.Span`1<T>)
// Span<ushort> negate<ushort>(ReadOnlySpan<ushort> src, Span<ushort> dst)
// AggressiveInlining
Span<ushort> negate<ushort>(ReadOnlySpan<ushort> src, Span<ushort> dst)
{
    IL_0000: ldloca.s V_0
    IL_0002: initobj T
    IL_0008: ldloc.0
    IL_0009: call Z0.GXTypes/Negate`1<T> Z0.GX::negate<T>(T)
    IL_000E: ldarg.0
    IL_000F: ldarg.1
    IL_0010: call System.Span`1<T> Z0.SpanFunc::apply<Z0.GXTypes/Negate`1<T>,T,T>(Z0.GXTypes/Negate`1<T>,System.ReadOnlySpan`1<T>,System.Span`1<T>)
    IL_0015: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664155, Name := System.Span`1<T> Z0.mathspan::negate<T>(System.ReadOnlySpan`1<T>,System.Span`1<T>)
// Span<short> negate<short>(ReadOnlySpan<short> src, Span<short> dst)
// AggressiveInlining
Span<short> negate<short>(ReadOnlySpan<short> src, Span<short> dst)
{
    IL_0000: ldloca.s V_0
    IL_0002: initobj T
    IL_0008: ldloc.0
    IL_0009: call Z0.GXTypes/Negate`1<T> Z0.GX::negate<T>(T)
    IL_000E: ldarg.0
    IL_000F: ldarg.1
    IL_0010: call System.Span`1<T> Z0.SpanFunc::apply<Z0.GXTypes/Negate`1<T>,T,T>(Z0.GXTypes/Negate`1<T>,System.ReadOnlySpan`1<T>,System.Span`1<T>)
    IL_0015: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664155, Name := System.Span`1<T> Z0.mathspan::negate<T>(System.ReadOnlySpan`1<T>,System.Span`1<T>)
// Span<uint> negate<uint>(ReadOnlySpan<uint> src, Span<uint> dst)
// AggressiveInlining
Span<uint> negate<uint>(ReadOnlySpan<uint> src, Span<uint> dst)
{
    IL_0000: ldloca.s V_0
    IL_0002: initobj T
    IL_0008: ldloc.0
    IL_0009: call Z0.GXTypes/Negate`1<T> Z0.GX::negate<T>(T)
    IL_000E: ldarg.0
    IL_000F: ldarg.1
    IL_0010: call System.Span`1<T> Z0.SpanFunc::apply<Z0.GXTypes/Negate`1<T>,T,T>(Z0.GXTypes/Negate`1<T>,System.ReadOnlySpan`1<T>,System.Span`1<T>)
    IL_0015: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664155, Name := System.Span`1<T> Z0.mathspan::negate<T>(System.ReadOnlySpan`1<T>,System.Span`1<T>)
// Span<int> negate<int>(ReadOnlySpan<int> src, Span<int> dst)
// AggressiveInlining
Span<int> negate<int>(ReadOnlySpan<int> src, Span<int> dst)
{
    IL_0000: ldloca.s V_0
    IL_0002: initobj T
    IL_0008: ldloc.0
    IL_0009: call Z0.GXTypes/Negate`1<T> Z0.GX::negate<T>(T)
    IL_000E: ldarg.0
    IL_000F: ldarg.1
    IL_0010: call System.Span`1<T> Z0.SpanFunc::apply<Z0.GXTypes/Negate`1<T>,T,T>(Z0.GXTypes/Negate`1<T>,System.ReadOnlySpan`1<T>,System.Span`1<T>)
    IL_0015: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664155, Name := System.Span`1<T> Z0.mathspan::negate<T>(System.ReadOnlySpan`1<T>,System.Span`1<T>)
// Span<ulong> negate<ulong>(ReadOnlySpan<ulong> src, Span<ulong> dst)
// AggressiveInlining
Span<ulong> negate<ulong>(ReadOnlySpan<ulong> src, Span<ulong> dst)
{
    IL_0000: ldloca.s V_0
    IL_0002: initobj T
    IL_0008: ldloc.0
    IL_0009: call Z0.GXTypes/Negate`1<T> Z0.GX::negate<T>(T)
    IL_000E: ldarg.0
    IL_000F: ldarg.1
    IL_0010: call System.Span`1<T> Z0.SpanFunc::apply<Z0.GXTypes/Negate`1<T>,T,T>(Z0.GXTypes/Negate`1<T>,System.ReadOnlySpan`1<T>,System.Span`1<T>)
    IL_0015: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664155, Name := System.Span`1<T> Z0.mathspan::negate<T>(System.ReadOnlySpan`1<T>,System.Span`1<T>)
// Span<long> negate<long>(ReadOnlySpan<long> src, Span<long> dst)
// AggressiveInlining
Span<long> negate<long>(ReadOnlySpan<long> src, Span<long> dst)
{
    IL_0000: ldloca.s V_0
    IL_0002: initobj T
    IL_0008: ldloc.0
    IL_0009: call Z0.GXTypes/Negate`1<T> Z0.GX::negate<T>(T)
    IL_000E: ldarg.0
    IL_000F: ldarg.1
    IL_0010: call System.Span`1<T> Z0.SpanFunc::apply<Z0.GXTypes/Negate`1<T>,T,T>(Z0.GXTypes/Negate`1<T>,System.ReadOnlySpan`1<T>,System.Span`1<T>)
    IL_0015: ret
}
------------------------------------------------------------------------------------------------------------------------
