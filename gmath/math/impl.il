// System.SByte Z0.math::impl(System.SByte,System.SByte)
// sbyte impl(sbyte a, sbyte b)
// AggressiveInlining
sbyte impl(sbyte a, sbyte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: not
    IL_0003: or
    IL_0004: conv.i1
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Byte Z0.math::impl(System.Byte,System.Byte)
// byte impl(byte a, byte b)
// AggressiveInlining
byte impl(byte a, byte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: not
    IL_0003: or
    IL_0004: conv.u1
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int16 Z0.math::impl(System.Int16,System.Int16)
// short impl(short a, short b)
// AggressiveInlining
short impl(short a, short b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: not
    IL_0003: or
    IL_0004: conv.i2
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.UInt16 Z0.math::impl(System.UInt16,System.UInt16)
// ushort impl(ushort a, ushort b)
// AggressiveInlining
ushort impl(ushort a, ushort b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: not
    IL_0003: or
    IL_0004: conv.u2
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.math::impl(System.Int32,System.Int32)
// int impl(int a, int b)
// AggressiveInlining
int impl(int a, int b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: not
    IL_0003: or
    IL_0004: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.UInt32 Z0.math::impl(System.UInt32,System.UInt32)
// uint impl(uint a, uint b)
// AggressiveInlining
uint impl(uint a, uint b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: not
    IL_0003: or
    IL_0004: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int64 Z0.math::impl(System.Int64,System.Int64)
// long impl(long a, long b)
// AggressiveInlining
long impl(long a, long b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: not
    IL_0003: or
    IL_0004: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.UInt64 Z0.math::impl(System.UInt64,System.UInt64)
// ulong impl(ulong a, ulong b)
// AggressiveInlining
ulong impl(ulong a, ulong b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: not
    IL_0003: or
    IL_0004: ret
}
------------------------------------------------------------------------------------------------------------------------
