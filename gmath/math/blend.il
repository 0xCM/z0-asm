// Id := 100663586, Name := System.SByte Z0.math::blend(System.SByte,System.SByte,System.SByte)
// sbyte blend(sbyte a, sbyte b, sbyte mask)
// AggressiveInlining
sbyte blend(sbyte a, sbyte b, sbyte mask)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.SByte Z0.math::xor(System.SByte,System.SByte)
    IL_0008: ldarg.2
    IL_0009: call System.SByte Z0.math::and(System.SByte,System.SByte)
    IL_000E: call System.SByte Z0.math::xor(System.SByte,System.SByte)
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663587, Name := System.Byte Z0.math::blend(System.Byte,System.Byte,System.Byte)
// byte blend(byte a, byte b, byte mask)
// AggressiveInlining
byte blend(byte a, byte b, byte mask)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Byte Z0.math::xor(System.Byte,System.Byte)
    IL_0008: ldarg.2
    IL_0009: call System.Byte Z0.math::and(System.Byte,System.Byte)
    IL_000E: call System.Byte Z0.math::xor(System.Byte,System.Byte)
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663588, Name := System.Int16 Z0.math::blend(System.Int16,System.Int16,System.Int16)
// Int16 blend(Int16 a, Int16 b, Int16 mask)
// AggressiveInlining
Int16 blend(Int16 a, Int16 b, Int16 mask)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int16 Z0.math::xor(System.Int16,System.Int16)
    IL_0008: ldarg.2
    IL_0009: call System.Int16 Z0.math::and(System.Int16,System.Int16)
    IL_000E: call System.Int16 Z0.math::xor(System.Int16,System.Int16)
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663589, Name := System.UInt16 Z0.math::blend(System.UInt16,System.UInt16,System.UInt16)
// ushort blend(ushort a, ushort b, ushort mask)
// AggressiveInlining
ushort blend(ushort a, ushort b, ushort mask)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.UInt16 Z0.math::xor(System.UInt16,System.UInt16)
    IL_0008: ldarg.2
    IL_0009: call System.UInt16 Z0.math::and(System.UInt16,System.UInt16)
    IL_000E: call System.UInt16 Z0.math::xor(System.UInt16,System.UInt16)
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663590, Name := System.Int32 Z0.math::blend(System.Int32,System.Int32,System.Int32)
// int blend(int a, int b, int mask)
// AggressiveInlining
int blend(int a, int b, int mask)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.math::xor(System.Int32,System.Int32)
    IL_0008: ldarg.2
    IL_0009: call System.Int32 Z0.math::and(System.Int32,System.Int32)
    IL_000E: call System.Int32 Z0.math::xor(System.Int32,System.Int32)
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663591, Name := System.UInt32 Z0.math::blend(System.UInt32,System.UInt32,System.UInt32)
// uint blend(uint a, uint b, uint mask)
// AggressiveInlining
uint blend(uint a, uint b, uint mask)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.UInt32 Z0.math::xor(System.UInt32,System.UInt32)
    IL_0008: ldarg.2
    IL_0009: call System.UInt32 Z0.math::and(System.UInt32,System.UInt32)
    IL_000E: call System.UInt32 Z0.math::xor(System.UInt32,System.UInt32)
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663592, Name := System.Int64 Z0.math::blend(System.Int64,System.Int64,System.Int64)
// long blend(long a, long b, long mask)
// AggressiveInlining
long blend(long a, long b, long mask)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int64 Z0.math::xor(System.Int64,System.Int64)
    IL_0008: ldarg.2
    IL_0009: call System.Int64 Z0.math::and(System.Int64,System.Int64)
    IL_000E: call System.Int64 Z0.math::xor(System.Int64,System.Int64)
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663593, Name := System.UInt64 Z0.math::blend(System.UInt64,System.UInt64,System.UInt64)
// ulong blend(ulong a, ulong b, ulong mask)
// AggressiveInlining
ulong blend(ulong a, ulong b, ulong mask)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.UInt64 Z0.math::xor(System.UInt64,System.UInt64)
    IL_0008: ldarg.2
    IL_0009: call System.UInt64 Z0.math::and(System.UInt64,System.UInt64)
    IL_000E: call System.UInt64 Z0.math::xor(System.UInt64,System.UInt64)
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
