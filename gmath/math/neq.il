// Z0.bit Z0.math::neq(System.Byte,System.Byte)
// bit neq(byte a, byte b)
// AggressiveInlining
bit neq(byte a, byte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ceq
    IL_0004: ldc.i4.0
    IL_0005: ceq
    IL_0007: call Z0.bit Z0.bit::op_Implicit(System.Boolean)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.bit Z0.math::neq(System.Int16,System.Int16)
// bit neq(short a, short b)
// AggressiveInlining
bit neq(short a, short b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ceq
    IL_0004: ldc.i4.0
    IL_0005: ceq
    IL_0007: call Z0.bit Z0.bit::op_Implicit(System.Boolean)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.bit Z0.math::neq(System.UInt16,System.UInt16)
// bit neq(ushort a, ushort b)
// AggressiveInlining
bit neq(ushort a, ushort b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ceq
    IL_0004: ldc.i4.0
    IL_0005: ceq
    IL_0007: call Z0.bit Z0.bit::op_Implicit(System.Boolean)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.bit Z0.math::neq(System.Int32,System.Int32)
// bit neq(int a, int b)
// AggressiveInlining
bit neq(int a, int b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ceq
    IL_0004: ldc.i4.0
    IL_0005: ceq
    IL_0007: call Z0.bit Z0.bit::op_Implicit(System.Boolean)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.bit Z0.math::neq(System.UInt32,System.UInt32)
// bit neq(uint a, uint b)
// AggressiveInlining
bit neq(uint a, uint b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ceq
    IL_0004: ldc.i4.0
    IL_0005: ceq
    IL_0007: call Z0.bit Z0.bit::op_Implicit(System.Boolean)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.bit Z0.math::neq(System.Int64,System.Int64)
// bit neq(long a, long b)
// AggressiveInlining
bit neq(long a, long b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ceq
    IL_0004: ldc.i4.0
    IL_0005: ceq
    IL_0007: call Z0.bit Z0.bit::op_Implicit(System.Boolean)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.bit Z0.math::neq(System.UInt64,System.UInt64)
// bit neq(ulong a, ulong b)
// AggressiveInlining
bit neq(ulong a, ulong b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ceq
    IL_0004: ldc.i4.0
    IL_0005: ceq
    IL_0007: call Z0.bit Z0.bit::op_Implicit(System.Boolean)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.bit Z0.math::neq(System.SByte,System.SByte)
// bit neq(sbyte a, sbyte b)
// AggressiveInlining
bit neq(sbyte a, sbyte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ceq
    IL_0004: ldc.i4.0
    IL_0005: ceq
    IL_0007: call Z0.bit Z0.bit::op_Implicit(System.Boolean)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
