// Id := 100663562, Name := System.SByte Z0.math::or(System.SByte,System.SByte)
// sbyte or(sbyte a, sbyte b)
// AggressiveInlining
sbyte or(sbyte a, sbyte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: or
    IL_0003: conv.i1
    IL_0004: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663563, Name := System.Byte Z0.math::or(System.Byte,System.Byte)
// byte or(byte a, byte b)
// AggressiveInlining
byte or(byte a, byte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: or
    IL_0003: conv.u1
    IL_0004: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663564, Name := System.Int16 Z0.math::or(System.Int16,System.Int16)
// Int16 or(Int16 a, Int16 b)
// AggressiveInlining
Int16 or(Int16 a, Int16 b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: or
    IL_0003: conv.i2
    IL_0004: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663565, Name := System.UInt16 Z0.math::or(System.UInt16,System.UInt16)
// ushort or(ushort a, ushort b)
// AggressiveInlining
ushort or(ushort a, ushort b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: or
    IL_0003: conv.u2
    IL_0004: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663566, Name := System.Int32 Z0.math::or(System.Int32,System.Int32)
// int or(int a, int b)
// AggressiveInlining
int or(int a, int b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: or
    IL_0003: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663567, Name := System.UInt32 Z0.math::or(System.UInt32,System.UInt32)
// uint or(uint a, uint b)
// AggressiveInlining
uint or(uint a, uint b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: or
    IL_0003: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663568, Name := System.Int64 Z0.math::or(System.Int64,System.Int64)
// long or(long a, long b)
// AggressiveInlining
long or(long a, long b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: or
    IL_0003: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663569, Name := System.UInt64 Z0.math::or(System.UInt64,System.UInt64)
// ulong or(ulong a, ulong b)
// AggressiveInlining
ulong or(ulong a, ulong b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: or
    IL_0003: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663570, Name := System.SByte Z0.math::or(System.SByte,System.SByte,System.SByte)
// sbyte or(sbyte a, sbyte b, sbyte c)
// AggressiveInlining
sbyte or(sbyte a, sbyte b, sbyte c)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: or
    IL_0003: ldarg.2
    IL_0004: or
    IL_0005: conv.i1
    IL_0006: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663571, Name := System.Byte Z0.math::or(System.Byte,System.Byte,System.Byte)
// byte or(byte a, byte b, byte c)
// AggressiveInlining
byte or(byte a, byte b, byte c)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: or
    IL_0003: ldarg.2
    IL_0004: or
    IL_0005: conv.u1
    IL_0006: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663572, Name := System.Int16 Z0.math::or(System.Int16,System.Int16,System.Int16)
// Int16 or(Int16 a, Int16 b, Int16 c)
// AggressiveInlining
Int16 or(Int16 a, Int16 b, Int16 c)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: or
    IL_0003: ldarg.2
    IL_0004: or
    IL_0005: conv.i2
    IL_0006: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663573, Name := System.UInt16 Z0.math::or(System.UInt16,System.UInt16,System.UInt16)
// ushort or(ushort a, ushort b, ushort c)
// AggressiveInlining
ushort or(ushort a, ushort b, ushort c)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: or
    IL_0003: ldarg.2
    IL_0004: or
    IL_0005: conv.u2
    IL_0006: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663574, Name := System.Int32 Z0.math::or(System.Int32,System.Int32,System.Int32)
// int or(int a, int b, int c)
// AggressiveInlining
int or(int a, int b, int c)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: or
    IL_0003: ldarg.2
    IL_0004: or
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663575, Name := System.UInt32 Z0.math::or(System.UInt32,System.UInt32,System.UInt32)
// uint or(uint a, uint b, uint c)
// AggressiveInlining
uint or(uint a, uint b, uint c)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: or
    IL_0003: ldarg.2
    IL_0004: or
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663576, Name := System.Int64 Z0.math::or(System.Int64,System.Int64,System.Int64)
// long or(long a, long b, long c)
// AggressiveInlining
long or(long a, long b, long c)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: or
    IL_0003: ldarg.2
    IL_0004: or
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663577, Name := System.UInt64 Z0.math::or(System.UInt64,System.UInt64,System.UInt64)
// ulong or(ulong a, ulong b, ulong c)
// AggressiveInlining
ulong or(ulong a, ulong b, ulong c)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: or
    IL_0003: ldarg.2
    IL_0004: or
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
