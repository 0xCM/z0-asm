// Id := 100664117, Name := Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::nor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
// BitMatrix<byte> nor<byte>(in BitMatrix<byte> A, in BitMatrix<byte> B)
// AggressiveInlining
BitMatrix<byte> nor<byte>(in BitMatrix<byte> A, in BitMatrix<byte> B)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.BitMatrix`1<T> Z0.BitMatrix::nor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664117, Name := Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::nor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
// BitMatrix<sbyte> nor<sbyte>(in BitMatrix<sbyte> A, in BitMatrix<sbyte> B)
// AggressiveInlining
BitMatrix<sbyte> nor<sbyte>(in BitMatrix<sbyte> A, in BitMatrix<sbyte> B)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.BitMatrix`1<T> Z0.BitMatrix::nor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664117, Name := Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::nor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
// BitMatrix<ushort> nor<ushort>(in BitMatrix<ushort> A, in BitMatrix<ushort> B)
// AggressiveInlining
BitMatrix<ushort> nor<ushort>(in BitMatrix<ushort> A, in BitMatrix<ushort> B)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.BitMatrix`1<T> Z0.BitMatrix::nor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664117, Name := Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::nor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
// BitMatrix<Int16> nor<Int16>(in BitMatrix<Int16> A, in BitMatrix<Int16> B)
// AggressiveInlining
BitMatrix<Int16> nor<Int16>(in BitMatrix<Int16> A, in BitMatrix<Int16> B)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.BitMatrix`1<T> Z0.BitMatrix::nor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664117, Name := Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::nor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
// BitMatrix<uint> nor<uint>(in BitMatrix<uint> A, in BitMatrix<uint> B)
// AggressiveInlining
BitMatrix<uint> nor<uint>(in BitMatrix<uint> A, in BitMatrix<uint> B)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.BitMatrix`1<T> Z0.BitMatrix::nor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664117, Name := Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::nor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
// BitMatrix<int> nor<int>(in BitMatrix<int> A, in BitMatrix<int> B)
// AggressiveInlining
BitMatrix<int> nor<int>(in BitMatrix<int> A, in BitMatrix<int> B)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.BitMatrix`1<T> Z0.BitMatrix::nor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664117, Name := Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::nor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
// BitMatrix<ulong> nor<ulong>(in BitMatrix<ulong> A, in BitMatrix<ulong> B)
// AggressiveInlining
BitMatrix<ulong> nor<ulong>(in BitMatrix<ulong> A, in BitMatrix<ulong> B)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.BitMatrix`1<T> Z0.BitMatrix::nor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664117, Name := Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::nor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
// BitMatrix<long> nor<long>(in BitMatrix<long> A, in BitMatrix<long> B)
// AggressiveInlining
BitMatrix<long> nor<long>(in BitMatrix<long> A, in BitMatrix<long> B)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.BitMatrix`1<T> Z0.BitMatrix::nor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
