// Id := 100664121, Name := Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::xnor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
// BitMatrix<byte> xnor<byte>(in BitMatrix<byte> A, in BitMatrix<byte> B)
// AggressiveInlining
BitMatrix<byte> xnor<byte>(in BitMatrix<byte> A, in BitMatrix<byte> B)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.BitMatrix`1<T> Z0.BitMatrix::xnor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664121, Name := Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::xnor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
// BitMatrix<sbyte> xnor<sbyte>(in BitMatrix<sbyte> A, in BitMatrix<sbyte> B)
// AggressiveInlining
BitMatrix<sbyte> xnor<sbyte>(in BitMatrix<sbyte> A, in BitMatrix<sbyte> B)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.BitMatrix`1<T> Z0.BitMatrix::xnor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664121, Name := Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::xnor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
// BitMatrix<ushort> xnor<ushort>(in BitMatrix<ushort> A, in BitMatrix<ushort> B)
// AggressiveInlining
BitMatrix<ushort> xnor<ushort>(in BitMatrix<ushort> A, in BitMatrix<ushort> B)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.BitMatrix`1<T> Z0.BitMatrix::xnor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664121, Name := Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::xnor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
// BitMatrix<Int16> xnor<Int16>(in BitMatrix<Int16> A, in BitMatrix<Int16> B)
// AggressiveInlining
BitMatrix<Int16> xnor<Int16>(in BitMatrix<Int16> A, in BitMatrix<Int16> B)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.BitMatrix`1<T> Z0.BitMatrix::xnor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664121, Name := Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::xnor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
// BitMatrix<uint> xnor<uint>(in BitMatrix<uint> A, in BitMatrix<uint> B)
// AggressiveInlining
BitMatrix<uint> xnor<uint>(in BitMatrix<uint> A, in BitMatrix<uint> B)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.BitMatrix`1<T> Z0.BitMatrix::xnor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664121, Name := Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::xnor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
// BitMatrix<int> xnor<int>(in BitMatrix<int> A, in BitMatrix<int> B)
// AggressiveInlining
BitMatrix<int> xnor<int>(in BitMatrix<int> A, in BitMatrix<int> B)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.BitMatrix`1<T> Z0.BitMatrix::xnor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664121, Name := Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::xnor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
// BitMatrix<ulong> xnor<ulong>(in BitMatrix<ulong> A, in BitMatrix<ulong> B)
// AggressiveInlining
BitMatrix<ulong> xnor<ulong>(in BitMatrix<ulong> A, in BitMatrix<ulong> B)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.BitMatrix`1<T> Z0.BitMatrix::xnor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664121, Name := Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::xnor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
// BitMatrix<long> xnor<long>(in BitMatrix<long> A, in BitMatrix<long> B)
// AggressiveInlining
BitMatrix<long> xnor<long>(in BitMatrix<long> A, in BitMatrix<long> B)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.BitMatrix`1<T> Z0.BitMatrix::xnor<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
