// Id := 100664104, Name := Z0.BitMatrix`1<T>& Z0.Logix.BitMatrixOps::not<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
// ref BitMatrix<byte> not<byte>(in BitMatrix<byte> A, ref BitMatrix<byte> Z)
// AggressiveInlining
ref BitMatrix<byte> not<byte>(in BitMatrix<byte> A, ref BitMatrix<byte> Z)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.BitMatrix`1<T>& Z0.BitMatrix::not<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664104, Name := Z0.BitMatrix`1<T>& Z0.Logix.BitMatrixOps::not<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
// ref BitMatrix<sbyte> not<sbyte>(in BitMatrix<sbyte> A, ref BitMatrix<sbyte> Z)
// AggressiveInlining
ref BitMatrix<sbyte> not<sbyte>(in BitMatrix<sbyte> A, ref BitMatrix<sbyte> Z)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.BitMatrix`1<T>& Z0.BitMatrix::not<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664104, Name := Z0.BitMatrix`1<T>& Z0.Logix.BitMatrixOps::not<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
// ref BitMatrix<ushort> not<ushort>(in BitMatrix<ushort> A, ref BitMatrix<ushort> Z)
// AggressiveInlining
ref BitMatrix<ushort> not<ushort>(in BitMatrix<ushort> A, ref BitMatrix<ushort> Z)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.BitMatrix`1<T>& Z0.BitMatrix::not<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664104, Name := Z0.BitMatrix`1<T>& Z0.Logix.BitMatrixOps::not<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
// ref BitMatrix<short> not<short>(in BitMatrix<short> A, ref BitMatrix<short> Z)
// AggressiveInlining
ref BitMatrix<short> not<short>(in BitMatrix<short> A, ref BitMatrix<short> Z)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.BitMatrix`1<T>& Z0.BitMatrix::not<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664104, Name := Z0.BitMatrix`1<T>& Z0.Logix.BitMatrixOps::not<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
// ref BitMatrix<uint> not<uint>(in BitMatrix<uint> A, ref BitMatrix<uint> Z)
// AggressiveInlining
ref BitMatrix<uint> not<uint>(in BitMatrix<uint> A, ref BitMatrix<uint> Z)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.BitMatrix`1<T>& Z0.BitMatrix::not<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664104, Name := Z0.BitMatrix`1<T>& Z0.Logix.BitMatrixOps::not<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
// ref BitMatrix<int> not<int>(in BitMatrix<int> A, ref BitMatrix<int> Z)
// AggressiveInlining
ref BitMatrix<int> not<int>(in BitMatrix<int> A, ref BitMatrix<int> Z)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.BitMatrix`1<T>& Z0.BitMatrix::not<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664104, Name := Z0.BitMatrix`1<T>& Z0.Logix.BitMatrixOps::not<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
// ref BitMatrix<ulong> not<ulong>(in BitMatrix<ulong> A, ref BitMatrix<ulong> Z)
// AggressiveInlining
ref BitMatrix<ulong> not<ulong>(in BitMatrix<ulong> A, ref BitMatrix<ulong> Z)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.BitMatrix`1<T>& Z0.BitMatrix::not<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664104, Name := Z0.BitMatrix`1<T>& Z0.Logix.BitMatrixOps::not<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
// ref BitMatrix<long> not<long>(in BitMatrix<long> A, ref BitMatrix<long> Z)
// AggressiveInlining
ref BitMatrix<long> not<long>(in BitMatrix<long> A, ref BitMatrix<long> Z)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.BitMatrix`1<T>& Z0.BitMatrix::not<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
