// Id := 100664077, Name := System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOpApi::eval<T>(Z0.UnaryBitLogicKind,System.Runtime.Intrinsics.Vector128`1<T>)
// Vector128<byte> eval<byte>(UnaryBitLogicKind:byte kind, Vector128<byte> a)
// IL
Vector128<byte> eval<byte>(UnaryBitLogicKind:byte kind, Vector128<byte> a)
{
    IL_0000: ldarg.0
    IL_0001: switch(IL_0026,IL_0018,IL_001F,IL_002D)
    IL_0016: br.s IL_0034
    IL_0018: ldarg.1
    IL_0019: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::not<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_001E: ret
    IL_001F: ldarg.1
    IL_0020: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::identity<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_0025: ret
    IL_0026: ldarg.1
    IL_0027: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::false<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_002C: ret
    IL_002D: ldarg.1
    IL_002E: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::true<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_0033: ret
    IL_0034: ldarg.0
    IL_0035: call System.String Z0.Logix.OpHelpers::sig<T>(Z0.UnaryBitLogicKind)
    IL_003A: newobj System.Void System.NotSupportedException::.ctor(System.String)
    IL_003F: throw
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664077, Name := System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOpApi::eval<T>(Z0.UnaryBitLogicKind,System.Runtime.Intrinsics.Vector128`1<T>)
// Vector128<sbyte> eval<sbyte>(UnaryBitLogicKind:byte kind, Vector128<sbyte> a)
// IL
Vector128<sbyte> eval<sbyte>(UnaryBitLogicKind:byte kind, Vector128<sbyte> a)
{
    IL_0000: ldarg.0
    IL_0001: switch(IL_0026,IL_0018,IL_001F,IL_002D)
    IL_0016: br.s IL_0034
    IL_0018: ldarg.1
    IL_0019: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::not<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_001E: ret
    IL_001F: ldarg.1
    IL_0020: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::identity<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_0025: ret
    IL_0026: ldarg.1
    IL_0027: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::false<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_002C: ret
    IL_002D: ldarg.1
    IL_002E: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::true<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_0033: ret
    IL_0034: ldarg.0
    IL_0035: call System.String Z0.Logix.OpHelpers::sig<T>(Z0.UnaryBitLogicKind)
    IL_003A: newobj System.Void System.NotSupportedException::.ctor(System.String)
    IL_003F: throw
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664077, Name := System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOpApi::eval<T>(Z0.UnaryBitLogicKind,System.Runtime.Intrinsics.Vector128`1<T>)
// Vector128<ushort> eval<ushort>(UnaryBitLogicKind:byte kind, Vector128<ushort> a)
// IL
Vector128<ushort> eval<ushort>(UnaryBitLogicKind:byte kind, Vector128<ushort> a)
{
    IL_0000: ldarg.0
    IL_0001: switch(IL_0026,IL_0018,IL_001F,IL_002D)
    IL_0016: br.s IL_0034
    IL_0018: ldarg.1
    IL_0019: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::not<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_001E: ret
    IL_001F: ldarg.1
    IL_0020: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::identity<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_0025: ret
    IL_0026: ldarg.1
    IL_0027: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::false<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_002C: ret
    IL_002D: ldarg.1
    IL_002E: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::true<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_0033: ret
    IL_0034: ldarg.0
    IL_0035: call System.String Z0.Logix.OpHelpers::sig<T>(Z0.UnaryBitLogicKind)
    IL_003A: newobj System.Void System.NotSupportedException::.ctor(System.String)
    IL_003F: throw
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664077, Name := System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOpApi::eval<T>(Z0.UnaryBitLogicKind,System.Runtime.Intrinsics.Vector128`1<T>)
// Vector128<Int16> eval<Int16>(UnaryBitLogicKind:byte kind, Vector128<Int16> a)
// IL
Vector128<Int16> eval<Int16>(UnaryBitLogicKind:byte kind, Vector128<Int16> a)
{
    IL_0000: ldarg.0
    IL_0001: switch(IL_0026,IL_0018,IL_001F,IL_002D)
    IL_0016: br.s IL_0034
    IL_0018: ldarg.1
    IL_0019: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::not<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_001E: ret
    IL_001F: ldarg.1
    IL_0020: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::identity<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_0025: ret
    IL_0026: ldarg.1
    IL_0027: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::false<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_002C: ret
    IL_002D: ldarg.1
    IL_002E: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::true<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_0033: ret
    IL_0034: ldarg.0
    IL_0035: call System.String Z0.Logix.OpHelpers::sig<T>(Z0.UnaryBitLogicKind)
    IL_003A: newobj System.Void System.NotSupportedException::.ctor(System.String)
    IL_003F: throw
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664077, Name := System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOpApi::eval<T>(Z0.UnaryBitLogicKind,System.Runtime.Intrinsics.Vector128`1<T>)
// Vector128<uint> eval<uint>(UnaryBitLogicKind:byte kind, Vector128<uint> a)
// IL
Vector128<uint> eval<uint>(UnaryBitLogicKind:byte kind, Vector128<uint> a)
{
    IL_0000: ldarg.0
    IL_0001: switch(IL_0026,IL_0018,IL_001F,IL_002D)
    IL_0016: br.s IL_0034
    IL_0018: ldarg.1
    IL_0019: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::not<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_001E: ret
    IL_001F: ldarg.1
    IL_0020: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::identity<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_0025: ret
    IL_0026: ldarg.1
    IL_0027: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::false<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_002C: ret
    IL_002D: ldarg.1
    IL_002E: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::true<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_0033: ret
    IL_0034: ldarg.0
    IL_0035: call System.String Z0.Logix.OpHelpers::sig<T>(Z0.UnaryBitLogicKind)
    IL_003A: newobj System.Void System.NotSupportedException::.ctor(System.String)
    IL_003F: throw
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664077, Name := System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOpApi::eval<T>(Z0.UnaryBitLogicKind,System.Runtime.Intrinsics.Vector128`1<T>)
// Vector128<int> eval<int>(UnaryBitLogicKind:byte kind, Vector128<int> a)
// IL
Vector128<int> eval<int>(UnaryBitLogicKind:byte kind, Vector128<int> a)
{
    IL_0000: ldarg.0
    IL_0001: switch(IL_0026,IL_0018,IL_001F,IL_002D)
    IL_0016: br.s IL_0034
    IL_0018: ldarg.1
    IL_0019: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::not<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_001E: ret
    IL_001F: ldarg.1
    IL_0020: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::identity<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_0025: ret
    IL_0026: ldarg.1
    IL_0027: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::false<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_002C: ret
    IL_002D: ldarg.1
    IL_002E: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::true<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_0033: ret
    IL_0034: ldarg.0
    IL_0035: call System.String Z0.Logix.OpHelpers::sig<T>(Z0.UnaryBitLogicKind)
    IL_003A: newobj System.Void System.NotSupportedException::.ctor(System.String)
    IL_003F: throw
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664077, Name := System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOpApi::eval<T>(Z0.UnaryBitLogicKind,System.Runtime.Intrinsics.Vector128`1<T>)
// Vector128<ulong> eval<ulong>(UnaryBitLogicKind:byte kind, Vector128<ulong> a)
// IL
Vector128<ulong> eval<ulong>(UnaryBitLogicKind:byte kind, Vector128<ulong> a)
{
    IL_0000: ldarg.0
    IL_0001: switch(IL_0026,IL_0018,IL_001F,IL_002D)
    IL_0016: br.s IL_0034
    IL_0018: ldarg.1
    IL_0019: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::not<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_001E: ret
    IL_001F: ldarg.1
    IL_0020: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::identity<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_0025: ret
    IL_0026: ldarg.1
    IL_0027: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::false<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_002C: ret
    IL_002D: ldarg.1
    IL_002E: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::true<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_0033: ret
    IL_0034: ldarg.0
    IL_0035: call System.String Z0.Logix.OpHelpers::sig<T>(Z0.UnaryBitLogicKind)
    IL_003A: newobj System.Void System.NotSupportedException::.ctor(System.String)
    IL_003F: throw
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664077, Name := System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOpApi::eval<T>(Z0.UnaryBitLogicKind,System.Runtime.Intrinsics.Vector128`1<T>)
// Vector128<long> eval<long>(UnaryBitLogicKind:byte kind, Vector128<long> a)
// IL
Vector128<long> eval<long>(UnaryBitLogicKind:byte kind, Vector128<long> a)
{
    IL_0000: ldarg.0
    IL_0001: switch(IL_0026,IL_0018,IL_001F,IL_002D)
    IL_0016: br.s IL_0034
    IL_0018: ldarg.1
    IL_0019: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::not<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_001E: ret
    IL_001F: ldarg.1
    IL_0020: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::identity<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_0025: ret
    IL_0026: ldarg.1
    IL_0027: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::false<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_002C: ret
    IL_002D: ldarg.1
    IL_002E: call System.Runtime.Intrinsics.Vector128`1<T> Z0.Logix.VectorizedOps::true<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_0033: ret
    IL_0034: ldarg.0
    IL_0035: call System.String Z0.Logix.OpHelpers::sig<T>(Z0.UnaryBitLogicKind)
    IL_003A: newobj System.Void System.NotSupportedException::.ctor(System.String)
    IL_003F: throw
}
------------------------------------------------------------------------------------------------------------------------
