// T Z0.Logix.ScalarOps::true<T>()
// byte true<byte>()
// AggressiveInlining
byte true<byte>()
{
    IL_0000: call T Z0.gmath::true<T>()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>()
// sbyte true<sbyte>()
// AggressiveInlining
sbyte true<sbyte>()
{
    IL_0000: call T Z0.gmath::true<T>()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>()
// ushort true<ushort>()
// AggressiveInlining
ushort true<ushort>()
{
    IL_0000: call T Z0.gmath::true<T>()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>()
// short true<short>()
// AggressiveInlining
short true<short>()
{
    IL_0000: call T Z0.gmath::true<T>()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>()
// uint true<uint>()
// AggressiveInlining
uint true<uint>()
{
    IL_0000: call T Z0.gmath::true<T>()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>()
// int true<int>()
// AggressiveInlining
int true<int>()
{
    IL_0000: call T Z0.gmath::true<T>()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>()
// ulong true<ulong>()
// AggressiveInlining
ulong true<ulong>()
{
    IL_0000: call T Z0.gmath::true<T>()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>()
// long true<long>()
// AggressiveInlining
long true<long>()
{
    IL_0000: call T Z0.gmath::true<T>()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>(T)
// byte true<byte>(byte a)
// AggressiveInlining
byte true<byte>(byte a)
{
    IL_0000: ldarg.0
    IL_0001: call T Z0.gmath::true<T>(T)
    IL_0006: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>(T)
// sbyte true<sbyte>(sbyte a)
// AggressiveInlining
sbyte true<sbyte>(sbyte a)
{
    IL_0000: ldarg.0
    IL_0001: call T Z0.gmath::true<T>(T)
    IL_0006: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>(T)
// ushort true<ushort>(ushort a)
// AggressiveInlining
ushort true<ushort>(ushort a)
{
    IL_0000: ldarg.0
    IL_0001: call T Z0.gmath::true<T>(T)
    IL_0006: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>(T)
// short true<short>(short a)
// AggressiveInlining
short true<short>(short a)
{
    IL_0000: ldarg.0
    IL_0001: call T Z0.gmath::true<T>(T)
    IL_0006: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>(T)
// uint true<uint>(uint a)
// AggressiveInlining
uint true<uint>(uint a)
{
    IL_0000: ldarg.0
    IL_0001: call T Z0.gmath::true<T>(T)
    IL_0006: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>(T)
// int true<int>(int a)
// AggressiveInlining
int true<int>(int a)
{
    IL_0000: ldarg.0
    IL_0001: call T Z0.gmath::true<T>(T)
    IL_0006: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>(T)
// ulong true<ulong>(ulong a)
// AggressiveInlining
ulong true<ulong>(ulong a)
{
    IL_0000: ldarg.0
    IL_0001: call T Z0.gmath::true<T>(T)
    IL_0006: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>(T)
// long true<long>(long a)
// AggressiveInlining
long true<long>(long a)
{
    IL_0000: ldarg.0
    IL_0001: call T Z0.gmath::true<T>(T)
    IL_0006: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>(T,T)
// byte true<byte>(byte a, byte b)
// AggressiveInlining
byte true<byte>(byte a, byte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T Z0.gmath::true<T>(T,T)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>(T,T)
// sbyte true<sbyte>(sbyte a, sbyte b)
// AggressiveInlining
sbyte true<sbyte>(sbyte a, sbyte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T Z0.gmath::true<T>(T,T)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>(T,T)
// ushort true<ushort>(ushort a, ushort b)
// AggressiveInlining
ushort true<ushort>(ushort a, ushort b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T Z0.gmath::true<T>(T,T)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>(T,T)
// short true<short>(short a, short b)
// AggressiveInlining
short true<short>(short a, short b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T Z0.gmath::true<T>(T,T)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>(T,T)
// uint true<uint>(uint a, uint b)
// AggressiveInlining
uint true<uint>(uint a, uint b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T Z0.gmath::true<T>(T,T)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>(T,T)
// int true<int>(int a, int b)
// AggressiveInlining
int true<int>(int a, int b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T Z0.gmath::true<T>(T,T)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>(T,T)
// ulong true<ulong>(ulong a, ulong b)
// AggressiveInlining
ulong true<ulong>(ulong a, ulong b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T Z0.gmath::true<T>(T,T)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>(T,T)
// long true<long>(long a, long b)
// AggressiveInlining
long true<long>(long a, long b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T Z0.gmath::true<T>(T,T)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>(T,T,T)
// byte true<byte>(byte a, byte b, byte c)
// AggressiveInlining
byte true<byte>(byte a, byte b, byte c)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call T Z0.gmath::true<T>(T,T,T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>(T,T,T)
// sbyte true<sbyte>(sbyte a, sbyte b, sbyte c)
// AggressiveInlining
sbyte true<sbyte>(sbyte a, sbyte b, sbyte c)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call T Z0.gmath::true<T>(T,T,T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>(T,T,T)
// ushort true<ushort>(ushort a, ushort b, ushort c)
// AggressiveInlining
ushort true<ushort>(ushort a, ushort b, ushort c)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call T Z0.gmath::true<T>(T,T,T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>(T,T,T)
// short true<short>(short a, short b, short c)
// AggressiveInlining
short true<short>(short a, short b, short c)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call T Z0.gmath::true<T>(T,T,T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>(T,T,T)
// uint true<uint>(uint a, uint b, uint c)
// AggressiveInlining
uint true<uint>(uint a, uint b, uint c)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call T Z0.gmath::true<T>(T,T,T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>(T,T,T)
// int true<int>(int a, int b, int c)
// AggressiveInlining
int true<int>(int a, int b, int c)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call T Z0.gmath::true<T>(T,T,T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>(T,T,T)
// ulong true<ulong>(ulong a, ulong b, ulong c)
// AggressiveInlining
ulong true<ulong>(ulong a, ulong b, ulong c)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call T Z0.gmath::true<T>(T,T,T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// T Z0.Logix.ScalarOps::true<T>(T,T,T)
// long true<long>(long a, long b, long c)
// AggressiveInlining
long true<long>(long a, long b, long c)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call T Z0.gmath::true<T>(T,T,T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
