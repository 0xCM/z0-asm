// Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::not<T>(Z0.BitMatrix`1<T>&)
// BitMatrix<byte> not<byte>(in BitMatrix<byte> A)
// AggressiveInlining
BitMatrix<byte> not<byte>(in BitMatrix<byte> A)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.BitMatrix`1<T> Z0.BitMatrix::not<T>(Z0.BitMatrix`1<T>&)
    IL_0006: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::not<T>(Z0.BitMatrix`1<T>&)
// BitMatrix<ushort> not<ushort>(in BitMatrix<ushort> A)
// AggressiveInlining
BitMatrix<ushort> not<ushort>(in BitMatrix<ushort> A)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.BitMatrix`1<T> Z0.BitMatrix::not<T>(Z0.BitMatrix`1<T>&)
    IL_0006: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::not<T>(Z0.BitMatrix`1<T>&)
// BitMatrix<uint> not<uint>(in BitMatrix<uint> A)
// AggressiveInlining
BitMatrix<uint> not<uint>(in BitMatrix<uint> A)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.BitMatrix`1<T> Z0.BitMatrix::not<T>(Z0.BitMatrix`1<T>&)
    IL_0006: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::not<T>(Z0.BitMatrix`1<T>&)
// BitMatrix<ulong> not<ulong>(in BitMatrix<ulong> A)
// AggressiveInlining
BitMatrix<ulong> not<ulong>(in BitMatrix<ulong> A)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.BitMatrix`1<T> Z0.BitMatrix::not<T>(Z0.BitMatrix`1<T>&)
    IL_0006: ret
}
------------------------------------------------------------------------------------------------------------------------
