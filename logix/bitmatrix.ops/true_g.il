// Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::true<T>()
// BitMatrix<byte> true<byte>()
// AggressiveInlining
BitMatrix<byte> true<byte>()
{
    IL_0000: call Z0.BitMatrix`1<T> Z0.BitMatrix::true<T>()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::true<T>()
// BitMatrix<ushort> true<ushort>()
// AggressiveInlining
BitMatrix<ushort> true<ushort>()
{
    IL_0000: call Z0.BitMatrix`1<T> Z0.BitMatrix::true<T>()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::true<T>()
// BitMatrix<uint> true<uint>()
// AggressiveInlining
BitMatrix<uint> true<uint>()
{
    IL_0000: call Z0.BitMatrix`1<T> Z0.BitMatrix::true<T>()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::true<T>()
// BitMatrix<ulong> true<ulong>()
// AggressiveInlining
BitMatrix<ulong> true<ulong>()
{
    IL_0000: call Z0.BitMatrix`1<T> Z0.BitMatrix::true<T>()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
