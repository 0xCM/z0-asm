// Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::false<T>()
// BitMatrix<byte> false<byte>()
// AggressiveInlining
BitMatrix<byte> false<byte>()
{
    IL_0000: call Z0.BitMatrix`1<T> Z0.BitMatrix::false<T>()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::false<T>()
// BitMatrix<ushort> false<ushort>()
// AggressiveInlining
BitMatrix<ushort> false<ushort>()
{
    IL_0000: call Z0.BitMatrix`1<T> Z0.BitMatrix::false<T>()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::false<T>()
// BitMatrix<uint> false<uint>()
// AggressiveInlining
BitMatrix<uint> false<uint>()
{
    IL_0000: call Z0.BitMatrix`1<T> Z0.BitMatrix::false<T>()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::false<T>()
// BitMatrix<ulong> false<ulong>()
// AggressiveInlining
BitMatrix<ulong> false<ulong>()
{
    IL_0000: call Z0.BitMatrix`1<T> Z0.BitMatrix::false<T>()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
