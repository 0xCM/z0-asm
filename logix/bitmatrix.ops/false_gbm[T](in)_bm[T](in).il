// Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::false<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
// BitMatrix<byte> false<byte>(in BitMatrix<byte> A, in BitMatrix<byte> B)
// AggressiveInlining
BitMatrix<byte> false<byte>(in BitMatrix<byte> A, in BitMatrix<byte> B)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.BitMatrix`1<T> Z0.BitMatrix::false<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::false<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
// BitMatrix<ushort> false<ushort>(in BitMatrix<ushort> A, in BitMatrix<ushort> B)
// AggressiveInlining
BitMatrix<ushort> false<ushort>(in BitMatrix<ushort> A, in BitMatrix<ushort> B)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.BitMatrix`1<T> Z0.BitMatrix::false<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::false<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
// BitMatrix<uint> false<uint>(in BitMatrix<uint> A, in BitMatrix<uint> B)
// AggressiveInlining
BitMatrix<uint> false<uint>(in BitMatrix<uint> A, in BitMatrix<uint> B)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.BitMatrix`1<T> Z0.BitMatrix::false<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.BitMatrix`1<T> Z0.Logix.BitMatrixOps::false<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
// BitMatrix<ulong> false<ulong>(in BitMatrix<ulong> A, in BitMatrix<ulong> B)
// AggressiveInlining
BitMatrix<ulong> false<ulong>(in BitMatrix<ulong> A, in BitMatrix<ulong> B)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call Z0.BitMatrix`1<T> Z0.BitMatrix::false<T>(Z0.BitMatrix`1<T>&,Z0.BitMatrix`1<T>&)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
