// Id := 100664553, Name := T Z0.Logix.ScalarOps::lnot<T>(T,T)
// byte lnot<byte>(byte a, byte b)
// AggressiveInlining
byte lnot<byte>(byte a, byte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T Z0.gmath::lnot<T>(T,T)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664553, Name := T Z0.Logix.ScalarOps::lnot<T>(T,T)
// sbyte lnot<sbyte>(sbyte a, sbyte b)
// AggressiveInlining
sbyte lnot<sbyte>(sbyte a, sbyte b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T Z0.gmath::lnot<T>(T,T)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664553, Name := T Z0.Logix.ScalarOps::lnot<T>(T,T)
// ushort lnot<ushort>(ushort a, ushort b)
// AggressiveInlining
ushort lnot<ushort>(ushort a, ushort b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T Z0.gmath::lnot<T>(T,T)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664553, Name := T Z0.Logix.ScalarOps::lnot<T>(T,T)
// Int16 lnot<Int16>(Int16 a, Int16 b)
// AggressiveInlining
Int16 lnot<Int16>(Int16 a, Int16 b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T Z0.gmath::lnot<T>(T,T)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664553, Name := T Z0.Logix.ScalarOps::lnot<T>(T,T)
// uint lnot<uint>(uint a, uint b)
// AggressiveInlining
uint lnot<uint>(uint a, uint b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T Z0.gmath::lnot<T>(T,T)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664553, Name := T Z0.Logix.ScalarOps::lnot<T>(T,T)
// int lnot<int>(int a, int b)
// AggressiveInlining
int lnot<int>(int a, int b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T Z0.gmath::lnot<T>(T,T)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664553, Name := T Z0.Logix.ScalarOps::lnot<T>(T,T)
// ulong lnot<ulong>(ulong a, ulong b)
// AggressiveInlining
ulong lnot<ulong>(ulong a, ulong b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T Z0.gmath::lnot<T>(T,T)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664553, Name := T Z0.Logix.ScalarOps::lnot<T>(T,T)
// long lnot<long>(long a, long b)
// AggressiveInlining
long lnot<long>(long a, long b)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T Z0.gmath::lnot<T>(T,T)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
