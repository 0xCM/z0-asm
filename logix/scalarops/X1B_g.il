// Id := 100664606, Name := T Z0.Logix.ScalarOps::f1b<T>(T,T,T)
// byte f1b<byte>(byte a, byte b, byte c)
// AggressiveInlining
byte f1b<byte>(byte a, byte b, byte c)
{
    IL_0000: ldarg.2
    IL_0001: ldarg.0
    IL_0002: call T Z0.Logix.ScalarOps::not<T>(T)
    IL_0007: ldarg.1
    IL_0008: call T Z0.Logix.ScalarOps::not<T>(T)
    IL_000D: call T Z0.Logix.ScalarOps::select<T>(T,T,T)
    IL_0012: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664606, Name := T Z0.Logix.ScalarOps::f1b<T>(T,T,T)
// sbyte f1b<sbyte>(sbyte a, sbyte b, sbyte c)
// AggressiveInlining
sbyte f1b<sbyte>(sbyte a, sbyte b, sbyte c)
{
    IL_0000: ldarg.2
    IL_0001: ldarg.0
    IL_0002: call T Z0.Logix.ScalarOps::not<T>(T)
    IL_0007: ldarg.1
    IL_0008: call T Z0.Logix.ScalarOps::not<T>(T)
    IL_000D: call T Z0.Logix.ScalarOps::select<T>(T,T,T)
    IL_0012: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664606, Name := T Z0.Logix.ScalarOps::f1b<T>(T,T,T)
// ushort f1b<ushort>(ushort a, ushort b, ushort c)
// AggressiveInlining
ushort f1b<ushort>(ushort a, ushort b, ushort c)
{
    IL_0000: ldarg.2
    IL_0001: ldarg.0
    IL_0002: call T Z0.Logix.ScalarOps::not<T>(T)
    IL_0007: ldarg.1
    IL_0008: call T Z0.Logix.ScalarOps::not<T>(T)
    IL_000D: call T Z0.Logix.ScalarOps::select<T>(T,T,T)
    IL_0012: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664606, Name := T Z0.Logix.ScalarOps::f1b<T>(T,T,T)
// short f1b<short>(short a, short b, short c)
// AggressiveInlining
short f1b<short>(short a, short b, short c)
{
    IL_0000: ldarg.2
    IL_0001: ldarg.0
    IL_0002: call T Z0.Logix.ScalarOps::not<T>(T)
    IL_0007: ldarg.1
    IL_0008: call T Z0.Logix.ScalarOps::not<T>(T)
    IL_000D: call T Z0.Logix.ScalarOps::select<T>(T,T,T)
    IL_0012: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664606, Name := T Z0.Logix.ScalarOps::f1b<T>(T,T,T)
// uint f1b<uint>(uint a, uint b, uint c)
// AggressiveInlining
uint f1b<uint>(uint a, uint b, uint c)
{
    IL_0000: ldarg.2
    IL_0001: ldarg.0
    IL_0002: call T Z0.Logix.ScalarOps::not<T>(T)
    IL_0007: ldarg.1
    IL_0008: call T Z0.Logix.ScalarOps::not<T>(T)
    IL_000D: call T Z0.Logix.ScalarOps::select<T>(T,T,T)
    IL_0012: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664606, Name := T Z0.Logix.ScalarOps::f1b<T>(T,T,T)
// int f1b<int>(int a, int b, int c)
// AggressiveInlining
int f1b<int>(int a, int b, int c)
{
    IL_0000: ldarg.2
    IL_0001: ldarg.0
    IL_0002: call T Z0.Logix.ScalarOps::not<T>(T)
    IL_0007: ldarg.1
    IL_0008: call T Z0.Logix.ScalarOps::not<T>(T)
    IL_000D: call T Z0.Logix.ScalarOps::select<T>(T,T,T)
    IL_0012: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664606, Name := T Z0.Logix.ScalarOps::f1b<T>(T,T,T)
// ulong f1b<ulong>(ulong a, ulong b, ulong c)
// AggressiveInlining
ulong f1b<ulong>(ulong a, ulong b, ulong c)
{
    IL_0000: ldarg.2
    IL_0001: ldarg.0
    IL_0002: call T Z0.Logix.ScalarOps::not<T>(T)
    IL_0007: ldarg.1
    IL_0008: call T Z0.Logix.ScalarOps::not<T>(T)
    IL_000D: call T Z0.Logix.ScalarOps::select<T>(T,T,T)
    IL_0012: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664606, Name := T Z0.Logix.ScalarOps::f1b<T>(T,T,T)
// long f1b<long>(long a, long b, long c)
// AggressiveInlining
long f1b<long>(long a, long b, long c)
{
    IL_0000: ldarg.2
    IL_0001: ldarg.0
    IL_0002: call T Z0.Logix.ScalarOps::not<T>(T)
    IL_0007: ldarg.1
    IL_0008: call T Z0.Logix.ScalarOps::not<T>(T)
    IL_000D: call T Z0.Logix.ScalarOps::select<T>(T,T,T)
    IL_0012: ret
}
------------------------------------------------------------------------------------------------------------------------
