// Id := 100664605, Name := T Z0.Logix.ScalarOps::f1a<T>(T,T,T)
// byte f1a<byte>(byte a, byte b, byte c)
// AggressiveInlining
byte f1a<byte>(byte a, byte b, byte c)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T Z0.Logix.ScalarOps::and<T>(T,T)
    IL_0007: call T Z0.Logix.ScalarOps::not<T>(T)
    IL_000C: ldarg.0
    IL_000D: ldarg.2
    IL_000E: call T Z0.Logix.ScalarOps::xor<T>(T,T)
    IL_0013: call T Z0.Logix.ScalarOps::and<T>(T,T)
    IL_0018: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664605, Name := T Z0.Logix.ScalarOps::f1a<T>(T,T,T)
// sbyte f1a<sbyte>(sbyte a, sbyte b, sbyte c)
// AggressiveInlining
sbyte f1a<sbyte>(sbyte a, sbyte b, sbyte c)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T Z0.Logix.ScalarOps::and<T>(T,T)
    IL_0007: call T Z0.Logix.ScalarOps::not<T>(T)
    IL_000C: ldarg.0
    IL_000D: ldarg.2
    IL_000E: call T Z0.Logix.ScalarOps::xor<T>(T,T)
    IL_0013: call T Z0.Logix.ScalarOps::and<T>(T,T)
    IL_0018: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664605, Name := T Z0.Logix.ScalarOps::f1a<T>(T,T,T)
// ushort f1a<ushort>(ushort a, ushort b, ushort c)
// AggressiveInlining
ushort f1a<ushort>(ushort a, ushort b, ushort c)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T Z0.Logix.ScalarOps::and<T>(T,T)
    IL_0007: call T Z0.Logix.ScalarOps::not<T>(T)
    IL_000C: ldarg.0
    IL_000D: ldarg.2
    IL_000E: call T Z0.Logix.ScalarOps::xor<T>(T,T)
    IL_0013: call T Z0.Logix.ScalarOps::and<T>(T,T)
    IL_0018: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664605, Name := T Z0.Logix.ScalarOps::f1a<T>(T,T,T)
// short f1a<short>(short a, short b, short c)
// AggressiveInlining
short f1a<short>(short a, short b, short c)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T Z0.Logix.ScalarOps::and<T>(T,T)
    IL_0007: call T Z0.Logix.ScalarOps::not<T>(T)
    IL_000C: ldarg.0
    IL_000D: ldarg.2
    IL_000E: call T Z0.Logix.ScalarOps::xor<T>(T,T)
    IL_0013: call T Z0.Logix.ScalarOps::and<T>(T,T)
    IL_0018: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664605, Name := T Z0.Logix.ScalarOps::f1a<T>(T,T,T)
// uint f1a<uint>(uint a, uint b, uint c)
// AggressiveInlining
uint f1a<uint>(uint a, uint b, uint c)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T Z0.Logix.ScalarOps::and<T>(T,T)
    IL_0007: call T Z0.Logix.ScalarOps::not<T>(T)
    IL_000C: ldarg.0
    IL_000D: ldarg.2
    IL_000E: call T Z0.Logix.ScalarOps::xor<T>(T,T)
    IL_0013: call T Z0.Logix.ScalarOps::and<T>(T,T)
    IL_0018: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664605, Name := T Z0.Logix.ScalarOps::f1a<T>(T,T,T)
// int f1a<int>(int a, int b, int c)
// AggressiveInlining
int f1a<int>(int a, int b, int c)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T Z0.Logix.ScalarOps::and<T>(T,T)
    IL_0007: call T Z0.Logix.ScalarOps::not<T>(T)
    IL_000C: ldarg.0
    IL_000D: ldarg.2
    IL_000E: call T Z0.Logix.ScalarOps::xor<T>(T,T)
    IL_0013: call T Z0.Logix.ScalarOps::and<T>(T,T)
    IL_0018: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664605, Name := T Z0.Logix.ScalarOps::f1a<T>(T,T,T)
// ulong f1a<ulong>(ulong a, ulong b, ulong c)
// AggressiveInlining
ulong f1a<ulong>(ulong a, ulong b, ulong c)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T Z0.Logix.ScalarOps::and<T>(T,T)
    IL_0007: call T Z0.Logix.ScalarOps::not<T>(T)
    IL_000C: ldarg.0
    IL_000D: ldarg.2
    IL_000E: call T Z0.Logix.ScalarOps::xor<T>(T,T)
    IL_0013: call T Z0.Logix.ScalarOps::and<T>(T,T)
    IL_0018: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100664605, Name := T Z0.Logix.ScalarOps::f1a<T>(T,T,T)
// long f1a<long>(long a, long b, long c)
// AggressiveInlining
long f1a<long>(long a, long b, long c)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T Z0.Logix.ScalarOps::and<T>(T,T)
    IL_0007: call T Z0.Logix.ScalarOps::not<T>(T)
    IL_000C: ldarg.0
    IL_000D: ldarg.2
    IL_000E: call T Z0.Logix.ScalarOps::xor<T>(T,T)
    IL_0013: call T Z0.Logix.ScalarOps::and<T>(T,T)
    IL_0018: ret
}
------------------------------------------------------------------------------------------------------------------------
