// Id := 100663445, Name := Z0.Logix.LiteralExpr`1<T> Z0.Logix.ArithExprEval::dec<T>(Z0.Logix.IUnaryArithmeticOp`1<T>)
// LiteralExpr<byte> dec<byte>(IUnaryArithmeticOp<byte> a)
// IL
LiteralExpr<byte> dec<byte>(IUnaryArithmeticOp<byte> a)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.Logix.LiteralExpr`1<T> Z0.Logix.ArithExprEval::eval<T>(Z0.Logix.IUnaryArithmeticOp`1<T>)
    IL_0006: callvirt T Z0.Logix.LiteralExpr`1<T>::get_Value()
    IL_000B: call T Z0.Logix.ScalarOps::dec<T>(T)
    IL_0010: call Z0.Logix.LiteralExpr`1<T> Z0.Logix.LiteralExpr`1<T>::op_Implicit(T)
    IL_0015: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663445, Name := Z0.Logix.LiteralExpr`1<T> Z0.Logix.ArithExprEval::dec<T>(Z0.Logix.IUnaryArithmeticOp`1<T>)
// LiteralExpr<sbyte> dec<sbyte>(IUnaryArithmeticOp<sbyte> a)
// IL
LiteralExpr<sbyte> dec<sbyte>(IUnaryArithmeticOp<sbyte> a)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.Logix.LiteralExpr`1<T> Z0.Logix.ArithExprEval::eval<T>(Z0.Logix.IUnaryArithmeticOp`1<T>)
    IL_0006: callvirt T Z0.Logix.LiteralExpr`1<T>::get_Value()
    IL_000B: call T Z0.Logix.ScalarOps::dec<T>(T)
    IL_0010: call Z0.Logix.LiteralExpr`1<T> Z0.Logix.LiteralExpr`1<T>::op_Implicit(T)
    IL_0015: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663445, Name := Z0.Logix.LiteralExpr`1<T> Z0.Logix.ArithExprEval::dec<T>(Z0.Logix.IUnaryArithmeticOp`1<T>)
// LiteralExpr<ushort> dec<ushort>(IUnaryArithmeticOp<ushort> a)
// IL
LiteralExpr<ushort> dec<ushort>(IUnaryArithmeticOp<ushort> a)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.Logix.LiteralExpr`1<T> Z0.Logix.ArithExprEval::eval<T>(Z0.Logix.IUnaryArithmeticOp`1<T>)
    IL_0006: callvirt T Z0.Logix.LiteralExpr`1<T>::get_Value()
    IL_000B: call T Z0.Logix.ScalarOps::dec<T>(T)
    IL_0010: call Z0.Logix.LiteralExpr`1<T> Z0.Logix.LiteralExpr`1<T>::op_Implicit(T)
    IL_0015: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663445, Name := Z0.Logix.LiteralExpr`1<T> Z0.Logix.ArithExprEval::dec<T>(Z0.Logix.IUnaryArithmeticOp`1<T>)
// LiteralExpr<short> dec<short>(IUnaryArithmeticOp<short> a)
// IL
LiteralExpr<short> dec<short>(IUnaryArithmeticOp<short> a)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.Logix.LiteralExpr`1<T> Z0.Logix.ArithExprEval::eval<T>(Z0.Logix.IUnaryArithmeticOp`1<T>)
    IL_0006: callvirt T Z0.Logix.LiteralExpr`1<T>::get_Value()
    IL_000B: call T Z0.Logix.ScalarOps::dec<T>(T)
    IL_0010: call Z0.Logix.LiteralExpr`1<T> Z0.Logix.LiteralExpr`1<T>::op_Implicit(T)
    IL_0015: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663445, Name := Z0.Logix.LiteralExpr`1<T> Z0.Logix.ArithExprEval::dec<T>(Z0.Logix.IUnaryArithmeticOp`1<T>)
// LiteralExpr<uint> dec<uint>(IUnaryArithmeticOp<uint> a)
// IL
LiteralExpr<uint> dec<uint>(IUnaryArithmeticOp<uint> a)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.Logix.LiteralExpr`1<T> Z0.Logix.ArithExprEval::eval<T>(Z0.Logix.IUnaryArithmeticOp`1<T>)
    IL_0006: callvirt T Z0.Logix.LiteralExpr`1<T>::get_Value()
    IL_000B: call T Z0.Logix.ScalarOps::dec<T>(T)
    IL_0010: call Z0.Logix.LiteralExpr`1<T> Z0.Logix.LiteralExpr`1<T>::op_Implicit(T)
    IL_0015: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663445, Name := Z0.Logix.LiteralExpr`1<T> Z0.Logix.ArithExprEval::dec<T>(Z0.Logix.IUnaryArithmeticOp`1<T>)
// LiteralExpr<int> dec<int>(IUnaryArithmeticOp<int> a)
// IL
LiteralExpr<int> dec<int>(IUnaryArithmeticOp<int> a)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.Logix.LiteralExpr`1<T> Z0.Logix.ArithExprEval::eval<T>(Z0.Logix.IUnaryArithmeticOp`1<T>)
    IL_0006: callvirt T Z0.Logix.LiteralExpr`1<T>::get_Value()
    IL_000B: call T Z0.Logix.ScalarOps::dec<T>(T)
    IL_0010: call Z0.Logix.LiteralExpr`1<T> Z0.Logix.LiteralExpr`1<T>::op_Implicit(T)
    IL_0015: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663445, Name := Z0.Logix.LiteralExpr`1<T> Z0.Logix.ArithExprEval::dec<T>(Z0.Logix.IUnaryArithmeticOp`1<T>)
// LiteralExpr<ulong> dec<ulong>(IUnaryArithmeticOp<ulong> a)
// IL
LiteralExpr<ulong> dec<ulong>(IUnaryArithmeticOp<ulong> a)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.Logix.LiteralExpr`1<T> Z0.Logix.ArithExprEval::eval<T>(Z0.Logix.IUnaryArithmeticOp`1<T>)
    IL_0006: callvirt T Z0.Logix.LiteralExpr`1<T>::get_Value()
    IL_000B: call T Z0.Logix.ScalarOps::dec<T>(T)
    IL_0010: call Z0.Logix.LiteralExpr`1<T> Z0.Logix.LiteralExpr`1<T>::op_Implicit(T)
    IL_0015: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100663445, Name := Z0.Logix.LiteralExpr`1<T> Z0.Logix.ArithExprEval::dec<T>(Z0.Logix.IUnaryArithmeticOp`1<T>)
// LiteralExpr<long> dec<long>(IUnaryArithmeticOp<long> a)
// IL
LiteralExpr<long> dec<long>(IUnaryArithmeticOp<long> a)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.Logix.LiteralExpr`1<T> Z0.Logix.ArithExprEval::eval<T>(Z0.Logix.IUnaryArithmeticOp`1<T>)
    IL_0006: callvirt T Z0.Logix.LiteralExpr`1<T>::get_Value()
    IL_000B: call T Z0.Logix.ScalarOps::dec<T>(T)
    IL_0010: call Z0.Logix.LiteralExpr`1<T> Z0.Logix.LiteralExpr`1<T>::op_Implicit(T)
    IL_0015: ret
}
------------------------------------------------------------------------------------------------------------------------
