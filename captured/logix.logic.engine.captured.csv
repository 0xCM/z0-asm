Sequence  | Address         | Length  | Uri                                                                                       | OpSig                                                                                     | Data
0         | 7ff7c85e8050h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[8u]()                                      | bit eval<byte>(ILogicExpr<byte> expr)                                                     | 0f 1f 44 00 00 48 b8 d8 b6 e3 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
1         | 7ff7c85e8080h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[8i]()                                      | bit eval<sbyte>(ILogicExpr<sbyte> expr)                                                   | 0f 1f 44 00 00 48 b8 d8 b6 e3 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
2         | 7ff7c85e80b0h   | 1107    | hex://logix/LogicEngine?eval#eval_logic_expr_g[16u]()                                     | bit eval<ushort>(ILogicExpr<ushort> expr)                                                 | 0f 1f 44 00 00 48 b8 d8 b6 e3 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 63 d5 c7 5e 5e 00 00 60 9d 98 c8 f7 7f 00 00 e8 53 d5 c7 5e 5e 00 00 48 9e 98 c8 f7 7f 00 00 e8 43 d5 c7 5e 5e 00 00 30 9f 98 c8 f7 7f 00 00 e8 33 d5 c7 5e 5e 00 00 18 a0 98 c8 f7 7f 00 00 e8 23 d5 c7 5e 5e 00 00 00 a1 98 c8 f7 7f 00 00 e8 13 d5 c7 5e 5e 00 0a e8 0b d5 c7 5e 5e 01 09 e8 03 d5 c7 5e 5e 02 08 e8 fb d4 c7 5e 5e 03 07 e8 f3 d4 c7 5e 5e 04 06 e8 eb d4 c7 5e 5e 05 05 e8 e3 d4 c7 5e 5e 06 04 e8 db d4 c7 5e 5e 07 03 e8 d3 d4 c7 5e 5e 08 02 e8 cb d4 c7 5e 5e 09 01 e8 c3 d4 c7 5e 5e 0a 00 e8 a1 98 c8 f7 7f 00 00 e8 b3 d4 c7 5e 5e 00 00 80 a3 98 c8 f7 7f 00 00 e8 a3 d4 c7 5e 5e 00 00 c8 a4 98 c8 f7 7f 00 00 e8 93 d4 c7 5e 5e 00 00 28 a5 98 c8 f7 7f 00 00 e8 83 d4 c7 5e 5e 00 00 88 a5 98 c8 f7 7f 00 00 e8 73 d4 c7 5e 5e 00 00 e8 a5 98 c8 f7 7f 00 00 e8 63 d4 c7 5e 5e 00 00 48 a6 98 c8 f7 7f 00 00 e8 53 d4 c7 5e 5e 00 00 a8 a6 98 c8 f7 7f 00 00 e8 43 d4 c7 5e 5e 00 00 08 a7 98 c8 f7 7f 00 00 e8 33 d4 c7 5e 5e 00 00 68 a7 98 c8 f7 7f 00 00 e8 23 d4 c7 5e 5e 00 00 c8 a7 98 c8 f7 7f 00 00 e8 13 d4 c7 5e 5e 00 00 28 a8 98 c8 f7 7f 00 00 e8 03 d4 c7 5e 5e 00 00 88 a8 98 c8 f7 7f 00 00 e8 f3 d3 c7 5e 5e 00 00 e8 a8 98 c8 f7 7f 00 00 e8 e3 d3 c7 5e 5e 00 00 48 a9 98 c8 f7 7f 00 00 e8 d3 d3 c7 5e 5e 00 00 a8 a9 98 c8 f7 7f 00 00 e8 c3 d3 c7 5e 5e 00 00 08 aa 98 c8 f7 7f 00 00 e8 b3 d3 c7 5e 5e 00 00 68 aa 98 c8 f7 7f 00 00 e8 a3 d3 c7 5e 5e 00 00 c8 aa 98 c8 f7 7f 00 00 e8 93 d3 c7 5e 5e 00 0a e8 8b d3 c7 5e 5e 01 09 e8 83 d3 c7 5e 5e 02 08 e8 7b d3 c7 5e 5e 03 07 e8 73 d3 c7 5e 5e 04 06 e8 6b d3 c7 5e 5e 05 05 e8 63 d3 c7 5e 5e 06 04 e8 5b d3 c7 5e 5e 07 03 e8 53 d3 c7 5e 5e 08 02 e8 4b d3 c7 5e 5e 09 01 e8 43 d3 c7 5e 5e 0a 00 28 ab 98 c8 f7 7f 00 00 e8 33 d3 c7 5e 5e 00 00 c0 ac 98 c8 f7 7f 00 00 e8 23 d3 c7 5e 5e 00 03 e8 1b d3 c7 5e 5e 01 02 e8 13 d3 c7 5e 5e 02 01 e8 0b d3 c7 5e 5e 03 00 f8 ad 98 c8 f7 7f 00 00 e8 fb d2 c7 5e 5e 00 00 f0 ae 98 c8 f7 7f 00 00 e8 eb d2 c7 5e 5e 00 00 50 af 98 c8 f7 7f 00 00 e8 db d2 c7 5e 5e 00 00 b0 af 98 c8 f7 7f 00 00 e8 cb d2 c7 5e 5e 00 00 10 b0 98 c8 f7 7f 00 00 e8 bb d2 c7 5e 5e 00 00 70 b0 98 c8 f7 7f 00 00 e8 ab d2 c7 5e 5e 00 00 d0 b0 98 c8 f7 7f 00 00 e8 9b d2 c7 5e 5e 00 00 30 b1 98 c8 f7 7f 00 00 e8 8b d2 c7 5e 5e 00 00 90 b1 98 c8 f7 7f 00 00 e8 7b d2 c7 5e 5e 00 0c e8 73 d2 c7 5e 5e 01 0b e8 6b d2 c7 5e 5e 02 0a e8 63 d2 c7 5e 5e 03 09 e8 5b d2 c7 5e 5e 04 08 e8 53 d2 c7 5e 5e 05 07 e8 4b d2 c7 5e 5e 06 06 e8 43 d2 c7 5e 5e 07 05 e8 3b d2 c7 5e 5e 08 04 e8 33 d2 c7 5e 5e 09 03 e8 2b d2 c7 5e 5e 0a 02 e8 23 d2 c7 5e 5e 0b 01 e8 1b d2 c7 5e 5e 0c 00 00 b2 98 c8 f7 7f 00 00 e8 0b d2 c7 5e 5e 00 00 88 b3 98 c8 f7 7f 00 00 e8 fb d1 c7 5e 5e 00 0a e8 f3 d1 c7 5e 5e 01 09 e8 eb d1 c7 5e 5e 02 08 e8 e3 d1 c7 5e 5e 03 07 e8 db d1 c7 5e 5e 04 06 e8 d3 d1 c7 5e 5e 05 05 e8 cb d1 c7 5e 5e 06 04 e8 c3 d1 c7 5e 5e 07 03 e8 bb d1 c7 5e 5e 08 02 e8 b3 d1 c7 5e 5e 09 01 e8 ab d1 c7 5e 5e 0a 00 38 b4 98 c8 f7 7f 00 00 e8 9b d1 c7 5e 5e 00 00 b8 b5 98 c8 f7 7f 00 00 e8 8b d1 c7 5e 5e 00 03 e8 83 d1 c7 5e 5e 01 02 e8 7b d1 c7 5e 5e 02 01 e8 73 d1 c7 5e 5e 03 00 f0 b6 98 c8 f7 7f 00 00 f8 28 99 c8 f7 7f 00 00 0f 1f 44 00 00 48 b8 d8 b6 e3 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
3         | 7ff7c85e84e0h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[16i]()                                     | bit eval<short>(ILogicExpr<short> expr)                                                   | 0f 1f 44 00 00 48 b8 d8 b6 e3 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
4         | 7ff7c85e8510h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[32u]()                                     | bit eval<uint>(ILogicExpr<uint> expr)                                                     | 0f 1f 44 00 00 48 b8 d8 b6 e3 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
5         | 7ff7c85e8540h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[32i]()                                     | bit eval<int>(ILogicExpr<int> expr)                                                       | 0f 1f 44 00 00 48 b8 d8 b6 e3 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
6         | 7ff7c85e8570h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[64u]()                                     | bit eval<ulong>(ILogicExpr<ulong> expr)                                                   | 0f 1f 44 00 00 48 b8 d8 b6 e3 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
7         | 7ff7c85e85a0h   | 35      | hex://logix/LogicEngine?eval#eval_logic_expr_g[64i]()                                     | bit eval<long>(ILogicExpr<long> expr)                                                     | 0f 1f 44 00 00 48 b8 d8 b6 e3 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
8         | 7ff7c85e85d0h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[8u]()                                     | LiteralExpr<byte> eval<byte>(IExpr<byte> expr)                                            | 0f 1f 44 00 00 48 b8 a8 81 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
9         | 7ff7c85e8600h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[8i]()                                     | LiteralExpr<sbyte> eval<sbyte>(IExpr<sbyte> expr)                                         | 0f 1f 44 00 00 48 b8 d8 81 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
10        | 7ff7c85e8630h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[16u]()                                    | LiteralExpr<ushort> eval<ushort>(IExpr<ushort> expr)                                      | 0f 1f 44 00 00 48 b8 f8 81 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
11        | 7ff7c85e8660h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[16i]()                                    | LiteralExpr<short> eval<short>(IExpr<short> expr)                                         | 0f 1f 44 00 00 48 b8 18 82 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
12        | 7ff7c85e8690h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[32u]()                                    | LiteralExpr<uint> eval<uint>(IExpr<uint> expr)                                            | 0f 1f 44 00 00 48 b8 38 82 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
13        | 7ff7c85e86c0h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[32i]()                                    | LiteralExpr<int> eval<int>(IExpr<int> expr)                                               | 0f 1f 44 00 00 48 b8 58 82 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
14        | 7ff7c85e86f0h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[64u]()                                    | LiteralExpr<ulong> eval<ulong>(IExpr<ulong> expr)                                         | 0f 1f 44 00 00 48 b8 78 82 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
15        | 7ff7c85e8720h   | 35      | hex://logix/LogicEngine?eval#eval_scalar_expr_g[64i]()                                    | LiteralExpr<long> eval<long>(IExpr<long> expr)                                            | 0f 1f 44 00 00 48 b8 98 82 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
16        | 7ff7c85e8750h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_expr_g[8u]()                                        | LiteralExpr<byte> eval<byte>(IComparisonExpr<byte> expr)                                  | 0f 1f 44 00 00 48 b8 50 59 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
17        | 7ff7c85e8780h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_expr_g[8i]()                                        | LiteralExpr<sbyte> eval<sbyte>(IComparisonExpr<sbyte> expr)                               | 0f 1f 44 00 00 48 b8 30 5a 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
18        | 7ff7c85e87b0h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_expr_g[16u]()                                       | LiteralExpr<ushort> eval<ushort>(IComparisonExpr<ushort> expr)                            | 0f 1f 44 00 00 48 b8 e0 5a 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
19        | 7ff7c85e87e0h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_expr_g[16i]()                                       | LiteralExpr<short> eval<short>(IComparisonExpr<short> expr)                               | 0f 1f 44 00 00 48 b8 90 5b 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
20        | 7ff7c85e8810h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_expr_g[32u]()                                       | LiteralExpr<uint> eval<uint>(IComparisonExpr<uint> expr)                                  | 0f 1f 44 00 00 48 b8 40 5c 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
21        | 7ff7c85e8840h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_expr_g[32i]()                                       | LiteralExpr<int> eval<int>(IComparisonExpr<int> expr)                                     | 0f 1f 44 00 00 48 b8 e0 5c 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
22        | 7ff7c85e8870h   | 1107    | hex://logix/LogicEngine?eval#eval_cmp_expr_g[64i]()                                       | LiteralExpr<long> eval<long>(IComparisonExpr<long> expr)                                  | 0f 1f 44 00 00 48 b8 80 5d 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 a3 cd c7 5e 5e 00 00 e8 b7 98 c8 f7 7f 00 00 e8 93 cd c7 5e 5e 00 00 48 b8 98 c8 f7 7f 00 00 e8 83 cd c7 5e 5e 00 00 a8 b8 98 c8 f7 7f 00 00 e8 73 cd c7 5e 5e 00 00 08 b9 98 c8 f7 7f 00 00 e8 63 cd c7 5e 5e 00 00 68 b9 98 c8 f7 7f 00 00 e8 53 cd c7 5e 5e 00 00 c8 b9 98 c8 f7 7f 00 00 e8 43 cd c7 5e 5e 00 00 28 ba 98 c8 f7 7f 00 00 e8 33 cd c7 5e 5e 00 00 88 ba 98 c8 f7 7f 00 00 e8 23 cd c7 5e 5e 00 0c e8 1b cd c7 5e 5e 01 0b e8 13 cd c7 5e 5e 02 0a e8 0b cd c7 5e 5e 03 09 e8 03 cd c7 5e 5e 04 08 e8 fb cc c7 5e 5e 05 07 e8 f3 cc c7 5e 5e 06 06 e8 eb cc c7 5e 5e 07 05 e8 e3 cc c7 5e 5e 08 04 e8 db cc c7 5e 5e 09 03 e8 d3 cc c7 5e 5e 0a 02 e8 cb cc c7 5e 5e 0b 01 e8 c3 cc c7 5e 5e 0c 00 18 bb 98 c8 f7 7f 00 00 e8 b3 cc c7 5e 5e 00 00 a0 bc 98 c8 f7 7f 00 00 e8 a3 cc c7 5e 5e 00 0a e8 9b cc c7 5e 5e 01 09 e8 93 cc c7 5e 5e 02 08 e8 8b cc c7 5e 5e 03 07 e8 83 cc c7 5e 5e 04 06 e8 7b cc c7 5e 5e 05 05 e8 73 cc c7 5e 5e 06 04 e8 6b cc c7 5e 5e 07 03 e8 63 cc c7 5e 5e 08 02 e8 5b cc c7 5e 5e 09 01 e8 53 cc c7 5e 5e 0a 00 50 bd 98 c8 f7 7f 00 00 e8 43 cc c7 5e 5e 00 00 d0 be 98 c8 f7 7f 00 00 e8 33 cc c7 5e 5e 00 03 e8 2b cc c7 5e 5e 01 02 e8 23 cc c7 5e 5e 02 01 e8 1b cc c7 5e 5e 03 00 08 c0 98 c8 f7 7f 00 00 e8 0b cc c7 5e 5e 00 00 00 c1 98 c8 f7 7f 00 00 e8 fb cb c7 5e 5e 00 00 60 c1 98 c8 f7 7f 00 00 e8 eb cb c7 5e 5e 00 00 c0 c1 98 c8 f7 7f 00 00 e8 db cb c7 5e 5e 00 00 20 c2 98 c8 f7 7f 00 00 e8 cb cb c7 5e 5e 00 00 80 c2 98 c8 f7 7f 00 00 e8 bb cb c7 5e 5e 00 00 e0 c2 98 c8 f7 7f 00 00 e8 ab cb c7 5e 5e 00 00 40 c3 98 c8 f7 7f 00 00 e8 9b cb c7 5e 5e 00 00 a0 c3 98 c8 f7 7f 00 00 e8 8b cb c7 5e 5e 00 03 e8 83 cb c7 5e 5e 01 02 e8 7b cb c7 5e 5e 02 01 e8 73 cb c7 5e 5e 03 00 78 c4 98 c8 f7 7f 00 00 e8 63 cb c7 5e 5e 00 00 e8 c5 98 c8 f7 7f 00 00 e8 53 cb c7 5e 5e 00 00 48 c6 98 c8 f7 7f 00 00 e8 43 cb c7 5e 5e 00 00 a8 c6 98 c8 f7 7f 00 00 e8 33 cb c7 5e 5e 00 00 08 c7 98 c8 f7 7f 00 00 e8 23 cb c7 5e 5e 00 00 68 c7 98 c8 f7 7f 00 00 e8 13 cb c7 5e 5e 00 00 c8 c7 98 c8 f7 7f 00 00 e8 03 cb c7 5e 5e 00 00 28 c8 98 c8 f7 7f 00 00 e8 f3 ca c7 5e 5e 00 00 88 c8 98 c8 f7 7f 00 00 e8 e3 ca c7 5e 5e 00 0a e8 db ca c7 5e 5e 01 09 e8 d3 ca c7 5e 5e 02 08 e8 cb ca c7 5e 5e 03 07 e8 c3 ca c7 5e 5e 04 06 e8 bb ca c7 5e 5e 05 05 e8 b3 ca c7 5e 5e 06 04 e8 ab ca c7 5e 5e 07 03 e8 a3 ca c7 5e 5e 08 02 e8 9b ca c7 5e 5e 09 01 e8 93 ca c7 5e 5e 0a 00 e8 c8 98 c8 f7 7f 00 00 e8 83 ca c7 5e 5e 00 00 80 ca 98 c8 f7 7f 00 00 e8 73 ca c7 5e 5e 00 00 50 cc 98 c8 f7 7f 00 00 e8 63 ca c7 5e 5e 00 00 b0 cc 98 c8 f7 7f 00 00 e8 53 ca c7 5e 5e 00 00 10 cd 98 c8 f7 7f 00 00 e8 43 ca c7 5e 5e 00 02 e8 3b ca c7 5e 5e 01 01 e8 33 ca c7 5e 5e 02 00 60 cd 98 c8 f7 7f 00 00 e8 23 ca c7 5e 5e 00 00 50 ce 98 c8 f7 7f 00 00 e8 13 ca c7 5e 5e 00 00 b0 ce 98 c8 f7 7f 00 00 e8 03 ca c7 5e 5e 00 02 e8 fb c9 c7 5e 5e 01 01 e8 f3 c9 c7 5e 5e 02 00 00 cf 98 c8 f7 7f 00 00 e8 e3 c9 c7 5e 5e 00 00 f0 cf 98 c8 f7 7f 00 00 e8 d3 c9 c7 5e 5e 00 00 50 d0 98 c8 f7 7f 00 00 e8 c3 c9 c7 5e 5e 00 02 e8 bb c9 c7 5e 5e 01 01 e8 b3 c9 c7 5e 5e 02 00 a0 d0 98 c8 f7 7f 00 00 f0 3b 99 c8 f7 7f 00 00 0f 1f 44 00 00 48 b8 90 66 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
23        | 7ff7c85e8ca0h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[8u]()                                    | LiteralExpr<Vector128<byte>> eval<byte>(IComparisonExpr<Vector128<byte>> expr)            | 0f 1f 44 00 00 48 b8 90 66 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
24        | 7ff7c85e8cd0h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[8i]()                                    | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IComparisonExpr<Vector128<sbyte>> expr)         | 0f 1f 44 00 00 48 b8 70 67 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
25        | 7ff7c85e8d00h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[16u]()                                   | LiteralExpr<Vector128<ushort>> eval<ushort>(IComparisonExpr<Vector128<ushort>> expr)      | 0f 1f 44 00 00 48 b8 60 6c 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
26        | 7ff7c85e8d30h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[16i]()                                   | LiteralExpr<Vector128<short>> eval<short>(IComparisonExpr<Vector128<short>> expr)         | 0f 1f 44 00 00 48 b8 40 6d 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
27        | 7ff7c85e8d60h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[32u]()                                   | LiteralExpr<Vector128<uint>> eval<uint>(IComparisonExpr<Vector128<uint>> expr)            | 0f 1f 44 00 00 48 b8 20 6e 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
28        | 7ff7c85e8d90h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[32i]()                                   | LiteralExpr<Vector128<int>> eval<int>(IComparisonExpr<Vector128<int>> expr)               | 0f 1f 44 00 00 48 b8 00 6f 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
29        | 7ff7c85e8dc0h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr128_g[64i]()                                   | LiteralExpr<Vector128<long>> eval<long>(IComparisonExpr<Vector128<long>> expr)            | 0f 1f 44 00 00 48 b8 f0 73 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
30        | 7ff7c85e8df0h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[8u]()                                    | LiteralExpr<Vector256<byte>> eval<byte>(IComparisonExpr<Vector256<byte>> expr)            | 0f 1f 44 00 00 48 b8 d0 74 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
31        | 7ff7c85e8e20h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[8i]()                                    | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IComparisonExpr<Vector256<sbyte>> expr)         | 0f 1f 44 00 00 48 b8 e0 75 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
32        | 7ff7c85e8e50h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[16u]()                                   | LiteralExpr<Vector256<ushort>> eval<ushort>(IComparisonExpr<Vector256<ushort>> expr)      | 0f 1f 44 00 00 48 b8 00 7b 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
33        | 7ff7c85e8e80h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[16i]()                                   | LiteralExpr<Vector256<short>> eval<short>(IComparisonExpr<Vector256<short>> expr)         | 0f 1f 44 00 00 48 b8 10 7c 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
34        | 7ff7c85e8eb0h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[32u]()                                   | LiteralExpr<Vector256<uint>> eval<uint>(IComparisonExpr<Vector256<uint>> expr)            | 0f 1f 44 00 00 48 b8 20 7d 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
35        | 7ff7c85e8ee0h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[32i]()                                   | LiteralExpr<Vector256<int>> eval<int>(IComparisonExpr<Vector256<int>> expr)               | 0f 1f 44 00 00 48 b8 30 7e 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
36        | 7ff7c85e8f10h   | 35      | hex://logix/LogicEngine?eval#eval_vcmp_expr256_g[64i]()                                   | LiteralExpr<Vector256<long>> eval<long>(IComparisonExpr<Vector256<long>> expr)            | 0f 1f 44 00 00 48 b8 40 7f 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
37        | 7ff7c85e8f40h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_pred_g[8u]()                                        | bit eval<byte>(IComparisonPred<byte> expr)                                                | 0f 1f 44 00 00 48 b8 30 5e 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
38        | 7ff7c85e8f70h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_pred_g[8i]()                                        | bit eval<sbyte>(IComparisonPred<sbyte> expr)                                              | 0f 1f 44 00 00 48 b8 d0 5e 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
39        | 7ff7c85e8fa0h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_pred_g[16u]()                                       | bit eval<ushort>(IComparisonPred<ushort> expr)                                            | 0f 1f 44 00 00 48 b8 70 5f 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
40        | 7ff7c85e8fd0h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_pred_g[16i]()                                       | bit eval<short>(IComparisonPred<short> expr)                                              | 0f 1f 44 00 00 48 b8 10 60 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
41        | 7ff7c85e9000h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_pred_g[32u]()                                       | bit eval<uint>(IComparisonPred<uint> expr)                                                | 0f 1f 44 00 00 48 b8 b0 64 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
42        | 7ff7c85e9030h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_pred_g[32i]()                                       | bit eval<int>(IComparisonPred<int> expr)                                                  | 0f 1f 44 00 00 48 b8 50 65 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
43        | 7ff7c85e9060h   | 35      | hex://logix/LogicEngine?eval#eval_cmp_pred_g[64i]()                                       | bit eval<long>(IComparisonPred<long> expr)                                                | 0f 1f 44 00 00 48 b8 f0 65 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
44        | 7ff7c85e9090h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[8u]()                                      | LiteralExpr<byte> eval<byte>(IArithmeticExpr<byte> expr)                                  | 0f 1f 44 00 00 48 b8 d8 8b 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
45        | 7ff7c85e90c0h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[8i]()                                      | LiteralExpr<sbyte> eval<sbyte>(IArithmeticExpr<sbyte> expr)                               | 0f 1f 44 00 00 48 b8 28 8c 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
46        | 7ff7c85e90f0h   | 1107    | hex://logix/LogicEngine?eval#eval_arith_expr_g[16u]()                                     | LiteralExpr<ushort> eval<ushort>(IArithmeticExpr<ushort> expr)                            | 0f 1f 44 00 00 48 b8 68 8c 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 23 c5 c7 5e 5e 00 00 90 d1 98 c8 f7 7f 00 00 e8 13 c5 c7 5e 5e 00 00 f0 d1 98 c8 f7 7f 00 00 e8 03 c5 c7 5e 5e 00 02 e8 fb c4 c7 5e 5e 01 01 e8 f3 c4 c7 5e 5e 02 00 40 d2 98 c8 f7 7f 00 00 e8 e3 c4 c7 5e 5e 00 00 30 d3 98 c8 f7 7f 00 00 e8 d3 c4 c7 5e 5e 00 00 90 d3 98 c8 f7 7f 00 00 e8 c3 c4 c7 5e 5e 00 02 e8 bb c4 c7 5e 5e 01 01 e8 b3 c4 c7 5e 5e 02 00 e0 d3 98 c8 f7 7f 00 00 e8 a3 c4 c7 5e 5e 00 00 d0 d4 98 c8 f7 7f 00 00 e8 93 c4 c7 5e 5e 00 00 30 d5 98 c8 f7 7f 00 00 e8 83 c4 c7 5e 5e 00 02 e8 7b c4 c7 5e 5e 01 01 e8 73 c4 c7 5e 5e 02 00 80 d5 98 c8 f7 7f 00 00 e8 63 c4 c7 5e 5e 00 00 70 d6 98 c8 f7 7f 00 00 e8 53 c4 c7 5e 5e 00 00 d0 d6 98 c8 f7 7f 00 00 e8 43 c4 c7 5e 5e 00 02 e8 3b c4 c7 5e 5e 01 01 e8 33 c4 c7 5e 5e 02 00 20 d7 98 c8 f7 7f 00 00 e8 23 c4 c7 5e 5e 00 00 10 d8 98 c8 f7 7f 00 00 e8 13 c4 c7 5e 5e 00 00 70 d8 98 c8 f7 7f 00 00 e8 03 c4 c7 5e 5e 00 02 e8 fb c3 c7 5e 5e 01 01 e8 f3 c3 c7 5e 5e 02 00 c0 d8 98 c8 f7 7f 00 00 e8 e3 c3 c7 5e 5e 00 0c e8 db c3 c7 5e 5e 01 0b e8 d3 c3 c7 5e 5e 02 0a e8 cb c3 c7 5e 5e 03 09 e8 c3 c3 c7 5e 5e 04 08 e8 bb c3 c7 5e 5e 05 07 e8 b3 c3 c7 5e 5e 06 06 e8 ab c3 c7 5e 5e 07 05 e8 a3 c3 c7 5e 5e 08 04 e8 9b c3 c7 5e 5e 09 03 e8 93 c3 c7 5e 5e 0a 02 e8 8b c3 c7 5e 5e 0b 01 e8 83 c3 c7 5e 5e 0c 00 c0 d9 98 c8 f7 7f 00 00 e8 73 c3 c7 5e 5e 00 00 48 db 98 c8 f7 7f 00 00 e8 63 c3 c7 5e 5e 00 0a e8 5b c3 c7 5e 5e 01 09 e8 53 c3 c7 5e 5e 02 08 e8 4b c3 c7 5e 5e 03 07 e8 43 c3 c7 5e 5e 04 06 e8 3b c3 c7 5e 5e 05 05 e8 33 c3 c7 5e 5e 06 04 e8 2b c3 c7 5e 5e 07 03 e8 23 c3 c7 5e 5e 08 02 e8 1b c3 c7 5e 5e 09 01 e8 13 c3 c7 5e 5e 0a 00 f8 db 98 c8 f7 7f 00 00 e8 03 c3 c7 5e 5e 00 00 78 dd 98 c8 f7 7f 00 00 e8 f3 c2 c7 5e 5e 00 00 c0 de 98 c8 f7 7f 00 00 e8 e3 c2 c7 5e 5e 00 0a e8 db c2 c7 5e 5e 01 09 e8 d3 c2 c7 5e 5e 02 08 e8 cb c2 c7 5e 5e 03 07 e8 c3 c2 c7 5e 5e 04 06 e8 bb c2 c7 5e 5e 05 05 e8 b3 c2 c7 5e 5e 06 04 e8 ab c2 c7 5e 5e 07 03 e8 a3 c2 c7 5e 5e 08 02 e8 9b c2 c7 5e 5e 09 01 e8 93 c2 c7 5e 5e 0a 00 20 df 98 c8 f7 7f 00 00 e8 83 c2 c7 5e 5e 00 00 a0 e0 98 c8 f7 7f 00 00 e8 73 c2 c7 5e 5e 00 00 e8 e1 98 c8 f7 7f 00 00 e8 63 c2 c7 5e 5e 00 0c e8 5b c2 c7 5e 5e 01 0b e8 53 c2 c7 5e 5e 02 0a e8 4b c2 c7 5e 5e 03 09 e8 43 c2 c7 5e 5e 04 08 e8 3b c2 c7 5e 5e 05 07 e8 33 c2 c7 5e 5e 06 06 e8 2b c2 c7 5e 5e 07 05 e8 23 c2 c7 5e 5e 08 04 e8 1b c2 c7 5e 5e 09 03 e8 13 c2 c7 5e 5e 0a 02 e8 0b c2 c7 5e 5e 0b 01 e8 03 c2 c7 5e 5e 0c 00 78 e2 98 c8 f7 7f 00 00 e8 f3 c1 c7 5e 5e 00 00 00 e4 98 c8 f7 7f 00 00 e8 e3 c1 c7 5e 5e 00 0a e8 db c1 c7 5e 5e 01 09 e8 d3 c1 c7 5e 5e 02 08 e8 cb c1 c7 5e 5e 03 07 e8 c3 c1 c7 5e 5e 04 06 e8 bb c1 c7 5e 5e 05 05 e8 b3 c1 c7 5e 5e 06 04 e8 ab c1 c7 5e 5e 07 03 e8 a3 c1 c7 5e 5e 08 02 e8 9b c1 c7 5e 5e 09 01 e8 93 c1 c7 5e 5e 0a 00 b0 e4 98 c8 f7 7f 00 00 e8 83 c1 c7 5e 5e 00 00 30 e6 98 c8 f7 7f 00 00 e8 73 c1 c7 5e 5e 00 00 78 e7 98 c8 f7 7f 00 00 e8 63 c1 c7 5e 5e 00 00 58 e9 98 c8 f7 7f 00 00 e8 53 c1 c7 5e 5e 00 00 a0 ea 98 c8 f7 7f 00 00 e8 43 c1 c7 5e 5e 00 00 38 ee 98 c8 f7 7f 00 00 e8 33 c1 c7 5e 5e 00 00 70 f0 98 c8 f7 7f 00 00 60 60 99 c8 f7 7f 00 00 0f 1f 44 00 00 48 b8 28 91 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
47        | 7ff7c85e9520h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[16i]()                                     | LiteralExpr<short> eval<short>(IArithmeticExpr<short> expr)                               | 0f 1f 44 00 00 48 b8 28 91 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
48        | 7ff7c85e9550h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[32u]()                                     | LiteralExpr<uint> eval<uint>(IArithmeticExpr<uint> expr)                                  | 0f 1f 44 00 00 48 b8 68 91 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
49        | 7ff7c85e9580h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[32i]()                                     | LiteralExpr<int> eval<int>(IArithmeticExpr<int> expr)                                     | 0f 1f 44 00 00 48 b8 a8 91 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
50        | 7ff7c85e95b0h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[64u]()                                     | LiteralExpr<ulong> eval<ulong>(IArithmeticExpr<ulong> expr)                               | 0f 1f 44 00 00 48 b8 e8 91 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
51        | 7ff7c85e95e0h   | 35      | hex://logix/LogicEngine?eval#eval_arith_expr_g[64i]()                                     | LiteralExpr<long> eval<long>(IArithmeticExpr<long> expr)                                  | 0f 1f 44 00 00 48 b8 28 92 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
52        | 7ff7c85e9610h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[8u]()                                  | LiteralExpr<Vector128<byte>> eval<byte>(IExpr<Vector128<byte>> expr)                      | 0f 1f 44 00 00 48 b8 28 63 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
53        | 7ff7c85e9640h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[8i]()                                  | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IExpr<Vector128<sbyte>> expr)                   | 0f 1f 44 00 00 48 b8 20 64 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
54        | 7ff7c85e9670h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[16u]()                                 | LiteralExpr<Vector128<ushort>> eval<ushort>(IExpr<Vector128<ushort>> expr)                | 0f 1f 44 00 00 48 b8 b8 68 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
55        | 7ff7c85e96a0h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[16i]()                                 | LiteralExpr<Vector128<short>> eval<short>(IExpr<Vector128<short>> expr)                   | 0f 1f 44 00 00 48 b8 a0 69 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
56        | 7ff7c85e96d0h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[32u]()                                 | LiteralExpr<Vector128<uint>> eval<uint>(IExpr<Vector128<uint>> expr)                      | 0f 1f 44 00 00 48 b8 88 6a 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
57        | 7ff7c85e9700h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[32i]()                                 | LiteralExpr<Vector128<int>> eval<int>(IExpr<Vector128<int>> expr)                         | 0f 1f 44 00 00 48 b8 70 6b 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
58        | 7ff7c85e9730h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[64u]()                                 | LiteralExpr<Vector128<ulong>> eval<ulong>(IExpr<Vector128<ulong>> expr)                   | 0f 1f 44 00 00 48 b8 c8 93 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
59        | 7ff7c85e9760h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr128_g[64i]()                                 | LiteralExpr<Vector128<long>> eval<long>(IExpr<Vector128<long>> expr)                      | 0f 1f 44 00 00 48 b8 f0 6f 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
60        | 7ff7c85e9790h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[8u]()                                  | LiteralExpr<Vector256<byte>> eval<byte>(IExpr<Vector256<byte>> expr)                      | 0f 1f 44 00 00 48 b8 20 72 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
61        | 7ff7c85e97c0h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[8i]()                                  | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IExpr<Vector256<sbyte>> expr)                   | 0f 1f 44 00 00 48 b8 18 73 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
62        | 7ff7c85e97f0h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[16u]()                                 | LiteralExpr<Vector256<ushort>> eval<ushort>(IExpr<Vector256<ushort>> expr)                | 0f 1f 44 00 00 48 b8 10 77 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
63        | 7ff7c85e9820h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[16i]()                                 | LiteralExpr<Vector256<short>> eval<short>(IExpr<Vector256<short>> expr)                   | 0f 1f 44 00 00 48 b8 f8 77 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
64        | 7ff7c85e9850h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[32u]()                                 | LiteralExpr<Vector256<uint>> eval<uint>(IExpr<Vector256<uint>> expr)                      | 0f 1f 44 00 00 48 b8 e0 78 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
65        | 7ff7c85e9880h   | 1107    | hex://logix/LogicEngine?eval#eval_vector_expr256_g[32i]()                                 | LiteralExpr<Vector256<int>> eval<int>(IExpr<Vector256<int>> expr)                         | 0f 1f 44 00 00 48 b8 c8 79 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 93 bd c7 5e 5e 00 0a e8 8b bd c7 5e 5e 01 09 e8 83 bd c7 5e 5e 02 08 e8 7b bd c7 5e 5e 03 07 e8 73 bd c7 5e 5e 04 06 e8 6b bd c7 5e 5e 05 05 e8 63 bd c7 5e 5e 06 04 e8 5b bd c7 5e 5e 07 03 e8 53 bd c7 5e 5e 08 02 e8 4b bd c7 5e 5e 09 01 e8 43 bd c7 5e 5e 0a 00 d8 e7 98 c8 f7 7f 00 00 e8 33 bd c7 5e 5e 00 09 e8 2b bd c7 5e 5e 01 08 e8 23 bd c7 5e 5e 02 07 e8 1b bd c7 5e 5e 03 06 e8 13 bd c7 5e 5e 04 05 e8 0b bd c7 5e 5e 05 04 e8 03 bd c7 5e 5e 06 03 e8 fb bc c7 5e 5e 07 02 e8 f3 bc c7 5e 5e 08 01 e8 eb bc c7 5e 5e 09 00 30 eb 98 c8 f7 7f 00 00 e8 db bc c7 5e 5e 00 03 e8 d3 bc c7 5e 5e 01 02 e8 cb bc c7 5e 5e 02 01 e8 c3 bc c7 5e 5e 03 00 c8 ec 98 c8 f7 7f 00 00 e8 b3 bc c7 5e 5e 00 09 e8 ab bc c7 5e 5e 01 08 e8 a3 bc c7 5e 5e 02 07 e8 9b bc c7 5e 5e 03 06 e8 93 bc c7 5e 5e 04 05 e8 8b bc c7 5e 5e 05 04 e8 83 bc c7 5e 5e 06 03 e8 7b bc c7 5e 5e 07 02 e8 73 bc c7 5e 5e 08 01 e8 6b bc c7 5e 5e 09 00 c8 ee 98 c8 f7 7f 00 00 e8 5b bc c7 5e 5e 00 0a e8 53 bc c7 5e 5e 01 09 e8 4b bc c7 5e 5e 02 08 e8 43 bc c7 5e 5e 03 07 e8 3b bc c7 5e 5e 04 06 e8 33 bc c7 5e 5e 05 05 e8 2b bc c7 5e 5e 06 04 e8 23 bc c7 5e 5e 07 03 e8 1b bc c7 5e 5e 08 02 e8 13 bc c7 5e 5e 09 01 e8 0b bc c7 5e 5e 0a 00 d0 f0 98 c8 f7 7f 00 00 e8 fb bb c7 5e 5e 00 00 68 f2 98 c8 f7 7f 00 00 e8 eb bb c7 5e 5e 00 00 38 f3 98 c8 f7 7f 00 00 e8 db bb c7 5e 5e 00 00 98 f3 98 c8 f7 7f 00 00 e8 cb bb c7 5e 5e 00 00 f8 f3 98 c8 f7 7f 00 00 e8 bb bb c7 5e 5e 00 09 e8 b3 bb c7 5e 5e 01 08 e8 ab bb c7 5e 5e 02 07 e8 a3 bb c7 5e 5e 03 06 e8 9b bb c7 5e 5e 04 05 e8 93 bb c7 5e 5e 05 04 e8 8b bb c7 5e 5e 06 03 e8 83 bb c7 5e 5e 07 02 e8 7b bb c7 5e 5e 08 01 e8 73 bb c7 5e 5e 09 00 88 f4 98 c8 f7 7f 00 00 e8 63 bb c7 5e 5e 00 00 30 f6 98 c8 f7 7f 00 00 e8 53 bb c7 5e 5e 00 09 e8 4b bb c7 5e 5e 01 08 e8 43 bb c7 5e 5e 02 07 e8 3b bb c7 5e 5e 03 06 e8 33 bb c7 5e 5e 04 05 e8 2b bb c7 5e 5e 05 04 e8 23 bb c7 5e 5e 06 03 e8 1b bb c7 5e 5e 07 02 e8 13 bb c7 5e 5e 08 01 e8 0b bb c7 5e 5e 09 00 c0 f6 98 c8 f7 7f 00 00 e8 fb ba c7 5e 5e 00 00 68 f8 98 c8 f7 7f 00 00 e8 eb ba c7 5e 5e 00 09 e8 e3 ba c7 5e 5e 01 08 e8 db ba c7 5e 5e 02 07 e8 d3 ba c7 5e 5e 03 06 e8 cb ba c7 5e 5e 04 05 e8 c3 ba c7 5e 5e 05 04 e8 bb ba c7 5e 5e 06 03 e8 b3 ba c7 5e 5e 07 02 e8 ab ba c7 5e 5e 08 01 e8 a3 ba c7 5e 5e 09 00 f8 f8 98 c8 f7 7f 00 00 e8 93 ba c7 5e 5e 00 00 a0 fa 98 c8 f7 7f 00 00 e8 83 ba c7 5e 5e 00 09 e8 7b ba c7 5e 5e 01 08 e8 73 ba c7 5e 5e 02 07 e8 6b ba c7 5e 5e 03 06 e8 63 ba c7 5e 5e 04 05 e8 5b ba c7 5e 5e 05 04 e8 53 ba c7 5e 5e 06 03 e8 4b ba c7 5e 5e 07 02 e8 43 ba c7 5e 5e 08 01 e8 3b ba c7 5e 5e 09 00 30 fb 98 c8 f7 7f 00 00 e8 2b ba c7 5e 5e 00 00 d8 fc 98 c8 f7 7f 00 00 e8 1b ba c7 5e 5e 00 09 e8 13 ba c7 5e 5e 01 08 e8 0b ba c7 5e 5e 02 07 e8 03 ba c7 5e 5e 03 06 e8 fb b9 c7 5e 5e 04 05 e8 f3 b9 c7 5e 5e 05 04 e8 eb b9 c7 5e 5e 06 03 e8 e3 b9 c7 5e 5e 07 02 e8 db b9 c7 5e 5e 08 01 e8 d3 b9 c7 5e 5e 09 00 68 fd 98 c8 f7 7f 00 00 e8 c3 b9 c7 5e 5e 00 00 10 ff 98 c8 f7 7f 00 00 e8 b3 b9 c7 5e 5e 00 00 78 01 9a c8 f7 7f 00 00 e8 a3 b9 c7 5e 5e 00 00 d8 01 9a c8 f7 7f 00 00 10 73 99 c8 f7 7f 00 00 0f 1f 44 00 00 48 b8 e8 94 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
66        | 7ff7c85e9cb0h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[64u]()                                 | LiteralExpr<Vector256<ulong>> eval<ulong>(IExpr<Vector256<ulong>> expr)                   | 0f 1f 44 00 00 48 b8 e8 94 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
67        | 7ff7c85e9ce0h   | 35      | hex://logix/LogicEngine?eval#eval_vector_expr256_g[64i]()                                 | LiteralExpr<Vector256<long>> eval<long>(IExpr<Vector256<long>> expr)                      | 0f 1f 44 00 00 48 b8 b0 7a 5e c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
68        | 7ff7c85e9d10h   | 231     | hex://logix/LogicEngine?satisfied#satisfied_g[8u](8u,8u)                                  | bit satisfied<byte>(ComparisonExpr<byte> expr, byte a, byte b)                            | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 10 ea 72 c7 f7 7f 00 00 ba 02 00 00 00 e8 ad d0 c7 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 71 fc ff ff 48 8b ce e8 01 bc ff ff 0f b6 40 08 0f b6 c0 3c ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 b8 78 99 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 72 c7 f7 7f 00 00 ba 02 00 00 00 e8 3d d0 c7 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 f9 fc ff ff 48 8b ce e8 71 bc ff ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
69        | 7ff7c85e9d80h   | 119     | hex://logix/LogicEngine?satisfied#satisfied_g[8i](8i,8i)                                  | bit satisfied<sbyte>(ComparisonExpr<sbyte> expr, sbyte a, sbyte b)                        | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 72 c7 f7 7f 00 00 ba 02 00 00 00 e8 3d d0 c7 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 f9 fc ff ff 48 8b ce e8 71 bc ff ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
70        | 7ff7c85e9e00h   | 119     | hex://logix/LogicEngine?satisfied#satisfied_g[16u](16u,16u)                               | bit satisfied<ushort>(ComparisonExpr<ushort> expr, ushort a, ushort b)                    | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 d8 6d 05 c8 f7 7f 00 00 ba 02 00 00 00 e8 bd cf c7 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 e0 fc ff ff 48 8b ce e8 a0 bc ff ff 0f b7 40 08 0f b7 c0 0f b7 c0 3d ff ff 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
71        | 7ff7c85e9e80h   | 119     | hex://logix/LogicEngine?satisfied#satisfied_g[16i](16i,16i)                               | bit satisfied<short>(ComparisonExpr<short> expr, short a, short b)                        | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 d8 73 05 c8 f7 7f 00 00 ba 02 00 00 00 e8 3d cf c7 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 c8 fc ff ff 48 8b ce e8 d0 bc ff ff 48 0f bf 40 08 48 0f bf c0 48 0f bf c0 3d ff 7f 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
72        | 7ff7c85e9f00h   | 1248    | hex://logix/LogicEngine?satisfied#satisfied_g[32u](32u,32u)                               | bit satisfied<uint>(ComparisonExpr<uint> expr, uint a, uint b)                            | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 b8 76 05 c8 f7 7f 00 00 ba 02 00 00 00 e8 bd ce c7 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 b2 fc ff ff 48 8b ce e8 02 bd ff ff 8b 40 08 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 18 7d 99 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 48 5f 7f c7 f7 7f 00 00 ba 02 00 00 00 e8 4d ce c7 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 aa fc ff ff 48 8b ce e8 32 bd ff ff 8b 40 08 3d ff ff ff 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 5b b6 c7 5e 5e 00 09 e8 53 b6 c7 5e 5e 01 08 e8 4b b6 c7 5e 5e 02 07 e8 43 b6 c7 5e 5e 03 06 e8 3b b6 c7 5e 5e 04 05 e8 33 b6 c7 5e 5e 05 04 e8 2b b6 c7 5e 5e 06 03 e8 23 b6 c7 5e 5e 07 02 e8 1b b6 c7 5e 5e 08 01 e8 13 b6 c7 5e 5e 09 00 a0 ff 98 c8 f7 7f 00 00 e8 03 b6 c7 5e 5e 00 00 38 02 9a c8 f7 7f 00 00 e8 f3 b5 c7 5e 5e 00 09 e8 eb b5 c7 5e 5e 01 08 e8 e3 b5 c7 5e 5e 02 07 e8 db b5 c7 5e 5e 03 06 e8 d3 b5 c7 5e 5e 04 05 e8 cb b5 c7 5e 5e 05 04 e8 c3 b5 c7 5e 5e 06 03 e8 bb b5 c7 5e 5e 07 02 e8 b3 b5 c7 5e 5e 08 01 e8 ab b5 c7 5e 5e 09 00 c8 02 9a c8 f7 7f 00 00 e8 9b b5 c7 5e 5e 00 0c e8 93 b5 c7 5e 5e 01 0b e8 8b b5 c7 5e 5e 02 0a e8 83 b5 c7 5e 5e 03 09 e8 7b b5 c7 5e 5e 04 08 e8 73 b5 c7 5e 5e 05 07 e8 6b b5 c7 5e 5e 06 06 e8 63 b5 c7 5e 5e 07 05 e8 5b b5 c7 5e 5e 08 04 e8 53 b5 c7 5e 5e 09 03 e8 4b b5 c7 5e 5e 0a 02 e8 43 b5 c7 5e 5e 0b 01 e8 3b b5 c7 5e 5e 0c 00 80 04 9a c8 f7 7f 00 00 e8 2b b5 c7 5e 5e 00 00 08 06 9a c8 f7 7f 00 00 e8 1b b5 c7 5e 5e 00 09 e8 13 b5 c7 5e 5e 01 08 e8 0b b5 c7 5e 5e 02 07 e8 03 b5 c7 5e 5e 03 06 e8 fb b4 c7 5e 5e 04 05 e8 f3 b4 c7 5e 5e 05 04 e8 eb b4 c7 5e 5e 06 03 e8 e3 b4 c7 5e 5e 07 02 e8 db b4 c7 5e 5e 08 01 e8 d3 b4 c7 5e 5e 09 00 e8 06 9a c8 f7 7f 00 00 e8 c3 b4 c7 5e 5e 00 03 e8 bb b4 c7 5e 5e 01 02 e8 b3 b4 c7 5e 5e 02 01 e8 ab b4 c7 5e 5e 03 00 80 08 9a c8 f7 7f 00 00 e8 9b b4 c7 5e 5e 00 00 f0 09 9a c8 f7 7f 00 00 e8 8b b4 c7 5e 5e 00 09 e8 83 b4 c7 5e 5e 01 08 e8 7b b4 c7 5e 5e 02 07 e8 73 b4 c7 5e 5e 03 06 e8 6b b4 c7 5e 5e 04 05 e8 63 b4 c7 5e 5e 05 04 e8 5b b4 c7 5e 5e 06 03 e8 53 b4 c7 5e 5e 07 02 e8 4b b4 c7 5e 5e 08 01 e8 43 b4 c7 5e 5e 09 00 80 0a 9a c8 f7 7f 00 00 e8 33 b4 c7 5e 5e 00 03 e8 2b b4 c7 5e 5e 03 02 e8 23 b4 c7 5e 5e 06 01 e8 1b b4 c7 5e 5e 09 00 60 0d 9a c8 f7 7f 00 00 e8 0b b4 c7 5e 5e 00 00 30 0e 9a c8 f7 7f 00 00 e8 fb b3 c7 5e 5e 00 0a e8 f3 b3 c7 5e 5e 01 09 e8 eb b3 c7 5e 5e 02 08 e8 e3 b3 c7 5e 5e 03 07 e8 db b3 c7 5e 5e 04 06 e8 d3 b3 c7 5e 5e 05 05 e8 cb b3 c7 5e 5e 06 04 e8 c3 b3 c7 5e 5e 07 03 e8 bb b3 c7 5e 5e 08 02 e8 b3 b3 c7 5e 5e 09 01 e8 ab b3 c7 5e 5e 0a 00 90 0e 9a c8 f7 7f 00 00 e8 9b b3 c7 5e 5e 00 00 10 10 9a c8 f7 7f 00 00 e8 8b b3 c7 5e 5e 00 00 e0 10 9a c8 f7 7f 00 00 e8 7b b3 c7 5e 5e 00 00 40 11 9a c8 f7 7f 00 00 e8 6b b3 c7 5e 5e 00 00 a0 11 9a c8 f7 7f 00 00 e8 5b b3 c7 5e 5e 00 09 e8 53 b3 c7 5e 5e 01 08 e8 4b b3 c7 5e 5e 02 07 e8 43 b3 c7 5e 5e 03 06 e8 3b b3 c7 5e 5e 04 05 e8 33 b3 c7 5e 5e 05 04 e8 2b b3 c7 5e 5e 06 03 e8 23 b3 c7 5e 5e 07 02 e8 1b b3 c7 5e 5e 08 01 e8 13 b3 c7 5e 5e 09 00 30 12 9a c8 f7 7f 00 00 e8 03 b3 c7 5e 5e 00 03 e8 fb b2 c7 5e 5e 03 02 e8 f3 b2 c7 5e 5e 06 01 e8 eb b2 c7 5e 5e 09 00 10 15 9a c8 f7 7f 00 00 e8 db b2 c7 5e 5e 00 00 e0 15 9a c8 f7 7f 00 00 e8 cb b2 c7 5e 5e 00 09 e8 c3 b2 c7 5e 5e 01 08 e8 bb b2 c7 5e 5e 02 07 e8 b3 b2 c7 5e 5e 03 06 e8 ab b2 c7 5e 5e 04 05 e8 a3 b2 c7 5e 5e 05 04 e8 9b b2 c7 5e 5e 06 03 e8 93 b2 c7 5e 5e 07 02 e8 8b b2 c7 5e 5e 08 01 e8 83 b2 c7 5e 5e 09 00 70 16 9a c8 f7 7f 00 00 e8 73 b2 c7 5e 5e 00 00 20 1a 9a c8 f7 7f 00 00 00 00 00 00 00 00 00 00
73        | 7ff7c85e9f70h   | 1136    | hex://logix/LogicEngine?satisfied#satisfied_g[32i](32i,32i)                               | bit satisfied<int>(ComparisonExpr<int> expr, int a, int b)                                | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 48 5f 7f c7 f7 7f 00 00 ba 02 00 00 00 e8 4d ce c7 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 aa fc ff ff 48 8b ce e8 32 bd ff ff 8b 40 08 3d ff ff ff 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 5b b6 c7 5e 5e 00 09 e8 53 b6 c7 5e 5e 01 08 e8 4b b6 c7 5e 5e 02 07 e8 43 b6 c7 5e 5e 03 06 e8 3b b6 c7 5e 5e 04 05 e8 33 b6 c7 5e 5e 05 04 e8 2b b6 c7 5e 5e 06 03 e8 23 b6 c7 5e 5e 07 02 e8 1b b6 c7 5e 5e 08 01 e8 13 b6 c7 5e 5e 09 00 a0 ff 98 c8 f7 7f 00 00 e8 03 b6 c7 5e 5e 00 00 38 02 9a c8 f7 7f 00 00 e8 f3 b5 c7 5e 5e 00 09 e8 eb b5 c7 5e 5e 01 08 e8 e3 b5 c7 5e 5e 02 07 e8 db b5 c7 5e 5e 03 06 e8 d3 b5 c7 5e 5e 04 05 e8 cb b5 c7 5e 5e 05 04 e8 c3 b5 c7 5e 5e 06 03 e8 bb b5 c7 5e 5e 07 02 e8 b3 b5 c7 5e 5e 08 01 e8 ab b5 c7 5e 5e 09 00 c8 02 9a c8 f7 7f 00 00 e8 9b b5 c7 5e 5e 00 0c e8 93 b5 c7 5e 5e 01 0b e8 8b b5 c7 5e 5e 02 0a e8 83 b5 c7 5e 5e 03 09 e8 7b b5 c7 5e 5e 04 08 e8 73 b5 c7 5e 5e 05 07 e8 6b b5 c7 5e 5e 06 06 e8 63 b5 c7 5e 5e 07 05 e8 5b b5 c7 5e 5e 08 04 e8 53 b5 c7 5e 5e 09 03 e8 4b b5 c7 5e 5e 0a 02 e8 43 b5 c7 5e 5e 0b 01 e8 3b b5 c7 5e 5e 0c 00 80 04 9a c8 f7 7f 00 00 e8 2b b5 c7 5e 5e 00 00 08 06 9a c8 f7 7f 00 00 e8 1b b5 c7 5e 5e 00 09 e8 13 b5 c7 5e 5e 01 08 e8 0b b5 c7 5e 5e 02 07 e8 03 b5 c7 5e 5e 03 06 e8 fb b4 c7 5e 5e 04 05 e8 f3 b4 c7 5e 5e 05 04 e8 eb b4 c7 5e 5e 06 03 e8 e3 b4 c7 5e 5e 07 02 e8 db b4 c7 5e 5e 08 01 e8 d3 b4 c7 5e 5e 09 00 e8 06 9a c8 f7 7f 00 00 e8 c3 b4 c7 5e 5e 00 03 e8 bb b4 c7 5e 5e 01 02 e8 b3 b4 c7 5e 5e 02 01 e8 ab b4 c7 5e 5e 03 00 80 08 9a c8 f7 7f 00 00 e8 9b b4 c7 5e 5e 00 00 f0 09 9a c8 f7 7f 00 00 e8 8b b4 c7 5e 5e 00 09 e8 83 b4 c7 5e 5e 01 08 e8 7b b4 c7 5e 5e 02 07 e8 73 b4 c7 5e 5e 03 06 e8 6b b4 c7 5e 5e 04 05 e8 63 b4 c7 5e 5e 05 04 e8 5b b4 c7 5e 5e 06 03 e8 53 b4 c7 5e 5e 07 02 e8 4b b4 c7 5e 5e 08 01 e8 43 b4 c7 5e 5e 09 00 80 0a 9a c8 f7 7f 00 00 e8 33 b4 c7 5e 5e 00 03 e8 2b b4 c7 5e 5e 03 02 e8 23 b4 c7 5e 5e 06 01 e8 1b b4 c7 5e 5e 09 00 60 0d 9a c8 f7 7f 00 00 e8 0b b4 c7 5e 5e 00 00 30 0e 9a c8 f7 7f 00 00 e8 fb b3 c7 5e 5e 00 0a e8 f3 b3 c7 5e 5e 01 09 e8 eb b3 c7 5e 5e 02 08 e8 e3 b3 c7 5e 5e 03 07 e8 db b3 c7 5e 5e 04 06 e8 d3 b3 c7 5e 5e 05 05 e8 cb b3 c7 5e 5e 06 04 e8 c3 b3 c7 5e 5e 07 03 e8 bb b3 c7 5e 5e 08 02 e8 b3 b3 c7 5e 5e 09 01 e8 ab b3 c7 5e 5e 0a 00 90 0e 9a c8 f7 7f 00 00 e8 9b b3 c7 5e 5e 00 00 10 10 9a c8 f7 7f 00 00 e8 8b b3 c7 5e 5e 00 00 e0 10 9a c8 f7 7f 00 00 e8 7b b3 c7 5e 5e 00 00 40 11 9a c8 f7 7f 00 00 e8 6b b3 c7 5e 5e 00 00 a0 11 9a c8 f7 7f 00 00 e8 5b b3 c7 5e 5e 00 09 e8 53 b3 c7 5e 5e 01 08 e8 4b b3 c7 5e 5e 02 07 e8 43 b3 c7 5e 5e 03 06 e8 3b b3 c7 5e 5e 04 05 e8 33 b3 c7 5e 5e 05 04 e8 2b b3 c7 5e 5e 06 03 e8 23 b3 c7 5e 5e 07 02 e8 1b b3 c7 5e 5e 08 01 e8 13 b3 c7 5e 5e 09 00 30 12 9a c8 f7 7f 00 00 e8 03 b3 c7 5e 5e 00 03 e8 fb b2 c7 5e 5e 03 02 e8 f3 b2 c7 5e 5e 06 01 e8 eb b2 c7 5e 5e 09 00 10 15 9a c8 f7 7f 00 00 e8 db b2 c7 5e 5e 00 00 e0 15 9a c8 f7 7f 00 00 e8 cb b2 c7 5e 5e 00 09 e8 c3 b2 c7 5e 5e 01 08 e8 bb b2 c7 5e 5e 02 07 e8 b3 b2 c7 5e 5e 03 06 e8 ab b2 c7 5e 5e 04 05 e8 a3 b2 c7 5e 5e 05 04 e8 9b b2 c7 5e 5e 06 03 e8 93 b2 c7 5e 5e 07 02 e8 8b b2 c7 5e 5e 08 01 e8 83 b2 c7 5e 5e 09 00 70 16 9a c8 f7 7f 00 00 e8 73 b2 c7 5e 5e 00 00 20 1a 9a c8 f7 7f 00 00 00 00 00 00 00 00 00 00
74        | 7ff7c85ea3f0h   | 231     | hex://logix/LogicEngine?satisfied#satisfied_g[64u](64u,64u)                               | bit satisfied<ulong>(ComparisonExpr<ulong> expr, ulong a, ulong b)                        | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 d0 f6 a1 c7 f7 7f 00 00 ba 02 00 00 00 e8 cc c9 c7 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 e7 fb ff ff 48 8b ce e8 67 f8 ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 78 7f 99 c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 58 7f 05 c8 f7 7f 00 00 ba 02 00 00 00 e8 5c c9 c7 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 df fb ff ff 48 8b ce e8 df b8 ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
75        | 7ff7c85ea460h   | 119     | hex://logix/LogicEngine?satisfied#satisfied_g[64i](64i,64i)                               | bit satisfied<long>(ComparisonExpr<long> expr, long a, long b)                            | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 58 7f 05 c8 f7 7f 00 00 ba 02 00 00 00 e8 5c c9 c7 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 df fb ff ff 48 8b ce e8 df b8 ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
76        | 7ff7c85ea4e0h   | 147     | hex://logix/LogicEngine?satisfied#satisfied_g[8u](v128x8u,v128x8u)                        | bit satisfied<byte>(ComparisonExpr<Vector128<byte>> expr, Vector128<byte> a, Vector128<byte> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 78 0c 9a c8 f7 7f 00 00 ba 02 00 00 00 e8 d9 c8 c7 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 ba fc ff ff 48 8b cb e8 62 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
77        | 7ff7c85ea580h   | 1176    | hex://logix/LogicEngine?satisfied#satisfied_g[8i](v128x8i,v128x8i)                        | bit satisfied<sbyte>(ComparisonExpr<Vector128<sbyte>> expr, Vector128<sbyte> a, Vector128<sbyte> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 28 14 9a c8 f7 7f 00 00 ba 02 00 00 00 e8 39 c8 c7 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 4a fd ff ff 48 8b cb e8 a2 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 23 b0 c7 5e 5e 00 03 e8 1b b0 c7 5e 5e 03 02 e8 13 b0 c7 5e 5e 06 01 e8 0b b0 c7 5e 5e 09 00 50 19 9a c8 f7 7f 00 00 e8 fb af c7 5e 5e 00 09 e8 f3 af c7 5e 5e 01 08 e8 eb af c7 5e 5e 02 07 e8 e3 af c7 5e 5e 03 06 e8 db af c7 5e 5e 04 05 e8 d3 af c7 5e 5e 05 04 e8 cb af c7 5e 5e 06 03 e8 c3 af c7 5e 5e 07 02 e8 bb af c7 5e 5e 08 01 e8 b3 af c7 5e 5e 09 00 b0 1a 9a c8 f7 7f 00 00 e8 a3 af c7 5e 5e 00 03 e8 9b af c7 5e 5e 03 02 e8 93 af c7 5e 5e 06 01 e8 8b af c7 5e 5e 09 00 90 1d 9a c8 f7 7f 00 00 e8 7b af c7 5e 5e 00 00 60 1e 9a c8 f7 7f 00 00 e8 6b af c7 5e 5e 00 09 e8 63 af c7 5e 5e 01 08 e8 5b af c7 5e 5e 02 07 e8 53 af c7 5e 5e 03 06 e8 4b af c7 5e 5e 04 05 e8 43 af c7 5e 5e 05 04 e8 3b af c7 5e 5e 06 03 e8 33 af c7 5e 5e 07 02 e8 2b af c7 5e 5e 08 01 e8 23 af c7 5e 5e 09 00 f0 1e 9a c8 f7 7f 00 00 e8 13 af c7 5e 5e 00 03 e8 0b af c7 5e 5e 03 02 e8 03 af c7 5e 5e 06 01 e8 fb ae c7 5e 5e 09 00 d0 21 9a c8 f7 7f 00 00 e8 eb ae c7 5e 5e 00 00 a0 22 9a c8 f7 7f 00 00 e8 db ae c7 5e 5e 00 09 e8 d3 ae c7 5e 5e 01 08 e8 cb ae c7 5e 5e 02 07 e8 c3 ae c7 5e 5e 03 06 e8 bb ae c7 5e 5e 04 05 e8 b3 ae c7 5e 5e 05 04 e8 ab ae c7 5e 5e 06 03 e8 a3 ae c7 5e 5e 07 02 e8 9b ae c7 5e 5e 08 01 e8 93 ae c7 5e 5e 09 00 30 23 9a c8 f7 7f 00 00 e8 83 ae c7 5e 5e 00 03 e8 7b ae c7 5e 5e 03 02 e8 73 ae c7 5e 5e 06 01 e8 6b ae c7 5e 5e 09 00 10 26 9a c8 f7 7f 00 00 e8 5b ae c7 5e 5e 00 00 e0 26 9a c8 f7 7f 00 00 e8 4b ae c7 5e 5e 00 09 e8 43 ae c7 5e 5e 01 08 e8 3b ae c7 5e 5e 02 07 e8 33 ae c7 5e 5e 03 06 e8 2b ae c7 5e 5e 04 05 e8 23 ae c7 5e 5e 05 04 e8 1b ae c7 5e 5e 06 03 e8 13 ae c7 5e 5e 07 02 e8 0b ae c7 5e 5e 08 01 e8 03 ae c7 5e 5e 09 00 70 27 9a c8 f7 7f 00 00 e8 f3 ad c7 5e 5e 00 03 e8 eb ad c7 5e 5e 01 02 e8 e3 ad c7 5e 5e 02 01 e8 db ad c7 5e 5e 03 00 08 29 9a c8 f7 7f 00 00 e8 cb ad c7 5e 5e 00 03 e8 c3 ad c7 5e 5e 03 02 e8 bb ad c7 5e 5e 06 01 e8 b3 ad c7 5e 5e 09 00 38 2b 9a c8 f7 7f 00 00 e8 a3 ad c7 5e 5e 00 00 08 2c 9a c8 f7 7f 00 00 e8 93 ad c7 5e 5e 00 00 68 2c 9a c8 f7 7f 00 00 e8 83 ad c7 5e 5e 00 00 c8 2c 9a c8 f7 7f 00 00 e8 73 ad c7 5e 5e 00 09 e8 6b ad c7 5e 5e 01 08 e8 63 ad c7 5e 5e 02 07 e8 5b ad c7 5e 5e 03 06 e8 53 ad c7 5e 5e 04 05 e8 4b ad c7 5e 5e 05 04 e8 43 ad c7 5e 5e 06 03 e8 3b ad c7 5e 5e 07 02 e8 33 ad c7 5e 5e 08 01 e8 2b ad c7 5e 5e 09 00 58 2d 9a c8 f7 7f 00 00 e8 1b ad c7 5e 5e 00 03 e8 13 ad c7 5e 5e 03 02 e8 0b ad c7 5e 5e 06 01 e8 03 ad c7 5e 5e 09 00 38 30 9a c8 f7 7f 00 00 e8 f3 ac c7 5e 5e 00 0c e8 eb ac c7 5e 5e 01 0b e8 e3 ac c7 5e 5e 02 0a e8 db ac c7 5e 5e 03 09 e8 d3 ac c7 5e 5e 04 08 e8 cb ac c7 5e 5e 05 07 e8 c3 ac c7 5e 5e 06 06 e8 bb ac c7 5e 5e 07 05 e8 b3 ac c7 5e 5e 08 04 e8 ab ac c7 5e 5e 09 03 e8 a3 ac c7 5e 5e 0a 02 e8 9b ac c7 5e 5e 0b 01 e8 93 ac c7 5e 5e 0c 00 38 31 9a c8 f7 7f 00 00 e8 83 ac c7 5e 5e 00 00 c0 32 9a c8 f7 7f 00 00 e8 73 ac c7 5e 5e 00 03 e8 6b ac c7 5e 5e 01 02 e8 63 ac c7 5e 5e 02 01 e8 5b ac c7 5e 5e 03 00 38 35 9a c8 f7 7f 00 00 e8 4b ac c7 5e 5e 00 00 a8 36 9a c8 f7 7f 00 00 e8 3b ac c7 5e 5e 00 00 e8 3a 9a c8 f7 7f 00 00 00 00 00 00 00 00 00 00
78        | 7ff7c85eaa20h   | 147     | hex://logix/LogicEngine?satisfied#satisfied_g[16u](v128x16u,v128x16u)                     | bit satisfied<ushort>(ComparisonExpr<Vector128<ushort>> expr, Vector128<ushort> a, Vector128<ushort> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 68 18 9a c8 f7 7f 00 00 ba 02 00 00 00 e8 99 c3 c7 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 3a f9 ff ff 48 8b cb e8 f2 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
79        | 7ff7c85eaac0h   | 147     | hex://logix/LogicEngine?satisfied#satisfied_g[16i](v128x16i,v128x16i)                     | bit satisfied<short>(ComparisonExpr<Vector128<short>> expr, Vector128<short> a, Vector128<short> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 a8 1c 9a c8 f7 7f 00 00 ba 02 00 00 00 e8 f9 c2 c7 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 6a fb ff ff 48 8b cb e8 32 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
80        | 7ff7c85eab60h   | 147     | hex://logix/LogicEngine?satisfied#satisfied_g[32u](v128x32u,v128x32u)                     | bit satisfied<uint>(ComparisonExpr<Vector128<uint>> expr, Vector128<uint> a, Vector128<uint> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 e8 20 9a c8 f7 7f 00 00 ba 02 00 00 00 e8 59 c2 c7 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 5a fb ff ff 48 8b cb e8 72 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
81        | 7ff7c85eac00h   | 147     | hex://logix/LogicEngine?satisfied#satisfied_g[32i](v128x32i,v128x32i)                     | bit satisfied<int>(ComparisonExpr<Vector128<int>> expr, Vector128<int> a, Vector128<int> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 28 25 9a c8 f7 7f 00 00 ba 02 00 00 00 e8 b9 c1 c7 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 4a fb ff ff 48 8b cb e8 b2 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
82        | 7ff7c85eaca0h   | 147     | hex://logix/LogicEngine?satisfied#satisfied_g[64u](v128x64u,v128x64u)                     | bit satisfied<ulong>(ComparisonExpr<Vector128<ulong>> expr, Vector128<ulong> a, Vector128<ulong> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 50 2a 9a c8 f7 7f 00 00 ba 02 00 00 00 e8 19 c1 c7 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 3a fb ff ff 48 8b cb e8 ba fb ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
83        | 7ff7c85ead40h   | 1335    | hex://logix/LogicEngine?satisfied#satisfied_g[64i](v128x64i,v128x64i)                     | bit satisfied<long>(ComparisonExpr<Vector128<long>> expr, Vector128<long> a, Vector128<long> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 50 2f 9a c8 f7 7f 00 00 ba 02 00 00 00 e8 79 c0 c7 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 72 fb ff ff 48 8b cb e8 62 c6 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 63 a8 c7 5e 5e 00 09 e8 5b a8 c7 5e 5e 01 08 e8 53 a8 c7 5e 5e 02 07 e8 4b a8 c7 5e 5e 03 06 e8 43 a8 c7 5e 5e 04 05 e8 3b a8 c7 5e 5e 05 04 e8 33 a8 c7 5e 5e 06 03 e8 2b a8 c7 5e 5e 07 02 e8 23 a8 c7 5e 5e 08 01 e8 1b a8 c7 5e 5e 09 00 a0 33 9a c8 f7 7f 00 00 e8 0b a8 c7 5e 5e 00 09 e8 03 a8 c7 5e 5e 01 08 e8 fb a7 c7 5e 5e 02 07 e8 f3 a7 c7 5e 5e 03 06 e8 eb a7 c7 5e 5e 04 05 e8 e3 a7 c7 5e 5e 05 04 e8 db a7 c7 5e 5e 06 03 e8 d3 a7 c7 5e 5e 07 02 e8 cb a7 c7 5e 5e 08 01 e8 c3 a7 c7 5e 5e 09 00 38 37 9a c8 f7 7f 00 00 e8 b3 a7 c7 5e 5e 00 03 e8 ab a7 c7 5e 5e 03 02 e8 a3 a7 c7 5e 5e 06 01 e8 9b a7 c7 5e 5e 09 00 18 3a 9a c8 f7 7f 00 00 e8 8b a7 c7 5e 5e 00 0a e8 83 a7 c7 5e 5e 01 09 e8 7b a7 c7 5e 5e 02 08 e8 73 a7 c7 5e 5e 03 07 e8 6b a7 c7 5e 5e 04 06 e8 63 a7 c7 5e 5e 05 05 e8 5b a7 c7 5e 5e 06 04 e8 53 a7 c7 5e 5e 07 03 e8 4b a7 c7 5e 5e 08 02 e8 43 a7 c7 5e 5e 09 01 e8 3b a7 c7 5e 5e 0a 00 48 3b 9a c8 f7 7f 00 00 e8 2b a7 c7 5e 5e 00 00 c8 3c 9a c8 f7 7f 00 00 e8 1b a7 c7 5e 5e 00 00 98 3d 9a c8 f7 7f 00 00 e8 0b a7 c7 5e 5e 00 00 f8 3d 9a c8 f7 7f 00 00 e8 fb a6 c7 5e 5e 00 00 58 3e 9a c8 f7 7f 00 00 e8 eb a6 c7 5e 5e 00 09 e8 e3 a6 c7 5e 5e 01 08 e8 db a6 c7 5e 5e 02 07 e8 d3 a6 c7 5e 5e 03 06 e8 cb a6 c7 5e 5e 04 05 e8 c3 a6 c7 5e 5e 05 04 e8 bb a6 c7 5e 5e 06 03 e8 b3 a6 c7 5e 5e 07 02 e8 ab a6 c7 5e 5e 08 01 e8 a3 a6 c7 5e 5e 09 00 e8 3e 9a c8 f7 7f 00 00 e8 93 a6 c7 5e 5e 00 03 e8 8b a6 c7 5e 5e 03 02 e8 83 a6 c7 5e 5e 06 01 e8 7b a6 c7 5e 5e 09 00 c8 41 9a c8 f7 7f 00 00 e8 6b a6 c7 5e 5e 00 00 98 42 9a c8 f7 7f 00 00 e8 5b a6 c7 5e 5e 00 09 e8 53 a6 c7 5e 5e 01 08 e8 4b a6 c7 5e 5e 02 07 e8 43 a6 c7 5e 5e 03 06 e8 3b a6 c7 5e 5e 04 05 e8 33 a6 c7 5e 5e 05 04 e8 2b a6 c7 5e 5e 06 03 e8 23 a6 c7 5e 5e 07 02 e8 1b a6 c7 5e 5e 08 01 e8 13 a6 c7 5e 5e 09 00 28 43 9a c8 f7 7f 00 00 e8 03 a6 c7 5e 5e 00 03 e8 fb a5 c7 5e 5e 03 02 e8 f3 a5 c7 5e 5e 06 01 e8 eb a5 c7 5e 5e 09 00 08 46 9a c8 f7 7f 00 00 e8 db a5 c7 5e 5e 00 00 d8 46 9a c8 f7 7f 00 00 e8 cb a5 c7 5e 5e 00 09 e8 c3 a5 c7 5e 5e 01 08 e8 bb a5 c7 5e 5e 02 07 e8 b3 a5 c7 5e 5e 03 06 e8 ab a5 c7 5e 5e 04 05 e8 a3 a5 c7 5e 5e 05 04 e8 9b a5 c7 5e 5e 06 03 e8 93 a5 c7 5e 5e 07 02 e8 8b a5 c7 5e 5e 08 01 e8 83 a5 c7 5e 5e 09 00 68 47 9a c8 f7 7f 00 00 e8 73 a5 c7 5e 5e 00 03 e8 6b a5 c7 5e 5e 03 02 e8 63 a5 c7 5e 5e 06 01 e8 5b a5 c7 5e 5e 09 00 48 4a 9a c8 f7 7f 00 00 e8 4b a5 c7 5e 5e 00 00 18 4b 9a c8 f7 7f 00 00 e8 3b a5 c7 5e 5e 00 09 e8 33 a5 c7 5e 5e 01 08 e8 2b a5 c7 5e 5e 02 07 e8 23 a5 c7 5e 5e 03 06 e8 1b a5 c7 5e 5e 04 05 e8 13 a5 c7 5e 5e 05 04 e8 0b a5 c7 5e 5e 06 03 e8 03 a5 c7 5e 5e 07 02 e8 fb a4 c7 5e 5e 08 01 e8 f3 a4 c7 5e 5e 09 00 a8 4b 9a c8 f7 7f 00 00 e8 e3 a4 c7 5e 5e 00 03 e8 db a4 c7 5e 5e 03 02 e8 d3 a4 c7 5e 5e 06 01 e8 cb a4 c7 5e 5e 09 00 88 4e 9a c8 f7 7f 00 00 e8 bb a4 c7 5e 5e 00 00 58 4f 9a c8 f7 7f 00 00 e8 ab a4 c7 5e 5e 00 03 e8 a3 a4 c7 5e 5e 03 02 e8 9b a4 c7 5e 5e 06 01 e8 93 a4 c7 5e 5e 09 00 c8 52 9a c8 f7 7f 00 00 e8 83 a4 c7 5e 5e 00 00 98 53 9a c8 f7 7f 00 00 e8 73 a4 c7 5e 5e 00 00 c0 58 9a c8 f7 7f 00 00 50 95 99 c8 f7 7f 00 00 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 30 39 9a c8 f7 7f 00 00 ba 02 00 00 00 e8 d9 bb c7 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 3a fc ff ff 48 8b cb e8 a2 c2 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
84        | 7ff7c85eb1e0h   | 151     | hex://logix/LogicEngine?satisfied#satisfied_g[8u](v256x8u,v256x8u)                        | bit satisfied<byte>(ComparisonExpr<Vector256<byte>> expr, Vector256<byte> a, Vector256<byte> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 30 39 9a c8 f7 7f 00 00 ba 02 00 00 00 e8 d9 bb c7 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 3a fc ff ff 48 8b cb e8 a2 c2 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
85        | 7ff7c85eb280h   | 151     | hex://logix/LogicEngine?satisfied#satisfied_g[8i](v256x8i,v256x8i)                        | bit satisfied<sbyte>(ComparisonExpr<Vector256<sbyte>> expr, Vector256<sbyte> a, Vector256<sbyte> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 e0 40 9a c8 f7 7f 00 00 ba 02 00 00 00 e8 39 bb c7 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 ba fc ff ff 48 8b cb e8 12 c3 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
86        | 7ff7c85eb320h   | 151     | hex://logix/LogicEngine?satisfied#satisfied_g[16u](v256x16u,v256x16u)                     | bit satisfied<ushort>(ComparisonExpr<Vector256<ushort>> expr, Vector256<ushort> a, Vector256<ushort> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 20 45 9a c8 f7 7f 00 00 ba 02 00 00 00 e8 99 ba c7 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 aa fc ff ff 48 8b cb e8 92 c7 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
87        | 7ff7c85eb3c0h   | 151     | hex://logix/LogicEngine?satisfied#satisfied_g[16i](v256x16i,v256x16i)                     | bit satisfied<short>(ComparisonExpr<Vector256<short>> expr, Vector256<short> a, Vector256<short> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 60 49 9a c8 f7 7f 00 00 ba 02 00 00 00 e8 f9 b9 c7 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 9a fc ff ff 48 8b cb e8 02 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
88        | 7ff7c85eb460h   | 608     | hex://logix/LogicEngine?satisfied#satisfied_g[32u](v256x32u,v256x32u)                     | bit satisfied<uint>(ComparisonExpr<Vector256<uint>> expr, Vector256<uint> a, Vector256<uint> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 a0 4d 9a c8 f7 7f 00 00 ba 02 00 00 00 e8 59 b9 c7 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 8a fc ff ff 48 8b cb e8 72 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 43 a1 c7 5e 5e 00 09 e8 3b a1 c7 5e 5e 01 08 e8 33 a1 c7 5e 5e 02 07 e8 2b a1 c7 5e 5e 03 06 e8 23 a1 c7 5e 5e 04 05 e8 1b a1 c7 5e 5e 05 04 e8 13 a1 c7 5e 5e 06 03 e8 0b a1 c7 5e 5e 07 02 e8 03 a1 c7 5e 5e 08 01 e8 fb a0 c7 5e 5e 09 00 e8 4f 9a c8 f7 7f 00 00 e8 eb a0 c7 5e 5e 00 09 e8 e3 a0 c7 5e 5e 01 08 e8 db a0 c7 5e 5e 02 07 e8 d3 a0 c7 5e 5e 03 06 e8 cb a0 c7 5e 5e 04 05 e8 c3 a0 c7 5e 5e 05 04 e8 bb a0 c7 5e 5e 06 03 e8 b3 a0 c7 5e 5e 07 02 e8 ab a0 c7 5e 5e 08 01 e8 a3 a0 c7 5e 5e 09 00 28 54 9a c8 f7 7f 00 00 e8 93 a0 c7 5e 5e 00 03 e8 8b a0 c7 5e 5e 01 02 e8 83 a0 c7 5e 5e 02 01 e8 7b a0 c7 5e 5e 03 00 c0 55 9a c8 f7 7f 00 00 e8 6b a0 c7 5e 5e 00 03 e8 63 a0 c7 5e 5e 03 02 e8 5b a0 c7 5e 5e 06 01 e8 53 a0 c7 5e 5e 09 00 f0 57 9a c8 f7 7f 00 00 e8 43 a0 c7 5e 5e 00 00 20 59 9a c8 f7 7f 00 00 e8 33 a0 c7 5e 5e 00 00 80 59 9a c8 f7 7f 00 00 e8 23 a0 c7 5e 5e 00 09 e8 1b a0 c7 5e 5e 01 08 e8 13 a0 c7 5e 5e 02 07 e8 0b a0 c7 5e 5e 03 06 e8 03 a0 c7 5e 5e 04 05 e8 fb 9f c7 5e 5e 05 04 e8 f3 9f c7 5e 5e 06 03 e8 eb 9f c7 5e 5e 07 02 e8 e3 9f c7 5e 5e 08 01 e8 db 9f c7 5e 5e 09 00 10 5a 9a c8 f7 7f 00 00 e8 cb 9f c7 5e 5e 00 03 e8 c3 9f c7 5e 5e 03 02 e8 bb 9f c7 5e 5e 06 01 e8 b3 9f c7 5e 5e 09 00 f0 5c 9a c8 f7 7f 00 00 e8 a3 9f c7 5e 5e 00 00 d8 5f 9a c8 f7 7f 00 00 e8 93 9f c7 5e 5e 00 00 50 60 9a c8 f7 7f 00 00 00 00 00 00 00 00 00 00
89        | 7ff7c85eb900h   | 151     | hex://logix/LogicEngine?satisfied#satisfied_g[32i](v256x32i,v256x32i)                     | bit satisfied<int>(ComparisonExpr<Vector256<int>> expr, Vector256<int> a, Vector256<int> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 e0 51 9a c8 f7 7f 00 00 ba 02 00 00 00 e8 b9 b4 c7 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 e2 c4 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
90        | 7ff7c85eb9a0h   | 151     | hex://logix/LogicEngine?satisfied#satisfied_g[64u](v256x64u,v256x64u)                     | bit satisfied<ulong>(ComparisonExpr<Vector256<ulong>> expr, Vector256<ulong> a, Vector256<ulong> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 08 57 9a c8 f7 7f 00 00 ba 02 00 00 00 e8 19 b4 c7 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 9a fb ff ff 48 8b cb e8 0a fc ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
91        | 7ff7c85eba40h   | 151     | hex://logix/LogicEngine?satisfied#satisfied_g[64i](v256x64i,v256x64i)                     | bit satisfied<long>(ComparisonExpr<Vector256<long>> expr, Vector256<long> a, Vector256<long> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 08 5c 9a c8 f7 7f 00 00 ba 02 00 00 00 e8 79 b3 c7 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 c2 fb ff ff 48 8b cb e8 b2 c4 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
92        | 7ff7c85ebae0h   | 35      | hex://logix/LogicEngine?eval#eval_()                                                      | bit eval(ILogicExpr expr)                                                                 | 0f 1f 44 00 00 48 b8 d8 b6 e3 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
93        | 7ff7c85ebb10h   | 607     | hex://logix/LogicEngine?satisfied#satisfied_(1u,1u)                                       | bit satisfied(ComparisonExpr expr, bit a, bit b)                                          | 57 56 48 83 ec 28 48 8b f1 41 8b f8 8b 0e 48 8b 4e 18 83 79 08 00 76 48 48 8b 49 10 49 bb 30 0c 63 c7 f7 7f 00 00 39 09 ff 15 f2 50 04 ff 48 8b 4e 18 83 79 08 01 76 28 48 8b 49 18 8b d7 49 bb 38 0c 63 c7 f7 7f 00 00 39 09 ff 15 d8 50 04 ff 48 8b ce e8 70 fb 84 ff 90 48 83 c4 28 5e 5f c3 e8 5b 42 da 5e cc 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 30 a2 99 c8 f7 7f 00 00 55 41 57 41 56 57 56 53 48 83 ec 48 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 4e 10 48 8b 5f 10 41 be b6 00 00 00 41 bf 01 00 00 00 8b 49 08 3b 4b 08 0f 85 cb 00 00 00 e8 e0 05 85 ff 48 8b c8 49 bb 40 0c 63 c7 f7 7f 00 00 39 09 ff 15 5b 50 04 ff 48 89 45 c8 48 8b 4d c8 49 bb 48 0c 63 c7 f7 7f 00 00 39 09 ff 15 49 50 04 ff 85 c0 74 51 48 8b 4d c8 49 bb 50 0c 63 c7 f7 7f 00 00 39 09 ff 15 37 50 04 ff 48 8b d0 48 8b ce e8 f4 10 85 ff 48 8b ce e8 ac fa 84 ff 8b d8 48 8b cf e8 a2 fa 84 ff 3b d8 75 32 48 8b 4d c8 49 bb 48 0c 63 c7 f7 7f 00 00 39 09 ff 15 f8 4f 04 ff 85 c0 75 af 48 8b 4d c8 49 bb 58 0c 63 c7 f7 7f 00 00 39 09 ff 15 ee 4f 04 ff eb 18 48 8b cc e8 7e 00 00 00 90 33 c0 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 8b f1 8b 7b 08 b9 19 02 00 00 48 ba c0 07 b0 c7 f7 7f 00 00 e8 01 49 da 5e 48 8b d8 b9 25 02 00 00 48 ba c0 07 b0 c7 f7 7f 00 00 e8 ea 48 da 5e 4c 8b c8 4c 8d 45 d0 45 88 38 45 89 70 04 4c 8b c3 8b ce 8b d7 48 8b 45 d0 48 89 44 24 20 e8 ff 91 17 ff 48 8b c8 e8 0f fc be 5e cc 55 41 57 41 56 57 56 53 48 83 ec 38 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c8 00 74 16 48 8b 4d c8 49 bb 58 0c 63 c7 f7 7f 00 00 39 09 ff 15 30 4f 04 ff 90 48 83 c4 38 5b 5e 5f 41 5e 41 5f 5d c3 00 00 19 0c 07 00 0c 82 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 19 0c 07 00 0c 62 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 00 00 00 00 00 00 00
94        | 7ff7c85ebb90h   | 479     | hex://logix/LogicEngine?equal#equal_()                                                    | bit equal(VariedLogicExpr a, VariedLogicExpr b)                                           | 55 41 57 41 56 57 56 53 48 83 ec 48 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 4e 10 48 8b 5f 10 41 be b6 00 00 00 41 bf 01 00 00 00 8b 49 08 3b 4b 08 0f 85 cb 00 00 00 e8 e0 05 85 ff 48 8b c8 49 bb 40 0c 63 c7 f7 7f 00 00 39 09 ff 15 5b 50 04 ff 48 89 45 c8 48 8b 4d c8 49 bb 48 0c 63 c7 f7 7f 00 00 39 09 ff 15 49 50 04 ff 85 c0 74 51 48 8b 4d c8 49 bb 50 0c 63 c7 f7 7f 00 00 39 09 ff 15 37 50 04 ff 48 8b d0 48 8b ce e8 f4 10 85 ff 48 8b ce e8 ac fa 84 ff 8b d8 48 8b cf e8 a2 fa 84 ff 3b d8 75 32 48 8b 4d c8 49 bb 48 0c 63 c7 f7 7f 00 00 39 09 ff 15 f8 4f 04 ff 85 c0 75 af 48 8b 4d c8 49 bb 58 0c 63 c7 f7 7f 00 00 39 09 ff 15 ee 4f 04 ff eb 18 48 8b cc e8 7e 00 00 00 90 33 c0 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 8b f1 8b 7b 08 b9 19 02 00 00 48 ba c0 07 b0 c7 f7 7f 00 00 e8 01 49 da 5e 48 8b d8 b9 25 02 00 00 48 ba c0 07 b0 c7 f7 7f 00 00 e8 ea 48 da 5e 4c 8b c8 4c 8d 45 d0 45 88 38 45 89 70 04 4c 8b c3 8b ce 8b d7 48 8b 45 d0 48 89 44 24 20 e8 ff 91 17 ff 48 8b c8 e8 0f fc be 5e cc 55 41 57 41 56 57 56 53 48 83 ec 38 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c8 00 74 16 48 8b 4d c8 49 bb 58 0c 63 c7 f7 7f 00 00 39 09 ff 15 30 4f 04 ff 90 48 83 c4 38 5b 5e 5f 41 5e 41 5f 5d c3 00 00 19 0c 07 00 0c 82 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 19 0c 07 00 0c 62 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 00 00 00 00 00 00 00
