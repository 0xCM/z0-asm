Sequence  | Address         | Length  | Uri                                                                                       | OpSig                                                                                     | Data
0         | 7ff7c7e4a390h   | 67      | hex://asmcore/AsmConstructs?alloc#alloc_g[8u](32i)                                        | Span<byte> alloc<byte>(int len)                                                           | 56 48 83 ec 20 48 8b f1 48 63 d2 48 b9 10 ea 72 c7 f7 7f 00 00 e8 36 ca 41 5f 48 8d 50 10 8b 40 08 48 89 16 89 46 08 48 8b c6 48 83 c4 20 5e c3 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
1         | 7ff7c7e4cee0h   | 67      | hex://asmcore/AsmConstructs?alloc#alloc_g[8i](32i)                                        | Span<sbyte> alloc<sbyte>(int len)                                                         | 56 48 83 ec 20 48 8b f1 48 63 d2 48 b9 98 f0 72 c7 f7 7f 00 00 e8 e6 9e 41 5f 48 8d 50 10 8b 40 08 48 89 16 89 46 08 48 8b c6 48 83 c4 20 5e c3 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
2         | 7ff7c7e4cf30h   | 67      | hex://asmcore/AsmConstructs?alloc#alloc_g[16u](32i)                                       | Span<ushort> alloc<ushort>(int len)                                                       | 56 48 83 ec 20 48 8b f1 48 63 d2 48 b9 d8 6d 05 c8 f7 7f 00 00 e8 96 9e 41 5f 48 8d 50 10 8b 40 08 48 89 16 89 46 08 48 8b c6 48 83 c4 20 5e c3 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
3         | 7ff7c7e4cf80h   | 1096    | hex://asmcore/AsmConstructs?alloc#alloc_g[16i](32i)                                       | Span<short> alloc<short>(int len)                                                         | 56 48 83 ec 20 48 8b f1 48 63 d2 48 b9 d8 73 05 c8 f7 7f 00 00 e8 46 9e 41 5f 48 8d 50 10 8b 40 08 48 89 16 89 46 08 48 8b c6 48 83 c4 20 5e c3 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 73 86 41 5f 5e 00 03 e8 6b 86 41 5f 5e 03 02 e8 63 86 41 5f 5e 06 01 e8 5b 86 41 5f 5e 09 00 a0 77 05 c8 f7 7f 00 00 e8 4b 86 41 5f 5e 00 00 30 79 05 c8 f7 7f 00 00 e8 3b 86 41 5f 5e 00 00 90 79 05 c8 f7 7f 00 00 e8 2b 86 41 5f 5e 00 00 f0 79 05 c8 f7 7f 00 00 e8 1b 86 41 5f 5e 00 00 50 7a 05 c8 f7 7f 00 00 e9 cb 06 00 00 5f 00 00 b0 7a 05 c8 f7 7f 00 00 e9 7b 09 00 00 5f 00 00 10 7b 05 c8 f7 7f 00 00 e8 eb 85 41 5f 5e 00 00 70 7b 05 c8 f7 7f 00 00 e8 db 85 41 5f 5e 00 01 e8 d3 85 41 5f 5e 01 00 d0 7b 05 c8 f7 7f 00 00 e8 c3 85 41 5f 5e 00 1b e8 bb 85 41 5f 5e 01 1a e8 b3 85 41 5f 5e 02 19 e8 ab 85 41 5f 5e 03 18 e8 a3 85 41 5f 5e 04 17 e8 9b 85 41 5f 5e 05 16 e8 93 85 41 5f 5e 06 15 e8 8b 85 41 5f 5e 07 14 e8 83 85 41 5f 5e 08 13 e8 7b 85 41 5f 5e 09 12 e8 73 85 41 5f 5e 0a 11 e8 6b 85 41 5f 5e 0b 10 e8 63 85 41 5f 5e 0c 0f e8 5b 85 41 5f 5e 0d 0e e8 53 85 41 5f 5e 0e 0d e8 4b 85 41 5f 5e 0f 0c e8 43 85 41 5f 5e 10 0b e8 3b 85 41 5f 5e 11 0a e8 33 85 41 5f 5e 12 09 e8 2b 85 41 5f 5e 13 08 e8 23 85 41 5f 5e 14 07 e8 1b 85 41 5f 5e 15 06 e8 13 85 41 5f 5e 16 05 e8 0b 85 41 5f 5e 17 04 e8 03 85 41 5f 5e 18 03 e8 fb 84 41 5f 5e 19 02 e8 f3 84 41 5f 5e 1a 01 e8 eb 84 41 5f 5e 1b 00 a0 7c 05 c8 f7 7f 00 00 e8 db 84 41 5f 5e 00 03 e8 d3 84 41 5f 5e 03 02 e8 cb 84 41 5f 5e 06 01 e8 c3 84 41 5f 5e 09 00 40 80 05 c8 f7 7f 00 00 e8 b3 84 41 5f 5e 00 00 10 81 05 c8 f7 7f 00 00 e8 a3 84 41 5f 5e 00 00 70 81 05 c8 f7 7f 00 00 e8 93 84 41 5f 5e 00 01 e8 8b 84 41 5f 5e 01 00 d0 81 05 c8 f7 7f 00 00 e8 7b 84 41 5f 5e 00 1b e8 73 84 41 5f 5e 01 1a e8 6b 84 41 5f 5e 02 19 e8 63 84 41 5f 5e 03 18 e8 5b 84 41 5f 5e 04 17 e8 53 84 41 5f 5e 05 16 e8 4b 84 41 5f 5e 06 15 e8 43 84 41 5f 5e 07 14 e8 3b 84 41 5f 5e 08 13 e8 33 84 41 5f 5e 09 12 e8 2b 84 41 5f 5e 0a 11 e8 23 84 41 5f 5e 0b 10 e8 1b 84 41 5f 5e 0c 0f e8 13 84 41 5f 5e 0d 0e e8 0b 84 41 5f 5e 0e 0d e8 03 84 41 5f 5e 0f 0c e8 fb 83 41 5f 5e 10 0b e8 f3 83 41 5f 5e 11 0a e8 eb 83 41 5f 5e 12 09 e8 e3 83 41 5f 5e 13 08 e8 db 83 41 5f 5e 14 07 e8 d3 83 41 5f 5e 15 06 e8 cb 83 41 5f 5e 16 05 e8 c3 83 41 5f 5e 17 04 e8 bb 83 41 5f 5e 18 03 e8 b3 83 41 5f 5e 19 02 e8 ab 83 41 5f 5e 1a 01 e8 a3 83 41 5f 5e 1b 00 a0 82 05 c8 f7 7f 00 00 e8 93 83 41 5f 5e 00 00 08 85 05 c8 f7 7f 00 00 e9 73 0c 00 00 5f 00 00 68 85 05 c8 f7 7f 00 00 e8 73 83 41 5f 5e 00 00 c8 85 05 c8 f7 7f 00 00 e8 63 83 41 5f 5e 00 01 e8 5b 83 41 5f 5e 01 00 28 86 05 c8 f7 7f 00 00 e8 4b 83 41 5f 5e 00 00 60 89 05 c8 f7 7f 00 00 e8 3b 83 41 5f 5e 00 00 c0 89 05 c8 f7 7f 00 00 e8 2b 83 41 5f 5e 00 00 38 8a 05 c8 f7 7f 00 00 e8 1b 83 41 5f 5e 00 00 b0 8a 05 c8 f7 7f 00 00 e8 0b 83 41 5f 5e 00 10 e8 03 83 41 5f 5e 01 0f e8 fb 82 41 5f 5e 02 0e e8 f3 82 41 5f 5e 05 0d e8 eb 82 41 5f 5e 06 0c e8 e3 82 41 5f 5e 07 0b e8 db 82 41 5f 5e 0a 0a e8 d3 82 41 5f 5e 0d 09 e8 cb 82 41 5f 5e 10 08 e8 c3 82 41 5f 5e 11 07 e8 bb 82 41 5f 5e 12 06 e8 b3 82 41 5f 5e 13 05 e8 ab 82 41 5f 5e 14 04 e8 a3 82 41 5f 5e 15 03 e8 9b 82 41 5f 5e 16 02 e8 93 82 41 5f 5e 17 01 e8 8b 82 41 5f 5e 18 00 08 8b 05 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
4         | 7ff7c7e4d3d0h   | 67      | hex://asmcore/AsmConstructs?alloc#alloc_g[32u](32i)                                       | Span<uint> alloc<uint>(int len)                                                           | 56 48 83 ec 20 48 8b f1 48 63 d2 48 b9 b8 76 05 c8 f7 7f 00 00 e8 f6 99 41 5f 48 8d 50 10 8b 40 08 48 89 16 89 46 08 48 8b c6 48 83 c4 20 5e c3 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
5         | 7ff7c7e4d540h   | 67      | hex://asmcore/AsmConstructs?alloc#alloc_g[32i](32i)                                       | Span<int> alloc<int>(int len)                                                             | 56 48 83 ec 20 48 8b f1 48 63 d2 48 b9 48 5f 7f c7 f7 7f 00 00 e8 86 98 41 5f 48 8d 50 10 8b 40 08 48 89 16 89 46 08 48 8b c6 48 83 c4 20 5e c3 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
6         | 7ff7c7e4d590h   | 67      | hex://asmcore/AsmConstructs?alloc#alloc_g[64u](32i)                                       | Span<ulong> alloc<ulong>(int len)                                                         | 56 48 83 ec 20 48 8b f1 48 63 d2 48 b9 d0 f6 a1 c7 f7 7f 00 00 e8 36 98 41 5f 48 8d 50 10 8b 40 08 48 89 16 89 46 08 48 8b c6 48 83 c4 20 5e c3 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
7         | 7ff7c7e4d820h   | 67      | hex://asmcore/AsmConstructs?alloc#alloc_g[64i](32i)                                       | Span<long> alloc<long>(int len)                                                           | 56 48 83 ec 20 48 8b f1 48 63 d2 48 b9 58 7f 05 c8 f7 7f 00 00 e8 a6 95 41 5f 48 8d 50 10 8b 40 08 48 89 16 89 46 08 48 8b c6 48 83 c4 20 5e c3 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
8         | 7ff7c7e4d970h   | 67      | hex://asmcore/AsmConstructs?alloc#alloc_g[32f](32i)                                       | Span<float> alloc<float>(int len)                                                         | 56 48 83 ec 20 48 8b f1 48 63 d2 48 b9 40 32 b9 c7 f7 7f 00 00 e8 56 94 41 5f 48 8d 50 10 8b 40 08 48 89 16 89 46 08 48 8b c6 48 83 c4 20 5e c3 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
9         | 7ff7c7e4dee0h   | 67      | hex://asmcore/AsmConstructs?alloc#alloc_g[64f](32i)                                       | Span<double> alloc<double>(int len)                                                       | 56 48 83 ec 20 48 8b f1 48 63 d2 48 b9 48 34 b9 c7 f7 7f 00 00 e8 e6 8e 41 5f 48 8d 50 10 8b 40 08 48 89 16 89 46 08 48 8b c6 48 83 c4 20 5e c3 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
10        | 7ff7c7e4e0f0h   | 560     | hex://asmcore/AsmConstructs?type#type_g[8u]()                                             | Type type<byte>()                                                                         | 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 ec 0e 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 03 00 00 00 00 00 00 00 48 89 c8 48 8b 49 10 48 8b 49 18 48 85 c9 74 04 48 89 c8 c3 48 89 c1 48 ba c0 ad e4 c7 f7 7f 00 00 e9 2a d8 3c 5f cc cc 31 8b 08 2b f8 7f 00 00 70 13 8d c7 f7 7f 00 00 02 00 00 00 00 00 00 00 48 89 c8 48 8b 49 30 48 8b 49 00 48 8b 49 10 48 85 c9 74 04 48 89 c8 c3 48 89 c1 48 ba 48 e1 e4 c7 f7 7f 00 00 e9 e6 66 38 5f cc cc cc cc cc cc 1e 7e 44 3d f8 7f 00 00 10 df 86 c7 f7 7f 00 00 02 00 00 00 00 00 00 00 48 89 c8 48 8b 49 30 48 8b 49 00 48 8b 49 10 48 85 c9 74 04 48 89 c8 c3 48 89 c1 48 ba 90 e1 e4 c7 f7 7f 00 00 e9 9e 66 38 5f cc cc cc cc cc cc a1 7e 44 3d f8 7f 00 00 10 df 86 c7 f7 7f 00 00 06 00 00 00 00 00 00 00 48 89 c8 48 8b 49 30 48 8b 49 00 48 8b 49 30 48 85 c9 74 04 48 89 c8 c3 48 89 c1 48 ba d8 e1 e4 c7 f7 7f 00 00 e9 56 66 38 5f cc cc cc cc cc cc 2f 7e 44 3d f8 7f 00 00 10 df 86 c7 f7 7f 00 00 03 00 00 00 00 00 00 00 48 89 c8 48 8b 49 30 48 8b 49 00 48 8b 49 18 48 85 c9 74 04 48 89 c8 c3 48 89 c1 48 ba 20 e2 e4 c7 f7 7f 00 00 e9 0e 66 38 5f cc cc cc cc cc cc 48 b9 20 ec 05 c8 f7 7f 00 00 e9 39 8a 41 5f cc 48 b9 38 00 86 c7 f7 7f 00 00 e9 29 8a 41 5f cc cc 68 08 2b f8 7f 00 00 70 13 8d c7 f7 7f 00 00 03 00 00 00 00 00 00 00 48 89 c8 48 8b 49 10 48 8b 49 18 48 85 c9 74 04 48 89 c8 c3 48 89 c1 48 ba 88 e2 e4 c7 f7 7f 00 00 e9 aa d6 3c 5f cc cc d6 68 08 2b f8 7f 00 00 70 13 8d c7 f7 7f 00 00 04 00 00 00 00 00 00 00 48 89 c8 48 8b 49 10 48 8b 49 20 48 85 c9 74 04 48 89 c8 c3 48 89 c1 48 ba c8 e2 e4 c7 f7 7f 00 00 e9 6a d6 3c 5f cc cc db 68 08 2b f8 7f 00 00 70 13 8d c7 f7 7f 00 00 00 00 00 00 00 00 00 00
11        | 7ff7c7e4e530h   | 531     | hex://asmcore/AsmConstructs?type#type_g[8i]()                                             | Type type<sbyte>()                                                                        | 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 ac 0a 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 f0 bf 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 7c 0a 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 58 c0 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 4c 0a 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 c0 c0 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 1c 0a 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 28 c1 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 ec 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 90 c1 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 bc 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 f8 c1 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 8c 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 60 c2 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 5c 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 c8 c2 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 2c 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 18 c3 04 c8 f7 7f 00 00 56 48 83 ec 20 c5 f8 77 48 8b f1 48 8b 4e 40 48 85 c9 74 18 49 bb 50 04 63 c7 f7 7f 00 00 39 09 ff 15 4a 1d 7e ff 33 c0 48 89 46 40 48 8d 46 10 33 d2 c5 f8 57 c0 c5 fa 7f 00 48 89 50 10 c7 46 0c ff ff ff ff 48 83 c4 20 5e c3 cc cc 00 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
12        | 7ff7c7e4e560h   | 483     | hex://asmcore/AsmConstructs?type#type_g[16u]()                                            | Type type<ushort>()                                                                       | 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 7c 0a 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 58 c0 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 4c 0a 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 c0 c0 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 1c 0a 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 28 c1 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 ec 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 90 c1 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 bc 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 f8 c1 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 8c 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 60 c2 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 5c 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 c8 c2 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 2c 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 18 c3 04 c8 f7 7f 00 00 56 48 83 ec 20 c5 f8 77 48 8b f1 48 8b 4e 40 48 85 c9 74 18 49 bb 50 04 63 c7 f7 7f 00 00 39 09 ff 15 4a 1d 7e ff 33 c0 48 89 46 40 48 8d 46 10 33 d2 c5 f8 57 c0 c5 fa 7f 00 48 89 50 10 c7 46 0c ff ff ff ff 48 83 c4 20 5e c3 cc cc 00 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
13        | 7ff7c7e4e590h   | 435     | hex://asmcore/AsmConstructs?type#type_g[16i]()                                            | Type type<short>()                                                                        | 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 4c 0a 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 c0 c0 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 1c 0a 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 28 c1 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 ec 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 90 c1 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 bc 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 f8 c1 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 8c 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 60 c2 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 5c 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 c8 c2 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 2c 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 18 c3 04 c8 f7 7f 00 00 56 48 83 ec 20 c5 f8 77 48 8b f1 48 8b 4e 40 48 85 c9 74 18 49 bb 50 04 63 c7 f7 7f 00 00 39 09 ff 15 4a 1d 7e ff 33 c0 48 89 46 40 48 8d 46 10 33 d2 c5 f8 57 c0 c5 fa 7f 00 48 89 50 10 c7 46 0c ff ff ff ff 48 83 c4 20 5e c3 cc cc 00 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
14        | 7ff7c7e4e5c0h   | 387     | hex://asmcore/AsmConstructs?type#type_g[32u]()                                            | Type type<uint>()                                                                         | 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 1c 0a 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 28 c1 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 ec 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 90 c1 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 bc 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 f8 c1 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 8c 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 60 c2 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 5c 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 c8 c2 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 2c 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 18 c3 04 c8 f7 7f 00 00 56 48 83 ec 20 c5 f8 77 48 8b f1 48 8b 4e 40 48 85 c9 74 18 49 bb 50 04 63 c7 f7 7f 00 00 39 09 ff 15 4a 1d 7e ff 33 c0 48 89 46 40 48 8d 46 10 33 d2 c5 f8 57 c0 c5 fa 7f 00 48 89 50 10 c7 46 0c ff ff ff ff 48 83 c4 20 5e c3 cc cc 00 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
15        | 7ff7c7e4e5f0h   | 339     | hex://asmcore/AsmConstructs?type#type_g[32i]()                                            | Type type<int>()                                                                          | 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 ec 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 90 c1 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 bc 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 f8 c1 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 8c 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 60 c2 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 5c 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 c8 c2 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 2c 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 18 c3 04 c8 f7 7f 00 00 56 48 83 ec 20 c5 f8 77 48 8b f1 48 8b 4e 40 48 85 c9 74 18 49 bb 50 04 63 c7 f7 7f 00 00 39 09 ff 15 4a 1d 7e ff 33 c0 48 89 46 40 48 8d 46 10 33 d2 c5 f8 57 c0 c5 fa 7f 00 48 89 50 10 c7 46 0c ff ff ff ff 48 83 c4 20 5e c3 cc cc 00 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
16        | 7ff7c7e4e620h   | 291     | hex://asmcore/AsmConstructs?type#type_g[64u]()                                            | Type type<ulong>()                                                                        | 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 bc 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 f8 c1 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 8c 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 60 c2 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 5c 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 c8 c2 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 2c 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 18 c3 04 c8 f7 7f 00 00 56 48 83 ec 20 c5 f8 77 48 8b f1 48 8b 4e 40 48 85 c9 74 18 49 bb 50 04 63 c7 f7 7f 00 00 39 09 ff 15 4a 1d 7e ff 33 c0 48 89 46 40 48 8d 46 10 33 d2 c5 f8 57 c0 c5 fa 7f 00 48 89 50 10 c7 46 0c ff ff ff ff 48 83 c4 20 5e c3 cc cc 00 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
17        | 7ff7c7e4e650h   | 243     | hex://asmcore/AsmConstructs?type#type_g[64i]()                                            | Type type<long>()                                                                         | 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 8c 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 60 c2 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 5c 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 c8 c2 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 2c 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 18 c3 04 c8 f7 7f 00 00 56 48 83 ec 20 c5 f8 77 48 8b f1 48 8b 4e 40 48 85 c9 74 18 49 bb 50 04 63 c7 f7 7f 00 00 39 09 ff 15 4a 1d 7e ff 33 c0 48 89 46 40 48 8d 46 10 33 d2 c5 f8 57 c0 c5 fa 7f 00 48 89 50 10 c7 46 0c ff ff ff ff 48 83 c4 20 5e c3 cc cc 00 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
18        | 7ff7c7e4e680h   | 195     | hex://asmcore/AsmConstructs?type#type_g[32f]()                                            | Type type<float>()                                                                        | 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 5c 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 c8 c2 04 c8 f7 7f 00 00 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 2c 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 18 c3 04 c8 f7 7f 00 00 56 48 83 ec 20 c5 f8 77 48 8b f1 48 8b 4e 40 48 85 c9 74 18 49 bb 50 04 63 c7 f7 7f 00 00 39 09 ff 15 4a 1d 7e ff 33 c0 48 89 46 40 48 8d 46 10 33 d2 c5 f8 57 c0 c5 fa 7f 00 48 89 50 10 c7 46 0c ff ff ff ff 48 83 c4 20 5e c3 cc cc 00 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
19        | 7ff7c7e4e6b0h   | 147     | hex://asmcore/AsmConstructs?type#type_g[64f]()                                            | Type type<double>()                                                                       | 48 83 ec 28 90 48 b9 f8 25 72 c7 f7 7f 00 00 e8 2c 09 3c 5f 90 48 83 c4 28 c3 00 00 19 04 01 00 04 42 00 00 40 00 00 00 18 c3 04 c8 f7 7f 00 00 56 48 83 ec 20 c5 f8 77 48 8b f1 48 8b 4e 40 48 85 c9 74 18 49 bb 50 04 63 c7 f7 7f 00 00 39 09 ff 15 4a 1d 7e ff 33 c0 48 89 46 40 48 8d 46 10 33 d2 c5 f8 57 c0 c5 fa 7f 00 48 89 50 10 c7 46 0c ff ff ff ff 48 83 c4 20 5e c3 cc cc 00 00 00 19 05 02 00 05 32 01 60 40 00 00 00 00 00 00 00 00 00 00
20        | 7ff7c7e4ea10h   | 67      | hex://asmcore/AsmConstructs?for_min_max#for_min_max_(32i,32i)                             | void for_min_max(int i0, int i1, Action<int> f)                                           | 57 56 53 48 83 ec 20 8b f2 49 8b f8 8b d9 3b de 7d 12 48 8b c7 48 8b 48 08 8b d3 ff 50 18 ff c3 3b de 7c ee 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
21        | 7ff7c7e4f1c0h   | 424     | hex://asmcore/AsmConstructs?for_min_max#for_min_max_()                                    | int for_min_max()                                                                         | 57 56 48 83 ec 28 48 b9 58 61 c1 c7 f7 7f 00 00 e8 db 7a 41 5f 48 8b f0 33 c9 89 4e 08 48 b9 10 97 05 c8 f7 7f 00 00 e8 c4 7a 41 5f 48 8b f8 48 8d 4f 08 48 8b d6 e8 f5 6b 41 5f 49 b8 d8 b9 a3 c7 f7 7f 00 00 4c 89 47 18 4c 8b c7 33 c9 ba 08 00 00 00 e8 f8 f7 ff ff 8b 46 08 48 83 c4 28 5e 5f c3 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 fb 63 41 5f 5e 00 22 e8 f3 63 41 5f 5e 04 21 e8 eb 63 41 5f 5e 08 20 e8 e3 63 41 5f 5e 0c 1f e8 db 63 41 5f 5e 10 1e e8 d3 63 41 5f 5e 14 1d e8 cb 63 41 5f 5e 18 1c e8 c3 63 41 5f 5e 1c 1b e8 bb 63 41 5f 5e 20 1a e8 b3 63 41 5f 5e 24 19 e8 ab 63 41 5f 5e 28 18 e8 a3 63 41 5f 5e 2a 17 e8 9b 63 41 5f 5e 2c 16 e8 93 63 41 5f 5e 2e 15 e8 8b 63 41 5f 5e 30 14 e8 83 63 41 5f 5e 32 13 e8 7b 63 41 5f 5e 34 12 e8 73 63 41 5f 5e 36 11 e8 6b 63 41 5f 5e 38 10 e8 63 63 41 5f 5e 3c 0f e8 5b 63 41 5f 5e 40 0e e8 53 63 41 5f 5e 44 0d e8 4b 63 41 5f 5e 48 0c e8 43 63 41 5f 5e 4c 0b e8 3b 63 41 5f 5e 50 0a e8 33 63 41 5f 5e 54 09 e8 2b 63 41 5f 5e 58 08 e8 23 63 41 5f 5e 5c 07 e8 1b 63 41 5f 5e 60 06 e8 13 63 41 5f 5e 64 05 e8 0b 63 41 5f 5e 68 04 e8 03 63 41 5f 5e 6c 03 e8 fb 62 41 5f 5e 70 02 e8 f3 62 41 5f 5e 74 01 e8 eb 62 41 5f 5e 78 00 18 a7 05 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
22        | 7ff7c7e4f370h   | 903     | hex://asmcore/AsmConstructs?compute_32u#compute_32u_(BinaryBitLogicKind~8u,32u,32u)       | uint compute_32u(BinaryBitLogicKind:byte op, uint a, uint b)                              | 0f 1f 44 00 00 0f b6 c9 83 f9 0f 0f 87 89 00 00 00 8b c1 48 8d 0d 86 00 00 00 8b 0c 81 4c 8d 0d e1 ff ff ff 49 03 c9 ff e1 33 c0 eb 6f 8b c2 41 23 c0 eb 68 c4 e2 38 f2 c2 eb 61 8b c2 eb 5d c4 c2 68 f2 c0 eb 56 41 8b c0 eb 51 8b c2 41 33 c0 eb 4a 8b c2 41 0b c0 eb 43 8b c2 41 0b c0 f7 d0 eb 3a 8b c2 41 33 c0 f7 d0 eb 31 41 8b c0 f7 d0 eb 2a 41 8b c0 f7 d0 0b c2 eb 21 8b c2 f7 d0 eb 1b 8b c2 f7 d0 41 0b c0 eb 12 8b c2 41 23 c0 f7 d0 eb 09 b8 ff ff ff ff eb 02 33 c0 c3 00 00 00 24 00 00 00 28 00 00 00 2f 00 00 00 36 00 00 00 3a 00 00 00 41 00 00 00 46 00 00 00 4d 00 00 00 54 00 00 00 5d 00 00 00 66 00 00 00 6d 00 00 00 76 00 00 00 7c 00 00 00 85 00 00 00 8e 00 00 00 19 00 00 00 40 00 00 00 98 ff 04 c8 f7 7f 00 00 57 56 53 48 83 ec 40 c5 f8 77 33 c0 48 89 44 24 28 48 89 44 24 30 48 89 44 24 38 48 8b f9 48 8b f2 48 8b ce 48 8b 06 48 8b 40 70 ff 50 30 85 c0 75 31 48 b9 f0 c6 7f c7 f7 7f 00 00 ba 07 01 00 00 e8 0a 7c 41 5f 48 b9 c0 58 9c a0 fb 01 00 00 48 8b 09 48 83 c1 08 48 8b 19 48 8b 41 08 8b 49 10 eb 50 48 8b ce 48 8b 06 48 8b 40 40 ff 50 30 48 8b d8 48 8b ce 48 8b 06 48 8b 80 98 00 00 00 ff 50 38 48 8b c8 e8 e5 40 92 ff 44 8b c0 33 c9 48 8d 54 24 28 c5 f8 57 c0 c5 fa 7f 02 48 89 4a 10 48 8d 4c 24 28 48 8b d3 e8 3a 04 93 ff 48 8b 5c 24 28 48 8b cb e8 e5 c6 ea 4e 84 c0 75 1e 48 8b d3 b9 01 00 00 00 88 0f 48 8d 4f 08 e8 8e 68 41 5f 48 8b c7 48 83 c4 40 5b 5e 5f c3 33 c0 88 07 33 c0 48 89 47 08 48 8b c7 48 83 c4 40 5b 5e 5f c3 cc cc 19 07 04 00 07 72 03 30 02 60 01 70 40 00 00 00 00 00 00 00 60 00 06 c8 f7 7f 00 00 41 57 41 56 57 56 55 53 48 83 ec 48 33 c0 48 89 44 24 28 48 89 44 24 30 48 89 44 24 38 48 89 44 24 40 48 8b f1 41 8b f8 48 8d 4e 08 e8 1f 68 41 5f 89 7e 10 48 8b de 85 ff 75 12 48 b9 60 30 9c a0 fb 01 00 00 48 8b 11 e9 02 01 00 00 48 b9 10 67 72 c7 f7 7f 00 00 e8 e4 76 41 5f 48 8b e8 48 8b 5b 08 66 c7 45 08 7e 00 48 b9 08 8f 72 c7 f7 7f 00 00 e8 c8 76 41 5f 4c 8b f0 0f b7 cf 41 89 4e 08 f7 c7 00 00 00 20 74 08 41 bf 75 00 00 00 eb 23 f7 c7 00 00 00 80 74 08 41 bf 69 00 00 00 eb 13 f7 c7 00 00 00 40 74 08 41 bf 66 00 00 00 eb 03 45 33 ff 45 85 ff 75 07 bf 65 00 00 00 eb 03 41 8b ff b9 01 00 00 00 e8 6a 4e 90 ff 66 89 78 0c 45 33 c0 48 ba 90 13 9c a0 fb 01 00 00 48 8b 12 48 b9 f0 98 9c a0 fb 01 00 00 48 8b 09 4c 8d 4c 24 28 4d 89 31 49 89 41 08 4d 89 41 10 49 89 51 18 4c 8d 44 24 28 48 8b d1 33 c9 e8 be 65 eb 4e 49 b8 98 13 9c a0 fb 01 00 00 4d 8b 00 48 ba 18 99 9c a0 fb 01 00 00 48 8b 12 48 8d 4c 24 28 48 89 19 48 89 69 08 48 89 41 10 4c 89 41 18 4c 8d 44 24 28 33 c9 e8 84 65 eb 4e 48 8b d0 48 8b ce e8 f9 66 41 5f 90 48 83 c4 48 5b 5d 5e 5f 41 5e 41 5f c3 00 00 00 19 0c 07 00 0c 82 08 30 07 50 06 60 05 70 04 e0 02 f0 00 00 40 00 00 00 00 00 00 00 00 00 00
