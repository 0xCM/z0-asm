// System.Void Z0.gbits::bitchars<T>(T,System.Span`1<System.Char>,System.Int32)
// void bitchars<byte>(byte src, Span<char> dst, int offset)
// AggressiveInlining
void bitchars<byte>(byte src, Span<char> dst, int offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.Void Z0.BitStore::bitchars<T>(T,System.Span`1<System.Char>,System.Int32)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Void Z0.gbits::bitchars<T>(T,System.Span`1<System.Char>,System.Int32)
// void bitchars<sbyte>(sbyte src, Span<char> dst, int offset)
// AggressiveInlining
void bitchars<sbyte>(sbyte src, Span<char> dst, int offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.Void Z0.BitStore::bitchars<T>(T,System.Span`1<System.Char>,System.Int32)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Void Z0.gbits::bitchars<T>(T,System.Span`1<System.Char>,System.Int32)
// void bitchars<ushort>(ushort src, Span<char> dst, int offset)
// AggressiveInlining
void bitchars<ushort>(ushort src, Span<char> dst, int offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.Void Z0.BitStore::bitchars<T>(T,System.Span`1<System.Char>,System.Int32)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Void Z0.gbits::bitchars<T>(T,System.Span`1<System.Char>,System.Int32)
// void bitchars<short>(short src, Span<char> dst, int offset)
// AggressiveInlining
void bitchars<short>(short src, Span<char> dst, int offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.Void Z0.BitStore::bitchars<T>(T,System.Span`1<System.Char>,System.Int32)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Void Z0.gbits::bitchars<T>(T,System.Span`1<System.Char>,System.Int32)
// void bitchars<uint>(uint src, Span<char> dst, int offset)
// AggressiveInlining
void bitchars<uint>(uint src, Span<char> dst, int offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.Void Z0.BitStore::bitchars<T>(T,System.Span`1<System.Char>,System.Int32)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Void Z0.gbits::bitchars<T>(T,System.Span`1<System.Char>,System.Int32)
// void bitchars<int>(int src, Span<char> dst, int offset)
// AggressiveInlining
void bitchars<int>(int src, Span<char> dst, int offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.Void Z0.BitStore::bitchars<T>(T,System.Span`1<System.Char>,System.Int32)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Void Z0.gbits::bitchars<T>(T,System.Span`1<System.Char>,System.Int32)
// void bitchars<ulong>(ulong src, Span<char> dst, int offset)
// AggressiveInlining
void bitchars<ulong>(ulong src, Span<char> dst, int offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.Void Z0.BitStore::bitchars<T>(T,System.Span`1<System.Char>,System.Int32)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Void Z0.gbits::bitchars<T>(T,System.Span`1<System.Char>,System.Int32)
// void bitchars<long>(long src, Span<char> dst, int offset)
// AggressiveInlining
void bitchars<long>(long src, Span<char> dst, int offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.Void Z0.BitStore::bitchars<T>(T,System.Span`1<System.Char>,System.Int32)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Void Z0.gbits::bitchars<T>(T,System.Span`1<System.Char>,System.Int32)
// void bitchars<float>(float src, Span<char> dst, int offset)
// AggressiveInlining
void bitchars<float>(float src, Span<char> dst, int offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.Void Z0.BitStore::bitchars<T>(T,System.Span`1<System.Char>,System.Int32)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Void Z0.gbits::bitchars<T>(T,System.Span`1<System.Char>,System.Int32)
// void bitchars<double>(double src, Span<char> dst, int offset)
// AggressiveInlining
void bitchars<double>(double src, Span<char> dst, int offset)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: ldarg.2
    IL_0003: call System.Void Z0.BitStore::bitchars<T>(T,System.Span`1<System.Char>,System.Int32)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
