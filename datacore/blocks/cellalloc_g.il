// Z0.Block16`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N16,System.Int32)
// Block16<byte> cellalloc<byte>(N16 n, int cellcount)
// IL
Block16<byte> cellalloc<byte>(N16 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N16,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block16`1<T> Z0.DataBlocks::alloc<T>(Z0.N16,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block16`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N16,System.Int32)
// Block16<sbyte> cellalloc<sbyte>(N16 n, int cellcount)
// IL
Block16<sbyte> cellalloc<sbyte>(N16 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N16,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block16`1<T> Z0.DataBlocks::alloc<T>(Z0.N16,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block16`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N16,System.Int32)
// Block16<ushort> cellalloc<ushort>(N16 n, int cellcount)
// IL
Block16<ushort> cellalloc<ushort>(N16 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N16,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block16`1<T> Z0.DataBlocks::alloc<T>(Z0.N16,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block16`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N16,System.Int32)
// Block16<short> cellalloc<short>(N16 n, int cellcount)
// IL
Block16<short> cellalloc<short>(N16 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N16,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block16`1<T> Z0.DataBlocks::alloc<T>(Z0.N16,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block32`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N32,System.Int32)
// Block32<byte> cellalloc<byte>(N32 n, int cellcount)
// IL
Block32<byte> cellalloc<byte>(N32 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N32,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block32`1<T> Z0.DataBlocks::alloc<T>(Z0.N32,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block32`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N32,System.Int32)
// Block32<sbyte> cellalloc<sbyte>(N32 n, int cellcount)
// IL
Block32<sbyte> cellalloc<sbyte>(N32 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N32,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block32`1<T> Z0.DataBlocks::alloc<T>(Z0.N32,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block32`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N32,System.Int32)
// Block32<ushort> cellalloc<ushort>(N32 n, int cellcount)
// IL
Block32<ushort> cellalloc<ushort>(N32 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N32,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block32`1<T> Z0.DataBlocks::alloc<T>(Z0.N32,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block32`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N32,System.Int32)
// Block32<short> cellalloc<short>(N32 n, int cellcount)
// IL
Block32<short> cellalloc<short>(N32 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N32,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block32`1<T> Z0.DataBlocks::alloc<T>(Z0.N32,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block32`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N32,System.Int32)
// Block32<uint> cellalloc<uint>(N32 n, int cellcount)
// IL
Block32<uint> cellalloc<uint>(N32 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N32,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block32`1<T> Z0.DataBlocks::alloc<T>(Z0.N32,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block32`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N32,System.Int32)
// Block32<int> cellalloc<int>(N32 n, int cellcount)
// IL
Block32<int> cellalloc<int>(N32 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N32,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block32`1<T> Z0.DataBlocks::alloc<T>(Z0.N32,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block32`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N32,System.Int32)
// Block32<float> cellalloc<float>(N32 n, int cellcount)
// IL
Block32<float> cellalloc<float>(N32 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N32,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block32`1<T> Z0.DataBlocks::alloc<T>(Z0.N32,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block64`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N64,System.Int32)
// Block64<byte> cellalloc<byte>(N64 n, int cellcount)
// IL
Block64<byte> cellalloc<byte>(N64 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N64,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block64`1<T> Z0.DataBlocks::alloc<T>(Z0.N64,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block64`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N64,System.Int32)
// Block64<sbyte> cellalloc<sbyte>(N64 n, int cellcount)
// IL
Block64<sbyte> cellalloc<sbyte>(N64 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N64,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block64`1<T> Z0.DataBlocks::alloc<T>(Z0.N64,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block64`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N64,System.Int32)
// Block64<ushort> cellalloc<ushort>(N64 n, int cellcount)
// IL
Block64<ushort> cellalloc<ushort>(N64 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N64,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block64`1<T> Z0.DataBlocks::alloc<T>(Z0.N64,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block64`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N64,System.Int32)
// Block64<short> cellalloc<short>(N64 n, int cellcount)
// IL
Block64<short> cellalloc<short>(N64 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N64,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block64`1<T> Z0.DataBlocks::alloc<T>(Z0.N64,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block64`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N64,System.Int32)
// Block64<uint> cellalloc<uint>(N64 n, int cellcount)
// IL
Block64<uint> cellalloc<uint>(N64 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N64,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block64`1<T> Z0.DataBlocks::alloc<T>(Z0.N64,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block64`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N64,System.Int32)
// Block64<int> cellalloc<int>(N64 n, int cellcount)
// IL
Block64<int> cellalloc<int>(N64 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N64,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block64`1<T> Z0.DataBlocks::alloc<T>(Z0.N64,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block64`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N64,System.Int32)
// Block64<ulong> cellalloc<ulong>(N64 n, int cellcount)
// IL
Block64<ulong> cellalloc<ulong>(N64 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N64,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block64`1<T> Z0.DataBlocks::alloc<T>(Z0.N64,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block64`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N64,System.Int32)
// Block64<long> cellalloc<long>(N64 n, int cellcount)
// IL
Block64<long> cellalloc<long>(N64 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N64,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block64`1<T> Z0.DataBlocks::alloc<T>(Z0.N64,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block64`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N64,System.Int32)
// Block64<float> cellalloc<float>(N64 n, int cellcount)
// IL
Block64<float> cellalloc<float>(N64 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N64,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block64`1<T> Z0.DataBlocks::alloc<T>(Z0.N64,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block64`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N64,System.Int32)
// Block64<double> cellalloc<double>(N64 n, int cellcount)
// IL
Block64<double> cellalloc<double>(N64 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N64,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block64`1<T> Z0.DataBlocks::alloc<T>(Z0.N64,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block128`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N128,System.Int32)
// Block128<byte> cellalloc<byte>(N128 n, int cellcount)
// IL
Block128<byte> cellalloc<byte>(N128 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N128,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block128`1<T> Z0.DataBlocks::alloc<T>(Z0.N128,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block128`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N128,System.Int32)
// Block128<sbyte> cellalloc<sbyte>(N128 n, int cellcount)
// IL
Block128<sbyte> cellalloc<sbyte>(N128 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N128,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block128`1<T> Z0.DataBlocks::alloc<T>(Z0.N128,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block128`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N128,System.Int32)
// Block128<ushort> cellalloc<ushort>(N128 n, int cellcount)
// IL
Block128<ushort> cellalloc<ushort>(N128 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N128,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block128`1<T> Z0.DataBlocks::alloc<T>(Z0.N128,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block128`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N128,System.Int32)
// Block128<short> cellalloc<short>(N128 n, int cellcount)
// IL
Block128<short> cellalloc<short>(N128 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N128,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block128`1<T> Z0.DataBlocks::alloc<T>(Z0.N128,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block128`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N128,System.Int32)
// Block128<uint> cellalloc<uint>(N128 n, int cellcount)
// IL
Block128<uint> cellalloc<uint>(N128 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N128,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block128`1<T> Z0.DataBlocks::alloc<T>(Z0.N128,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block128`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N128,System.Int32)
// Block128<int> cellalloc<int>(N128 n, int cellcount)
// IL
Block128<int> cellalloc<int>(N128 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N128,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block128`1<T> Z0.DataBlocks::alloc<T>(Z0.N128,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block128`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N128,System.Int32)
// Block128<ulong> cellalloc<ulong>(N128 n, int cellcount)
// IL
Block128<ulong> cellalloc<ulong>(N128 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N128,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block128`1<T> Z0.DataBlocks::alloc<T>(Z0.N128,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block128`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N128,System.Int32)
// Block128<long> cellalloc<long>(N128 n, int cellcount)
// IL
Block128<long> cellalloc<long>(N128 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N128,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block128`1<T> Z0.DataBlocks::alloc<T>(Z0.N128,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block128`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N128,System.Int32)
// Block128<float> cellalloc<float>(N128 n, int cellcount)
// IL
Block128<float> cellalloc<float>(N128 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N128,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block128`1<T> Z0.DataBlocks::alloc<T>(Z0.N128,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block128`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N128,System.Int32)
// Block128<double> cellalloc<double>(N128 n, int cellcount)
// IL
Block128<double> cellalloc<double>(N128 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N128,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block128`1<T> Z0.DataBlocks::alloc<T>(Z0.N128,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block256`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N256,System.Int32)
// Block256<byte> cellalloc<byte>(N256 n, int cellcount)
// IL
Block256<byte> cellalloc<byte>(N256 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N256,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block256`1<T> Z0.DataBlocks::alloc<T>(Z0.N256,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block256`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N256,System.Int32)
// Block256<sbyte> cellalloc<sbyte>(N256 n, int cellcount)
// IL
Block256<sbyte> cellalloc<sbyte>(N256 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N256,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block256`1<T> Z0.DataBlocks::alloc<T>(Z0.N256,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block256`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N256,System.Int32)
// Block256<ushort> cellalloc<ushort>(N256 n, int cellcount)
// IL
Block256<ushort> cellalloc<ushort>(N256 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N256,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block256`1<T> Z0.DataBlocks::alloc<T>(Z0.N256,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block256`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N256,System.Int32)
// Block256<short> cellalloc<short>(N256 n, int cellcount)
// IL
Block256<short> cellalloc<short>(N256 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N256,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block256`1<T> Z0.DataBlocks::alloc<T>(Z0.N256,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block256`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N256,System.Int32)
// Block256<uint> cellalloc<uint>(N256 n, int cellcount)
// IL
Block256<uint> cellalloc<uint>(N256 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N256,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block256`1<T> Z0.DataBlocks::alloc<T>(Z0.N256,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block256`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N256,System.Int32)
// Block256<int> cellalloc<int>(N256 n, int cellcount)
// IL
Block256<int> cellalloc<int>(N256 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N256,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block256`1<T> Z0.DataBlocks::alloc<T>(Z0.N256,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block256`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N256,System.Int32)
// Block256<ulong> cellalloc<ulong>(N256 n, int cellcount)
// IL
Block256<ulong> cellalloc<ulong>(N256 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N256,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block256`1<T> Z0.DataBlocks::alloc<T>(Z0.N256,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block256`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N256,System.Int32)
// Block256<long> cellalloc<long>(N256 n, int cellcount)
// IL
Block256<long> cellalloc<long>(N256 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N256,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block256`1<T> Z0.DataBlocks::alloc<T>(Z0.N256,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block256`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N256,System.Int32)
// Block256<float> cellalloc<float>(N256 n, int cellcount)
// IL
Block256<float> cellalloc<float>(N256 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N256,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block256`1<T> Z0.DataBlocks::alloc<T>(Z0.N256,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block256`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N256,System.Int32)
// Block256<double> cellalloc<double>(N256 n, int cellcount)
// IL
Block256<double> cellalloc<double>(N256 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N256,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block256`1<T> Z0.DataBlocks::alloc<T>(Z0.N256,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block512`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N512,System.Int32)
// Block512<byte> cellalloc<byte>(N512 n, int cellcount)
// IL
Block512<byte> cellalloc<byte>(N512 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N512,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block512`1<T> Z0.DataBlocks::alloc<T>(Z0.N512,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block512`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N512,System.Int32)
// Block512<sbyte> cellalloc<sbyte>(N512 n, int cellcount)
// IL
Block512<sbyte> cellalloc<sbyte>(N512 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N512,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block512`1<T> Z0.DataBlocks::alloc<T>(Z0.N512,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block512`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N512,System.Int32)
// Block512<ushort> cellalloc<ushort>(N512 n, int cellcount)
// IL
Block512<ushort> cellalloc<ushort>(N512 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N512,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block512`1<T> Z0.DataBlocks::alloc<T>(Z0.N512,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block512`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N512,System.Int32)
// Block512<short> cellalloc<short>(N512 n, int cellcount)
// IL
Block512<short> cellalloc<short>(N512 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N512,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block512`1<T> Z0.DataBlocks::alloc<T>(Z0.N512,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block512`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N512,System.Int32)
// Block512<uint> cellalloc<uint>(N512 n, int cellcount)
// IL
Block512<uint> cellalloc<uint>(N512 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N512,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block512`1<T> Z0.DataBlocks::alloc<T>(Z0.N512,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block512`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N512,System.Int32)
// Block512<int> cellalloc<int>(N512 n, int cellcount)
// IL
Block512<int> cellalloc<int>(N512 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N512,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block512`1<T> Z0.DataBlocks::alloc<T>(Z0.N512,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block512`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N512,System.Int32)
// Block512<ulong> cellalloc<ulong>(N512 n, int cellcount)
// IL
Block512<ulong> cellalloc<ulong>(N512 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N512,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block512`1<T> Z0.DataBlocks::alloc<T>(Z0.N512,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block512`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N512,System.Int32)
// Block512<long> cellalloc<long>(N512 n, int cellcount)
// IL
Block512<long> cellalloc<long>(N512 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N512,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block512`1<T> Z0.DataBlocks::alloc<T>(Z0.N512,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block512`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N512,System.Int32)
// Block512<float> cellalloc<float>(N512 n, int cellcount)
// IL
Block512<float> cellalloc<float>(N512 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N512,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block512`1<T> Z0.DataBlocks::alloc<T>(Z0.N512,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Block512`1<T> Z0.DataBlocks::cellalloc<T>(Z0.N512,System.Int32)
// Block512<double> cellalloc<double>(N512 n, int cellcount)
// IL
Block512<double> cellalloc<double>(N512 n, int cellcount)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.0
    IL_0002: ldarg.1
    IL_0003: call System.Int32 Z0.DataBlocks::minblocks<T>(Z0.N512,System.Int32)
    IL_0008: ldloca.s V_0
    IL_000A: initobj T
    IL_0010: ldloc.0
    IL_0011: call Z0.Block512`1<T> Z0.DataBlocks::alloc<T>(Z0.N512,System.Int32,T)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
