// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N8,T)
// int blocklen<byte>(N8 w, byte t)
// AggressiveInlining
int blocklen<byte>(N8 w, byte t)
{
    IL_0000: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N8,T)
// int blocklen<sbyte>(N8 w, sbyte t)
// AggressiveInlining
int blocklen<sbyte>(N8 w, sbyte t)
{
    IL_0000: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N16,T)
// int blocklen<byte>(N16 w, byte t)
// AggressiveInlining
int blocklen<byte>(N16 w, byte t)
{
    IL_0000: ldc.i4.2
    IL_0001: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0006: div
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N16,T)
// int blocklen<sbyte>(N16 w, sbyte t)
// AggressiveInlining
int blocklen<sbyte>(N16 w, sbyte t)
{
    IL_0000: ldc.i4.2
    IL_0001: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0006: div
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N16,T)
// int blocklen<ushort>(N16 w, ushort t)
// AggressiveInlining
int blocklen<ushort>(N16 w, ushort t)
{
    IL_0000: ldc.i4.2
    IL_0001: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0006: div
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N16,T)
// int blocklen<short>(N16 w, short t)
// AggressiveInlining
int blocklen<short>(N16 w, short t)
{
    IL_0000: ldc.i4.2
    IL_0001: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0006: div
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N32,T)
// int blocklen<byte>(N32 w, byte t)
// AggressiveInlining
int blocklen<byte>(N32 w, byte t)
{
    IL_0000: ldc.i4.4
    IL_0001: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0006: div
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N32,T)
// int blocklen<sbyte>(N32 w, sbyte t)
// AggressiveInlining
int blocklen<sbyte>(N32 w, sbyte t)
{
    IL_0000: ldc.i4.4
    IL_0001: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0006: div
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N32,T)
// int blocklen<ushort>(N32 w, ushort t)
// AggressiveInlining
int blocklen<ushort>(N32 w, ushort t)
{
    IL_0000: ldc.i4.4
    IL_0001: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0006: div
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N32,T)
// int blocklen<short>(N32 w, short t)
// AggressiveInlining
int blocklen<short>(N32 w, short t)
{
    IL_0000: ldc.i4.4
    IL_0001: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0006: div
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N32,T)
// int blocklen<uint>(N32 w, uint t)
// AggressiveInlining
int blocklen<uint>(N32 w, uint t)
{
    IL_0000: ldc.i4.4
    IL_0001: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0006: div
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N32,T)
// int blocklen<int>(N32 w, int t)
// AggressiveInlining
int blocklen<int>(N32 w, int t)
{
    IL_0000: ldc.i4.4
    IL_0001: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0006: div
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N32,T)
// int blocklen<float>(N32 w, float t)
// AggressiveInlining
int blocklen<float>(N32 w, float t)
{
    IL_0000: ldc.i4.4
    IL_0001: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0006: div
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N64,T)
// int blocklen<byte>(N64 w, byte t)
// AggressiveInlining
int blocklen<byte>(N64 w, byte t)
{
    IL_0000: ldc.i4.8
    IL_0001: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0006: div
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N64,T)
// int blocklen<sbyte>(N64 w, sbyte t)
// AggressiveInlining
int blocklen<sbyte>(N64 w, sbyte t)
{
    IL_0000: ldc.i4.8
    IL_0001: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0006: div
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N64,T)
// int blocklen<ushort>(N64 w, ushort t)
// AggressiveInlining
int blocklen<ushort>(N64 w, ushort t)
{
    IL_0000: ldc.i4.8
    IL_0001: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0006: div
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N64,T)
// int blocklen<short>(N64 w, short t)
// AggressiveInlining
int blocklen<short>(N64 w, short t)
{
    IL_0000: ldc.i4.8
    IL_0001: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0006: div
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N64,T)
// int blocklen<uint>(N64 w, uint t)
// AggressiveInlining
int blocklen<uint>(N64 w, uint t)
{
    IL_0000: ldc.i4.8
    IL_0001: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0006: div
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N64,T)
// int blocklen<int>(N64 w, int t)
// AggressiveInlining
int blocklen<int>(N64 w, int t)
{
    IL_0000: ldc.i4.8
    IL_0001: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0006: div
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N64,T)
// int blocklen<ulong>(N64 w, ulong t)
// AggressiveInlining
int blocklen<ulong>(N64 w, ulong t)
{
    IL_0000: ldc.i4.8
    IL_0001: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0006: div
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N64,T)
// int blocklen<long>(N64 w, long t)
// AggressiveInlining
int blocklen<long>(N64 w, long t)
{
    IL_0000: ldc.i4.8
    IL_0001: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0006: div
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N64,T)
// int blocklen<float>(N64 w, float t)
// AggressiveInlining
int blocklen<float>(N64 w, float t)
{
    IL_0000: ldc.i4.8
    IL_0001: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0006: div
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N64,T)
// int blocklen<double>(N64 w, double t)
// AggressiveInlining
int blocklen<double>(N64 w, double t)
{
    IL_0000: ldc.i4.8
    IL_0001: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0006: div
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N128,T)
// int blocklen<byte>(N128 w, byte t)
// AggressiveInlining
int blocklen<byte>(N128 w, byte t)
{
    IL_0000: ldc.i4.s 16
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N128,T)
// int blocklen<sbyte>(N128 w, sbyte t)
// AggressiveInlining
int blocklen<sbyte>(N128 w, sbyte t)
{
    IL_0000: ldc.i4.s 16
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N128,T)
// int blocklen<ushort>(N128 w, ushort t)
// AggressiveInlining
int blocklen<ushort>(N128 w, ushort t)
{
    IL_0000: ldc.i4.s 16
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N128,T)
// int blocklen<short>(N128 w, short t)
// AggressiveInlining
int blocklen<short>(N128 w, short t)
{
    IL_0000: ldc.i4.s 16
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N128,T)
// int blocklen<uint>(N128 w, uint t)
// AggressiveInlining
int blocklen<uint>(N128 w, uint t)
{
    IL_0000: ldc.i4.s 16
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N128,T)
// int blocklen<int>(N128 w, int t)
// AggressiveInlining
int blocklen<int>(N128 w, int t)
{
    IL_0000: ldc.i4.s 16
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N128,T)
// int blocklen<ulong>(N128 w, ulong t)
// AggressiveInlining
int blocklen<ulong>(N128 w, ulong t)
{
    IL_0000: ldc.i4.s 16
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N128,T)
// int blocklen<long>(N128 w, long t)
// AggressiveInlining
int blocklen<long>(N128 w, long t)
{
    IL_0000: ldc.i4.s 16
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N128,T)
// int blocklen<float>(N128 w, float t)
// AggressiveInlining
int blocklen<float>(N128 w, float t)
{
    IL_0000: ldc.i4.s 16
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N128,T)
// int blocklen<double>(N128 w, double t)
// AggressiveInlining
int blocklen<double>(N128 w, double t)
{
    IL_0000: ldc.i4.s 16
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N256,T)
// int blocklen<byte>(N256 w, byte t)
// AggressiveInlining
int blocklen<byte>(N256 w, byte t)
{
    IL_0000: ldc.i4.s 32
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N256,T)
// int blocklen<sbyte>(N256 w, sbyte t)
// AggressiveInlining
int blocklen<sbyte>(N256 w, sbyte t)
{
    IL_0000: ldc.i4.s 32
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N256,T)
// int blocklen<ushort>(N256 w, ushort t)
// AggressiveInlining
int blocklen<ushort>(N256 w, ushort t)
{
    IL_0000: ldc.i4.s 32
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N256,T)
// int blocklen<short>(N256 w, short t)
// AggressiveInlining
int blocklen<short>(N256 w, short t)
{
    IL_0000: ldc.i4.s 32
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N256,T)
// int blocklen<uint>(N256 w, uint t)
// AggressiveInlining
int blocklen<uint>(N256 w, uint t)
{
    IL_0000: ldc.i4.s 32
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N256,T)
// int blocklen<int>(N256 w, int t)
// AggressiveInlining
int blocklen<int>(N256 w, int t)
{
    IL_0000: ldc.i4.s 32
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N256,T)
// int blocklen<ulong>(N256 w, ulong t)
// AggressiveInlining
int blocklen<ulong>(N256 w, ulong t)
{
    IL_0000: ldc.i4.s 32
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N256,T)
// int blocklen<long>(N256 w, long t)
// AggressiveInlining
int blocklen<long>(N256 w, long t)
{
    IL_0000: ldc.i4.s 32
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N256,T)
// int blocklen<float>(N256 w, float t)
// AggressiveInlining
int blocklen<float>(N256 w, float t)
{
    IL_0000: ldc.i4.s 32
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N256,T)
// int blocklen<double>(N256 w, double t)
// AggressiveInlining
int blocklen<double>(N256 w, double t)
{
    IL_0000: ldc.i4.s 32
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N512,T)
// int blocklen<byte>(N512 w, byte t)
// AggressiveInlining
int blocklen<byte>(N512 w, byte t)
{
    IL_0000: ldc.i4.s 64
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N512,T)
// int blocklen<sbyte>(N512 w, sbyte t)
// AggressiveInlining
int blocklen<sbyte>(N512 w, sbyte t)
{
    IL_0000: ldc.i4.s 64
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N512,T)
// int blocklen<ushort>(N512 w, ushort t)
// AggressiveInlining
int blocklen<ushort>(N512 w, ushort t)
{
    IL_0000: ldc.i4.s 64
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N512,T)
// int blocklen<short>(N512 w, short t)
// AggressiveInlining
int blocklen<short>(N512 w, short t)
{
    IL_0000: ldc.i4.s 64
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N512,T)
// int blocklen<uint>(N512 w, uint t)
// AggressiveInlining
int blocklen<uint>(N512 w, uint t)
{
    IL_0000: ldc.i4.s 64
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N512,T)
// int blocklen<int>(N512 w, int t)
// AggressiveInlining
int blocklen<int>(N512 w, int t)
{
    IL_0000: ldc.i4.s 64
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N512,T)
// int blocklen<ulong>(N512 w, ulong t)
// AggressiveInlining
int blocklen<ulong>(N512 w, ulong t)
{
    IL_0000: ldc.i4.s 64
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N512,T)
// int blocklen<long>(N512 w, long t)
// AggressiveInlining
int blocklen<long>(N512 w, long t)
{
    IL_0000: ldc.i4.s 64
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N512,T)
// int blocklen<float>(N512 w, float t)
// AggressiveInlining
int blocklen<float>(N512 w, float t)
{
    IL_0000: ldc.i4.s 64
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.DataBlocks::blocklen<T>(Z0.N512,T)
// int blocklen<double>(N512 w, double t)
// AggressiveInlining
int blocklen<double>(N512 w, double t)
{
    IL_0000: ldc.i4.s 64
    IL_0002: call System.Int32 System.Runtime.CompilerServices.Unsafe::SizeOf<T>()
    IL_0007: div
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
