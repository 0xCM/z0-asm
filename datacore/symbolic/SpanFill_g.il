// System.Void Z0.Symbolic::SpanFill<T>(T,System.Span`1<T>)
// void SpanFill<byte>(byte src, Span<byte> dst)
// IL
void SpanFill<byte>(byte src, Span<byte> dst)
{
    IL_0000: ldarga.s dst
    IL_0002: ldarg.0
    IL_0003: call System.Void System.Span`1<T>::Fill(T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Void Z0.Symbolic::SpanFill<T>(T,System.Span`1<T>)
// void SpanFill<sbyte>(sbyte src, Span<sbyte> dst)
// IL
void SpanFill<sbyte>(sbyte src, Span<sbyte> dst)
{
    IL_0000: ldarga.s dst
    IL_0002: ldarg.0
    IL_0003: call System.Void System.Span`1<T>::Fill(T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Void Z0.Symbolic::SpanFill<T>(T,System.Span`1<T>)
// void SpanFill<ushort>(ushort src, Span<ushort> dst)
// IL
void SpanFill<ushort>(ushort src, Span<ushort> dst)
{
    IL_0000: ldarga.s dst
    IL_0002: ldarg.0
    IL_0003: call System.Void System.Span`1<T>::Fill(T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Void Z0.Symbolic::SpanFill<T>(T,System.Span`1<T>)
// void SpanFill<short>(short src, Span<short> dst)
// IL
void SpanFill<short>(short src, Span<short> dst)
{
    IL_0000: ldarga.s dst
    IL_0002: ldarg.0
    IL_0003: call System.Void System.Span`1<T>::Fill(T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Void Z0.Symbolic::SpanFill<T>(T,System.Span`1<T>)
// void SpanFill<uint>(uint src, Span<uint> dst)
// IL
void SpanFill<uint>(uint src, Span<uint> dst)
{
    IL_0000: ldarga.s dst
    IL_0002: ldarg.0
    IL_0003: call System.Void System.Span`1<T>::Fill(T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Void Z0.Symbolic::SpanFill<T>(T,System.Span`1<T>)
// void SpanFill<int>(int src, Span<int> dst)
// IL
void SpanFill<int>(int src, Span<int> dst)
{
    IL_0000: ldarga.s dst
    IL_0002: ldarg.0
    IL_0003: call System.Void System.Span`1<T>::Fill(T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Void Z0.Symbolic::SpanFill<T>(T,System.Span`1<T>)
// void SpanFill<ulong>(ulong src, Span<ulong> dst)
// IL
void SpanFill<ulong>(ulong src, Span<ulong> dst)
{
    IL_0000: ldarga.s dst
    IL_0002: ldarg.0
    IL_0003: call System.Void System.Span`1<T>::Fill(T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Void Z0.Symbolic::SpanFill<T>(T,System.Span`1<T>)
// void SpanFill<long>(long src, Span<long> dst)
// IL
void SpanFill<long>(long src, Span<long> dst)
{
    IL_0000: ldarga.s dst
    IL_0002: ldarg.0
    IL_0003: call System.Void System.Span`1<T>::Fill(T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Void Z0.Symbolic::SpanFill<T>(T,System.Span`1<T>)
// void SpanFill<float>(float src, Span<float> dst)
// IL
void SpanFill<float>(float src, Span<float> dst)
{
    IL_0000: ldarga.s dst
    IL_0002: ldarg.0
    IL_0003: call System.Void System.Span`1<T>::Fill(T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Void Z0.Symbolic::SpanFill<T>(T,System.Span`1<T>)
// void SpanFill<double>(double src, Span<double> dst)
// IL
void SpanFill<double>(double src, Span<double> dst)
{
    IL_0000: ldarga.s dst
    IL_0002: ldarg.0
    IL_0003: call System.Void System.Span`1<T>::Fill(T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
