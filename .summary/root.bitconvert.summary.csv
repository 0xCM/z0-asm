Sequence  | Address         | Length  | Host                          | OpId                                                        | OpName        | OpSig                                                                           | Data
0         | 7ff7c86744e0h   | 87      | root/BitConvert               | GetBytes_g[8u](8u~in)                                       | GetBytes      | Span<byte> GetBytes<byte>(in byte src)                                          | 57 56 48 83 ec 28 48 8b f1 48 8b fa 48 b9 10 ea 73 c7 f7 7f 00 00 ba 01 00 00 00 e8 e0 28 bf 5e 48 83 c0 10 ba 01 00 00 00 0f b6 0f 88 08 48 89 06 89 56 08 48 8b c6 48 83 c4 28 5e 5f c3 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 00 00 00
1         | 7ff7c8674540h   | 87      | root/BitConvert               | GetBytes_g[8i](8i~in)                                       | GetBytes      | Span<byte> GetBytes<sbyte>(in sbyte src)                                        | 57 56 48 83 ec 28 48 8b f1 48 8b fa 48 b9 10 ea 73 c7 f7 7f 00 00 ba 01 00 00 00 e8 80 28 bf 5e 48 83 c0 10 ba 01 00 00 00 48 0f be 0f 88 08 48 89 06 89 56 08 48 8b c6 48 83 c4 28 5e 5f c3 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 00 00 00
2         | 7ff7c86745a0h   | 87      | root/BitConvert               | GetBytes_g[16u](16u~in)                                     | GetBytes      | Span<byte> GetBytes<ushort>(in ushort src)                                      | 57 56 48 83 ec 28 48 8b f1 48 8b fa 48 b9 10 ea 73 c7 f7 7f 00 00 ba 02 00 00 00 e8 20 28 bf 5e 48 83 c0 10 ba 02 00 00 00 0f b7 0f 66 89 08 48 89 06 89 56 08 48 8b c6 48 83 c4 28 5e 5f c3 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 00 00 00
3         | 7ff7c8674600h   | 87      | root/BitConvert               | GetBytes_g[16i](16i~in)                                     | GetBytes      | Span<byte> GetBytes<short>(in short src)                                        | 57 56 48 83 ec 28 48 8b f1 48 8b fa 48 b9 10 ea 73 c7 f7 7f 00 00 ba 02 00 00 00 e8 c0 27 bf 5e 48 83 c0 10 ba 02 00 00 00 48 0f bf 0f 66 89 08 48 89 06 89 56 08 48 8b c6 48 83 c4 28 5e 5f c3 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 00 00 00
4         | 7ff7c8674660h   | 87      | root/BitConvert               | GetBytes_g[32u](32u~in)                                     | GetBytes      | Span<byte> GetBytes<uint>(in uint src)                                          | 57 56 48 83 ec 28 48 8b f1 48 8b fa 48 b9 10 ea 73 c7 f7 7f 00 00 ba 04 00 00 00 e8 60 27 bf 5e 48 83 c0 10 ba 04 00 00 00 8b 0f 89 08 48 89 06 89 56 08 48 8b c6 48 83 c4 28 5e 5f c3 00 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 00 00 00
5         | 7ff7c86746c0h   | 87      | root/BitConvert               | GetBytes_g[32i](32i~in)                                     | GetBytes      | Span<byte> GetBytes<int>(in int src)                                            | 57 56 48 83 ec 28 48 8b f1 48 8b fa 48 b9 10 ea 73 c7 f7 7f 00 00 ba 04 00 00 00 e8 00 27 bf 5e 48 83 c0 10 ba 04 00 00 00 8b 0f 89 08 48 89 06 89 56 08 48 8b c6 48 83 c4 28 5e 5f c3 00 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 00 00 00
6         | 7ff7c8674720h   | 87      | root/BitConvert               | GetBytes_g[64u](64u~in)                                     | GetBytes      | Span<byte> GetBytes<ulong>(in ulong src)                                        | 57 56 48 83 ec 28 48 8b f1 48 8b fa 48 b9 10 ea 73 c7 f7 7f 00 00 ba 08 00 00 00 e8 a0 26 bf 5e 48 83 c0 10 ba 08 00 00 00 48 8b 0f 48 89 08 48 89 06 89 56 08 48 8b c6 48 83 c4 28 5e 5f c3 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 00 00 00
7         | 7ff7c8674780h   | 87      | root/BitConvert               | GetBytes_g[64i](64i~in)                                     | GetBytes      | Span<byte> GetBytes<long>(in long src)                                          | 57 56 48 83 ec 28 48 8b f1 48 8b fa 48 b9 10 ea 73 c7 f7 7f 00 00 ba 08 00 00 00 e8 40 26 bf 5e 48 83 c0 10 ba 08 00 00 00 48 8b 0f 48 89 08 48 89 06 89 56 08 48 8b c6 48 83 c4 28 5e 5f c3 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 00 00 00 00 00 00 00
8         | 7ff7c86747e0h   | 1224    | root/BitConvert               | GetBytes_g[32f](32f~in)                                     | GetBytes      | Span<byte> GetBytes<float>(in float src)                                        | 57 56 48 83 ec 28 c5 f8 77 48 8b f1 48 8b fa 48 b9 10 ea 73 c7 f7 7f 00 00 ba 04 00 00 00 e8 dd 25 bf 5e 48 83 c0 10 ba 04 00 00 00 c5 fa 10 07 c5 fa 11 00 48 89 06 89 56 08 48 8b c6 48 83 c4 28 5e 5f c3 cc cc 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 a8 48 b5 c8 f7 7f 00 00 57 56 48 83 ec 28 c5 f8 77 48 8b f1 48 8b fa 48 b9 10 ea 73 c7 f7 7f 00 00 ba 08 00 00 00 e8 7d 25 bf 5e 48 83 c0 10 ba 08 00 00 00 c5 fb 10 07 c5 fb 11 00 48 89 06 89 56 08 48 8b c6 48 83 c4 28 5e 5f c3 cc cc 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 50 4a b5 c8 f7 7f 00 00 48 83 ec 28 90 41 8b c0 45 8b d1 49 03 c2 44 8b 52 08 49 3b c2 77 18 48 8b 02 49 63 d0 48 03 c2 48 89 01 44 89 49 08 48 8b c1 48 83 c4 28 c3 e8 4c 08 10 ff cc 00 00 00 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 4b 0d bf 5e 5e 00 00 c0 1b b6 c8 f7 7f 00 00 e8 3b 0d bf 5e 5e 00 00 20 1c b6 c8 f7 7f 00 00 e8 2b 0d bf 5e 5e 00 00 80 1c b6 c8 f7 7f 00 00 e8 1b 0d bf 5e 5e 00 00 e0 1c b6 c8 f7 7f 00 00 e8 0b 0d bf 5e 5e 00 00 40 1d b6 c8 f7 7f 00 00 e8 fb 0c bf 5e 5e 00 00 a0 1d b6 c8 f7 7f 00 00 e8 eb 0c bf 5e 5e 00 00 00 1e b6 c8 f7 7f 00 00 e8 db 0c bf 5e 5e 00 00 60 1e b6 c8 f7 7f 00 00 e8 cb 0c bf 5e 5e 00 00 c0 1e b6 c8 f7 7f 00 00 e8 bb 0c bf 5e 5e 00 00 20 1f b6 c8 f7 7f 00 00 e8 ab 0c bf 5e 5e 00 00 80 1f b6 c8 f7 7f 00 00 e8 9b 0c bf 5e 5e 00 00 e0 1f b6 c8 f7 7f 00 00 e8 8b 0c bf 5e 5e 00 00 40 20 b6 c8 f7 7f 00 00 e8 7b 0c bf 5e 5e 00 00 a0 20 b6 c8 f7 7f 00 00 e8 6b 0c bf 5e 5e 00 00 00 21 b6 c8 f7 7f 00 00 e8 5b 0c bf 5e 5e 00 00 60 21 b6 c8 f7 7f 00 00 e8 4b 0c bf 5e 5e 00 00 c0 21 b6 c8 f7 7f 00 00 e8 3b 0c bf 5e 5e 00 00 20 22 b6 c8 f7 7f 00 00 e8 2b 0c bf 5e 5e 00 00 80 22 b6 c8 f7 7f 00 00 e8 1b 0c bf 5e 5e 00 00 e0 22 b6 c8 f7 7f 00 00 e8 0b 0c bf 5e 5e 00 00 40 23 b6 c8 f7 7f 00 00 e8 fb 0b bf 5e 5e 00 00 a0 23 b6 c8 f7 7f 00 00 e8 eb 0b bf 5e 5e 00 00 00 24 b6 c8 f7 7f 00 00 e8 db 0b bf 5e 5e 00 00 60 24 b6 c8 f7 7f 00 00 e8 cb 0b bf 5e 5e 00 00 c0 24 b6 c8 f7 7f 00 00 e8 bb 0b bf 5e 5e 00 00 20 25 b6 c8 f7 7f 00 00 e8 ab 0b bf 5e 5e 00 00 80 25 b6 c8 f7 7f 00 00 e8 9b 0b bf 5e 5e 00 00 e0 25 b6 c8 f7 7f 00 00 e8 8b 0b bf 5e 5e 00 00 40 26 b6 c8 f7 7f 00 00 e8 7b 0b bf 5e 5e 00 00 a0 26 b6 c8 f7 7f 00 00 e8 6b 0b bf 5e 5e 00 00 00 27 b6 c8 f7 7f 00 00 e8 5b 0b bf 5e 5e 00 00 60 27 b6 c8 f7 7f 00 00 e8 4b 0b bf 5e 5e 00 00 c0 27 b6 c8 f7 7f 00 00 e8 3b 0b bf 5e 5e 00 00 20 28 b6 c8 f7 7f 00 00 e8 2b 0b bf 5e 5e 00 00 80 28 b6 c8 f7 7f 00 00 e8 1b 0b bf 5e 5e 00 00 e0 28 b6 c8 f7 7f 00 00 e8 0b 0b bf 5e 5e 00 00 40 29 b6 c8 f7 7f 00 00 e8 fb 0a bf 5e 5e 00 00 a0 29 b6 c8 f7 7f 00 00 e8 eb 0a bf 5e 5e 00 00 00 2a b6 c8 f7 7f 00 00 e8 db 0a bf 5e 5e 00 00 60 2a b6 c8 f7 7f 00 00 e8 cb 0a bf 5e 5e 00 00 c0 2a b6 c8 f7 7f 00 00 e8 bb 0a bf 5e 5e 00 00 20 2b b6 c8 f7 7f 00 00 e8 ab 0a bf 5e 5e 00 00 80 2b b6 c8 f7 7f 00 00 e8 9b 0a bf 5e 5e 00 00 e0 2b b6 c8 f7 7f 00 00 e8 8b 0a bf 5e 5e 00 00 40 2c b6 c8 f7 7f 00 00 e8 7b 0a bf 5e 5e 00 00 a0 2c b6 c8 f7 7f 00 00 e8 6b 0a bf 5e 5e 00 00 00 2d b6 c8 f7 7f 00 00 e8 5b 0a bf 5e 5e 00 00 60 2d b6 c8 f7 7f 00 00 e8 4b 0a bf 5e 5e 00 00 c0 2d b6 c8 f7 7f 00 00 e8 3b 0a bf 5e 5e 00 00 20 2e b6 c8 f7 7f 00 00 e8 2b 0a bf 5e 5e 00 00 80 2e b6 c8 f7 7f 00 00 e8 1b 0a bf 5e 5e 00 00 e0 2e b6 c8 f7 7f 00 00 e8 0b 0a bf 5e 5e 00 00 40 2f b6 c8 f7 7f 00 00 e8 fb 09 bf 5e 5e 00 00 a0 2f b6 c8 f7 7f 00 00 e8 eb 09 bf 5e 5e 00 00 00 30 b6 c8 f7 7f 00 00 e8 db 09 bf 5e 5e 00 00 60 30 b6 c8 f7 7f 00 00 e8 cb 09 bf 5e 5e 00 00 c0 30 b6 c8 f7 7f 00 00 e8 bb 09 bf 5e 5e 00 00 20 31 b6 c8 f7 7f 00 00 e8 ab 09 bf 5e 5e 00 00 80 31 b6 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
9         | 7ff7c8674840h   | 1128    | root/BitConvert               | GetBytes_g[64f](64f~in)                                     | GetBytes      | Span<byte> GetBytes<double>(in double src)                                      | 57 56 48 83 ec 28 c5 f8 77 48 8b f1 48 8b fa 48 b9 10 ea 73 c7 f7 7f 00 00 ba 08 00 00 00 e8 7d 25 bf 5e 48 83 c0 10 ba 08 00 00 00 c5 fb 10 07 c5 fb 11 00 48 89 06 89 56 08 48 8b c6 48 83 c4 28 5e 5f c3 cc cc 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 50 4a b5 c8 f7 7f 00 00 48 83 ec 28 90 41 8b c0 45 8b d1 49 03 c2 44 8b 52 08 49 3b c2 77 18 48 8b 02 49 63 d0 48 03 c2 48 89 01 44 89 49 08 48 8b c1 48 83 c4 28 c3 e8 4c 08 10 ff cc 00 00 00 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 4b 0d bf 5e 5e 00 00 c0 1b b6 c8 f7 7f 00 00 e8 3b 0d bf 5e 5e 00 00 20 1c b6 c8 f7 7f 00 00 e8 2b 0d bf 5e 5e 00 00 80 1c b6 c8 f7 7f 00 00 e8 1b 0d bf 5e 5e 00 00 e0 1c b6 c8 f7 7f 00 00 e8 0b 0d bf 5e 5e 00 00 40 1d b6 c8 f7 7f 00 00 e8 fb 0c bf 5e 5e 00 00 a0 1d b6 c8 f7 7f 00 00 e8 eb 0c bf 5e 5e 00 00 00 1e b6 c8 f7 7f 00 00 e8 db 0c bf 5e 5e 00 00 60 1e b6 c8 f7 7f 00 00 e8 cb 0c bf 5e 5e 00 00 c0 1e b6 c8 f7 7f 00 00 e8 bb 0c bf 5e 5e 00 00 20 1f b6 c8 f7 7f 00 00 e8 ab 0c bf 5e 5e 00 00 80 1f b6 c8 f7 7f 00 00 e8 9b 0c bf 5e 5e 00 00 e0 1f b6 c8 f7 7f 00 00 e8 8b 0c bf 5e 5e 00 00 40 20 b6 c8 f7 7f 00 00 e8 7b 0c bf 5e 5e 00 00 a0 20 b6 c8 f7 7f 00 00 e8 6b 0c bf 5e 5e 00 00 00 21 b6 c8 f7 7f 00 00 e8 5b 0c bf 5e 5e 00 00 60 21 b6 c8 f7 7f 00 00 e8 4b 0c bf 5e 5e 00 00 c0 21 b6 c8 f7 7f 00 00 e8 3b 0c bf 5e 5e 00 00 20 22 b6 c8 f7 7f 00 00 e8 2b 0c bf 5e 5e 00 00 80 22 b6 c8 f7 7f 00 00 e8 1b 0c bf 5e 5e 00 00 e0 22 b6 c8 f7 7f 00 00 e8 0b 0c bf 5e 5e 00 00 40 23 b6 c8 f7 7f 00 00 e8 fb 0b bf 5e 5e 00 00 a0 23 b6 c8 f7 7f 00 00 e8 eb 0b bf 5e 5e 00 00 00 24 b6 c8 f7 7f 00 00 e8 db 0b bf 5e 5e 00 00 60 24 b6 c8 f7 7f 00 00 e8 cb 0b bf 5e 5e 00 00 c0 24 b6 c8 f7 7f 00 00 e8 bb 0b bf 5e 5e 00 00 20 25 b6 c8 f7 7f 00 00 e8 ab 0b bf 5e 5e 00 00 80 25 b6 c8 f7 7f 00 00 e8 9b 0b bf 5e 5e 00 00 e0 25 b6 c8 f7 7f 00 00 e8 8b 0b bf 5e 5e 00 00 40 26 b6 c8 f7 7f 00 00 e8 7b 0b bf 5e 5e 00 00 a0 26 b6 c8 f7 7f 00 00 e8 6b 0b bf 5e 5e 00 00 00 27 b6 c8 f7 7f 00 00 e8 5b 0b bf 5e 5e 00 00 60 27 b6 c8 f7 7f 00 00 e8 4b 0b bf 5e 5e 00 00 c0 27 b6 c8 f7 7f 00 00 e8 3b 0b bf 5e 5e 00 00 20 28 b6 c8 f7 7f 00 00 e8 2b 0b bf 5e 5e 00 00 80 28 b6 c8 f7 7f 00 00 e8 1b 0b bf 5e 5e 00 00 e0 28 b6 c8 f7 7f 00 00 e8 0b 0b bf 5e 5e 00 00 40 29 b6 c8 f7 7f 00 00 e8 fb 0a bf 5e 5e 00 00 a0 29 b6 c8 f7 7f 00 00 e8 eb 0a bf 5e 5e 00 00 00 2a b6 c8 f7 7f 00 00 e8 db 0a bf 5e 5e 00 00 60 2a b6 c8 f7 7f 00 00 e8 cb 0a bf 5e 5e 00 00 c0 2a b6 c8 f7 7f 00 00 e8 bb 0a bf 5e 5e 00 00 20 2b b6 c8 f7 7f 00 00 e8 ab 0a bf 5e 5e 00 00 80 2b b6 c8 f7 7f 00 00 e8 9b 0a bf 5e 5e 00 00 e0 2b b6 c8 f7 7f 00 00 e8 8b 0a bf 5e 5e 00 00 40 2c b6 c8 f7 7f 00 00 e8 7b 0a bf 5e 5e 00 00 a0 2c b6 c8 f7 7f 00 00 e8 6b 0a bf 5e 5e 00 00 00 2d b6 c8 f7 7f 00 00 e8 5b 0a bf 5e 5e 00 00 60 2d b6 c8 f7 7f 00 00 e8 4b 0a bf 5e 5e 00 00 c0 2d b6 c8 f7 7f 00 00 e8 3b 0a bf 5e 5e 00 00 20 2e b6 c8 f7 7f 00 00 e8 2b 0a bf 5e 5e 00 00 80 2e b6 c8 f7 7f 00 00 e8 1b 0a bf 5e 5e 00 00 e0 2e b6 c8 f7 7f 00 00 e8 0b 0a bf 5e 5e 00 00 40 2f b6 c8 f7 7f 00 00 e8 fb 09 bf 5e 5e 00 00 a0 2f b6 c8 f7 7f 00 00 e8 eb 09 bf 5e 5e 00 00 00 30 b6 c8 f7 7f 00 00 e8 db 09 bf 5e 5e 00 00 60 30 b6 c8 f7 7f 00 00 e8 cb 09 bf 5e 5e 00 00 c0 30 b6 c8 f7 7f 00 00 e8 bb 09 bf 5e 5e 00 00 20 31 b6 c8 f7 7f 00 00 e8 ab 09 bf 5e 5e 00 00 80 31 b6 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
10        | 7ff7c86748a0h   | 1032    | root/BitConvert               | GetBytes_g[8u](uspan8u,32i,32i)                             | GetBytes      | ReadOnlySpan<byte> GetBytes<byte>(ReadOnlySpan<byte> src, int offset, int count)| 48 83 ec 28 90 41 8b c0 45 8b d1 49 03 c2 44 8b 52 08 49 3b c2 77 18 48 8b 02 49 63 d0 48 03 c2 48 89 01 44 89 49 08 48 8b c1 48 83 c4 28 c3 e8 4c 08 10 ff cc 00 00 00 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 4b 0d bf 5e 5e 00 00 c0 1b b6 c8 f7 7f 00 00 e8 3b 0d bf 5e 5e 00 00 20 1c b6 c8 f7 7f 00 00 e8 2b 0d bf 5e 5e 00 00 80 1c b6 c8 f7 7f 00 00 e8 1b 0d bf 5e 5e 00 00 e0 1c b6 c8 f7 7f 00 00 e8 0b 0d bf 5e 5e 00 00 40 1d b6 c8 f7 7f 00 00 e8 fb 0c bf 5e 5e 00 00 a0 1d b6 c8 f7 7f 00 00 e8 eb 0c bf 5e 5e 00 00 00 1e b6 c8 f7 7f 00 00 e8 db 0c bf 5e 5e 00 00 60 1e b6 c8 f7 7f 00 00 e8 cb 0c bf 5e 5e 00 00 c0 1e b6 c8 f7 7f 00 00 e8 bb 0c bf 5e 5e 00 00 20 1f b6 c8 f7 7f 00 00 e8 ab 0c bf 5e 5e 00 00 80 1f b6 c8 f7 7f 00 00 e8 9b 0c bf 5e 5e 00 00 e0 1f b6 c8 f7 7f 00 00 e8 8b 0c bf 5e 5e 00 00 40 20 b6 c8 f7 7f 00 00 e8 7b 0c bf 5e 5e 00 00 a0 20 b6 c8 f7 7f 00 00 e8 6b 0c bf 5e 5e 00 00 00 21 b6 c8 f7 7f 00 00 e8 5b 0c bf 5e 5e 00 00 60 21 b6 c8 f7 7f 00 00 e8 4b 0c bf 5e 5e 00 00 c0 21 b6 c8 f7 7f 00 00 e8 3b 0c bf 5e 5e 00 00 20 22 b6 c8 f7 7f 00 00 e8 2b 0c bf 5e 5e 00 00 80 22 b6 c8 f7 7f 00 00 e8 1b 0c bf 5e 5e 00 00 e0 22 b6 c8 f7 7f 00 00 e8 0b 0c bf 5e 5e 00 00 40 23 b6 c8 f7 7f 00 00 e8 fb 0b bf 5e 5e 00 00 a0 23 b6 c8 f7 7f 00 00 e8 eb 0b bf 5e 5e 00 00 00 24 b6 c8 f7 7f 00 00 e8 db 0b bf 5e 5e 00 00 60 24 b6 c8 f7 7f 00 00 e8 cb 0b bf 5e 5e 00 00 c0 24 b6 c8 f7 7f 00 00 e8 bb 0b bf 5e 5e 00 00 20 25 b6 c8 f7 7f 00 00 e8 ab 0b bf 5e 5e 00 00 80 25 b6 c8 f7 7f 00 00 e8 9b 0b bf 5e 5e 00 00 e0 25 b6 c8 f7 7f 00 00 e8 8b 0b bf 5e 5e 00 00 40 26 b6 c8 f7 7f 00 00 e8 7b 0b bf 5e 5e 00 00 a0 26 b6 c8 f7 7f 00 00 e8 6b 0b bf 5e 5e 00 00 00 27 b6 c8 f7 7f 00 00 e8 5b 0b bf 5e 5e 00 00 60 27 b6 c8 f7 7f 00 00 e8 4b 0b bf 5e 5e 00 00 c0 27 b6 c8 f7 7f 00 00 e8 3b 0b bf 5e 5e 00 00 20 28 b6 c8 f7 7f 00 00 e8 2b 0b bf 5e 5e 00 00 80 28 b6 c8 f7 7f 00 00 e8 1b 0b bf 5e 5e 00 00 e0 28 b6 c8 f7 7f 00 00 e8 0b 0b bf 5e 5e 00 00 40 29 b6 c8 f7 7f 00 00 e8 fb 0a bf 5e 5e 00 00 a0 29 b6 c8 f7 7f 00 00 e8 eb 0a bf 5e 5e 00 00 00 2a b6 c8 f7 7f 00 00 e8 db 0a bf 5e 5e 00 00 60 2a b6 c8 f7 7f 00 00 e8 cb 0a bf 5e 5e 00 00 c0 2a b6 c8 f7 7f 00 00 e8 bb 0a bf 5e 5e 00 00 20 2b b6 c8 f7 7f 00 00 e8 ab 0a bf 5e 5e 00 00 80 2b b6 c8 f7 7f 00 00 e8 9b 0a bf 5e 5e 00 00 e0 2b b6 c8 f7 7f 00 00 e8 8b 0a bf 5e 5e 00 00 40 2c b6 c8 f7 7f 00 00 e8 7b 0a bf 5e 5e 00 00 a0 2c b6 c8 f7 7f 00 00 e8 6b 0a bf 5e 5e 00 00 00 2d b6 c8 f7 7f 00 00 e8 5b 0a bf 5e 5e 00 00 60 2d b6 c8 f7 7f 00 00 e8 4b 0a bf 5e 5e 00 00 c0 2d b6 c8 f7 7f 00 00 e8 3b 0a bf 5e 5e 00 00 20 2e b6 c8 f7 7f 00 00 e8 2b 0a bf 5e 5e 00 00 80 2e b6 c8 f7 7f 00 00 e8 1b 0a bf 5e 5e 00 00 e0 2e b6 c8 f7 7f 00 00 e8 0b 0a bf 5e 5e 00 00 40 2f b6 c8 f7 7f 00 00 e8 fb 09 bf 5e 5e 00 00 a0 2f b6 c8 f7 7f 00 00 e8 eb 09 bf 5e 5e 00 00 00 30 b6 c8 f7 7f 00 00 e8 db 09 bf 5e 5e 00 00 60 30 b6 c8 f7 7f 00 00 e8 cb 09 bf 5e 5e 00 00 c0 30 b6 c8 f7 7f 00 00 e8 bb 09 bf 5e 5e 00 00 20 31 b6 c8 f7 7f 00 00 e8 ab 09 bf 5e 5e 00 00 80 31 b6 c8 f7 7f 00 00 00 00 00 00 00 00 00 00
11        | 7ff7c8674d00h   | 163     | root/BitConvert               | GetBytes_g[8i](uspan8i,32i,32i)                             | GetBytes      | ReadOnlySpan<byte> GetBytes<sbyte>(ReadOnlySpan<sbyte> src, int offset, int count)| 48 83 ec 28 90 41 8b c0 45 8b d1 49 03 c2 44 8b 52 08 49 3b c2 77 18 48 8b 02 49 63 d0 48 03 c2 48 89 01 44 89 49 08 48 8b c1 48 83 c4 28 c3 e8 ec 03 10 ff cc 00 00 00 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 a8 4b b5 c8 f7 7f 00 00 48 83 ec 28 90 41 8b c0 45 8b d1 49 03 c2 44 8b 52 08 49 3b c2 77 23 48 8b 02 49 63 d0 48 8d 04 50 41 6b d1 02 70 0e 48 89 01 89 51 08 48 8b c1 48 83 c4 28 c3 e8 96 ae d1 5e e8 91 03 10 ff cc 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 00 00 00
12        | 7ff7c8674d50h   | 83      | root/BitConvert               | GetBytes_g[16u](uspan16u,32i,32i)                           | GetBytes      | ReadOnlySpan<byte> GetBytes<ushort>(ReadOnlySpan<ushort> src, int offset, int count)| 48 83 ec 28 90 41 8b c0 45 8b d1 49 03 c2 44 8b 52 08 49 3b c2 77 23 48 8b 02 49 63 d0 48 8d 04 50 41 6b d1 02 70 0e 48 89 01 89 51 08 48 8b c1 48 83 c4 28 c3 e8 96 ae d1 5e e8 91 03 10 ff cc 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 00 00 00
13        | 7ff7c8674db0h   | 83      | root/BitConvert               | GetBytes_g[16i](uspan16i,32i,32i)                           | GetBytes      | ReadOnlySpan<byte> GetBytes<short>(ReadOnlySpan<short> src, int offset, int count)| 48 83 ec 28 90 41 8b c0 45 8b d1 49 03 c2 44 8b 52 08 49 3b c2 77 23 48 8b 02 49 63 d0 48 8d 04 50 41 6b d1 02 70 0e 48 89 01 89 51 08 48 8b c1 48 83 c4 28 c3 e8 36 ae d1 5e e8 31 03 10 ff cc 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 00 00 00
14        | 7ff7c8674e10h   | 83      | root/BitConvert               | GetBytes_g[32u](uspan32u,32i,32i)                           | GetBytes      | ReadOnlySpan<byte> GetBytes<uint>(ReadOnlySpan<uint> src, int offset, int count)| 48 83 ec 28 90 41 8b c0 45 8b d1 49 03 c2 44 8b 52 08 49 3b c2 77 23 48 8b 02 49 63 d0 48 8d 04 90 41 6b d1 04 70 0e 48 89 01 89 51 08 48 8b c1 48 83 c4 28 c3 e8 d6 ad d1 5e e8 d1 02 10 ff cc 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 00 00 00
15        | 7ff7c8674e70h   | 83      | root/BitConvert               | GetBytes_g[32i](uspan32i,32i,32i)                           | GetBytes      | ReadOnlySpan<byte> GetBytes<int>(ReadOnlySpan<int> src, int offset, int count)  | 48 83 ec 28 90 41 8b c0 45 8b d1 49 03 c2 44 8b 52 08 49 3b c2 77 23 48 8b 02 49 63 d0 48 8d 04 90 41 6b d1 04 70 0e 48 89 01 89 51 08 48 8b c1 48 83 c4 28 c3 e8 76 ad d1 5e e8 71 02 10 ff cc 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 00 00 00
16        | 7ff7c8674ed0h   | 83      | root/BitConvert               | GetBytes_g[64u](uspan64u,32i,32i)                           | GetBytes      | ReadOnlySpan<byte> GetBytes<ulong>(ReadOnlySpan<ulong> src, int offset, int count)| 48 83 ec 28 90 41 8b c0 45 8b d1 49 03 c2 44 8b 52 08 49 3b c2 77 23 48 8b 02 49 63 d0 48 8d 04 d0 41 6b d1 08 70 0e 48 89 01 89 51 08 48 8b c1 48 83 c4 28 c3 e8 16 ad d1 5e e8 11 02 10 ff cc 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 00 00 00
17        | 7ff7c8674f30h   | 83      | root/BitConvert               | GetBytes_g[64i](uspan64i,32i,32i)                           | GetBytes      | ReadOnlySpan<byte> GetBytes<long>(ReadOnlySpan<long> src, int offset, int count)| 48 83 ec 28 90 41 8b c0 45 8b d1 49 03 c2 44 8b 52 08 49 3b c2 77 23 48 8b 02 49 63 d0 48 8d 04 d0 41 6b d1 08 70 0e 48 89 01 89 51 08 48 8b c1 48 83 c4 28 c3 e8 b6 ac d1 5e e8 b1 01 10 ff cc 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 00 00 00
18        | 7ff7c8674f90h   | 83      | root/BitConvert               | GetBytes_g[32f](uspan32f,32i,32i)                           | GetBytes      | ReadOnlySpan<byte> GetBytes<float>(ReadOnlySpan<float> src, int offset, int count)| 48 83 ec 28 90 41 8b c0 45 8b d1 49 03 c2 44 8b 52 08 49 3b c2 77 23 48 8b 02 49 63 d0 48 8d 04 90 41 6b d1 04 70 0e 48 89 01 89 51 08 48 8b c1 48 83 c4 28 c3 e8 56 ac d1 5e e8 51 01 10 ff cc 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 00 00 00
19        | 7ff7c8674ff0h   | 83      | root/BitConvert               | GetBytes_g[64f](uspan64f,32i,32i)                           | GetBytes      | ReadOnlySpan<byte> GetBytes<double>(ReadOnlySpan<double> src, int offset, int count)| 48 83 ec 28 90 41 8b c0 45 8b d1 49 03 c2 44 8b 52 08 49 3b c2 77 23 48 8b 02 49 63 d0 48 8d 04 d0 41 6b d1 08 70 0e 48 89 01 89 51 08 48 8b c1 48 83 c4 28 c3 e8 f6 ab d1 5e e8 f1 00 10 ff cc 19 04 01 00 04 42 00 00 40 00 00 00 00 00 00 00 00 00 00
20        | 7ff7c8675050h   | 55      | root/BitConvert               | GetBytes_g[8u](8u~in,span8u)                                | GetBytes      | void GetBytes<byte>(in byte src, Span<byte> dst)                                | 48 83 ec 18 33 c0 48 89 44 24 08 48 8b 02 8b 52 08 0f b6 09 88 08 48 89 44 24 08 89 54 24 10 48 83 c4 18 c3 19 04 01 00 04 22 00 00 40 00 00 00 00 00 00 00 00 00 00
21        | 7ff7c8675090h   | 247     | root/BitConvert               | GetBytes_g[8i](8i~in,span8u)                                | GetBytes      | void GetBytes<sbyte>(in sbyte src, Span<byte> dst)                              | 48 83 ec 18 33 c0 48 89 44 24 08 48 8b 02 8b 52 08 48 0f be 09 88 08 48 89 44 24 08 89 54 24 10 48 83 c4 18 c3 00 00 00 19 04 01 00 04 22 00 00 40 00 00 00 00 00 00 00 e0 52 b5 c8 f7 7f 00 00 48 83 ec 18 33 c0 48 89 44 24 08 48 8b 02 8b 52 08 0f b7 09 66 89 08 48 89 44 24 08 89 54 24 10 48 83 c4 18 c3 00 00 00 19 04 01 00 04 22 00 00 40 00 00 00 00 00 00 00 68 53 b5 c8 f7 7f 00 00 48 83 ec 18 33 c0 48 89 44 24 08 48 8b 02 8b 52 08 48 0f bf 09 66 89 08 48 89 44 24 08 89 54 24 10 48 83 c4 18 c3 00 00 19 04 01 00 04 22 00 00 40 00 00 00 00 00 00 00 f0 53 b5 c8 f7 7f 00 00 48 83 ec 18 33 c0 48 89 44 24 08 48 8b 02 8b 52 08 8b 09 89 08 48 89 44 24 08 89 54 24 10 48 83 c4 18 c3 00 19 04 01 00 04 22 00 00 40 00 00 00 00 00 00 00 00 00 00
22        | 7ff7c86750d0h   | 183     | root/BitConvert               | GetBytes_g[16u](16u~in,span8u)                              | GetBytes      | void GetBytes<ushort>(in ushort src, Span<byte> dst)                            | 48 83 ec 18 33 c0 48 89 44 24 08 48 8b 02 8b 52 08 0f b7 09 66 89 08 48 89 44 24 08 89 54 24 10 48 83 c4 18 c3 00 00 00 19 04 01 00 04 22 00 00 40 00 00 00 00 00 00 00 68 53 b5 c8 f7 7f 00 00 48 83 ec 18 33 c0 48 89 44 24 08 48 8b 02 8b 52 08 48 0f bf 09 66 89 08 48 89 44 24 08 89 54 24 10 48 83 c4 18 c3 00 00 19 04 01 00 04 22 00 00 40 00 00 00 00 00 00 00 f0 53 b5 c8 f7 7f 00 00 48 83 ec 18 33 c0 48 89 44 24 08 48 8b 02 8b 52 08 8b 09 89 08 48 89 44 24 08 89 54 24 10 48 83 c4 18 c3 00 19 04 01 00 04 22 00 00 40 00 00 00 00 00 00 00 00 00 00
23        | 7ff7c8675110h   | 119     | root/BitConvert               | GetBytes_g[16i](16i~in,span8u)                              | GetBytes      | void GetBytes<short>(in short src, Span<byte> dst)                              | 48 83 ec 18 33 c0 48 89 44 24 08 48 8b 02 8b 52 08 48 0f bf 09 66 89 08 48 89 44 24 08 89 54 24 10 48 83 c4 18 c3 00 00 19 04 01 00 04 22 00 00 40 00 00 00 00 00 00 00 f0 53 b5 c8 f7 7f 00 00 48 83 ec 18 33 c0 48 89 44 24 08 48 8b 02 8b 52 08 8b 09 89 08 48 89 44 24 08 89 54 24 10 48 83 c4 18 c3 00 19 04 01 00 04 22 00 00 40 00 00 00 00 00 00 00 00 00 00
24        | 7ff7c8675150h   | 55      | root/BitConvert               | GetBytes_g[32u](32u~in,span8u)                              | GetBytes      | void GetBytes<uint>(in uint src, Span<byte> dst)                                | 48 83 ec 18 33 c0 48 89 44 24 08 48 8b 02 8b 52 08 8b 09 89 08 48 89 44 24 08 89 54 24 10 48 83 c4 18 c3 00 19 04 01 00 04 22 00 00 40 00 00 00 00 00 00 00 00 00 00
25        | 7ff7c8675190h   | 55      | root/BitConvert               | GetBytes_g[32i](32i~in,span8u)                              | GetBytes      | void GetBytes<int>(in int src, Span<byte> dst)                                  | 48 83 ec 18 33 c0 48 89 44 24 08 48 8b 02 8b 52 08 8b 09 89 08 48 89 44 24 08 89 54 24 10 48 83 c4 18 c3 00 19 04 01 00 04 22 00 00 40 00 00 00 00 00 00 00 00 00 00
26        | 7ff7c86751d0h   | 291     | root/BitConvert               | GetBytes_g[64u](64u~in,span8u)                              | GetBytes      | void GetBytes<ulong>(in ulong src, Span<byte> dst)                              | 48 83 ec 18 33 c0 48 89 44 24 08 48 8b 02 8b 52 08 48 8b 09 48 89 08 48 89 44 24 08 89 54 24 10 48 83 c4 18 c3 00 00 00 19 04 01 00 04 22 00 00 40 00 00 00 00 00 00 00 88 55 b5 c8 f7 7f 00 00 48 83 ec 18 33 c0 48 89 44 24 08 48 8b 02 8b 52 08 48 8b 09 48 89 08 48 89 44 24 08 89 54 24 10 48 83 c4 18 c3 00 00 00 19 04 01 00 04 22 00 00 40 00 00 00 00 00 00 00 10 56 b5 c8 f7 7f 00 00 48 83 ec 18 c5 f8 77 33 c0 48 89 44 24 08 48 8b 02 8b 52 08 c5 fa 10 01 c5 fa 11 00 48 89 44 24 08 89 54 24 10 48 83 c4 18 c3 cc cc 19 04 01 00 04 22 00 00 40 00 00 00 98 56 b5 c8 f7 7f 00 00 48 83 ec 18 c5 f8 77 33 c0 48 89 44 24 08 48 8b 02 8b 52 08 c5 fb 10 01 c5 fb 11 00 48 89 44 24 08 89 54 24 10 48 83 c4 18 c3 cc cc 19 04 01 00 04 22 00 00 40 00 00 00 38 57 b5 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 48 0f bf 04 10 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
27        | 7ff7c8675210h   | 227     | root/BitConvert               | GetBytes_g[64i](64i~in,span8u)                              | GetBytes      | void GetBytes<long>(in long src, Span<byte> dst)                                | 48 83 ec 18 33 c0 48 89 44 24 08 48 8b 02 8b 52 08 48 8b 09 48 89 08 48 89 44 24 08 89 54 24 10 48 83 c4 18 c3 00 00 00 19 04 01 00 04 22 00 00 40 00 00 00 00 00 00 00 10 56 b5 c8 f7 7f 00 00 48 83 ec 18 c5 f8 77 33 c0 48 89 44 24 08 48 8b 02 8b 52 08 c5 fa 10 01 c5 fa 11 00 48 89 44 24 08 89 54 24 10 48 83 c4 18 c3 cc cc 19 04 01 00 04 22 00 00 40 00 00 00 98 56 b5 c8 f7 7f 00 00 48 83 ec 18 c5 f8 77 33 c0 48 89 44 24 08 48 8b 02 8b 52 08 c5 fb 10 01 c5 fb 11 00 48 89 44 24 08 89 54 24 10 48 83 c4 18 c3 cc cc 19 04 01 00 04 22 00 00 40 00 00 00 38 57 b5 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 48 0f bf 04 10 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
28        | 7ff7c8675250h   | 163     | root/BitConvert               | GetBytes_g[32f](32f~in,span8u)                              | GetBytes      | void GetBytes<float>(in float src, Span<byte> dst)                              | 48 83 ec 18 c5 f8 77 33 c0 48 89 44 24 08 48 8b 02 8b 52 08 c5 fa 10 01 c5 fa 11 00 48 89 44 24 08 89 54 24 10 48 83 c4 18 c3 cc cc 19 04 01 00 04 22 00 00 40 00 00 00 98 56 b5 c8 f7 7f 00 00 48 83 ec 18 c5 f8 77 33 c0 48 89 44 24 08 48 8b 02 8b 52 08 c5 fb 10 01 c5 fb 11 00 48 89 44 24 08 89 54 24 10 48 83 c4 18 c3 cc cc 19 04 01 00 04 22 00 00 40 00 00 00 38 57 b5 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 48 0f bf 04 10 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
29        | 7ff7c8675290h   | 99      | root/BitConvert               | GetBytes_g[64f](64f~in,span8u)                              | GetBytes      | void GetBytes<double>(in double src, Span<byte> dst)                            | 48 83 ec 18 c5 f8 77 33 c0 48 89 44 24 08 48 8b 02 8b 52 08 c5 fb 10 01 c5 fb 11 00 48 89 44 24 08 89 54 24 10 48 83 c4 18 c3 cc cc 19 04 01 00 04 22 00 00 40 00 00 00 38 57 b5 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 48 0f bf 04 10 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
30        | 7ff7c86752d0h   | 35      | root/BitConvert               | ToInt16_(uspan8u,32i)                                       | ToInt16       | short ToInt16(ReadOnlySpan<byte> src, int offset)                               | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 0f bf 04 10 c3 00 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
31        | 7ff7c8675300h   | 295     | root/BitConvert               | ToUInt16_(uspan8u,32i)                                      | ToUInt16      | ushort ToUInt16(ReadOnlySpan<byte> src, int offset)                             | 0f 1f 44 00 00 48 8b 01 48 63 d2 0f b7 04 10 c3 19 00 00 00 40 00 00 00 38 58 b5 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 10 c3 00 19 00 00 00 40 00 00 00 b8 58 b5 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 10 c3 00 19 00 00 00 40 00 00 00 38 59 b5 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 c3 19 00 00 00 40 00 00 00 b8 59 b5 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 c3 19 00 00 00 40 00 00 00 20 5a b5 c8 f7 7f 00 00 50 c5 f8 77 90 89 4c 24 04 c5 fa 10 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 70 5a b5 c8 f7 7f 00 00 50 c5 f8 77 90 89 4c 24 04 c5 fa 10 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 d8 5a b5 c8 f7 7f 00 00 50 c5 f8 77 90 48 89 0c 24 c5 fb 10 04 24 48 83 c4 08 c3 cc 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
32        | 7ff7c8675320h   | 263     | root/BitConvert               | ToInt32_(uspan8u,32i)                                       | ToInt32       | int ToInt32(ReadOnlySpan<byte> src, int offset)                                 | 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 10 c3 00 19 00 00 00 40 00 00 00 b8 58 b5 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 10 c3 00 19 00 00 00 40 00 00 00 38 59 b5 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 c3 19 00 00 00 40 00 00 00 b8 59 b5 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 c3 19 00 00 00 40 00 00 00 20 5a b5 c8 f7 7f 00 00 50 c5 f8 77 90 89 4c 24 04 c5 fa 10 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 70 5a b5 c8 f7 7f 00 00 50 c5 f8 77 90 89 4c 24 04 c5 fa 10 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 d8 5a b5 c8 f7 7f 00 00 50 c5 f8 77 90 48 89 0c 24 c5 fb 10 04 24 48 83 c4 08 c3 cc 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
33        | 7ff7c8675340h   | 231     | root/BitConvert               | ToUInt32_(uspan8u,32i)                                      | ToUInt32      | uint ToUInt32(ReadOnlySpan<byte> src, int offset)                               | 0f 1f 44 00 00 48 8b 01 48 63 d2 8b 04 10 c3 00 19 00 00 00 40 00 00 00 38 59 b5 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 c3 19 00 00 00 40 00 00 00 b8 59 b5 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 c3 19 00 00 00 40 00 00 00 20 5a b5 c8 f7 7f 00 00 50 c5 f8 77 90 89 4c 24 04 c5 fa 10 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 70 5a b5 c8 f7 7f 00 00 50 c5 f8 77 90 89 4c 24 04 c5 fa 10 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 d8 5a b5 c8 f7 7f 00 00 50 c5 f8 77 90 48 89 0c 24 c5 fb 10 04 24 48 83 c4 08 c3 cc 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
34        | 7ff7c8675360h   | 199     | root/BitConvert               | ToInt64_(uspan8u,32i)                                       | ToInt64       | long ToInt64(ReadOnlySpan<byte> src, int offset)                                | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 c3 19 00 00 00 40 00 00 00 b8 59 b5 c8 f7 7f 00 00 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 c3 19 00 00 00 40 00 00 00 20 5a b5 c8 f7 7f 00 00 50 c5 f8 77 90 89 4c 24 04 c5 fa 10 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 70 5a b5 c8 f7 7f 00 00 50 c5 f8 77 90 89 4c 24 04 c5 fa 10 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 d8 5a b5 c8 f7 7f 00 00 50 c5 f8 77 90 48 89 0c 24 c5 fb 10 04 24 48 83 c4 08 c3 cc 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
35        | 7ff7c8675380h   | 167     | root/BitConvert               | ToUInt64_(uspan8u,32i)                                      | ToUInt64      | ulong ToUInt64(ReadOnlySpan<byte> src, int offset)                              | 0f 1f 44 00 00 48 8b 01 48 63 d2 48 8b 04 10 c3 19 00 00 00 40 00 00 00 20 5a b5 c8 f7 7f 00 00 50 c5 f8 77 90 89 4c 24 04 c5 fa 10 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 70 5a b5 c8 f7 7f 00 00 50 c5 f8 77 90 89 4c 24 04 c5 fa 10 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 d8 5a b5 c8 f7 7f 00 00 50 c5 f8 77 90 48 89 0c 24 c5 fb 10 04 24 48 83 c4 08 c3 cc 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
36        | 7ff7c86753a0h   | 135     | root/BitConvert               | ToSingle_(32i)                                              | ToSingle      | float ToSingle(int src)                                                         | 50 c5 f8 77 90 89 4c 24 04 c5 fa 10 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 70 5a b5 c8 f7 7f 00 00 50 c5 f8 77 90 89 4c 24 04 c5 fa 10 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 d8 5a b5 c8 f7 7f 00 00 50 c5 f8 77 90 48 89 0c 24 c5 fb 10 04 24 48 83 c4 08 c3 cc 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
37        | 7ff7c86753d0h   | 87      | root/BitConvert               | ToSingle_(32u)                                              | ToSingle      | float ToSingle(uint src)                                                        | 50 c5 f8 77 90 89 4c 24 04 c5 fa 10 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 d8 5a b5 c8 f7 7f 00 00 50 c5 f8 77 90 48 89 0c 24 c5 fb 10 04 24 48 83 c4 08 c3 cc 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
38        | 7ff7c8675400h   | 39      | root/BitConvert               | ToDouble_(64i)                                              | ToDouble      | double ToDouble(long src)                                                       | 50 c5 f8 77 90 48 89 0c 24 c5 fb 10 04 24 48 83 c4 08 c3 cc 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
39        | 7ff7c8675430h   | 39      | root/BitConvert               | ToDouble_(64u)                                              | ToDouble      | double ToDouble(ulong src)                                                      | 50 c5 f8 77 90 48 89 0c 24 c5 fb 10 04 24 48 83 c4 08 c3 cc 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
40        | 7ff7c8675460h   | 135     | root/BitConvert               | ToInt32_(32f)                                               | ToInt32       | int ToInt32(float src)                                                          | 50 c5 f8 77 90 c5 fa 11 44 24 04 8b 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 c8 5b b5 c8 f7 7f 00 00 50 c5 f8 77 90 c5 fa 11 44 24 04 8b 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 18 5c b5 c8 f7 7f 00 00 50 c5 f8 77 90 c5 fb 11 04 24 48 8b 04 24 48 83 c4 08 c3 cc 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
41        | 7ff7c8675490h   | 87      | root/BitConvert               | ToUInt32_(32f)                                              | ToUInt32      | uint ToUInt32(float src)                                                        | 50 c5 f8 77 90 c5 fa 11 44 24 04 8b 44 24 04 48 83 c4 08 c3 cc 00 00 00 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 18 5c b5 c8 f7 7f 00 00 50 c5 f8 77 90 c5 fb 11 04 24 48 8b 04 24 48 83 c4 08 c3 cc 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
42        | 7ff7c86754c0h   | 39      | root/BitConvert               | ToInt64_(64f)                                               | ToInt64       | long ToInt64(double src)                                                        | 50 c5 f8 77 90 c5 fb 11 04 24 48 8b 04 24 48 83 c4 08 c3 cc 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
43        | 7ff7c86754f0h   | 39      | root/BitConvert               | ToUInt64_(64f)                                              | ToUInt64      | ulong ToUInt64(double src)                                                      | 50 c5 f8 77 90 c5 fb 11 04 24 48 8b 04 24 48 83 c4 08 c3 cc 19 01 01 00 01 02 00 00 40 00 00 00 00 00 00 00 00 00 00
