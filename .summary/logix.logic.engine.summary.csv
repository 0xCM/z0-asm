Sequence  | Address         | Length  | Host                          | OpId                                                        | OpName        | OpSig                                                                           | Data
0         | 7ff7c8618650h   | 35      | logix/LogicEngine             | eval_logic_expr_g[8u]()                                     | eval          | bit eval<byte>(ILogicExpr<byte> expr)                                           | 0f 1f 44 00 00 48 b8 78 90 e7 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
1         | 7ff7c8618680h   | 35      | logix/LogicEngine             | eval_logic_expr_g[8i]()                                     | eval          | bit eval<sbyte>(ILogicExpr<sbyte> expr)                                         | 0f 1f 44 00 00 48 b8 78 90 e7 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
2         | 7ff7c86186b0h   | 35      | logix/LogicEngine             | eval_logic_expr_g[16u]()                                    | eval          | bit eval<ushort>(ILogicExpr<ushort> expr)                                       | 0f 1f 44 00 00 48 b8 78 90 e7 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
3         | 7ff7c86186e0h   | 35      | logix/LogicEngine             | eval_logic_expr_g[16i]()                                    | eval          | bit eval<short>(ILogicExpr<short> expr)                                         | 0f 1f 44 00 00 48 b8 78 90 e7 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
4         | 7ff7c8618710h   | 35      | logix/LogicEngine             | eval_logic_expr_g[32u]()                                    | eval          | bit eval<uint>(ILogicExpr<uint> expr)                                           | 0f 1f 44 00 00 48 b8 78 90 e7 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
5         | 7ff7c8618740h   | 35      | logix/LogicEngine             | eval_logic_expr_g[32i]()                                    | eval          | bit eval<int>(ILogicExpr<int> expr)                                             | 0f 1f 44 00 00 48 b8 78 90 e7 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
6         | 7ff7c8618770h   | 35      | logix/LogicEngine             | eval_logic_expr_g[64u]()                                    | eval          | bit eval<ulong>(ILogicExpr<ulong> expr)                                         | 0f 1f 44 00 00 48 b8 78 90 e7 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
7         | 7ff7c86187a0h   | 1107    | logix/LogicEngine             | eval_logic_expr_g[64i]()                                    | eval          | bit eval<long>(ILogicExpr<long> expr)                                           | 0f 1f 44 00 00 48 b8 78 90 e7 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 73 ce c4 5e 5e 00 0a e8 6b ce c4 5e 5e 01 09 e8 63 ce c4 5e 5e 02 08 e8 5b ce c4 5e 5e 03 07 e8 53 ce c4 5e 5e 04 06 e8 4b ce c4 5e 5e 05 05 e8 43 ce c4 5e 5e 06 04 e8 3b ce c4 5e 5e 07 03 e8 33 ce c4 5e 5e 08 02 e8 2b ce c4 5e 5e 09 01 e8 23 ce c4 5e 5e 0a 00 20 a9 9b c8 f7 7f 00 00 e8 13 ce c4 5e 5e 00 00 c0 ac 9b c8 f7 7f 00 00 e8 03 ce c4 5e 5e 00 00 20 ad 9b c8 f7 7f 00 00 e8 f3 cd c4 5e 5e 00 00 80 ad 9b c8 f7 7f 00 00 e8 e3 cd c4 5e 5e 00 00 e0 ad 9b c8 f7 7f 00 00 e8 d3 cd c4 5e 5e 00 00 40 ae 9b c8 f7 7f 00 00 e8 c3 cd c4 5e 5e 00 00 a0 ae 9b c8 f7 7f 00 00 e8 b3 cd c4 5e 5e 00 00 00 af 9b c8 f7 7f 00 00 e8 a3 cd c4 5e 5e 00 00 60 af 9b c8 f7 7f 00 00 e8 93 cd c4 5e 5e 00 00 c0 af 9b c8 f7 7f 00 00 e8 83 cd c4 5e 5e 00 00 20 b0 9b c8 f7 7f 00 00 e8 73 cd c4 5e 5e 00 00 80 b0 9b c8 f7 7f 00 00 e8 63 cd c4 5e 5e 00 00 e0 b0 9b c8 f7 7f 00 00 e8 53 cd c4 5e 5e 00 00 40 b1 9b c8 f7 7f 00 00 e8 43 cd c4 5e 5e 00 00 a0 b1 9b c8 f7 7f 00 00 e8 33 cd c4 5e 5e 00 00 00 b2 9b c8 f7 7f 00 00 e8 23 cd c4 5e 5e 00 0a e8 1b cd c4 5e 5e 01 09 e8 13 cd c4 5e 5e 02 08 e8 0b cd c4 5e 5e 03 07 e8 03 cd c4 5e 5e 04 06 e8 fb cc c4 5e 5e 05 05 e8 f3 cc c4 5e 5e 06 04 e8 eb cc c4 5e 5e 07 03 e8 e3 cc c4 5e 5e 08 02 e8 db cc c4 5e 5e 09 01 e8 d3 cc c4 5e 5e 0a 00 60 b2 9b c8 f7 7f 00 00 e8 c3 cc c4 5e 5e 00 00 f8 b3 9b c8 f7 7f 00 00 e8 b3 cc c4 5e 5e 00 03 e8 ab cc c4 5e 5e 01 02 e8 a3 cc c4 5e 5e 02 01 e8 9b cc c4 5e 5e 03 00 30 b5 9b c8 f7 7f 00 00 e8 8b cc c4 5e 5e 00 00 28 b6 9b c8 f7 7f 00 00 e8 7b cc c4 5e 5e 00 00 88 b6 9b c8 f7 7f 00 00 e8 6b cc c4 5e 5e 00 00 e8 b6 9b c8 f7 7f 00 00 e8 5b cc c4 5e 5e 00 00 48 b7 9b c8 f7 7f 00 00 e8 4b cc c4 5e 5e 00 00 a8 b7 9b c8 f7 7f 00 00 e8 3b cc c4 5e 5e 00 00 08 b8 9b c8 f7 7f 00 00 e8 2b cc c4 5e 5e 00 00 68 b8 9b c8 f7 7f 00 00 e8 1b cc c4 5e 5e 00 00 c8 b8 9b c8 f7 7f 00 00 e8 0b cc c4 5e 5e 00 0c e8 03 cc c4 5e 5e 01 0b e8 fb cb c4 5e 5e 02 0a e8 f3 cb c4 5e 5e 03 09 e8 eb cb c4 5e 5e 04 08 e8 e3 cb c4 5e 5e 05 07 e8 db cb c4 5e 5e 06 06 e8 d3 cb c4 5e 5e 07 05 e8 cb cb c4 5e 5e 08 04 e8 c3 cb c4 5e 5e 09 03 e8 bb cb c4 5e 5e 0a 02 e8 b3 cb c4 5e 5e 0b 01 e8 ab cb c4 5e 5e 0c 00 38 b9 9b c8 f7 7f 00 00 e8 9b cb c4 5e 5e 00 00 c0 ba 9b c8 f7 7f 00 00 e8 8b cb c4 5e 5e 00 0a e8 83 cb c4 5e 5e 01 09 e8 7b cb c4 5e 5e 02 08 e8 73 cb c4 5e 5e 03 07 e8 6b cb c4 5e 5e 04 06 e8 63 cb c4 5e 5e 05 05 e8 5b cb c4 5e 5e 06 04 e8 53 cb c4 5e 5e 07 03 e8 4b cb c4 5e 5e 08 02 e8 43 cb c4 5e 5e 09 01 e8 3b cb c4 5e 5e 0a 00 70 bb 9b c8 f7 7f 00 00 e8 2b cb c4 5e 5e 00 00 f0 bc 9b c8 f7 7f 00 00 e8 1b cb c4 5e 5e 00 03 e8 13 cb c4 5e 5e 01 02 e8 0b cb c4 5e 5e 02 01 e8 03 cb c4 5e 5e 03 00 28 be 9b c8 f7 7f 00 00 e8 f3 ca c4 5e 5e 00 00 20 bf 9b c8 f7 7f 00 00 e8 e3 ca c4 5e 5e 00 00 80 bf 9b c8 f7 7f 00 00 e8 d3 ca c4 5e 5e 00 00 e0 bf 9b c8 f7 7f 00 00 e8 c3 ca c4 5e 5e 00 00 40 c0 9b c8 f7 7f 00 00 e8 b3 ca c4 5e 5e 00 00 a0 c0 9b c8 f7 7f 00 00 e8 a3 ca c4 5e 5e 00 00 00 c1 9b c8 f7 7f 00 00 e8 93 ca c4 5e 5e 00 00 60 c1 9b c8 f7 7f 00 00 e8 83 ca c4 5e 5e 00 00 c0 c1 9b c8 f7 7f 00 00 80 1a 9c c8 f7 7f 00 00 0f 1f 44 00 00 48 b8 e8 81 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
8         | 7ff7c8618bd0h   | 35      | logix/LogicEngine             | eval_scalar_expr_g[8u]()                                    | eval          | LiteralExpr<byte> eval<byte>(IExpr<byte> expr)                                  | 0f 1f 44 00 00 48 b8 e8 81 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
9         | 7ff7c8618c00h   | 35      | logix/LogicEngine             | eval_scalar_expr_g[8i]()                                    | eval          | LiteralExpr<sbyte> eval<sbyte>(IExpr<sbyte> expr)                               | 0f 1f 44 00 00 48 b8 48 88 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
10        | 7ff7c8618c30h   | 35      | logix/LogicEngine             | eval_scalar_expr_g[16u]()                                   | eval          | LiteralExpr<ushort> eval<ushort>(IExpr<ushort> expr)                            | 0f 1f 44 00 00 48 b8 68 88 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
11        | 7ff7c8618c60h   | 35      | logix/LogicEngine             | eval_scalar_expr_g[16i]()                                   | eval          | LiteralExpr<short> eval<short>(IExpr<short> expr)                               | 0f 1f 44 00 00 48 b8 88 88 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
12        | 7ff7c8618c90h   | 35      | logix/LogicEngine             | eval_scalar_expr_g[32u]()                                   | eval          | LiteralExpr<uint> eval<uint>(IExpr<uint> expr)                                  | 0f 1f 44 00 00 48 b8 a8 88 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
13        | 7ff7c8618cc0h   | 35      | logix/LogicEngine             | eval_scalar_expr_g[32i]()                                   | eval          | LiteralExpr<int> eval<int>(IExpr<int> expr)                                     | 0f 1f 44 00 00 48 b8 c8 88 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
14        | 7ff7c8618cf0h   | 35      | logix/LogicEngine             | eval_scalar_expr_g[64u]()                                   | eval          | LiteralExpr<ulong> eval<ulong>(IExpr<ulong> expr)                               | 0f 1f 44 00 00 48 b8 e8 88 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
15        | 7ff7c8618d20h   | 35      | logix/LogicEngine             | eval_scalar_expr_g[64i]()                                   | eval          | LiteralExpr<long> eval<long>(IExpr<long> expr)                                  | 0f 1f 44 00 00 48 b8 08 89 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
16        | 7ff7c8618d50h   | 35      | logix/LogicEngine             | eval_cmp_expr_g[8u]()                                       | eval          | LiteralExpr<byte> eval<byte>(IComparisonExpr<byte> expr)                        | 0f 1f 44 00 00 48 b8 50 5f 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
17        | 7ff7c8618d80h   | 35      | logix/LogicEngine             | eval_cmp_expr_g[8i]()                                       | eval          | LiteralExpr<sbyte> eval<sbyte>(IComparisonExpr<sbyte> expr)                     | 0f 1f 44 00 00 48 b8 30 60 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
18        | 7ff7c8618db0h   | 35      | logix/LogicEngine             | eval_cmp_expr_g[16u]()                                      | eval          | LiteralExpr<ushort> eval<ushort>(IComparisonExpr<ushort> expr)                  | 0f 1f 44 00 00 48 b8 e0 60 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
19        | 7ff7c8618de0h   | 35      | logix/LogicEngine             | eval_cmp_expr_g[16i]()                                      | eval          | LiteralExpr<short> eval<short>(IComparisonExpr<short> expr)                     | 0f 1f 44 00 00 48 b8 90 61 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
20        | 7ff7c8618e10h   | 35      | logix/LogicEngine             | eval_cmp_expr_g[32u]()                                      | eval          | LiteralExpr<uint> eval<uint>(IComparisonExpr<uint> expr)                        | 0f 1f 44 00 00 48 b8 40 62 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
21        | 7ff7c8618e40h   | 35      | logix/LogicEngine             | eval_cmp_expr_g[32i]()                                      | eval          | LiteralExpr<int> eval<int>(IComparisonExpr<int> expr)                           | 0f 1f 44 00 00 48 b8 e0 62 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
22        | 7ff7c8618e70h   | 35      | logix/LogicEngine             | eval_cmp_expr_g[64i]()                                      | eval          | LiteralExpr<long> eval<long>(IComparisonExpr<long> expr)                        | 0f 1f 44 00 00 48 b8 80 63 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
23        | 7ff7c8618ea0h   | 35      | logix/LogicEngine             | eval_vcmp_expr128_g[8u]()                                   | eval          | LiteralExpr<Vector128<byte>> eval<byte>(IComparisonExpr<Vector128<byte>> expr)  | 0f 1f 44 00 00 48 b8 90 6c 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
24        | 7ff7c8618ed0h   | 35      | logix/LogicEngine             | eval_vcmp_expr128_g[8i]()                                   | eval          | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IComparisonExpr<Vector128<sbyte>> expr)| 0f 1f 44 00 00 48 b8 70 6d 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
25        | 7ff7c8618f00h   | 35      | logix/LogicEngine             | eval_vcmp_expr128_g[16u]()                                  | eval          | LiteralExpr<Vector128<ushort>> eval<ushort>(IComparisonExpr<Vector128<ushort>> expr)| 0f 1f 44 00 00 48 b8 50 6e 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
26        | 7ff7c8618f30h   | 35      | logix/LogicEngine             | eval_vcmp_expr128_g[16i]()                                  | eval          | LiteralExpr<Vector128<short>> eval<short>(IComparisonExpr<Vector128<short>> expr)| 0f 1f 44 00 00 48 b8 40 73 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
27        | 7ff7c8618f60h   | 35      | logix/LogicEngine             | eval_vcmp_expr128_g[32u]()                                  | eval          | LiteralExpr<Vector128<uint>> eval<uint>(IComparisonExpr<Vector128<uint>> expr)  | 0f 1f 44 00 00 48 b8 20 74 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
28        | 7ff7c8618f90h   | 35      | logix/LogicEngine             | eval_vcmp_expr128_g[32i]()                                  | eval          | LiteralExpr<Vector128<int>> eval<int>(IComparisonExpr<Vector128<int>> expr)     | 0f 1f 44 00 00 48 b8 00 75 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
29        | 7ff7c8618fc0h   | 1107    | logix/LogicEngine             | eval_vcmp_expr128_g[64i]()                                  | eval          | LiteralExpr<Vector128<long>> eval<long>(IComparisonExpr<Vector128<long>> expr)  | 0f 1f 44 00 00 48 b8 e0 75 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 53 c6 c4 5e 5e 00 0c e8 4b c6 c4 5e 5e 01 0b e8 43 c6 c4 5e 5e 02 0a e8 3b c6 c4 5e 5e 03 09 e8 33 c6 c4 5e 5e 04 08 e8 2b c6 c4 5e 5e 05 07 e8 23 c6 c4 5e 5e 06 06 e8 1b c6 c4 5e 5e 07 05 e8 13 c6 c4 5e 5e 08 04 e8 0b c6 c4 5e 5e 09 03 e8 03 c6 c4 5e 5e 0a 02 e8 fb c5 c4 5e 5e 0b 01 e8 f3 c5 c4 5e 5e 0c 00 50 c2 9b c8 f7 7f 00 00 e8 e3 c5 c4 5e 5e 00 00 d8 c3 9b c8 f7 7f 00 00 e8 d3 c5 c4 5e 5e 00 0a e8 cb c5 c4 5e 5e 01 09 e8 c3 c5 c4 5e 5e 02 08 e8 bb c5 c4 5e 5e 03 07 e8 b3 c5 c4 5e 5e 04 06 e8 ab c5 c4 5e 5e 05 05 e8 a3 c5 c4 5e 5e 06 04 e8 9b c5 c4 5e 5e 07 03 e8 93 c5 c4 5e 5e 08 02 e8 8b c5 c4 5e 5e 09 01 e8 83 c5 c4 5e 5e 0a 00 88 c4 9b c8 f7 7f 00 00 e8 73 c5 c4 5e 5e 00 00 08 c6 9b c8 f7 7f 00 00 e8 63 c5 c4 5e 5e 00 03 e8 5b c5 c4 5e 5e 01 02 e8 53 c5 c4 5e 5e 02 01 e8 4b c5 c4 5e 5e 03 00 40 c7 9b c8 f7 7f 00 00 e8 3b c5 c4 5e 5e 00 00 38 c8 9b c8 f7 7f 00 00 e8 2b c5 c4 5e 5e 00 00 98 c8 9b c8 f7 7f 00 00 e8 1b c5 c4 5e 5e 00 00 f8 c8 9b c8 f7 7f 00 00 e8 0b c5 c4 5e 5e 00 00 58 c9 9b c8 f7 7f 00 00 e8 fb c4 c4 5e 5e 00 00 b8 c9 9b c8 f7 7f 00 00 e8 eb c4 c4 5e 5e 00 00 18 ca 9b c8 f7 7f 00 00 e8 db c4 c4 5e 5e 00 00 78 ca 9b c8 f7 7f 00 00 e8 cb c4 c4 5e 5e 00 00 d8 ca 9b c8 f7 7f 00 00 e8 bb c4 c4 5e 5e 00 03 e8 b3 c4 c4 5e 5e 01 02 e8 ab c4 c4 5e 5e 02 01 e8 a3 c4 c4 5e 5e 03 00 b0 cb 9b c8 f7 7f 00 00 e8 93 c4 c4 5e 5e 00 00 20 cd 9b c8 f7 7f 00 00 e8 83 c4 c4 5e 5e 00 00 80 cd 9b c8 f7 7f 00 00 e8 73 c4 c4 5e 5e 00 00 e0 cd 9b c8 f7 7f 00 00 e8 63 c4 c4 5e 5e 00 00 40 ce 9b c8 f7 7f 00 00 e8 53 c4 c4 5e 5e 00 00 a0 ce 9b c8 f7 7f 00 00 e8 43 c4 c4 5e 5e 00 00 00 cf 9b c8 f7 7f 00 00 e8 33 c4 c4 5e 5e 00 00 60 cf 9b c8 f7 7f 00 00 e8 23 c4 c4 5e 5e 00 00 c0 cf 9b c8 f7 7f 00 00 e8 13 c4 c4 5e 5e 00 0a e8 0b c4 c4 5e 5e 01 09 e8 03 c4 c4 5e 5e 02 08 e8 fb c3 c4 5e 5e 03 07 e8 f3 c3 c4 5e 5e 04 06 e8 eb c3 c4 5e 5e 05 05 e8 e3 c3 c4 5e 5e 06 04 e8 db c3 c4 5e 5e 07 03 e8 d3 c3 c4 5e 5e 08 02 e8 cb c3 c4 5e 5e 09 01 e8 c3 c3 c4 5e 5e 0a 00 20 d0 9b c8 f7 7f 00 00 e8 b3 c3 c4 5e 5e 00 00 b8 d1 9b c8 f7 7f 00 00 e8 a3 c3 c4 5e 5e 00 00 88 d3 9b c8 f7 7f 00 00 e8 93 c3 c4 5e 5e 00 00 e8 d3 9b c8 f7 7f 00 00 e8 83 c3 c4 5e 5e 00 00 48 d4 9b c8 f7 7f 00 00 e8 73 c3 c4 5e 5e 00 02 e8 6b c3 c4 5e 5e 01 01 e8 63 c3 c4 5e 5e 02 00 98 d4 9b c8 f7 7f 00 00 e8 53 c3 c4 5e 5e 00 00 88 d5 9b c8 f7 7f 00 00 e8 43 c3 c4 5e 5e 00 00 e8 d5 9b c8 f7 7f 00 00 e8 33 c3 c4 5e 5e 00 02 e8 2b c3 c4 5e 5e 01 01 e8 23 c3 c4 5e 5e 02 00 38 d6 9b c8 f7 7f 00 00 e8 13 c3 c4 5e 5e 00 00 28 d7 9b c8 f7 7f 00 00 e8 03 c3 c4 5e 5e 00 00 88 d7 9b c8 f7 7f 00 00 e8 f3 c2 c4 5e 5e 00 02 e8 eb c2 c4 5e 5e 01 01 e8 e3 c2 c4 5e 5e 02 00 d8 d7 9b c8 f7 7f 00 00 e8 d3 c2 c4 5e 5e 00 00 c8 d8 9b c8 f7 7f 00 00 e8 c3 c2 c4 5e 5e 00 00 28 d9 9b c8 f7 7f 00 00 e8 b3 c2 c4 5e 5e 00 02 e8 ab c2 c4 5e 5e 01 01 e8 a3 c2 c4 5e 5e 02 00 78 d9 9b c8 f7 7f 00 00 e8 93 c2 c4 5e 5e 00 00 68 da 9b c8 f7 7f 00 00 e8 83 c2 c4 5e 5e 00 00 c8 da 9b c8 f7 7f 00 00 e8 73 c2 c4 5e 5e 00 02 e8 6b c2 c4 5e 5e 01 01 e8 63 c2 c4 5e 5e 02 00 18 db 9b c8 f7 7f 00 00 f8 3d 9c c8 f7 7f 00 00 0f 1f 44 00 00 48 b8 d0 7a 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
30        | 7ff7c86193f0h   | 35      | logix/LogicEngine             | eval_vcmp_expr256_g[8u]()                                   | eval          | LiteralExpr<Vector256<byte>> eval<byte>(IComparisonExpr<Vector256<byte>> expr)  | 0f 1f 44 00 00 48 b8 d0 7a 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
31        | 7ff7c8619420h   | 35      | logix/LogicEngine             | eval_vcmp_expr256_g[8i]()                                   | eval          | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IComparisonExpr<Vector256<sbyte>> expr)| 0f 1f 44 00 00 48 b8 e0 7b 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
32        | 7ff7c8619450h   | 35      | logix/LogicEngine             | eval_vcmp_expr256_g[16u]()                                  | eval          | LiteralExpr<Vector256<ushort>> eval<ushort>(IComparisonExpr<Vector256<ushort>> expr)| 0f 1f 44 00 00 48 b8 f0 7c 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
33        | 7ff7c8619480h   | 35      | logix/LogicEngine             | eval_vcmp_expr256_g[16i]()                                  | eval          | LiteralExpr<Vector256<short>> eval<short>(IComparisonExpr<Vector256<short>> expr)| 0f 1f 44 00 00 48 b8 10 82 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
34        | 7ff7c86194b0h   | 35      | logix/LogicEngine             | eval_vcmp_expr256_g[32u]()                                  | eval          | LiteralExpr<Vector256<uint>> eval<uint>(IComparisonExpr<Vector256<uint>> expr)  | 0f 1f 44 00 00 48 b8 20 83 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
35        | 7ff7c86194e0h   | 35      | logix/LogicEngine             | eval_vcmp_expr256_g[32i]()                                  | eval          | LiteralExpr<Vector256<int>> eval<int>(IComparisonExpr<Vector256<int>> expr)     | 0f 1f 44 00 00 48 b8 30 84 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
36        | 7ff7c8619510h   | 35      | logix/LogicEngine             | eval_vcmp_expr256_g[64i]()                                  | eval          | LiteralExpr<Vector256<long>> eval<long>(IComparisonExpr<Vector256<long>> expr)  | 0f 1f 44 00 00 48 b8 40 85 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
37        | 7ff7c8619540h   | 35      | logix/LogicEngine             | eval_cmp_pred_g[8u]()                                       | eval          | bit eval<byte>(IComparisonPred<byte> expr)                                      | 0f 1f 44 00 00 48 b8 30 64 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
38        | 7ff7c8619570h   | 35      | logix/LogicEngine             | eval_cmp_pred_g[8i]()                                       | eval          | bit eval<sbyte>(IComparisonPred<sbyte> expr)                                    | 0f 1f 44 00 00 48 b8 d0 64 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
39        | 7ff7c86195a0h   | 35      | logix/LogicEngine             | eval_cmp_pred_g[16u]()                                      | eval          | bit eval<ushort>(IComparisonPred<ushort> expr)                                  | 0f 1f 44 00 00 48 b8 70 65 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
40        | 7ff7c86195d0h   | 35      | logix/LogicEngine             | eval_cmp_pred_g[16i]()                                      | eval          | bit eval<short>(IComparisonPred<short> expr)                                    | 0f 1f 44 00 00 48 b8 10 66 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
41        | 7ff7c8619600h   | 35      | logix/LogicEngine             | eval_cmp_pred_g[32u]()                                      | eval          | bit eval<uint>(IComparisonPred<uint> expr)                                      | 0f 1f 44 00 00 48 b8 b0 66 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
42        | 7ff7c8619630h   | 35      | logix/LogicEngine             | eval_cmp_pred_g[32i]()                                      | eval          | bit eval<int>(IComparisonPred<int> expr)                                        | 0f 1f 44 00 00 48 b8 50 67 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
43        | 7ff7c8619660h   | 35      | logix/LogicEngine             | eval_cmp_pred_g[64i]()                                      | eval          | bit eval<long>(IComparisonPred<long> expr)                                      | 0f 1f 44 00 00 48 b8 f0 67 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
44        | 7ff7c8619690h   | 35      | logix/LogicEngine             | eval_arith_expr_g[8u]()                                     | eval          | LiteralExpr<byte> eval<byte>(IArithmeticExpr<byte> expr)                        | 0f 1f 44 00 00 48 b8 a8 92 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
45        | 7ff7c86196c0h   | 35      | logix/LogicEngine             | eval_arith_expr_g[8i]()                                     | eval          | LiteralExpr<sbyte> eval<sbyte>(IArithmeticExpr<sbyte> expr)                     | 0f 1f 44 00 00 48 b8 f8 92 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
46        | 7ff7c86196f0h   | 35      | logix/LogicEngine             | eval_arith_expr_g[16u]()                                    | eval          | LiteralExpr<ushort> eval<ushort>(IArithmeticExpr<ushort> expr)                  | 0f 1f 44 00 00 48 b8 38 93 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
47        | 7ff7c8619720h   | 35      | logix/LogicEngine             | eval_arith_expr_g[16i]()                                    | eval          | LiteralExpr<short> eval<short>(IArithmeticExpr<short> expr)                     | 0f 1f 44 00 00 48 b8 78 93 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
48        | 7ff7c8619750h   | 1064    | logix/LogicEngine             | eval_arith_expr_g[32u]()                                    | eval          | LiteralExpr<uint> eval<uint>(IArithmeticExpr<uint> expr)                        | 0f 1f 44 00 00 48 b8 b8 93 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 c3 be c4 5e 5e 00 00 08 dc 9b c8 f7 7f 00 00 e8 b3 be c4 5e 5e 00 00 68 dc 9b c8 f7 7f 00 00 e8 a3 be c4 5e 5e 00 02 e8 9b be c4 5e 5e 01 01 e8 93 be c4 5e 5e 02 00 b8 dc 9b c8 f7 7f 00 00 e8 83 be c4 5e 5e 00 00 a8 dd 9b c8 f7 7f 00 00 e8 73 be c4 5e 5e 00 00 08 de 9b c8 f7 7f 00 00 e8 63 be c4 5e 5e 00 02 e8 5b be c4 5e 5e 01 01 e8 53 be c4 5e 5e 02 00 58 de 9b c8 f7 7f 00 00 e8 43 be c4 5e 5e 00 00 48 df 9b c8 f7 7f 00 00 e8 33 be c4 5e 5e 00 00 a8 df 9b c8 f7 7f 00 00 e8 23 be c4 5e 5e 00 02 e8 1b be c4 5e 5e 01 01 e8 13 be c4 5e 5e 02 00 f8 df 9b c8 f7 7f 00 00 e8 03 be c4 5e 5e 00 0c e8 fb bd c4 5e 5e 01 0b e8 f3 bd c4 5e 5e 02 0a e8 eb bd c4 5e 5e 03 09 e8 e3 bd c4 5e 5e 04 08 e8 db bd c4 5e 5e 05 07 e8 d3 bd c4 5e 5e 06 06 e8 cb bd c4 5e 5e 07 05 e8 c3 bd c4 5e 5e 08 04 e8 bb bd c4 5e 5e 09 03 e8 b3 bd c4 5e 5e 0a 02 e8 ab bd c4 5e 5e 0b 01 e8 a3 bd c4 5e 5e 0c 00 f8 e0 9b c8 f7 7f 00 00 e8 93 bd c4 5e 5e 00 00 80 e2 9b c8 f7 7f 00 00 e8 83 bd c4 5e 5e 00 0a e8 7b bd c4 5e 5e 01 09 e8 73 bd c4 5e 5e 02 08 e8 6b bd c4 5e 5e 03 07 e8 63 bd c4 5e 5e 04 06 e8 5b bd c4 5e 5e 05 05 e8 53 bd c4 5e 5e 06 04 e8 4b bd c4 5e 5e 07 03 e8 43 bd c4 5e 5e 08 02 e8 3b bd c4 5e 5e 09 01 e8 33 bd c4 5e 5e 0a 00 30 e3 9b c8 f7 7f 00 00 e8 23 bd c4 5e 5e 00 00 b0 e4 9b c8 f7 7f 00 00 e8 13 bd c4 5e 5e 00 00 f8 e5 9b c8 f7 7f 00 00 e8 03 bd c4 5e 5e 00 0a e8 fb bc c4 5e 5e 01 09 e8 f3 bc c4 5e 5e 02 08 e8 eb bc c4 5e 5e 03 07 e8 e3 bc c4 5e 5e 04 06 e8 db bc c4 5e 5e 05 05 e8 d3 bc c4 5e 5e 06 04 e8 cb bc c4 5e 5e 07 03 e8 c3 bc c4 5e 5e 08 02 e8 bb bc c4 5e 5e 09 01 e8 b3 bc c4 5e 5e 0a 00 58 e6 9b c8 f7 7f 00 00 e8 a3 bc c4 5e 5e 00 00 d8 e7 9b c8 f7 7f 00 00 e8 93 bc c4 5e 5e 00 00 20 e9 9b c8 f7 7f 00 00 e8 83 bc c4 5e 5e 00 0c e8 7b bc c4 5e 5e 01 0b e8 73 bc c4 5e 5e 02 0a e8 6b bc c4 5e 5e 03 09 e8 63 bc c4 5e 5e 04 08 e8 5b bc c4 5e 5e 05 07 e8 53 bc c4 5e 5e 06 06 e8 4b bc c4 5e 5e 07 05 e8 43 bc c4 5e 5e 08 04 e8 3b bc c4 5e 5e 09 03 e8 33 bc c4 5e 5e 0a 02 e8 2b bc c4 5e 5e 0b 01 e8 23 bc c4 5e 5e 0c 00 b0 e9 9b c8 f7 7f 00 00 e8 13 bc c4 5e 5e 00 00 38 eb 9b c8 f7 7f 00 00 e8 03 bc c4 5e 5e 00 0a e8 fb bb c4 5e 5e 01 09 e8 f3 bb c4 5e 5e 02 08 e8 eb bb c4 5e 5e 03 07 e8 e3 bb c4 5e 5e 04 06 e8 db bb c4 5e 5e 05 05 e8 d3 bb c4 5e 5e 06 04 e8 cb bb c4 5e 5e 07 03 e8 c3 bb c4 5e 5e 08 02 e8 bb bb c4 5e 5e 09 01 e8 b3 bb c4 5e 5e 0a 00 e8 eb 9b c8 f7 7f 00 00 e8 a3 bb c4 5e 5e 00 00 68 ed 9b c8 f7 7f 00 00 e8 93 bb c4 5e 5e 00 00 b0 ee 9b c8 f7 7f 00 00 e8 83 bb c4 5e 5e 00 0a e8 7b bb c4 5e 5e 01 09 e8 73 bb c4 5e 5e 02 08 e8 6b bb c4 5e 5e 03 07 e8 63 bb c4 5e 5e 04 06 e8 5b bb c4 5e 5e 05 05 e8 53 bb c4 5e 5e 06 04 e8 4b bb c4 5e 5e 07 03 e8 43 bb c4 5e 5e 08 02 e8 3b bb c4 5e 5e 09 01 e8 33 bb c4 5e 5e 0a 00 10 ef 9b c8 f7 7f 00 00 e8 23 bb c4 5e 5e 00 00 90 f0 9b c8 f7 7f 00 00 e8 13 bb c4 5e 5e 00 00 d8 f1 9b c8 f7 7f 00 00 e8 03 bb c4 5e 5e 00 03 e8 fb ba c4 5e 5e 01 02 e8 f3 ba c4 5e 5e 02 01 e8 eb ba c4 5e 5e 03 00 00 f4 9b c8 f7 7f 00 00 e8 db ba c4 5e 5e 00 00 70 f5 9b c8 f7 7f 00 00 00 00 00 00 00 00 00 00
49        | 7ff7c8619b80h   | 35      | logix/LogicEngine             | eval_arith_expr_g[32i]()                                    | eval          | LiteralExpr<int> eval<int>(IArithmeticExpr<int> expr)                           | 0f 1f 44 00 00 48 b8 88 97 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
50        | 7ff7c8619bb0h   | 35      | logix/LogicEngine             | eval_arith_expr_g[64u]()                                    | eval          | LiteralExpr<ulong> eval<ulong>(IArithmeticExpr<ulong> expr)                     | 0f 1f 44 00 00 48 b8 c8 97 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
51        | 7ff7c8619be0h   | 35      | logix/LogicEngine             | eval_arith_expr_g[64i]()                                    | eval          | LiteralExpr<long> eval<long>(IArithmeticExpr<long> expr)                        | 0f 1f 44 00 00 48 b8 08 98 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
52        | 7ff7c8619c10h   | 35      | logix/LogicEngine             | eval_vector_expr128_g[8u]()                                 | eval          | LiteralExpr<Vector128<byte>> eval<byte>(IExpr<Vector128<byte>> expr)            | 0f 1f 44 00 00 48 b8 88 6a 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
53        | 7ff7c8619c40h   | 35      | logix/LogicEngine             | eval_vector_expr128_g[8i]()                                 | eval          | LiteralExpr<Vector128<sbyte>> eval<sbyte>(IExpr<Vector128<sbyte>> expr)         | 0f 1f 44 00 00 48 b8 80 6b 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
54        | 7ff7c8619c70h   | 35      | logix/LogicEngine             | eval_vector_expr128_g[16u]()                                | eval          | LiteralExpr<Vector128<ushort>> eval<ushort>(IExpr<Vector128<ushort>> expr)      | 0f 1f 44 00 00 48 b8 68 6c 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
55        | 7ff7c8619ca0h   | 35      | logix/LogicEngine             | eval_vector_expr128_g[16i]()                                | eval          | LiteralExpr<Vector128<short>> eval<short>(IExpr<Vector128<short>> expr)         | 0f 1f 44 00 00 48 b8 f8 6f 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
56        | 7ff7c8619cd0h   | 35      | logix/LogicEngine             | eval_vector_expr128_g[32u]()                                | eval          | LiteralExpr<Vector128<uint>> eval<uint>(IExpr<Vector128<uint>> expr)            | 0f 1f 44 00 00 48 b8 e0 70 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
57        | 7ff7c8619d00h   | 35      | logix/LogicEngine             | eval_vector_expr128_g[32i]()                                | eval          | LiteralExpr<Vector128<int>> eval<int>(IExpr<Vector128<int>> expr)               | 0f 1f 44 00 00 48 b8 c8 71 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
58        | 7ff7c8619d30h   | 35      | logix/LogicEngine             | eval_vector_expr128_g[64u]()                                | eval          | LiteralExpr<Vector128<ulong>> eval<ulong>(IExpr<Vector128<ulong>> expr)         | 0f 1f 44 00 00 48 b8 a8 99 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
59        | 7ff7c8619d60h   | 35      | logix/LogicEngine             | eval_vector_expr128_g[64i]()                                | eval          | LiteralExpr<Vector128<long>> eval<long>(IExpr<Vector128<long>> expr)            | 0f 1f 44 00 00 48 b8 b0 72 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
60        | 7ff7c8619d90h   | 35      | logix/LogicEngine             | eval_vector_expr256_g[8u]()                                 | eval          | LiteralExpr<Vector256<byte>> eval<byte>(IExpr<Vector256<byte>> expr)            | 0f 1f 44 00 00 48 b8 70 78 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
61        | 7ff7c8619dc0h   | 35      | logix/LogicEngine             | eval_vector_expr256_g[8i]()                                 | eval          | LiteralExpr<Vector256<sbyte>> eval<sbyte>(IExpr<Vector256<sbyte>> expr)         | 0f 1f 44 00 00 48 b8 68 79 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
62        | 7ff7c8619df0h   | 35      | logix/LogicEngine             | eval_vector_expr256_g[16u]()                                | eval          | LiteralExpr<Vector256<ushort>> eval<ushort>(IExpr<Vector256<ushort>> expr)      | 0f 1f 44 00 00 48 b8 50 7a 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
63        | 7ff7c8619e20h   | 35      | logix/LogicEngine             | eval_vector_expr256_g[16i]()                                | eval          | LiteralExpr<Vector256<short>> eval<short>(IExpr<Vector256<short>> expr)         | 0f 1f 44 00 00 48 b8 80 7e 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
64        | 7ff7c8619e50h   | 35      | logix/LogicEngine             | eval_vector_expr256_g[32u]()                                | eval          | LiteralExpr<Vector256<uint>> eval<uint>(IExpr<Vector256<uint>> expr)            | 0f 1f 44 00 00 48 b8 68 7f 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
65        | 7ff7c8619e80h   | 35      | logix/LogicEngine             | eval_vector_expr256_g[32i]()                                | eval          | LiteralExpr<Vector256<int>> eval<int>(IExpr<Vector256<int>> expr)               | 0f 1f 44 00 00 48 b8 50 80 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
66        | 7ff7c8619eb0h   | 35      | logix/LogicEngine             | eval_vector_expr256_g[64u]()                                | eval          | LiteralExpr<Vector256<ulong>> eval<ulong>(IExpr<Vector256<ulong>> expr)         | 0f 1f 44 00 00 48 b8 28 9b 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
67        | 7ff7c8619ee0h   | 1303    | logix/LogicEngine             | eval_vector_expr256_g[64i]()                                | eval          | LiteralExpr<Vector256<long>> eval<long>(IExpr<Vector256<long>> expr)            | 0f 1f 44 00 00 48 b8 38 81 61 c8 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 33 b7 c4 5e 5e 00 09 e8 2b b7 c4 5e 5e 01 08 e8 23 b7 c4 5e 5e 02 07 e8 1b b7 c4 5e 5e 03 06 e8 13 b7 c4 5e 5e 04 05 e8 0b b7 c4 5e 5e 05 04 e8 03 b7 c4 5e 5e 06 03 e8 fb b6 c4 5e 5e 07 02 e8 f3 b6 c4 5e 5e 08 01 e8 eb b6 c4 5e 5e 09 00 68 f2 9b c8 f7 7f 00 00 e8 db b6 c4 5e 5e 00 09 e8 d3 b6 c4 5e 5e 01 08 e8 cb b6 c4 5e 5e 02 07 e8 c3 b6 c4 5e 5e 03 06 e8 bb b6 c4 5e 5e 04 05 e8 b3 b6 c4 5e 5e 05 04 e8 ab b6 c4 5e 5e 06 03 e8 a3 b6 c4 5e 5e 07 02 e8 9b b6 c4 5e 5e 08 01 e8 93 b6 c4 5e 5e 09 00 00 f6 9b c8 f7 7f 00 00 e8 83 b6 c4 5e 5e 00 00 a8 f7 9b c8 f7 7f 00 00 e8 73 b6 c4 5e 5e 00 0a e8 6b b6 c4 5e 5e 01 09 e8 63 b6 c4 5e 5e 02 08 e8 5b b6 c4 5e 5e 03 07 e8 53 b6 c4 5e 5e 04 06 e8 4b b6 c4 5e 5e 05 05 e8 43 b6 c4 5e 5e 06 04 e8 3b b6 c4 5e 5e 07 03 e8 33 b6 c4 5e 5e 08 02 e8 2b b6 c4 5e 5e 09 01 e8 23 b6 c4 5e 5e 0a 00 08 f8 9b c8 f7 7f 00 00 e8 13 b6 c4 5e 5e 00 00 a0 f9 9b c8 f7 7f 00 00 e8 03 b6 c4 5e 5e 00 00 70 fa 9b c8 f7 7f 00 00 e8 f3 b5 c4 5e 5e 00 00 d0 fa 9b c8 f7 7f 00 00 e8 e3 b5 c4 5e 5e 00 00 30 fb 9b c8 f7 7f 00 00 e8 d3 b5 c4 5e 5e 00 09 e8 cb b5 c4 5e 5e 01 08 e8 c3 b5 c4 5e 5e 02 07 e8 bb b5 c4 5e 5e 03 06 e8 b3 b5 c4 5e 5e 04 05 e8 ab b5 c4 5e 5e 05 04 e8 a3 b5 c4 5e 5e 06 03 e8 9b b5 c4 5e 5e 07 02 e8 93 b5 c4 5e 5e 08 01 e8 8b b5 c4 5e 5e 09 00 c0 fb 9b c8 f7 7f 00 00 e8 7b b5 c4 5e 5e 00 00 68 fd 9b c8 f7 7f 00 00 e8 6b b5 c4 5e 5e 00 09 e8 63 b5 c4 5e 5e 01 08 e8 5b b5 c4 5e 5e 02 07 e8 53 b5 c4 5e 5e 03 06 e8 4b b5 c4 5e 5e 04 05 e8 43 b5 c4 5e 5e 05 04 e8 3b b5 c4 5e 5e 06 03 e8 33 b5 c4 5e 5e 07 02 e8 2b b5 c4 5e 5e 08 01 e8 23 b5 c4 5e 5e 09 00 f8 fd 9b c8 f7 7f 00 00 e8 13 b5 c4 5e 5e 00 00 a0 ff 9b c8 f7 7f 00 00 e8 03 b5 c4 5e 5e 00 09 e8 fb b4 c4 5e 5e 01 08 e8 f3 b4 c4 5e 5e 02 07 e8 eb b4 c4 5e 5e 03 06 e8 e3 b4 c4 5e 5e 04 05 e8 db b4 c4 5e 5e 05 04 e8 d3 b4 c4 5e 5e 06 03 e8 cb b4 c4 5e 5e 07 02 e8 c3 b4 c4 5e 5e 08 01 e8 bb b4 c4 5e 5e 09 00 80 00 9d c8 f7 7f 00 00 e8 ab b4 c4 5e 5e 00 00 28 02 9d c8 f7 7f 00 00 e8 9b b4 c4 5e 5e 00 09 e8 93 b4 c4 5e 5e 01 08 e8 8b b4 c4 5e 5e 02 07 e8 83 b4 c4 5e 5e 03 06 e8 7b b4 c4 5e 5e 04 05 e8 73 b4 c4 5e 5e 05 04 e8 6b b4 c4 5e 5e 06 03 e8 63 b4 c4 5e 5e 07 02 e8 5b b4 c4 5e 5e 08 01 e8 53 b4 c4 5e 5e 09 00 b8 02 9d c8 f7 7f 00 00 e8 43 b4 c4 5e 5e 00 00 60 04 9d c8 f7 7f 00 00 e8 33 b4 c4 5e 5e 00 09 e8 2b b4 c4 5e 5e 01 08 e8 23 b4 c4 5e 5e 02 07 e8 1b b4 c4 5e 5e 03 06 e8 13 b4 c4 5e 5e 04 05 e8 0b b4 c4 5e 5e 05 04 e8 03 b4 c4 5e 5e 06 03 e8 fb b3 c4 5e 5e 07 02 e8 f3 b3 c4 5e 5e 08 01 e8 eb b3 c4 5e 5e 09 00 f0 04 9d c8 f7 7f 00 00 e8 db b3 c4 5e 5e 00 00 98 06 9d c8 f7 7f 00 00 e8 cb b3 c4 5e 5e 00 09 e8 c3 b3 c4 5e 5e 01 08 e8 bb b3 c4 5e 5e 02 07 e8 b3 b3 c4 5e 5e 03 06 e8 ab b3 c4 5e 5e 04 05 e8 a3 b3 c4 5e 5e 05 04 e8 9b b3 c4 5e 5e 06 03 e8 93 b3 c4 5e 5e 07 02 e8 8b b3 c4 5e 5e 08 01 e8 83 b3 c4 5e 5e 09 00 28 07 9d c8 f7 7f 00 00 e8 73 b3 c4 5e 5e 00 00 d0 08 9d c8 f7 7f 00 00 e8 63 b3 c4 5e 5e 00 00 30 09 9d c8 f7 7f 00 00 e8 53 b3 c4 5e 5e 00 00 90 09 9d c8 f7 7f 00 00 e8 43 b3 c4 5e 5e 00 00 60 0d 9d c8 f7 7f 00 00 f0 62 9c c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 10 ea 73 c7 f7 7f 00 00 ba 02 00 00 00 e8 ad ca c4 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 49 fc ff ff 48 8b ce e8 01 bc ff ff 0f b6 40 08 0f b6 c0 3c ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 08 64 9c c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 73 c7 f7 7f 00 00 ba 02 00 00 00 e8 3d ca c4 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 e1 fc ff ff 48 8b ce e8 71 bc ff ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
68        | 7ff7c861a310h   | 231     | logix/LogicEngine             | satisfied_g[8u](8u,8u)                                      | satisfied     | bit satisfied<byte>(ComparisonExpr<byte> expr, byte a, byte b)                  | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 10 ea 73 c7 f7 7f 00 00 ba 02 00 00 00 e8 ad ca c4 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 49 fc ff ff 48 8b ce e8 01 bc ff ff 0f b6 40 08 0f b6 c0 3c ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 08 64 9c c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 73 c7 f7 7f 00 00 ba 02 00 00 00 e8 3d ca c4 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 e1 fc ff ff 48 8b ce e8 71 bc ff ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
69        | 7ff7c861a380h   | 119     | logix/LogicEngine             | satisfied_g[8i](8i,8i)                                      | satisfied     | bit satisfied<sbyte>(ComparisonExpr<sbyte> expr, sbyte a, sbyte b)              | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 98 f0 73 c7 f7 7f 00 00 ba 02 00 00 00 e8 3d ca c4 5e 40 88 78 10 88 58 11 48 8b ce 48 8b d0 39 09 e8 e1 fc ff ff 48 8b ce e8 71 bc ff ff 48 0f be 40 08 48 0f be c0 48 0f be c0 83 f8 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
70        | 7ff7c861a400h   | 119     | logix/LogicEngine             | satisfied_g[16u](16u,16u)                                   | satisfied     | bit satisfied<ushort>(ComparisonExpr<ushort> expr, ushort a, ushort b)          | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 40 7b 08 c8 f7 7f 00 00 ba 02 00 00 00 e8 bd c9 c4 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 c8 fc ff ff 48 8b ce e8 a0 bc ff ff 0f b7 40 08 0f b7 c0 0f b7 c0 3d ff ff 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
71        | 7ff7c861a480h   | 119     | logix/LogicEngine             | satisfied_g[16i](16i,16i)                                   | satisfied     | bit satisfied<short>(ComparisonExpr<short> expr, short a, short b)              | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 40 81 08 c8 f7 7f 00 00 ba 02 00 00 00 e8 3d c9 c4 5e 66 89 78 10 66 89 58 12 48 8b ce 48 8b d0 39 09 e8 b0 fc ff ff 48 8b ce e8 d0 bc ff ff 48 0f bf 40 08 48 0f bf c0 48 0f bf c0 3d ff 7f 00 00 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
72        | 7ff7c861a500h   | 1368    | logix/LogicEngine             | satisfied_g[32u](32u,32u)                                   | satisfied     | bit satisfied<uint>(ComparisonExpr<uint> expr, uint a, uint b)                  | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 20 84 08 c8 f7 7f 00 00 ba 02 00 00 00 e8 bd c8 c4 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 9a fc ff ff 48 8b ce e8 02 bd ff ff 8b 40 08 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 68 68 9c c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 48 5f 80 c7 f7 7f 00 00 ba 02 00 00 00 e8 4d c8 c4 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 92 fc ff ff 48 8b ce e8 32 bd ff ff 8b 40 08 3d ff ff ff 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 b0 69 9c c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 c8 70 a3 c7 f7 7f 00 00 ba 02 00 00 00 e8 dc c7 c4 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 87 fc ff ff 48 8b ce e8 b7 fc ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 eb af c4 5e 5e 00 09 e8 e3 af c4 5e 5e 01 08 e8 db af c4 5e 5e 02 07 e8 d3 af c4 5e 5e 03 06 e8 cb af c4 5e 5e 04 05 e8 c3 af c4 5e 5e 05 04 e8 bb af c4 5e 5e 06 03 e8 b3 af c4 5e 5e 07 02 e8 ab af c4 5e 5e 08 01 e8 a3 af c4 5e 5e 09 00 20 0a 9d c8 f7 7f 00 00 e8 93 af c4 5e 5e 00 0c e8 8b af c4 5e 5e 01 0b e8 83 af c4 5e 5e 02 0a e8 7b af c4 5e 5e 03 09 e8 73 af c4 5e 5e 04 08 e8 6b af c4 5e 5e 05 07 e8 63 af c4 5e 5e 06 06 e8 5b af c4 5e 5e 07 05 e8 53 af c4 5e 5e 08 04 e8 4b af c4 5e 5e 09 03 e8 43 af c4 5e 5e 0a 02 e8 3b af c4 5e 5e 0b 01 e8 33 af c4 5e 5e 0c 00 d8 0b 9d c8 f7 7f 00 00 e8 23 af c4 5e 5e 00 09 e8 1b af c4 5e 5e 01 08 e8 13 af c4 5e 5e 02 07 e8 0b af c4 5e 5e 03 06 e8 03 af c4 5e 5e 04 05 e8 fb ae c4 5e 5e 05 04 e8 f3 ae c4 5e 5e 06 03 e8 eb ae c4 5e 5e 07 02 e8 e3 ae c4 5e 5e 08 01 e8 db ae c4 5e 5e 09 00 40 0e 9d c8 f7 7f 00 00 e8 cb ae c4 5e 5e 00 03 e8 c3 ae c4 5e 5e 01 02 e8 bb ae c4 5e 5e 02 01 e8 b3 ae c4 5e 5e 03 00 d8 0f 9d c8 f7 7f 00 00 e8 a3 ae c4 5e 5e 00 00 48 11 9d c8 f7 7f 00 00 e8 93 ae c4 5e 5e 00 09 e8 8b ae c4 5e 5e 01 08 e8 83 ae c4 5e 5e 02 07 e8 7b ae c4 5e 5e 03 06 e8 73 ae c4 5e 5e 04 05 e8 6b ae c4 5e 5e 05 04 e8 63 ae c4 5e 5e 06 03 e8 5b ae c4 5e 5e 07 02 e8 53 ae c4 5e 5e 08 01 e8 4b ae c4 5e 5e 09 00 d8 11 9d c8 f7 7f 00 00 e8 3b ae c4 5e 5e 00 03 e8 33 ae c4 5e 5e 03 02 e8 2b ae c4 5e 5e 06 01 e8 23 ae c4 5e 5e 09 00 b8 14 9d c8 f7 7f 00 00 e8 13 ae c4 5e 5e 00 00 88 15 9d c8 f7 7f 00 00 e8 03 ae c4 5e 5e 00 0a e8 fb ad c4 5e 5e 01 09 e8 f3 ad c4 5e 5e 02 08 e8 eb ad c4 5e 5e 03 07 e8 e3 ad c4 5e 5e 04 06 e8 db ad c4 5e 5e 05 05 e8 d3 ad c4 5e 5e 06 04 e8 cb ad c4 5e 5e 07 03 e8 c3 ad c4 5e 5e 08 02 e8 bb ad c4 5e 5e 09 01 e8 b3 ad c4 5e 5e 0a 00 e8 15 9d c8 f7 7f 00 00 e8 a3 ad c4 5e 5e 00 00 68 17 9d c8 f7 7f 00 00 e8 93 ad c4 5e 5e 00 00 38 18 9d c8 f7 7f 00 00 e8 83 ad c4 5e 5e 00 00 98 18 9d c8 f7 7f 00 00 e8 73 ad c4 5e 5e 00 00 f8 18 9d c8 f7 7f 00 00 e8 63 ad c4 5e 5e 00 09 e8 5b ad c4 5e 5e 01 08 e8 53 ad c4 5e 5e 02 07 e8 4b ad c4 5e 5e 03 06 e8 43 ad c4 5e 5e 04 05 e8 3b ad c4 5e 5e 05 04 e8 33 ad c4 5e 5e 06 03 e8 2b ad c4 5e 5e 07 02 e8 23 ad c4 5e 5e 08 01 e8 1b ad c4 5e 5e 09 00 88 19 9d c8 f7 7f 00 00 e8 0b ad c4 5e 5e 00 03 e8 03 ad c4 5e 5e 03 02 e8 fb ac c4 5e 5e 06 01 e8 f3 ac c4 5e 5e 09 00 68 1c 9d c8 f7 7f 00 00 e8 e3 ac c4 5e 5e 00 00 38 1d 9d c8 f7 7f 00 00 e8 d3 ac c4 5e 5e 00 09 e8 cb ac c4 5e 5e 01 08 e8 c3 ac c4 5e 5e 02 07 e8 bb ac c4 5e 5e 03 06 e8 b3 ac c4 5e 5e 04 05 e8 ab ac c4 5e 5e 05 04 e8 a3 ac c4 5e 5e 06 03 e8 9b ac c4 5e 5e 07 02 e8 93 ac c4 5e 5e 08 01 e8 8b ac c4 5e 5e 09 00 c8 1d 9d c8 f7 7f 00 00 e8 7b ac c4 5e 5e 00 03 e8 73 ac c4 5e 5e 03 02 e8 6b ac c4 5e 5e 06 01 e8 63 ac c4 5e 5e 09 00 a8 20 9d c8 f7 7f 00 00 e8 53 ac c4 5e 5e 00 00 78 21 9d c8 f7 7f 00 00 e8 43 ac c4 5e 5e 00 09 e8 3b ac c4 5e 5e 01 08 e8 33 ac c4 5e 5e 02 07 e8 2b ac c4 5e 5e 03 06 e8 23 ac c4 5e 5e 04 05 e8 1b ac c4 5e 5e 05 04 e8 13 ac c4 5e 5e 06 03 e8 0b ac c4 5e 5e 07 02 e8 03 ac c4 5e 5e 08 01 e8 fb ab c4 5e 5e 09 00 08 22 9d c8 f7 7f 00 00 00 00 00 00 00 00 00 00
73        | 7ff7c861a570h   | 1256    | logix/LogicEngine             | satisfied_g[32i](32i,32i)                                   | satisfied     | bit satisfied<int>(ComparisonExpr<int> expr, int a, int b)                      | 57 56 53 48 83 ec 20 48 8b f1 8b fa 41 8b d8 48 b9 48 5f 80 c7 f7 7f 00 00 ba 02 00 00 00 e8 4d c8 c4 5e 89 78 10 89 58 14 48 8b ce 48 8b d0 39 09 e8 92 fc ff ff 48 8b ce e8 32 bd ff ff 8b 40 08 3d ff ff ff 7f 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 b0 69 9c c8 f7 7f 00 00 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 c8 70 a3 c7 f7 7f 00 00 ba 02 00 00 00 e8 dc c7 c4 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 87 fc ff ff 48 8b ce e8 b7 fc ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 eb af c4 5e 5e 00 09 e8 e3 af c4 5e 5e 01 08 e8 db af c4 5e 5e 02 07 e8 d3 af c4 5e 5e 03 06 e8 cb af c4 5e 5e 04 05 e8 c3 af c4 5e 5e 05 04 e8 bb af c4 5e 5e 06 03 e8 b3 af c4 5e 5e 07 02 e8 ab af c4 5e 5e 08 01 e8 a3 af c4 5e 5e 09 00 20 0a 9d c8 f7 7f 00 00 e8 93 af c4 5e 5e 00 0c e8 8b af c4 5e 5e 01 0b e8 83 af c4 5e 5e 02 0a e8 7b af c4 5e 5e 03 09 e8 73 af c4 5e 5e 04 08 e8 6b af c4 5e 5e 05 07 e8 63 af c4 5e 5e 06 06 e8 5b af c4 5e 5e 07 05 e8 53 af c4 5e 5e 08 04 e8 4b af c4 5e 5e 09 03 e8 43 af c4 5e 5e 0a 02 e8 3b af c4 5e 5e 0b 01 e8 33 af c4 5e 5e 0c 00 d8 0b 9d c8 f7 7f 00 00 e8 23 af c4 5e 5e 00 09 e8 1b af c4 5e 5e 01 08 e8 13 af c4 5e 5e 02 07 e8 0b af c4 5e 5e 03 06 e8 03 af c4 5e 5e 04 05 e8 fb ae c4 5e 5e 05 04 e8 f3 ae c4 5e 5e 06 03 e8 eb ae c4 5e 5e 07 02 e8 e3 ae c4 5e 5e 08 01 e8 db ae c4 5e 5e 09 00 40 0e 9d c8 f7 7f 00 00 e8 cb ae c4 5e 5e 00 03 e8 c3 ae c4 5e 5e 01 02 e8 bb ae c4 5e 5e 02 01 e8 b3 ae c4 5e 5e 03 00 d8 0f 9d c8 f7 7f 00 00 e8 a3 ae c4 5e 5e 00 00 48 11 9d c8 f7 7f 00 00 e8 93 ae c4 5e 5e 00 09 e8 8b ae c4 5e 5e 01 08 e8 83 ae c4 5e 5e 02 07 e8 7b ae c4 5e 5e 03 06 e8 73 ae c4 5e 5e 04 05 e8 6b ae c4 5e 5e 05 04 e8 63 ae c4 5e 5e 06 03 e8 5b ae c4 5e 5e 07 02 e8 53 ae c4 5e 5e 08 01 e8 4b ae c4 5e 5e 09 00 d8 11 9d c8 f7 7f 00 00 e8 3b ae c4 5e 5e 00 03 e8 33 ae c4 5e 5e 03 02 e8 2b ae c4 5e 5e 06 01 e8 23 ae c4 5e 5e 09 00 b8 14 9d c8 f7 7f 00 00 e8 13 ae c4 5e 5e 00 00 88 15 9d c8 f7 7f 00 00 e8 03 ae c4 5e 5e 00 0a e8 fb ad c4 5e 5e 01 09 e8 f3 ad c4 5e 5e 02 08 e8 eb ad c4 5e 5e 03 07 e8 e3 ad c4 5e 5e 04 06 e8 db ad c4 5e 5e 05 05 e8 d3 ad c4 5e 5e 06 04 e8 cb ad c4 5e 5e 07 03 e8 c3 ad c4 5e 5e 08 02 e8 bb ad c4 5e 5e 09 01 e8 b3 ad c4 5e 5e 0a 00 e8 15 9d c8 f7 7f 00 00 e8 a3 ad c4 5e 5e 00 00 68 17 9d c8 f7 7f 00 00 e8 93 ad c4 5e 5e 00 00 38 18 9d c8 f7 7f 00 00 e8 83 ad c4 5e 5e 00 00 98 18 9d c8 f7 7f 00 00 e8 73 ad c4 5e 5e 00 00 f8 18 9d c8 f7 7f 00 00 e8 63 ad c4 5e 5e 00 09 e8 5b ad c4 5e 5e 01 08 e8 53 ad c4 5e 5e 02 07 e8 4b ad c4 5e 5e 03 06 e8 43 ad c4 5e 5e 04 05 e8 3b ad c4 5e 5e 05 04 e8 33 ad c4 5e 5e 06 03 e8 2b ad c4 5e 5e 07 02 e8 23 ad c4 5e 5e 08 01 e8 1b ad c4 5e 5e 09 00 88 19 9d c8 f7 7f 00 00 e8 0b ad c4 5e 5e 00 03 e8 03 ad c4 5e 5e 03 02 e8 fb ac c4 5e 5e 06 01 e8 f3 ac c4 5e 5e 09 00 68 1c 9d c8 f7 7f 00 00 e8 e3 ac c4 5e 5e 00 00 38 1d 9d c8 f7 7f 00 00 e8 d3 ac c4 5e 5e 00 09 e8 cb ac c4 5e 5e 01 08 e8 c3 ac c4 5e 5e 02 07 e8 bb ac c4 5e 5e 03 06 e8 b3 ac c4 5e 5e 04 05 e8 ab ac c4 5e 5e 05 04 e8 a3 ac c4 5e 5e 06 03 e8 9b ac c4 5e 5e 07 02 e8 93 ac c4 5e 5e 08 01 e8 8b ac c4 5e 5e 09 00 c8 1d 9d c8 f7 7f 00 00 e8 7b ac c4 5e 5e 00 03 e8 73 ac c4 5e 5e 03 02 e8 6b ac c4 5e 5e 06 01 e8 63 ac c4 5e 5e 09 00 a8 20 9d c8 f7 7f 00 00 e8 53 ac c4 5e 5e 00 00 78 21 9d c8 f7 7f 00 00 e8 43 ac c4 5e 5e 00 09 e8 3b ac c4 5e 5e 01 08 e8 33 ac c4 5e 5e 02 07 e8 2b ac c4 5e 5e 03 06 e8 23 ac c4 5e 5e 04 05 e8 1b ac c4 5e 5e 05 04 e8 13 ac c4 5e 5e 06 03 e8 0b ac c4 5e 5e 07 02 e8 03 ac c4 5e 5e 08 01 e8 fb ab c4 5e 5e 09 00 08 22 9d c8 f7 7f 00 00 00 00 00 00 00 00 00 00
74        | 7ff7c861a5e0h   | 1144    | logix/LogicEngine             | satisfied_g[64u](64u,64u)                                   | satisfied     | bit satisfied<ulong>(ComparisonExpr<ulong> expr, ulong a, ulong b)              | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 c8 70 a3 c7 f7 7f 00 00 ba 02 00 00 00 e8 dc c7 c4 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 87 fc ff ff 48 8b ce e8 b7 fc ff ff 48 8b 40 08 48 83 f8 ff 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 eb af c4 5e 5e 00 09 e8 e3 af c4 5e 5e 01 08 e8 db af c4 5e 5e 02 07 e8 d3 af c4 5e 5e 03 06 e8 cb af c4 5e 5e 04 05 e8 c3 af c4 5e 5e 05 04 e8 bb af c4 5e 5e 06 03 e8 b3 af c4 5e 5e 07 02 e8 ab af c4 5e 5e 08 01 e8 a3 af c4 5e 5e 09 00 20 0a 9d c8 f7 7f 00 00 e8 93 af c4 5e 5e 00 0c e8 8b af c4 5e 5e 01 0b e8 83 af c4 5e 5e 02 0a e8 7b af c4 5e 5e 03 09 e8 73 af c4 5e 5e 04 08 e8 6b af c4 5e 5e 05 07 e8 63 af c4 5e 5e 06 06 e8 5b af c4 5e 5e 07 05 e8 53 af c4 5e 5e 08 04 e8 4b af c4 5e 5e 09 03 e8 43 af c4 5e 5e 0a 02 e8 3b af c4 5e 5e 0b 01 e8 33 af c4 5e 5e 0c 00 d8 0b 9d c8 f7 7f 00 00 e8 23 af c4 5e 5e 00 09 e8 1b af c4 5e 5e 01 08 e8 13 af c4 5e 5e 02 07 e8 0b af c4 5e 5e 03 06 e8 03 af c4 5e 5e 04 05 e8 fb ae c4 5e 5e 05 04 e8 f3 ae c4 5e 5e 06 03 e8 eb ae c4 5e 5e 07 02 e8 e3 ae c4 5e 5e 08 01 e8 db ae c4 5e 5e 09 00 40 0e 9d c8 f7 7f 00 00 e8 cb ae c4 5e 5e 00 03 e8 c3 ae c4 5e 5e 01 02 e8 bb ae c4 5e 5e 02 01 e8 b3 ae c4 5e 5e 03 00 d8 0f 9d c8 f7 7f 00 00 e8 a3 ae c4 5e 5e 00 00 48 11 9d c8 f7 7f 00 00 e8 93 ae c4 5e 5e 00 09 e8 8b ae c4 5e 5e 01 08 e8 83 ae c4 5e 5e 02 07 e8 7b ae c4 5e 5e 03 06 e8 73 ae c4 5e 5e 04 05 e8 6b ae c4 5e 5e 05 04 e8 63 ae c4 5e 5e 06 03 e8 5b ae c4 5e 5e 07 02 e8 53 ae c4 5e 5e 08 01 e8 4b ae c4 5e 5e 09 00 d8 11 9d c8 f7 7f 00 00 e8 3b ae c4 5e 5e 00 03 e8 33 ae c4 5e 5e 03 02 e8 2b ae c4 5e 5e 06 01 e8 23 ae c4 5e 5e 09 00 b8 14 9d c8 f7 7f 00 00 e8 13 ae c4 5e 5e 00 00 88 15 9d c8 f7 7f 00 00 e8 03 ae c4 5e 5e 00 0a e8 fb ad c4 5e 5e 01 09 e8 f3 ad c4 5e 5e 02 08 e8 eb ad c4 5e 5e 03 07 e8 e3 ad c4 5e 5e 04 06 e8 db ad c4 5e 5e 05 05 e8 d3 ad c4 5e 5e 06 04 e8 cb ad c4 5e 5e 07 03 e8 c3 ad c4 5e 5e 08 02 e8 bb ad c4 5e 5e 09 01 e8 b3 ad c4 5e 5e 0a 00 e8 15 9d c8 f7 7f 00 00 e8 a3 ad c4 5e 5e 00 00 68 17 9d c8 f7 7f 00 00 e8 93 ad c4 5e 5e 00 00 38 18 9d c8 f7 7f 00 00 e8 83 ad c4 5e 5e 00 00 98 18 9d c8 f7 7f 00 00 e8 73 ad c4 5e 5e 00 00 f8 18 9d c8 f7 7f 00 00 e8 63 ad c4 5e 5e 00 09 e8 5b ad c4 5e 5e 01 08 e8 53 ad c4 5e 5e 02 07 e8 4b ad c4 5e 5e 03 06 e8 43 ad c4 5e 5e 04 05 e8 3b ad c4 5e 5e 05 04 e8 33 ad c4 5e 5e 06 03 e8 2b ad c4 5e 5e 07 02 e8 23 ad c4 5e 5e 08 01 e8 1b ad c4 5e 5e 09 00 88 19 9d c8 f7 7f 00 00 e8 0b ad c4 5e 5e 00 03 e8 03 ad c4 5e 5e 03 02 e8 fb ac c4 5e 5e 06 01 e8 f3 ac c4 5e 5e 09 00 68 1c 9d c8 f7 7f 00 00 e8 e3 ac c4 5e 5e 00 00 38 1d 9d c8 f7 7f 00 00 e8 d3 ac c4 5e 5e 00 09 e8 cb ac c4 5e 5e 01 08 e8 c3 ac c4 5e 5e 02 07 e8 bb ac c4 5e 5e 03 06 e8 b3 ac c4 5e 5e 04 05 e8 ab ac c4 5e 5e 05 04 e8 a3 ac c4 5e 5e 06 03 e8 9b ac c4 5e 5e 07 02 e8 93 ac c4 5e 5e 08 01 e8 8b ac c4 5e 5e 09 00 c8 1d 9d c8 f7 7f 00 00 e8 7b ac c4 5e 5e 00 03 e8 73 ac c4 5e 5e 03 02 e8 6b ac c4 5e 5e 06 01 e8 63 ac c4 5e 5e 09 00 a8 20 9d c8 f7 7f 00 00 e8 53 ac c4 5e 5e 00 00 78 21 9d c8 f7 7f 00 00 e8 43 ac c4 5e 5e 00 09 e8 3b ac c4 5e 5e 01 08 e8 33 ac c4 5e 5e 02 07 e8 2b ac c4 5e 5e 03 06 e8 23 ac c4 5e 5e 04 05 e8 1b ac c4 5e 5e 05 04 e8 13 ac c4 5e 5e 06 03 e8 0b ac c4 5e 5e 07 02 e8 03 ac c4 5e 5e 08 01 e8 fb ab c4 5e 5e 09 00 08 22 9d c8 f7 7f 00 00 00 00 00 00 00 00 00 00
75        | 7ff7c861aa60h   | 119     | logix/LogicEngine             | satisfied_g[64i](64i,64i)                                   | satisfied     | bit satisfied<long>(ComparisonExpr<long> expr, long a, long b)                  | 57 56 53 48 83 ec 20 48 8b f1 48 8b fa 49 8b d8 48 b9 c0 8c 08 c8 f7 7f 00 00 ba 02 00 00 00 e8 5c c3 c4 5e 48 89 78 10 48 89 58 18 48 8b ce 48 8b d0 39 09 e8 e7 fb ff ff 48 8b ce e8 df b8 ff ff 48 8b 40 08 48 ba ff ff ff ff ff ff ff 7f 48 3b c2 0f 94 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
76        | 7ff7c861aae0h   | 147     | logix/LogicEngine             | satisfied_g[8u](v128x8u,v128x8u)                            | satisfied     | bit satisfied<byte>(ComparisonExpr<Vector128<byte>> expr, Vector128<byte> a, Vector128<byte> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 d0 13 9d c8 f7 7f 00 00 ba 02 00 00 00 e8 d9 c2 c4 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 b2 fc ff ff 48 8b cb e8 62 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
77        | 7ff7c861ab80h   | 147     | logix/LogicEngine             | satisfied_g[8i](v128x8i,v128x8i)                            | satisfied     | bit satisfied<sbyte>(ComparisonExpr<Vector128<sbyte>> expr, Vector128<sbyte> a, Vector128<sbyte> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 80 1b 9d c8 f7 7f 00 00 ba 02 00 00 00 e8 39 c2 c4 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 42 fd ff ff 48 8b cb e8 a2 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 74 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
78        | 7ff7c861ac20h   | 1176    | logix/LogicEngine             | satisfied_g[16u](v128x16u,v128x16u)                         | satisfied     | bit satisfied<ushort>(ComparisonExpr<Vector128<ushort>> expr, Vector128<ushort> a, Vector128<ushort> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 c0 1f 9d c8 f7 7f 00 00 ba 02 00 00 00 e8 99 c1 c4 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 32 fd ff ff 48 8b cb e8 e2 c1 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 83 a9 c4 5e 5e 00 03 e8 7b a9 c4 5e 5e 03 02 e8 73 a9 c4 5e 5e 06 01 e8 6b a9 c4 5e 5e 09 00 e8 24 9d c8 f7 7f 00 00 e8 5b a9 c4 5e 5e 00 00 b8 25 9d c8 f7 7f 00 00 e8 4b a9 c4 5e 5e 00 09 e8 43 a9 c4 5e 5e 01 08 e8 3b a9 c4 5e 5e 02 07 e8 33 a9 c4 5e 5e 03 06 e8 2b a9 c4 5e 5e 04 05 e8 23 a9 c4 5e 5e 05 04 e8 1b a9 c4 5e 5e 06 03 e8 13 a9 c4 5e 5e 07 02 e8 0b a9 c4 5e 5e 08 01 e8 03 a9 c4 5e 5e 09 00 48 26 9d c8 f7 7f 00 00 e8 f3 a8 c4 5e 5e 00 03 e8 eb a8 c4 5e 5e 03 02 e8 e3 a8 c4 5e 5e 06 01 e8 db a8 c4 5e 5e 09 00 28 29 9d c8 f7 7f 00 00 e8 cb a8 c4 5e 5e 00 00 f8 29 9d c8 f7 7f 00 00 e8 bb a8 c4 5e 5e 00 09 e8 b3 a8 c4 5e 5e 01 08 e8 ab a8 c4 5e 5e 02 07 e8 a3 a8 c4 5e 5e 03 06 e8 9b a8 c4 5e 5e 04 05 e8 93 a8 c4 5e 5e 05 04 e8 8b a8 c4 5e 5e 06 03 e8 83 a8 c4 5e 5e 07 02 e8 7b a8 c4 5e 5e 08 01 e8 73 a8 c4 5e 5e 09 00 88 2a 9d c8 f7 7f 00 00 e8 63 a8 c4 5e 5e 00 03 e8 5b a8 c4 5e 5e 03 02 e8 53 a8 c4 5e 5e 06 01 e8 4b a8 c4 5e 5e 09 00 68 2d 9d c8 f7 7f 00 00 e8 3b a8 c4 5e 5e 00 00 38 2e 9d c8 f7 7f 00 00 e8 2b a8 c4 5e 5e 00 09 e8 23 a8 c4 5e 5e 01 08 e8 1b a8 c4 5e 5e 02 07 e8 13 a8 c4 5e 5e 03 06 e8 0b a8 c4 5e 5e 04 05 e8 03 a8 c4 5e 5e 05 04 e8 fb a7 c4 5e 5e 06 03 e8 f3 a7 c4 5e 5e 07 02 e8 eb a7 c4 5e 5e 08 01 e8 e3 a7 c4 5e 5e 09 00 c8 2e 9d c8 f7 7f 00 00 e8 d3 a7 c4 5e 5e 00 03 e8 cb a7 c4 5e 5e 01 02 e8 c3 a7 c4 5e 5e 02 01 e8 bb a7 c4 5e 5e 03 00 60 30 9d c8 f7 7f 00 00 e8 ab a7 c4 5e 5e 00 03 e8 a3 a7 c4 5e 5e 03 02 e8 9b a7 c4 5e 5e 06 01 e8 93 a7 c4 5e 5e 09 00 90 32 9d c8 f7 7f 00 00 e8 83 a7 c4 5e 5e 00 00 60 33 9d c8 f7 7f 00 00 e8 73 a7 c4 5e 5e 00 00 c0 33 9d c8 f7 7f 00 00 e8 63 a7 c4 5e 5e 00 00 20 34 9d c8 f7 7f 00 00 e8 53 a7 c4 5e 5e 00 09 e8 4b a7 c4 5e 5e 01 08 e8 43 a7 c4 5e 5e 02 07 e8 3b a7 c4 5e 5e 03 06 e8 33 a7 c4 5e 5e 04 05 e8 2b a7 c4 5e 5e 05 04 e8 23 a7 c4 5e 5e 06 03 e8 1b a7 c4 5e 5e 07 02 e8 13 a7 c4 5e 5e 08 01 e8 0b a7 c4 5e 5e 09 00 b0 34 9d c8 f7 7f 00 00 e8 fb a6 c4 5e 5e 00 03 e8 f3 a6 c4 5e 5e 03 02 e8 eb a6 c4 5e 5e 06 01 e8 e3 a6 c4 5e 5e 09 00 90 37 9d c8 f7 7f 00 00 e8 d3 a6 c4 5e 5e 00 0c e8 cb a6 c4 5e 5e 01 0b e8 c3 a6 c4 5e 5e 02 0a e8 bb a6 c4 5e 5e 03 09 e8 b3 a6 c4 5e 5e 04 08 e8 ab a6 c4 5e 5e 05 07 e8 a3 a6 c4 5e 5e 06 06 e8 9b a6 c4 5e 5e 07 05 e8 93 a6 c4 5e 5e 08 04 e8 8b a6 c4 5e 5e 09 03 e8 83 a6 c4 5e 5e 0a 02 e8 7b a6 c4 5e 5e 0b 01 e8 73 a6 c4 5e 5e 0c 00 90 38 9d c8 f7 7f 00 00 e8 63 a6 c4 5e 5e 00 00 18 3a 9d c8 f7 7f 00 00 e8 53 a6 c4 5e 5e 00 09 e8 4b a6 c4 5e 5e 01 08 e8 43 a6 c4 5e 5e 02 07 e8 3b a6 c4 5e 5e 03 06 e8 33 a6 c4 5e 5e 04 05 e8 2b a6 c4 5e 5e 05 04 e8 23 a6 c4 5e 5e 06 03 e8 1b a6 c4 5e 5e 07 02 e8 13 a6 c4 5e 5e 08 01 e8 0b a6 c4 5e 5e 09 00 f8 3a 9d c8 f7 7f 00 00 e8 fb a5 c4 5e 5e 00 03 e8 f3 a5 c4 5e 5e 01 02 e8 eb a5 c4 5e 5e 02 01 e8 e3 a5 c4 5e 5e 03 00 90 3c 9d c8 f7 7f 00 00 e8 d3 a5 c4 5e 5e 00 00 00 3e 9d c8 f7 7f 00 00 e8 c3 a5 c4 5e 5e 00 03 e8 bb a5 c4 5e 5e 03 02 e8 b3 a5 c4 5e 5e 06 01 e8 ab a5 c4 5e 5e 09 00 70 41 9d c8 f7 7f 00 00 e8 9b a5 c4 5e 5e 00 00 40 42 9d c8 f7 7f 00 00 00 00 00 00 00 00 00 00
79        | 7ff7c861b0c0h   | 147     | logix/LogicEngine             | satisfied_g[16i](v128x16i,v128x16i)                         | satisfied     | bit satisfied<short>(ComparisonExpr<Vector128<short>> expr, Vector128<short> a, Vector128<short> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 00 24 9d c8 f7 7f 00 00 ba 02 00 00 00 e8 f9 bc c4 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 22 f9 ff ff 48 8b cb e8 32 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 75 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
80        | 7ff7c861b160h   | 147     | logix/LogicEngine             | satisfied_g[32u](v128x32u,v128x32u)                         | satisfied     | bit satisfied<uint>(ComparisonExpr<Vector128<uint>> expr, Vector128<uint> a, Vector128<uint> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 40 28 9d c8 f7 7f 00 00 ba 02 00 00 00 e8 59 bc c4 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 7a fb ff ff 48 8b cb e8 72 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
81        | 7ff7c861b200h   | 147     | logix/LogicEngine             | satisfied_g[32i](v128x32i,v128x32i)                         | satisfied     | bit satisfied<int>(ComparisonExpr<Vector128<int>> expr, Vector128<int> a, Vector128<int> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 80 2c 9d c8 f7 7f 00 00 ba 02 00 00 00 e8 b9 bb c4 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 6a fb ff ff 48 8b cb e8 b2 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c5 f1 76 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
82        | 7ff7c861b2a0h   | 147     | logix/LogicEngine             | satisfied_g[64u](v128x64u,v128x64u)                         | satisfied     | bit satisfied<ulong>(ComparisonExpr<Vector128<ulong>> expr, Vector128<ulong> a, Vector128<ulong> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 a8 31 9d c8 f7 7f 00 00 ba 02 00 00 00 e8 19 bb c4 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 5a fb ff ff 48 8b cb e8 da fb ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
83        | 7ff7c861b340h   | 1335    | logix/LogicEngine             | satisfied_g[64i](v128x64i,v128x64i)                         | satisfied     | bit satisfied<long>(ComparisonExpr<Vector128<long>> expr, Vector128<long> a, Vector128<long> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 a8 36 9d c8 f7 7f 00 00 ba 02 00 00 00 e8 79 ba c4 5e c5 f9 10 06 c5 f9 11 40 10 c5 f9 10 07 c5 f9 11 40 20 48 8b cb 48 8b d0 39 09 e8 92 fb ff ff 48 8b cb e8 52 c2 ff ff c5 f9 10 40 08 c5 f0 57 c9 c5 e8 57 d2 c4 e2 71 29 ca c4 e2 79 17 c1 0f 92 c0 0f b6 c0 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00 e8 63 a2 c4 5e 5e 00 09 e8 5b a2 c4 5e 5e 01 08 e8 53 a2 c4 5e 5e 02 07 e8 4b a2 c4 5e 5e 03 06 e8 43 a2 c4 5e 5e 04 05 e8 3b a2 c4 5e 5e 05 04 e8 33 a2 c4 5e 5e 06 03 e8 2b a2 c4 5e 5e 07 02 e8 23 a2 c4 5e 5e 08 01 e8 1b a2 c4 5e 5e 09 00 90 3e 9d c8 f7 7f 00 00 e8 0b a2 c4 5e 5e 00 0a e8 03 a2 c4 5e 5e 01 09 e8 fb a1 c4 5e 5e 02 08 e8 f3 a1 c4 5e 5e 03 07 e8 eb a1 c4 5e 5e 04 06 e8 e3 a1 c4 5e 5e 05 05 e8 db a1 c4 5e 5e 06 04 e8 d3 a1 c4 5e 5e 07 03 e8 cb a1 c4 5e 5e 08 02 e8 c3 a1 c4 5e 5e 09 01 e8 bb a1 c4 5e 5e 0a 00 a0 42 9d c8 f7 7f 00 00 e8 ab a1 c4 5e 5e 00 00 20 44 9d c8 f7 7f 00 00 e8 9b a1 c4 5e 5e 00 00 f0 44 9d c8 f7 7f 00 00 e8 8b a1 c4 5e 5e 00 00 50 45 9d c8 f7 7f 00 00 e8 7b a1 c4 5e 5e 00 00 b0 45 9d c8 f7 7f 00 00 e8 6b a1 c4 5e 5e 00 09 e8 63 a1 c4 5e 5e 01 08 e8 5b a1 c4 5e 5e 02 07 e8 53 a1 c4 5e 5e 03 06 e8 4b a1 c4 5e 5e 04 05 e8 43 a1 c4 5e 5e 05 04 e8 3b a1 c4 5e 5e 06 03 e8 33 a1 c4 5e 5e 07 02 e8 2b a1 c4 5e 5e 08 01 e8 23 a1 c4 5e 5e 09 00 40 46 9d c8 f7 7f 00 00 e8 13 a1 c4 5e 5e 00 03 e8 0b a1 c4 5e 5e 03 02 e8 03 a1 c4 5e 5e 06 01 e8 fb a0 c4 5e 5e 09 00 20 49 9d c8 f7 7f 00 00 e8 eb a0 c4 5e 5e 00 00 f0 49 9d c8 f7 7f 00 00 e8 db a0 c4 5e 5e 00 09 e8 d3 a0 c4 5e 5e 01 08 e8 cb a0 c4 5e 5e 02 07 e8 c3 a0 c4 5e 5e 03 06 e8 bb a0 c4 5e 5e 04 05 e8 b3 a0 c4 5e 5e 05 04 e8 ab a0 c4 5e 5e 06 03 e8 a3 a0 c4 5e 5e 07 02 e8 9b a0 c4 5e 5e 08 01 e8 93 a0 c4 5e 5e 09 00 80 4a 9d c8 f7 7f 00 00 e8 83 a0 c4 5e 5e 00 03 e8 7b a0 c4 5e 5e 03 02 e8 73 a0 c4 5e 5e 06 01 e8 6b a0 c4 5e 5e 09 00 60 4d 9d c8 f7 7f 00 00 e8 5b a0 c4 5e 5e 00 00 30 4e 9d c8 f7 7f 00 00 e8 4b a0 c4 5e 5e 00 09 e8 43 a0 c4 5e 5e 01 08 e8 3b a0 c4 5e 5e 02 07 e8 33 a0 c4 5e 5e 03 06 e8 2b a0 c4 5e 5e 04 05 e8 23 a0 c4 5e 5e 05 04 e8 1b a0 c4 5e 5e 06 03 e8 13 a0 c4 5e 5e 07 02 e8 0b a0 c4 5e 5e 08 01 e8 03 a0 c4 5e 5e 09 00 c0 4e 9d c8 f7 7f 00 00 e8 f3 9f c4 5e 5e 00 03 e8 eb 9f c4 5e 5e 03 02 e8 e3 9f c4 5e 5e 06 01 e8 db 9f c4 5e 5e 09 00 a0 51 9d c8 f7 7f 00 00 e8 cb 9f c4 5e 5e 00 00 70 52 9d c8 f7 7f 00 00 e8 bb 9f c4 5e 5e 00 09 e8 b3 9f c4 5e 5e 01 08 e8 ab 9f c4 5e 5e 02 07 e8 a3 9f c4 5e 5e 03 06 e8 9b 9f c4 5e 5e 04 05 e8 93 9f c4 5e 5e 05 04 e8 8b 9f c4 5e 5e 06 03 e8 83 9f c4 5e 5e 07 02 e8 7b 9f c4 5e 5e 08 01 e8 73 9f c4 5e 5e 09 00 00 53 9d c8 f7 7f 00 00 e8 63 9f c4 5e 5e 00 03 e8 5b 9f c4 5e 5e 03 02 e8 53 9f c4 5e 5e 06 01 e8 4b 9f c4 5e 5e 09 00 e0 55 9d c8 f7 7f 00 00 e8 3b 9f c4 5e 5e 00 00 b0 56 9d c8 f7 7f 00 00 e8 2b 9f c4 5e 5e 00 09 e8 23 9f c4 5e 5e 01 08 e8 1b 9f c4 5e 5e 02 07 e8 13 9f c4 5e 5e 03 06 e8 0b 9f c4 5e 5e 04 05 e8 03 9f c4 5e 5e 05 04 e8 fb 9e c4 5e 5e 06 03 e8 f3 9e c4 5e 5e 07 02 e8 eb 9e c4 5e 5e 08 01 e8 e3 9e c4 5e 5e 09 00 40 57 9d c8 f7 7f 00 00 e8 d3 9e c4 5e 5e 00 03 e8 cb 9e c4 5e 5e 03 02 e8 c3 9e c4 5e 5e 06 01 e8 bb 9e c4 5e 5e 09 00 20 5a 9d c8 f7 7f 00 00 e8 ab 9e c4 5e 5e 00 00 f0 5a 9d c8 f7 7f 00 00 e8 9b 9e c4 5e 5e 00 03 e8 93 9e c4 5e 5e 01 02 e8 8b 9e c4 5e 5e 02 01 e8 83 9e c4 5e 5e 03 00 18 5d 9d c8 f7 7f 00 00 e8 73 9e c4 5e 5e 00 00 18 60 9d c8 f7 7f 00 00 a0 80 9c c8 f7 7f 00 00 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 88 40 9d c8 f7 7f 00 00 ba 02 00 00 00 e8 d9 b5 c4 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 a2 c2 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
84        | 7ff7c861b7e0h   | 151     | logix/LogicEngine             | satisfied_g[8u](v256x8u,v256x8u)                            | satisfied     | bit satisfied<byte>(ComparisonExpr<Vector256<byte>> expr, Vector256<byte> a, Vector256<byte> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 88 40 9d c8 f7 7f 00 00 ba 02 00 00 00 e8 d9 b5 c4 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 a2 c2 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
85        | 7ff7c861b880h   | 151     | logix/LogicEngine             | satisfied_g[8i](v256x8i,v256x8i)                            | satisfied     | bit satisfied<sbyte>(ComparisonExpr<Vector256<sbyte>> expr, Vector256<sbyte> a, Vector256<sbyte> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 38 48 9d c8 f7 7f 00 00 ba 02 00 00 00 e8 39 b5 c4 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 3a fc ff ff 48 8b cb e8 12 c3 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 74 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
86        | 7ff7c861b920h   | 151     | logix/LogicEngine             | satisfied_g[16u](v256x16u,v256x16u)                         | satisfied     | bit satisfied<ushort>(ComparisonExpr<Vector256<ushort>> expr, Vector256<ushort> a, Vector256<ushort> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 78 4c 9d c8 f7 7f 00 00 ba 02 00 00 00 e8 99 b4 c4 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 2a fc ff ff 48 8b cb e8 82 c3 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
87        | 7ff7c861b9c0h   | 151     | logix/LogicEngine             | satisfied_g[16i](v256x16i,v256x16i)                         | satisfied     | bit satisfied<short>(ComparisonExpr<Vector256<short>> expr, Vector256<short> a, Vector256<short> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 b8 50 9d c8 f7 7f 00 00 ba 02 00 00 00 e8 f9 b3 c4 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 1a fc ff ff 48 8b cb e8 02 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 75 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
88        | 7ff7c861ba60h   | 151     | logix/LogicEngine             | satisfied_g[32u](v256x32u,v256x32u)                         | satisfied     | bit satisfied<uint>(ComparisonExpr<Vector256<uint>> expr, Vector256<uint> a, Vector256<uint> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 f8 54 9d c8 f7 7f 00 00 ba 02 00 00 00 e8 59 b3 c4 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 0a fc ff ff 48 8b cb e8 72 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
89        | 7ff7c861bb00h   | 480     | logix/LogicEngine             | satisfied_g[32i](v256x32i,v256x32i)                         | satisfied     | bit satisfied<int>(ComparisonExpr<Vector256<int>> expr, Vector256<int> a, Vector256<int> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 38 59 9d c8 f7 7f 00 00 ba 02 00 00 00 e8 b9 b2 c4 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 fa fb ff ff 48 8b cb e8 e2 c8 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c5 f5 76 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 02 00 00 00 00 00 00 00 e8 a3 9a c4 5e 5e 00 09 e8 9b 9a c4 5e 5e 01 08 e8 93 9a c4 5e 5e 02 07 e8 8b 9a c4 5e 5e 03 06 e8 83 9a c4 5e 5e 04 05 e8 7b 9a c4 5e 5e 05 04 e8 73 9a c4 5e 5e 06 03 e8 6b 9a c4 5e 5e 07 02 e8 63 9a c4 5e 5e 08 01 e8 5b 9a c4 5e 5e 09 00 80 5b 9d c8 f7 7f 00 00 e8 4b 9a c4 5e 5e 00 03 e8 43 9a c4 5e 5e 03 02 e8 3b 9a c4 5e 5e 06 01 e8 33 9a c4 5e 5e 09 00 48 5f 9d c8 f7 7f 00 00 e8 23 9a c4 5e 5e 00 00 78 60 9d c8 f7 7f 00 00 e8 13 9a c4 5e 5e 00 00 d8 60 9d c8 f7 7f 00 00 e8 03 9a c4 5e 5e 00 09 e8 fb 99 c4 5e 5e 01 08 e8 f3 99 c4 5e 5e 02 07 e8 eb 99 c4 5e 5e 03 06 e8 e3 99 c4 5e 5e 04 05 e8 db 99 c4 5e 5e 05 04 e8 d3 99 c4 5e 5e 06 03 e8 cb 99 c4 5e 5e 07 02 e8 c3 99 c4 5e 5e 08 01 e8 bb 99 c4 5e 5e 09 00 68 61 9d c8 f7 7f 00 00 e8 ab 99 c4 5e 5e 00 03 e8 a3 99 c4 5e 5e 03 02 e8 9b 99 c4 5e 5e 06 01 e8 93 99 c4 5e 5e 09 00 48 64 9d c8 f7 7f 00 00 e8 83 99 c4 5e 5e 00 00 30 67 9d c8 f7 7f 00 00 e8 73 99 c4 5e 5e 00 00 a8 67 9d c8 f7 7f 00 00 00 00 00 00 00 00 00 00
90        | 7ff7c861bfa0h   | 151     | logix/LogicEngine             | satisfied_g[64u](v256x64u,v256x64u)                         | satisfied     | bit satisfied<ulong>(ComparisonExpr<Vector256<ulong>> expr, Vector256<ulong> a, Vector256<ulong> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 60 5e 9d c8 f7 7f 00 00 ba 02 00 00 00 e8 19 ae c4 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 2a fc ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
91        | 7ff7c861c040h   | 151     | logix/LogicEngine             | satisfied_g[64i](v256x64i,v256x64i)                         | satisfied     | bit satisfied<long>(ComparisonExpr<Vector256<long>> expr, Vector256<long> a, Vector256<long> b)| 57 56 53 48 83 ec 20 c5 f8 77 48 8b d9 48 8b f2 49 8b f8 48 b9 60 63 9d c8 f7 7f 00 00 ba 02 00 00 00 e8 79 ad c4 5e c5 fd 10 06 c5 fd 11 40 10 c5 fd 10 07 c5 fd 11 40 30 48 8b cb 48 8b d0 39 09 e8 e2 fb ff ff 48 8b cb e8 b2 c4 ff ff c5 fd 10 40 08 c5 f4 57 c9 c5 ec 57 d2 c4 e2 75 29 ca c4 e2 7d 17 c1 0f 92 c0 0f b6 c0 c5 f8 77 48 83 c4 20 5b 5e 5f c3 cc cc cc cc cc cc cc cc 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40 00 00 00 00 00 00 00 00 00 00
92        | 7ff7c861c0e0h   | 35      | logix/LogicEngine             | eval_()                                                     | eval          | bit eval(ILogicExpr expr)                                                       | 0f 1f 44 00 00 48 b8 78 90 e7 c7 f7 7f 00 00 48 ff e0 00 00 19 00 00 00 40 00 00 00 00 00 00 00 00 00 00
93        | 7ff7c861c110h   | 607     | logix/LogicEngine             | satisfied_(1u,1u)                                           | satisfied     | bit satisfied(ComparisonExpr expr, bit a, bit b)                                | 57 56 48 83 ec 28 48 8b f1 41 8b f8 8b 0e 48 8b 4e 18 83 79 08 00 76 48 48 8b 49 10 49 bb 50 0c 64 c7 f7 7f 00 00 39 09 ff 15 12 4b 02 ff 48 8b 4e 18 83 79 08 01 76 28 48 8b 49 18 8b d7 49 bb 58 0c 64 c7 f7 7f 00 00 39 09 ff 15 f8 4a 02 ff 48 8b ce e8 10 cf 85 ff 90 48 83 c4 28 5e 5f c3 e8 5b 3c d7 5e cc 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40 00 00 00 80 8d 9c c8 f7 7f 00 00 55 41 57 41 56 57 56 53 48 83 ec 48 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 4e 10 48 8b 5f 10 41 be b6 00 00 00 41 bf 01 00 00 00 8b 49 08 3b 4b 08 0f 85 cb 00 00 00 e8 80 d9 85 ff 48 8b c8 49 bb 60 0c 64 c7 f7 7f 00 00 39 09 ff 15 7b 4a 02 ff 48 89 45 c8 48 8b 4d c8 49 bb 68 0c 64 c7 f7 7f 00 00 39 09 ff 15 69 4a 02 ff 85 c0 74 51 48 8b 4d c8 49 bb 70 0c 64 c7 f7 7f 00 00 39 09 ff 15 57 4a 02 ff 48 8b d0 48 8b ce e8 94 e4 85 ff 48 8b ce e8 4c ce 85 ff 8b d8 48 8b cf e8 42 ce 85 ff 3b d8 75 32 48 8b 4d c8 49 bb 68 0c 64 c7 f7 7f 00 00 39 09 ff 15 18 4a 02 ff 85 c0 75 af 48 8b 4d c8 49 bb 78 0c 64 c7 f7 7f 00 00 39 09 ff 15 0e 4a 02 ff eb 18 48 8b cc e8 7e 00 00 00 90 33 c0 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 8b f1 8b 7b 08 b9 19 02 00 00 48 ba 90 81 ac c7 f7 7f 00 00 e8 01 43 d7 5e 48 8b d8 b9 25 02 00 00 48 ba 90 81 ac c7 f7 7f 00 00 e8 ea 42 d7 5e 4c 8b c8 4c 8d 45 d0 45 88 38 45 89 70 04 4c 8b c3 8b ce 8b d7 48 8b 45 d0 48 89 44 24 20 e8 7f 8a 15 ff 48 8b c8 e8 0f f6 bb 5e cc 55 41 57 41 56 57 56 53 48 83 ec 38 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c8 00 74 16 48 8b 4d c8 49 bb 78 0c 64 c7 f7 7f 00 00 39 09 ff 15 50 49 02 ff 90 48 83 c4 38 5b 5e 5f 41 5e 41 5f 5d c3 00 00 19 0c 07 00 0c 82 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 19 0c 07 00 0c 62 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 00 00 00 00 00 00 00
94        | 7ff7c861c190h   | 479     | logix/LogicEngine             | equal_()                                                    | equal         | bit equal(VariedLogicExpr a, VariedLogicExpr b)                                 | 55 41 57 41 56 57 56 53 48 83 ec 48 48 8d 6c 24 70 48 89 65 b8 48 8b f1 48 8b fa 48 8b 4e 10 48 8b 5f 10 41 be b6 00 00 00 41 bf 01 00 00 00 8b 49 08 3b 4b 08 0f 85 cb 00 00 00 e8 80 d9 85 ff 48 8b c8 49 bb 60 0c 64 c7 f7 7f 00 00 39 09 ff 15 7b 4a 02 ff 48 89 45 c8 48 8b 4d c8 49 bb 68 0c 64 c7 f7 7f 00 00 39 09 ff 15 69 4a 02 ff 85 c0 74 51 48 8b 4d c8 49 bb 70 0c 64 c7 f7 7f 00 00 39 09 ff 15 57 4a 02 ff 48 8b d0 48 8b ce e8 94 e4 85 ff 48 8b ce e8 4c ce 85 ff 8b d8 48 8b cf e8 42 ce 85 ff 3b d8 75 32 48 8b 4d c8 49 bb 68 0c 64 c7 f7 7f 00 00 39 09 ff 15 18 4a 02 ff 85 c0 75 af 48 8b 4d c8 49 bb 78 0c 64 c7 f7 7f 00 00 39 09 ff 15 0e 4a 02 ff eb 18 48 8b cc e8 7e 00 00 00 90 33 c0 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 b8 01 00 00 00 48 8d 65 d8 5b 5e 5f 41 5e 41 5f 5d c3 8b f1 8b 7b 08 b9 19 02 00 00 48 ba 90 81 ac c7 f7 7f 00 00 e8 01 43 d7 5e 48 8b d8 b9 25 02 00 00 48 ba 90 81 ac c7 f7 7f 00 00 e8 ea 42 d7 5e 4c 8b c8 4c 8d 45 d0 45 88 38 45 89 70 04 4c 8b c3 8b ce 8b d7 48 8b 45 d0 48 89 44 24 20 e8 7f 8a 15 ff 48 8b c8 e8 0f f6 bb 5e cc 55 41 57 41 56 57 56 53 48 83 ec 38 48 8b 69 28 48 89 6c 24 28 48 8d 6d 70 48 83 7d c8 00 74 16 48 8b 4d c8 49 bb 78 0c 64 c7 f7 7f 00 00 39 09 ff 15 50 49 02 ff 90 48 83 c4 38 5b 5e 5f 41 5e 41 5f 5d c3 00 00 19 0c 07 00 0c 82 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 19 0c 07 00 0c 62 08 30 07 60 06 70 05 e0 03 f0 01 50 00 00 40 00 00 00 00 00 00 00 00 00 00
