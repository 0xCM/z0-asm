// System.UInt16 Z0.BitPack::packmsb8<T>(System.Runtime.Intrinsics.Vector128`1<T>)
// ushort packmsb8<byte>(Vector128<byte> src)
// AggressiveInlining
ushort packmsb8<byte>(Vector128<byte> src)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt16 Z0.ginx::vtakemask<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_0006: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.UInt16 Z0.BitPack::packmsb8<T>(System.Runtime.Intrinsics.Vector128`1<T>)
// ushort packmsb8<sbyte>(Vector128<sbyte> src)
// AggressiveInlining
ushort packmsb8<sbyte>(Vector128<sbyte> src)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt16 Z0.ginx::vtakemask<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_0006: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.UInt16 Z0.BitPack::packmsb8<T>(System.Runtime.Intrinsics.Vector128`1<T>)
// ushort packmsb8<ushort>(Vector128<ushort> src)
// AggressiveInlining
ushort packmsb8<ushort>(Vector128<ushort> src)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt16 Z0.ginx::vtakemask<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_0006: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.UInt16 Z0.BitPack::packmsb8<T>(System.Runtime.Intrinsics.Vector128`1<T>)
// ushort packmsb8<short>(Vector128<short> src)
// AggressiveInlining
ushort packmsb8<short>(Vector128<short> src)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt16 Z0.ginx::vtakemask<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_0006: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.UInt16 Z0.BitPack::packmsb8<T>(System.Runtime.Intrinsics.Vector128`1<T>)
// ushort packmsb8<uint>(Vector128<uint> src)
// AggressiveInlining
ushort packmsb8<uint>(Vector128<uint> src)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt16 Z0.ginx::vtakemask<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_0006: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.UInt16 Z0.BitPack::packmsb8<T>(System.Runtime.Intrinsics.Vector128`1<T>)
// ushort packmsb8<int>(Vector128<int> src)
// AggressiveInlining
ushort packmsb8<int>(Vector128<int> src)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt16 Z0.ginx::vtakemask<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_0006: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.UInt16 Z0.BitPack::packmsb8<T>(System.Runtime.Intrinsics.Vector128`1<T>)
// ushort packmsb8<ulong>(Vector128<ulong> src)
// AggressiveInlining
ushort packmsb8<ulong>(Vector128<ulong> src)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt16 Z0.ginx::vtakemask<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_0006: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.UInt16 Z0.BitPack::packmsb8<T>(System.Runtime.Intrinsics.Vector128`1<T>)
// ushort packmsb8<long>(Vector128<long> src)
// AggressiveInlining
ushort packmsb8<long>(Vector128<long> src)
{
    IL_0000: ldarg.0
    IL_0001: call System.UInt16 Z0.ginx::vtakemask<T>(System.Runtime.Intrinsics.Vector128`1<T>)
    IL_0006: ret
}
------------------------------------------------------------------------------------------------------------------------
