// System.UInt16 Z0.BitPack::pack8<T>(System.Runtime.Intrinsics.Vector128`1<T>,System.Byte)
// ushort pack8<byte>(Vector128<byte> src, byte index)
// AggressiveInlining
ushort pack8<byte>(Vector128<byte> src, byte index)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.ginx::vtakemask<T>(System.Runtime.Intrinsics.Vector128`1<T>,System.Byte)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.UInt16 Z0.BitPack::pack8<T>(System.Runtime.Intrinsics.Vector128`1<T>,System.Byte)
// ushort pack8<sbyte>(Vector128<sbyte> src, byte index)
// AggressiveInlining
ushort pack8<sbyte>(Vector128<sbyte> src, byte index)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.ginx::vtakemask<T>(System.Runtime.Intrinsics.Vector128`1<T>,System.Byte)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.UInt16 Z0.BitPack::pack8<T>(System.Runtime.Intrinsics.Vector128`1<T>,System.Byte)
// ushort pack8<ushort>(Vector128<ushort> src, byte index)
// AggressiveInlining
ushort pack8<ushort>(Vector128<ushort> src, byte index)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.ginx::vtakemask<T>(System.Runtime.Intrinsics.Vector128`1<T>,System.Byte)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.UInt16 Z0.BitPack::pack8<T>(System.Runtime.Intrinsics.Vector128`1<T>,System.Byte)
// ushort pack8<short>(Vector128<short> src, byte index)
// AggressiveInlining
ushort pack8<short>(Vector128<short> src, byte index)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.ginx::vtakemask<T>(System.Runtime.Intrinsics.Vector128`1<T>,System.Byte)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.UInt16 Z0.BitPack::pack8<T>(System.Runtime.Intrinsics.Vector128`1<T>,System.Byte)
// ushort pack8<uint>(Vector128<uint> src, byte index)
// AggressiveInlining
ushort pack8<uint>(Vector128<uint> src, byte index)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.ginx::vtakemask<T>(System.Runtime.Intrinsics.Vector128`1<T>,System.Byte)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.UInt16 Z0.BitPack::pack8<T>(System.Runtime.Intrinsics.Vector128`1<T>,System.Byte)
// ushort pack8<int>(Vector128<int> src, byte index)
// AggressiveInlining
ushort pack8<int>(Vector128<int> src, byte index)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.ginx::vtakemask<T>(System.Runtime.Intrinsics.Vector128`1<T>,System.Byte)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.UInt16 Z0.BitPack::pack8<T>(System.Runtime.Intrinsics.Vector128`1<T>,System.Byte)
// ushort pack8<ulong>(Vector128<ulong> src, byte index)
// AggressiveInlining
ushort pack8<ulong>(Vector128<ulong> src, byte index)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.ginx::vtakemask<T>(System.Runtime.Intrinsics.Vector128`1<T>,System.Byte)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.UInt16 Z0.BitPack::pack8<T>(System.Runtime.Intrinsics.Vector128`1<T>,System.Byte)
// ushort pack8<long>(Vector128<long> src, byte index)
// AggressiveInlining
ushort pack8<long>(Vector128<long> src, byte index)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call System.UInt16 Z0.ginx::vtakemask<T>(System.Runtime.Intrinsics.Vector128`1<T>,System.Byte)
    IL_0007: ret
}
------------------------------------------------------------------------------------------------------------------------
