// Id := 100666128, Name := System.Byte Z0.BitPack::pack8<T>(Z0.Block32`1<T>&,System.Int32)
// byte pack8<byte>(in Block32<byte> src, int block)
// AggressiveInlining
byte pack8<byte>(in Block32<byte> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block32`1<T>&,System.Int32)
    IL_0007: call System.UInt32& Z0.AsIn::uint32<T>(T&)
    IL_000C: ldind.u4
    IL_000D: ldc.i4 16843009
    IL_0012: call System.UInt32 Z0.Bits::gather(System.UInt32,System.UInt32)
    IL_0017: conv.u1
    IL_0018: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666128, Name := System.Byte Z0.BitPack::pack8<T>(Z0.Block32`1<T>&,System.Int32)
// byte pack8<sbyte>(in Block32<sbyte> src, int block)
// AggressiveInlining
byte pack8<sbyte>(in Block32<sbyte> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block32`1<T>&,System.Int32)
    IL_0007: call System.UInt32& Z0.AsIn::uint32<T>(T&)
    IL_000C: ldind.u4
    IL_000D: ldc.i4 16843009
    IL_0012: call System.UInt32 Z0.Bits::gather(System.UInt32,System.UInt32)
    IL_0017: conv.u1
    IL_0018: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666128, Name := System.Byte Z0.BitPack::pack8<T>(Z0.Block32`1<T>&,System.Int32)
// byte pack8<ushort>(in Block32<ushort> src, int block)
// AggressiveInlining
byte pack8<ushort>(in Block32<ushort> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block32`1<T>&,System.Int32)
    IL_0007: call System.UInt32& Z0.AsIn::uint32<T>(T&)
    IL_000C: ldind.u4
    IL_000D: ldc.i4 16843009
    IL_0012: call System.UInt32 Z0.Bits::gather(System.UInt32,System.UInt32)
    IL_0017: conv.u1
    IL_0018: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666128, Name := System.Byte Z0.BitPack::pack8<T>(Z0.Block32`1<T>&,System.Int32)
// byte pack8<short>(in Block32<short> src, int block)
// AggressiveInlining
byte pack8<short>(in Block32<short> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block32`1<T>&,System.Int32)
    IL_0007: call System.UInt32& Z0.AsIn::uint32<T>(T&)
    IL_000C: ldind.u4
    IL_000D: ldc.i4 16843009
    IL_0012: call System.UInt32 Z0.Bits::gather(System.UInt32,System.UInt32)
    IL_0017: conv.u1
    IL_0018: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666128, Name := System.Byte Z0.BitPack::pack8<T>(Z0.Block32`1<T>&,System.Int32)
// byte pack8<uint>(in Block32<uint> src, int block)
// AggressiveInlining
byte pack8<uint>(in Block32<uint> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block32`1<T>&,System.Int32)
    IL_0007: call System.UInt32& Z0.AsIn::uint32<T>(T&)
    IL_000C: ldind.u4
    IL_000D: ldc.i4 16843009
    IL_0012: call System.UInt32 Z0.Bits::gather(System.UInt32,System.UInt32)
    IL_0017: conv.u1
    IL_0018: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666128, Name := System.Byte Z0.BitPack::pack8<T>(Z0.Block32`1<T>&,System.Int32)
// byte pack8<int>(in Block32<int> src, int block)
// AggressiveInlining
byte pack8<int>(in Block32<int> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block32`1<T>&,System.Int32)
    IL_0007: call System.UInt32& Z0.AsIn::uint32<T>(T&)
    IL_000C: ldind.u4
    IL_000D: ldc.i4 16843009
    IL_0012: call System.UInt32 Z0.Bits::gather(System.UInt32,System.UInt32)
    IL_0017: conv.u1
    IL_0018: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666128, Name := System.Byte Z0.BitPack::pack8<T>(Z0.Block32`1<T>&,System.Int32)
// byte pack8<ulong>(in Block32<ulong> src, int block)
// AggressiveInlining
byte pack8<ulong>(in Block32<ulong> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block32`1<T>&,System.Int32)
    IL_0007: call System.UInt32& Z0.AsIn::uint32<T>(T&)
    IL_000C: ldind.u4
    IL_000D: ldc.i4 16843009
    IL_0012: call System.UInt32 Z0.Bits::gather(System.UInt32,System.UInt32)
    IL_0017: conv.u1
    IL_0018: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666128, Name := System.Byte Z0.BitPack::pack8<T>(Z0.Block32`1<T>&,System.Int32)
// byte pack8<long>(in Block32<long> src, int block)
// AggressiveInlining
byte pack8<long>(in Block32<long> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block32`1<T>&,System.Int32)
    IL_0007: call System.UInt32& Z0.AsIn::uint32<T>(T&)
    IL_000C: ldind.u4
    IL_000D: ldc.i4 16843009
    IL_0012: call System.UInt32 Z0.Bits::gather(System.UInt32,System.UInt32)
    IL_0017: conv.u1
    IL_0018: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666129, Name := System.Byte Z0.BitPack::pack8<T>(Z0.Block64`1<T>&,System.Int32)
// byte pack8<byte>(in Block64<byte> src, int block)
// AggressiveInlining
byte pack8<byte>(in Block64<byte> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block64`1<T>&,System.Int32)
    IL_0007: ldobj T
    IL_000C: call System.UInt64 zfunc::convert<T,System.UInt64>(T)
    IL_0011: call System.Byte Z0.BitPack::pack8(System.UInt64)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666129, Name := System.Byte Z0.BitPack::pack8<T>(Z0.Block64`1<T>&,System.Int32)
// byte pack8<sbyte>(in Block64<sbyte> src, int block)
// AggressiveInlining
byte pack8<sbyte>(in Block64<sbyte> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block64`1<T>&,System.Int32)
    IL_0007: ldobj T
    IL_000C: call System.UInt64 zfunc::convert<T,System.UInt64>(T)
    IL_0011: call System.Byte Z0.BitPack::pack8(System.UInt64)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666129, Name := System.Byte Z0.BitPack::pack8<T>(Z0.Block64`1<T>&,System.Int32)
// byte pack8<ushort>(in Block64<ushort> src, int block)
// AggressiveInlining
byte pack8<ushort>(in Block64<ushort> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block64`1<T>&,System.Int32)
    IL_0007: ldobj T
    IL_000C: call System.UInt64 zfunc::convert<T,System.UInt64>(T)
    IL_0011: call System.Byte Z0.BitPack::pack8(System.UInt64)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666129, Name := System.Byte Z0.BitPack::pack8<T>(Z0.Block64`1<T>&,System.Int32)
// byte pack8<short>(in Block64<short> src, int block)
// AggressiveInlining
byte pack8<short>(in Block64<short> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block64`1<T>&,System.Int32)
    IL_0007: ldobj T
    IL_000C: call System.UInt64 zfunc::convert<T,System.UInt64>(T)
    IL_0011: call System.Byte Z0.BitPack::pack8(System.UInt64)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666129, Name := System.Byte Z0.BitPack::pack8<T>(Z0.Block64`1<T>&,System.Int32)
// byte pack8<uint>(in Block64<uint> src, int block)
// AggressiveInlining
byte pack8<uint>(in Block64<uint> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block64`1<T>&,System.Int32)
    IL_0007: ldobj T
    IL_000C: call System.UInt64 zfunc::convert<T,System.UInt64>(T)
    IL_0011: call System.Byte Z0.BitPack::pack8(System.UInt64)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666129, Name := System.Byte Z0.BitPack::pack8<T>(Z0.Block64`1<T>&,System.Int32)
// byte pack8<int>(in Block64<int> src, int block)
// AggressiveInlining
byte pack8<int>(in Block64<int> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block64`1<T>&,System.Int32)
    IL_0007: ldobj T
    IL_000C: call System.UInt64 zfunc::convert<T,System.UInt64>(T)
    IL_0011: call System.Byte Z0.BitPack::pack8(System.UInt64)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666129, Name := System.Byte Z0.BitPack::pack8<T>(Z0.Block64`1<T>&,System.Int32)
// byte pack8<ulong>(in Block64<ulong> src, int block)
// AggressiveInlining
byte pack8<ulong>(in Block64<ulong> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block64`1<T>&,System.Int32)
    IL_0007: ldobj T
    IL_000C: call System.UInt64 zfunc::convert<T,System.UInt64>(T)
    IL_0011: call System.Byte Z0.BitPack::pack8(System.UInt64)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666129, Name := System.Byte Z0.BitPack::pack8<T>(Z0.Block64`1<T>&,System.Int32)
// byte pack8<long>(in Block64<long> src, int block)
// AggressiveInlining
byte pack8<long>(in Block64<long> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block64`1<T>&,System.Int32)
    IL_0007: ldobj T
    IL_000C: call System.UInt64 zfunc::convert<T,System.UInt64>(T)
    IL_0011: call System.Byte Z0.BitPack::pack8(System.UInt64)
    IL_0016: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666130, Name := System.UInt16 Z0.BitPack::pack8<T>(Z0.Block128`1<T>&,System.Int32)
// ushort pack8<byte>(in Block128<byte> src, int block)
// AggressiveInlining
ushort pack8<byte>(in Block128<byte> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block128`1<T>&,System.Int32)
    IL_0007: call System.UInt16 Z0.BitPack::maskpack16<T>(T&)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666130, Name := System.UInt16 Z0.BitPack::pack8<T>(Z0.Block128`1<T>&,System.Int32)
// ushort pack8<sbyte>(in Block128<sbyte> src, int block)
// AggressiveInlining
ushort pack8<sbyte>(in Block128<sbyte> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block128`1<T>&,System.Int32)
    IL_0007: call System.UInt16 Z0.BitPack::maskpack16<T>(T&)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666130, Name := System.UInt16 Z0.BitPack::pack8<T>(Z0.Block128`1<T>&,System.Int32)
// ushort pack8<ushort>(in Block128<ushort> src, int block)
// AggressiveInlining
ushort pack8<ushort>(in Block128<ushort> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block128`1<T>&,System.Int32)
    IL_0007: call System.UInt16 Z0.BitPack::maskpack16<T>(T&)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666130, Name := System.UInt16 Z0.BitPack::pack8<T>(Z0.Block128`1<T>&,System.Int32)
// ushort pack8<short>(in Block128<short> src, int block)
// AggressiveInlining
ushort pack8<short>(in Block128<short> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block128`1<T>&,System.Int32)
    IL_0007: call System.UInt16 Z0.BitPack::maskpack16<T>(T&)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666130, Name := System.UInt16 Z0.BitPack::pack8<T>(Z0.Block128`1<T>&,System.Int32)
// ushort pack8<uint>(in Block128<uint> src, int block)
// AggressiveInlining
ushort pack8<uint>(in Block128<uint> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block128`1<T>&,System.Int32)
    IL_0007: call System.UInt16 Z0.BitPack::maskpack16<T>(T&)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666130, Name := System.UInt16 Z0.BitPack::pack8<T>(Z0.Block128`1<T>&,System.Int32)
// ushort pack8<int>(in Block128<int> src, int block)
// AggressiveInlining
ushort pack8<int>(in Block128<int> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block128`1<T>&,System.Int32)
    IL_0007: call System.UInt16 Z0.BitPack::maskpack16<T>(T&)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666130, Name := System.UInt16 Z0.BitPack::pack8<T>(Z0.Block128`1<T>&,System.Int32)
// ushort pack8<ulong>(in Block128<ulong> src, int block)
// AggressiveInlining
ushort pack8<ulong>(in Block128<ulong> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block128`1<T>&,System.Int32)
    IL_0007: call System.UInt16 Z0.BitPack::maskpack16<T>(T&)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666130, Name := System.UInt16 Z0.BitPack::pack8<T>(Z0.Block128`1<T>&,System.Int32)
// ushort pack8<long>(in Block128<long> src, int block)
// AggressiveInlining
ushort pack8<long>(in Block128<long> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block128`1<T>&,System.Int32)
    IL_0007: call System.UInt16 Z0.BitPack::maskpack16<T>(T&)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666131, Name := System.UInt32 Z0.BitPack::pack8<T>(Z0.Block256`1<T>&,System.Int32)
// uint pack8<byte>(in Block256<byte> src, int block)
// AggressiveInlining
uint pack8<byte>(in Block256<byte> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block256`1<T>&,System.Int32)
    IL_0007: call System.UInt32 Z0.BitPack::maskpack32<T>(T&)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666131, Name := System.UInt32 Z0.BitPack::pack8<T>(Z0.Block256`1<T>&,System.Int32)
// uint pack8<sbyte>(in Block256<sbyte> src, int block)
// AggressiveInlining
uint pack8<sbyte>(in Block256<sbyte> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block256`1<T>&,System.Int32)
    IL_0007: call System.UInt32 Z0.BitPack::maskpack32<T>(T&)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666131, Name := System.UInt32 Z0.BitPack::pack8<T>(Z0.Block256`1<T>&,System.Int32)
// uint pack8<ushort>(in Block256<ushort> src, int block)
// AggressiveInlining
uint pack8<ushort>(in Block256<ushort> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block256`1<T>&,System.Int32)
    IL_0007: call System.UInt32 Z0.BitPack::maskpack32<T>(T&)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666131, Name := System.UInt32 Z0.BitPack::pack8<T>(Z0.Block256`1<T>&,System.Int32)
// uint pack8<short>(in Block256<short> src, int block)
// AggressiveInlining
uint pack8<short>(in Block256<short> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block256`1<T>&,System.Int32)
    IL_0007: call System.UInt32 Z0.BitPack::maskpack32<T>(T&)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666131, Name := System.UInt32 Z0.BitPack::pack8<T>(Z0.Block256`1<T>&,System.Int32)
// uint pack8<uint>(in Block256<uint> src, int block)
// AggressiveInlining
uint pack8<uint>(in Block256<uint> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block256`1<T>&,System.Int32)
    IL_0007: call System.UInt32 Z0.BitPack::maskpack32<T>(T&)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666131, Name := System.UInt32 Z0.BitPack::pack8<T>(Z0.Block256`1<T>&,System.Int32)
// uint pack8<int>(in Block256<int> src, int block)
// AggressiveInlining
uint pack8<int>(in Block256<int> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block256`1<T>&,System.Int32)
    IL_0007: call System.UInt32 Z0.BitPack::maskpack32<T>(T&)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666131, Name := System.UInt32 Z0.BitPack::pack8<T>(Z0.Block256`1<T>&,System.Int32)
// uint pack8<ulong>(in Block256<ulong> src, int block)
// AggressiveInlining
uint pack8<ulong>(in Block256<ulong> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block256`1<T>&,System.Int32)
    IL_0007: call System.UInt32 Z0.BitPack::maskpack32<T>(T&)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666131, Name := System.UInt32 Z0.BitPack::pack8<T>(Z0.Block256`1<T>&,System.Int32)
// uint pack8<long>(in Block256<long> src, int block)
// AggressiveInlining
uint pack8<long>(in Block256<long> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block256`1<T>&,System.Int32)
    IL_0007: call System.UInt32 Z0.BitPack::maskpack32<T>(T&)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666132, Name := System.UInt64 Z0.BitPack::pack8<T>(Z0.Block512`1<T>&,System.Int32)
// ulong pack8<byte>(in Block512<byte> src, int block)
// AggressiveInlining
ulong pack8<byte>(in Block512<byte> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block512`1<T>&,System.Int32)
    IL_0007: call System.UInt64 Z0.BitPack::maskpack64<T>(T&)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666132, Name := System.UInt64 Z0.BitPack::pack8<T>(Z0.Block512`1<T>&,System.Int32)
// ulong pack8<sbyte>(in Block512<sbyte> src, int block)
// AggressiveInlining
ulong pack8<sbyte>(in Block512<sbyte> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block512`1<T>&,System.Int32)
    IL_0007: call System.UInt64 Z0.BitPack::maskpack64<T>(T&)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666132, Name := System.UInt64 Z0.BitPack::pack8<T>(Z0.Block512`1<T>&,System.Int32)
// ulong pack8<ushort>(in Block512<ushort> src, int block)
// AggressiveInlining
ulong pack8<ushort>(in Block512<ushort> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block512`1<T>&,System.Int32)
    IL_0007: call System.UInt64 Z0.BitPack::maskpack64<T>(T&)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666132, Name := System.UInt64 Z0.BitPack::pack8<T>(Z0.Block512`1<T>&,System.Int32)
// ulong pack8<short>(in Block512<short> src, int block)
// AggressiveInlining
ulong pack8<short>(in Block512<short> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block512`1<T>&,System.Int32)
    IL_0007: call System.UInt64 Z0.BitPack::maskpack64<T>(T&)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666132, Name := System.UInt64 Z0.BitPack::pack8<T>(Z0.Block512`1<T>&,System.Int32)
// ulong pack8<uint>(in Block512<uint> src, int block)
// AggressiveInlining
ulong pack8<uint>(in Block512<uint> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block512`1<T>&,System.Int32)
    IL_0007: call System.UInt64 Z0.BitPack::maskpack64<T>(T&)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666132, Name := System.UInt64 Z0.BitPack::pack8<T>(Z0.Block512`1<T>&,System.Int32)
// ulong pack8<int>(in Block512<int> src, int block)
// AggressiveInlining
ulong pack8<int>(in Block512<int> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block512`1<T>&,System.Int32)
    IL_0007: call System.UInt64 Z0.BitPack::maskpack64<T>(T&)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666132, Name := System.UInt64 Z0.BitPack::pack8<T>(Z0.Block512`1<T>&,System.Int32)
// ulong pack8<ulong>(in Block512<ulong> src, int block)
// AggressiveInlining
ulong pack8<ulong>(in Block512<ulong> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block512`1<T>&,System.Int32)
    IL_0007: call System.UInt64 Z0.BitPack::maskpack64<T>(T&)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
// Id := 100666132, Name := System.UInt64 Z0.BitPack::pack8<T>(Z0.Block512`1<T>&,System.Int32)
// ulong pack8<long>(in Block512<long> src, int block)
// AggressiveInlining
ulong pack8<long>(in Block512<long> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block512`1<T>&,System.Int32)
    IL_0007: call System.UInt64 Z0.BitPack::maskpack64<T>(T&)
    IL_000C: ret
}
------------------------------------------------------------------------------------------------------------------------
