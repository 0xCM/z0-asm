// System.Runtime.Intrinsics.Vector128`1<T> Z0.ginx::vputcell<T>(T,System.Int32,System.Runtime.Intrinsics.Vector128`1<T>)
// Vector128<byte> vputcell<byte>(byte src, int index, Vector128<byte> dst)
// AggressiveInlining
Vector128<byte> vputcell<byte>(byte src, int index, Vector128<byte> dst)
{
    IL_0000: ldarg.2
    IL_0001: ldarg.1
    IL_0002: ldarg.0
    IL_0003: call System.Runtime.Intrinsics.Vector128`1<T> System.Runtime.Intrinsics.Vector128::WithElement<T>(System.Runtime.Intrinsics.Vector128`1<T>,System.Int32,T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector128`1<T> Z0.ginx::vputcell<T>(T,System.Int32,System.Runtime.Intrinsics.Vector128`1<T>)
// Vector128<sbyte> vputcell<sbyte>(sbyte src, int index, Vector128<sbyte> dst)
// AggressiveInlining
Vector128<sbyte> vputcell<sbyte>(sbyte src, int index, Vector128<sbyte> dst)
{
    IL_0000: ldarg.2
    IL_0001: ldarg.1
    IL_0002: ldarg.0
    IL_0003: call System.Runtime.Intrinsics.Vector128`1<T> System.Runtime.Intrinsics.Vector128::WithElement<T>(System.Runtime.Intrinsics.Vector128`1<T>,System.Int32,T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector128`1<T> Z0.ginx::vputcell<T>(T,System.Int32,System.Runtime.Intrinsics.Vector128`1<T>)
// Vector128<ushort> vputcell<ushort>(ushort src, int index, Vector128<ushort> dst)
// AggressiveInlining
Vector128<ushort> vputcell<ushort>(ushort src, int index, Vector128<ushort> dst)
{
    IL_0000: ldarg.2
    IL_0001: ldarg.1
    IL_0002: ldarg.0
    IL_0003: call System.Runtime.Intrinsics.Vector128`1<T> System.Runtime.Intrinsics.Vector128::WithElement<T>(System.Runtime.Intrinsics.Vector128`1<T>,System.Int32,T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector128`1<T> Z0.ginx::vputcell<T>(T,System.Int32,System.Runtime.Intrinsics.Vector128`1<T>)
// Vector128<short> vputcell<short>(short src, int index, Vector128<short> dst)
// AggressiveInlining
Vector128<short> vputcell<short>(short src, int index, Vector128<short> dst)
{
    IL_0000: ldarg.2
    IL_0001: ldarg.1
    IL_0002: ldarg.0
    IL_0003: call System.Runtime.Intrinsics.Vector128`1<T> System.Runtime.Intrinsics.Vector128::WithElement<T>(System.Runtime.Intrinsics.Vector128`1<T>,System.Int32,T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector128`1<T> Z0.ginx::vputcell<T>(T,System.Int32,System.Runtime.Intrinsics.Vector128`1<T>)
// Vector128<uint> vputcell<uint>(uint src, int index, Vector128<uint> dst)
// AggressiveInlining
Vector128<uint> vputcell<uint>(uint src, int index, Vector128<uint> dst)
{
    IL_0000: ldarg.2
    IL_0001: ldarg.1
    IL_0002: ldarg.0
    IL_0003: call System.Runtime.Intrinsics.Vector128`1<T> System.Runtime.Intrinsics.Vector128::WithElement<T>(System.Runtime.Intrinsics.Vector128`1<T>,System.Int32,T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector128`1<T> Z0.ginx::vputcell<T>(T,System.Int32,System.Runtime.Intrinsics.Vector128`1<T>)
// Vector128<int> vputcell<int>(int src, int index, Vector128<int> dst)
// AggressiveInlining
Vector128<int> vputcell<int>(int src, int index, Vector128<int> dst)
{
    IL_0000: ldarg.2
    IL_0001: ldarg.1
    IL_0002: ldarg.0
    IL_0003: call System.Runtime.Intrinsics.Vector128`1<T> System.Runtime.Intrinsics.Vector128::WithElement<T>(System.Runtime.Intrinsics.Vector128`1<T>,System.Int32,T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector128`1<T> Z0.ginx::vputcell<T>(T,System.Int32,System.Runtime.Intrinsics.Vector128`1<T>)
// Vector128<ulong> vputcell<ulong>(ulong src, int index, Vector128<ulong> dst)
// AggressiveInlining
Vector128<ulong> vputcell<ulong>(ulong src, int index, Vector128<ulong> dst)
{
    IL_0000: ldarg.2
    IL_0001: ldarg.1
    IL_0002: ldarg.0
    IL_0003: call System.Runtime.Intrinsics.Vector128`1<T> System.Runtime.Intrinsics.Vector128::WithElement<T>(System.Runtime.Intrinsics.Vector128`1<T>,System.Int32,T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector128`1<T> Z0.ginx::vputcell<T>(T,System.Int32,System.Runtime.Intrinsics.Vector128`1<T>)
// Vector128<long> vputcell<long>(long src, int index, Vector128<long> dst)
// AggressiveInlining
Vector128<long> vputcell<long>(long src, int index, Vector128<long> dst)
{
    IL_0000: ldarg.2
    IL_0001: ldarg.1
    IL_0002: ldarg.0
    IL_0003: call System.Runtime.Intrinsics.Vector128`1<T> System.Runtime.Intrinsics.Vector128::WithElement<T>(System.Runtime.Intrinsics.Vector128`1<T>,System.Int32,T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector128`1<T> Z0.ginx::vputcell<T>(T,System.Int32,System.Runtime.Intrinsics.Vector128`1<T>)
// Vector128<float> vputcell<float>(float src, int index, Vector128<float> dst)
// AggressiveInlining
Vector128<float> vputcell<float>(float src, int index, Vector128<float> dst)
{
    IL_0000: ldarg.2
    IL_0001: ldarg.1
    IL_0002: ldarg.0
    IL_0003: call System.Runtime.Intrinsics.Vector128`1<T> System.Runtime.Intrinsics.Vector128::WithElement<T>(System.Runtime.Intrinsics.Vector128`1<T>,System.Int32,T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector128`1<T> Z0.ginx::vputcell<T>(T,System.Int32,System.Runtime.Intrinsics.Vector128`1<T>)
// Vector128<double> vputcell<double>(double src, int index, Vector128<double> dst)
// AggressiveInlining
Vector128<double> vputcell<double>(double src, int index, Vector128<double> dst)
{
    IL_0000: ldarg.2
    IL_0001: ldarg.1
    IL_0002: ldarg.0
    IL_0003: call System.Runtime.Intrinsics.Vector128`1<T> System.Runtime.Intrinsics.Vector128::WithElement<T>(System.Runtime.Intrinsics.Vector128`1<T>,System.Int32,T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector256`1<T> Z0.ginx::vputcell<T>(T,System.Int32,System.Runtime.Intrinsics.Vector256`1<T>)
// Vector256<byte> vputcell<byte>(byte src, int index, Vector256<byte> dst)
// AggressiveInlining
Vector256<byte> vputcell<byte>(byte src, int index, Vector256<byte> dst)
{
    IL_0000: ldarg.2
    IL_0001: ldarg.1
    IL_0002: ldarg.0
    IL_0003: call System.Runtime.Intrinsics.Vector256`1<T> System.Runtime.Intrinsics.Vector256::WithElement<T>(System.Runtime.Intrinsics.Vector256`1<T>,System.Int32,T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector256`1<T> Z0.ginx::vputcell<T>(T,System.Int32,System.Runtime.Intrinsics.Vector256`1<T>)
// Vector256<sbyte> vputcell<sbyte>(sbyte src, int index, Vector256<sbyte> dst)
// AggressiveInlining
Vector256<sbyte> vputcell<sbyte>(sbyte src, int index, Vector256<sbyte> dst)
{
    IL_0000: ldarg.2
    IL_0001: ldarg.1
    IL_0002: ldarg.0
    IL_0003: call System.Runtime.Intrinsics.Vector256`1<T> System.Runtime.Intrinsics.Vector256::WithElement<T>(System.Runtime.Intrinsics.Vector256`1<T>,System.Int32,T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector256`1<T> Z0.ginx::vputcell<T>(T,System.Int32,System.Runtime.Intrinsics.Vector256`1<T>)
// Vector256<ushort> vputcell<ushort>(ushort src, int index, Vector256<ushort> dst)
// AggressiveInlining
Vector256<ushort> vputcell<ushort>(ushort src, int index, Vector256<ushort> dst)
{
    IL_0000: ldarg.2
    IL_0001: ldarg.1
    IL_0002: ldarg.0
    IL_0003: call System.Runtime.Intrinsics.Vector256`1<T> System.Runtime.Intrinsics.Vector256::WithElement<T>(System.Runtime.Intrinsics.Vector256`1<T>,System.Int32,T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector256`1<T> Z0.ginx::vputcell<T>(T,System.Int32,System.Runtime.Intrinsics.Vector256`1<T>)
// Vector256<short> vputcell<short>(short src, int index, Vector256<short> dst)
// AggressiveInlining
Vector256<short> vputcell<short>(short src, int index, Vector256<short> dst)
{
    IL_0000: ldarg.2
    IL_0001: ldarg.1
    IL_0002: ldarg.0
    IL_0003: call System.Runtime.Intrinsics.Vector256`1<T> System.Runtime.Intrinsics.Vector256::WithElement<T>(System.Runtime.Intrinsics.Vector256`1<T>,System.Int32,T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector256`1<T> Z0.ginx::vputcell<T>(T,System.Int32,System.Runtime.Intrinsics.Vector256`1<T>)
// Vector256<uint> vputcell<uint>(uint src, int index, Vector256<uint> dst)
// AggressiveInlining
Vector256<uint> vputcell<uint>(uint src, int index, Vector256<uint> dst)
{
    IL_0000: ldarg.2
    IL_0001: ldarg.1
    IL_0002: ldarg.0
    IL_0003: call System.Runtime.Intrinsics.Vector256`1<T> System.Runtime.Intrinsics.Vector256::WithElement<T>(System.Runtime.Intrinsics.Vector256`1<T>,System.Int32,T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector256`1<T> Z0.ginx::vputcell<T>(T,System.Int32,System.Runtime.Intrinsics.Vector256`1<T>)
// Vector256<int> vputcell<int>(int src, int index, Vector256<int> dst)
// AggressiveInlining
Vector256<int> vputcell<int>(int src, int index, Vector256<int> dst)
{
    IL_0000: ldarg.2
    IL_0001: ldarg.1
    IL_0002: ldarg.0
    IL_0003: call System.Runtime.Intrinsics.Vector256`1<T> System.Runtime.Intrinsics.Vector256::WithElement<T>(System.Runtime.Intrinsics.Vector256`1<T>,System.Int32,T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector256`1<T> Z0.ginx::vputcell<T>(T,System.Int32,System.Runtime.Intrinsics.Vector256`1<T>)
// Vector256<ulong> vputcell<ulong>(ulong src, int index, Vector256<ulong> dst)
// AggressiveInlining
Vector256<ulong> vputcell<ulong>(ulong src, int index, Vector256<ulong> dst)
{
    IL_0000: ldarg.2
    IL_0001: ldarg.1
    IL_0002: ldarg.0
    IL_0003: call System.Runtime.Intrinsics.Vector256`1<T> System.Runtime.Intrinsics.Vector256::WithElement<T>(System.Runtime.Intrinsics.Vector256`1<T>,System.Int32,T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector256`1<T> Z0.ginx::vputcell<T>(T,System.Int32,System.Runtime.Intrinsics.Vector256`1<T>)
// Vector256<long> vputcell<long>(long src, int index, Vector256<long> dst)
// AggressiveInlining
Vector256<long> vputcell<long>(long src, int index, Vector256<long> dst)
{
    IL_0000: ldarg.2
    IL_0001: ldarg.1
    IL_0002: ldarg.0
    IL_0003: call System.Runtime.Intrinsics.Vector256`1<T> System.Runtime.Intrinsics.Vector256::WithElement<T>(System.Runtime.Intrinsics.Vector256`1<T>,System.Int32,T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector256`1<T> Z0.ginx::vputcell<T>(T,System.Int32,System.Runtime.Intrinsics.Vector256`1<T>)
// Vector256<float> vputcell<float>(float src, int index, Vector256<float> dst)
// AggressiveInlining
Vector256<float> vputcell<float>(float src, int index, Vector256<float> dst)
{
    IL_0000: ldarg.2
    IL_0001: ldarg.1
    IL_0002: ldarg.0
    IL_0003: call System.Runtime.Intrinsics.Vector256`1<T> System.Runtime.Intrinsics.Vector256::WithElement<T>(System.Runtime.Intrinsics.Vector256`1<T>,System.Int32,T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector256`1<T> Z0.ginx::vputcell<T>(T,System.Int32,System.Runtime.Intrinsics.Vector256`1<T>)
// Vector256<double> vputcell<double>(double src, int index, Vector256<double> dst)
// AggressiveInlining
Vector256<double> vputcell<double>(double src, int index, Vector256<double> dst)
{
    IL_0000: ldarg.2
    IL_0001: ldarg.1
    IL_0002: ldarg.0
    IL_0003: call System.Runtime.Intrinsics.Vector256`1<T> System.Runtime.Intrinsics.Vector256::WithElement<T>(System.Runtime.Intrinsics.Vector256`1<T>,System.Int32,T)
    IL_0008: ret
}
------------------------------------------------------------------------------------------------------------------------
