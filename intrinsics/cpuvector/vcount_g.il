// System.Int32 Z0.CpuVector::vcount<T>(System.Runtime.Intrinsics.Vector256`1<T>)
// int vcount<byte>(Vector256<byte> src)
// AggressiveInlining
int vcount<byte>(Vector256<byte> src)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector256`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(System.Runtime.Intrinsics.Vector256`1<T>)
// int vcount<sbyte>(Vector256<sbyte> src)
// AggressiveInlining
int vcount<sbyte>(Vector256<sbyte> src)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector256`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(System.Runtime.Intrinsics.Vector256`1<T>)
// int vcount<ushort>(Vector256<ushort> src)
// AggressiveInlining
int vcount<ushort>(Vector256<ushort> src)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector256`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(System.Runtime.Intrinsics.Vector256`1<T>)
// int vcount<short>(Vector256<short> src)
// AggressiveInlining
int vcount<short>(Vector256<short> src)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector256`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(System.Runtime.Intrinsics.Vector256`1<T>)
// int vcount<uint>(Vector256<uint> src)
// AggressiveInlining
int vcount<uint>(Vector256<uint> src)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector256`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(System.Runtime.Intrinsics.Vector256`1<T>)
// int vcount<int>(Vector256<int> src)
// AggressiveInlining
int vcount<int>(Vector256<int> src)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector256`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(System.Runtime.Intrinsics.Vector256`1<T>)
// int vcount<ulong>(Vector256<ulong> src)
// AggressiveInlining
int vcount<ulong>(Vector256<ulong> src)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector256`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(System.Runtime.Intrinsics.Vector256`1<T>)
// int vcount<long>(Vector256<long> src)
// AggressiveInlining
int vcount<long>(Vector256<long> src)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector256`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(System.Runtime.Intrinsics.Vector256`1<T>)
// int vcount<float>(Vector256<float> src)
// AggressiveInlining
int vcount<float>(Vector256<float> src)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector256`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(System.Runtime.Intrinsics.Vector256`1<T>)
// int vcount<double>(Vector256<double> src)
// AggressiveInlining
int vcount<double>(Vector256<double> src)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector256`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.Vector512`1<T>)
// int vcount<byte>(Vector512<byte> src)
// AggressiveInlining
int vcount<byte>(Vector512<byte> src)
{
    IL_0000: call System.Int32 Z0.Vector512`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.Vector512`1<T>)
// int vcount<sbyte>(Vector512<sbyte> src)
// AggressiveInlining
int vcount<sbyte>(Vector512<sbyte> src)
{
    IL_0000: call System.Int32 Z0.Vector512`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.Vector512`1<T>)
// int vcount<ushort>(Vector512<ushort> src)
// AggressiveInlining
int vcount<ushort>(Vector512<ushort> src)
{
    IL_0000: call System.Int32 Z0.Vector512`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.Vector512`1<T>)
// int vcount<short>(Vector512<short> src)
// AggressiveInlining
int vcount<short>(Vector512<short> src)
{
    IL_0000: call System.Int32 Z0.Vector512`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.Vector512`1<T>)
// int vcount<uint>(Vector512<uint> src)
// AggressiveInlining
int vcount<uint>(Vector512<uint> src)
{
    IL_0000: call System.Int32 Z0.Vector512`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.Vector512`1<T>)
// int vcount<int>(Vector512<int> src)
// AggressiveInlining
int vcount<int>(Vector512<int> src)
{
    IL_0000: call System.Int32 Z0.Vector512`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.Vector512`1<T>)
// int vcount<ulong>(Vector512<ulong> src)
// AggressiveInlining
int vcount<ulong>(Vector512<ulong> src)
{
    IL_0000: call System.Int32 Z0.Vector512`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.Vector512`1<T>)
// int vcount<long>(Vector512<long> src)
// AggressiveInlining
int vcount<long>(Vector512<long> src)
{
    IL_0000: call System.Int32 Z0.Vector512`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.Vector512`1<T>)
// int vcount<float>(Vector512<float> src)
// AggressiveInlining
int vcount<float>(Vector512<float> src)
{
    IL_0000: call System.Int32 Z0.Vector512`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.Vector512`1<T>)
// int vcount<double>(Vector512<double> src)
// AggressiveInlining
int vcount<double>(Vector512<double> src)
{
    IL_0000: call System.Int32 Z0.Vector512`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N128,T)
// int vcount<byte>(N128 w, byte t)
// AggressiveInlining
int vcount<byte>(N128 w, byte t)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector128`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N128,T)
// int vcount<sbyte>(N128 w, sbyte t)
// AggressiveInlining
int vcount<sbyte>(N128 w, sbyte t)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector128`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N128,T)
// int vcount<ushort>(N128 w, ushort t)
// AggressiveInlining
int vcount<ushort>(N128 w, ushort t)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector128`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N128,T)
// int vcount<short>(N128 w, short t)
// AggressiveInlining
int vcount<short>(N128 w, short t)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector128`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N128,T)
// int vcount<uint>(N128 w, uint t)
// AggressiveInlining
int vcount<uint>(N128 w, uint t)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector128`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N128,T)
// int vcount<int>(N128 w, int t)
// AggressiveInlining
int vcount<int>(N128 w, int t)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector128`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N128,T)
// int vcount<ulong>(N128 w, ulong t)
// AggressiveInlining
int vcount<ulong>(N128 w, ulong t)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector128`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N128,T)
// int vcount<long>(N128 w, long t)
// AggressiveInlining
int vcount<long>(N128 w, long t)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector128`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N128,T)
// int vcount<float>(N128 w, float t)
// AggressiveInlining
int vcount<float>(N128 w, float t)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector128`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N128,T)
// int vcount<double>(N128 w, double t)
// AggressiveInlining
int vcount<double>(N128 w, double t)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector128`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N256,T)
// int vcount<byte>(N256 w, byte t)
// AggressiveInlining
int vcount<byte>(N256 w, byte t)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector256`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N256,T)
// int vcount<sbyte>(N256 w, sbyte t)
// AggressiveInlining
int vcount<sbyte>(N256 w, sbyte t)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector256`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N256,T)
// int vcount<ushort>(N256 w, ushort t)
// AggressiveInlining
int vcount<ushort>(N256 w, ushort t)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector256`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N256,T)
// int vcount<short>(N256 w, short t)
// AggressiveInlining
int vcount<short>(N256 w, short t)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector256`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N256,T)
// int vcount<uint>(N256 w, uint t)
// AggressiveInlining
int vcount<uint>(N256 w, uint t)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector256`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N256,T)
// int vcount<int>(N256 w, int t)
// AggressiveInlining
int vcount<int>(N256 w, int t)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector256`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N256,T)
// int vcount<ulong>(N256 w, ulong t)
// AggressiveInlining
int vcount<ulong>(N256 w, ulong t)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector256`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N256,T)
// int vcount<long>(N256 w, long t)
// AggressiveInlining
int vcount<long>(N256 w, long t)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector256`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N256,T)
// int vcount<float>(N256 w, float t)
// AggressiveInlining
int vcount<float>(N256 w, float t)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector256`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N256,T)
// int vcount<double>(N256 w, double t)
// AggressiveInlining
int vcount<double>(N256 w, double t)
{
    IL_0000: call System.Int32 System.Runtime.Intrinsics.Vector256`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N512,T)
// int vcount<byte>(N512 w, byte t)
// AggressiveInlining
int vcount<byte>(N512 w, byte t)
{
    IL_0000: call System.Int32 Z0.Vector512`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N512,T)
// int vcount<sbyte>(N512 w, sbyte t)
// AggressiveInlining
int vcount<sbyte>(N512 w, sbyte t)
{
    IL_0000: call System.Int32 Z0.Vector512`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N512,T)
// int vcount<ushort>(N512 w, ushort t)
// AggressiveInlining
int vcount<ushort>(N512 w, ushort t)
{
    IL_0000: call System.Int32 Z0.Vector512`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N512,T)
// int vcount<short>(N512 w, short t)
// AggressiveInlining
int vcount<short>(N512 w, short t)
{
    IL_0000: call System.Int32 Z0.Vector512`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N512,T)
// int vcount<uint>(N512 w, uint t)
// AggressiveInlining
int vcount<uint>(N512 w, uint t)
{
    IL_0000: call System.Int32 Z0.Vector512`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N512,T)
// int vcount<int>(N512 w, int t)
// AggressiveInlining
int vcount<int>(N512 w, int t)
{
    IL_0000: call System.Int32 Z0.Vector512`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N512,T)
// int vcount<ulong>(N512 w, ulong t)
// AggressiveInlining
int vcount<ulong>(N512 w, ulong t)
{
    IL_0000: call System.Int32 Z0.Vector512`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N512,T)
// int vcount<long>(N512 w, long t)
// AggressiveInlining
int vcount<long>(N512 w, long t)
{
    IL_0000: call System.Int32 Z0.Vector512`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N512,T)
// int vcount<float>(N512 w, float t)
// AggressiveInlining
int vcount<float>(N512 w, float t)
{
    IL_0000: call System.Int32 Z0.Vector512`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Int32 Z0.CpuVector::vcount<T>(Z0.N512,T)
// int vcount<double>(N512 w, double t)
// AggressiveInlining
int vcount<double>(N512 w, double t)
{
    IL_0000: call System.Int32 Z0.Vector512`1<T>::get_Count()
    IL_0005: ret
}
------------------------------------------------------------------------------------------------------------------------
