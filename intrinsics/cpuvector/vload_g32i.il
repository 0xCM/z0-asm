// System.Runtime.Intrinsics.Vector128`1<T> Z0.CpuVector::vload<T>(Z0.Block128`1<T>&,System.Int32)
// Vector128<byte> vload<byte>(in Block128<byte> src, int block)
// AggressiveInlining
Vector128<byte> vload<byte>(in Block128<byte> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block128`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call System.Runtime.Intrinsics.Vector128`1<T>& Z0.CpuVector::vload<T>(T&,System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_000E: ldobj System.Runtime.Intrinsics.Vector128`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector128`1<T> Z0.CpuVector::vload<T>(Z0.Block128`1<T>&,System.Int32)
// Vector128<sbyte> vload<sbyte>(in Block128<sbyte> src, int block)
// AggressiveInlining
Vector128<sbyte> vload<sbyte>(in Block128<sbyte> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block128`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call System.Runtime.Intrinsics.Vector128`1<T>& Z0.CpuVector::vload<T>(T&,System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_000E: ldobj System.Runtime.Intrinsics.Vector128`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector128`1<T> Z0.CpuVector::vload<T>(Z0.Block128`1<T>&,System.Int32)
// Vector128<ushort> vload<ushort>(in Block128<ushort> src, int block)
// AggressiveInlining
Vector128<ushort> vload<ushort>(in Block128<ushort> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block128`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call System.Runtime.Intrinsics.Vector128`1<T>& Z0.CpuVector::vload<T>(T&,System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_000E: ldobj System.Runtime.Intrinsics.Vector128`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector128`1<T> Z0.CpuVector::vload<T>(Z0.Block128`1<T>&,System.Int32)
// Vector128<short> vload<short>(in Block128<short> src, int block)
// AggressiveInlining
Vector128<short> vload<short>(in Block128<short> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block128`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call System.Runtime.Intrinsics.Vector128`1<T>& Z0.CpuVector::vload<T>(T&,System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_000E: ldobj System.Runtime.Intrinsics.Vector128`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector128`1<T> Z0.CpuVector::vload<T>(Z0.Block128`1<T>&,System.Int32)
// Vector128<uint> vload<uint>(in Block128<uint> src, int block)
// AggressiveInlining
Vector128<uint> vload<uint>(in Block128<uint> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block128`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call System.Runtime.Intrinsics.Vector128`1<T>& Z0.CpuVector::vload<T>(T&,System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_000E: ldobj System.Runtime.Intrinsics.Vector128`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector128`1<T> Z0.CpuVector::vload<T>(Z0.Block128`1<T>&,System.Int32)
// Vector128<int> vload<int>(in Block128<int> src, int block)
// AggressiveInlining
Vector128<int> vload<int>(in Block128<int> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block128`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call System.Runtime.Intrinsics.Vector128`1<T>& Z0.CpuVector::vload<T>(T&,System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_000E: ldobj System.Runtime.Intrinsics.Vector128`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector128`1<T> Z0.CpuVector::vload<T>(Z0.Block128`1<T>&,System.Int32)
// Vector128<ulong> vload<ulong>(in Block128<ulong> src, int block)
// AggressiveInlining
Vector128<ulong> vload<ulong>(in Block128<ulong> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block128`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call System.Runtime.Intrinsics.Vector128`1<T>& Z0.CpuVector::vload<T>(T&,System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_000E: ldobj System.Runtime.Intrinsics.Vector128`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector128`1<T> Z0.CpuVector::vload<T>(Z0.Block128`1<T>&,System.Int32)
// Vector128<long> vload<long>(in Block128<long> src, int block)
// AggressiveInlining
Vector128<long> vload<long>(in Block128<long> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block128`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call System.Runtime.Intrinsics.Vector128`1<T>& Z0.CpuVector::vload<T>(T&,System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_000E: ldobj System.Runtime.Intrinsics.Vector128`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector128`1<T> Z0.CpuVector::vload<T>(Z0.Block128`1<T>&,System.Int32)
// Vector128<float> vload<float>(in Block128<float> src, int block)
// AggressiveInlining
Vector128<float> vload<float>(in Block128<float> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block128`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call System.Runtime.Intrinsics.Vector128`1<T>& Z0.CpuVector::vload<T>(T&,System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_000E: ldobj System.Runtime.Intrinsics.Vector128`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector128`1<T> Z0.CpuVector::vload<T>(Z0.Block128`1<T>&,System.Int32)
// Vector128<double> vload<double>(in Block128<double> src, int block)
// AggressiveInlining
Vector128<double> vload<double>(in Block128<double> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block128`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call System.Runtime.Intrinsics.Vector128`1<T>& Z0.CpuVector::vload<T>(T&,System.Runtime.Intrinsics.Vector128`1<T>&)
    IL_000E: ldobj System.Runtime.Intrinsics.Vector128`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector256`1<T> Z0.CpuVector::vload<T>(Z0.Block256`1<T>&,System.Int32)
// Vector256<byte> vload<byte>(in Block256<byte> src, int block)
// AggressiveInlining
Vector256<byte> vload<byte>(in Block256<byte> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block256`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call System.Runtime.Intrinsics.Vector256`1<T>& Z0.CpuVector::vload<T>(T&,System.Runtime.Intrinsics.Vector256`1<T>&)
    IL_000E: ldobj System.Runtime.Intrinsics.Vector256`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector256`1<T> Z0.CpuVector::vload<T>(Z0.Block256`1<T>&,System.Int32)
// Vector256<sbyte> vload<sbyte>(in Block256<sbyte> src, int block)
// AggressiveInlining
Vector256<sbyte> vload<sbyte>(in Block256<sbyte> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block256`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call System.Runtime.Intrinsics.Vector256`1<T>& Z0.CpuVector::vload<T>(T&,System.Runtime.Intrinsics.Vector256`1<T>&)
    IL_000E: ldobj System.Runtime.Intrinsics.Vector256`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector256`1<T> Z0.CpuVector::vload<T>(Z0.Block256`1<T>&,System.Int32)
// Vector256<ushort> vload<ushort>(in Block256<ushort> src, int block)
// AggressiveInlining
Vector256<ushort> vload<ushort>(in Block256<ushort> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block256`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call System.Runtime.Intrinsics.Vector256`1<T>& Z0.CpuVector::vload<T>(T&,System.Runtime.Intrinsics.Vector256`1<T>&)
    IL_000E: ldobj System.Runtime.Intrinsics.Vector256`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector256`1<T> Z0.CpuVector::vload<T>(Z0.Block256`1<T>&,System.Int32)
// Vector256<short> vload<short>(in Block256<short> src, int block)
// AggressiveInlining
Vector256<short> vload<short>(in Block256<short> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block256`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call System.Runtime.Intrinsics.Vector256`1<T>& Z0.CpuVector::vload<T>(T&,System.Runtime.Intrinsics.Vector256`1<T>&)
    IL_000E: ldobj System.Runtime.Intrinsics.Vector256`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector256`1<T> Z0.CpuVector::vload<T>(Z0.Block256`1<T>&,System.Int32)
// Vector256<uint> vload<uint>(in Block256<uint> src, int block)
// AggressiveInlining
Vector256<uint> vload<uint>(in Block256<uint> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block256`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call System.Runtime.Intrinsics.Vector256`1<T>& Z0.CpuVector::vload<T>(T&,System.Runtime.Intrinsics.Vector256`1<T>&)
    IL_000E: ldobj System.Runtime.Intrinsics.Vector256`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector256`1<T> Z0.CpuVector::vload<T>(Z0.Block256`1<T>&,System.Int32)
// Vector256<int> vload<int>(in Block256<int> src, int block)
// AggressiveInlining
Vector256<int> vload<int>(in Block256<int> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block256`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call System.Runtime.Intrinsics.Vector256`1<T>& Z0.CpuVector::vload<T>(T&,System.Runtime.Intrinsics.Vector256`1<T>&)
    IL_000E: ldobj System.Runtime.Intrinsics.Vector256`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector256`1<T> Z0.CpuVector::vload<T>(Z0.Block256`1<T>&,System.Int32)
// Vector256<ulong> vload<ulong>(in Block256<ulong> src, int block)
// AggressiveInlining
Vector256<ulong> vload<ulong>(in Block256<ulong> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block256`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call System.Runtime.Intrinsics.Vector256`1<T>& Z0.CpuVector::vload<T>(T&,System.Runtime.Intrinsics.Vector256`1<T>&)
    IL_000E: ldobj System.Runtime.Intrinsics.Vector256`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector256`1<T> Z0.CpuVector::vload<T>(Z0.Block256`1<T>&,System.Int32)
// Vector256<long> vload<long>(in Block256<long> src, int block)
// AggressiveInlining
Vector256<long> vload<long>(in Block256<long> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block256`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call System.Runtime.Intrinsics.Vector256`1<T>& Z0.CpuVector::vload<T>(T&,System.Runtime.Intrinsics.Vector256`1<T>&)
    IL_000E: ldobj System.Runtime.Intrinsics.Vector256`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector256`1<T> Z0.CpuVector::vload<T>(Z0.Block256`1<T>&,System.Int32)
// Vector256<float> vload<float>(in Block256<float> src, int block)
// AggressiveInlining
Vector256<float> vload<float>(in Block256<float> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block256`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call System.Runtime.Intrinsics.Vector256`1<T>& Z0.CpuVector::vload<T>(T&,System.Runtime.Intrinsics.Vector256`1<T>&)
    IL_000E: ldobj System.Runtime.Intrinsics.Vector256`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// System.Runtime.Intrinsics.Vector256`1<T> Z0.CpuVector::vload<T>(Z0.Block256`1<T>&,System.Int32)
// Vector256<double> vload<double>(in Block256<double> src, int block)
// AggressiveInlining
Vector256<double> vload<double>(in Block256<double> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block256`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call System.Runtime.Intrinsics.Vector256`1<T>& Z0.CpuVector::vload<T>(T&,System.Runtime.Intrinsics.Vector256`1<T>&)
    IL_000E: ldobj System.Runtime.Intrinsics.Vector256`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Vector512`1<T> Z0.CpuVector::vload<T>(Z0.Block512`1<T>&,System.Int32)
// Vector512<byte> vload<byte>(in Block512<byte> src, int block)
// AggressiveInlining
Vector512<byte> vload<byte>(in Block512<byte> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block512`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call Z0.Vector512`1<T>& Z0.CpuVector::vload<T>(T&,Z0.Vector512`1<T>&)
    IL_000E: ldobj Z0.Vector512`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Vector512`1<T> Z0.CpuVector::vload<T>(Z0.Block512`1<T>&,System.Int32)
// Vector512<sbyte> vload<sbyte>(in Block512<sbyte> src, int block)
// AggressiveInlining
Vector512<sbyte> vload<sbyte>(in Block512<sbyte> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block512`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call Z0.Vector512`1<T>& Z0.CpuVector::vload<T>(T&,Z0.Vector512`1<T>&)
    IL_000E: ldobj Z0.Vector512`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Vector512`1<T> Z0.CpuVector::vload<T>(Z0.Block512`1<T>&,System.Int32)
// Vector512<ushort> vload<ushort>(in Block512<ushort> src, int block)
// AggressiveInlining
Vector512<ushort> vload<ushort>(in Block512<ushort> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block512`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call Z0.Vector512`1<T>& Z0.CpuVector::vload<T>(T&,Z0.Vector512`1<T>&)
    IL_000E: ldobj Z0.Vector512`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Vector512`1<T> Z0.CpuVector::vload<T>(Z0.Block512`1<T>&,System.Int32)
// Vector512<short> vload<short>(in Block512<short> src, int block)
// AggressiveInlining
Vector512<short> vload<short>(in Block512<short> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block512`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call Z0.Vector512`1<T>& Z0.CpuVector::vload<T>(T&,Z0.Vector512`1<T>&)
    IL_000E: ldobj Z0.Vector512`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Vector512`1<T> Z0.CpuVector::vload<T>(Z0.Block512`1<T>&,System.Int32)
// Vector512<uint> vload<uint>(in Block512<uint> src, int block)
// AggressiveInlining
Vector512<uint> vload<uint>(in Block512<uint> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block512`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call Z0.Vector512`1<T>& Z0.CpuVector::vload<T>(T&,Z0.Vector512`1<T>&)
    IL_000E: ldobj Z0.Vector512`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Vector512`1<T> Z0.CpuVector::vload<T>(Z0.Block512`1<T>&,System.Int32)
// Vector512<int> vload<int>(in Block512<int> src, int block)
// AggressiveInlining
Vector512<int> vload<int>(in Block512<int> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block512`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call Z0.Vector512`1<T>& Z0.CpuVector::vload<T>(T&,Z0.Vector512`1<T>&)
    IL_000E: ldobj Z0.Vector512`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Vector512`1<T> Z0.CpuVector::vload<T>(Z0.Block512`1<T>&,System.Int32)
// Vector512<ulong> vload<ulong>(in Block512<ulong> src, int block)
// AggressiveInlining
Vector512<ulong> vload<ulong>(in Block512<ulong> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block512`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call Z0.Vector512`1<T>& Z0.CpuVector::vload<T>(T&,Z0.Vector512`1<T>&)
    IL_000E: ldobj Z0.Vector512`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Vector512`1<T> Z0.CpuVector::vload<T>(Z0.Block512`1<T>&,System.Int32)
// Vector512<long> vload<long>(in Block512<long> src, int block)
// AggressiveInlining
Vector512<long> vload<long>(in Block512<long> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block512`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call Z0.Vector512`1<T>& Z0.CpuVector::vload<T>(T&,Z0.Vector512`1<T>&)
    IL_000E: ldobj Z0.Vector512`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Vector512`1<T> Z0.CpuVector::vload<T>(Z0.Block512`1<T>&,System.Int32)
// Vector512<float> vload<float>(in Block512<float> src, int block)
// AggressiveInlining
Vector512<float> vload<float>(in Block512<float> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block512`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call Z0.Vector512`1<T>& Z0.CpuVector::vload<T>(T&,Z0.Vector512`1<T>&)
    IL_000E: ldobj Z0.Vector512`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.Vector512`1<T> Z0.CpuVector::vload<T>(Z0.Block512`1<T>&,System.Int32)
// Vector512<double> vload<double>(in Block512<double> src, int block)
// AggressiveInlining
Vector512<double> vload<double>(in Block512<double> src, int block)
{
    IL_0000: ldarg.0
    IL_0001: ldarg.1
    IL_0002: call T& Z0.BlockExtend::BlockRef<T>(Z0.Block512`1<T>&,System.Int32)
    IL_0007: ldloca.s V_0
    IL_0009: call Z0.Vector512`1<T>& Z0.CpuVector::vload<T>(T&,Z0.Vector512`1<T>&)
    IL_000E: ldobj Z0.Vector512`1<T>
    IL_0013: ret
}
------------------------------------------------------------------------------------------------------------------------
