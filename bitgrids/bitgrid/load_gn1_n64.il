// Z0.BitGrid64`3<Z0.N1,Z0.N64,T> Z0.BitGrid::load<T>(Z0.Block64`1<T>&,Z0.N1,Z0.N64)
// BitGrid64<N1,N64,byte> load<byte>(in Block64<byte> src, N1 m, N64 n)
// AggressiveInlining
BitGrid64<N1,N64,byte> load<byte>(in Block64<byte> src, N1 m, N64 n)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.BitGrid64`3<Z0.N1,Z0.N64,T> Z0.BitGrid64`3<Z0.N1,Z0.N64,T>::op_Implicit(Z0.Block64`1<T>&)
    IL_0006: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.BitGrid64`3<Z0.N1,Z0.N64,T> Z0.BitGrid::load<T>(Z0.Block64`1<T>&,Z0.N1,Z0.N64)
// BitGrid64<N1,N64,ushort> load<ushort>(in Block64<ushort> src, N1 m, N64 n)
// AggressiveInlining
BitGrid64<N1,N64,ushort> load<ushort>(in Block64<ushort> src, N1 m, N64 n)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.BitGrid64`3<Z0.N1,Z0.N64,T> Z0.BitGrid64`3<Z0.N1,Z0.N64,T>::op_Implicit(Z0.Block64`1<T>&)
    IL_0006: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.BitGrid64`3<Z0.N1,Z0.N64,T> Z0.BitGrid::load<T>(Z0.Block64`1<T>&,Z0.N1,Z0.N64)
// BitGrid64<N1,N64,uint> load<uint>(in Block64<uint> src, N1 m, N64 n)
// AggressiveInlining
BitGrid64<N1,N64,uint> load<uint>(in Block64<uint> src, N1 m, N64 n)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.BitGrid64`3<Z0.N1,Z0.N64,T> Z0.BitGrid64`3<Z0.N1,Z0.N64,T>::op_Implicit(Z0.Block64`1<T>&)
    IL_0006: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.BitGrid64`3<Z0.N1,Z0.N64,T> Z0.BitGrid::load<T>(Z0.Block64`1<T>&,Z0.N1,Z0.N64)
// BitGrid64<N1,N64,ulong> load<ulong>(in Block64<ulong> src, N1 m, N64 n)
// AggressiveInlining
BitGrid64<N1,N64,ulong> load<ulong>(in Block64<ulong> src, N1 m, N64 n)
{
    IL_0000: ldarg.0
    IL_0001: call Z0.BitGrid64`3<Z0.N1,Z0.N64,T> Z0.BitGrid64`3<Z0.N1,Z0.N64,T>::op_Implicit(Z0.Block64`1<T>&)
    IL_0006: ret
}
------------------------------------------------------------------------------------------------------------------------
