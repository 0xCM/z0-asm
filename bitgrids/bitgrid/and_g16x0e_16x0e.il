// Z0.BitGrid16`1<T> Z0.BitGrid::and<T>(Z0.BitGrid16`1<T>,Z0.BitGrid16`1<T>)
// BitGrid16<byte> and<byte>(BitGrid16<byte> gx, BitGrid16<byte> gy)
// AggressiveInlining
BitGrid16<byte> and<byte>(BitGrid16<byte> gx, BitGrid16<byte> gy)
{
    IL_0000: ldarga.s gx
    IL_0002: call System.Int32 Z0.BitGrid16`1<T>::get_RowCount()
    IL_0007: ldarga.s gx
    IL_0009: call System.Int32 Z0.BitGrid16`1<T>::get_ColCount()
    IL_000E: ldarg.0
    IL_000F: call System.UInt16 Z0.BitGrid16`1<T>::op_Implicit(Z0.BitGrid16`1<T>)
    IL_0014: ldarg.1
    IL_0015: call System.UInt16 Z0.BitGrid16`1<T>::op_Implicit(Z0.BitGrid16`1<T>)
    IL_001A: call System.UInt16 Z0.math::and(System.UInt16,System.UInt16)
    IL_001F: call Z0.BitGrid16`1<T> Z0.BitGrid::init16<T>(System.Int32,System.Int32,System.UInt16)
    IL_0024: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.BitGrid16`1<T> Z0.BitGrid::and<T>(Z0.BitGrid16`1<T>,Z0.BitGrid16`1<T>)
// BitGrid16<ushort> and<ushort>(BitGrid16<ushort> gx, BitGrid16<ushort> gy)
// AggressiveInlining
BitGrid16<ushort> and<ushort>(BitGrid16<ushort> gx, BitGrid16<ushort> gy)
{
    IL_0000: ldarga.s gx
    IL_0002: call System.Int32 Z0.BitGrid16`1<T>::get_RowCount()
    IL_0007: ldarga.s gx
    IL_0009: call System.Int32 Z0.BitGrid16`1<T>::get_ColCount()
    IL_000E: ldarg.0
    IL_000F: call System.UInt16 Z0.BitGrid16`1<T>::op_Implicit(Z0.BitGrid16`1<T>)
    IL_0014: ldarg.1
    IL_0015: call System.UInt16 Z0.BitGrid16`1<T>::op_Implicit(Z0.BitGrid16`1<T>)
    IL_001A: call System.UInt16 Z0.math::and(System.UInt16,System.UInt16)
    IL_001F: call Z0.BitGrid16`1<T> Z0.BitGrid::init16<T>(System.Int32,System.Int32,System.UInt16)
    IL_0024: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.BitGrid16`1<T> Z0.BitGrid::and<T>(Z0.BitGrid16`1<T>,Z0.BitGrid16`1<T>)
// BitGrid16<uint> and<uint>(BitGrid16<uint> gx, BitGrid16<uint> gy)
// AggressiveInlining
BitGrid16<uint> and<uint>(BitGrid16<uint> gx, BitGrid16<uint> gy)
{
    IL_0000: ldarga.s gx
    IL_0002: call System.Int32 Z0.BitGrid16`1<T>::get_RowCount()
    IL_0007: ldarga.s gx
    IL_0009: call System.Int32 Z0.BitGrid16`1<T>::get_ColCount()
    IL_000E: ldarg.0
    IL_000F: call System.UInt16 Z0.BitGrid16`1<T>::op_Implicit(Z0.BitGrid16`1<T>)
    IL_0014: ldarg.1
    IL_0015: call System.UInt16 Z0.BitGrid16`1<T>::op_Implicit(Z0.BitGrid16`1<T>)
    IL_001A: call System.UInt16 Z0.math::and(System.UInt16,System.UInt16)
    IL_001F: call Z0.BitGrid16`1<T> Z0.BitGrid::init16<T>(System.Int32,System.Int32,System.UInt16)
    IL_0024: ret
}
------------------------------------------------------------------------------------------------------------------------
// Z0.BitGrid16`1<T> Z0.BitGrid::and<T>(Z0.BitGrid16`1<T>,Z0.BitGrid16`1<T>)
// BitGrid16<ulong> and<ulong>(BitGrid16<ulong> gx, BitGrid16<ulong> gy)
// AggressiveInlining
BitGrid16<ulong> and<ulong>(BitGrid16<ulong> gx, BitGrid16<ulong> gy)
{
    IL_0000: ldarga.s gx
    IL_0002: call System.Int32 Z0.BitGrid16`1<T>::get_RowCount()
    IL_0007: ldarga.s gx
    IL_0009: call System.Int32 Z0.BitGrid16`1<T>::get_ColCount()
    IL_000E: ldarg.0
    IL_000F: call System.UInt16 Z0.BitGrid16`1<T>::op_Implicit(Z0.BitGrid16`1<T>)
    IL_0014: ldarg.1
    IL_0015: call System.UInt16 Z0.BitGrid16`1<T>::op_Implicit(Z0.BitGrid16`1<T>)
    IL_001A: call System.UInt16 Z0.math::and(System.UInt16,System.UInt16)
    IL_001F: call Z0.BitGrid16`1<T> Z0.BitGrid::init16<T>(System.Int32,System.Int32,System.UInt16)
    IL_0024: ret
}
------------------------------------------------------------------------------------------------------------------------
