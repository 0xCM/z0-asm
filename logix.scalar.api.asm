------------------------------------------------------------------------------------------------------------------------
; byte eval<byte>(BinaryBitLogicKind:byte kind, byte a, byte b)
; eval_g[8u](BinaryBitLogicKind~8u,8u,8u)[521] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 c6 83 f8 0f 0f 87 1f 01 00 00 8b c0 48 8d 0d 98 01 00 00 8b 0c 81 4c 8d 0d e0 ff ff ff 49 03 c9 ff e1 b8 ff 00 00 00 e9 f1 00 00 00 33 c0 e9 ea 00 00 00 0f b6 c2 41 0f b6 d0 23 c2 0f b6 c0 e9 d9 00 00 00 0f b6 c2 41 0f b6 d0 23 c2 44 8b c0 41 f7 d0 41 0f b6 c0 e9 c1 00 00 00 0f b6 c2 41 0f b6 d0 0b c2 0f b6 c0 e9 b0 00 00 00 0f b6 c2 41 0f b6 d0 0b c2 44 8b c0 41 f7 d0 41 0f b6 c0 e9 98 00 00 00 0f b6 c2 41 0f b6 d0 33 c2 0f b6 c0 e9 87 00 00 00 0f b6 c2 41 0f b6 d0 33 c2 44 8b c0 41 f7 d0 41 0f b6 c0 eb 72 0f b6 c2 eb 6d 41 0f b6 c0 eb 67 0f b6 c2 44 8b c0 41 f7 d0 41 0f b6 c0 eb 58 41 0f b6 c0 8b d0 f7 d2 0f b6 c2 eb 4b 0f b6 c2 41 0f b6 d0 44 8b c2 41 f7 d0 41 0b c0 0f b6 c0 eb 36 0f b6 c2 41 0f b6 d0 c4 62 78 f2 c2 41 0f b6 c0 eb 24 0f b6 c2 41 0f b6 d0 44 8b c0 41 f7 d0 41 0b d0 0f b6 c2 eb 0f 0f b6 c2 41 0f b6 c8 c4 e2 70 f2 c0 0f b6 c0 0f b6 c0 48 83 c4 28 5b 5d 5e 5f c3 48 b9 78 c9 35 c7 f7 7f 00 00 e8 3b ab d4 5e 48 8b f8 40 88 77 08 48 b9 58 77 35 c6 f7 7f 00 00 e8 65 2e cf 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 13 ab d4 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 fc 43 e7 5e 48 8b e8 48 8b ce e8 d1 6a 24 ff 8b c8 e8 32 42 24 ff 4c 8b c0 48 8b cd 48 8b d7 e8 64 7f 22 ff 48 8b d0 48 8b cb e8 21 ce 24 ff 48 8b cb e8 19 f7 cb 5e cc 2f 00 00 00 36 00 00 00 11 01 00 00 ae 00 00 00 ea 00 00 00 b3 00 00 00 88 00 00 00 5f 00 00 00 70 00 00 00 99 00 00 00 c8 00 00 00 d5 00 00 00 b9 00 00 00 fc 00 00 00 47 00 00 00 25 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx eax,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 c6}
000eh cmp eax,0fh                             ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f8 0f}
0011h ja near ptr 0136h                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 1f 01 00 00}
0017h mov eax,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c0}
0019h lea rcx,[rip+198h]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 0d 98 01 00 00}
0020h mov ecx,[rcx+rax*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 0c 81}
0023h lea r9,[rip-20h]                        ; LEA r64, m || REX.W 8D /r || encoded[7]{4c 8d 0d e0 ff ff ff}
002ah add rcx,r9                              ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{49 03 c9}
002dh jmp rcx                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e1}
002fh mov eax,0ffh                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff 00 00 00}
0034h jmp near ptr 012ah                      ; JMP rel32 || E9 cd || encoded[5]{e9 f1 00 00 00}
0039h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
003bh jmp near ptr 012ah                      ; JMP rel32 || E9 cd || encoded[5]{e9 ea 00 00 00}
0040h movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
0043h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0047h and eax,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c2}
0049h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
004ch jmp near ptr 012ah                      ; JMP rel32 || E9 cd || encoded[5]{e9 d9 00 00 00}
0051h movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
0054h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0058h and eax,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c2}
005ah mov r8d,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c0}
005dh not r8d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d0}
0060h movzx eax,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c0}
0064h jmp near ptr 012ah                      ; JMP rel32 || E9 cd || encoded[5]{e9 c1 00 00 00}
0069h movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
006ch movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0070h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
0072h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
0075h jmp near ptr 012ah                      ; JMP rel32 || E9 cd || encoded[5]{e9 b0 00 00 00}
007ah movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
007dh movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0081h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
0083h mov r8d,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c0}
0086h not r8d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d0}
0089h movzx eax,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c0}
008dh jmp near ptr 012ah                      ; JMP rel32 || E9 cd || encoded[5]{e9 98 00 00 00}
0092h movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
0095h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0099h xor eax,edx                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c2}
009bh movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
009eh jmp near ptr 012ah                      ; JMP rel32 || E9 cd || encoded[5]{e9 87 00 00 00}
00a3h movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
00a6h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
00aah xor eax,edx                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c2}
00ach mov r8d,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c0}
00afh not r8d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d0}
00b2h movzx eax,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c0}
00b6h jmp short 012ah                         ; JMP rel8 || EB cb || encoded[2]{eb 72}
00b8h movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
00bbh jmp short 012ah                         ; JMP rel8 || EB cb || encoded[2]{eb 6d}
00bdh movzx eax,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c0}
00c1h jmp short 012ah                         ; JMP rel8 || EB cb || encoded[2]{eb 67}
00c3h movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
00c6h mov r8d,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c0}
00c9h not r8d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d0}
00cch movzx eax,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c0}
00d0h jmp short 012ah                         ; JMP rel8 || EB cb || encoded[2]{eb 58}
00d2h movzx eax,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c0}
00d6h mov edx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d0}
00d8h not edx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d2}
00dah movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
00ddh jmp short 012ah                         ; JMP rel8 || EB cb || encoded[2]{eb 4b}
00dfh movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
00e2h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
00e6h mov r8d,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c2}
00e9h not r8d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d0}
00ech or eax,r8d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b c0}
00efh movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
00f2h jmp short 012ah                         ; JMP rel8 || EB cb || encoded[2]{eb 36}
00f4h movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
00f7h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
00fbh andn r8d,eax,edx                        ; ANDN r32a, r32b, r/m32 || VEX.LZ.0F38.W0 F2 /r || encoded[5]{c4 62 78 f2 c2}
0100h movzx eax,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c0}
0104h jmp short 012ah                         ; JMP rel8 || EB cb || encoded[2]{eb 24}
0106h movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
0109h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
010dh mov r8d,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c0}
0110h not r8d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d0}
0113h or edx,r8d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b d0}
0116h movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
0119h jmp short 012ah                         ; JMP rel8 || EB cb || encoded[2]{eb 0f}
011bh movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
011eh movzx ecx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c8}
0122h andn eax,ecx,eax                        ; ANDN r32a, r32b, r/m32 || VEX.LZ.0F38.W0 F2 /r || encoded[5]{c4 e2 70 f2 c0}
0127h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
012ah movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
012dh add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0131h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0132h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0133h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0134h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0135h ret                                     ; RET || C3 || encoded[1]{c3}
0136h mov rcx,7ff7c735c978h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 78 c9 35 c7 f7 7f 00 00}
0140h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3b ab d4 5e}
0145h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0148h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
014ch mov rcx,7ff7c6357758h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 58 77 35 c6 f7 7f 00 00}
0156h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 65 2e cf 5e}
015bh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
015eh mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0168h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 13 ab d4 5e}
016dh mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
0170h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
0175h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
017fh call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fc 43 e7 5e}
0184h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
0187h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
018ah call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d1 6a 24 ff}
018fh mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0191h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 32 42 24 ff}
0196h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0199h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
019ch mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
019fh call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 64 7f 22 ff}
01a4h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
01a7h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
01aah call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 21 ce 24 ff}
01afh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
01b2h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 19 f7 cb 5e}
01b7h int 3                                   ; INT3 || CC || encoded[1]{cc}
01b8h (bad)                                   ; <invalid> || <invalid> || encoded[2]{2f 00}
01bah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01bch add ss:[rax],al                         ; ADD r/m8, r8 || 00 /r || encoded[3]{36 00 00}
01bfh add [rcx],dl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 11}
01c1h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
01c3h add [rsi-16000000h],ch                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 ae 00 00 00 ea}
01c9h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01cbh add [rbx-78000000h],dh                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 b3 00 00 00 88}
01d1h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01d3h add [rdi],bl                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 5f 00}
01d6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01d8h jo short 01dah                          ; JO rel8 || 70 cb || encoded[2]{70 00}
01dah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01dch cdq                                     ; CDQ || o32 99 || encoded[1]{99}
01ddh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01dfh add al,cl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 c8}
01e1h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01e3h add ch,dl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 d5}
01e5h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01e7h add [rcx-4000000h],bh                   ; ADD r/m8, r8 || 00 /r || encoded[6]{00 b9 00 00 00 fc}
01edh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01efh add [rdi],al                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 47 00}
01f2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01f4h and eax,19000000h                       ; AND EAX, imm32 || o32 25 id || encoded[5]{25 00 00 00 19}
01f9h or [rip+4420800h],al                    ; OR r/m8, r8 || 08 /r || encoded[6]{08 05 00 08 42 04}
01ffh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0201h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
0202h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
0205h jo short 0207h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
0207h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; sbyte eval<sbyte>(BinaryBitLogicKind:byte kind, sbyte a, sbyte b)
; eval_g[8i](BinaryBitLogicKind~8u,8i,8i)[513] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 c6 83 f8 0f 0f 87 33 01 00 00 8b c0 48 8d 0d b0 01 00 00 8b 0c 81 4c 8d 0d e0 ff ff ff 49 03 c9 ff e1 b8 ff ff ff ff e9 04 01 00 00 33 c0 e9 fd 00 00 00 48 0f be c2 49 0f be d0 23 c2 48 0f be c0 e9 ea 00 00 00 48 0f be c2 49 0f be d0 23 c2 44 8b c0 41 f7 d0 49 0f be c0 e9 d1 00 00 00 48 0f be c2 49 0f be d0 0b c2 48 0f be c0 e9 be 00 00 00 48 0f be c2 49 0f be d0 0b c2 44 8b c0 41 f7 d0 49 0f be c0 e9 a5 00 00 00 48 0f be c2 49 0f be d0 33 c2 48 0f be c0 e9 92 00 00 00 48 0f be c2 49 0f be d0 33 c2 44 8b c0 41 f7 d0 49 0f be c0 eb 7c 48 0f be c2 eb 76 49 0f be c0 eb 70 48 0f be c2 44 8b c0 41 f7 d0 49 0f be c0 eb 60 49 0f be c0 8b d0 f7 d2 48 0f be c2 eb 52 48 0f be c2 49 0f be d0 44 8b c2 41 f7 d0 41 0b c0 48 0f be c0 eb 3b 48 0f be c2 49 0f be d0 c4 62 78 f2 c2 49 0f be c0 eb 28 48 0f be c2 49 0f be d0 44 8b c0 41 f7 d0 41 0b d0 48 0f be c2 eb 11 48 0f be c2 49 0f be c8 c4 e2 70 f2 c0 48 0f be c0 48 0f be c0 48 83 c4 28 5b 5d 5e 5f c3 48 b9 78 c9 35 c7 f7 7f 00 00 e8 07 a9 d4 5e 48 8b f8 40 88 77 08 48 b9 68 6f 35 c6 f7 7f 00 00 e8 31 2c cf 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 df a8 d4 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 c8 41 e7 5e 48 8b e8 48 8b ce e8 9d 68 24 ff 8b c8 e8 fe 3f 24 ff 4c 8b c0 48 8b cd 48 8b d7 e8 30 7d 22 ff 48 8b d0 48 8b cb e8 ed cb 24 ff 48 8b cb e8 e5 f4 cb 5e cc 00 00 00 00 2f 00 00 00 36 00 00 00 22 01 00 00 b7 00 00 00 f8 00 00 00 bd 00 00 00 8e 00 00 00 62 00 00 00 75 00 00 00 a1 00 00 00 d3 00 00 00 e1 00 00 00 c3}
; TermCode = CTC_RET_Zx3
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx eax,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 c6}
000eh cmp eax,0fh                             ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f8 0f}
0011h ja near ptr 014ah                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 33 01 00 00}
0017h mov eax,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c0}
0019h lea rcx,[rip+1b0h]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 0d b0 01 00 00}
0020h mov ecx,[rcx+rax*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 0c 81}
0023h lea r9,[rip-20h]                        ; LEA r64, m || REX.W 8D /r || encoded[7]{4c 8d 0d e0 ff ff ff}
002ah add rcx,r9                              ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{49 03 c9}
002dh jmp rcx                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e1}
002fh mov eax,0ffffffffh                      ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff ff ff ff}
0034h jmp near ptr 013dh                      ; JMP rel32 || E9 cd || encoded[5]{e9 04 01 00 00}
0039h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
003bh jmp near ptr 013dh                      ; JMP rel32 || E9 cd || encoded[5]{e9 fd 00 00 00}
0040h movsx rax,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c2}
0044h movsx rdx,r8b                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{49 0f be d0}
0048h and eax,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c2}
004ah movsx rax,al                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c0}
004eh jmp near ptr 013dh                      ; JMP rel32 || E9 cd || encoded[5]{e9 ea 00 00 00}
0053h movsx rax,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c2}
0057h movsx rdx,r8b                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{49 0f be d0}
005bh and eax,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c2}
005dh mov r8d,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c0}
0060h not r8d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d0}
0063h movsx rax,r8b                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{49 0f be c0}
0067h jmp near ptr 013dh                      ; JMP rel32 || E9 cd || encoded[5]{e9 d1 00 00 00}
006ch movsx rax,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c2}
0070h movsx rdx,r8b                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{49 0f be d0}
0074h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
0076h movsx rax,al                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c0}
007ah jmp near ptr 013dh                      ; JMP rel32 || E9 cd || encoded[5]{e9 be 00 00 00}
007fh movsx rax,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c2}
0083h movsx rdx,r8b                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{49 0f be d0}
0087h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
0089h mov r8d,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c0}
008ch not r8d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d0}
008fh movsx rax,r8b                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{49 0f be c0}
0093h jmp near ptr 013dh                      ; JMP rel32 || E9 cd || encoded[5]{e9 a5 00 00 00}
0098h movsx rax,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c2}
009ch movsx rdx,r8b                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{49 0f be d0}
00a0h xor eax,edx                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c2}
00a2h movsx rax,al                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c0}
00a6h jmp near ptr 013dh                      ; JMP rel32 || E9 cd || encoded[5]{e9 92 00 00 00}
00abh movsx rax,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c2}
00afh movsx rdx,r8b                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{49 0f be d0}
00b3h xor eax,edx                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c2}
00b5h mov r8d,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c0}
00b8h not r8d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d0}
00bbh movsx rax,r8b                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{49 0f be c0}
00bfh jmp short 013dh                         ; JMP rel8 || EB cb || encoded[2]{eb 7c}
00c1h movsx rax,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c2}
00c5h jmp short 013dh                         ; JMP rel8 || EB cb || encoded[2]{eb 76}
00c7h movsx rax,r8b                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{49 0f be c0}
00cbh jmp short 013dh                         ; JMP rel8 || EB cb || encoded[2]{eb 70}
00cdh movsx rax,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c2}
00d1h mov r8d,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c0}
00d4h not r8d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d0}
00d7h movsx rax,r8b                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{49 0f be c0}
00dbh jmp short 013dh                         ; JMP rel8 || EB cb || encoded[2]{eb 60}
00ddh movsx rax,r8b                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{49 0f be c0}
00e1h mov edx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d0}
00e3h not edx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d2}
00e5h movsx rax,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c2}
00e9h jmp short 013dh                         ; JMP rel8 || EB cb || encoded[2]{eb 52}
00ebh movsx rax,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c2}
00efh movsx rdx,r8b                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{49 0f be d0}
00f3h mov r8d,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c2}
00f6h not r8d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d0}
00f9h or eax,r8d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b c0}
00fch movsx rax,al                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c0}
0100h jmp short 013dh                         ; JMP rel8 || EB cb || encoded[2]{eb 3b}
0102h movsx rax,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c2}
0106h movsx rdx,r8b                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{49 0f be d0}
010ah andn r8d,eax,edx                        ; ANDN r32a, r32b, r/m32 || VEX.LZ.0F38.W0 F2 /r || encoded[5]{c4 62 78 f2 c2}
010fh movsx rax,r8b                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{49 0f be c0}
0113h jmp short 013dh                         ; JMP rel8 || EB cb || encoded[2]{eb 28}
0115h movsx rax,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c2}
0119h movsx rdx,r8b                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{49 0f be d0}
011dh mov r8d,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c0}
0120h not r8d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d0}
0123h or edx,r8d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b d0}
0126h movsx rax,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c2}
012ah jmp short 013dh                         ; JMP rel8 || EB cb || encoded[2]{eb 11}
012ch movsx rax,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c2}
0130h movsx rcx,r8b                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{49 0f be c8}
0134h andn eax,ecx,eax                        ; ANDN r32a, r32b, r/m32 || VEX.LZ.0F38.W0 F2 /r || encoded[5]{c4 e2 70 f2 c0}
0139h movsx rax,al                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c0}
013dh movsx rax,al                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c0}
0141h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0145h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0146h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0147h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0148h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0149h ret                                     ; RET || C3 || encoded[1]{c3}
014ah mov rcx,7ff7c735c978h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 78 c9 35 c7 f7 7f 00 00}
0154h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 07 a9 d4 5e}
0159h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
015ch mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0160h mov rcx,7ff7c6356f68h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 68 6f 35 c6 f7 7f 00 00}
016ah call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 31 2c cf 5e}
016fh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0172h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
017ch call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 df a8 d4 5e}
0181h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
0184h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
0189h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0193h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c8 41 e7 5e}
0198h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
019bh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
019eh call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9d 68 24 ff}
01a3h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
01a5h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fe 3f 24 ff}
01aah mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
01adh mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
01b0h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
01b3h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 30 7d 22 ff}
01b8h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
01bbh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
01beh call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ed cb 24 ff}
01c3h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
01c6h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e5 f4 cb 5e}
01cbh int 3                                   ; INT3 || CC || encoded[1]{cc}
01cch add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01ceh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01d0h (bad)                                   ; <invalid> || <invalid> || encoded[2]{2f 00}
01d2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01d4h add ss:[rax],al                         ; ADD r/m8, r8 || 00 /r || encoded[3]{36 00 00}
01d7h add [rdx],ah                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 22}
01d9h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
01dbh add [rdi-8000000h],dh                   ; ADD r/m8, r8 || 00 /r || encoded[6]{00 b7 00 00 00 f8}
01e1h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01e3h add [rbp-72000000h],bh                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 bd 00 00 00 8e}
01e9h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01ebh add [rdx],ah                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 62 00}
01eeh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01f0h jne short 01f2h                         ; JNE rel8 || 75 cb || encoded[2]{75 00}
01f2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01f4h mov eax,[0e1000000d3000000h]            ; MOV EAX, moffs32 || o32 A1 mo || encoded[9]{a1 00 00 00 d3 00 00 00 e1}
01fdh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01ffh add bl,al                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 c3}
------------------------------------------------------------------------------------------------------------------------
; ushort eval<ushort>(BinaryBitLogicKind:byte kind, ushort a, ushort b)
; eval_g[16u](BinaryBitLogicKind~8u,16u,16u)[521] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 c6 83 f8 0f 0f 87 1f 01 00 00 8b c0 48 8d 0d 98 01 00 00 8b 0c 81 4c 8d 0d e0 ff ff ff 49 03 c9 ff e1 b8 ff ff 00 00 e9 f1 00 00 00 33 c0 e9 ea 00 00 00 0f b7 c2 41 0f b7 d0 23 c2 0f b7 c0 e9 d9 00 00 00 0f b7 c2 41 0f b7 d0 23 c2 44 8b c0 41 f7 d0 41 0f b7 c0 e9 c1 00 00 00 0f b7 c2 41 0f b7 d0 0b c2 0f b7 c0 e9 b0 00 00 00 0f b7 c2 41 0f b7 d0 0b c2 44 8b c0 41 f7 d0 41 0f b7 c0 e9 98 00 00 00 0f b7 c2 41 0f b7 d0 33 c2 0f b7 c0 e9 87 00 00 00 0f b7 c2 41 0f b7 d0 33 c2 44 8b c0 41 f7 d0 41 0f b7 c0 eb 72 0f b7 c2 eb 6d 41 0f b7 c0 eb 67 0f b7 c2 44 8b c0 41 f7 d0 41 0f b7 c0 eb 58 41 0f b7 c0 8b d0 f7 d2 0f b7 c2 eb 4b 0f b7 c2 41 0f b7 d0 44 8b c2 41 f7 d0 41 0b c0 0f b7 c0 eb 36 0f b7 c2 41 0f b7 d0 c4 62 78 f2 c2 41 0f b7 c0 eb 24 0f b7 c2 41 0f b7 d0 44 8b c0 41 f7 d0 41 0b d0 0f b7 c2 eb 0f 0f b7 c2 41 0f b7 c8 c4 e2 70 f2 c0 0f b7 c0 0f b7 c0 48 83 c4 28 5b 5d 5e 5f c3 48 b9 78 c9 35 c7 f7 7f 00 00 e8 db a2 d4 5e 48 8b f8 40 88 77 08 48 b9 38 87 35 c6 f7 7f 00 00 e8 05 26 cf 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 b3 a2 d4 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 9c 3b e7 5e 48 8b e8 48 8b ce e8 71 62 24 ff 8b c8 e8 d2 39 24 ff 4c 8b c0 48 8b cd 48 8b d7 e8 04 77 22 ff 48 8b d0 48 8b cb e8 c1 c5 24 ff 48 8b cb e8 b9 ee cb 5e cc 2f 00 00 00 36 00 00 00 11 01 00 00 ae 00 00 00 ea 00 00 00 b3 00 00 00 88 00 00 00 5f 00 00 00 70 00 00 00 99 00 00 00 c8 00 00 00 d5 00 00 00 b9 00 00 00 fc 00 00 00 47 00 00 00 25 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx eax,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 c6}
000eh cmp eax,0fh                             ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f8 0f}
0011h ja near ptr 0136h                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 1f 01 00 00}
0017h mov eax,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c0}
0019h lea rcx,[rip+198h]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 0d 98 01 00 00}
0020h mov ecx,[rcx+rax*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 0c 81}
0023h lea r9,[rip-20h]                        ; LEA r64, m || REX.W 8D /r || encoded[7]{4c 8d 0d e0 ff ff ff}
002ah add rcx,r9                              ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{49 03 c9}
002dh jmp rcx                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e1}
002fh mov eax,0ffffh                          ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff ff 00 00}
0034h jmp near ptr 012ah                      ; JMP rel32 || E9 cd || encoded[5]{e9 f1 00 00 00}
0039h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
003bh jmp near ptr 012ah                      ; JMP rel32 || E9 cd || encoded[5]{e9 ea 00 00 00}
0040h movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
0043h movzx edx,r8w                           ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{41 0f b7 d0}
0047h and eax,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c2}
0049h movzx eax,ax                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c0}
004ch jmp near ptr 012ah                      ; JMP rel32 || E9 cd || encoded[5]{e9 d9 00 00 00}
0051h movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
0054h movzx edx,r8w                           ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{41 0f b7 d0}
0058h and eax,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c2}
005ah mov r8d,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c0}
005dh not r8d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d0}
0060h movzx eax,r8w                           ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{41 0f b7 c0}
0064h jmp near ptr 012ah                      ; JMP rel32 || E9 cd || encoded[5]{e9 c1 00 00 00}
0069h movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
006ch movzx edx,r8w                           ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{41 0f b7 d0}
0070h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
0072h movzx eax,ax                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c0}
0075h jmp near ptr 012ah                      ; JMP rel32 || E9 cd || encoded[5]{e9 b0 00 00 00}
007ah movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
007dh movzx edx,r8w                           ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{41 0f b7 d0}
0081h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
0083h mov r8d,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c0}
0086h not r8d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d0}
0089h movzx eax,r8w                           ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{41 0f b7 c0}
008dh jmp near ptr 012ah                      ; JMP rel32 || E9 cd || encoded[5]{e9 98 00 00 00}
0092h movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
0095h movzx edx,r8w                           ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{41 0f b7 d0}
0099h xor eax,edx                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c2}
009bh movzx eax,ax                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c0}
009eh jmp near ptr 012ah                      ; JMP rel32 || E9 cd || encoded[5]{e9 87 00 00 00}
00a3h movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
00a6h movzx edx,r8w                           ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{41 0f b7 d0}
00aah xor eax,edx                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c2}
00ach mov r8d,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c0}
00afh not r8d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d0}
00b2h movzx eax,r8w                           ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{41 0f b7 c0}
00b6h jmp short 012ah                         ; JMP rel8 || EB cb || encoded[2]{eb 72}
00b8h movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
00bbh jmp short 012ah                         ; JMP rel8 || EB cb || encoded[2]{eb 6d}
00bdh movzx eax,r8w                           ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{41 0f b7 c0}
00c1h jmp short 012ah                         ; JMP rel8 || EB cb || encoded[2]{eb 67}
00c3h movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
00c6h mov r8d,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c0}
00c9h not r8d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d0}
00cch movzx eax,r8w                           ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{41 0f b7 c0}
00d0h jmp short 012ah                         ; JMP rel8 || EB cb || encoded[2]{eb 58}
00d2h movzx eax,r8w                           ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{41 0f b7 c0}
00d6h mov edx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d0}
00d8h not edx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d2}
00dah movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
00ddh jmp short 012ah                         ; JMP rel8 || EB cb || encoded[2]{eb 4b}
00dfh movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
00e2h movzx edx,r8w                           ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{41 0f b7 d0}
00e6h mov r8d,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c2}
00e9h not r8d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d0}
00ech or eax,r8d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b c0}
00efh movzx eax,ax                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c0}
00f2h jmp short 012ah                         ; JMP rel8 || EB cb || encoded[2]{eb 36}
00f4h movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
00f7h movzx edx,r8w                           ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{41 0f b7 d0}
00fbh andn r8d,eax,edx                        ; ANDN r32a, r32b, r/m32 || VEX.LZ.0F38.W0 F2 /r || encoded[5]{c4 62 78 f2 c2}
0100h movzx eax,r8w                           ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{41 0f b7 c0}
0104h jmp short 012ah                         ; JMP rel8 || EB cb || encoded[2]{eb 24}
0106h movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
0109h movzx edx,r8w                           ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{41 0f b7 d0}
010dh mov r8d,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c0}
0110h not r8d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d0}
0113h or edx,r8d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b d0}
0116h movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
0119h jmp short 012ah                         ; JMP rel8 || EB cb || encoded[2]{eb 0f}
011bh movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
011eh movzx ecx,r8w                           ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{41 0f b7 c8}
0122h andn eax,ecx,eax                        ; ANDN r32a, r32b, r/m32 || VEX.LZ.0F38.W0 F2 /r || encoded[5]{c4 e2 70 f2 c0}
0127h movzx eax,ax                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c0}
012ah movzx eax,ax                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c0}
012dh add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0131h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0132h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0133h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0134h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0135h ret                                     ; RET || C3 || encoded[1]{c3}
0136h mov rcx,7ff7c735c978h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 78 c9 35 c7 f7 7f 00 00}
0140h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 db a2 d4 5e}
0145h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0148h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
014ch mov rcx,7ff7c6358738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 38 87 35 c6 f7 7f 00 00}
0156h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 05 26 cf 5e}
015bh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
015eh mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0168h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b3 a2 d4 5e}
016dh mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
0170h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
0175h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
017fh call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9c 3b e7 5e}
0184h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
0187h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
018ah call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 71 62 24 ff}
018fh mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0191h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d2 39 24 ff}
0196h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0199h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
019ch mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
019fh call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 04 77 22 ff}
01a4h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
01a7h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
01aah call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c1 c5 24 ff}
01afh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
01b2h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b9 ee cb 5e}
01b7h int 3                                   ; INT3 || CC || encoded[1]{cc}
01b8h (bad)                                   ; <invalid> || <invalid> || encoded[2]{2f 00}
01bah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01bch add ss:[rax],al                         ; ADD r/m8, r8 || 00 /r || encoded[3]{36 00 00}
01bfh add [rcx],dl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 11}
01c1h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
01c3h add [rsi-16000000h],ch                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 ae 00 00 00 ea}
01c9h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01cbh add [rbx-78000000h],dh                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 b3 00 00 00 88}
01d1h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01d3h add [rdi],bl                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 5f 00}
01d6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01d8h jo short 01dah                          ; JO rel8 || 70 cb || encoded[2]{70 00}
01dah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01dch cdq                                     ; CDQ || o32 99 || encoded[1]{99}
01ddh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01dfh add al,cl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 c8}
01e1h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01e3h add ch,dl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 d5}
01e5h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01e7h add [rcx-4000000h],bh                   ; ADD r/m8, r8 || 00 /r || encoded[6]{00 b9 00 00 00 fc}
01edh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01efh add [rdi],al                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 47 00}
01f2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01f4h and eax,19000000h                       ; AND EAX, imm32 || o32 25 id || encoded[5]{25 00 00 00 19}
01f9h or [rip+4420800h],al                    ; OR r/m8, r8 || 08 /r || encoded[6]{08 05 00 08 42 04}
01ffh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0201h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
0202h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
0205h jo short 0207h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
0207h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; short eval<short>(BinaryBitLogicKind:byte kind, short a, short b)
; eval_g[16i](BinaryBitLogicKind~8u,16i,16i)[513] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 c6 83 f8 0f 0f 87 33 01 00 00 8b c0 48 8d 0d b0 01 00 00 8b 0c 81 4c 8d 0d e0 ff ff ff 49 03 c9 ff e1 b8 ff ff ff ff e9 04 01 00 00 33 c0 e9 fd 00 00 00 48 0f bf c2 49 0f bf d0 23 c2 48 0f bf c0 e9 ea 00 00 00 48 0f bf c2 49 0f bf d0 23 c2 44 8b c0 41 f7 d0 49 0f bf c0 e9 d1 00 00 00 48 0f bf c2 49 0f bf d0 0b c2 48 0f bf c0 e9 be 00 00 00 48 0f bf c2 49 0f bf d0 0b c2 44 8b c0 41 f7 d0 49 0f bf c0 e9 a5 00 00 00 48 0f bf c2 49 0f bf d0 33 c2 48 0f bf c0 e9 92 00 00 00 48 0f bf c2 49 0f bf d0 33 c2 44 8b c0 41 f7 d0 49 0f bf c0 eb 7c 48 0f bf c2 eb 76 49 0f bf c0 eb 70 48 0f bf c2 44 8b c0 41 f7 d0 49 0f bf c0 eb 60 49 0f bf c0 8b d0 f7 d2 48 0f bf c2 eb 52 48 0f bf c2 49 0f bf d0 44 8b c2 41 f7 d0 41 0b c0 48 0f bf c0 eb 3b 48 0f bf c2 49 0f bf d0 c4 62 78 f2 c2 49 0f bf c0 eb 28 48 0f bf c2 49 0f bf d0 44 8b c0 41 f7 d0 41 0b d0 48 0f bf c2 eb 11 48 0f bf c2 49 0f bf c8 c4 e2 70 f2 c0 48 0f bf c0 48 0f bf c0 48 83 c4 28 5b 5d 5e 5f c3 48 b9 78 c9 35 c7 f7 7f 00 00 e8 a7 a0 d4 5e 48 8b f8 40 88 77 08 48 b9 48 7f 35 c6 f7 7f 00 00 e8 d1 23 cf 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 7f a0 d4 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 68 39 e7 5e 48 8b e8 48 8b ce e8 3d 60 24 ff 8b c8 e8 9e 37 24 ff 4c 8b c0 48 8b cd 48 8b d7 e8 d0 74 22 ff 48 8b d0 48 8b cb e8 8d c3 24 ff 48 8b cb e8 85 ec cb 5e cc 00 00 00 00 2f 00 00 00 36 00 00 00 22 01 00 00 b7 00 00 00 f8 00 00 00 bd 00 00 00 8e 00 00 00 62 00 00 00 75 00 00 00 a1 00 00 00 d3 00 00 00 e1 00 00 00 c3}
; TermCode = CTC_RET_Zx3
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx eax,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 c6}
000eh cmp eax,0fh                             ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f8 0f}
0011h ja near ptr 014ah                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 33 01 00 00}
0017h mov eax,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c0}
0019h lea rcx,[rip+1b0h]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 0d b0 01 00 00}
0020h mov ecx,[rcx+rax*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 0c 81}
0023h lea r9,[rip-20h]                        ; LEA r64, m || REX.W 8D /r || encoded[7]{4c 8d 0d e0 ff ff ff}
002ah add rcx,r9                              ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{49 03 c9}
002dh jmp rcx                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e1}
002fh mov eax,0ffffffffh                      ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff ff ff ff}
0034h jmp near ptr 013dh                      ; JMP rel32 || E9 cd || encoded[5]{e9 04 01 00 00}
0039h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
003bh jmp near ptr 013dh                      ; JMP rel32 || E9 cd || encoded[5]{e9 fd 00 00 00}
0040h movsx rax,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c2}
0044h movsx rdx,r8w                           ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{49 0f bf d0}
0048h and eax,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c2}
004ah movsx rax,ax                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c0}
004eh jmp near ptr 013dh                      ; JMP rel32 || E9 cd || encoded[5]{e9 ea 00 00 00}
0053h movsx rax,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c2}
0057h movsx rdx,r8w                           ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{49 0f bf d0}
005bh and eax,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c2}
005dh mov r8d,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c0}
0060h not r8d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d0}
0063h movsx rax,r8w                           ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{49 0f bf c0}
0067h jmp near ptr 013dh                      ; JMP rel32 || E9 cd || encoded[5]{e9 d1 00 00 00}
006ch movsx rax,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c2}
0070h movsx rdx,r8w                           ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{49 0f bf d0}
0074h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
0076h movsx rax,ax                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c0}
007ah jmp near ptr 013dh                      ; JMP rel32 || E9 cd || encoded[5]{e9 be 00 00 00}
007fh movsx rax,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c2}
0083h movsx rdx,r8w                           ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{49 0f bf d0}
0087h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
0089h mov r8d,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c0}
008ch not r8d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d0}
008fh movsx rax,r8w                           ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{49 0f bf c0}
0093h jmp near ptr 013dh                      ; JMP rel32 || E9 cd || encoded[5]{e9 a5 00 00 00}
0098h movsx rax,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c2}
009ch movsx rdx,r8w                           ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{49 0f bf d0}
00a0h xor eax,edx                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c2}
00a2h movsx rax,ax                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c0}
00a6h jmp near ptr 013dh                      ; JMP rel32 || E9 cd || encoded[5]{e9 92 00 00 00}
00abh movsx rax,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c2}
00afh movsx rdx,r8w                           ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{49 0f bf d0}
00b3h xor eax,edx                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c2}
00b5h mov r8d,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c0}
00b8h not r8d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d0}
00bbh movsx rax,r8w                           ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{49 0f bf c0}
00bfh jmp short 013dh                         ; JMP rel8 || EB cb || encoded[2]{eb 7c}
00c1h movsx rax,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c2}
00c5h jmp short 013dh                         ; JMP rel8 || EB cb || encoded[2]{eb 76}
00c7h movsx rax,r8w                           ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{49 0f bf c0}
00cbh jmp short 013dh                         ; JMP rel8 || EB cb || encoded[2]{eb 70}
00cdh movsx rax,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c2}
00d1h mov r8d,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c0}
00d4h not r8d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d0}
00d7h movsx rax,r8w                           ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{49 0f bf c0}
00dbh jmp short 013dh                         ; JMP rel8 || EB cb || encoded[2]{eb 60}
00ddh movsx rax,r8w                           ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{49 0f bf c0}
00e1h mov edx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d0}
00e3h not edx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d2}
00e5h movsx rax,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c2}
00e9h jmp short 013dh                         ; JMP rel8 || EB cb || encoded[2]{eb 52}
00ebh movsx rax,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c2}
00efh movsx rdx,r8w                           ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{49 0f bf d0}
00f3h mov r8d,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c2}
00f6h not r8d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d0}
00f9h or eax,r8d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b c0}
00fch movsx rax,ax                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c0}
0100h jmp short 013dh                         ; JMP rel8 || EB cb || encoded[2]{eb 3b}
0102h movsx rax,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c2}
0106h movsx rdx,r8w                           ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{49 0f bf d0}
010ah andn r8d,eax,edx                        ; ANDN r32a, r32b, r/m32 || VEX.LZ.0F38.W0 F2 /r || encoded[5]{c4 62 78 f2 c2}
010fh movsx rax,r8w                           ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{49 0f bf c0}
0113h jmp short 013dh                         ; JMP rel8 || EB cb || encoded[2]{eb 28}
0115h movsx rax,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c2}
0119h movsx rdx,r8w                           ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{49 0f bf d0}
011dh mov r8d,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c0}
0120h not r8d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d0}
0123h or edx,r8d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b d0}
0126h movsx rax,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c2}
012ah jmp short 013dh                         ; JMP rel8 || EB cb || encoded[2]{eb 11}
012ch movsx rax,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c2}
0130h movsx rcx,r8w                           ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{49 0f bf c8}
0134h andn eax,ecx,eax                        ; ANDN r32a, r32b, r/m32 || VEX.LZ.0F38.W0 F2 /r || encoded[5]{c4 e2 70 f2 c0}
0139h movsx rax,ax                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c0}
013dh movsx rax,ax                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c0}
0141h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0145h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0146h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0147h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0148h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0149h ret                                     ; RET || C3 || encoded[1]{c3}
014ah mov rcx,7ff7c735c978h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 78 c9 35 c7 f7 7f 00 00}
0154h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a7 a0 d4 5e}
0159h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
015ch mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0160h mov rcx,7ff7c6357f48h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 48 7f 35 c6 f7 7f 00 00}
016ah call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d1 23 cf 5e}
016fh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0172h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
017ch call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7f a0 d4 5e}
0181h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
0184h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
0189h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0193h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 68 39 e7 5e}
0198h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
019bh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
019eh call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3d 60 24 ff}
01a3h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
01a5h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9e 37 24 ff}
01aah mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
01adh mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
01b0h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
01b3h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d0 74 22 ff}
01b8h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
01bbh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
01beh call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 8d c3 24 ff}
01c3h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
01c6h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 85 ec cb 5e}
01cbh int 3                                   ; INT3 || CC || encoded[1]{cc}
01cch add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01ceh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01d0h (bad)                                   ; <invalid> || <invalid> || encoded[2]{2f 00}
01d2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01d4h add ss:[rax],al                         ; ADD r/m8, r8 || 00 /r || encoded[3]{36 00 00}
01d7h add [rdx],ah                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 22}
01d9h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
01dbh add [rdi-8000000h],dh                   ; ADD r/m8, r8 || 00 /r || encoded[6]{00 b7 00 00 00 f8}
01e1h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01e3h add [rbp-72000000h],bh                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 bd 00 00 00 8e}
01e9h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01ebh add [rdx],ah                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 62 00}
01eeh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01f0h jne short 01f2h                         ; JNE rel8 || 75 cb || encoded[2]{75 00}
01f2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01f4h mov eax,[0e1000000d3000000h]            ; MOV EAX, moffs32 || o32 A1 mo || encoded[9]{a1 00 00 00 d3 00 00 00 e1}
01fdh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
01ffh add bl,al                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 c3}
------------------------------------------------------------------------------------------------------------------------
; uint eval<uint>(BinaryBitLogicKind:byte kind, uint a, uint b)
; eval_g[32u](BinaryBitLogicKind~8u,32u,32u)[401] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 c6 83 f8 0f 0f 87 a4 00 00 00 8b c0 48 8d 0d 20 01 00 00 8b 0c 81 4c 8d 0d e0 ff ff ff 49 03 c9 ff e1 b8 ff ff ff ff eb 7c 33 c0 eb 78 41 23 d0 8b c2 eb 71 8b c2 41 23 c0 f7 d0 eb 68 8b c2 41 0b c0 eb 61 8b c2 41 8b d0 0b c2 f7 d0 eb 56 8b c2 41 8b d0 33 c2 eb 4d 8b c2 41 8b d0 33 c2 f7 d0 eb 42 8b c2 eb 3e 41 8b c0 eb 39 8b c2 f7 d0 eb 33 41 8b c0 f7 d0 eb 2c 8b c2 41 8b d0 44 8b c2 41 f7 d0 41 0b c0 eb 1c c4 c2 68 f2 c0 eb 15 8b c2 41 8b d0 f7 d0 0b c2 eb 0a 8b c2 41 8b c8 c4 e2 70 f2 c0 48 83 c4 28 5b 5d 5e 5f c3 48 b9 78 c9 35 c7 f7 7f 00 00 e8 06 9f d4 5e 48 8b f8 40 88 77 08 48 b9 d8 96 35 c6 f7 7f 00 00 e8 30 22 cf 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 de 9e d4 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 c7 37 e7 5e 48 8b e8 48 8b ce e8 9c 5e 24 ff 8b c8 e8 fd 35 24 ff 4c 8b c0 48 8b cd 48 8b d7 e8 2f 73 22 ff 48 8b d0 48 8b cb e8 ec c1 24 ff 48 8b cb e8 e4 ea cb 5e cc 00 00 00 2c 00 00 00 30 00 00 00 9e 00 00 00 66 00 00 00 8c 00 00 00 6a 00 00 00 52 00 00 00 40 00 00 00 47 00 00 00 5b 00 00 00 75 00 00 00 7c 00 00 00 6f 00 00 00 93 00 00 00 37 00 00 00 25 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx eax,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 c6}
000eh cmp eax,0fh                             ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f8 0f}
0011h ja near ptr 00bbh                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 a4 00 00 00}
0017h mov eax,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c0}
0019h lea rcx,[rip+120h]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 0d 20 01 00 00}
0020h mov ecx,[rcx+rax*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 0c 81}
0023h lea r9,[rip-20h]                        ; LEA r64, m || REX.W 8D /r || encoded[7]{4c 8d 0d e0 ff ff ff}
002ah add rcx,r9                              ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{49 03 c9}
002dh jmp rcx                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e1}
002fh mov eax,0ffffffffh                      ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff ff ff ff}
0034h jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 7c}
0036h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0038h jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 78}
003ah and edx,r8d                             ; AND r32, r/m32 || o32 23 /r || encoded[3]{41 23 d0}
003dh mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
003fh jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 71}
0041h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
0043h and eax,r8d                             ; AND r32, r/m32 || o32 23 /r || encoded[3]{41 23 c0}
0046h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0048h jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 68}
004ah mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
004ch or eax,r8d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b c0}
004fh jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 61}
0051h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
0053h mov edx,r8d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b d0}
0056h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
0058h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
005ah jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 56}
005ch mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
005eh mov edx,r8d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b d0}
0061h xor eax,edx                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c2}
0063h jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 4d}
0065h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
0067h mov edx,r8d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b d0}
006ah xor eax,edx                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c2}
006ch not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
006eh jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 42}
0070h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
0072h jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 3e}
0074h mov eax,r8d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b c0}
0077h jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 39}
0079h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
007bh not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
007dh jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 33}
007fh mov eax,r8d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b c0}
0082h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0084h jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 2c}
0086h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
0088h mov edx,r8d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b d0}
008bh mov r8d,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c2}
008eh not r8d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d0}
0091h or eax,r8d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b c0}
0094h jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 1c}
0096h andn eax,edx,r8d                        ; ANDN r32a, r32b, r/m32 || VEX.LZ.0F38.W0 F2 /r || encoded[5]{c4 c2 68 f2 c0}
009bh jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 15}
009dh mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
009fh mov edx,r8d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b d0}
00a2h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
00a4h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
00a6h jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 0a}
00a8h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
00aah mov ecx,r8d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b c8}
00adh andn eax,ecx,eax                        ; ANDN r32a, r32b, r/m32 || VEX.LZ.0F38.W0 F2 /r || encoded[5]{c4 e2 70 f2 c0}
00b2h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
00b6h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
00b7h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
00b8h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
00b9h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
00bah ret                                     ; RET || C3 || encoded[1]{c3}
00bbh mov rcx,7ff7c735c978h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 78 c9 35 c7 f7 7f 00 00}
00c5h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 06 9f d4 5e}
00cah mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
00cdh mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
00d1h mov rcx,7ff7c63596d8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d8 96 35 c6 f7 7f 00 00}
00dbh call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 30 22 cf 5e}
00e0h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00e3h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
00edh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 de 9e d4 5e}
00f2h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
00f5h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
00fah mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0104h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c7 37 e7 5e}
0109h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
010ch mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
010fh call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9c 5e 24 ff}
0114h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0116h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fd 35 24 ff}
011bh mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
011eh mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0121h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0124h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2f 73 22 ff}
0129h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
012ch mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
012fh call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ec c1 24 ff}
0134h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0137h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e4 ea cb 5e}
013ch int 3                                   ; INT3 || CC || encoded[1]{cc}
013dh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
013fh add [rax+rax],ch                        ; ADD r/m8, r8 || 00 /r || encoded[3]{00 2c 00}
0142h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0144h xor [rax],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 00}
0146h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0148h sahf                                    ; SAHF || 9E || encoded[1]{9e}
0149h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
014bh add [rsi],ah                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 66 00}
014eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0150h mov [rax],es                            ; MOV r32/m16, Sreg || o32 8C /r || encoded[2]{8c 00}
0152h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0154h push 0                                  ; PUSH imm8 || 6A ib || encoded[2]{6a 00}
0156h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0158h push rdx                                ; PUSH r64 || 50+ro || encoded[1]{52}
0159h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
015bh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 40 00}
015eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0160h add [r8],r8b                            ; ADD r/m8, r8 || 00 /r || encoded[3]{47 00 00}
0163h add [rbx],bl                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 5b 00}
0166h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0168h jne short 016ah                         ; JNE rel8 || 75 cb || encoded[2]{75 00}
016ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
016ch jl short 016eh                          ; JL rel8 || 7C cb || encoded[2]{7c 00}
016eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0170h outsd                                   ; OUTSD || o32 6F || encoded[1]{6f}
0171h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0173h add [rbx+37000000h],dl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 93 00 00 00 37}
0179h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
017bh add [rip+19000000h],ah                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 25 00 00 00 19}
0181h or [rip+4420800h],al                    ; OR r/m8, r8 || 08 /r || encoded[6]{08 05 00 08 42 04}
0187h xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0189h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
018ah add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
018dh jo short 018fh                          ; JO rel8 || 70 cb || encoded[2]{70 00}
018fh (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; int eval<int>(BinaryBitLogicKind:byte kind, int a, int b)
; eval_g[32i](BinaryBitLogicKind~8u,32i,32i)[401] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 c6 83 f8 0f 0f 87 a4 00 00 00 8b c0 48 8d 0d 20 01 00 00 8b 0c 81 4c 8d 0d e0 ff ff ff 49 03 c9 ff e1 b8 ff ff ff ff eb 7c 33 c0 eb 78 41 23 d0 8b c2 eb 71 8b c2 41 23 c0 f7 d0 eb 68 8b c2 41 0b c0 eb 61 8b c2 41 8b d0 0b c2 f7 d0 eb 56 8b c2 41 8b d0 33 c2 eb 4d 8b c2 41 8b d0 33 c2 f7 d0 eb 42 8b c2 eb 3e 41 8b c0 eb 39 8b c2 f7 d0 eb 33 41 8b c0 f7 d0 eb 2c 8b c2 41 8b d0 44 8b c2 41 f7 d0 41 0b c0 eb 1c c4 c2 68 f2 c0 eb 15 8b c2 41 8b d0 f7 d0 0b c2 eb 0a 8b c2 41 8b c8 c4 e2 70 f2 c0 48 83 c4 28 5b 5d 5e 5f c3 48 b9 78 c9 35 c7 f7 7f 00 00 e8 56 99 d4 5e 48 8b f8 40 88 77 08 48 b9 08 8f 35 c6 f7 7f 00 00 e8 80 1c cf 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 2e 99 d4 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 17 32 e7 5e 48 8b e8 48 8b ce e8 ec 58 24 ff 8b c8 e8 4d 30 24 ff 4c 8b c0 48 8b cd 48 8b d7 e8 7f 6d 22 ff 48 8b d0 48 8b cb e8 3c bc 24 ff 48 8b cb e8 34 e5 cb 5e cc 00 00 00 2c 00 00 00 30 00 00 00 9e 00 00 00 66 00 00 00 8c 00 00 00 6a 00 00 00 52 00 00 00 40 00 00 00 47 00 00 00 5b 00 00 00 75 00 00 00 7c 00 00 00 6f 00 00 00 93 00 00 00 37 00 00 00 25 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx eax,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 c6}
000eh cmp eax,0fh                             ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f8 0f}
0011h ja near ptr 00bbh                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 a4 00 00 00}
0017h mov eax,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c0}
0019h lea rcx,[rip+120h]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 0d 20 01 00 00}
0020h mov ecx,[rcx+rax*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 0c 81}
0023h lea r9,[rip-20h]                        ; LEA r64, m || REX.W 8D /r || encoded[7]{4c 8d 0d e0 ff ff ff}
002ah add rcx,r9                              ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{49 03 c9}
002dh jmp rcx                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e1}
002fh mov eax,0ffffffffh                      ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff ff ff ff}
0034h jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 7c}
0036h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0038h jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 78}
003ah and edx,r8d                             ; AND r32, r/m32 || o32 23 /r || encoded[3]{41 23 d0}
003dh mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
003fh jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 71}
0041h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
0043h and eax,r8d                             ; AND r32, r/m32 || o32 23 /r || encoded[3]{41 23 c0}
0046h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0048h jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 68}
004ah mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
004ch or eax,r8d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b c0}
004fh jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 61}
0051h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
0053h mov edx,r8d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b d0}
0056h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
0058h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
005ah jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 56}
005ch mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
005eh mov edx,r8d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b d0}
0061h xor eax,edx                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c2}
0063h jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 4d}
0065h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
0067h mov edx,r8d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b d0}
006ah xor eax,edx                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c2}
006ch not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
006eh jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 42}
0070h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
0072h jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 3e}
0074h mov eax,r8d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b c0}
0077h jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 39}
0079h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
007bh not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
007dh jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 33}
007fh mov eax,r8d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b c0}
0082h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0084h jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 2c}
0086h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
0088h mov edx,r8d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b d0}
008bh mov r8d,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c2}
008eh not r8d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d0}
0091h or eax,r8d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b c0}
0094h jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 1c}
0096h andn eax,edx,r8d                        ; ANDN r32a, r32b, r/m32 || VEX.LZ.0F38.W0 F2 /r || encoded[5]{c4 c2 68 f2 c0}
009bh jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 15}
009dh mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
009fh mov edx,r8d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b d0}
00a2h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
00a4h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
00a6h jmp short 00b2h                         ; JMP rel8 || EB cb || encoded[2]{eb 0a}
00a8h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
00aah mov ecx,r8d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b c8}
00adh andn eax,ecx,eax                        ; ANDN r32a, r32b, r/m32 || VEX.LZ.0F38.W0 F2 /r || encoded[5]{c4 e2 70 f2 c0}
00b2h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
00b6h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
00b7h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
00b8h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
00b9h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
00bah ret                                     ; RET || C3 || encoded[1]{c3}
00bbh mov rcx,7ff7c735c978h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 78 c9 35 c7 f7 7f 00 00}
00c5h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 56 99 d4 5e}
00cah mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
00cdh mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
00d1h mov rcx,7ff7c6358f08h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 08 8f 35 c6 f7 7f 00 00}
00dbh call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 80 1c cf 5e}
00e0h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00e3h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
00edh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2e 99 d4 5e}
00f2h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
00f5h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
00fah mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0104h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 17 32 e7 5e}
0109h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
010ch mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
010fh call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ec 58 24 ff}
0114h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0116h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 4d 30 24 ff}
011bh mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
011eh mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0121h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0124h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7f 6d 22 ff}
0129h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
012ch mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
012fh call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3c bc 24 ff}
0134h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0137h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 34 e5 cb 5e}
013ch int 3                                   ; INT3 || CC || encoded[1]{cc}
013dh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
013fh add [rax+rax],ch                        ; ADD r/m8, r8 || 00 /r || encoded[3]{00 2c 00}
0142h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0144h xor [rax],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 00}
0146h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0148h sahf                                    ; SAHF || 9E || encoded[1]{9e}
0149h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
014bh add [rsi],ah                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 66 00}
014eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0150h mov [rax],es                            ; MOV r32/m16, Sreg || o32 8C /r || encoded[2]{8c 00}
0152h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0154h push 0                                  ; PUSH imm8 || 6A ib || encoded[2]{6a 00}
0156h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0158h push rdx                                ; PUSH r64 || 50+ro || encoded[1]{52}
0159h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
015bh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 40 00}
015eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0160h add [r8],r8b                            ; ADD r/m8, r8 || 00 /r || encoded[3]{47 00 00}
0163h add [rbx],bl                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 5b 00}
0166h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0168h jne short 016ah                         ; JNE rel8 || 75 cb || encoded[2]{75 00}
016ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
016ch jl short 016eh                          ; JL rel8 || 7C cb || encoded[2]{7c 00}
016eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0170h outsd                                   ; OUTSD || o32 6F || encoded[1]{6f}
0171h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0173h add [rbx+37000000h],dl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 93 00 00 00 37}
0179h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
017bh add [rip+19000000h],ah                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 25 00 00 00 19}
0181h or [rip+4420800h],al                    ; OR r/m8, r8 || 08 /r || encoded[6]{08 05 00 08 42 04}
0187h xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0189h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
018ah add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
018dh jo short 018fh                          ; JO rel8 || 70 cb || encoded[2]{70 00}
018fh (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; ulong eval<ulong>(BinaryBitLogicKind:byte kind, ulong a, ulong b)
; eval_g[64u](BinaryBitLogicKind~8u,64u,64u)[433] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 c6 83 f8 0f 0f 87 c7 00 00 00 8b c0 48 8d 0d 40 01 00 00 8b 0c 81 4c 8d 0d e0 ff ff ff 49 03 c9 ff e1 48 b8 ff ff ff ff ff ff ff ff e9 97 00 00 00 33 c0 e9 90 00 00 00 49 23 d0 48 8b c2 e9 85 00 00 00 48 8b c2 49 23 c0 48 f7 d0 eb 7a 48 8b c2 49 0b c0 eb 72 48 8b c2 49 8b d0 48 0b c2 48 f7 d0 eb 64 48 8b c2 49 8b d0 48 33 c2 eb 59 48 8b c2 49 8b d0 48 33 c2 48 f7 d0 eb 4b 48 8b c2 eb 46 49 8b c0 eb 41 48 8b c2 48 f7 d0 eb 39 49 8b c0 48 f7 d0 eb 31 48 8b c2 49 8b d0 4c 8b c2 49 f7 d0 49 0b c0 eb 20 c4 c2 e8 f2 c0 eb 19 48 8b c2 49 8b d0 48 f7 d0 48 0b c2 eb 0b 48 8b c2 49 8b c8 c4 e2 f0 f2 c0 48 83 c4 28 5b 5d 5e 5f c3 48 b9 78 c9 35 c7 f7 7f 00 00 e8 93 97 d4 5e 48 8b f8 40 88 77 08 48 b9 78 a6 35 c6 f7 7f 00 00 e8 bd 1a cf 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 6b 97 d4 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 54 30 e7 5e 48 8b e8 48 8b ce e8 29 57 24 ff 8b c8 e8 8a 2e 24 ff 4c 8b c0 48 8b cd 48 8b d7 e8 bc 6b 22 ff 48 8b d0 48 8b cb e8 79 ba 24 ff 48 8b cb e8 71 e3 cb 5e cc 34 00 00 00 3b 00 00 00 c0 00 00 00 80 00 00 00 ab 00 00 00 85 00 00 00 67 00 00 00 51 00 00 00 59 00 00 00 72 00 00 00 92 00 00 00 9a 00 00 00 8a 00 00 00 b2 00 00 00 46 00 00 00 25 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx eax,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 c6}
000eh cmp eax,0fh                             ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f8 0f}
0011h ja near ptr 00deh                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 c7 00 00 00}
0017h mov eax,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c0}
0019h lea rcx,[rip+140h]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 0d 40 01 00 00}
0020h mov ecx,[rcx+rax*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 0c 81}
0023h lea r9,[rip-20h]                        ; LEA r64, m || REX.W 8D /r || encoded[7]{4c 8d 0d e0 ff ff ff}
002ah add rcx,r9                              ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{49 03 c9}
002dh jmp rcx                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e1}
002fh mov rax,0ffffffffffffffffh              ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 ff ff ff ff ff ff ff ff}
0039h jmp near ptr 00d5h                      ; JMP rel32 || E9 cd || encoded[5]{e9 97 00 00 00}
003eh xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0040h jmp near ptr 00d5h                      ; JMP rel32 || E9 cd || encoded[5]{e9 90 00 00 00}
0045h and rdx,r8                              ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{49 23 d0}
0048h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
004bh jmp near ptr 00d5h                      ; JMP rel32 || E9 cd || encoded[5]{e9 85 00 00 00}
0050h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
0053h and rax,r8                              ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{49 23 c0}
0056h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0059h jmp short 00d5h                         ; JMP rel8 || EB cb || encoded[2]{eb 7a}
005bh mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
005eh or rax,r8                               ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{49 0b c0}
0061h jmp short 00d5h                         ; JMP rel8 || EB cb || encoded[2]{eb 72}
0063h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
0066h mov rdx,r8                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{49 8b d0}
0069h or rax,rdx                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b c2}
006ch not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
006fh jmp short 00d5h                         ; JMP rel8 || EB cb || encoded[2]{eb 64}
0071h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
0074h mov rdx,r8                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{49 8b d0}
0077h xor rax,rdx                             ; XOR r64, r/m64 || REX.W 33 /r || encoded[3]{48 33 c2}
007ah jmp short 00d5h                         ; JMP rel8 || EB cb || encoded[2]{eb 59}
007ch mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
007fh mov rdx,r8                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{49 8b d0}
0082h xor rax,rdx                             ; XOR r64, r/m64 || REX.W 33 /r || encoded[3]{48 33 c2}
0085h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0088h jmp short 00d5h                         ; JMP rel8 || EB cb || encoded[2]{eb 4b}
008ah mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
008dh jmp short 00d5h                         ; JMP rel8 || EB cb || encoded[2]{eb 46}
008fh mov rax,r8                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{49 8b c0}
0092h jmp short 00d5h                         ; JMP rel8 || EB cb || encoded[2]{eb 41}
0094h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
0097h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
009ah jmp short 00d5h                         ; JMP rel8 || EB cb || encoded[2]{eb 39}
009ch mov rax,r8                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{49 8b c0}
009fh not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
00a2h jmp short 00d5h                         ; JMP rel8 || EB cb || encoded[2]{eb 31}
00a4h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
00a7h mov rdx,r8                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{49 8b d0}
00aah mov r8,rdx                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c2}
00adh not r8                                  ; NOT r/m64 || REX.W F7 /2 || encoded[3]{49 f7 d0}
00b0h or rax,r8                               ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{49 0b c0}
00b3h jmp short 00d5h                         ; JMP rel8 || EB cb || encoded[2]{eb 20}
00b5h andn rax,rdx,r8                         ; ANDN r64a, r64b, r/m64 || VEX.LZ.0F38.W1 F2 /r || encoded[5]{c4 c2 e8 f2 c0}
00bah jmp short 00d5h                         ; JMP rel8 || EB cb || encoded[2]{eb 19}
00bch mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
00bfh mov rdx,r8                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{49 8b d0}
00c2h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
00c5h or rax,rdx                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b c2}
00c8h jmp short 00d5h                         ; JMP rel8 || EB cb || encoded[2]{eb 0b}
00cah mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
00cdh mov rcx,r8                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{49 8b c8}
00d0h andn rax,rcx,rax                        ; ANDN r64a, r64b, r/m64 || VEX.LZ.0F38.W1 F2 /r || encoded[5]{c4 e2 f0 f2 c0}
00d5h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
00d9h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
00dah pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
00dbh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
00dch pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
00ddh ret                                     ; RET || C3 || encoded[1]{c3}
00deh mov rcx,7ff7c735c978h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 78 c9 35 c7 f7 7f 00 00}
00e8h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 93 97 d4 5e}
00edh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
00f0h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
00f4h mov rcx,7ff7c635a678h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 78 a6 35 c6 f7 7f 00 00}
00feh call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bd 1a cf 5e}
0103h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0106h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0110h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6b 97 d4 5e}
0115h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
0118h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
011dh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0127h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 54 30 e7 5e}
012ch mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
012fh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0132h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 29 57 24 ff}
0137h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0139h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 8a 2e 24 ff}
013eh mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0141h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0144h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0147h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bc 6b 22 ff}
014ch mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
014fh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0152h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 79 ba 24 ff}
0157h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
015ah call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 71 e3 cb 5e}
015fh int 3                                   ; INT3 || CC || encoded[1]{cc}
0160h xor al,0                                ; XOR AL, imm8 || 34 ib || encoded[2]{34 00}
0162h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0164h cmp eax,[rax]                           ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b 00}
0166h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0168h rol byte ptr [rax],0                    ; ROL r/m8, imm8 || C0 /0 ib || encoded[3]{c0 00 00}
016bh add [rax-55000000h],al                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 80 00 00 00 ab}
0171h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0173h add [rbp+67000000h],al                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 85 00 00 00 67}
0179h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
017bh add [rcx],dl                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 51 00}
017eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0180h pop rcx                                 ; POP r64 || 58+ro || encoded[1]{59}
0181h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0183h add [rdx],dh                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 72 00}
0186h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0188h xchg edx,eax                            ; XCHG r32, EAX || o32 90+rd || encoded[1]{92}
0189h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
018bh add [rdx-76000000h],bl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 9a 00 00 00 8a}
0191h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0193h add [rdx+46000000h],dh                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 b2 00 00 00 46}
0199h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
019bh add [rip+19000000h],ah                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 25 00 00 00 19}
01a1h or [rip+4420800h],al                    ; OR r/m8, r8 || 08 /r || encoded[6]{08 05 00 08 42 04}
01a7h xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
01a9h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
01aah add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
01adh jo short 01afh                          ; JO rel8 || 70 cb || encoded[2]{70 00}
01afh (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; long eval<long>(BinaryBitLogicKind:byte kind, long a, long b)
; eval_g[64i](BinaryBitLogicKind~8u,64i,64i)[433] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 c6 83 f8 0f 0f 87 c7 00 00 00 8b c0 48 8d 0d 40 01 00 00 8b 0c 81 4c 8d 0d e0 ff ff ff 49 03 c9 ff e1 48 b8 ff ff ff ff ff ff ff ff e9 97 00 00 00 33 c0 e9 90 00 00 00 49 23 d0 48 8b c2 e9 85 00 00 00 48 8b c2 49 23 c0 48 f7 d0 eb 7a 48 8b c2 49 0b c0 eb 72 48 8b c2 49 8b d0 48 0b c2 48 f7 d0 eb 64 48 8b c2 49 8b d0 48 33 c2 eb 59 48 8b c2 49 8b d0 48 33 c2 48 f7 d0 eb 4b 48 8b c2 eb 46 49 8b c0 eb 41 48 8b c2 48 f7 d0 eb 39 49 8b c0 48 f7 d0 eb 31 48 8b c2 49 8b d0 4c 8b c2 49 f7 d0 49 0b c0 eb 20 c4 c2 e8 f2 c0 eb 19 48 8b c2 49 8b d0 48 f7 d0 48 0b c2 eb 0b 48 8b c2 49 8b c8 c4 e2 f0 f2 c0 48 83 c4 28 5b 5d 5e 5f c3 48 b9 78 c9 35 c7 f7 7f 00 00 e8 d3 95 d4 5e 48 8b f8 40 88 77 08 48 b9 a8 9e 35 c6 f7 7f 00 00 e8 fd 18 cf 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 ab 95 d4 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 94 2e e7 5e 48 8b e8 48 8b ce e8 69 55 24 ff 8b c8 e8 ca 2c 24 ff 4c 8b c0 48 8b cd 48 8b d7 e8 fc 69 22 ff 48 8b d0 48 8b cb e8 b9 b8 24 ff 48 8b cb e8 b1 e1 cb 5e cc 34 00 00 00 3b 00 00 00 c0 00 00 00 80 00 00 00 ab 00 00 00 85 00 00 00 67 00 00 00 51 00 00 00 59 00 00 00 72 00 00 00 92 00 00 00 9a 00 00 00 8a 00 00 00 b2 00 00 00 46 00 00 00 25 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx eax,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 c6}
000eh cmp eax,0fh                             ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f8 0f}
0011h ja near ptr 00deh                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 c7 00 00 00}
0017h mov eax,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c0}
0019h lea rcx,[rip+140h]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 0d 40 01 00 00}
0020h mov ecx,[rcx+rax*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 0c 81}
0023h lea r9,[rip-20h]                        ; LEA r64, m || REX.W 8D /r || encoded[7]{4c 8d 0d e0 ff ff ff}
002ah add rcx,r9                              ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{49 03 c9}
002dh jmp rcx                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e1}
002fh mov rax,0ffffffffffffffffh              ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 ff ff ff ff ff ff ff ff}
0039h jmp near ptr 00d5h                      ; JMP rel32 || E9 cd || encoded[5]{e9 97 00 00 00}
003eh xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0040h jmp near ptr 00d5h                      ; JMP rel32 || E9 cd || encoded[5]{e9 90 00 00 00}
0045h and rdx,r8                              ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{49 23 d0}
0048h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
004bh jmp near ptr 00d5h                      ; JMP rel32 || E9 cd || encoded[5]{e9 85 00 00 00}
0050h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
0053h and rax,r8                              ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{49 23 c0}
0056h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0059h jmp short 00d5h                         ; JMP rel8 || EB cb || encoded[2]{eb 7a}
005bh mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
005eh or rax,r8                               ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{49 0b c0}
0061h jmp short 00d5h                         ; JMP rel8 || EB cb || encoded[2]{eb 72}
0063h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
0066h mov rdx,r8                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{49 8b d0}
0069h or rax,rdx                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b c2}
006ch not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
006fh jmp short 00d5h                         ; JMP rel8 || EB cb || encoded[2]{eb 64}
0071h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
0074h mov rdx,r8                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{49 8b d0}
0077h xor rax,rdx                             ; XOR r64, r/m64 || REX.W 33 /r || encoded[3]{48 33 c2}
007ah jmp short 00d5h                         ; JMP rel8 || EB cb || encoded[2]{eb 59}
007ch mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
007fh mov rdx,r8                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{49 8b d0}
0082h xor rax,rdx                             ; XOR r64, r/m64 || REX.W 33 /r || encoded[3]{48 33 c2}
0085h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0088h jmp short 00d5h                         ; JMP rel8 || EB cb || encoded[2]{eb 4b}
008ah mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
008dh jmp short 00d5h                         ; JMP rel8 || EB cb || encoded[2]{eb 46}
008fh mov rax,r8                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{49 8b c0}
0092h jmp short 00d5h                         ; JMP rel8 || EB cb || encoded[2]{eb 41}
0094h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
0097h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
009ah jmp short 00d5h                         ; JMP rel8 || EB cb || encoded[2]{eb 39}
009ch mov rax,r8                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{49 8b c0}
009fh not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
00a2h jmp short 00d5h                         ; JMP rel8 || EB cb || encoded[2]{eb 31}
00a4h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
00a7h mov rdx,r8                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{49 8b d0}
00aah mov r8,rdx                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c2}
00adh not r8                                  ; NOT r/m64 || REX.W F7 /2 || encoded[3]{49 f7 d0}
00b0h or rax,r8                               ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{49 0b c0}
00b3h jmp short 00d5h                         ; JMP rel8 || EB cb || encoded[2]{eb 20}
00b5h andn rax,rdx,r8                         ; ANDN r64a, r64b, r/m64 || VEX.LZ.0F38.W1 F2 /r || encoded[5]{c4 c2 e8 f2 c0}
00bah jmp short 00d5h                         ; JMP rel8 || EB cb || encoded[2]{eb 19}
00bch mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
00bfh mov rdx,r8                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{49 8b d0}
00c2h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
00c5h or rax,rdx                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b c2}
00c8h jmp short 00d5h                         ; JMP rel8 || EB cb || encoded[2]{eb 0b}
00cah mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
00cdh mov rcx,r8                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{49 8b c8}
00d0h andn rax,rcx,rax                        ; ANDN r64a, r64b, r/m64 || VEX.LZ.0F38.W1 F2 /r || encoded[5]{c4 e2 f0 f2 c0}
00d5h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
00d9h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
00dah pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
00dbh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
00dch pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
00ddh ret                                     ; RET || C3 || encoded[1]{c3}
00deh mov rcx,7ff7c735c978h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 78 c9 35 c7 f7 7f 00 00}
00e8h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d3 95 d4 5e}
00edh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
00f0h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
00f4h mov rcx,7ff7c6359ea8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 a8 9e 35 c6 f7 7f 00 00}
00feh call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fd 18 cf 5e}
0103h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0106h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0110h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ab 95 d4 5e}
0115h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
0118h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
011dh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0127h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 94 2e e7 5e}
012ch mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
012fh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0132h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 69 55 24 ff}
0137h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0139h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ca 2c 24 ff}
013eh mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0141h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0144h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0147h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fc 69 22 ff}
014ch mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
014fh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0152h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b9 b8 24 ff}
0157h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
015ah call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b1 e1 cb 5e}
015fh int 3                                   ; INT3 || CC || encoded[1]{cc}
0160h xor al,0                                ; XOR AL, imm8 || 34 ib || encoded[2]{34 00}
0162h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0164h cmp eax,[rax]                           ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b 00}
0166h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0168h rol byte ptr [rax],0                    ; ROL r/m8, imm8 || C0 /0 ib || encoded[3]{c0 00 00}
016bh add [rax-55000000h],al                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 80 00 00 00 ab}
0171h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0173h add [rbp+67000000h],al                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 85 00 00 00 67}
0179h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
017bh add [rcx],dl                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 51 00}
017eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0180h pop rcx                                 ; POP r64 || 58+ro || encoded[1]{59}
0181h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0183h add [rdx],dh                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 72 00}
0186h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0188h xchg edx,eax                            ; XCHG r32, EAX || o32 90+rd || encoded[1]{92}
0189h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
018bh add [rdx-76000000h],bl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 9a 00 00 00 8a}
0191h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0193h add [rdx+46000000h],dh                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 b2 00 00 00 46}
0199h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
019bh add [rip+19000000h],ah                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 25 00 00 00 19}
01a1h or [rip+4420800h],al                    ; OR r/m8, r8 || 08 /r || encoded[6]{08 05 00 08 42 04}
01a7h xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
01a9h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
01aah add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
01adh jo short 01afh                          ; JO rel8 || 70 cb || encoded[2]{70 00}
01afh (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; byte eval<byte>(UnaryBitLogicKind:byte kind, byte a)
; eval_g[8u](UnaryBitLogicKind~8u,8u)[201] = {57 56 55 53 48 83 ec 28 8b f1 40 80 fe 01 74 12 40 80 fe 02 75 1d 0f b6 c2 48 83 c4 28 5b 5d 5e 5f c3 0f b6 c2 f7 d0 0f b6 c0 48 83 c4 28 5b 5d 5e 5f c3 48 b9 20 c6 35 c7 f7 7f 00 00 e8 be 94 d4 5e 48 8b f8 40 88 77 08 48 b9 58 77 35 c6 f7 7f 00 00 e8 e8 17 cf 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 96 94 d4 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 7f 2d e7 5e 48 8b e8 48 8b ce e8 54 54 24 ff 8b c8 e8 b5 2b 24 ff 4c 8b c0 48 8b cd 48 8b d7 e8 e7 68 22 ff 48 8b d0 48 8b cb e8 a4 b7 24 ff 48 8b cb e8 9c e0 cb 5e cc 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah cmp sil,1                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 01}
000eh je short 0022h                          ; JE rel8 || 74 cb || encoded[2]{74 12}
0010h cmp sil,2                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 02}
0014h jne short 0033h                         ; JNE rel8 || 75 cb || encoded[2]{75 1d}
0016h movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
0019h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
001dh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
001eh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
001fh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0020h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0021h ret                                     ; RET || C3 || encoded[1]{c3}
0022h movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
0025h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0027h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
002ah add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
002eh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
002fh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0030h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0031h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0032h ret                                     ; RET || C3 || encoded[1]{c3}
0033h mov rcx,7ff7c735c620h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 c6 35 c7 f7 7f 00 00}
003dh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 be 94 d4 5e}
0042h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0045h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0049h mov rcx,7ff7c6357758h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 58 77 35 c6 f7 7f 00 00}
0053h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e8 17 cf 5e}
0058h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
005bh mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0065h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 96 94 d4 5e}
006ah mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
006dh mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
0072h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
007ch call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7f 2d e7 5e}
0081h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
0084h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0087h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 54 54 24 ff}
008ch mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
008eh call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b5 2b 24 ff}
0093h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0096h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0099h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
009ch call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e7 68 22 ff}
00a1h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
00a4h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
00a7h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a4 b7 24 ff}
00ach mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
00afh call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9c e0 cb 5e}
00b4h int 3                                   ; INT3 || CC || encoded[1]{cc}
00b5h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
00b7h add [rcx],bl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 19}
00b9h or [rip+4420800h],al                    ; OR r/m8, r8 || 08 /r || encoded[6]{08 05 00 08 42 04}
00bfh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
00c1h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
00c2h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
00c5h jo short 00c7h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
00c7h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; sbyte eval<sbyte>(UnaryBitLogicKind:byte kind, sbyte a)
; eval_g[8i](UnaryBitLogicKind~8u,8i)[201] = {57 56 55 53 48 83 ec 28 8b f1 40 80 fe 01 74 13 40 80 fe 02 75 20 48 0f be c2 48 83 c4 28 5b 5d 5e 5f c3 48 0f be c2 f7 d0 48 0f be c0 48 83 c4 28 5b 5d 5e 5f c3 48 b9 20 c6 35 c7 f7 7f 00 00 e8 db 93 d4 5e 48 8b f8 40 88 77 08 48 b9 68 6f 35 c6 f7 7f 00 00 e8 05 17 cf 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 b3 93 d4 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 9c 2c e7 5e 48 8b e8 48 8b ce e8 71 53 24 ff 8b c8 e8 d2 2a 24 ff 4c 8b c0 48 8b cd 48 8b d7 e8 04 68 22 ff 48 8b d0 48 8b cb e8 c1 b6 24 ff 48 8b cb e8 b9 df cb 5e cc 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah cmp sil,1                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 01}
000eh je short 0023h                          ; JE rel8 || 74 cb || encoded[2]{74 13}
0010h cmp sil,2                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 02}
0014h jne short 0036h                         ; JNE rel8 || 75 cb || encoded[2]{75 20}
0016h movsx rax,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c2}
001ah add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
001eh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
001fh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0020h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0021h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0022h ret                                     ; RET || C3 || encoded[1]{c3}
0023h movsx rax,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c2}
0027h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0029h movsx rax,al                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c0}
002dh add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0031h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0032h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0033h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0034h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0035h ret                                     ; RET || C3 || encoded[1]{c3}
0036h mov rcx,7ff7c735c620h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 c6 35 c7 f7 7f 00 00}
0040h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 db 93 d4 5e}
0045h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0048h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
004ch mov rcx,7ff7c6356f68h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 68 6f 35 c6 f7 7f 00 00}
0056h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 05 17 cf 5e}
005bh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
005eh mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0068h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b3 93 d4 5e}
006dh mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
0070h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
0075h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
007fh call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9c 2c e7 5e}
0084h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
0087h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
008ah call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 71 53 24 ff}
008fh mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0091h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d2 2a 24 ff}
0096h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0099h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
009ch mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
009fh call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 04 68 22 ff}
00a4h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
00a7h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
00aah call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c1 b6 24 ff}
00afh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
00b2h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b9 df cb 5e}
00b7h int 3                                   ; INT3 || CC || encoded[1]{cc}
00b8h sbb [rax],ecx                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 08}
00bah add eax,4420800h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 08 42 04}
00bfh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
00c1h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
00c2h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
00c5h jo short 00c7h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
00c7h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; ushort eval<ushort>(UnaryBitLogicKind:byte kind, ushort a)
; eval_g[16u](UnaryBitLogicKind~8u,16u)[201] = {57 56 55 53 48 83 ec 28 8b f1 40 80 fe 01 74 12 40 80 fe 02 75 1d 0f b7 c2 48 83 c4 28 5b 5d 5e 5f c3 0f b7 c2 f7 d0 0f b7 c0 48 83 c4 28 5b 5d 5e 5f c3 48 b9 20 c6 35 c7 f7 7f 00 00 e8 fe 92 d4 5e 48 8b f8 40 88 77 08 48 b9 38 87 35 c6 f7 7f 00 00 e8 28 16 cf 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 d6 92 d4 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 bf 2b e7 5e 48 8b e8 48 8b ce e8 94 52 24 ff 8b c8 e8 f5 29 24 ff 4c 8b c0 48 8b cd 48 8b d7 e8 27 67 22 ff 48 8b d0 48 8b cb e8 e4 b5 24 ff 48 8b cb e8 dc de cb 5e cc 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah cmp sil,1                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 01}
000eh je short 0022h                          ; JE rel8 || 74 cb || encoded[2]{74 12}
0010h cmp sil,2                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 02}
0014h jne short 0033h                         ; JNE rel8 || 75 cb || encoded[2]{75 1d}
0016h movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
0019h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
001dh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
001eh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
001fh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0020h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0021h ret                                     ; RET || C3 || encoded[1]{c3}
0022h movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
0025h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0027h movzx eax,ax                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c0}
002ah add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
002eh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
002fh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0030h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0031h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0032h ret                                     ; RET || C3 || encoded[1]{c3}
0033h mov rcx,7ff7c735c620h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 c6 35 c7 f7 7f 00 00}
003dh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fe 92 d4 5e}
0042h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0045h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0049h mov rcx,7ff7c6358738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 38 87 35 c6 f7 7f 00 00}
0053h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 28 16 cf 5e}
0058h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
005bh mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0065h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d6 92 d4 5e}
006ah mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
006dh mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
0072h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
007ch call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bf 2b e7 5e}
0081h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
0084h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0087h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 94 52 24 ff}
008ch mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
008eh call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f5 29 24 ff}
0093h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0096h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0099h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
009ch call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 27 67 22 ff}
00a1h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
00a4h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
00a7h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e4 b5 24 ff}
00ach mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
00afh call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 dc de cb 5e}
00b4h int 3                                   ; INT3 || CC || encoded[1]{cc}
00b5h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
00b7h add [rcx],bl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 19}
00b9h or [rip+4420800h],al                    ; OR r/m8, r8 || 08 /r || encoded[6]{08 05 00 08 42 04}
00bfh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
00c1h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
00c2h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
00c5h jo short 00c7h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
00c7h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; short eval<short>(UnaryBitLogicKind:byte kind, short a)
; eval_g[16i](UnaryBitLogicKind~8u,16i)[201] = {57 56 55 53 48 83 ec 28 8b f1 40 80 fe 01 74 13 40 80 fe 02 75 20 48 0f bf c2 48 83 c4 28 5b 5d 5e 5f c3 48 0f bf c2 f7 d0 48 0f bf c0 48 83 c4 28 5b 5d 5e 5f c3 48 b9 20 c6 35 c7 f7 7f 00 00 e8 1b 92 d4 5e 48 8b f8 40 88 77 08 48 b9 48 7f 35 c6 f7 7f 00 00 e8 45 15 cf 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 f3 91 d4 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 dc 2a e7 5e 48 8b e8 48 8b ce e8 b1 51 24 ff 8b c8 e8 12 29 24 ff 4c 8b c0 48 8b cd 48 8b d7 e8 44 66 22 ff 48 8b d0 48 8b cb e8 01 b5 24 ff 48 8b cb e8 f9 dd cb 5e cc 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah cmp sil,1                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 01}
000eh je short 0023h                          ; JE rel8 || 74 cb || encoded[2]{74 13}
0010h cmp sil,2                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 02}
0014h jne short 0036h                         ; JNE rel8 || 75 cb || encoded[2]{75 20}
0016h movsx rax,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c2}
001ah add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
001eh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
001fh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0020h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0021h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0022h ret                                     ; RET || C3 || encoded[1]{c3}
0023h movsx rax,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c2}
0027h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0029h movsx rax,ax                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c0}
002dh add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0031h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0032h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0033h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0034h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0035h ret                                     ; RET || C3 || encoded[1]{c3}
0036h mov rcx,7ff7c735c620h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 c6 35 c7 f7 7f 00 00}
0040h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1b 92 d4 5e}
0045h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0048h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
004ch mov rcx,7ff7c6357f48h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 48 7f 35 c6 f7 7f 00 00}
0056h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 45 15 cf 5e}
005bh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
005eh mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0068h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f3 91 d4 5e}
006dh mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
0070h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
0075h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
007fh call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 dc 2a e7 5e}
0084h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
0087h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
008ah call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b1 51 24 ff}
008fh mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0091h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 12 29 24 ff}
0096h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0099h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
009ch mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
009fh call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 44 66 22 ff}
00a4h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
00a7h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
00aah call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 01 b5 24 ff}
00afh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
00b2h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f9 dd cb 5e}
00b7h int 3                                   ; INT3 || CC || encoded[1]{cc}
00b8h sbb [rax],ecx                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 08}
00bah add eax,4420800h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 08 42 04}
00bfh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
00c1h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
00c2h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
00c5h jo short 00c7h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
00c7h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; uint eval<uint>(UnaryBitLogicKind:byte kind, uint a)
; eval_g[32u](UnaryBitLogicKind~8u,32u)[193] = {57 56 55 53 48 83 ec 28 8b f1 40 80 fe 01 74 11 40 80 fe 02 75 18 8b c2 48 83 c4 28 5b 5d 5e 5f c3 8b c2 f7 d0 48 83 c4 28 5b 5d 5e 5f c3 48 b9 20 c6 35 c7 f7 7f 00 00 e8 43 91 d4 5e 48 8b f8 40 88 77 08 48 b9 d8 96 35 c6 f7 7f 00 00 e8 6d 14 cf 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 1b 91 d4 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 04 2a e7 5e 48 8b e8 48 8b ce e8 d9 50 24 ff 8b c8 e8 3a 28 24 ff 4c 8b c0 48 8b cd 48 8b d7 e8 6c 65 22 ff 48 8b d0 48 8b cb e8 29 b4 24 ff 48 8b cb e8 21 dd cb 5e cc 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah cmp sil,1                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 01}
000eh je short 0021h                          ; JE rel8 || 74 cb || encoded[2]{74 11}
0010h cmp sil,2                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 02}
0014h jne short 002eh                         ; JNE rel8 || 75 cb || encoded[2]{75 18}
0016h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
0018h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
001ch pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
001dh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
001eh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
001fh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0020h ret                                     ; RET || C3 || encoded[1]{c3}
0021h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
0023h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0025h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0029h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
002ah pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
002bh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
002ch pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
002dh ret                                     ; RET || C3 || encoded[1]{c3}
002eh mov rcx,7ff7c735c620h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 c6 35 c7 f7 7f 00 00}
0038h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 43 91 d4 5e}
003dh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0040h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0044h mov rcx,7ff7c63596d8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d8 96 35 c6 f7 7f 00 00}
004eh call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6d 14 cf 5e}
0053h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0056h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0060h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1b 91 d4 5e}
0065h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
0068h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
006dh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0077h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 04 2a e7 5e}
007ch mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
007fh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0082h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d9 50 24 ff}
0087h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0089h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3a 28 24 ff}
008eh mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0091h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0094h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0097h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6c 65 22 ff}
009ch mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
009fh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
00a2h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 29 b4 24 ff}
00a7h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
00aah call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 21 dd cb 5e}
00afh int 3                                   ; INT3 || CC || encoded[1]{cc}
00b0h sbb [rax],ecx                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 08}
00b2h add eax,4420800h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 08 42 04}
00b7h xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
00b9h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
00bah add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
00bdh jo short 00bfh                          ; JO rel8 || 70 cb || encoded[2]{70 00}
00bfh (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; int eval<int>(UnaryBitLogicKind:byte kind, int a)
; eval_g[32i](UnaryBitLogicKind~8u,32i)[193] = {57 56 55 53 48 83 ec 28 8b f1 40 80 fe 01 74 11 40 80 fe 02 75 18 8b c2 48 83 c4 28 5b 5d 5e 5f c3 8b c2 f7 d0 48 83 c4 28 5b 5d 5e 5f c3 48 b9 20 c6 35 c7 f7 7f 00 00 e8 73 90 d4 5e 48 8b f8 40 88 77 08 48 b9 08 8f 35 c6 f7 7f 00 00 e8 9d 13 cf 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 4b 90 d4 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 34 29 e7 5e 48 8b e8 48 8b ce e8 09 50 24 ff 8b c8 e8 6a 27 24 ff 4c 8b c0 48 8b cd 48 8b d7 e8 9c 64 22 ff 48 8b d0 48 8b cb e8 59 b3 24 ff 48 8b cb e8 51 dc cb 5e cc 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah cmp sil,1                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 01}
000eh je short 0021h                          ; JE rel8 || 74 cb || encoded[2]{74 11}
0010h cmp sil,2                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 02}
0014h jne short 002eh                         ; JNE rel8 || 75 cb || encoded[2]{75 18}
0016h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
0018h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
001ch pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
001dh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
001eh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
001fh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0020h ret                                     ; RET || C3 || encoded[1]{c3}
0021h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
0023h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0025h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0029h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
002ah pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
002bh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
002ch pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
002dh ret                                     ; RET || C3 || encoded[1]{c3}
002eh mov rcx,7ff7c735c620h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 c6 35 c7 f7 7f 00 00}
0038h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 73 90 d4 5e}
003dh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0040h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0044h mov rcx,7ff7c6358f08h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 08 8f 35 c6 f7 7f 00 00}
004eh call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9d 13 cf 5e}
0053h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0056h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0060h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 4b 90 d4 5e}
0065h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
0068h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
006dh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0077h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 34 29 e7 5e}
007ch mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
007fh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0082h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 09 50 24 ff}
0087h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0089h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6a 27 24 ff}
008eh mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0091h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0094h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0097h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9c 64 22 ff}
009ch mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
009fh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
00a2h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 59 b3 24 ff}
00a7h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
00aah call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 51 dc cb 5e}
00afh int 3                                   ; INT3 || CC || encoded[1]{cc}
00b0h sbb [rax],ecx                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 08}
00b2h add eax,4420800h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 08 42 04}
00b7h xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
00b9h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
00bah add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
00bdh jo short 00bfh                          ; JO rel8 || 70 cb || encoded[2]{70 00}
00bfh (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; ulong eval<ulong>(UnaryBitLogicKind:byte kind, ulong a)
; eval_g[64u](UnaryBitLogicKind~8u,64u)[809] = {57 56 55 53 48 83 ec 28 8b f1 40 80 fe 01 74 12 40 80 fe 02 75 1b 48 8b c2 48 83 c4 28 5b 5d 5e 5f c3 48 8b c2 48 f7 d0 48 83 c4 28 5b 5d 5e 5f c3 48 b9 20 c6 35 c7 f7 7f 00 00 e8 90 8b d4 5e 48 8b f8 40 88 77 08 48 b9 78 a6 35 c6 f7 7f 00 00 e8 ba 0e cf 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 68 8b d4 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 51 24 e7 5e 48 8b e8 48 8b ce e8 26 4b 24 ff 8b c8 e8 87 22 24 ff 4c 8b c0 48 8b cd 48 8b d7 e8 b9 5f 22 ff 48 8b d0 48 8b cb e8 76 ae 24 ff 48 8b cb e8 6e d7 cb 5e cc 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40 00 00 00 18 d8 3b c7 f7 7f 00 00 57 56 55 53 48 83 ec 28 8b f1 40 80 fe 01 74 12 40 80 fe 02 75 1b 48 8b c2 48 83 c4 28 5b 5d 5e 5f c3 48 8b c2 48 f7 d0 48 83 c4 28 5b 5d 5e 5f c3 48 b9 20 c6 35 c7 f7 7f 00 00 e8 c0 8a d4 5e 48 8b f8 40 88 77 08 48 b9 a8 9e 35 c6 f7 7f 00 00 e8 ea 0d cf 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 98 8a d4 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 81 23 e7 5e 48 8b e8 48 8b ce e8 56 4a 24 ff 8b c8 e8 b7 21 24 ff 4c 8b c0 48 8b cd 48 8b d7 e8 e9 5e 22 ff 48 8b d0 48 8b cb e8 a6 ad 24 ff 48 8b cb e8 9e d6 cb 5e cc 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40 00 00 00 00 dc 3b c7 f7 7f 00 00 57 56 55 53 48 83 ec 28 8b f1 40 0f b6 c6 ff c8 83 f8 05 0f 87 ee 00 00 00 8b c0 48 8d 0d 6e 01 00 00 8b 0c 81 4c 8d 0d de ff ff ff 49 03 c9 ff e1 0f b6 d2 45 0f b6 c0 0f b6 c2 41 3b c0 0f 94 c0 0f b6 c0 85 c0 75 04 33 c0 eb 05 b8 ff 00 00 00 e9 a5 00 00 00 0f b6 c2 41 0f b6 d0 44 0f b6 c0 44 3b c2 0f 95 c0 0f b6 c0 85 c0 75 04 33 c0 eb 05 b8 ff 00 00 00 e9 7f 00 00 00 0f b6 c2 41 0f b6 d0 3b c2 41 0f 92 c0 45 0f b6 c0 45 85 c0 75 04 33 c0 eb 05 b8 ff 00 00 00 eb 5e 0f b6 c2 41 0f b6 d0 3b c2 41 0f 96 c0 45 0f b6 c0 45 85 c0 75 04 33 c0 eb 05 b8 ff 00 00 00 eb 3d 0f b6 c2 41 0f b6 d0 3b c2 41 0f 97 c0 45 0f b6 c0 45 85 c0 75 04 33 c0 eb 05 b8 ff 00 00 00 eb 1c 0f b6 c2 41 0f b6 c8 3b c1 0f 93 c0 0f b6 c0 85 c0 75 04 33 c0 eb 05 b8 ff 00 00 00 0f b6 c0 48 83 c4 28 5b 5d 5e 5f c3 48 b9 30 c7 3c c7 f7 7f 00 00 e8 1a 89 d4 5e 48 8b f8 40 88 77 08 48 b9 58 77 35 c6 f7 7f 00 00 e8 44 0c cf 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 f2 88 d4 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 db 21 e7 5e 48 8b e8 48 8b ce e8 b0 48 24 ff 8b c8 e8 11 20 24 ff 4c 8b c0 48 8b cd 48 8b d7 e8 43 5d 22 ff 48 8b d0 48 8b cb e8 00 ac 24 ff 48 8b cb e8 f8 d4 cb 5e cc}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah cmp sil,1                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 01}
000eh je short 0022h                          ; JE rel8 || 74 cb || encoded[2]{74 12}
0010h cmp sil,2                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 02}
0014h jne short 0031h                         ; JNE rel8 || 75 cb || encoded[2]{75 1b}
0016h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
0019h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
001dh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
001eh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
001fh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0020h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0021h ret                                     ; RET || C3 || encoded[1]{c3}
0022h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
0025h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0028h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
002ch pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
002dh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
002eh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
002fh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0030h ret                                     ; RET || C3 || encoded[1]{c3}
0031h mov rcx,7ff7c735c620h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 c6 35 c7 f7 7f 00 00}
003bh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 90 8b d4 5e}
0040h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0043h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0047h mov rcx,7ff7c635a678h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 78 a6 35 c6 f7 7f 00 00}
0051h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ba 0e cf 5e}
0056h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0059h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0063h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 68 8b d4 5e}
0068h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
006bh mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
0070h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
007ah call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 51 24 e7 5e}
007fh mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
0082h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0085h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 26 4b 24 ff}
008ah mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
008ch call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 87 22 24 ff}
0091h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0094h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0097h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
009ah call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b9 5f 22 ff}
009fh mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
00a2h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
00a5h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 76 ae 24 ff}
00aah mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
00adh call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6e d7 cb 5e}
00b2h int 3                                   ; INT3 || CC || encoded[1]{cc}
00b3h add [rcx],bl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 19}
00b5h or [rip+4420800h],al                    ; OR r/m8, r8 || 08 /r || encoded[6]{08 05 00 08 42 04}
00bbh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
00bdh push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
00beh add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
00c1h jo short 00c3h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
00c3h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 40 00}
00c6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
00c8h sbb al,bl                               ; SBB r/m8, r8 || 18 /r || encoded[2]{18 d8}
00cah cmp eax,edi                             ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b c7}
00cch idiv dword ptr [rdi]                    ; IDIV r/m32 || o32 F7 /7 || encoded[3]{f7 7f 00}
00cfh add [rdi+56h],dl                        ; ADD r/m8, r8 || 00 /r || encoded[3]{00 57 56}
00d2h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
00d3h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
00d4h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
00d8h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
00dah cmp sil,1                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 01}
00deh je short 00f2h                          ; JE rel8 || 74 cb || encoded[2]{74 12}
00e0h cmp sil,2                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 02}
00e4h jne short 0101h                         ; JNE rel8 || 75 cb || encoded[2]{75 1b}
00e6h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
00e9h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
00edh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
00eeh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
00efh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
00f0h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
00f1h ret                                     ; RET || C3 || encoded[1]{c3}
00f2h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
00f5h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
00f8h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
00fch pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
00fdh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
00feh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
00ffh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0100h ret                                     ; RET || C3 || encoded[1]{c3}
0101h mov rcx,7ff7c735c620h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 c6 35 c7 f7 7f 00 00}
010bh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c0 8a d4 5e}
0110h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0113h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0117h mov rcx,7ff7c6359ea8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 a8 9e 35 c6 f7 7f 00 00}
0121h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ea 0d cf 5e}
0126h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0129h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0133h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 98 8a d4 5e}
0138h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
013bh mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
0140h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
014ah call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 81 23 e7 5e}
014fh mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
0152h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0155h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 56 4a 24 ff}
015ah mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
015ch call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b7 21 24 ff}
0161h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0164h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0167h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
016ah call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e9 5e 22 ff}
016fh mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
0172h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0175h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a6 ad 24 ff}
017ah mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
017dh call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9e d6 cb 5e}
0182h int 3                                   ; INT3 || CC || encoded[1]{cc}
0183h add [rcx],bl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 19}
0185h or [rip+4420800h],al                    ; OR r/m8, r8 || 08 /r || encoded[6]{08 05 00 08 42 04}
018bh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
018dh push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
018eh add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
0191h jo short 0193h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
0193h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 40 00}
0196h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0198h add ah,bl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 dc}
019ah cmp eax,edi                             ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b c7}
019ch idiv dword ptr [rdi]                    ; IDIV r/m32 || o32 F7 /7 || encoded[3]{f7 7f 00}
019fh add [rdi+56h],dl                        ; ADD r/m8, r8 || 00 /r || encoded[3]{00 57 56}
01a2h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
01a3h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
01a4h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
01a8h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
01aah movzx eax,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 c6}
01aeh dec eax                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c8}
01b0h cmp eax,5                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f8 05}
01b3h ja near ptr 02a7h                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 ee 00 00 00}
01b9h mov eax,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c0}
01bbh lea rcx,[rip+16eh]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 0d 6e 01 00 00}
01c2h mov ecx,[rcx+rax*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 0c 81}
01c5h lea r9,[rip-22h]                        ; LEA r64, m || REX.W 8D /r || encoded[7]{4c 8d 0d de ff ff ff}
01cch add rcx,r9                              ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{49 03 c9}
01cfh jmp rcx                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e1}
01d1h movzx edx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 d2}
01d4h movzx r8d,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c0}
01d8h movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
01dbh cmp eax,r8d                             ; CMP r32, r/m32 || o32 3B /r || encoded[3]{41 3b c0}
01deh sete al                                 ; SETE r/m8 || 0F 94 /r || encoded[3]{0f 94 c0}
01e1h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
01e4h test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
01e6h jne short 01ech                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
01e8h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
01eah jmp short 01f1h                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
01ech mov eax,0ffh                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff 00 00 00}
01f1h jmp near ptr 029bh                      ; JMP rel32 || E9 cd || encoded[5]{e9 a5 00 00 00}
01f6h movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
01f9h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
01fdh movzx r8d,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{44 0f b6 c0}
0201h cmp r8d,edx                             ; CMP r32, r/m32 || o32 3B /r || encoded[3]{44 3b c2}
0204h setne al                                ; SETNE r/m8 || 0F 95 /r || encoded[3]{0f 95 c0}
0207h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
020ah test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
020ch jne short 0212h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
020eh xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0210h jmp short 0217h                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
0212h mov eax,0ffh                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff 00 00 00}
0217h jmp near ptr 029bh                      ; JMP rel32 || E9 cd || encoded[5]{e9 7f 00 00 00}
021ch movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
021fh movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0223h cmp eax,edx                             ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b c2}
0225h setb r8b                                ; SETB r/m8 || 0F 92 /r || encoded[4]{41 0f 92 c0}
0229h movzx r8d,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c0}
022dh test r8d,r8d                            ; TEST r/m32, r32 || o32 85 /r || encoded[3]{45 85 c0}
0230h jne short 0236h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
0232h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0234h jmp short 023bh                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
0236h mov eax,0ffh                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff 00 00 00}
023bh jmp short 029bh                         ; JMP rel8 || EB cb || encoded[2]{eb 5e}
023dh movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
0240h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0244h cmp eax,edx                             ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b c2}
0246h setbe r8b                               ; SETBE r/m8 || 0F 96 /r || encoded[4]{41 0f 96 c0}
024ah movzx r8d,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c0}
024eh test r8d,r8d                            ; TEST r/m32, r32 || o32 85 /r || encoded[3]{45 85 c0}
0251h jne short 0257h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
0253h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0255h jmp short 025ch                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
0257h mov eax,0ffh                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff 00 00 00}
025ch jmp short 029bh                         ; JMP rel8 || EB cb || encoded[2]{eb 3d}
025eh movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
0261h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0265h cmp eax,edx                             ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b c2}
0267h seta r8b                                ; SETA r/m8 || 0F 97 /r || encoded[4]{41 0f 97 c0}
026bh movzx r8d,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c0}
026fh test r8d,r8d                            ; TEST r/m32, r32 || o32 85 /r || encoded[3]{45 85 c0}
0272h jne short 0278h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
0274h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0276h jmp short 027dh                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
0278h mov eax,0ffh                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff 00 00 00}
027dh jmp short 029bh                         ; JMP rel8 || EB cb || encoded[2]{eb 1c}
027fh movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
0282h movzx ecx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c8}
0286h cmp eax,ecx                             ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b c1}
0288h setae al                                ; SETAE r/m8 || 0F 93 /r || encoded[3]{0f 93 c0}
028bh movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
028eh test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
0290h jne short 0296h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
0292h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0294h jmp short 029bh                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
0296h mov eax,0ffh                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff 00 00 00}
029bh movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
029eh add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
02a2h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
02a3h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
02a4h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
02a5h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
02a6h ret                                     ; RET || C3 || encoded[1]{c3}
02a7h mov rcx,7ff7c73cc730h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 c7 3c c7 f7 7f 00 00}
02b1h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1a 89 d4 5e}
02b6h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
02b9h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
02bdh mov rcx,7ff7c6357758h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 58 77 35 c6 f7 7f 00 00}
02c7h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 44 0c cf 5e}
02cch mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
02cfh mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
02d9h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f2 88 d4 5e}
02deh mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
02e1h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
02e6h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
02f0h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 db 21 e7 5e}
02f5h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
02f8h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
02fbh call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b0 48 24 ff}
0300h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0302h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 11 20 24 ff}
0307h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
030ah mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
030dh mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0310h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 43 5d 22 ff}
0315h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
0318h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
031bh call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 00 ac 24 ff}
0320h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0323h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f8 d4 cb 5e}
0328h int 3                                   ; INT3 || CC || encoded[1]{cc}
------------------------------------------------------------------------------------------------------------------------
; long eval<long>(UnaryBitLogicKind:byte kind, long a)
; eval_g[64i](UnaryBitLogicKind~8u,64i)[601] = {57 56 55 53 48 83 ec 28 8b f1 40 80 fe 01 74 12 40 80 fe 02 75 1b 48 8b c2 48 83 c4 28 5b 5d 5e 5f c3 48 8b c2 48 f7 d0 48 83 c4 28 5b 5d 5e 5f c3 48 b9 20 c6 35 c7 f7 7f 00 00 e8 c0 8a d4 5e 48 8b f8 40 88 77 08 48 b9 a8 9e 35 c6 f7 7f 00 00 e8 ea 0d cf 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 98 8a d4 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 81 23 e7 5e 48 8b e8 48 8b ce e8 56 4a 24 ff 8b c8 e8 b7 21 24 ff 4c 8b c0 48 8b cd 48 8b d7 e8 e9 5e 22 ff 48 8b d0 48 8b cb e8 a6 ad 24 ff 48 8b cb e8 9e d6 cb 5e cc 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40 00 00 00 00 dc 3b c7 f7 7f 00 00 57 56 55 53 48 83 ec 28 8b f1 40 0f b6 c6 ff c8 83 f8 05 0f 87 ee 00 00 00 8b c0 48 8d 0d 6e 01 00 00 8b 0c 81 4c 8d 0d de ff ff ff 49 03 c9 ff e1 0f b6 d2 45 0f b6 c0 0f b6 c2 41 3b c0 0f 94 c0 0f b6 c0 85 c0 75 04 33 c0 eb 05 b8 ff 00 00 00 e9 a5 00 00 00 0f b6 c2 41 0f b6 d0 44 0f b6 c0 44 3b c2 0f 95 c0 0f b6 c0 85 c0 75 04 33 c0 eb 05 b8 ff 00 00 00 e9 7f 00 00 00 0f b6 c2 41 0f b6 d0 3b c2 41 0f 92 c0 45 0f b6 c0 45 85 c0 75 04 33 c0 eb 05 b8 ff 00 00 00 eb 5e 0f b6 c2 41 0f b6 d0 3b c2 41 0f 96 c0 45 0f b6 c0 45 85 c0 75 04 33 c0 eb 05 b8 ff 00 00 00 eb 3d 0f b6 c2 41 0f b6 d0 3b c2 41 0f 97 c0 45 0f b6 c0 45 85 c0 75 04 33 c0 eb 05 b8 ff 00 00 00 eb 1c 0f b6 c2 41 0f b6 c8 3b c1 0f 93 c0 0f b6 c0 85 c0 75 04 33 c0 eb 05 b8 ff 00 00 00 0f b6 c0 48 83 c4 28 5b 5d 5e 5f c3 48 b9 30 c7 3c c7 f7 7f 00 00 e8 1a 89 d4 5e 48 8b f8 40 88 77 08 48 b9 58 77 35 c6 f7 7f 00 00 e8 44 0c cf 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 f2 88 d4 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 db 21 e7 5e 48 8b e8 48 8b ce e8 b0 48 24 ff 8b c8 e8 11 20 24 ff 4c 8b c0 48 8b cd 48 8b d7 e8 43 5d 22 ff 48 8b d0 48 8b cb e8 00 ac 24 ff 48 8b cb e8 f8 d4 cb 5e cc}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah cmp sil,1                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 01}
000eh je short 0022h                          ; JE rel8 || 74 cb || encoded[2]{74 12}
0010h cmp sil,2                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 02}
0014h jne short 0031h                         ; JNE rel8 || 75 cb || encoded[2]{75 1b}
0016h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
0019h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
001dh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
001eh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
001fh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0020h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0021h ret                                     ; RET || C3 || encoded[1]{c3}
0022h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
0025h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0028h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
002ch pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
002dh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
002eh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
002fh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0030h ret                                     ; RET || C3 || encoded[1]{c3}
0031h mov rcx,7ff7c735c620h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 c6 35 c7 f7 7f 00 00}
003bh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c0 8a d4 5e}
0040h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0043h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0047h mov rcx,7ff7c6359ea8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 a8 9e 35 c6 f7 7f 00 00}
0051h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ea 0d cf 5e}
0056h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0059h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0063h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 98 8a d4 5e}
0068h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
006bh mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
0070h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
007ah call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 81 23 e7 5e}
007fh mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
0082h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0085h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 56 4a 24 ff}
008ah mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
008ch call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b7 21 24 ff}
0091h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0094h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0097h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
009ah call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e9 5e 22 ff}
009fh mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
00a2h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
00a5h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a6 ad 24 ff}
00aah mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
00adh call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9e d6 cb 5e}
00b2h int 3                                   ; INT3 || CC || encoded[1]{cc}
00b3h add [rcx],bl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 19}
00b5h or [rip+4420800h],al                    ; OR r/m8, r8 || 08 /r || encoded[6]{08 05 00 08 42 04}
00bbh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
00bdh push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
00beh add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
00c1h jo short 00c3h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
00c3h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 40 00}
00c6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
00c8h add ah,bl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 dc}
00cah cmp eax,edi                             ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b c7}
00cch idiv dword ptr [rdi]                    ; IDIV r/m32 || o32 F7 /7 || encoded[3]{f7 7f 00}
00cfh add [rdi+56h],dl                        ; ADD r/m8, r8 || 00 /r || encoded[3]{00 57 56}
00d2h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
00d3h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
00d4h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
00d8h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
00dah movzx eax,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 c6}
00deh dec eax                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c8}
00e0h cmp eax,5                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f8 05}
00e3h ja near ptr 01d7h                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 ee 00 00 00}
00e9h mov eax,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c0}
00ebh lea rcx,[rip+16eh]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 0d 6e 01 00 00}
00f2h mov ecx,[rcx+rax*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 0c 81}
00f5h lea r9,[rip-22h]                        ; LEA r64, m || REX.W 8D /r || encoded[7]{4c 8d 0d de ff ff ff}
00fch add rcx,r9                              ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{49 03 c9}
00ffh jmp rcx                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e1}
0101h movzx edx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 d2}
0104h movzx r8d,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c0}
0108h movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
010bh cmp eax,r8d                             ; CMP r32, r/m32 || o32 3B /r || encoded[3]{41 3b c0}
010eh sete al                                 ; SETE r/m8 || 0F 94 /r || encoded[3]{0f 94 c0}
0111h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
0114h test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
0116h jne short 011ch                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
0118h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
011ah jmp short 0121h                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
011ch mov eax,0ffh                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff 00 00 00}
0121h jmp near ptr 01cbh                      ; JMP rel32 || E9 cd || encoded[5]{e9 a5 00 00 00}
0126h movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
0129h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
012dh movzx r8d,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{44 0f b6 c0}
0131h cmp r8d,edx                             ; CMP r32, r/m32 || o32 3B /r || encoded[3]{44 3b c2}
0134h setne al                                ; SETNE r/m8 || 0F 95 /r || encoded[3]{0f 95 c0}
0137h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
013ah test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
013ch jne short 0142h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
013eh xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0140h jmp short 0147h                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
0142h mov eax,0ffh                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff 00 00 00}
0147h jmp near ptr 01cbh                      ; JMP rel32 || E9 cd || encoded[5]{e9 7f 00 00 00}
014ch movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
014fh movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0153h cmp eax,edx                             ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b c2}
0155h setb r8b                                ; SETB r/m8 || 0F 92 /r || encoded[4]{41 0f 92 c0}
0159h movzx r8d,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c0}
015dh test r8d,r8d                            ; TEST r/m32, r32 || o32 85 /r || encoded[3]{45 85 c0}
0160h jne short 0166h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
0162h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0164h jmp short 016bh                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
0166h mov eax,0ffh                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff 00 00 00}
016bh jmp short 01cbh                         ; JMP rel8 || EB cb || encoded[2]{eb 5e}
016dh movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
0170h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0174h cmp eax,edx                             ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b c2}
0176h setbe r8b                               ; SETBE r/m8 || 0F 96 /r || encoded[4]{41 0f 96 c0}
017ah movzx r8d,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c0}
017eh test r8d,r8d                            ; TEST r/m32, r32 || o32 85 /r || encoded[3]{45 85 c0}
0181h jne short 0187h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
0183h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0185h jmp short 018ch                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
0187h mov eax,0ffh                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff 00 00 00}
018ch jmp short 01cbh                         ; JMP rel8 || EB cb || encoded[2]{eb 3d}
018eh movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
0191h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0195h cmp eax,edx                             ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b c2}
0197h seta r8b                                ; SETA r/m8 || 0F 97 /r || encoded[4]{41 0f 97 c0}
019bh movzx r8d,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c0}
019fh test r8d,r8d                            ; TEST r/m32, r32 || o32 85 /r || encoded[3]{45 85 c0}
01a2h jne short 01a8h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
01a4h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
01a6h jmp short 01adh                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
01a8h mov eax,0ffh                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff 00 00 00}
01adh jmp short 01cbh                         ; JMP rel8 || EB cb || encoded[2]{eb 1c}
01afh movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
01b2h movzx ecx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c8}
01b6h cmp eax,ecx                             ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b c1}
01b8h setae al                                ; SETAE r/m8 || 0F 93 /r || encoded[3]{0f 93 c0}
01bbh movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
01beh test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
01c0h jne short 01c6h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
01c2h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
01c4h jmp short 01cbh                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
01c6h mov eax,0ffh                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff 00 00 00}
01cbh movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
01ceh add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
01d2h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
01d3h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
01d4h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
01d5h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
01d6h ret                                     ; RET || C3 || encoded[1]{c3}
01d7h mov rcx,7ff7c73cc730h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 c7 3c c7 f7 7f 00 00}
01e1h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1a 89 d4 5e}
01e6h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
01e9h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
01edh mov rcx,7ff7c6357758h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 58 77 35 c6 f7 7f 00 00}
01f7h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 44 0c cf 5e}
01fch mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
01ffh mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0209h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f2 88 d4 5e}
020eh mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
0211h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
0216h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0220h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 db 21 e7 5e}
0225h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
0228h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
022bh call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b0 48 24 ff}
0230h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0232h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 11 20 24 ff}
0237h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
023ah mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
023dh mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0240h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 43 5d 22 ff}
0245h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
0248h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
024bh call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 00 ac 24 ff}
0250h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0253h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f8 d4 cb 5e}
0258h int 3                                   ; INT3 || CC || encoded[1]{cc}
------------------------------------------------------------------------------------------------------------------------
; byte eval<byte>(ComparisonKind:byte kind, byte a, byte b)
; eval_g[8u](ComparisonKind~8u,8u,8u)[393] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 c6 ff c8 83 f8 05 0f 87 ee 00 00 00 8b c0 48 8d 0d 6e 01 00 00 8b 0c 81 4c 8d 0d de ff ff ff 49 03 c9 ff e1 0f b6 d2 45 0f b6 c0 0f b6 c2 41 3b c0 0f 94 c0 0f b6 c0 85 c0 75 04 33 c0 eb 05 b8 ff 00 00 00 e9 a5 00 00 00 0f b6 c2 41 0f b6 d0 44 0f b6 c0 44 3b c2 0f 95 c0 0f b6 c0 85 c0 75 04 33 c0 eb 05 b8 ff 00 00 00 e9 7f 00 00 00 0f b6 c2 41 0f b6 d0 3b c2 41 0f 92 c0 45 0f b6 c0 45 85 c0 75 04 33 c0 eb 05 b8 ff 00 00 00 eb 5e 0f b6 c2 41 0f b6 d0 3b c2 41 0f 96 c0 45 0f b6 c0 45 85 c0 75 04 33 c0 eb 05 b8 ff 00 00 00 eb 3d 0f b6 c2 41 0f b6 d0 3b c2 41 0f 97 c0 45 0f b6 c0 45 85 c0 75 04 33 c0 eb 05 b8 ff 00 00 00 eb 1c 0f b6 c2 41 0f b6 c8 3b c1 0f 93 c0 0f b6 c0 85 c0 75 04 33 c0 eb 05 b8 ff 00 00 00 0f b6 c0 48 83 c4 28 5b 5d 5e 5f c3 48 b9 30 c7 3c c7 f7 7f 00 00 e8 1a 89 d4 5e 48 8b f8 40 88 77 08 48 b9 58 77 35 c6 f7 7f 00 00 e8 44 0c cf 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 f2 88 d4 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 db 21 e7 5e 48 8b e8 48 8b ce e8 b0 48 24 ff 8b c8 e8 11 20 24 ff 4c 8b c0 48 8b cd 48 8b d7 e8 43 5d 22 ff 48 8b d0 48 8b cb e8 00 ac 24 ff 48 8b cb e8 f8 d4 cb 5e cc}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx eax,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 c6}
000eh dec eax                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c8}
0010h cmp eax,5                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f8 05}
0013h ja near ptr 0107h                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 ee 00 00 00}
0019h mov eax,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c0}
001bh lea rcx,[rip+16eh]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 0d 6e 01 00 00}
0022h mov ecx,[rcx+rax*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 0c 81}
0025h lea r9,[rip-22h]                        ; LEA r64, m || REX.W 8D /r || encoded[7]{4c 8d 0d de ff ff ff}
002ch add rcx,r9                              ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{49 03 c9}
002fh jmp rcx                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e1}
0031h movzx edx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 d2}
0034h movzx r8d,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c0}
0038h movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
003bh cmp eax,r8d                             ; CMP r32, r/m32 || o32 3B /r || encoded[3]{41 3b c0}
003eh sete al                                 ; SETE r/m8 || 0F 94 /r || encoded[3]{0f 94 c0}
0041h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
0044h test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
0046h jne short 004ch                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
0048h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
004ah jmp short 0051h                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
004ch mov eax,0ffh                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff 00 00 00}
0051h jmp near ptr 00fbh                      ; JMP rel32 || E9 cd || encoded[5]{e9 a5 00 00 00}
0056h movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
0059h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
005dh movzx r8d,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{44 0f b6 c0}
0061h cmp r8d,edx                             ; CMP r32, r/m32 || o32 3B /r || encoded[3]{44 3b c2}
0064h setne al                                ; SETNE r/m8 || 0F 95 /r || encoded[3]{0f 95 c0}
0067h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
006ah test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
006ch jne short 0072h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
006eh xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0070h jmp short 0077h                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
0072h mov eax,0ffh                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff 00 00 00}
0077h jmp near ptr 00fbh                      ; JMP rel32 || E9 cd || encoded[5]{e9 7f 00 00 00}
007ch movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
007fh movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0083h cmp eax,edx                             ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b c2}
0085h setb r8b                                ; SETB r/m8 || 0F 92 /r || encoded[4]{41 0f 92 c0}
0089h movzx r8d,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c0}
008dh test r8d,r8d                            ; TEST r/m32, r32 || o32 85 /r || encoded[3]{45 85 c0}
0090h jne short 0096h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
0092h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0094h jmp short 009bh                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
0096h mov eax,0ffh                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff 00 00 00}
009bh jmp short 00fbh                         ; JMP rel8 || EB cb || encoded[2]{eb 5e}
009dh movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
00a0h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
00a4h cmp eax,edx                             ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b c2}
00a6h setbe r8b                               ; SETBE r/m8 || 0F 96 /r || encoded[4]{41 0f 96 c0}
00aah movzx r8d,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c0}
00aeh test r8d,r8d                            ; TEST r/m32, r32 || o32 85 /r || encoded[3]{45 85 c0}
00b1h jne short 00b7h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
00b3h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
00b5h jmp short 00bch                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
00b7h mov eax,0ffh                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff 00 00 00}
00bch jmp short 00fbh                         ; JMP rel8 || EB cb || encoded[2]{eb 3d}
00beh movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
00c1h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
00c5h cmp eax,edx                             ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b c2}
00c7h seta r8b                                ; SETA r/m8 || 0F 97 /r || encoded[4]{41 0f 97 c0}
00cbh movzx r8d,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c0}
00cfh test r8d,r8d                            ; TEST r/m32, r32 || o32 85 /r || encoded[3]{45 85 c0}
00d2h jne short 00d8h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
00d4h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
00d6h jmp short 00ddh                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
00d8h mov eax,0ffh                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff 00 00 00}
00ddh jmp short 00fbh                         ; JMP rel8 || EB cb || encoded[2]{eb 1c}
00dfh movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
00e2h movzx ecx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c8}
00e6h cmp eax,ecx                             ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b c1}
00e8h setae al                                ; SETAE r/m8 || 0F 93 /r || encoded[3]{0f 93 c0}
00ebh movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
00eeh test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
00f0h jne short 00f6h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
00f2h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
00f4h jmp short 00fbh                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
00f6h mov eax,0ffh                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff 00 00 00}
00fbh movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
00feh add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0102h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0103h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0104h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0105h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0106h ret                                     ; RET || C3 || encoded[1]{c3}
0107h mov rcx,7ff7c73cc730h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 c7 3c c7 f7 7f 00 00}
0111h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1a 89 d4 5e}
0116h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0119h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
011dh mov rcx,7ff7c6357758h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 58 77 35 c6 f7 7f 00 00}
0127h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 44 0c cf 5e}
012ch mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
012fh mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0139h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f2 88 d4 5e}
013eh mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
0141h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
0146h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0150h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 db 21 e7 5e}
0155h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
0158h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
015bh call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b0 48 24 ff}
0160h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0162h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 11 20 24 ff}
0167h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
016ah mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
016dh mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0170h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 43 5d 22 ff}
0175h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
0178h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
017bh call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 00 ac 24 ff}
0180h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0183h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f8 d4 cb 5e}
0188h int 3                                   ; INT3 || CC || encoded[1]{cc}
------------------------------------------------------------------------------------------------------------------------
; sbyte eval<sbyte>(ComparisonKind:byte kind, sbyte a, sbyte b)
; eval_g[8i](ComparisonKind~8u,8i,8i)[401] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 c6 ff c8 83 f8 05 0f 87 f6 00 00 00 8b c0 48 8d 0d 76 01 00 00 8b 0c 81 4c 8d 0d de ff ff ff 49 03 c9 ff e1 48 0f be d2 4d 0f be c0 48 0f be c2 41 3b c0 0f 94 c0 0f b6 c0 85 c0 75 04 33 c0 eb 05 b8 7f 00 00 00 e9 aa 00 00 00 48 0f be c2 49 0f be d0 4c 0f be c0 44 3b c2 0f 95 c0 0f b6 c0 85 c0 75 04 33 c0 eb 05 b8 7f 00 00 00 e9 83 00 00 00 48 0f be c2 49 0f be d0 3b c2 41 0f 9c c0 45 0f b6 c0 45 85 c0 75 04 33 c0 eb 05 b8 7f 00 00 00 eb 61 48 0f be c2 49 0f be d0 3b c2 41 0f 9e c0 45 0f b6 c0 45 85 c0 75 04 33 c0 eb 05 b8 7f 00 00 00 eb 3f 48 0f be c2 49 0f be d0 3b c2 41 0f 9f c0 45 0f b6 c0 45 85 c0 75 04 33 c0 eb 05 b8 7f 00 00 00 eb 1d 48 0f be c2 49 0f be c8 3b c1 0f 9d c0 0f b6 c0 85 c0 75 04 33 c0 eb 05 b8 7f 00 00 00 48 0f be c0 48 83 c4 28 5b 5d 5e 5f c3 48 b9 30 c7 3c c7 f7 7f 00 00 e8 42 87 d4 5e 48 8b f8 40 88 77 08 48 b9 68 6f 35 c6 f7 7f 00 00 e8 6c 0a cf 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 1a 87 d4 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 03 20 e7 5e 48 8b e8 48 8b ce e8 d8 46 24 ff 8b c8 e8 39 1e 24 ff 4c 8b c0 48 8b cd 48 8b d7 e8 6b 5b 22 ff 48 8b d0 48 8b cb e8 28 aa 24 ff 48 8b cb e8 20 d3 cb 5e cc}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx eax,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 c6}
000eh dec eax                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c8}
0010h cmp eax,5                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f8 05}
0013h ja near ptr 010fh                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 f6 00 00 00}
0019h mov eax,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c0}
001bh lea rcx,[rip+176h]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 0d 76 01 00 00}
0022h mov ecx,[rcx+rax*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 0c 81}
0025h lea r9,[rip-22h]                        ; LEA r64, m || REX.W 8D /r || encoded[7]{4c 8d 0d de ff ff ff}
002ch add rcx,r9                              ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{49 03 c9}
002fh jmp rcx                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e1}
0031h movsx rdx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d2}
0035h movsx r8,r8b                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4d 0f be c0}
0039h movsx rax,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c2}
003dh cmp eax,r8d                             ; CMP r32, r/m32 || o32 3B /r || encoded[3]{41 3b c0}
0040h sete al                                 ; SETE r/m8 || 0F 94 /r || encoded[3]{0f 94 c0}
0043h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
0046h test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
0048h jne short 004eh                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
004ah xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
004ch jmp short 0053h                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
004eh mov eax,7fh                             ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 7f 00 00 00}
0053h jmp near ptr 0102h                      ; JMP rel32 || E9 cd || encoded[5]{e9 aa 00 00 00}
0058h movsx rax,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c2}
005ch movsx rdx,r8b                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{49 0f be d0}
0060h movsx r8,al                             ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c0}
0064h cmp r8d,edx                             ; CMP r32, r/m32 || o32 3B /r || encoded[3]{44 3b c2}
0067h setne al                                ; SETNE r/m8 || 0F 95 /r || encoded[3]{0f 95 c0}
006ah movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
006dh test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
006fh jne short 0075h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
0071h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0073h jmp short 007ah                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
0075h mov eax,7fh                             ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 7f 00 00 00}
007ah jmp near ptr 0102h                      ; JMP rel32 || E9 cd || encoded[5]{e9 83 00 00 00}
007fh movsx rax,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c2}
0083h movsx rdx,r8b                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{49 0f be d0}
0087h cmp eax,edx                             ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b c2}
0089h setl r8b                                ; SETL r/m8 || 0F 9C /r || encoded[4]{41 0f 9c c0}
008dh movzx r8d,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c0}
0091h test r8d,r8d                            ; TEST r/m32, r32 || o32 85 /r || encoded[3]{45 85 c0}
0094h jne short 009ah                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
0096h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0098h jmp short 009fh                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
009ah mov eax,7fh                             ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 7f 00 00 00}
009fh jmp short 0102h                         ; JMP rel8 || EB cb || encoded[2]{eb 61}
00a1h movsx rax,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c2}
00a5h movsx rdx,r8b                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{49 0f be d0}
00a9h cmp eax,edx                             ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b c2}
00abh setle r8b                               ; SETLE r/m8 || 0F 9E /r || encoded[4]{41 0f 9e c0}
00afh movzx r8d,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c0}
00b3h test r8d,r8d                            ; TEST r/m32, r32 || o32 85 /r || encoded[3]{45 85 c0}
00b6h jne short 00bch                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
00b8h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
00bah jmp short 00c1h                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
00bch mov eax,7fh                             ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 7f 00 00 00}
00c1h jmp short 0102h                         ; JMP rel8 || EB cb || encoded[2]{eb 3f}
00c3h movsx rax,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c2}
00c7h movsx rdx,r8b                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{49 0f be d0}
00cbh cmp eax,edx                             ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b c2}
00cdh setg r8b                                ; SETG r/m8 || 0F 9F /r || encoded[4]{41 0f 9f c0}
00d1h movzx r8d,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c0}
00d5h test r8d,r8d                            ; TEST r/m32, r32 || o32 85 /r || encoded[3]{45 85 c0}
00d8h jne short 00deh                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
00dah xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
00dch jmp short 00e3h                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
00deh mov eax,7fh                             ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 7f 00 00 00}
00e3h jmp short 0102h                         ; JMP rel8 || EB cb || encoded[2]{eb 1d}
00e5h movsx rax,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c2}
00e9h movsx rcx,r8b                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{49 0f be c8}
00edh cmp eax,ecx                             ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b c1}
00efh setge al                                ; SETGE r/m8 || 0F 9D /r || encoded[3]{0f 9d c0}
00f2h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
00f5h test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
00f7h jne short 00fdh                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
00f9h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
00fbh jmp short 0102h                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
00fdh mov eax,7fh                             ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 7f 00 00 00}
0102h movsx rax,al                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c0}
0106h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
010ah pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
010bh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
010ch pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
010dh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
010eh ret                                     ; RET || C3 || encoded[1]{c3}
010fh mov rcx,7ff7c73cc730h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 c7 3c c7 f7 7f 00 00}
0119h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 42 87 d4 5e}
011eh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0121h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0125h mov rcx,7ff7c6356f68h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 68 6f 35 c6 f7 7f 00 00}
012fh call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6c 0a cf 5e}
0134h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0137h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0141h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1a 87 d4 5e}
0146h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
0149h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
014eh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0158h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 03 20 e7 5e}
015dh mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
0160h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0163h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d8 46 24 ff}
0168h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
016ah call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 39 1e 24 ff}
016fh mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0172h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0175h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0178h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6b 5b 22 ff}
017dh mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
0180h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0183h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 28 aa 24 ff}
0188h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
018bh call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 20 d3 cb 5e}
0190h int 3                                   ; INT3 || CC || encoded[1]{cc}
------------------------------------------------------------------------------------------------------------------------
; ushort eval<ushort>(ComparisonKind:byte kind, ushort a, ushort b)
; eval_g[16u](ComparisonKind~8u,16u,16u)[393] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 c6 ff c8 83 f8 05 0f 87 ee 00 00 00 8b c0 48 8d 0d 6e 01 00 00 8b 0c 81 4c 8d 0d de ff ff ff 49 03 c9 ff e1 0f b7 d2 45 0f b7 c0 0f b7 c2 41 3b c0 0f 94 c0 0f b6 c0 85 c0 75 04 33 c0 eb 05 b8 ff ff 00 00 e9 a5 00 00 00 0f b7 c2 41 0f b7 d0 44 0f b7 c0 44 3b c2 0f 95 c0 0f b6 c0 85 c0 75 04 33 c0 eb 05 b8 ff ff 00 00 e9 7f 00 00 00 0f b7 c2 41 0f b7 d0 3b c2 41 0f 92 c0 45 0f b6 c0 45 85 c0 75 04 33 c0 eb 05 b8 ff ff 00 00 eb 5e 0f b7 c2 41 0f b7 d0 3b c2 41 0f 96 c0 45 0f b6 c0 45 85 c0 75 04 33 c0 eb 05 b8 ff ff 00 00 eb 3d 0f b7 c2 41 0f b7 d0 3b c2 41 0f 97 c0 45 0f b6 c0 45 85 c0 75 04 33 c0 eb 05 b8 ff ff 00 00 eb 1c 0f b7 c2 41 0f b7 c8 3b c1 0f 93 c0 0f b6 c0 85 c0 75 04 33 c0 eb 05 b8 ff ff 00 00 0f b7 c0 48 83 c4 28 5b 5d 5e 5f c3 48 b9 30 c7 3c c7 f7 7f 00 00 e8 7a 85 d4 5e 48 8b f8 40 88 77 08 48 b9 38 87 35 c6 f7 7f 00 00 e8 a4 08 cf 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 52 85 d4 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 3b 1e e7 5e 48 8b e8 48 8b ce e8 10 45 24 ff 8b c8 e8 71 1c 24 ff 4c 8b c0 48 8b cd 48 8b d7 e8 a3 59 22 ff 48 8b d0 48 8b cb e8 60 a8 24 ff 48 8b cb e8 58 d1 cb 5e cc}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx eax,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 c6}
000eh dec eax                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c8}
0010h cmp eax,5                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f8 05}
0013h ja near ptr 0107h                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 ee 00 00 00}
0019h mov eax,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c0}
001bh lea rcx,[rip+16eh]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 0d 6e 01 00 00}
0022h mov ecx,[rcx+rax*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 0c 81}
0025h lea r9,[rip-22h]                        ; LEA r64, m || REX.W 8D /r || encoded[7]{4c 8d 0d de ff ff ff}
002ch add rcx,r9                              ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{49 03 c9}
002fh jmp rcx                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e1}
0031h movzx edx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d2}
0034h movzx r8d,r8w                           ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{45 0f b7 c0}
0038h movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
003bh cmp eax,r8d                             ; CMP r32, r/m32 || o32 3B /r || encoded[3]{41 3b c0}
003eh sete al                                 ; SETE r/m8 || 0F 94 /r || encoded[3]{0f 94 c0}
0041h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
0044h test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
0046h jne short 004ch                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
0048h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
004ah jmp short 0051h                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
004ch mov eax,0ffffh                          ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff ff 00 00}
0051h jmp near ptr 00fbh                      ; JMP rel32 || E9 cd || encoded[5]{e9 a5 00 00 00}
0056h movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
0059h movzx edx,r8w                           ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{41 0f b7 d0}
005dh movzx r8d,ax                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c0}
0061h cmp r8d,edx                             ; CMP r32, r/m32 || o32 3B /r || encoded[3]{44 3b c2}
0064h setne al                                ; SETNE r/m8 || 0F 95 /r || encoded[3]{0f 95 c0}
0067h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
006ah test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
006ch jne short 0072h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
006eh xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0070h jmp short 0077h                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
0072h mov eax,0ffffh                          ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff ff 00 00}
0077h jmp near ptr 00fbh                      ; JMP rel32 || E9 cd || encoded[5]{e9 7f 00 00 00}
007ch movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
007fh movzx edx,r8w                           ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{41 0f b7 d0}
0083h cmp eax,edx                             ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b c2}
0085h setb r8b                                ; SETB r/m8 || 0F 92 /r || encoded[4]{41 0f 92 c0}
0089h movzx r8d,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c0}
008dh test r8d,r8d                            ; TEST r/m32, r32 || o32 85 /r || encoded[3]{45 85 c0}
0090h jne short 0096h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
0092h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0094h jmp short 009bh                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
0096h mov eax,0ffffh                          ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff ff 00 00}
009bh jmp short 00fbh                         ; JMP rel8 || EB cb || encoded[2]{eb 5e}
009dh movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
00a0h movzx edx,r8w                           ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{41 0f b7 d0}
00a4h cmp eax,edx                             ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b c2}
00a6h setbe r8b                               ; SETBE r/m8 || 0F 96 /r || encoded[4]{41 0f 96 c0}
00aah movzx r8d,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c0}
00aeh test r8d,r8d                            ; TEST r/m32, r32 || o32 85 /r || encoded[3]{45 85 c0}
00b1h jne short 00b7h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
00b3h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
00b5h jmp short 00bch                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
00b7h mov eax,0ffffh                          ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff ff 00 00}
00bch jmp short 00fbh                         ; JMP rel8 || EB cb || encoded[2]{eb 3d}
00beh movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
00c1h movzx edx,r8w                           ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{41 0f b7 d0}
00c5h cmp eax,edx                             ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b c2}
00c7h seta r8b                                ; SETA r/m8 || 0F 97 /r || encoded[4]{41 0f 97 c0}
00cbh movzx r8d,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c0}
00cfh test r8d,r8d                            ; TEST r/m32, r32 || o32 85 /r || encoded[3]{45 85 c0}
00d2h jne short 00d8h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
00d4h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
00d6h jmp short 00ddh                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
00d8h mov eax,0ffffh                          ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff ff 00 00}
00ddh jmp short 00fbh                         ; JMP rel8 || EB cb || encoded[2]{eb 1c}
00dfh movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
00e2h movzx ecx,r8w                           ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{41 0f b7 c8}
00e6h cmp eax,ecx                             ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b c1}
00e8h setae al                                ; SETAE r/m8 || 0F 93 /r || encoded[3]{0f 93 c0}
00ebh movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
00eeh test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
00f0h jne short 00f6h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
00f2h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
00f4h jmp short 00fbh                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
00f6h mov eax,0ffffh                          ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff ff 00 00}
00fbh movzx eax,ax                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c0}
00feh add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0102h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0103h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0104h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0105h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0106h ret                                     ; RET || C3 || encoded[1]{c3}
0107h mov rcx,7ff7c73cc730h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 c7 3c c7 f7 7f 00 00}
0111h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7a 85 d4 5e}
0116h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0119h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
011dh mov rcx,7ff7c6358738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 38 87 35 c6 f7 7f 00 00}
0127h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a4 08 cf 5e}
012ch mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
012fh mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0139h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 52 85 d4 5e}
013eh mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
0141h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
0146h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0150h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3b 1e e7 5e}
0155h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
0158h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
015bh call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 10 45 24 ff}
0160h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0162h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 71 1c 24 ff}
0167h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
016ah mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
016dh mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0170h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a3 59 22 ff}
0175h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
0178h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
017bh call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 60 a8 24 ff}
0180h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0183h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 58 d1 cb 5e}
0188h int 3                                   ; INT3 || CC || encoded[1]{cc}
------------------------------------------------------------------------------------------------------------------------
; short eval<short>(ComparisonKind:byte kind, short a, short b)
; eval_g[16i](ComparisonKind~8u,16i,16i)[401] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 c6 ff c8 83 f8 05 0f 87 f6 00 00 00 8b c0 48 8d 0d 76 01 00 00 8b 0c 81 4c 8d 0d de ff ff ff 49 03 c9 ff e1 48 0f bf d2 4d 0f bf c0 48 0f bf c2 41 3b c0 0f 94 c0 0f b6 c0 85 c0 75 04 33 c0 eb 05 b8 ff 7f 00 00 e9 aa 00 00 00 48 0f bf c2 49 0f bf d0 4c 0f bf c0 44 3b c2 0f 95 c0 0f b6 c0 85 c0 75 04 33 c0 eb 05 b8 ff 7f 00 00 e9 83 00 00 00 48 0f bf c2 49 0f bf d0 3b c2 41 0f 9c c0 45 0f b6 c0 45 85 c0 75 04 33 c0 eb 05 b8 ff 7f 00 00 eb 61 48 0f bf c2 49 0f bf d0 3b c2 41 0f 9e c0 45 0f b6 c0 45 85 c0 75 04 33 c0 eb 05 b8 ff 7f 00 00 eb 3f 48 0f bf c2 49 0f bf d0 3b c2 41 0f 9f c0 45 0f b6 c0 45 85 c0 75 04 33 c0 eb 05 b8 ff 7f 00 00 eb 1d 48 0f bf c2 49 0f bf c8 3b c1 0f 9d c0 0f b6 c0 85 c0 75 04 33 c0 eb 05 b8 ff 7f 00 00 48 0f bf c0 48 83 c4 28 5b 5d 5e 5f c3 48 b9 30 c7 3c c7 f7 7f 00 00 e8 a2 7f d4 5e 48 8b f8 40 88 77 08 48 b9 48 7f 35 c6 f7 7f 00 00 e8 cc 02 cf 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 7a 7f d4 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 63 18 e7 5e 48 8b e8 48 8b ce e8 38 3f 24 ff 8b c8 e8 99 16 24 ff 4c 8b c0 48 8b cd 48 8b d7 e8 cb 53 22 ff 48 8b d0 48 8b cb e8 88 a2 24 ff 48 8b cb e8 80 cb cb 5e cc}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx eax,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 c6}
000eh dec eax                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c8}
0010h cmp eax,5                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f8 05}
0013h ja near ptr 010fh                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 f6 00 00 00}
0019h mov eax,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c0}
001bh lea rcx,[rip+176h]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 0d 76 01 00 00}
0022h mov ecx,[rcx+rax*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 0c 81}
0025h lea r9,[rip-22h]                        ; LEA r64, m || REX.W 8D /r || encoded[7]{4c 8d 0d de ff ff ff}
002ch add rcx,r9                              ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{49 03 c9}
002fh jmp rcx                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e1}
0031h movsx rdx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d2}
0035h movsx r8,r8w                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4d 0f bf c0}
0039h movsx rax,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c2}
003dh cmp eax,r8d                             ; CMP r32, r/m32 || o32 3B /r || encoded[3]{41 3b c0}
0040h sete al                                 ; SETE r/m8 || 0F 94 /r || encoded[3]{0f 94 c0}
0043h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
0046h test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
0048h jne short 004eh                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
004ah xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
004ch jmp short 0053h                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
004eh mov eax,7fffh                           ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff 7f 00 00}
0053h jmp near ptr 0102h                      ; JMP rel32 || E9 cd || encoded[5]{e9 aa 00 00 00}
0058h movsx rax,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c2}
005ch movsx rdx,r8w                           ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{49 0f bf d0}
0060h movsx r8,ax                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c0}
0064h cmp r8d,edx                             ; CMP r32, r/m32 || o32 3B /r || encoded[3]{44 3b c2}
0067h setne al                                ; SETNE r/m8 || 0F 95 /r || encoded[3]{0f 95 c0}
006ah movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
006dh test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
006fh jne short 0075h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
0071h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0073h jmp short 007ah                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
0075h mov eax,7fffh                           ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff 7f 00 00}
007ah jmp near ptr 0102h                      ; JMP rel32 || E9 cd || encoded[5]{e9 83 00 00 00}
007fh movsx rax,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c2}
0083h movsx rdx,r8w                           ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{49 0f bf d0}
0087h cmp eax,edx                             ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b c2}
0089h setl r8b                                ; SETL r/m8 || 0F 9C /r || encoded[4]{41 0f 9c c0}
008dh movzx r8d,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c0}
0091h test r8d,r8d                            ; TEST r/m32, r32 || o32 85 /r || encoded[3]{45 85 c0}
0094h jne short 009ah                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
0096h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0098h jmp short 009fh                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
009ah mov eax,7fffh                           ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff 7f 00 00}
009fh jmp short 0102h                         ; JMP rel8 || EB cb || encoded[2]{eb 61}
00a1h movsx rax,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c2}
00a5h movsx rdx,r8w                           ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{49 0f bf d0}
00a9h cmp eax,edx                             ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b c2}
00abh setle r8b                               ; SETLE r/m8 || 0F 9E /r || encoded[4]{41 0f 9e c0}
00afh movzx r8d,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c0}
00b3h test r8d,r8d                            ; TEST r/m32, r32 || o32 85 /r || encoded[3]{45 85 c0}
00b6h jne short 00bch                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
00b8h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
00bah jmp short 00c1h                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
00bch mov eax,7fffh                           ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff 7f 00 00}
00c1h jmp short 0102h                         ; JMP rel8 || EB cb || encoded[2]{eb 3f}
00c3h movsx rax,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c2}
00c7h movsx rdx,r8w                           ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{49 0f bf d0}
00cbh cmp eax,edx                             ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b c2}
00cdh setg r8b                                ; SETG r/m8 || 0F 9F /r || encoded[4]{41 0f 9f c0}
00d1h movzx r8d,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c0}
00d5h test r8d,r8d                            ; TEST r/m32, r32 || o32 85 /r || encoded[3]{45 85 c0}
00d8h jne short 00deh                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
00dah xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
00dch jmp short 00e3h                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
00deh mov eax,7fffh                           ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff 7f 00 00}
00e3h jmp short 0102h                         ; JMP rel8 || EB cb || encoded[2]{eb 1d}
00e5h movsx rax,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c2}
00e9h movsx rcx,r8w                           ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{49 0f bf c8}
00edh cmp eax,ecx                             ; CMP r32, r/m32 || o32 3B /r || encoded[2]{3b c1}
00efh setge al                                ; SETGE r/m8 || 0F 9D /r || encoded[3]{0f 9d c0}
00f2h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
00f5h test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
00f7h jne short 00fdh                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
00f9h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
00fbh jmp short 0102h                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
00fdh mov eax,7fffh                           ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff 7f 00 00}
0102h movsx rax,ax                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c0}
0106h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
010ah pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
010bh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
010ch pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
010dh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
010eh ret                                     ; RET || C3 || encoded[1]{c3}
010fh mov rcx,7ff7c73cc730h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 c7 3c c7 f7 7f 00 00}
0119h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a2 7f d4 5e}
011eh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0121h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0125h mov rcx,7ff7c6357f48h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 48 7f 35 c6 f7 7f 00 00}
012fh call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 cc 02 cf 5e}
0134h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0137h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0141h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7a 7f d4 5e}
0146h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
0149h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
014eh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0158h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 63 18 e7 5e}
015dh mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
0160h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0163h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 38 3f 24 ff}
0168h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
016ah call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 99 16 24 ff}
016fh mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0172h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0175h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0178h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 cb 53 22 ff}
017dh mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
0180h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0183h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 88 a2 24 ff}
0188h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
018bh call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 80 cb cb 5e}
0190h int 3                                   ; INT3 || CC || encoded[1]{cc}
------------------------------------------------------------------------------------------------------------------------
; uint eval<uint>(ComparisonKind:byte kind, uint a, uint b)
; eval_g[32u](ComparisonKind~8u,32u,32u)[377] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 c6 ff c8 83 f8 05 0f 87 af 00 00 00 8b c0 48 8d 0d 2e 01 00 00 8b 0c 81 4c 8d 0d de ff ff ff 49 03 c9 ff e1 41 3b d0 0f 94 c2 0f b6 d2 85 d2 75 04 33 c0 eb 05 b8 ff ff ff ff eb 76 41 3b d0 0f 95 c0 0f b6 c0 85 c0 75 04 33 c0 eb 05 b8 ff ff ff ff eb 5e 41 3b d0 0f 92 c0 0f b6 c0 85 c0 75 04 33 c0 eb 05 b8 ff ff ff ff eb 46 41 3b d0 0f 96 c0 0f b6 c0 85 c0 75 04 33 c0 eb 05 b8 ff ff ff ff eb 2e 41 3b d0 0f 97 c0 0f b6 c0 85 c0 75 04 33 c0 eb 05 b8 ff ff ff ff eb 16 41 3b d0 0f 93 c0 0f b6 c0 85 c0 75 04 33 c0 eb 05 b8 ff ff ff ff 48 83 c4 28 5b 5d 5e 5f c3 48 b9 30 c7 3c c7 f7 7f 00 00 e8 19 7e d4 5e 48 8b f8 40 88 77 08 48 b9 d8 96 35 c6 f7 7f 00 00 e8 43 01 cf 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 f1 7d d4 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 da 16 e7 5e 48 8b e8 48 8b ce e8 af 3d 24 ff 8b c8 e8 10 15 24 ff 4c 8b c0 48 8b cd 48 8b d7 e8 42 52 22 ff 48 8b d0 48 8b cb e8 ff a0 24 ff 48 8b cb e8 f7 c9 cb 5e cc 00 00 00 00 00 00 27 00 00 00 57 00 00 00 6f 00 00 00 87 00 00 00 9f 00 00 00 3f 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx eax,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 c6}
000eh dec eax                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c8}
0010h cmp eax,5                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f8 05}
0013h ja near ptr 00c8h                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 af 00 00 00}
0019h mov eax,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c0}
001bh lea rcx,[rip+12eh]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 0d 2e 01 00 00}
0022h mov ecx,[rcx+rax*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 0c 81}
0025h lea r9,[rip-22h]                        ; LEA r64, m || REX.W 8D /r || encoded[7]{4c 8d 0d de ff ff ff}
002ch add rcx,r9                              ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{49 03 c9}
002fh jmp rcx                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e1}
0031h cmp edx,r8d                             ; CMP r32, r/m32 || o32 3B /r || encoded[3]{41 3b d0}
0034h sete dl                                 ; SETE r/m8 || 0F 94 /r || encoded[3]{0f 94 c2}
0037h movzx edx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 d2}
003ah test edx,edx                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 d2}
003ch jne short 0042h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
003eh xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0040h jmp short 0047h                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
0042h mov eax,0ffffffffh                      ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff ff ff ff}
0047h jmp short 00bfh                         ; JMP rel8 || EB cb || encoded[2]{eb 76}
0049h cmp edx,r8d                             ; CMP r32, r/m32 || o32 3B /r || encoded[3]{41 3b d0}
004ch setne al                                ; SETNE r/m8 || 0F 95 /r || encoded[3]{0f 95 c0}
004fh movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
0052h test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
0054h jne short 005ah                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
0056h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0058h jmp short 005fh                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
005ah mov eax,0ffffffffh                      ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff ff ff ff}
005fh jmp short 00bfh                         ; JMP rel8 || EB cb || encoded[2]{eb 5e}
0061h cmp edx,r8d                             ; CMP r32, r/m32 || o32 3B /r || encoded[3]{41 3b d0}
0064h setb al                                 ; SETB r/m8 || 0F 92 /r || encoded[3]{0f 92 c0}
0067h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
006ah test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
006ch jne short 0072h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
006eh xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0070h jmp short 0077h                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
0072h mov eax,0ffffffffh                      ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff ff ff ff}
0077h jmp short 00bfh                         ; JMP rel8 || EB cb || encoded[2]{eb 46}
0079h cmp edx,r8d                             ; CMP r32, r/m32 || o32 3B /r || encoded[3]{41 3b d0}
007ch setbe al                                ; SETBE r/m8 || 0F 96 /r || encoded[3]{0f 96 c0}
007fh movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
0082h test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
0084h jne short 008ah                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
0086h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0088h jmp short 008fh                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
008ah mov eax,0ffffffffh                      ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff ff ff ff}
008fh jmp short 00bfh                         ; JMP rel8 || EB cb || encoded[2]{eb 2e}
0091h cmp edx,r8d                             ; CMP r32, r/m32 || o32 3B /r || encoded[3]{41 3b d0}
0094h seta al                                 ; SETA r/m8 || 0F 97 /r || encoded[3]{0f 97 c0}
0097h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
009ah test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
009ch jne short 00a2h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
009eh xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
00a0h jmp short 00a7h                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
00a2h mov eax,0ffffffffh                      ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff ff ff ff}
00a7h jmp short 00bfh                         ; JMP rel8 || EB cb || encoded[2]{eb 16}
00a9h cmp edx,r8d                             ; CMP r32, r/m32 || o32 3B /r || encoded[3]{41 3b d0}
00ach setae al                                ; SETAE r/m8 || 0F 93 /r || encoded[3]{0f 93 c0}
00afh movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
00b2h test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
00b4h jne short 00bah                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
00b6h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
00b8h jmp short 00bfh                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
00bah mov eax,0ffffffffh                      ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff ff ff ff}
00bfh add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
00c3h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
00c4h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
00c5h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
00c6h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
00c7h ret                                     ; RET || C3 || encoded[1]{c3}
00c8h mov rcx,7ff7c73cc730h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 c7 3c c7 f7 7f 00 00}
00d2h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 19 7e d4 5e}
00d7h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
00dah mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
00deh mov rcx,7ff7c63596d8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d8 96 35 c6 f7 7f 00 00}
00e8h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 43 01 cf 5e}
00edh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00f0h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
00fah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f1 7d d4 5e}
00ffh mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
0102h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
0107h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0111h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 da 16 e7 5e}
0116h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
0119h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
011ch call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 af 3d 24 ff}
0121h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0123h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 10 15 24 ff}
0128h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
012bh mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
012eh mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0131h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 42 52 22 ff}
0136h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
0139h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
013ch call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ff a0 24 ff}
0141h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0144h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f7 c9 cb 5e}
0149h int 3                                   ; INT3 || CC || encoded[1]{cc}
014ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
014ch add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
014eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0150h (bad)                                   ; <invalid> || <invalid> || encoded[2]{27 00}
0152h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0154h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0155h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0157h add [rdi],ch                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 6f 00}
015ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
015ch xchg eax,[rax]                          ; XCHG r/m32, r32 || o32 87 /r || encoded[2]{87 00}
015eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0160h lahf                                    ; LAHF || 9F || encoded[1]{9f}
0161h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0163h add [rdi],bh                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 3f}
0165h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0167h add [rcx],bl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 19}
0169h or [rip+4420800h],al                    ; OR r/m8, r8 || 08 /r || encoded[6]{08 05 00 08 42 04}
016fh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0171h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
0172h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
0175h jo short 0177h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
0177h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; int eval<int>(ComparisonKind:byte kind, int a, int b)
; eval_g[32i](ComparisonKind~8u,32i,32i)[377] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 c6 ff c8 83 f8 05 0f 87 af 00 00 00 8b c0 48 8d 0d 2e 01 00 00 8b 0c 81 4c 8d 0d de ff ff ff 49 03 c9 ff e1 41 3b d0 0f 94 c2 0f b6 d2 85 d2 75 04 33 c0 eb 05 b8 ff ff ff 7f eb 76 41 3b d0 0f 95 c0 0f b6 c0 85 c0 75 04 33 c0 eb 05 b8 ff ff ff 7f eb 5e 41 3b d0 0f 9c c0 0f b6 c0 85 c0 75 04 33 c0 eb 05 b8 ff ff ff 7f eb 46 41 3b d0 0f 9e c0 0f b6 c0 85 c0 75 04 33 c0 eb 05 b8 ff ff ff 7f eb 2e 41 3b d0 0f 9f c0 0f b6 c0 85 c0 75 04 33 c0 eb 05 b8 ff ff ff 7f eb 16 41 3b d0 0f 9d c0 0f b6 c0 85 c0 75 04 33 c0 eb 05 b8 ff ff ff 7f 48 83 c4 28 5b 5d 5e 5f c3 48 b9 30 c7 3c c7 f7 7f 00 00 e8 89 7c d4 5e 48 8b f8 40 88 77 08 48 b9 08 8f 35 c6 f7 7f 00 00 e8 b3 ff ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 61 7c d4 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 4a 15 e7 5e 48 8b e8 48 8b ce e8 1f 3c 24 ff 8b c8 e8 80 13 24 ff 4c 8b c0 48 8b cd 48 8b d7 e8 b2 50 22 ff 48 8b d0 48 8b cb e8 6f 9f 24 ff 48 8b cb e8 67 c8 cb 5e cc 00 00 00 00 00 00 27 00 00 00 57 00 00 00 6f 00 00 00 87 00 00 00 9f 00 00 00 3f 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx eax,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 c6}
000eh dec eax                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c8}
0010h cmp eax,5                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f8 05}
0013h ja near ptr 00c8h                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 af 00 00 00}
0019h mov eax,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c0}
001bh lea rcx,[rip+12eh]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 0d 2e 01 00 00}
0022h mov ecx,[rcx+rax*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 0c 81}
0025h lea r9,[rip-22h]                        ; LEA r64, m || REX.W 8D /r || encoded[7]{4c 8d 0d de ff ff ff}
002ch add rcx,r9                              ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{49 03 c9}
002fh jmp rcx                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e1}
0031h cmp edx,r8d                             ; CMP r32, r/m32 || o32 3B /r || encoded[3]{41 3b d0}
0034h sete dl                                 ; SETE r/m8 || 0F 94 /r || encoded[3]{0f 94 c2}
0037h movzx edx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 d2}
003ah test edx,edx                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 d2}
003ch jne short 0042h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
003eh xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0040h jmp short 0047h                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
0042h mov eax,7fffffffh                       ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff ff ff 7f}
0047h jmp short 00bfh                         ; JMP rel8 || EB cb || encoded[2]{eb 76}
0049h cmp edx,r8d                             ; CMP r32, r/m32 || o32 3B /r || encoded[3]{41 3b d0}
004ch setne al                                ; SETNE r/m8 || 0F 95 /r || encoded[3]{0f 95 c0}
004fh movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
0052h test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
0054h jne short 005ah                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
0056h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0058h jmp short 005fh                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
005ah mov eax,7fffffffh                       ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff ff ff 7f}
005fh jmp short 00bfh                         ; JMP rel8 || EB cb || encoded[2]{eb 5e}
0061h cmp edx,r8d                             ; CMP r32, r/m32 || o32 3B /r || encoded[3]{41 3b d0}
0064h setl al                                 ; SETL r/m8 || 0F 9C /r || encoded[3]{0f 9c c0}
0067h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
006ah test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
006ch jne short 0072h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
006eh xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0070h jmp short 0077h                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
0072h mov eax,7fffffffh                       ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff ff ff 7f}
0077h jmp short 00bfh                         ; JMP rel8 || EB cb || encoded[2]{eb 46}
0079h cmp edx,r8d                             ; CMP r32, r/m32 || o32 3B /r || encoded[3]{41 3b d0}
007ch setle al                                ; SETLE r/m8 || 0F 9E /r || encoded[3]{0f 9e c0}
007fh movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
0082h test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
0084h jne short 008ah                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
0086h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0088h jmp short 008fh                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
008ah mov eax,7fffffffh                       ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff ff ff 7f}
008fh jmp short 00bfh                         ; JMP rel8 || EB cb || encoded[2]{eb 2e}
0091h cmp edx,r8d                             ; CMP r32, r/m32 || o32 3B /r || encoded[3]{41 3b d0}
0094h setg al                                 ; SETG r/m8 || 0F 9F /r || encoded[3]{0f 9f c0}
0097h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
009ah test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
009ch jne short 00a2h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
009eh xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
00a0h jmp short 00a7h                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
00a2h mov eax,7fffffffh                       ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff ff ff 7f}
00a7h jmp short 00bfh                         ; JMP rel8 || EB cb || encoded[2]{eb 16}
00a9h cmp edx,r8d                             ; CMP r32, r/m32 || o32 3B /r || encoded[3]{41 3b d0}
00ach setge al                                ; SETGE r/m8 || 0F 9D /r || encoded[3]{0f 9d c0}
00afh movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
00b2h test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
00b4h jne short 00bah                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
00b6h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
00b8h jmp short 00bfh                         ; JMP rel8 || EB cb || encoded[2]{eb 05}
00bah mov eax,7fffffffh                       ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b8 ff ff ff 7f}
00bfh add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
00c3h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
00c4h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
00c5h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
00c6h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
00c7h ret                                     ; RET || C3 || encoded[1]{c3}
00c8h mov rcx,7ff7c73cc730h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 c7 3c c7 f7 7f 00 00}
00d2h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 89 7c d4 5e}
00d7h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
00dah mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
00deh mov rcx,7ff7c6358f08h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 08 8f 35 c6 f7 7f 00 00}
00e8h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b3 ff ce 5e}
00edh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00f0h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
00fah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 61 7c d4 5e}
00ffh mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
0102h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
0107h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0111h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 4a 15 e7 5e}
0116h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
0119h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
011ch call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1f 3c 24 ff}
0121h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0123h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 80 13 24 ff}
0128h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
012bh mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
012eh mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0131h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b2 50 22 ff}
0136h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
0139h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
013ch call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6f 9f 24 ff}
0141h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0144h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 67 c8 cb 5e}
0149h int 3                                   ; INT3 || CC || encoded[1]{cc}
014ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
014ch add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
014eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0150h (bad)                                   ; <invalid> || <invalid> || encoded[2]{27 00}
0152h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0154h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0155h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0157h add [rdi],ch                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 6f 00}
015ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
015ch xchg eax,[rax]                          ; XCHG r/m32, r32 || o32 87 /r || encoded[2]{87 00}
015eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0160h lahf                                    ; LAHF || 9F || encoded[1]{9f}
0161h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0163h add [rdi],bh                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 3f}
0165h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0167h add [rcx],bl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 19}
0169h or [rip+4420800h],al                    ; OR r/m8, r8 || 08 /r || encoded[6]{08 05 00 08 42 04}
016fh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0171h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
0172h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
0175h jo short 0177h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
0177h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; ulong eval<ulong>(ComparisonKind:byte kind, ulong a, ulong b)
; eval_g[64u](ComparisonKind~8u,64u,64u)[409] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 c6 ff c8 83 f8 05 0f 87 d0 00 00 00 8b c0 48 8d 0d 4e 01 00 00 8b 0c 81 4c 8d 0d de ff ff ff 49 03 c9 ff e1 49 3b d0 0f 94 c2 0f b6 d2 85 d2 75 04 33 c0 eb 0a 48 b8 ff ff ff ff ff ff ff ff e9 8f 00 00 00 49 3b d0 0f 95 c0 0f b6 c0 85 c0 75 04 33 c0 eb 0a 48 b8 ff ff ff ff ff ff ff ff eb 72 49 3b d0 0f 92 c0 0f b6 c0 85 c0 75 04 33 c0 eb 0a 48 b8 ff ff ff ff ff ff ff ff eb 55 49 3b d0 0f 96 c0 0f b6 c0 85 c0 75 04 33 c0 eb 0a 48 b8 ff ff ff ff ff ff ff ff eb 38 49 3b d0 0f 97 c0 0f b6 c0 85 c0 75 04 33 c0 eb 0a 48 b8 ff ff ff ff ff ff ff ff eb 1b 49 3b d0 0f 93 c0 0f b6 c0 85 c0 75 04 33 c0 eb 0a 48 b8 ff ff ff ff ff ff ff ff 48 83 c4 28 5b 5d 5e 5f c3 48 b9 30 c7 3c c7 f7 7f 00 00 e8 d8 7a d4 5e 48 8b f8 40 88 77 08 48 b9 78 a6 35 c6 f7 7f 00 00 e8 02 fe ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 b0 7a d4 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 99 13 e7 5e 48 8b e8 48 8b ce e8 6e 3a 24 ff 8b c8 e8 cf 11 24 ff 4c 8b c0 48 8b cd 48 8b d7 e8 01 4f 22 ff 48 8b d0 48 8b cb e8 be 9d 24 ff 48 8b cb e8 b6 c6 cb 5e cc 00 00 00 00 00 27 00 00 00 64 00 00 00 81 00 00 00 9e 00 00 00 bb 00 00 00 47 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx eax,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 c6}
000eh dec eax                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c8}
0010h cmp eax,5                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f8 05}
0013h ja near ptr 00e9h                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 d0 00 00 00}
0019h mov eax,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c0}
001bh lea rcx,[rip+14eh]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 0d 4e 01 00 00}
0022h mov ecx,[rcx+rax*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 0c 81}
0025h lea r9,[rip-22h]                        ; LEA r64, m || REX.W 8D /r || encoded[7]{4c 8d 0d de ff ff ff}
002ch add rcx,r9                              ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{49 03 c9}
002fh jmp rcx                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e1}
0031h cmp rdx,r8                              ; CMP r64, r/m64 || REX.W 3B /r || encoded[3]{49 3b d0}
0034h sete dl                                 ; SETE r/m8 || 0F 94 /r || encoded[3]{0f 94 c2}
0037h movzx edx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 d2}
003ah test edx,edx                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 d2}
003ch jne short 0042h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
003eh xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0040h jmp short 004ch                         ; JMP rel8 || EB cb || encoded[2]{eb 0a}
0042h mov rax,0ffffffffffffffffh              ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 ff ff ff ff ff ff ff ff}
004ch jmp near ptr 00e0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 8f 00 00 00}
0051h cmp rdx,r8                              ; CMP r64, r/m64 || REX.W 3B /r || encoded[3]{49 3b d0}
0054h setne al                                ; SETNE r/m8 || 0F 95 /r || encoded[3]{0f 95 c0}
0057h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
005ah test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
005ch jne short 0062h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
005eh xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0060h jmp short 006ch                         ; JMP rel8 || EB cb || encoded[2]{eb 0a}
0062h mov rax,0ffffffffffffffffh              ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 ff ff ff ff ff ff ff ff}
006ch jmp short 00e0h                         ; JMP rel8 || EB cb || encoded[2]{eb 72}
006eh cmp rdx,r8                              ; CMP r64, r/m64 || REX.W 3B /r || encoded[3]{49 3b d0}
0071h setb al                                 ; SETB r/m8 || 0F 92 /r || encoded[3]{0f 92 c0}
0074h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
0077h test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
0079h jne short 007fh                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
007bh xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
007dh jmp short 0089h                         ; JMP rel8 || EB cb || encoded[2]{eb 0a}
007fh mov rax,0ffffffffffffffffh              ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 ff ff ff ff ff ff ff ff}
0089h jmp short 00e0h                         ; JMP rel8 || EB cb || encoded[2]{eb 55}
008bh cmp rdx,r8                              ; CMP r64, r/m64 || REX.W 3B /r || encoded[3]{49 3b d0}
008eh setbe al                                ; SETBE r/m8 || 0F 96 /r || encoded[3]{0f 96 c0}
0091h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
0094h test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
0096h jne short 009ch                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
0098h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
009ah jmp short 00a6h                         ; JMP rel8 || EB cb || encoded[2]{eb 0a}
009ch mov rax,0ffffffffffffffffh              ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 ff ff ff ff ff ff ff ff}
00a6h jmp short 00e0h                         ; JMP rel8 || EB cb || encoded[2]{eb 38}
00a8h cmp rdx,r8                              ; CMP r64, r/m64 || REX.W 3B /r || encoded[3]{49 3b d0}
00abh seta al                                 ; SETA r/m8 || 0F 97 /r || encoded[3]{0f 97 c0}
00aeh movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
00b1h test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
00b3h jne short 00b9h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
00b5h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
00b7h jmp short 00c3h                         ; JMP rel8 || EB cb || encoded[2]{eb 0a}
00b9h mov rax,0ffffffffffffffffh              ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 ff ff ff ff ff ff ff ff}
00c3h jmp short 00e0h                         ; JMP rel8 || EB cb || encoded[2]{eb 1b}
00c5h cmp rdx,r8                              ; CMP r64, r/m64 || REX.W 3B /r || encoded[3]{49 3b d0}
00c8h setae al                                ; SETAE r/m8 || 0F 93 /r || encoded[3]{0f 93 c0}
00cbh movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
00ceh test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
00d0h jne short 00d6h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
00d2h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
00d4h jmp short 00e0h                         ; JMP rel8 || EB cb || encoded[2]{eb 0a}
00d6h mov rax,0ffffffffffffffffh              ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 ff ff ff ff ff ff ff ff}
00e0h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
00e4h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
00e5h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
00e6h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
00e7h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
00e8h ret                                     ; RET || C3 || encoded[1]{c3}
00e9h mov rcx,7ff7c73cc730h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 c7 3c c7 f7 7f 00 00}
00f3h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d8 7a d4 5e}
00f8h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
00fbh mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
00ffh mov rcx,7ff7c635a678h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 78 a6 35 c6 f7 7f 00 00}
0109h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 02 fe ce 5e}
010eh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0111h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
011bh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b0 7a d4 5e}
0120h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
0123h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
0128h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0132h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 99 13 e7 5e}
0137h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
013ah mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
013dh call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6e 3a 24 ff}
0142h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0144h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 cf 11 24 ff}
0149h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
014ch mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
014fh mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0152h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 01 4f 22 ff}
0157h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
015ah mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
015dh call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 be 9d 24 ff}
0162h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0165h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b6 c6 cb 5e}
016ah int 3                                   ; INT3 || CC || encoded[1]{cc}
016bh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
016dh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
016fh add [rdi],ah                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 27}
0171h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0173h add [rax+rax],ah                        ; ADD r/m8, r8 || 00 /r || encoded[4]{00 64 00 00}
0177h add [rcx-62000000h],al                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 81 00 00 00 9e}
017dh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
017fh add [rbx+47000000h],bh                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 bb 00 00 00 47}
0185h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0187h add [rcx],bl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 19}
0189h or [rip+4420800h],al                    ; OR r/m8, r8 || 08 /r || encoded[6]{08 05 00 08 42 04}
018fh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0191h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
0192h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
0195h jo short 0197h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
0197h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; long eval<long>(ComparisonKind:byte kind, long a, long b)
; eval_g[64i](ComparisonKind~8u,64i,64i)[409] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 c6 ff c8 83 f8 05 0f 87 d0 00 00 00 8b c0 48 8d 0d 4e 01 00 00 8b 0c 81 4c 8d 0d de ff ff ff 49 03 c9 ff e1 49 3b d0 0f 94 c2 0f b6 d2 85 d2 75 04 33 c0 eb 0a 48 b8 ff ff ff ff ff ff ff 7f e9 8f 00 00 00 49 3b d0 0f 95 c0 0f b6 c0 85 c0 75 04 33 c0 eb 0a 48 b8 ff ff ff ff ff ff ff 7f eb 72 49 3b d0 0f 9c c0 0f b6 c0 85 c0 75 04 33 c0 eb 0a 48 b8 ff ff ff ff ff ff ff 7f eb 55 49 3b d0 0f 9e c0 0f b6 c0 85 c0 75 04 33 c0 eb 0a 48 b8 ff ff ff ff ff ff ff 7f eb 38 49 3b d0 0f 9f c0 0f b6 c0 85 c0 75 04 33 c0 eb 0a 48 b8 ff ff ff ff ff ff ff 7f eb 1b 49 3b d0 0f 9d c0 0f b6 c0 85 c0 75 04 33 c0 eb 0a 48 b8 ff ff ff ff ff ff ff 7f 48 83 c4 28 5b 5d 5e 5f c3 48 b9 30 c7 3c c7 f7 7f 00 00 e8 28 79 d4 5e 48 8b f8 40 88 77 08 48 b9 a8 9e 35 c6 f7 7f 00 00 e8 52 fc ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 00 79 d4 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 e9 11 e7 5e 48 8b e8 48 8b ce e8 be 38 24 ff 8b c8 e8 1f 10 24 ff 4c 8b c0 48 8b cd 48 8b d7 e8 51 4d 22 ff 48 8b d0 48 8b cb e8 0e 9c 24 ff 48 8b cb e8 06 c5 cb 5e cc 00 00 00 00 00 27 00 00 00 64 00 00 00 81 00 00 00 9e 00 00 00 bb 00 00 00 47 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx eax,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 c6}
000eh dec eax                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c8}
0010h cmp eax,5                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f8 05}
0013h ja near ptr 00e9h                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 d0 00 00 00}
0019h mov eax,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c0}
001bh lea rcx,[rip+14eh]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 0d 4e 01 00 00}
0022h mov ecx,[rcx+rax*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 0c 81}
0025h lea r9,[rip-22h]                        ; LEA r64, m || REX.W 8D /r || encoded[7]{4c 8d 0d de ff ff ff}
002ch add rcx,r9                              ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{49 03 c9}
002fh jmp rcx                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e1}
0031h cmp rdx,r8                              ; CMP r64, r/m64 || REX.W 3B /r || encoded[3]{49 3b d0}
0034h sete dl                                 ; SETE r/m8 || 0F 94 /r || encoded[3]{0f 94 c2}
0037h movzx edx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 d2}
003ah test edx,edx                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 d2}
003ch jne short 0042h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
003eh xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0040h jmp short 004ch                         ; JMP rel8 || EB cb || encoded[2]{eb 0a}
0042h mov rax,7fffffffffffffffh               ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 ff ff ff ff ff ff ff 7f}
004ch jmp near ptr 00e0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 8f 00 00 00}
0051h cmp rdx,r8                              ; CMP r64, r/m64 || REX.W 3B /r || encoded[3]{49 3b d0}
0054h setne al                                ; SETNE r/m8 || 0F 95 /r || encoded[3]{0f 95 c0}
0057h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
005ah test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
005ch jne short 0062h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
005eh xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
0060h jmp short 006ch                         ; JMP rel8 || EB cb || encoded[2]{eb 0a}
0062h mov rax,7fffffffffffffffh               ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 ff ff ff ff ff ff ff 7f}
006ch jmp short 00e0h                         ; JMP rel8 || EB cb || encoded[2]{eb 72}
006eh cmp rdx,r8                              ; CMP r64, r/m64 || REX.W 3B /r || encoded[3]{49 3b d0}
0071h setl al                                 ; SETL r/m8 || 0F 9C /r || encoded[3]{0f 9c c0}
0074h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
0077h test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
0079h jne short 007fh                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
007bh xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
007dh jmp short 0089h                         ; JMP rel8 || EB cb || encoded[2]{eb 0a}
007fh mov rax,7fffffffffffffffh               ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 ff ff ff ff ff ff ff 7f}
0089h jmp short 00e0h                         ; JMP rel8 || EB cb || encoded[2]{eb 55}
008bh cmp rdx,r8                              ; CMP r64, r/m64 || REX.W 3B /r || encoded[3]{49 3b d0}
008eh setle al                                ; SETLE r/m8 || 0F 9E /r || encoded[3]{0f 9e c0}
0091h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
0094h test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
0096h jne short 009ch                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
0098h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
009ah jmp short 00a6h                         ; JMP rel8 || EB cb || encoded[2]{eb 0a}
009ch mov rax,7fffffffffffffffh               ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 ff ff ff ff ff ff ff 7f}
00a6h jmp short 00e0h                         ; JMP rel8 || EB cb || encoded[2]{eb 38}
00a8h cmp rdx,r8                              ; CMP r64, r/m64 || REX.W 3B /r || encoded[3]{49 3b d0}
00abh setg al                                 ; SETG r/m8 || 0F 9F /r || encoded[3]{0f 9f c0}
00aeh movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
00b1h test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
00b3h jne short 00b9h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
00b5h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
00b7h jmp short 00c3h                         ; JMP rel8 || EB cb || encoded[2]{eb 0a}
00b9h mov rax,7fffffffffffffffh               ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 ff ff ff ff ff ff ff 7f}
00c3h jmp short 00e0h                         ; JMP rel8 || EB cb || encoded[2]{eb 1b}
00c5h cmp rdx,r8                              ; CMP r64, r/m64 || REX.W 3B /r || encoded[3]{49 3b d0}
00c8h setge al                                ; SETGE r/m8 || 0F 9D /r || encoded[3]{0f 9d c0}
00cbh movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
00ceh test eax,eax                            ; TEST r/m32, r32 || o32 85 /r || encoded[2]{85 c0}
00d0h jne short 00d6h                         ; JNE rel8 || 75 cb || encoded[2]{75 04}
00d2h xor eax,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c0}
00d4h jmp short 00e0h                         ; JMP rel8 || EB cb || encoded[2]{eb 0a}
00d6h mov rax,7fffffffffffffffh               ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 ff ff ff ff ff ff ff 7f}
00e0h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
00e4h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
00e5h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
00e6h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
00e7h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
00e8h ret                                     ; RET || C3 || encoded[1]{c3}
00e9h mov rcx,7ff7c73cc730h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 c7 3c c7 f7 7f 00 00}
00f3h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 28 79 d4 5e}
00f8h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
00fbh mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
00ffh mov rcx,7ff7c6359ea8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 a8 9e 35 c6 f7 7f 00 00}
0109h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 52 fc ce 5e}
010eh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0111h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
011bh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 00 79 d4 5e}
0120h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
0123h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
0128h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0132h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e9 11 e7 5e}
0137h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
013ah mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
013dh call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 be 38 24 ff}
0142h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0144h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1f 10 24 ff}
0149h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
014ch mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
014fh mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0152h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 51 4d 22 ff}
0157h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
015ah mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
015dh call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0e 9c 24 ff}
0162h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0165h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 06 c5 cb 5e}
016ah int 3                                   ; INT3 || CC || encoded[1]{cc}
016bh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
016dh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
016fh add [rdi],ah                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 27}
0171h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0173h add [rax+rax],ah                        ; ADD r/m8, r8 || 00 /r || encoded[4]{00 64 00 00}
0177h add [rcx-62000000h],al                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 81 00 00 00 9e}
017dh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
017fh add [rbx+47000000h],bh                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 bb 00 00 00 47}
0185h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0187h add [rcx],bl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 19}
0189h or [rip+4420800h],al                    ; OR r/m8, r8 || 08 /r || encoded[6]{08 05 00 08 42 04}
018fh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0191h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
0192h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
0195h jo short 0197h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
0197h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; byte eval<byte>(TernaryBitLogicKind:byte kind, byte a, byte b, byte c)
; eval_g[8u](TernaryBitLogicKind~8u,8u,8u,8u)[2673] = {57 56 53 48 83 ec 30 8b f1 40 0f b6 ce ff c9 83 f9 5e 0f 87 9d 08 00 00 8b c9 48 8d 05 c7 08 00 00 8b 04 88 4c 8d 15 de ff ff ff 49 03 c2 ff e0 45 0f b6 c0 45 0f b6 c9 45 0b c1 41 0f b6 c8 0f b6 d2 0b ca f7 d1 0f b6 c1 e9 5c 08 00 00 41 0f b6 c0 44 0f b6 c2 41 0b c0 8b d0 f7 d2 0f b6 ca 45 0f b6 c9 41 23 c9 0f b6 c1 e9 3b 08 00 00 41 0f b6 c0 0f b6 d2 0b c2 44 8b c0 41 f7 d0 41 0f b6 c0 e9 23 08 00 00 0f b6 c2 45 0f b6 c9 41 0b c1 8b d0 f7 d2 0f b6 ca 45 0f b6 c0 41 23 c8 0f b6 c1 e9 03 08 00 00 41 0f b6 c1 0f b6 d2 0b c2 44 8b c8 41 f7 d1 41 0f b6 c1 e9 eb 07 00 00 0f b6 c2 8b d0 f7 d2 0f b6 ca 45 0f b6 c0 45 0f b6 c9 45 33 c1 41 0f b6 c0 0f b6 c9 23 c8 0f b6 c1 e9 c5 07 00 00 41 0f b6 c0 45 0f b6 c1 41 23 c0 44 0f b6 c8 0f b6 d2 41 0b d1 8b ca f7 d1 0f b6 c1 e9 a4 07 00 00 0f b6 c2 8b d0 f7 d2 0f b6 ca 45 0f b6 c0 41 23 c8 0f b6 c9 45 0f b6 c9 41 23 c9 0f b6 c1 e9 81 07 00 00 41 0f b6 c0 45 0f b6 c9 41 33 c1 44 0f b6 c0 0f b6 d2 41 0b d0 8b ca f7 d1 0f b6 c1 e9 60 07 00 00 0f b6 c2 8b d0 f7 d2 0f b6 ca 45 0f b6 c9 41 23 c9 0f b6 c1 e9 47 07 00 00 0f b6 c2 8b d0 f7 d2 0f b6 ca 45 0f b6 c0 41 81 f0 ff 00 00 00 41 0f b6 c0 45 0f b6 c9 41 0b c1 0f b6 c0 0f b6 c9 23 c8 0f b6 c1 e9 17 07 00 00 0f b6 c2 8b d0 f7 d2 0f b6 ca 45 0f b6 c0 41 23 c8 0f b6 c1 e9 fe 06 00 00 0f b6 ca f7 d1 40 0f b6 f1 41 0f b6 c9 81 f1 ff 00 00 00 40 0f b6 f9 41 0f b6 c8 88 4c 24 28 48 8d 4c 24 28 e8 fb 53 82 ff 0f b6 08 e8 a3 7e 82 ff 8b d8 8b cf e8 d2 7c 82 ff 8b d0 8b cb e8 b1 84 5a ff 8b c8 33 d2 e8 e0 7c 82 ff 0f b6 d0 8b ce e8 1e b7 ff ff 0f b6 c0 e9 a0 06 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 ce f6 ff ff e9 8b 06 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 99 f6 ff ff e9 76 06 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 64 f6 ff ff e9 61 06 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 2f f6 ff ff e9 4c 06 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 fa f5 ff ff e9 37 06 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 c5 f5 ff ff e9 22 06 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 90 f5 ff ff e9 0d 06 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 5b f5 ff ff e9 f8 05 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 26 f5 ff ff e9 e3 05 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 e9 f4 ff ff e9 ce 05 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 b4 f4 ff ff e9 b9 05 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 7f f4 ff ff e9 a4 05 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 4a f4 ff ff e9 8f 05 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 15 f4 ff ff e9 7a 05 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 e0 f3 ff ff e9 65 05 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 ab f3 ff ff e9 50 05 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 76 f3 ff ff e9 3b 05 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 41 f3 ff ff e9 26 05 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 0c f3 ff ff e9 11 05 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 d7 f2 ff ff e9 fc 04 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 a2 f2 ff ff e9 e7 04 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 6d f2 ff ff e9 d2 04 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 38 f2 ff ff e9 bd 04 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 03 f2 ff ff e9 a8 04 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 ce f1 ff ff e9 93 04 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 99 f1 ff ff e9 7e 04 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 64 f1 ff ff e9 69 04 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 2f f1 ff ff e9 54 04 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 fa f0 ff ff e9 3f 04 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 c5 f0 ff ff e9 2a 04 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 90 f0 ff ff e9 15 04 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 5b f0 ff ff e9 00 04 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 26 f0 ff ff e9 eb 03 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 f1 ef ff ff e9 d6 03 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 bc ef ff ff e9 c1 03 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 87 ef ff ff e9 ac 03 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 52 ef ff ff e9 97 03 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 1d ef ff ff e9 82 03 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 e8 ee ff ff e9 6d 03 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 b3 ee ff ff e9 58 03 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 7e ee ff ff e9 43 03 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 41 ee ff ff e9 2e 03 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 0c ee ff ff e9 19 03 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 d7 ed ff ff e9 04 03 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 a2 ed ff ff e9 ef 02 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 6d ed ff ff e9 da 02 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 38 ed ff ff e9 c5 02 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 03 ed ff ff e9 b0 02 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 ce ec ff ff e9 9b 02 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 99 ec ff ff e9 86 02 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 64 ec ff ff e9 71 02 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 2f ec ff ff e9 5c 02 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 fa eb ff ff e9 47 02 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 c5 eb ff ff e9 32 02 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 90 eb ff ff e9 1d 02 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 5b eb ff ff e9 08 02 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 26 eb ff ff e9 f3 01 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 f1 ea ff ff e9 de 01 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 bc ea ff ff e9 c9 01 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 87 ea ff ff e9 b4 01 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 52 ea ff ff e9 9f 01 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 1d ea ff ff e9 8a 01 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 e8 e9 ff ff e9 75 01 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 b3 e9 ff ff e9 60 01 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 7e e9 ff ff e9 4b 01 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 49 e9 ff ff e9 36 01 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 14 e9 ff ff e9 21 01 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 df e8 ff ff e9 0c 01 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 aa e8 ff ff e9 f7 00 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 75 e8 ff ff e9 e2 00 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 40 e8 ff ff e9 cd 00 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 0b e8 ff ff e9 b8 00 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 d6 e7 ff ff e9 a3 00 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 51 df ff ff e9 8e 00 00 00 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 1c df ff ff eb 7c 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 ea de ff ff eb 6a 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 b8 de ff ff eb 58 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 86 de ff ff eb 46 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 54 de ff ff eb 34 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 22 de ff ff eb 22 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 f0 dd ff ff eb 10 0f b6 ca 41 0f b6 d0 45 0f b6 c1 e8 be dd ff ff 0f b6 c0 48 83 c4 30 5b 5e 5f c3 48 b9 40 b0 5b c6 f7 7f 00 00 e8 8c 5f d4 5e 48 8b f8 40 0f b6 ce e8 78 dd ff ff 48 8b d0 48 8b cf e8 c5 82 24 ff 48 8b cf e8 bd ab cb 5e cc 00 00 00 00 27 00 00 00 45 00 00 00 66 00 00 00 7e 00 00 00 9e 00 00 00 b6 00 00 00 dc 00 00 00 fd 00 00 00 20 01 00 00 41 01 00 00 5a 01 00 00 8a 01 00 00 a3 01 00 00 01 02 00 00 16 02 00 00 2b 02 00 00 40 02 00 00 55 02 00 00 6a 02 00 00 7f 02 00 00 94 02 00 00 a9 02 00 00 be 02 00 00 d3 02 00 00 e8 02 00 00 fd 02 00 00 12 03 00 00 27 03 00 00 3c 03 00 00 51 03 00 00 66 03 00 00 7b 03 00 00 90 03 00 00 a5 03 00 00 ba 03 00 00 cf 03 00 00 e4 03 00 00 f9 03 00 00 0e 04 00 00 23 04 00 00 38 04 00 00 4d 04 00 00 62 04 00 00 77 04 00 00 8c 04 00 00 a1 04 00 00 b6 04 00 00 cb 04 00 00 e0 04 00 00 f5 04 00 00 0a 05 00 00 1f 05 00 00 34 05 00 00 49 05 00 00 5e 05 00 00 73 05 00 00 88 05 00 00 9d 05 00 00 b2 05 00 00 c7 05 00 00 dc 05 00 00 f1 05 00 00 06 06 00 00 1b 06 00 00 30 06 00 00 45 06 00 00 5a 06 00 00 6f 06 00 00 84 06 00 00 99 06 00 00 ae 06 00 00 c3 06 00 00 d8 06 00 00 ed 06 00 00 02 07 00 00 17 07 00 00 2c 07 00 00 41 07 00 00 56 07 00 00 6b 07 00 00 80 07 00 00 95 07 00 00 aa 07 00 00 bf 07 00 00 d4 07 00 00 e9 07 00 00 fe 07 00 00 13 08 00 00 25 08 00 00 37 08 00 00 49 08 00 00 5b 08 00 00 6d 08 00 00 7f 08 00 00 91 08 00 00 19 07 04 00 07 52 03 30 02 60 01 70 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0003h sub rsp,30h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 30}
0007h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
0009h movzx ecx,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 ce}
000dh dec ecx                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c9}
000fh cmp ecx,5eh                             ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f9 5e}
0012h ja near ptr 08b5h                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 9d 08 00 00}
0018h mov ecx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c9}
001ah lea rax,[rip+8c7h]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 c7 08 00 00}
0021h mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0024h lea r10,[rip-22h]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{4c 8d 15 de ff ff ff}
002bh add rax,r10                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{49 03 c2}
002eh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
0030h movzx r8d,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c0}
0034h movzx r9d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c9}
0038h or r8d,r9d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{45 0b c1}
003bh movzx ecx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c8}
003fh movzx edx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 d2}
0042h or ecx,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b ca}
0044h not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
0046h movzx eax,cl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c1}
0049h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 5c 08 00 00}
004eh movzx eax,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c0}
0052h movzx r8d,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{44 0f b6 c2}
0056h or eax,r8d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b c0}
0059h mov edx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d0}
005bh not edx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d2}
005dh movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0060h movzx r9d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c9}
0064h and ecx,r9d                             ; AND r32, r/m32 || o32 23 /r || encoded[3]{41 23 c9}
0067h movzx eax,cl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c1}
006ah jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 3b 08 00 00}
006fh movzx eax,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c0}
0073h movzx edx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 d2}
0076h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
0078h mov r8d,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c0}
007bh not r8d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d0}
007eh movzx eax,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c0}
0082h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 23 08 00 00}
0087h movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
008ah movzx r9d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c9}
008eh or eax,r9d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b c1}
0091h mov edx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d0}
0093h not edx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d2}
0095h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0098h movzx r8d,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c0}
009ch and ecx,r8d                             ; AND r32, r/m32 || o32 23 /r || encoded[3]{41 23 c8}
009fh movzx eax,cl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c1}
00a2h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 03 08 00 00}
00a7h movzx eax,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c1}
00abh movzx edx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 d2}
00aeh or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
00b0h mov r9d,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c8}
00b3h not r9d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d1}
00b6h movzx eax,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c1}
00bah jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 eb 07 00 00}
00bfh movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
00c2h mov edx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d0}
00c4h not edx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d2}
00c6h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
00c9h movzx r8d,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c0}
00cdh movzx r9d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c9}
00d1h xor r8d,r9d                             ; XOR r32, r/m32 || o32 33 /r || encoded[3]{45 33 c1}
00d4h movzx eax,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c0}
00d8h movzx ecx,cl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c9}
00dbh and ecx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c8}
00ddh movzx eax,cl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c1}
00e0h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 c5 07 00 00}
00e5h movzx eax,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c0}
00e9h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
00edh and eax,r8d                             ; AND r32, r/m32 || o32 23 /r || encoded[3]{41 23 c0}
00f0h movzx r9d,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{44 0f b6 c8}
00f4h movzx edx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 d2}
00f7h or edx,r9d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b d1}
00fah mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
00fch not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
00feh movzx eax,cl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c1}
0101h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 a4 07 00 00}
0106h movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
0109h mov edx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d0}
010bh not edx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d2}
010dh movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0110h movzx r8d,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c0}
0114h and ecx,r8d                             ; AND r32, r/m32 || o32 23 /r || encoded[3]{41 23 c8}
0117h movzx ecx,cl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c9}
011ah movzx r9d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c9}
011eh and ecx,r9d                             ; AND r32, r/m32 || o32 23 /r || encoded[3]{41 23 c9}
0121h movzx eax,cl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c1}
0124h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 81 07 00 00}
0129h movzx eax,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c0}
012dh movzx r9d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c9}
0131h xor eax,r9d                             ; XOR r32, r/m32 || o32 33 /r || encoded[3]{41 33 c1}
0134h movzx r8d,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{44 0f b6 c0}
0138h movzx edx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 d2}
013bh or edx,r8d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b d0}
013eh mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0140h not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
0142h movzx eax,cl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c1}
0145h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 60 07 00 00}
014ah movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
014dh mov edx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d0}
014fh not edx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d2}
0151h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0154h movzx r9d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c9}
0158h and ecx,r9d                             ; AND r32, r/m32 || o32 23 /r || encoded[3]{41 23 c9}
015bh movzx eax,cl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c1}
015eh jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 47 07 00 00}
0163h movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
0166h mov edx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d0}
0168h not edx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d2}
016ah movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
016dh movzx r8d,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c0}
0171h xor r8d,0ffh                            ; XOR r/m32, imm32 || o32 81 /6 id || encoded[7]{41 81 f0 ff 00 00 00}
0178h movzx eax,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c0}
017ch movzx r9d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c9}
0180h or eax,r9d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b c1}
0183h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
0186h movzx ecx,cl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c9}
0189h and ecx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c8}
018bh movzx eax,cl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c1}
018eh jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 17 07 00 00}
0193h movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
0196h mov edx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d0}
0198h not edx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d2}
019ah movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
019dh movzx r8d,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c0}
01a1h and ecx,r8d                             ; AND r32, r/m32 || o32 23 /r || encoded[3]{41 23 c8}
01a4h movzx eax,cl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c1}
01a7h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 fe 06 00 00}
01ach movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
01afh not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
01b1h movzx esi,cl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 f1}
01b5h movzx ecx,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c9}
01b9h xor ecx,0ffh                            ; XOR r/m32, imm32 || o32 81 /6 id || encoded[6]{81 f1 ff 00 00 00}
01bfh movzx edi,cl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 f9}
01c3h movzx ecx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c8}
01c7h mov [rsp+28h],cl                        ; MOV r/m8, r8 || 88 /r || encoded[4]{88 4c 24 28}
01cbh lea rcx,[rsp+28h]                       ; LEA r64, m || REX.W 8D /r || encoded[5]{48 8d 4c 24 28}
01d0h call 7ff7c6985a30h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fb 53 82 ff}
01d5h movzx ecx,byte ptr [rax]                ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 08}
01d8h call 7ff7c69884e0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a3 7e 82 ff}
01ddh mov ebx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d8}
01dfh mov ecx,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b cf}
01e1h call 7ff7c6988318h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d2 7c 82 ff}
01e6h mov edx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d0}
01e8h mov ecx,ebx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b cb}
01eah call 7ff7c6708b00h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b1 84 5a ff}
01efh mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
01f1h xor edx,edx                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 d2}
01f3h call 7ff7c6988338h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e0 7c 82 ff}
01f8h movzx edx,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 d0}
01fbh mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
01fdh call 7ff7c715bd80h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1e b7 ff ff}
0202h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
0205h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 a0 06 00 00}
020ah movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
020dh movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0211h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0215h call 7ff7c715fd48h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ce f6 ff ff}
021ah jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 8b 06 00 00}
021fh movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0222h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0226h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
022ah call 7ff7c715fd28h                      ; CALL rel32 || E8 cd || encoded[5]{e8 99 f6 ff ff}
022fh jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 76 06 00 00}
0234h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0237h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
023bh movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
023fh call 7ff7c715fd08h                      ; CALL rel32 || E8 cd || encoded[5]{e8 64 f6 ff ff}
0244h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 61 06 00 00}
0249h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
024ch movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0250h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0254h call 7ff7c715fce8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2f f6 ff ff}
0259h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 4c 06 00 00}
025eh movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0261h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0265h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0269h call 7ff7c715fcc8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fa f5 ff ff}
026eh jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 37 06 00 00}
0273h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0276h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
027ah movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
027eh call 7ff7c715fca8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c5 f5 ff ff}
0283h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 22 06 00 00}
0288h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
028bh movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
028fh movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0293h call 7ff7c715fc88h                      ; CALL rel32 || E8 cd || encoded[5]{e8 90 f5 ff ff}
0298h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 0d 06 00 00}
029dh movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
02a0h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
02a4h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
02a8h call 7ff7c715fc68h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5b f5 ff ff}
02adh jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 f8 05 00 00}
02b2h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
02b5h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
02b9h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
02bdh call 7ff7c715fc48h                      ; CALL rel32 || E8 cd || encoded[5]{e8 26 f5 ff ff}
02c2h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 e3 05 00 00}
02c7h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
02cah movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
02ceh movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
02d2h call 7ff7c715fc20h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e9 f4 ff ff}
02d7h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 ce 05 00 00}
02dch movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
02dfh movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
02e3h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
02e7h call 7ff7c715fc00h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b4 f4 ff ff}
02ech jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 b9 05 00 00}
02f1h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
02f4h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
02f8h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
02fch call 7ff7c715fbe0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7f f4 ff ff}
0301h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 a4 05 00 00}
0306h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0309h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
030dh movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0311h call 7ff7c715fbc0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 4a f4 ff ff}
0316h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 8f 05 00 00}
031bh movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
031eh movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0322h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0326h call 7ff7c715fba0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 15 f4 ff ff}
032bh jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 7a 05 00 00}
0330h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0333h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0337h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
033bh call 7ff7c715fb80h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e0 f3 ff ff}
0340h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 65 05 00 00}
0345h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0348h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
034ch movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0350h call 7ff7c715fb60h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ab f3 ff ff}
0355h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 50 05 00 00}
035ah movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
035dh movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0361h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0365h call 7ff7c715fb40h                      ; CALL rel32 || E8 cd || encoded[5]{e8 76 f3 ff ff}
036ah jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 3b 05 00 00}
036fh movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0372h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0376h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
037ah call 7ff7c715fb20h                      ; CALL rel32 || E8 cd || encoded[5]{e8 41 f3 ff ff}
037fh jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 26 05 00 00}
0384h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0387h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
038bh movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
038fh call 7ff7c715fb00h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0c f3 ff ff}
0394h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 11 05 00 00}
0399h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
039ch movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
03a0h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
03a4h call 7ff7c715fae0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d7 f2 ff ff}
03a9h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 fc 04 00 00}
03aeh movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
03b1h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
03b5h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
03b9h call 7ff7c715fac0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a2 f2 ff ff}
03beh jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 e7 04 00 00}
03c3h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
03c6h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
03cah movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
03ceh call 7ff7c715faa0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6d f2 ff ff}
03d3h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 d2 04 00 00}
03d8h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
03dbh movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
03dfh movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
03e3h call 7ff7c715fa80h                      ; CALL rel32 || E8 cd || encoded[5]{e8 38 f2 ff ff}
03e8h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 bd 04 00 00}
03edh movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
03f0h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
03f4h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
03f8h call 7ff7c715fa60h                      ; CALL rel32 || E8 cd || encoded[5]{e8 03 f2 ff ff}
03fdh jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 a8 04 00 00}
0402h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0405h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0409h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
040dh call 7ff7c715fa40h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ce f1 ff ff}
0412h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 93 04 00 00}
0417h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
041ah movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
041eh movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0422h call 7ff7c715fa20h                      ; CALL rel32 || E8 cd || encoded[5]{e8 99 f1 ff ff}
0427h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 7e 04 00 00}
042ch movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
042fh movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0433h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0437h call 7ff7c715fa00h                      ; CALL rel32 || E8 cd || encoded[5]{e8 64 f1 ff ff}
043ch jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 69 04 00 00}
0441h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0444h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0448h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
044ch call 7ff7c715f9e0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2f f1 ff ff}
0451h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 54 04 00 00}
0456h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0459h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
045dh movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0461h call 7ff7c715f9c0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fa f0 ff ff}
0466h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 3f 04 00 00}
046bh movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
046eh movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0472h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0476h call 7ff7c715f9a0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c5 f0 ff ff}
047bh jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 2a 04 00 00}
0480h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0483h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0487h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
048bh call 7ff7c715f980h                      ; CALL rel32 || E8 cd || encoded[5]{e8 90 f0 ff ff}
0490h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 15 04 00 00}
0495h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0498h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
049ch movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
04a0h call 7ff7c715f960h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5b f0 ff ff}
04a5h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 00 04 00 00}
04aah movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
04adh movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
04b1h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
04b5h call 7ff7c715f940h                      ; CALL rel32 || E8 cd || encoded[5]{e8 26 f0 ff ff}
04bah jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 eb 03 00 00}
04bfh movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
04c2h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
04c6h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
04cah call 7ff7c715f920h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f1 ef ff ff}
04cfh jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 d6 03 00 00}
04d4h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
04d7h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
04dbh movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
04dfh call 7ff7c715f900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bc ef ff ff}
04e4h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 c1 03 00 00}
04e9h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
04ech movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
04f0h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
04f4h call 7ff7c715f8e0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 87 ef ff ff}
04f9h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 ac 03 00 00}
04feh movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0501h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0505h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0509h call 7ff7c715f8c0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 52 ef ff ff}
050eh jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 97 03 00 00}
0513h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0516h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
051ah movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
051eh call 7ff7c715f8a0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1d ef ff ff}
0523h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 82 03 00 00}
0528h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
052bh movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
052fh movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0533h call 7ff7c715f880h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e8 ee ff ff}
0538h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 6d 03 00 00}
053dh movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0540h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0544h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0548h call 7ff7c715f860h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b3 ee ff ff}
054dh jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 58 03 00 00}
0552h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0555h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0559h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
055dh call 7ff7c715f840h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7e ee ff ff}
0562h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 43 03 00 00}
0567h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
056ah movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
056eh movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0572h call 7ff7c715f818h                      ; CALL rel32 || E8 cd || encoded[5]{e8 41 ee ff ff}
0577h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 2e 03 00 00}
057ch movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
057fh movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0583h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0587h call 7ff7c715f7f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0c ee ff ff}
058ch jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 19 03 00 00}
0591h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0594h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0598h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
059ch call 7ff7c715f7d8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d7 ed ff ff}
05a1h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 04 03 00 00}
05a6h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
05a9h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
05adh movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
05b1h call 7ff7c715f7b8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a2 ed ff ff}
05b6h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 ef 02 00 00}
05bbh movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
05beh movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
05c2h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
05c6h call 7ff7c715f798h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6d ed ff ff}
05cbh jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 da 02 00 00}
05d0h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
05d3h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
05d7h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
05dbh call 7ff7c715f778h                      ; CALL rel32 || E8 cd || encoded[5]{e8 38 ed ff ff}
05e0h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 c5 02 00 00}
05e5h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
05e8h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
05ech movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
05f0h call 7ff7c715f758h                      ; CALL rel32 || E8 cd || encoded[5]{e8 03 ed ff ff}
05f5h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 b0 02 00 00}
05fah movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
05fdh movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0601h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0605h call 7ff7c715f738h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ce ec ff ff}
060ah jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 9b 02 00 00}
060fh movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0612h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0616h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
061ah call 7ff7c715f718h                      ; CALL rel32 || E8 cd || encoded[5]{e8 99 ec ff ff}
061fh jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 86 02 00 00}
0624h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0627h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
062bh movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
062fh call 7ff7c715f6f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 64 ec ff ff}
0634h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 71 02 00 00}
0639h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
063ch movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0640h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0644h call 7ff7c715f6d8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2f ec ff ff}
0649h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 5c 02 00 00}
064eh movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0651h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0655h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0659h call 7ff7c715f6b8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fa eb ff ff}
065eh jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 47 02 00 00}
0663h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0666h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
066ah movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
066eh call 7ff7c715f698h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c5 eb ff ff}
0673h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 32 02 00 00}
0678h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
067bh movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
067fh movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0683h call 7ff7c715f678h                      ; CALL rel32 || E8 cd || encoded[5]{e8 90 eb ff ff}
0688h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 1d 02 00 00}
068dh movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0690h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0694h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0698h call 7ff7c715f658h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5b eb ff ff}
069dh jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 08 02 00 00}
06a2h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
06a5h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
06a9h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
06adh call 7ff7c715f638h                      ; CALL rel32 || E8 cd || encoded[5]{e8 26 eb ff ff}
06b2h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 f3 01 00 00}
06b7h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
06bah movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
06beh movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
06c2h call 7ff7c715f618h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f1 ea ff ff}
06c7h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 de 01 00 00}
06cch movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
06cfh movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
06d3h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
06d7h call 7ff7c715f5f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bc ea ff ff}
06dch jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 c9 01 00 00}
06e1h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
06e4h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
06e8h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
06ech call 7ff7c715f5d8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 87 ea ff ff}
06f1h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 b4 01 00 00}
06f6h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
06f9h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
06fdh movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0701h call 7ff7c715f5b8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 52 ea ff ff}
0706h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 9f 01 00 00}
070bh movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
070eh movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0712h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0716h call 7ff7c715f598h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1d ea ff ff}
071bh jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 8a 01 00 00}
0720h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0723h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0727h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
072bh call 7ff7c715f578h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e8 e9 ff ff}
0730h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 75 01 00 00}
0735h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0738h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
073ch movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0740h call 7ff7c715f558h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b3 e9 ff ff}
0745h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 60 01 00 00}
074ah movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
074dh movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0751h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0755h call 7ff7c715f538h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7e e9 ff ff}
075ah jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 4b 01 00 00}
075fh movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0762h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0766h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
076ah call 7ff7c715f518h                      ; CALL rel32 || E8 cd || encoded[5]{e8 49 e9 ff ff}
076fh jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 36 01 00 00}
0774h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0777h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
077bh movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
077fh call 7ff7c715f4f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 14 e9 ff ff}
0784h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 21 01 00 00}
0789h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
078ch movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0790h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0794h call 7ff7c715f4d8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 df e8 ff ff}
0799h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 0c 01 00 00}
079eh movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
07a1h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
07a5h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
07a9h call 7ff7c715f4b8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 aa e8 ff ff}
07aeh jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 f7 00 00 00}
07b3h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
07b6h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
07bah movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
07beh call 7ff7c715f498h                      ; CALL rel32 || E8 cd || encoded[5]{e8 75 e8 ff ff}
07c3h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 e2 00 00 00}
07c8h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
07cbh movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
07cfh movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
07d3h call 7ff7c715f478h                      ; CALL rel32 || E8 cd || encoded[5]{e8 40 e8 ff ff}
07d8h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 cd 00 00 00}
07ddh movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
07e0h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
07e4h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
07e8h call 7ff7c715f458h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0b e8 ff ff}
07edh jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 b8 00 00 00}
07f2h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
07f5h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
07f9h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
07fdh call 7ff7c715f438h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d6 e7 ff ff}
0802h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 a3 00 00 00}
0807h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
080ah movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
080eh movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0812h call 7ff7c715ebc8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 51 df ff ff}
0817h jmp near ptr 08aah                      ; JMP rel32 || E9 cd || encoded[5]{e9 8e 00 00 00}
081ch movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
081fh movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0823h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0827h call 7ff7c715eba8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1c df ff ff}
082ch jmp short 08aah                         ; JMP rel8 || EB cb || encoded[2]{eb 7c}
082eh movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0831h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0835h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0839h call 7ff7c715eb88h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ea de ff ff}
083eh jmp short 08aah                         ; JMP rel8 || EB cb || encoded[2]{eb 6a}
0840h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0843h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0847h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
084bh call 7ff7c715eb68h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b8 de ff ff}
0850h jmp short 08aah                         ; JMP rel8 || EB cb || encoded[2]{eb 58}
0852h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0855h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
0859h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
085dh call 7ff7c715eb48h                      ; CALL rel32 || E8 cd || encoded[5]{e8 86 de ff ff}
0862h jmp short 08aah                         ; JMP rel8 || EB cb || encoded[2]{eb 46}
0864h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0867h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
086bh movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
086fh call 7ff7c715eb28h                      ; CALL rel32 || E8 cd || encoded[5]{e8 54 de ff ff}
0874h jmp short 08aah                         ; JMP rel8 || EB cb || encoded[2]{eb 34}
0876h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
0879h movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
087dh movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0881h call 7ff7c715eb08h                      ; CALL rel32 || E8 cd || encoded[5]{e8 22 de ff ff}
0886h jmp short 08aah                         ; JMP rel8 || EB cb || encoded[2]{eb 22}
0888h movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
088bh movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
088fh movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
0893h call 7ff7c715eae8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f0 dd ff ff}
0898h jmp short 08aah                         ; JMP rel8 || EB cb || encoded[2]{eb 10}
089ah movzx ecx,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 ca}
089dh movzx edx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 d0}
08a1h movzx r8d,r9b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 c1}
08a5h call 7ff7c715eac8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 be dd ff ff}
08aah movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
08adh add rsp,30h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 30}
08b1h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
08b2h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
08b3h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
08b4h ret                                     ; RET || C3 || encoded[1]{c3}
08b5h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
08bfh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 8c 5f d4 5e}
08c4h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
08c7h movzx ecx,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 ce}
08cbh call 7ff7c715eaa8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 78 dd ff ff}
08d0h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
08d3h mov rcx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cf}
08d6h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c5 82 24 ff}
08dbh mov rcx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cf}
08deh call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bd ab cb 5e}
08e3h int 3                                   ; INT3 || CC || encoded[1]{cc}
08e4h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
08e6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
08e8h (bad)                                   ; <invalid> || <invalid> || encoded[2]{27 00}
08eah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
08ech add [r8],r8b                            ; ADD r/m8, r8 || 00 /r || encoded[3]{45 00 00}
08efh add [rsi],ah                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 66 00}
08f2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
08f4h jle short 08f6h                         ; JLE rel8 || 7E cb || encoded[2]{7e 00}
08f6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
08f8h sahf                                    ; SAHF || 9E || encoded[1]{9e}
08f9h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
08fbh add [rsi-24000000h],dh                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 b6 00 00 00 dc}
0901h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0903h add ch,bh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 fd}
0905h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0907h add [rax],ah                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 20}
0909h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
090bh add [rcx+1],al                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 41 01}
090eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0910h pop rdx                                 ; POP r64 || 58+ro || encoded[1]{5a}
0911h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
0913h add [rdx-5cffffffh],cl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 8a 01 00 00 a3}
0919h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
091bh add [rcx],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 01}
091dh add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
091fh add [rsi],dl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 16}
0921h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
0923h add [rbx],ch                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 2b}
0925h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
0927h add [rax+2],al                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 40 02}
092ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
092ch push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
092dh add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
092fh add [rdx+2],ch                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 6a 02}
0932h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0934h jg short 0938h                          ; JG rel8 || 7F cb || encoded[2]{7f 02}
0936h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0938h xchg esp,eax                            ; XCHG r32, EAX || o32 90+rd || encoded[1]{94}
0939h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
093bh add [rcx-41fffffeh],ch                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 a9 02 00 00 be}
0941h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
0943h add bl,dl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 d3}
0945h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
0947h add al,ch                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 e8}
0949h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
094bh add ch,bh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 fd}
094dh add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
094fh add [rdx],dl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 12}
0951h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
0953h add [rdi],ah                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 27}
0955h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
0957h add [rbx+rax],bh                        ; ADD r/m8, r8 || 00 /r || encoded[3]{00 3c 03}
095ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
095ch push rcx                                ; PUSH r64 || 50+ro || encoded[1]{51}
095dh add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
095fh add [rsi+3],ah                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 66 03}
0962h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0964h jnp short 0969h                         ; JNP rel8 || 7B cb || encoded[2]{7b 03}
0966h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0968h nop                                     ; NOP || o32 90 || encoded[1]{90}
0969h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
096bh add [rbp-45fffffdh],ah                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 a5 03 00 00 ba}
0971h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
0973h add bh,cl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 cf}
0975h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
0977h add ah,ah                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 e4}
0979h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
097bh add cl,bh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 f9}
097dh add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
097fh add [rsi],cl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 0e}
0981h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
0983h add [rbx],ah                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 23}
0985h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
0987h add [rax],bh                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 38}
0989h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
098bh add [rbp+4],cl                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 4d 04}
098eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0990h (bad)                                   ; <invalid> || <invalid> || encoded[4]{62 04 00 00}
0994h ja short 099ah                          ; JA rel8 || 77 cb || encoded[2]{77 04}
0996h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0998h mov [rax+rax],es                        ; MOV r32/m16, Sreg || o32 8C /r || encoded[3]{8c 04 00}
099bh add [rcx-49fffffch],ah                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 a1 04 00 00 b6}
09a1h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
09a3h add bl,cl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 cb}
09a5h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
09a7h add al,ah                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 e0}
09a9h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
09abh add ch,dh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 f5}
09adh add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
09afh add [rdx],cl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 0a}
09b1h add eax,51f0000h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 00 1f 05}
09b6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
09b8h xor al,5                                ; XOR AL, imm8 || 34 ib || encoded[2]{34 05}
09bah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
09bch add rax,55e0000h                        ; ADD RAX, imm32 || REX.W 05 id || encoded[6]{49 05 00 00 5e 05}
09c2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
09c4h jae short 09cbh                         ; JAE rel8 || 73 cb || encoded[2]{73 05}
09c6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
09c8h mov [rip+59d0000h],al                   ; MOV r/m8, r8 || 88 /r || encoded[6]{88 05 00 00 9d 05}
09ceh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
09d0h mov dl,5                                ; MOV r8, imm8 || B0+rb ib || encoded[2]{b2 05}
09d2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
09d4h mov dword ptr [rip+5dc0000h],5f10000h   ; MOV r/m32, imm32 || o32 C7 /0 id || encoded[10]{c7 05 00 00 dc 05 00 00 f1 05}
09deh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
09e0h (bad)                                   ; <invalid> || <invalid> || encoded[2]{06 06}
09e2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
09e4h sbb eax,[rsi]                           ; SBB r32, r/m32 || o32 1B /r || encoded[2]{1b 06}
09e6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
09e8h xor [rsi],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 06}
09eah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
09ech (bad)                                   ; <invalid> || <invalid> || encoded[3]{45 06 00}
09efh add [rdx+6],bl                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 5a 06}
09f2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
09f4h outsd                                   ; OUTSD || o32 6F || encoded[1]{6f}
09f5h (bad)                                   ; <invalid> || <invalid> || encoded[2]{06 00}
09f7h add [rsi+rax+6990000h],al               ; ADD r/m8, r8 || 00 /r || encoded[7]{00 84 06 00 00 99 06}
09feh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0a00h scasb                                   ; SCASB || AE || encoded[1]{ae}
0a01h (bad)                                   ; <invalid> || <invalid> || encoded[2]{06 00}
0a03h add bl,al                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 c3}
0a05h (bad)                                   ; <invalid> || <invalid> || encoded[2]{06 00}
0a07h add al,bl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 d8}
0a09h (bad)                                   ; <invalid> || <invalid> || encoded[2]{06 00}
0a0bh add ch,ch                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 ed}
0a0dh (bad)                                   ; <invalid> || <invalid> || encoded[2]{06 00}
0a0fh add [rdx],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 02}
0a11h (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
0a13h add [rdi],dl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 17}
0a15h (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
0a17h add [rdi+rax],ch                        ; ADD r/m8, r8 || 00 /r || encoded[3]{00 2c 07}
0a1ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0a1ch (bad)                                   ; <invalid> || <invalid> || encoded[3]{41 07 00}
0a1fh add [rsi+7],dl                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 56 07}
0a22h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0a24h imul eax,[rdi],0                        ; IMUL r32, r/m32, imm8 || o32 6B /r ib || encoded[3]{6b 07 00}
0a27h add [rax-6afffff9h],al                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 80 07 00 00 95}
0a2dh (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
0a2fh add [rdx-40fffff9h],ch                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 aa 07 00 00 bf}
0a35h (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
0a37h add ah,dl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 d4}
0a39h (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
0a3bh add cl,ch                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 e9}
0a3dh (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
0a3fh add dh,bh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 fe}
0a41h (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
0a43h add [rbx],dl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 13}
0a45h or [rax],al                             ; OR r/m8, r8 || 08 /r || encoded[2]{08 00}
0a47h add [rip+37000008h],ah                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 25 08 00 00 37}
0a4dh or [rax],al                             ; OR r/m8, r8 || 08 /r || encoded[2]{08 00}
0a4fh add [rcx+8],cl                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 49 08}
0a52h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0a54h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0a55h or [rax],al                             ; OR r/m8, r8 || 08 /r || encoded[2]{08 00}
0a57h add [rbp+8],ch                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 6d 08}
0a5ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0a5ch jg short 0a66h                          ; JG rel8 || 7F cb || encoded[2]{7f 08}
0a5eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0a60h xchg ecx,eax                            ; XCHG r32, EAX || o32 90+rd || encoded[1]{91}
0a61h or [rax],al                             ; OR r/m8, r8 || 08 /r || encoded[2]{08 00}
0a63h add [rcx],bl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 19}
0a65h (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 04}
0a67h add [rdi],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 07}
0a69h push rdx                                ; PUSH r64 || 50+ro || encoded[1]{52}
0a6ah add esi,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 30}
0a6ch add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
0a6fh jo short 0ab1h                          ; JO rel8 || 70 cb || encoded[2]{70 40}
------------------------------------------------------------------------------------------------------------------------
; sbyte eval<sbyte>(TernaryBitLogicKind:byte kind, sbyte a, sbyte b, sbyte c)
; eval_g[8i](TernaryBitLogicKind~8u,8i,8i,8i)[2705] = {57 56 53 48 83 ec 20 8b d9 41 8b f0 41 8b f9 0f b6 cb ff c9 83 f9 5e 0f 87 b8 08 00 00 8b c9 48 8d 05 e2 08 00 00 8b 04 88 4c 8d 05 df ff ff ff 49 03 c0 ff e0 48 0f be ce 48 0f be c7 0b c8 48 0f be c9 48 0f be d2 0b ca f7 d1 48 0f be c1 e9 75 08 00 00 48 0f be c6 48 0f be d2 0b c2 8b c8 f7 d1 48 0f be c9 48 0f be c7 23 c8 48 0f be c1 e9 54 08 00 00 48 0f be c6 48 0f be d2 0b c2 8b c8 f7 d1 48 0f be c1 e9 3d 08 00 00 48 0f be c2 48 0f be d7 0b c2 8b c8 f7 d1 48 0f be c9 48 0f be c6 23 c8 48 0f be c1 e9 1c 08 00 00 48 0f be c7 48 0f be d2 0b c2 8b c8 f7 d1 48 0f be c1 e9 05 08 00 00 48 0f be c2 8b d0 f7 d2 48 0f be ca 48 0f be c6 48 0f be d7 33 c2 48 0f be c0 48 0f be c9 23 c8 48 0f be c1 e9 dc 07 00 00 48 0f be c6 48 0f be cf 23 c8 48 0f be c9 48 0f be d2 0b ca f7 d1 48 0f be c1 e9 bd 07 00 00 48 0f be c2 8b d0 f7 d2 48 0f be ca 48 0f be c6 23 c8 48 0f be c9 48 0f be c7 23 c8 48 0f be c1 e9 98 07 00 00 48 0f be c6 48 0f be cf 33 c8 48 0f be c9 48 0f be d2 0b ca f7 d1 48 0f be c1 e9 79 07 00 00 48 0f be c2 8b d0 f7 d2 48 0f be ca 48 0f be c7 23 c8 48 0f be c1 e9 5e 07 00 00 48 0f be ca f7 d1 48 0f be d9 48 0f be ce e8 42 fd ff ff 48 0f be c8 48 0f be d7 e8 b5 fe 82 ff 48 0f be d0 8b cb e8 3a ab ff ff 48 0f be c0 e9 2a 07 00 00 48 0f be ca e8 38 fc 82 ff 48 0f be d0 48 0f be ce e8 1b ab ff ff 48 0f be c0 e9 0b 07 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 21 fc ff ff e9 f5 06 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 fb fb ff ff e9 df 06 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 d5 fb ff ff e9 c9 06 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 af fb ff ff e9 b3 06 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 89 fb ff ff e9 9d 06 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 63 fb ff ff e9 87 06 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 3d fb ff ff e9 71 06 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 17 fb ff ff e9 5b 06 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 f1 fa ff ff e9 45 06 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 cb fa ff ff e9 2f 06 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 a5 fa ff ff e9 19 06 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 7f fa ff ff e9 03 06 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 59 fa ff ff e9 ed 05 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 33 fa ff ff e9 d7 05 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 0d fa ff ff e9 c1 05 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 e7 f9 ff ff e9 ab 05 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 c1 f9 ff ff e9 95 05 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 9b f9 ff ff e9 7f 05 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 75 f9 ff ff e9 69 05 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 4f f9 ff ff e9 53 05 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 29 f9 ff ff e9 3d 05 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 03 f9 ff ff e9 27 05 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 dd f8 ff ff e9 11 05 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 b7 f8 ff ff e9 fb 04 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 91 f8 ff ff e9 e5 04 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 6b f8 ff ff e9 cf 04 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 45 f8 ff ff e9 b9 04 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 1f f8 ff ff e9 a3 04 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 f9 f7 ff ff e9 8d 04 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 d3 f7 ff ff e9 77 04 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 ad f7 ff ff e9 61 04 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 87 f7 ff ff e9 4b 04 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 61 f7 ff ff e9 35 04 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 ab ec ff ff e9 1f 04 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 85 ec ff ff e9 09 04 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 5f ec ff ff e9 f3 03 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 39 ec ff ff e9 dd 03 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 13 ec ff ff e9 c7 03 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 ed eb ff ff e9 b1 03 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 c7 eb ff ff e9 9b 03 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 a1 eb ff ff e9 85 03 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 7b eb ff ff e9 6f 03 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 55 eb ff ff e9 59 03 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 2f eb ff ff e9 43 03 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 09 eb ff ff e9 2d 03 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 e3 ea ff ff e9 17 03 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 bd ea ff ff e9 01 03 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 97 ea ff ff e9 eb 02 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 71 ea ff ff e9 d5 02 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 4b ea ff ff e9 bf 02 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 25 ea ff ff e9 a9 02 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 ff e9 ff ff e9 93 02 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 d9 e9 ff ff e9 7d 02 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 b3 e9 ff ff e9 67 02 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 8d e9 ff ff e9 51 02 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 67 e9 ff ff e9 3b 02 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 41 e9 ff ff e9 25 02 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 1b e9 ff ff e9 0f 02 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 f5 e8 ff ff e9 f9 01 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 cf e8 ff ff e9 e3 01 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 a9 e8 ff ff e9 cd 01 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 83 e8 ff ff e9 b7 01 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 5d e8 ff ff e9 a1 01 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 37 e8 ff ff e9 8b 01 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 11 e8 ff ff e9 75 01 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 eb e7 ff ff e9 5f 01 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 c5 e7 ff ff e9 49 01 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 9f e7 ff ff e9 33 01 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 79 e7 ff ff e9 1d 01 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 53 e7 ff ff e9 07 01 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 2d e7 ff ff e9 f1 00 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 07 e7 ff ff e9 db 00 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 e1 e6 ff ff e9 c5 00 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 bb e6 ff ff e9 af 00 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 95 e6 ff ff e9 99 00 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 6f e6 ff ff e9 83 00 00 00 48 0f be ca 48 0f be d6 4c 0f be c7 e8 49 e6 ff ff eb 70 48 0f be ca 48 0f be d6 4c 0f be c7 e8 26 e6 ff ff eb 5d 48 0f be ca 48 0f be d6 4c 0f be c7 e8 03 e6 ff ff eb 4a 48 0f be ca 48 0f be d6 4c 0f be c7 e8 e0 e5 ff ff eb 37 48 0f be ca 48 0f be d6 4c 0f be c7 e8 bd e5 ff ff eb 24 48 0f be ca 48 0f be d6 4c 0f be c7 e8 9a e5 ff ff eb 11 48 0f be ca 48 0f be d6 4c 0f be c7 e8 77 e5 ff ff 48 0f be c0 48 83 c4 20 5b 5e 5f c3 48 b9 40 b0 5b c6 f7 7f 00 00 e8 dc 50 d4 5e 48 8b f0 0f b6 cb e8 41 e5 ff ff 48 8b d0 48 8b ce e8 16 74 24 ff 48 8b ce e8 0e 9d cb 5e cc 00 00 00 00 00 26 00 00 00 45 00 00 00 66 00 00 00 7d 00 00 00 9e 00 00 00 b5 00 00 00 de 00 00 00 fd 00 00 00 22 01 00 00 41 01 00 00 5c 01 00 00 90 01 00 00 af 01 00 00 c5 01 00 00 db 01 00 00 f1 01 00 00 07 02 00 00 1d 02 00 00 33 02 00 00 49 02 00 00 5f 02 00 00 75 02 00 00 8b 02 00 00 a1 02 00 00 b7 02 00 00 cd 02 00 00 e3 02 00 00 f9 02 00 00 0f 03 00 00 25 03 00 00 3b 03 00 00 51 03 00 00 67 03 00 00 7d 03 00 00 93 03 00 00 a9 03 00 00 bf 03 00 00 d5 03 00 00 eb 03 00 00 01 04 00 00 17 04 00 00 2d 04 00 00 43 04 00 00 59 04 00 00 6f 04 00 00 85 04 00 00 9b 04 00 00 b1 04 00 00 c7 04 00 00 dd 04 00 00 f3 04 00 00 09 05 00 00 1f 05 00 00 35 05 00 00 4b 05 00 00 61 05 00 00 77 05 00 00 8d 05 00 00 a3 05 00 00 b9 05 00 00 cf 05 00 00 e5 05 00 00 fb 05 00 00 11 06 00 00 27 06 00 00 3d 06 00 00 53 06 00 00 69 06 00 00 7f 06 00 00 95 06 00 00 ab 06 00 00 c1 06 00 00 d7 06 00 00 ed 06 00 00 03 07 00 00 19 07 00 00 2f 07 00 00 45 07 00 00 5b 07 00 00 71 07 00 00 87 07 00 00 9d 07 00 00 b3 07 00 00 c9 07 00 00 df 07 00 00 f5 07 00 00 0b 08 00 00 21 08 00 00 37 08 00 00 4a 08 00 00 5d 08 00 00 70 08 00 00 83 08 00 00 96 08 00 00 a9 08 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0003h sub rsp,20h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 20}
0007h mov ebx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d9}
0009h mov esi,r8d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b f0}
000ch mov edi,r9d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b f9}
000fh movzx ecx,bl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 cb}
0012h dec ecx                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c9}
0014h cmp ecx,5eh                             ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f9 5e}
0017h ja near ptr 08d5h                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 b8 08 00 00}
001dh mov ecx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c9}
001fh lea rax,[rip+8e2h]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 e2 08 00 00}
0026h mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0029h lea r8,[rip-21h]                        ; LEA r64, m || REX.W 8D /r || encoded[7]{4c 8d 05 df ff ff ff}
0030h add rax,r8                              ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{49 03 c0}
0033h jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
0035h movsx rcx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ce}
0039h movsx rax,dil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c7}
003dh or ecx,eax                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c8}
003fh movsx rcx,cl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c9}
0043h movsx rdx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d2}
0047h or ecx,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b ca}
0049h not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
004bh movsx rax,cl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c1}
004fh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 75 08 00 00}
0054h movsx rax,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c6}
0058h movsx rdx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d2}
005ch or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
005eh mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0060h not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
0062h movsx rcx,cl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c9}
0066h movsx rax,dil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c7}
006ah and ecx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c8}
006ch movsx rax,cl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c1}
0070h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 54 08 00 00}
0075h movsx rax,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c6}
0079h movsx rdx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d2}
007dh or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
007fh mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0081h not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
0083h movsx rax,cl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c1}
0087h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 3d 08 00 00}
008ch movsx rax,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c2}
0090h movsx rdx,dil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d7}
0094h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
0096h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0098h not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
009ah movsx rcx,cl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c9}
009eh movsx rax,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c6}
00a2h and ecx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c8}
00a4h movsx rax,cl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c1}
00a8h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 1c 08 00 00}
00adh movsx rax,dil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c7}
00b1h movsx rdx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d2}
00b5h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
00b7h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
00b9h not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
00bbh movsx rax,cl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c1}
00bfh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 05 08 00 00}
00c4h movsx rax,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c2}
00c8h mov edx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d0}
00cah not edx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d2}
00cch movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
00d0h movsx rax,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c6}
00d4h movsx rdx,dil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d7}
00d8h xor eax,edx                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c2}
00dah movsx rax,al                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c0}
00deh movsx rcx,cl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c9}
00e2h and ecx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c8}
00e4h movsx rax,cl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c1}
00e8h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 dc 07 00 00}
00edh movsx rax,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c6}
00f1h movsx rcx,dil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be cf}
00f5h and ecx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c8}
00f7h movsx rcx,cl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c9}
00fbh movsx rdx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d2}
00ffh or ecx,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b ca}
0101h not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
0103h movsx rax,cl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c1}
0107h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 bd 07 00 00}
010ch movsx rax,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c2}
0110h mov edx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d0}
0112h not edx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d2}
0114h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0118h movsx rax,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c6}
011ch and ecx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c8}
011eh movsx rcx,cl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c9}
0122h movsx rax,dil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c7}
0126h and ecx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c8}
0128h movsx rax,cl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c1}
012ch jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 98 07 00 00}
0131h movsx rax,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c6}
0135h movsx rcx,dil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be cf}
0139h xor ecx,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c8}
013bh movsx rcx,cl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c9}
013fh movsx rdx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d2}
0143h or ecx,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b ca}
0145h not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
0147h movsx rax,cl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c1}
014bh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 79 07 00 00}
0150h movsx rax,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c2}
0154h mov edx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d0}
0156h not edx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d2}
0158h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
015ch movsx rax,dil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c7}
0160h and ecx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c8}
0162h movsx rax,cl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c1}
0166h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 5e 07 00 00}
016bh movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
016fh not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
0171h movsx rbx,cl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d9}
0175h movsx rcx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ce}
0179h call 7ff7c71611b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 42 fd ff ff}
017eh movsx rcx,al                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c8}
0182h movsx rdx,dil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d7}
0186h call 7ff7c6991330h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b5 fe 82 ff}
018bh movsx rdx,al                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d0}
018fh mov ecx,ebx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b cb}
0191h call 7ff7c715bfc0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3a ab ff ff}
0196h movsx rax,al                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c0}
019ah jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 2a 07 00 00}
019fh movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
01a3h call 7ff7c69910d0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 38 fc 82 ff}
01a8h movsx rdx,al                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d0}
01ach movsx rcx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ce}
01b0h call 7ff7c715bfc0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1b ab ff ff}
01b5h movsx rax,al                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c0}
01b9h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 0b 07 00 00}
01beh movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
01c2h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
01c6h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
01cah call 7ff7c71610e0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 21 fc ff ff}
01cfh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f5 06 00 00}
01d4h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
01d8h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
01dch movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
01e0h call 7ff7c71610d0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fb fb ff ff}
01e5h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 df 06 00 00}
01eah movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
01eeh movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
01f2h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
01f6h call 7ff7c71610c0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d5 fb ff ff}
01fbh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 c9 06 00 00}
0200h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0204h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0208h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
020ch call 7ff7c71610b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 af fb ff ff}
0211h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b3 06 00 00}
0216h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
021ah movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
021eh movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0222h call 7ff7c71610a0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 89 fb ff ff}
0227h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 9d 06 00 00}
022ch movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0230h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0234h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0238h call 7ff7c7161090h                      ; CALL rel32 || E8 cd || encoded[5]{e8 63 fb ff ff}
023dh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 87 06 00 00}
0242h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0246h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
024ah movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
024eh call 7ff7c7161080h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3d fb ff ff}
0253h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 71 06 00 00}
0258h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
025ch movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0260h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0264h call 7ff7c7161070h                      ; CALL rel32 || E8 cd || encoded[5]{e8 17 fb ff ff}
0269h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 5b 06 00 00}
026eh movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0272h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0276h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
027ah call 7ff7c7161060h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f1 fa ff ff}
027fh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 45 06 00 00}
0284h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0288h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
028ch movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0290h call 7ff7c7161050h                      ; CALL rel32 || E8 cd || encoded[5]{e8 cb fa ff ff}
0295h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 2f 06 00 00}
029ah movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
029eh movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
02a2h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
02a6h call 7ff7c7161040h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a5 fa ff ff}
02abh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 19 06 00 00}
02b0h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
02b4h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
02b8h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
02bch call 7ff7c7161030h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7f fa ff ff}
02c1h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 03 06 00 00}
02c6h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
02cah movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
02ceh movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
02d2h call 7ff7c7161020h                      ; CALL rel32 || E8 cd || encoded[5]{e8 59 fa ff ff}
02d7h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ed 05 00 00}
02dch movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
02e0h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
02e4h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
02e8h call 7ff7c7161010h                      ; CALL rel32 || E8 cd || encoded[5]{e8 33 fa ff ff}
02edh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 d7 05 00 00}
02f2h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
02f6h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
02fah movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
02feh call 7ff7c7161000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0d fa ff ff}
0303h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 c1 05 00 00}
0308h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
030ch movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0310h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0314h call 7ff7c7160ff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e7 f9 ff ff}
0319h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ab 05 00 00}
031eh movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0322h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0326h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
032ah call 7ff7c7160fe0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c1 f9 ff ff}
032fh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 95 05 00 00}
0334h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0338h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
033ch movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0340h call 7ff7c7160fd0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9b f9 ff ff}
0345h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 7f 05 00 00}
034ah movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
034eh movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0352h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0356h call 7ff7c7160fc0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 75 f9 ff ff}
035bh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 69 05 00 00}
0360h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0364h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0368h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
036ch call 7ff7c7160fb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 4f f9 ff ff}
0371h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 53 05 00 00}
0376h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
037ah movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
037eh movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0382h call 7ff7c7160fa0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 29 f9 ff ff}
0387h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 3d 05 00 00}
038ch movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0390h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0394h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0398h call 7ff7c7160f90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 03 f9 ff ff}
039dh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 27 05 00 00}
03a2h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
03a6h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
03aah movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
03aeh call 7ff7c7160f80h                      ; CALL rel32 || E8 cd || encoded[5]{e8 dd f8 ff ff}
03b3h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 11 05 00 00}
03b8h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
03bch movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
03c0h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
03c4h call 7ff7c7160f70h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b7 f8 ff ff}
03c9h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 fb 04 00 00}
03ceh movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
03d2h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
03d6h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
03dah call 7ff7c7160f60h                      ; CALL rel32 || E8 cd || encoded[5]{e8 91 f8 ff ff}
03dfh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 e5 04 00 00}
03e4h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
03e8h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
03ech movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
03f0h call 7ff7c7160f50h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6b f8 ff ff}
03f5h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 cf 04 00 00}
03fah movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
03feh movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0402h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0406h call 7ff7c7160f40h                      ; CALL rel32 || E8 cd || encoded[5]{e8 45 f8 ff ff}
040bh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b9 04 00 00}
0410h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0414h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0418h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
041ch call 7ff7c7160f30h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1f f8 ff ff}
0421h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 a3 04 00 00}
0426h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
042ah movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
042eh movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0432h call 7ff7c7160f20h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f9 f7 ff ff}
0437h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 8d 04 00 00}
043ch movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0440h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0444h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0448h call 7ff7c7160f10h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d3 f7 ff ff}
044dh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 77 04 00 00}
0452h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0456h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
045ah movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
045eh call 7ff7c7160f00h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ad f7 ff ff}
0463h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 61 04 00 00}
0468h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
046ch movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0470h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0474h call 7ff7c7160ef0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 87 f7 ff ff}
0479h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 4b 04 00 00}
047eh movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0482h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0486h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
048ah call 7ff7c7160ee0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 61 f7 ff ff}
048fh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 35 04 00 00}
0494h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0498h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
049ch movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
04a0h call 7ff7c7160440h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ab ec ff ff}
04a5h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 1f 04 00 00}
04aah movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
04aeh movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
04b2h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
04b6h call 7ff7c7160430h                      ; CALL rel32 || E8 cd || encoded[5]{e8 85 ec ff ff}
04bbh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 09 04 00 00}
04c0h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
04c4h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
04c8h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
04cch call 7ff7c7160420h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5f ec ff ff}
04d1h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f3 03 00 00}
04d6h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
04dah movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
04deh movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
04e2h call 7ff7c7160410h                      ; CALL rel32 || E8 cd || encoded[5]{e8 39 ec ff ff}
04e7h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 dd 03 00 00}
04ech movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
04f0h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
04f4h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
04f8h call 7ff7c7160400h                      ; CALL rel32 || E8 cd || encoded[5]{e8 13 ec ff ff}
04fdh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 c7 03 00 00}
0502h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0506h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
050ah movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
050eh call 7ff7c71603f0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ed eb ff ff}
0513h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b1 03 00 00}
0518h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
051ch movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0520h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0524h call 7ff7c71603e0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c7 eb ff ff}
0529h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 9b 03 00 00}
052eh movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0532h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0536h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
053ah call 7ff7c71603d0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a1 eb ff ff}
053fh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 85 03 00 00}
0544h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0548h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
054ch movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0550h call 7ff7c71603c0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7b eb ff ff}
0555h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 6f 03 00 00}
055ah movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
055eh movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0562h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0566h call 7ff7c71603b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 55 eb ff ff}
056bh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 59 03 00 00}
0570h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0574h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0578h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
057ch call 7ff7c71603a0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2f eb ff ff}
0581h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 43 03 00 00}
0586h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
058ah movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
058eh movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0592h call 7ff7c7160390h                      ; CALL rel32 || E8 cd || encoded[5]{e8 09 eb ff ff}
0597h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 2d 03 00 00}
059ch movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
05a0h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
05a4h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
05a8h call 7ff7c7160380h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e3 ea ff ff}
05adh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 17 03 00 00}
05b2h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
05b6h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
05bah movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
05beh call 7ff7c7160370h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bd ea ff ff}
05c3h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 01 03 00 00}
05c8h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
05cch movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
05d0h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
05d4h call 7ff7c7160360h                      ; CALL rel32 || E8 cd || encoded[5]{e8 97 ea ff ff}
05d9h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 eb 02 00 00}
05deh movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
05e2h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
05e6h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
05eah call 7ff7c7160350h                      ; CALL rel32 || E8 cd || encoded[5]{e8 71 ea ff ff}
05efh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 d5 02 00 00}
05f4h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
05f8h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
05fch movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0600h call 7ff7c7160340h                      ; CALL rel32 || E8 cd || encoded[5]{e8 4b ea ff ff}
0605h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 bf 02 00 00}
060ah movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
060eh movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0612h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0616h call 7ff7c7160330h                      ; CALL rel32 || E8 cd || encoded[5]{e8 25 ea ff ff}
061bh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 a9 02 00 00}
0620h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0624h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0628h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
062ch call 7ff7c7160320h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ff e9 ff ff}
0631h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 93 02 00 00}
0636h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
063ah movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
063eh movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0642h call 7ff7c7160310h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d9 e9 ff ff}
0647h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 7d 02 00 00}
064ch movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0650h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0654h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0658h call 7ff7c7160300h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b3 e9 ff ff}
065dh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 67 02 00 00}
0662h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0666h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
066ah movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
066eh call 7ff7c71602f0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 8d e9 ff ff}
0673h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 51 02 00 00}
0678h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
067ch movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0680h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0684h call 7ff7c71602e0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 67 e9 ff ff}
0689h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 3b 02 00 00}
068eh movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0692h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0696h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
069ah call 7ff7c71602d0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 41 e9 ff ff}
069fh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 25 02 00 00}
06a4h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
06a8h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
06ach movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
06b0h call 7ff7c71602c0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1b e9 ff ff}
06b5h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 0f 02 00 00}
06bah movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
06beh movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
06c2h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
06c6h call 7ff7c71602b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f5 e8 ff ff}
06cbh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f9 01 00 00}
06d0h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
06d4h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
06d8h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
06dch call 7ff7c71602a0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 cf e8 ff ff}
06e1h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 e3 01 00 00}
06e6h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
06eah movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
06eeh movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
06f2h call 7ff7c7160290h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a9 e8 ff ff}
06f7h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 cd 01 00 00}
06fch movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0700h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0704h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0708h call 7ff7c7160280h                      ; CALL rel32 || E8 cd || encoded[5]{e8 83 e8 ff ff}
070dh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b7 01 00 00}
0712h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0716h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
071ah movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
071eh call 7ff7c7160270h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5d e8 ff ff}
0723h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 a1 01 00 00}
0728h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
072ch movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0730h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0734h call 7ff7c7160260h                      ; CALL rel32 || E8 cd || encoded[5]{e8 37 e8 ff ff}
0739h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 8b 01 00 00}
073eh movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0742h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0746h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
074ah call 7ff7c7160250h                      ; CALL rel32 || E8 cd || encoded[5]{e8 11 e8 ff ff}
074fh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 75 01 00 00}
0754h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0758h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
075ch movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0760h call 7ff7c7160240h                      ; CALL rel32 || E8 cd || encoded[5]{e8 eb e7 ff ff}
0765h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 5f 01 00 00}
076ah movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
076eh movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0772h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0776h call 7ff7c7160230h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c5 e7 ff ff}
077bh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 49 01 00 00}
0780h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0784h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0788h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
078ch call 7ff7c7160220h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9f e7 ff ff}
0791h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 33 01 00 00}
0796h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
079ah movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
079eh movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
07a2h call 7ff7c7160210h                      ; CALL rel32 || E8 cd || encoded[5]{e8 79 e7 ff ff}
07a7h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 1d 01 00 00}
07ach movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
07b0h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
07b4h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
07b8h call 7ff7c7160200h                      ; CALL rel32 || E8 cd || encoded[5]{e8 53 e7 ff ff}
07bdh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 07 01 00 00}
07c2h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
07c6h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
07cah movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
07ceh call 7ff7c71601f0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2d e7 ff ff}
07d3h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f1 00 00 00}
07d8h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
07dch movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
07e0h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
07e4h call 7ff7c71601e0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 07 e7 ff ff}
07e9h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 db 00 00 00}
07eeh movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
07f2h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
07f6h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
07fah call 7ff7c71601d0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e1 e6 ff ff}
07ffh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 c5 00 00 00}
0804h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0808h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
080ch movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0810h call 7ff7c71601c0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bb e6 ff ff}
0815h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 af 00 00 00}
081ah movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
081eh movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0822h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0826h call 7ff7c71601b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 95 e6 ff ff}
082bh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 99 00 00 00}
0830h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0834h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0838h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
083ch call 7ff7c71601a0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6f e6 ff ff}
0841h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 83 00 00 00}
0846h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
084ah movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
084eh movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0852h call 7ff7c7160190h                      ; CALL rel32 || E8 cd || encoded[5]{e8 49 e6 ff ff}
0857h jmp short 08c9h                         ; JMP rel8 || EB cb || encoded[2]{eb 70}
0859h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
085dh movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0861h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0865h call 7ff7c7160180h                      ; CALL rel32 || E8 cd || encoded[5]{e8 26 e6 ff ff}
086ah jmp short 08c9h                         ; JMP rel8 || EB cb || encoded[2]{eb 5d}
086ch movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0870h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0874h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
0878h call 7ff7c7160170h                      ; CALL rel32 || E8 cd || encoded[5]{e8 03 e6 ff ff}
087dh jmp short 08c9h                         ; JMP rel8 || EB cb || encoded[2]{eb 4a}
087fh movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0883h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
0887h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
088bh call 7ff7c7160160h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e0 e5 ff ff}
0890h jmp short 08c9h                         ; JMP rel8 || EB cb || encoded[2]{eb 37}
0892h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
0896h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
089ah movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
089eh call 7ff7c7160150h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bd e5 ff ff}
08a3h jmp short 08c9h                         ; JMP rel8 || EB cb || encoded[2]{eb 24}
08a5h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
08a9h movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
08adh movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
08b1h call 7ff7c7160140h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9a e5 ff ff}
08b6h jmp short 08c9h                         ; JMP rel8 || EB cb || encoded[2]{eb 11}
08b8h movsx rcx,dl                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be ca}
08bch movsx rdx,sil                           ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be d6}
08c0h movsx r8,dil                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{4c 0f be c7}
08c4h call 7ff7c7160130h                      ; CALL rel32 || E8 cd || encoded[5]{e8 77 e5 ff ff}
08c9h movsx rax,al                            ; MOVSX r64, r/m8 || REX.W 0F BE /r || encoded[4]{48 0f be c0}
08cdh add rsp,20h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 20}
08d1h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
08d2h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
08d3h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
08d4h ret                                     ; RET || C3 || encoded[1]{c3}
08d5h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
08dfh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 dc 50 d4 5e}
08e4h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
08e7h movzx ecx,bl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 cb}
08eah call 7ff7c7160120h                      ; CALL rel32 || E8 cd || encoded[5]{e8 41 e5 ff ff}
08efh mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
08f2h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
08f5h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 16 74 24 ff}
08fah mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
08fdh call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0e 9d cb 5e}
0902h int 3                                   ; INT3 || CC || encoded[1]{cc}
0903h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0905h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0907h add [rsi],ah                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 26}
0909h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
090bh add [rbp],al                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 45 00}
090eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0910h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[3]{66 00 00}
0913h add [rbp],bh                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 7d 00}
0916h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0918h sahf                                    ; SAHF || 9E || encoded[1]{9e}
0919h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
091bh add [rbp-22000000h],dh                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 b5 00 00 00 de}
0921h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0923h add ch,bh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 fd}
0925h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0927h add [rdx],ah                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 22}
0929h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
092bh add [rcx+1],al                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 41 01}
092eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0930h pop rsp                                 ; POP r64 || 58+ro || encoded[1]{5c}
0931h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
0933h add [rax-50ffffffh],dl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 90 01 00 00 af}
0939h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
093bh add ch,al                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 c5}
093dh add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
093fh add bl,bl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 db}
0941h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
0943h add cl,dh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 f1}
0945h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
0947h add [rdi],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 07}
0949h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
094bh add [rip+33000002h],bl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 1d 02 00 00 33}
0951h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
0953h add [rcx+2],cl                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 49 02}
0956h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0958h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0959h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
095bh add [rbp+2],dh                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 75 02}
095eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0960h mov eax,[rdx]                           ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b 02}
0962h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0964h mov eax,[0cd000002b7000002h]            ; MOV EAX, moffs32 || o32 A1 mo || encoded[9]{a1 02 00 00 b7 02 00 00 cd}
096dh add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
096fh add bl,ah                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 e3}
0971h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
0973h add cl,bh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 f9}
0975h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
0977h add [rdi],cl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 0f}
0979h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
097bh add [rip+3b000003h],ah                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 25 03 00 00 3b}
0981h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
0983h add [rcx+3],dl                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 51 03}
0986h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0988h add eax,[eax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[3]{67 03 00}
098bh add [rbp+3],bh                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 7d 03}
098eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0990h xchg ebx,eax                            ; XCHG r32, EAX || o32 90+rd || encoded[1]{93}
0991h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
0993h add [rcx-40fffffdh],ch                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 a9 03 00 00 bf}
0999h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
099bh add ch,dl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 d5}
099dh add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
099fh add bl,ch                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 eb}
09a1h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
09a3h add [rcx],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 01}
09a5h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
09a7h add [rdi],dl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 17}
09a9h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
09abh add [rip+43000004h],ch                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 2d 04 00 00 43}
09b1h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
09b3h add [rcx+4],bl                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 59 04}
09b6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
09b8h outsd                                   ; OUTSD || o32 6F || encoded[1]{6f}
09b9h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
09bbh add [rbp-64fffffch],al                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 85 04 00 00 9b}
09c1h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
09c3h add [rcx-38fffffch],dh                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 b1 04 00 00 c7}
09c9h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
09cbh add ch,bl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 dd}
09cdh add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
09cfh add bl,dh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 f3}
09d1h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
09d3h add [rcx],cl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 09}
09d5h add eax,51f0000h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 00 1f 05}
09dah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
09dch xor eax,4b000005h                       ; XOR EAX, imm32 || o32 35 id || encoded[5]{35 05 00 00 4b}
09e1h add eax,5610000h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 00 61 05}
09e6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
09e8h ja short 09efh                          ; JA rel8 || 77 cb || encoded[2]{77 05}
09eah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
09ech lea eax,[rip+5a30000h]                  ; LEA r32, m || o32 8D /r || encoded[6]{8d 05 00 00 a3 05}
09f2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
09f4h mov ecx,0cf000005h                      ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 05 00 00 cf}
09f9h add eax,5e50000h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 00 e5 05}
09feh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0a00h sti                                     ; STI || FB || encoded[1]{fb}
0a01h add eax,6110000h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 00 11 06}
0a06h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0a08h (bad)                                   ; <invalid> || <invalid> || encoded[2]{27 06}
0a0ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0a0ch cmp eax,53000006h                       ; CMP EAX, imm32 || o32 3D id || encoded[5]{3d 06 00 00 53}
0a11h (bad)                                   ; <invalid> || <invalid> || encoded[2]{06 00}
0a13h add [rcx+6],ch                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 69 06}
0a16h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0a18h jg short 0a20h                          ; JG rel8 || 7F cb || encoded[2]{7f 06}
0a1ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0a1ch xchg ebp,eax                            ; XCHG r32, EAX || o32 90+rd || encoded[1]{95}
0a1dh (bad)                                   ; <invalid> || <invalid> || encoded[2]{06 00}
0a1fh add [rbx-3efffffah],ch                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 ab 06 00 00 c1}
0a25h (bad)                                   ; <invalid> || <invalid> || encoded[2]{06 00}
0a27h add bh,dl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 d7}
0a29h (bad)                                   ; <invalid> || <invalid> || encoded[2]{06 00}
0a2bh add ch,ch                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 ed}
0a2dh (bad)                                   ; <invalid> || <invalid> || encoded[2]{06 00}
0a2fh add [rbx],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 03}
0a31h (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
0a33h add [rcx],bl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 19}
0a35h (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
0a37h add [rdi],ch                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 2f}
0a39h (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
0a3bh add [rbp+7],al                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 45 07}
0a3eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0a40h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0a41h (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
0a43h add [rcx+7],dh                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 71 07}
0a46h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0a48h xchg eax,[rdi]                          ; XCHG r/m32, r32 || o32 87 /r || encoded[2]{87 07}
0a4ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0a4ch popfq                                   ; POPFQ || 9D || encoded[1]{9d}
0a4dh (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
0a4fh add [rbx-36fffff9h],dh                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 b3 07 00 00 c9}
0a55h (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
0a57h add bh,bl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 df}
0a59h (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
0a5bh add ch,dh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 f5}
0a5dh (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
0a5fh add [rbx],cl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 0b}
0a61h or [rax],al                             ; OR r/m8, r8 || 08 /r || encoded[2]{08 00}
0a63h add [rcx],ah                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 21}
0a65h or [rax],al                             ; OR r/m8, r8 || 08 /r || encoded[2]{08 00}
0a67h add [rdi],dh                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 37}
0a69h or [rax],al                             ; OR r/m8, r8 || 08 /r || encoded[2]{08 00}
0a6bh add [rdx+8],cl                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 4a 08}
0a6eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0a70h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0a71h or [rax],al                             ; OR r/m8, r8 || 08 /r || encoded[2]{08 00}
0a73h add [rax+8],dh                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 70 08}
0a76h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0a78h or dword ptr [rax],0                    ; OR r/m32, imm8 || o32 83 /1 ib || encoded[3]{83 08 00}
0a7bh add [rsi-56fffff8h],dl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 96 08 00 00 a9}
0a81h or [rax],al                             ; OR r/m8, r8 || 08 /r || encoded[2]{08 00}
0a83h add [rcx],bl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 19}
0a85h (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 04}
0a87h add [rdi],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 07}
0a89h xor al,[rbx]                            ; XOR r8, r/m8 || 32 /r || encoded[2]{32 03}
0a8bh xor [rdx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 02}
0a8dh (bad)                                   ; <invalid> || <invalid> || encoded[2]{60 01}
0a8fh jo short 0ad1h                          ; JO rel8 || 70 cb || encoded[2]{70 40}
------------------------------------------------------------------------------------------------------------------------
; ushort eval<ushort>(TernaryBitLogicKind:byte kind, ushort a, ushort b, ushort c)
; eval_g[16u](TernaryBitLogicKind~8u,16u,16u,16u)[2537] = {57 56 53 48 83 ec 30 8b d9 41 8b f0 41 8b f9 0f b6 cb ff c9 83 f9 5e 0f 87 10 08 00 00 8b c9 48 8d 05 3a 08 00 00 8b 04 88 4c 8d 05 df ff ff ff 49 03 c0 ff e0 0f b7 ce 0f b7 c7 0b c8 0f b7 c9 0f b7 d2 0b ca f7 d1 0f b7 c1 e9 d3 07 00 00 0f b7 c6 0f b7 d2 0b c2 8b c8 f7 d1 0f b7 c9 0f b7 c7 23 c8 0f b7 c1 e9 b7 07 00 00 0f b7 c6 0f b7 d2 0b c2 8b c8 f7 d1 0f b7 c1 e9 a3 07 00 00 0f b7 c2 0f b7 d7 0b c2 8b c8 f7 d1 0f b7 c9 0f b7 c6 23 c8 0f b7 c1 e9 87 07 00 00 0f b7 c7 0f b7 d2 0b c2 8b c8 f7 d1 0f b7 c1 e9 73 07 00 00 0f b7 c2 8b d0 f7 d2 0f b7 ca 0f b7 c6 0f b7 d7 33 c2 0f b7 c0 0f b7 c9 23 c8 0f b7 c1 e9 51 07 00 00 0f b7 c6 0f b7 cf 23 c8 0f b7 c9 0f b7 d2 0b ca f7 d1 0f b7 c1 e9 37 07 00 00 0f b7 c2 8b d0 f7 d2 0f b7 ca 0f b7 c6 23 c8 0f b7 c9 0f b7 c7 23 c8 0f b7 c1 e9 18 07 00 00 0f b7 c6 0f b7 cf 33 c8 0f b7 c9 0f b7 d2 0b ca f7 d1 0f b7 c1 e9 fe 06 00 00 0f b7 c2 8b d0 f7 d2 0f b7 ca 0f b7 c7 23 c8 0f b7 c1 e9 e7 06 00 00 0f b7 c2 8b d0 f7 d2 0f b7 ca 0f b7 c6 35 ff ff 00 00 89 44 24 2c 0f b7 44 24 2c 0f b7 d7 0b c2 0f b7 c0 0f b7 c9 23 c8 0f b7 c1 e9 b7 06 00 00 0f b7 c2 8b d0 f7 d2 0f b7 ca 0f b7 c6 23 c8 0f b7 c1 e9 a0 06 00 00 0f b7 c2 8b d0 f7 d2 0f b7 ca 0f b7 c7 35 ff ff 00 00 89 44 24 28 0f b7 44 24 28 0f b7 d6 0b c2 0f b7 c0 0f b7 c9 23 c8 0f b7 c1 e9 70 06 00 00 0f b7 ca f7 d1 0f b7 c9 66 89 4c 24 20 48 8d 4c 24 20 e8 ef 50 82 ff 0f b7 18 0f b7 ce 0f b7 d7 e8 59 9d ff ff 8b d0 8b cb e8 b0 9d ff ff 0f b7 c0 e9 3a 06 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 21 fa ff ff e9 26 06 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 fd f9 ff ff e9 12 06 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 d9 f9 ff ff e9 fe 05 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 ad f9 ff ff e9 ea 05 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 89 f9 ff ff e9 d6 05 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 65 f9 ff ff e9 c2 05 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 41 f9 ff ff e9 ae 05 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 1d f9 ff ff e9 9a 05 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 f9 f8 ff ff e9 86 05 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 d5 f8 ff ff e9 72 05 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 b1 f8 ff ff e9 5e 05 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 8d f8 ff ff e9 4a 05 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 69 f8 ff ff e9 36 05 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 45 f8 ff ff e9 22 05 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 21 f8 ff ff e9 0e 05 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 fd f7 ff ff e9 fa 04 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 d9 f7 ff ff e9 e6 04 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 b5 f7 ff ff e9 d2 04 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 91 f7 ff ff e9 be 04 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 6d f7 ff ff e9 aa 04 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 49 f7 ff ff e9 96 04 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 25 f7 ff ff e9 82 04 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 01 f7 ff ff e9 6e 04 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 dd f6 ff ff e9 5a 04 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 b9 f6 ff ff e9 46 04 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 95 f6 ff ff e9 32 04 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 71 f6 ff ff e9 1e 04 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 4d f6 ff ff e9 0a 04 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 29 f6 ff ff e9 f6 03 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 05 f6 ff ff e9 e2 03 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 e1 f5 ff ff e9 ce 03 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 bd f5 ff ff e9 ba 03 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 99 f5 ff ff e9 a6 03 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 75 f5 ff ff e9 92 03 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 51 f5 ff ff e9 7e 03 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 2d f5 ff ff e9 6a 03 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 09 f5 ff ff e9 56 03 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 e5 f4 ff ff e9 42 03 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 c1 f4 ff ff e9 2e 03 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 9d f4 ff ff e9 1a 03 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 79 f4 ff ff e9 06 03 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 55 f4 ff ff e9 f2 02 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 31 f4 ff ff e9 de 02 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 0d f4 ff ff e9 ca 02 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 e9 f3 ff ff e9 b6 02 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 c5 f3 ff ff e9 a2 02 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 a1 f3 ff ff e9 8e 02 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 7d f3 ff ff e9 7a 02 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 59 f3 ff ff e9 66 02 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 35 f3 ff ff e9 52 02 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 11 f3 ff ff e9 3e 02 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 ed f2 ff ff e9 2a 02 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 c9 f2 ff ff e9 16 02 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 a5 f2 ff ff e9 02 02 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 81 f2 ff ff e9 ee 01 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 5d f2 ff ff e9 da 01 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 39 f2 ff ff e9 c6 01 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 15 f2 ff ff e9 b2 01 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 f1 f1 ff ff e9 9e 01 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 cd f1 ff ff e9 8a 01 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 a9 f1 ff ff e9 76 01 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 85 f1 ff ff e9 62 01 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 61 f1 ff ff e9 4e 01 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 3d f1 ff ff e9 3a 01 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 19 f1 ff ff e9 26 01 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 f5 f0 ff ff e9 12 01 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 d1 f0 ff ff e9 fe 00 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 fd e5 ff ff e9 ea 00 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 d9 e5 ff ff e9 d6 00 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 b5 e5 ff ff e9 c2 00 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 91 e5 ff ff e9 ae 00 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 6d e5 ff ff e9 9a 00 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 49 e5 ff ff e9 86 00 00 00 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 25 e5 ff ff eb 75 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 04 e5 ff ff eb 64 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 e3 e4 ff ff eb 53 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 c2 e4 ff ff eb 42 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 a1 e4 ff ff eb 31 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 80 e4 ff ff eb 20 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 5f e4 ff ff eb 0f 0f b7 ca 0f b7 d6 44 0f b7 c7 e8 3e e4 ff ff 0f b7 c0 48 83 c4 30 5b 5e 5f c3 48 b9 40 b0 5b c6 f7 7f 00 00 e8 d4 3e d4 5e 48 8b f0 0f b6 cb e8 09 e4 ff ff 48 8b d0 48 8b ce e8 0e 62 24 ff 48 8b ce e8 06 8b cb 5e cc 00 00 00 00 00 26 00 00 00 40 00 00 00 5c 00 00 00 70 00 00 00 8c 00 00 00 a0 00 00 00 c2 00 00 00 dc 00 00 00 fb 00 00 00 15 01 00 00 2c 01 00 00 5c 01 00 00 73 01 00 00 a3 01 00 00 d9 01 00 00 ed 01 00 00 01 02 00 00 15 02 00 00 29 02 00 00 3d 02 00 00 51 02 00 00 65 02 00 00 79 02 00 00 8d 02 00 00 a1 02 00 00 b5 02 00 00 c9 02 00 00 dd 02 00 00 f1 02 00 00 05 03 00 00 19 03 00 00 2d 03 00 00 41 03 00 00 55 03 00 00 69 03 00 00 7d 03 00 00 91 03 00 00 a5 03 00 00 b9 03 00 00 cd 03 00 00 e1 03 00 00 f5 03 00 00 09 04 00 00 1d 04 00 00 31 04 00 00 45 04 00 00 59 04 00 00 6d 04 00 00 81 04 00 00 95 04 00 00 a9 04 00 00 bd 04 00 00 d1 04 00 00 e5 04 00 00 f9 04 00 00 0d 05 00 00 21 05 00 00 35 05 00 00 49 05 00 00 5d 05 00 00 71 05 00 00 85 05 00 00 99 05 00 00 ad 05 00 00 c1 05 00 00 d5 05 00 00 e9 05 00 00 fd 05 00 00 11 06 00 00 25 06 00 00 39 06 00 00 4d 06 00 00 61 06 00 00 75 06 00 00 89 06 00 00 9d 06 00 00 b1 06 00 00 c5 06 00 00 d9 06 00 00 ed 06 00 00 01 07 00 00 15 07 00 00 29 07 00 00 3d 07 00 00 51 07 00 00 65 07 00 00 79 07 00 00 8d 07 00 00 9e 07 00 00 af 07 00 00 c0 07 00 00 d1 07 00 00 e2 07 00 00 f3 07 00 00 04 08 00 00 19 07 04 00 07 52 03 30 02 60 01 70 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0003h sub rsp,30h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 30}
0007h mov ebx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d9}
0009h mov esi,r8d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b f0}
000ch mov edi,r9d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b f9}
000fh movzx ecx,bl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 cb}
0012h dec ecx                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c9}
0014h cmp ecx,5eh                             ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f9 5e}
0017h ja near ptr 082dh                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 10 08 00 00}
001dh mov ecx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c9}
001fh lea rax,[rip+83ah]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 3a 08 00 00}
0026h mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0029h lea r8,[rip-21h]                        ; LEA r64, m || REX.W 8D /r || encoded[7]{4c 8d 05 df ff ff ff}
0030h add rax,r8                              ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{49 03 c0}
0033h jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
0035h movzx ecx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ce}
0038h movzx eax,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c7}
003bh or ecx,eax                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c8}
003dh movzx ecx,cx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c9}
0040h movzx edx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d2}
0043h or ecx,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b ca}
0045h not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
0047h movzx eax,cx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c1}
004ah jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 d3 07 00 00}
004fh movzx eax,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c6}
0052h movzx edx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d2}
0055h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
0057h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0059h not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
005bh movzx ecx,cx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c9}
005eh movzx eax,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c7}
0061h and ecx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c8}
0063h movzx eax,cx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c1}
0066h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b7 07 00 00}
006bh movzx eax,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c6}
006eh movzx edx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d2}
0071h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
0073h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0075h not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
0077h movzx eax,cx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c1}
007ah jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 a3 07 00 00}
007fh movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
0082h movzx edx,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d7}
0085h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
0087h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0089h not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
008bh movzx ecx,cx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c9}
008eh movzx eax,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c6}
0091h and ecx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c8}
0093h movzx eax,cx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c1}
0096h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 87 07 00 00}
009bh movzx eax,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c7}
009eh movzx edx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d2}
00a1h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
00a3h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
00a5h not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
00a7h movzx eax,cx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c1}
00aah jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 73 07 00 00}
00afh movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
00b2h mov edx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d0}
00b4h not edx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d2}
00b6h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
00b9h movzx eax,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c6}
00bch movzx edx,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d7}
00bfh xor eax,edx                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c2}
00c1h movzx eax,ax                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c0}
00c4h movzx ecx,cx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c9}
00c7h and ecx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c8}
00c9h movzx eax,cx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c1}
00cch jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 51 07 00 00}
00d1h movzx eax,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c6}
00d4h movzx ecx,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 cf}
00d7h and ecx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c8}
00d9h movzx ecx,cx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c9}
00dch movzx edx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d2}
00dfh or ecx,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b ca}
00e1h not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
00e3h movzx eax,cx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c1}
00e6h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 37 07 00 00}
00ebh movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
00eeh mov edx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d0}
00f0h not edx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d2}
00f2h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
00f5h movzx eax,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c6}
00f8h and ecx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c8}
00fah movzx ecx,cx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c9}
00fdh movzx eax,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c7}
0100h and ecx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c8}
0102h movzx eax,cx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c1}
0105h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 18 07 00 00}
010ah movzx eax,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c6}
010dh movzx ecx,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 cf}
0110h xor ecx,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c8}
0112h movzx ecx,cx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c9}
0115h movzx edx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d2}
0118h or ecx,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b ca}
011ah not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
011ch movzx eax,cx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c1}
011fh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 fe 06 00 00}
0124h movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
0127h mov edx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d0}
0129h not edx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d2}
012bh movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
012eh movzx eax,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c7}
0131h and ecx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c8}
0133h movzx eax,cx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c1}
0136h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 e7 06 00 00}
013bh movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
013eh mov edx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d0}
0140h not edx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d2}
0142h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
0145h movzx eax,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c6}
0148h xor eax,0ffffh                          ; XOR EAX, imm32 || o32 35 id || encoded[5]{35 ff ff 00 00}
014dh mov [rsp+2ch],eax                       ; MOV r/m32, r32 || o32 89 /r || encoded[4]{89 44 24 2c}
0151h movzx eax,word ptr [rsp+2ch]            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[5]{0f b7 44 24 2c}
0156h movzx edx,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d7}
0159h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
015bh movzx eax,ax                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c0}
015eh movzx ecx,cx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c9}
0161h and ecx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c8}
0163h movzx eax,cx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c1}
0166h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b7 06 00 00}
016bh movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
016eh mov edx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d0}
0170h not edx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d2}
0172h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
0175h movzx eax,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c6}
0178h and ecx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c8}
017ah movzx eax,cx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c1}
017dh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 a0 06 00 00}
0182h movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
0185h mov edx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d0}
0187h not edx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d2}
0189h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
018ch movzx eax,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c7}
018fh xor eax,0ffffh                          ; XOR EAX, imm32 || o32 35 id || encoded[5]{35 ff ff 00 00}
0194h mov [rsp+28h],eax                       ; MOV r/m32, r32 || o32 89 /r || encoded[4]{89 44 24 28}
0198h movzx eax,word ptr [rsp+28h]            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[5]{0f b7 44 24 28}
019dh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
01a0h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
01a2h movzx eax,ax                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c0}
01a5h movzx ecx,cx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c9}
01a8h and ecx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c8}
01aah movzx eax,cx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c1}
01adh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 70 06 00 00}
01b2h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
01b5h not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
01b7h movzx ecx,cx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c9}
01bah mov [rsp+20h],cx                        ; MOV r/m16, r16 || o16 89 /r || encoded[5]{66 89 4c 24 20}
01bfh lea rcx,[rsp+20h]                       ; LEA r64, m || REX.W 8D /r || encoded[5]{48 8d 4c 24 20}
01c4h call 7ff7c6987858h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ef 50 82 ff}
01c9h movzx ebx,word ptr [rax]                ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 18}
01cch movzx ecx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ce}
01cfh movzx edx,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d7}
01d2h call 7ff7c715c4d0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 59 9d ff ff}
01d7h mov edx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d0}
01d9h mov ecx,ebx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b cb}
01dbh call 7ff7c715c530h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b0 9d ff ff}
01e0h movzx eax,ax                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c0}
01e3h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 3a 06 00 00}
01e8h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
01ebh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
01eeh movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
01f2h call 7ff7c71621b8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 21 fa ff ff}
01f7h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 26 06 00 00}
01fch movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
01ffh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
0202h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
0206h call 7ff7c71621a8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fd f9 ff ff}
020bh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 12 06 00 00}
0210h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
0213h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
0216h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
021ah call 7ff7c7162198h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d9 f9 ff ff}
021fh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 fe 05 00 00}
0224h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
0227h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
022ah movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
022eh call 7ff7c7162180h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ad f9 ff ff}
0233h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ea 05 00 00}
0238h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
023bh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
023eh movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
0242h call 7ff7c7162170h                      ; CALL rel32 || E8 cd || encoded[5]{e8 89 f9 ff ff}
0247h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 d6 05 00 00}
024ch movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
024fh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
0252h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
0256h call 7ff7c7162160h                      ; CALL rel32 || E8 cd || encoded[5]{e8 65 f9 ff ff}
025bh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 c2 05 00 00}
0260h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
0263h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
0266h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
026ah call 7ff7c7162150h                      ; CALL rel32 || E8 cd || encoded[5]{e8 41 f9 ff ff}
026fh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ae 05 00 00}
0274h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
0277h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
027ah movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
027eh call 7ff7c7162140h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1d f9 ff ff}
0283h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 9a 05 00 00}
0288h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
028bh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
028eh movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
0292h call 7ff7c7162130h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f9 f8 ff ff}
0297h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 86 05 00 00}
029ch movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
029fh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
02a2h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
02a6h call 7ff7c7162120h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d5 f8 ff ff}
02abh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 72 05 00 00}
02b0h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
02b3h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
02b6h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
02bah call 7ff7c7162110h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b1 f8 ff ff}
02bfh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 5e 05 00 00}
02c4h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
02c7h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
02cah movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
02ceh call 7ff7c7162100h                      ; CALL rel32 || E8 cd || encoded[5]{e8 8d f8 ff ff}
02d3h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 4a 05 00 00}
02d8h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
02dbh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
02deh movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
02e2h call 7ff7c71620f0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 69 f8 ff ff}
02e7h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 36 05 00 00}
02ech movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
02efh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
02f2h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
02f6h call 7ff7c71620e0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 45 f8 ff ff}
02fbh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 22 05 00 00}
0300h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
0303h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
0306h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
030ah call 7ff7c71620d0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 21 f8 ff ff}
030fh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 0e 05 00 00}
0314h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
0317h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
031ah movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
031eh call 7ff7c71620c0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fd f7 ff ff}
0323h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 fa 04 00 00}
0328h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
032bh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
032eh movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
0332h call 7ff7c71620b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d9 f7 ff ff}
0337h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 e6 04 00 00}
033ch movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
033fh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
0342h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
0346h call 7ff7c71620a0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b5 f7 ff ff}
034bh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 d2 04 00 00}
0350h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
0353h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
0356h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
035ah call 7ff7c7162090h                      ; CALL rel32 || E8 cd || encoded[5]{e8 91 f7 ff ff}
035fh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 be 04 00 00}
0364h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
0367h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
036ah movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
036eh call 7ff7c7162080h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6d f7 ff ff}
0373h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 aa 04 00 00}
0378h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
037bh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
037eh movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
0382h call 7ff7c7162070h                      ; CALL rel32 || E8 cd || encoded[5]{e8 49 f7 ff ff}
0387h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 96 04 00 00}
038ch movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
038fh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
0392h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
0396h call 7ff7c7162060h                      ; CALL rel32 || E8 cd || encoded[5]{e8 25 f7 ff ff}
039bh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 82 04 00 00}
03a0h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
03a3h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
03a6h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
03aah call 7ff7c7162050h                      ; CALL rel32 || E8 cd || encoded[5]{e8 01 f7 ff ff}
03afh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 6e 04 00 00}
03b4h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
03b7h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
03bah movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
03beh call 7ff7c7162040h                      ; CALL rel32 || E8 cd || encoded[5]{e8 dd f6 ff ff}
03c3h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 5a 04 00 00}
03c8h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
03cbh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
03ceh movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
03d2h call 7ff7c7162030h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b9 f6 ff ff}
03d7h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 46 04 00 00}
03dch movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
03dfh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
03e2h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
03e6h call 7ff7c7162020h                      ; CALL rel32 || E8 cd || encoded[5]{e8 95 f6 ff ff}
03ebh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 32 04 00 00}
03f0h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
03f3h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
03f6h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
03fah call 7ff7c7162010h                      ; CALL rel32 || E8 cd || encoded[5]{e8 71 f6 ff ff}
03ffh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 1e 04 00 00}
0404h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
0407h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
040ah movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
040eh call 7ff7c7162000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 4d f6 ff ff}
0413h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 0a 04 00 00}
0418h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
041bh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
041eh movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
0422h call 7ff7c7161ff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 29 f6 ff ff}
0427h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f6 03 00 00}
042ch movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
042fh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
0432h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
0436h call 7ff7c7161fe0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 05 f6 ff ff}
043bh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 e2 03 00 00}
0440h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
0443h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
0446h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
044ah call 7ff7c7161fd0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e1 f5 ff ff}
044fh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ce 03 00 00}
0454h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
0457h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
045ah movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
045eh call 7ff7c7161fc0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bd f5 ff ff}
0463h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ba 03 00 00}
0468h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
046bh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
046eh movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
0472h call 7ff7c7161fb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 99 f5 ff ff}
0477h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 a6 03 00 00}
047ch movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
047fh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
0482h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
0486h call 7ff7c7161fa0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 75 f5 ff ff}
048bh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 92 03 00 00}
0490h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
0493h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
0496h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
049ah call 7ff7c7161f90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 51 f5 ff ff}
049fh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 7e 03 00 00}
04a4h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
04a7h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
04aah movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
04aeh call 7ff7c7161f80h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2d f5 ff ff}
04b3h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 6a 03 00 00}
04b8h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
04bbh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
04beh movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
04c2h call 7ff7c7161f70h                      ; CALL rel32 || E8 cd || encoded[5]{e8 09 f5 ff ff}
04c7h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 56 03 00 00}
04cch movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
04cfh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
04d2h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
04d6h call 7ff7c7161f60h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e5 f4 ff ff}
04dbh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 42 03 00 00}
04e0h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
04e3h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
04e6h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
04eah call 7ff7c7161f50h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c1 f4 ff ff}
04efh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 2e 03 00 00}
04f4h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
04f7h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
04fah movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
04feh call 7ff7c7161f40h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9d f4 ff ff}
0503h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 1a 03 00 00}
0508h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
050bh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
050eh movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
0512h call 7ff7c7161f30h                      ; CALL rel32 || E8 cd || encoded[5]{e8 79 f4 ff ff}
0517h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 06 03 00 00}
051ch movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
051fh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
0522h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
0526h call 7ff7c7161f20h                      ; CALL rel32 || E8 cd || encoded[5]{e8 55 f4 ff ff}
052bh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f2 02 00 00}
0530h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
0533h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
0536h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
053ah call 7ff7c7161f10h                      ; CALL rel32 || E8 cd || encoded[5]{e8 31 f4 ff ff}
053fh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 de 02 00 00}
0544h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
0547h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
054ah movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
054eh call 7ff7c7161f00h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0d f4 ff ff}
0553h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ca 02 00 00}
0558h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
055bh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
055eh movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
0562h call 7ff7c7161ef0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e9 f3 ff ff}
0567h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b6 02 00 00}
056ch movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
056fh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
0572h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
0576h call 7ff7c7161ee0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c5 f3 ff ff}
057bh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 a2 02 00 00}
0580h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
0583h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
0586h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
058ah call 7ff7c7161ed0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a1 f3 ff ff}
058fh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 8e 02 00 00}
0594h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
0597h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
059ah movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
059eh call 7ff7c7161ec0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7d f3 ff ff}
05a3h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 7a 02 00 00}
05a8h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
05abh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
05aeh movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
05b2h call 7ff7c7161eb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 59 f3 ff ff}
05b7h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 66 02 00 00}
05bch movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
05bfh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
05c2h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
05c6h call 7ff7c7161ea0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 35 f3 ff ff}
05cbh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 52 02 00 00}
05d0h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
05d3h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
05d6h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
05dah call 7ff7c7161e90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 11 f3 ff ff}
05dfh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 3e 02 00 00}
05e4h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
05e7h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
05eah movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
05eeh call 7ff7c7161e80h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ed f2 ff ff}
05f3h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 2a 02 00 00}
05f8h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
05fbh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
05feh movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
0602h call 7ff7c7161e70h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c9 f2 ff ff}
0607h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 16 02 00 00}
060ch movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
060fh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
0612h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
0616h call 7ff7c7161e60h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a5 f2 ff ff}
061bh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 02 02 00 00}
0620h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
0623h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
0626h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
062ah call 7ff7c7161e50h                      ; CALL rel32 || E8 cd || encoded[5]{e8 81 f2 ff ff}
062fh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ee 01 00 00}
0634h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
0637h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
063ah movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
063eh call 7ff7c7161e40h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5d f2 ff ff}
0643h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 da 01 00 00}
0648h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
064bh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
064eh movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
0652h call 7ff7c7161e30h                      ; CALL rel32 || E8 cd || encoded[5]{e8 39 f2 ff ff}
0657h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 c6 01 00 00}
065ch movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
065fh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
0662h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
0666h call 7ff7c7161e20h                      ; CALL rel32 || E8 cd || encoded[5]{e8 15 f2 ff ff}
066bh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b2 01 00 00}
0670h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
0673h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
0676h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
067ah call 7ff7c7161e10h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f1 f1 ff ff}
067fh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 9e 01 00 00}
0684h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
0687h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
068ah movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
068eh call 7ff7c7161e00h                      ; CALL rel32 || E8 cd || encoded[5]{e8 cd f1 ff ff}
0693h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 8a 01 00 00}
0698h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
069bh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
069eh movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
06a2h call 7ff7c7161df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a9 f1 ff ff}
06a7h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 76 01 00 00}
06ach movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
06afh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
06b2h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
06b6h call 7ff7c7161de0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 85 f1 ff ff}
06bbh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 62 01 00 00}
06c0h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
06c3h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
06c6h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
06cah call 7ff7c7161dd0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 61 f1 ff ff}
06cfh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 4e 01 00 00}
06d4h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
06d7h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
06dah movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
06deh call 7ff7c7161dc0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3d f1 ff ff}
06e3h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 3a 01 00 00}
06e8h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
06ebh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
06eeh movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
06f2h call 7ff7c7161db0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 19 f1 ff ff}
06f7h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 26 01 00 00}
06fch movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
06ffh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
0702h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
0706h call 7ff7c7161da0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f5 f0 ff ff}
070bh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 12 01 00 00}
0710h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
0713h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
0716h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
071ah call 7ff7c7161d90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d1 f0 ff ff}
071fh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 fe 00 00 00}
0724h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
0727h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
072ah movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
072eh call 7ff7c71612d0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fd e5 ff ff}
0733h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ea 00 00 00}
0738h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
073bh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
073eh movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
0742h call 7ff7c71612c0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d9 e5 ff ff}
0747h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 d6 00 00 00}
074ch movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
074fh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
0752h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
0756h call 7ff7c71612b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b5 e5 ff ff}
075bh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 c2 00 00 00}
0760h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
0763h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
0766h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
076ah call 7ff7c71612a0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 91 e5 ff ff}
076fh jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ae 00 00 00}
0774h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
0777h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
077ah movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
077eh call 7ff7c7161290h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6d e5 ff ff}
0783h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 9a 00 00 00}
0788h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
078bh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
078eh movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
0792h call 7ff7c7161280h                      ; CALL rel32 || E8 cd || encoded[5]{e8 49 e5 ff ff}
0797h jmp near ptr 0822h                      ; JMP rel32 || E9 cd || encoded[5]{e9 86 00 00 00}
079ch movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
079fh movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
07a2h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
07a6h call 7ff7c7161270h                      ; CALL rel32 || E8 cd || encoded[5]{e8 25 e5 ff ff}
07abh jmp short 0822h                         ; JMP rel8 || EB cb || encoded[2]{eb 75}
07adh movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
07b0h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
07b3h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
07b7h call 7ff7c7161260h                      ; CALL rel32 || E8 cd || encoded[5]{e8 04 e5 ff ff}
07bch jmp short 0822h                         ; JMP rel8 || EB cb || encoded[2]{eb 64}
07beh movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
07c1h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
07c4h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
07c8h call 7ff7c7161250h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e3 e4 ff ff}
07cdh jmp short 0822h                         ; JMP rel8 || EB cb || encoded[2]{eb 53}
07cfh movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
07d2h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
07d5h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
07d9h call 7ff7c7161240h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c2 e4 ff ff}
07deh jmp short 0822h                         ; JMP rel8 || EB cb || encoded[2]{eb 42}
07e0h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
07e3h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
07e6h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
07eah call 7ff7c7161230h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a1 e4 ff ff}
07efh jmp short 0822h                         ; JMP rel8 || EB cb || encoded[2]{eb 31}
07f1h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
07f4h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
07f7h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
07fbh call 7ff7c7161220h                      ; CALL rel32 || E8 cd || encoded[5]{e8 80 e4 ff ff}
0800h jmp short 0822h                         ; JMP rel8 || EB cb || encoded[2]{eb 20}
0802h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
0805h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
0808h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
080ch call 7ff7c7161210h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5f e4 ff ff}
0811h jmp short 0822h                         ; JMP rel8 || EB cb || encoded[2]{eb 0f}
0813h movzx ecx,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 ca}
0816h movzx edx,si                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 d6}
0819h movzx r8d,di                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[4]{44 0f b7 c7}
081dh call 7ff7c7161200h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3e e4 ff ff}
0822h movzx eax,ax                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c0}
0825h add rsp,30h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 30}
0829h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
082ah pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
082bh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
082ch ret                                     ; RET || C3 || encoded[1]{c3}
082dh mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0837h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d4 3e d4 5e}
083ch mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
083fh movzx ecx,bl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 cb}
0842h call 7ff7c71611f0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 09 e4 ff ff}
0847h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
084ah mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
084dh call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0e 62 24 ff}
0852h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0855h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 06 8b cb 5e}
085ah int 3                                   ; INT3 || CC || encoded[1]{cc}
085bh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
085dh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
085fh add [rsi],ah                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 26}
0861h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0863h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 40 00}
0866h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0868h pop rsp                                 ; POP r64 || 58+ro || encoded[1]{5c}
0869h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
086bh add [rax],dh                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 70 00}
086eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0870h mov [rax],es                            ; MOV r32/m16, Sreg || o32 8C /r || encoded[2]{8c 00}
0872h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0874h mov al,[0dc000000c2000000h]             ; MOV AL, moffs8 || A0 mo || encoded[9]{a0 00 00 00 c2 00 00 00 dc}
087dh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
087fh add bl,bh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 fb}
0881h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0883h add [rip+2c000001h],dl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 15 01 00 00 2c}
0889h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
088bh add [rcx+rax],bl                        ; ADD r/m8, r8 || 00 /r || encoded[4]{00 5c 01 00}
088fh add [rbx+1],dh                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 73 01}
0892h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0894h mov [0ed000001d9000001h],eax            ; MOV moffs32, EAX || o32 A3 mo || encoded[9]{a3 01 00 00 d9 01 00 00 ed}
089dh add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
089fh add [rcx],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 01}
08a1h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
08a3h add [rip+29000002h],dl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 15 02 00 00 29}
08a9h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
08abh add [rip+51000002h],bh                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 3d 02 00 00 51}
08b1h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
08b3h add [rbp+2],ah                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 65 02}
08b6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
08b8h jns short 08bch                         ; JNS rel8 || 79 cb || encoded[2]{79 02}
08bah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
08bch lea eax,[rdx]                           ; LEA r32, m || o32 8D /r || encoded[2]{8d 02}
08beh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
08c0h mov eax,[0c9000002b5000002h]            ; MOV EAX, moffs32 || o32 A1 mo || encoded[9]{a1 02 00 00 b5 02 00 00 c9}
08c9h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
08cbh add ch,bl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 dd}
08cdh add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
08cfh add cl,dh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 f1}
08d1h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
08d3h add [rip+19000003h],al                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 05 03 00 00 19}
08d9h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
08dbh add [rip+41000003h],ch                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 2d 03 00 00 41}
08e1h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
08e3h add [rbp+3],dl                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 55 03}
08e6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
08e8h imul eax,[rbx],37d0000h                 ; IMUL r32, r/m32, imm32 || o32 69 /r id || encoded[6]{69 03 00 00 7d 03}
08eeh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
08f0h xchg ecx,eax                            ; XCHG r32, EAX || o32 90+rd || encoded[1]{91}
08f1h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
08f3h add [rbp-46fffffdh],ah                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 a5 03 00 00 b9}
08f9h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
08fbh add ch,cl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 cd}
08fdh add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
08ffh add cl,ah                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 e1}
0901h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
0903h add ch,dh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 f5}
0905h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
0907h add [rcx],cl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 09}
0909h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
090bh add [rip+31000004h],bl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 1d 04 00 00 31}
0911h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
0913h add [rbp+4],al                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 45 04}
0916h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0918h pop rcx                                 ; POP r64 || 58+ro || encoded[1]{59}
0919h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
091bh add [rbp+4],ch                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 6d 04}
091eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0920h add dword ptr [rax+rax],49500h          ; ADD r/m32, imm32 || o32 81 /0 id || encoded[7]{81 04 00 00 95 04 00}
0927h add [rcx-42fffffch],ch                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 a9 04 00 00 bd}
092dh add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
092fh add cl,dl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 d1}
0931h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
0933h add ch,ah                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 e5}
0935h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
0937h add cl,bh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 f9}
0939h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
093bh add [rip+21000005h],cl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 0d 05 00 00 21}
0941h add eax,5350000h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 00 35 05}
0946h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0948h add rax,55d0000h                        ; ADD RAX, imm32 || REX.W 05 id || encoded[6]{49 05 00 00 5d 05}
094eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0950h jno short 0957h                         ; JNO rel8 || 71 cb || encoded[2]{71 05}
0952h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0954h test eax,[rip+5990000h]                 ; TEST r/m32, r32 || o32 85 /r || encoded[6]{85 05 00 00 99 05}
095ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
095ch lodsd                                   ; LODSD || o32 AD || encoded[1]{ad}
095dh add eax,5c10000h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 00 c1 05}
0962h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0964h (bad)                                   ; <invalid> || <invalid> || encoded[2]{d5 05}
0966h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0968h jmp near ptr fffffffffd000972h          ; JMP rel32 || E9 cd || encoded[5]{e9 05 00 00 fd}
096dh add eax,6110000h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 00 11 06}
0972h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0974h and eax,39000006h                       ; AND EAX, imm32 || o32 25 id || encoded[5]{25 06 00 00 39}
0979h (bad)                                   ; <invalid> || <invalid> || encoded[2]{06 00}
097bh add [rbp+6],cl                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 4d 06}
097eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0980h (bad)                                   ; <invalid> || <invalid> || encoded[2]{61 06}
0982h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0984h jne short 098ch                         ; JNE rel8 || 75 cb || encoded[2]{75 06}
0986h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0988h mov [rsi],eax                           ; MOV r/m32, r32 || o32 89 /r || encoded[2]{89 06}
098ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
098ch popfq                                   ; POPFQ || 9D || encoded[1]{9d}
098dh (bad)                                   ; <invalid> || <invalid> || encoded[2]{06 00}
098fh add [rcx-3afffffah],dh                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 b1 06 00 00 c5}
0995h (bad)                                   ; <invalid> || <invalid> || encoded[2]{06 00}
0997h add cl,bl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 d9}
0999h (bad)                                   ; <invalid> || <invalid> || encoded[2]{06 00}
099bh add ch,ch                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 ed}
099dh (bad)                                   ; <invalid> || <invalid> || encoded[2]{06 00}
099fh add [rcx],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 01}
09a1h (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
09a3h add [rip+29000007h],dl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 15 07 00 00 29}
09a9h (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
09abh add [rip+51000007h],bh                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 3d 07 00 00 51}
09b1h (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
09b3h add [rbp+7],ah                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 65 07}
09b6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
09b8h jns short 09c1h                         ; JNS rel8 || 79 cb || encoded[2]{79 07}
09bah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
09bch lea eax,[rdi]                           ; LEA r32, m || o32 8D /r || encoded[2]{8d 07}
09beh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
09c0h sahf                                    ; SAHF || 9E || encoded[1]{9e}
09c1h (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
09c3h add [rdi-3ffffff9h],ch                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 af 07 00 00 c0}
09c9h (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
09cbh add cl,dl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 d1}
09cdh (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
09cfh add dl,ah                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 e2}
09d1h (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
09d3h add bl,dh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 f3}
09d5h (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
09d7h add [rax+rcx],al                        ; ADD r/m8, r8 || 00 /r || encoded[3]{00 04 08}
09dah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
09dch sbb [rdi],eax                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 07}
09deh add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
09e0h (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 52}
09e2h add esi,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 30}
09e4h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
09e7h jo short 0a29h                          ; JO rel8 || 70 cb || encoded[2]{70 40}
------------------------------------------------------------------------------------------------------------------------
; short eval<short>(TernaryBitLogicKind:byte kind, short a, short b, short c)
; eval_g[16i](TernaryBitLogicKind~8u,16i,16i,16i)[2705] = {57 56 53 48 83 ec 20 8b d9 41 8b f0 41 8b f9 0f b6 cb ff c9 83 f9 5e 0f 87 b8 08 00 00 8b c9 48 8d 05 e2 08 00 00 8b 04 88 4c 8d 05 df ff ff ff 49 03 c0 ff e0 48 0f bf ce 48 0f bf c7 0b c8 48 0f bf c9 48 0f bf d2 0b ca f7 d1 48 0f bf c1 e9 75 08 00 00 48 0f bf c6 48 0f bf d2 0b c2 8b c8 f7 d1 48 0f bf c9 48 0f bf c7 23 c8 48 0f bf c1 e9 54 08 00 00 48 0f bf c6 48 0f bf d2 0b c2 8b c8 f7 d1 48 0f bf c1 e9 3d 08 00 00 48 0f bf c2 48 0f bf d7 0b c2 8b c8 f7 d1 48 0f bf c9 48 0f bf c6 23 c8 48 0f bf c1 e9 1c 08 00 00 48 0f bf c7 48 0f bf d2 0b c2 8b c8 f7 d1 48 0f bf c1 e9 05 08 00 00 48 0f bf c2 8b d0 f7 d2 48 0f bf ca 48 0f bf c6 48 0f bf d7 33 c2 48 0f bf c0 48 0f bf c9 23 c8 48 0f bf c1 e9 dc 07 00 00 48 0f bf c6 48 0f bf cf 23 c8 48 0f bf c9 48 0f bf d2 0b ca f7 d1 48 0f bf c1 e9 bd 07 00 00 48 0f bf c2 8b d0 f7 d2 48 0f bf ca 48 0f bf c6 23 c8 48 0f bf c9 48 0f bf c7 23 c8 48 0f bf c1 e9 98 07 00 00 48 0f bf c6 48 0f bf cf 33 c8 48 0f bf c9 48 0f bf d2 0b ca f7 d1 48 0f bf c1 e9 79 07 00 00 48 0f bf c2 8b d0 f7 d2 48 0f bf ca 48 0f bf c7 23 c8 48 0f bf c1 e9 5e 07 00 00 48 0f bf ca f7 d1 48 0f bf d9 48 0f bf ce e8 0a fe ff ff 48 0f bf c8 48 0f bf d7 e8 85 de 82 ff 48 0f bf d0 8b cb e8 1a 91 ff ff 48 0f bf c0 e9 2a 07 00 00 48 0f bf ca e8 28 dc 82 ff 48 0f bf d0 48 0f bf ce e8 fb 90 ff ff 48 0f bf c0 e9 0b 07 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 e9 fc ff ff e9 f5 06 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 c3 fc ff ff e9 df 06 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 9d fc ff ff e9 c9 06 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 77 fc ff ff e9 b3 06 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 51 fc ff ff e9 9d 06 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 2b fc ff ff e9 87 06 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 05 fc ff ff e9 71 06 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 df fb ff ff e9 5b 06 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 b9 fb ff ff e9 45 06 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 93 fb ff ff e9 2f 06 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 6d fb ff ff e9 19 06 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 47 fb ff ff e9 03 06 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 21 fb ff ff e9 ed 05 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 fb fa ff ff e9 d7 05 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 d5 fa ff ff e9 c1 05 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 af fa ff ff e9 ab 05 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 89 fa ff ff e9 95 05 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 63 fa ff ff e9 7f 05 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 3d fa ff ff e9 69 05 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 17 fa ff ff e9 53 05 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 f1 f9 ff ff e9 3d 05 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 cb f9 ff ff e9 27 05 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 a5 f9 ff ff e9 11 05 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 7f f9 ff ff e9 fb 04 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 59 f9 ff ff e9 e5 04 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 33 f9 ff ff e9 cf 04 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 0d f9 ff ff e9 b9 04 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 e7 f8 ff ff e9 a3 04 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 c1 f8 ff ff e9 8d 04 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 9b f8 ff ff e9 77 04 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 75 f8 ff ff e9 61 04 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 4f f8 ff ff e9 4b 04 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 29 f8 ff ff e9 35 04 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 03 f8 ff ff e9 1f 04 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 dd f7 ff ff e9 09 04 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 b7 f7 ff ff e9 f3 03 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 91 f7 ff ff e9 dd 03 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 6b f7 ff ff e9 c7 03 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 45 f7 ff ff e9 b1 03 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 1f f7 ff ff e9 9b 03 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 f9 f6 ff ff e9 85 03 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 d3 f6 ff ff e9 6f 03 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 ad f6 ff ff e9 59 03 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 87 f6 ff ff e9 43 03 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 61 f6 ff ff e9 2d 03 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 3b ec ff ff e9 17 03 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 15 ec ff ff e9 01 03 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 ef eb ff ff e9 eb 02 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 c9 eb ff ff e9 d5 02 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 a3 eb ff ff e9 bf 02 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 7d eb ff ff e9 a9 02 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 57 eb ff ff e9 93 02 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 31 eb ff ff e9 7d 02 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 0b eb ff ff e9 67 02 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 e5 ea ff ff e9 51 02 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 bf ea ff ff e9 3b 02 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 99 ea ff ff e9 25 02 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 73 ea ff ff e9 0f 02 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 4d ea ff ff e9 f9 01 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 27 ea ff ff e9 e3 01 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 01 ea ff ff e9 cd 01 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 db e9 ff ff e9 b7 01 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 b5 e9 ff ff e9 a1 01 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 8f e9 ff ff e9 8b 01 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 69 e9 ff ff e9 75 01 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 43 e9 ff ff e9 5f 01 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 1d e9 ff ff e9 49 01 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 f7 e8 ff ff e9 33 01 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 d1 e8 ff ff e9 1d 01 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 ab e8 ff ff e9 07 01 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 85 e8 ff ff e9 f1 00 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 5f e8 ff ff e9 db 00 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 39 e8 ff ff e9 c5 00 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 13 e8 ff ff e9 af 00 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 ed e7 ff ff e9 99 00 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 c7 e7 ff ff e9 83 00 00 00 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 a1 e7 ff ff eb 70 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 7e e7 ff ff eb 5d 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 5b e7 ff ff eb 4a 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 38 e7 ff ff eb 37 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 15 e7 ff ff eb 24 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 f2 e6 ff ff eb 11 48 0f bf ca 48 0f bf d6 4c 0f bf c7 e8 cf e6 ff ff 48 0f bf c0 48 83 c4 20 5b 5e 5f c3 48 b9 40 b0 5b c6 f7 7f 00 00 e8 2c 30 d4 5e 48 8b f0 0f b6 cb e8 99 e6 ff ff 48 8b d0 48 8b ce e8 66 53 24 ff 48 8b ce e8 5e 7c cb 5e cc 00 00 00 00 00 26 00 00 00 45 00 00 00 66 00 00 00 7d 00 00 00 9e 00 00 00 b5 00 00 00 de 00 00 00 fd 00 00 00 22 01 00 00 41 01 00 00 5c 01 00 00 90 01 00 00 af 01 00 00 c5 01 00 00 db 01 00 00 f1 01 00 00 07 02 00 00 1d 02 00 00 33 02 00 00 49 02 00 00 5f 02 00 00 75 02 00 00 8b 02 00 00 a1 02 00 00 b7 02 00 00 cd 02 00 00 e3 02 00 00 f9 02 00 00 0f 03 00 00 25 03 00 00 3b 03 00 00 51 03 00 00 67 03 00 00 7d 03 00 00 93 03 00 00 a9 03 00 00 bf 03 00 00 d5 03 00 00 eb 03 00 00 01 04 00 00 17 04 00 00 2d 04 00 00 43 04 00 00 59 04 00 00 6f 04 00 00 85 04 00 00 9b 04 00 00 b1 04 00 00 c7 04 00 00 dd 04 00 00 f3 04 00 00 09 05 00 00 1f 05 00 00 35 05 00 00 4b 05 00 00 61 05 00 00 77 05 00 00 8d 05 00 00 a3 05 00 00 b9 05 00 00 cf 05 00 00 e5 05 00 00 fb 05 00 00 11 06 00 00 27 06 00 00 3d 06 00 00 53 06 00 00 69 06 00 00 7f 06 00 00 95 06 00 00 ab 06 00 00 c1 06 00 00 d7 06 00 00 ed 06 00 00 03 07 00 00 19 07 00 00 2f 07 00 00 45 07 00 00 5b 07 00 00 71 07 00 00 87 07 00 00 9d 07 00 00 b3 07 00 00 c9 07 00 00 df 07 00 00 f5 07 00 00 0b 08 00 00 21 08 00 00 37 08 00 00 4a 08 00 00 5d 08 00 00 70 08 00 00 83 08 00 00 96 08 00 00 a9 08 00 00 19 07 04 00 07 32 03 30 02 60 01 70 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0003h sub rsp,20h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 20}
0007h mov ebx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d9}
0009h mov esi,r8d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b f0}
000ch mov edi,r9d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b f9}
000fh movzx ecx,bl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 cb}
0012h dec ecx                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c9}
0014h cmp ecx,5eh                             ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f9 5e}
0017h ja near ptr 08d5h                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 b8 08 00 00}
001dh mov ecx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c9}
001fh lea rax,[rip+8e2h]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 e2 08 00 00}
0026h mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0029h lea r8,[rip-21h]                        ; LEA r64, m || REX.W 8D /r || encoded[7]{4c 8d 05 df ff ff ff}
0030h add rax,r8                              ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{49 03 c0}
0033h jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
0035h movsx rcx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ce}
0039h movsx rax,di                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c7}
003dh or ecx,eax                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c8}
003fh movsx rcx,cx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c9}
0043h movsx rdx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d2}
0047h or ecx,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b ca}
0049h not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
004bh movsx rax,cx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c1}
004fh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 75 08 00 00}
0054h movsx rax,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c6}
0058h movsx rdx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d2}
005ch or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
005eh mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0060h not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
0062h movsx rcx,cx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c9}
0066h movsx rax,di                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c7}
006ah and ecx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c8}
006ch movsx rax,cx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c1}
0070h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 54 08 00 00}
0075h movsx rax,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c6}
0079h movsx rdx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d2}
007dh or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
007fh mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0081h not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
0083h movsx rax,cx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c1}
0087h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 3d 08 00 00}
008ch movsx rax,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c2}
0090h movsx rdx,di                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d7}
0094h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
0096h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0098h not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
009ah movsx rcx,cx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c9}
009eh movsx rax,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c6}
00a2h and ecx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c8}
00a4h movsx rax,cx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c1}
00a8h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 1c 08 00 00}
00adh movsx rax,di                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c7}
00b1h movsx rdx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d2}
00b5h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
00b7h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
00b9h not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
00bbh movsx rax,cx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c1}
00bfh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 05 08 00 00}
00c4h movsx rax,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c2}
00c8h mov edx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d0}
00cah not edx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d2}
00cch movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
00d0h movsx rax,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c6}
00d4h movsx rdx,di                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d7}
00d8h xor eax,edx                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c2}
00dah movsx rax,ax                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c0}
00deh movsx rcx,cx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c9}
00e2h and ecx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c8}
00e4h movsx rax,cx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c1}
00e8h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 dc 07 00 00}
00edh movsx rax,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c6}
00f1h movsx rcx,di                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf cf}
00f5h and ecx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c8}
00f7h movsx rcx,cx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c9}
00fbh movsx rdx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d2}
00ffh or ecx,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b ca}
0101h not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
0103h movsx rax,cx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c1}
0107h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 bd 07 00 00}
010ch movsx rax,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c2}
0110h mov edx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d0}
0112h not edx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d2}
0114h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0118h movsx rax,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c6}
011ch and ecx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c8}
011eh movsx rcx,cx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c9}
0122h movsx rax,di                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c7}
0126h and ecx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c8}
0128h movsx rax,cx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c1}
012ch jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 98 07 00 00}
0131h movsx rax,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c6}
0135h movsx rcx,di                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf cf}
0139h xor ecx,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c8}
013bh movsx rcx,cx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c9}
013fh movsx rdx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d2}
0143h or ecx,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b ca}
0145h not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
0147h movsx rax,cx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c1}
014bh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 79 07 00 00}
0150h movsx rax,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c2}
0154h mov edx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d0}
0156h not edx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d2}
0158h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
015ch movsx rax,di                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c7}
0160h and ecx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c8}
0162h movsx rax,cx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c1}
0166h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 5e 07 00 00}
016bh movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
016fh not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
0171h movsx rbx,cx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d9}
0175h movsx rcx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ce}
0179h call 7ff7c7163328h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0a fe ff ff}
017eh movsx rcx,ax                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c8}
0182h movsx rdx,di                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d7}
0186h call 7ff7c69913b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 85 de 82 ff}
018bh movsx rdx,ax                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d0}
018fh mov ecx,ebx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b cb}
0191h call 7ff7c715c650h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1a 91 ff ff}
0196h movsx rax,ax                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c0}
019ah jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 2a 07 00 00}
019fh movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
01a3h call 7ff7c6991170h                      ; CALL rel32 || E8 cd || encoded[5]{e8 28 dc 82 ff}
01a8h movsx rdx,ax                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d0}
01ach movsx rcx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ce}
01b0h call 7ff7c715c650h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fb 90 ff ff}
01b5h movsx rax,ax                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c0}
01b9h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 0b 07 00 00}
01beh movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
01c2h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
01c6h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
01cah call 7ff7c7163258h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e9 fc ff ff}
01cfh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f5 06 00 00}
01d4h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
01d8h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
01dch movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
01e0h call 7ff7c7163248h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c3 fc ff ff}
01e5h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 df 06 00 00}
01eah movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
01eeh movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
01f2h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
01f6h call 7ff7c7163238h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9d fc ff ff}
01fbh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 c9 06 00 00}
0200h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0204h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0208h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
020ch call 7ff7c7163228h                      ; CALL rel32 || E8 cd || encoded[5]{e8 77 fc ff ff}
0211h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b3 06 00 00}
0216h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
021ah movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
021eh movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0222h call 7ff7c7163218h                      ; CALL rel32 || E8 cd || encoded[5]{e8 51 fc ff ff}
0227h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 9d 06 00 00}
022ch movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0230h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0234h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0238h call 7ff7c7163208h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2b fc ff ff}
023dh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 87 06 00 00}
0242h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0246h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
024ah movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
024eh call 7ff7c71631f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 05 fc ff ff}
0253h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 71 06 00 00}
0258h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
025ch movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0260h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0264h call 7ff7c71631e8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 df fb ff ff}
0269h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 5b 06 00 00}
026eh movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0272h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0276h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
027ah call 7ff7c71631d8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b9 fb ff ff}
027fh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 45 06 00 00}
0284h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0288h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
028ch movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0290h call 7ff7c71631c8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 93 fb ff ff}
0295h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 2f 06 00 00}
029ah movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
029eh movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
02a2h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
02a6h call 7ff7c71631b8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6d fb ff ff}
02abh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 19 06 00 00}
02b0h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
02b4h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
02b8h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
02bch call 7ff7c71631a8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 47 fb ff ff}
02c1h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 03 06 00 00}
02c6h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
02cah movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
02ceh movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
02d2h call 7ff7c7163198h                      ; CALL rel32 || E8 cd || encoded[5]{e8 21 fb ff ff}
02d7h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ed 05 00 00}
02dch movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
02e0h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
02e4h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
02e8h call 7ff7c7163188h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fb fa ff ff}
02edh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 d7 05 00 00}
02f2h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
02f6h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
02fah movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
02feh call 7ff7c7163178h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d5 fa ff ff}
0303h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 c1 05 00 00}
0308h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
030ch movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0310h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0314h call 7ff7c7163168h                      ; CALL rel32 || E8 cd || encoded[5]{e8 af fa ff ff}
0319h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ab 05 00 00}
031eh movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0322h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0326h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
032ah call 7ff7c7163158h                      ; CALL rel32 || E8 cd || encoded[5]{e8 89 fa ff ff}
032fh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 95 05 00 00}
0334h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0338h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
033ch movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0340h call 7ff7c7163148h                      ; CALL rel32 || E8 cd || encoded[5]{e8 63 fa ff ff}
0345h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 7f 05 00 00}
034ah movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
034eh movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0352h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0356h call 7ff7c7163138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3d fa ff ff}
035bh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 69 05 00 00}
0360h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0364h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0368h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
036ch call 7ff7c7163128h                      ; CALL rel32 || E8 cd || encoded[5]{e8 17 fa ff ff}
0371h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 53 05 00 00}
0376h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
037ah movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
037eh movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0382h call 7ff7c7163118h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f1 f9 ff ff}
0387h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 3d 05 00 00}
038ch movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0390h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0394h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0398h call 7ff7c7163108h                      ; CALL rel32 || E8 cd || encoded[5]{e8 cb f9 ff ff}
039dh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 27 05 00 00}
03a2h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
03a6h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
03aah movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
03aeh call 7ff7c71630f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a5 f9 ff ff}
03b3h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 11 05 00 00}
03b8h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
03bch movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
03c0h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
03c4h call 7ff7c71630e8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7f f9 ff ff}
03c9h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 fb 04 00 00}
03ceh movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
03d2h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
03d6h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
03dah call 7ff7c71630d8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 59 f9 ff ff}
03dfh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 e5 04 00 00}
03e4h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
03e8h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
03ech movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
03f0h call 7ff7c71630c8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 33 f9 ff ff}
03f5h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 cf 04 00 00}
03fah movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
03feh movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0402h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0406h call 7ff7c71630b8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0d f9 ff ff}
040bh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b9 04 00 00}
0410h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0414h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0418h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
041ch call 7ff7c71630a8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e7 f8 ff ff}
0421h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 a3 04 00 00}
0426h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
042ah movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
042eh movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0432h call 7ff7c7163098h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c1 f8 ff ff}
0437h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 8d 04 00 00}
043ch movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0440h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0444h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0448h call 7ff7c7163088h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9b f8 ff ff}
044dh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 77 04 00 00}
0452h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0456h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
045ah movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
045eh call 7ff7c7163078h                      ; CALL rel32 || E8 cd || encoded[5]{e8 75 f8 ff ff}
0463h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 61 04 00 00}
0468h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
046ch movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0470h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0474h call 7ff7c7163068h                      ; CALL rel32 || E8 cd || encoded[5]{e8 4f f8 ff ff}
0479h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 4b 04 00 00}
047eh movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0482h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0486h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
048ah call 7ff7c7163058h                      ; CALL rel32 || E8 cd || encoded[5]{e8 29 f8 ff ff}
048fh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 35 04 00 00}
0494h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0498h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
049ch movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
04a0h call 7ff7c7163048h                      ; CALL rel32 || E8 cd || encoded[5]{e8 03 f8 ff ff}
04a5h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 1f 04 00 00}
04aah movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
04aeh movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
04b2h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
04b6h call 7ff7c7163038h                      ; CALL rel32 || E8 cd || encoded[5]{e8 dd f7 ff ff}
04bbh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 09 04 00 00}
04c0h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
04c4h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
04c8h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
04cch call 7ff7c7163028h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b7 f7 ff ff}
04d1h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f3 03 00 00}
04d6h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
04dah movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
04deh movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
04e2h call 7ff7c7163018h                      ; CALL rel32 || E8 cd || encoded[5]{e8 91 f7 ff ff}
04e7h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 dd 03 00 00}
04ech movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
04f0h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
04f4h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
04f8h call 7ff7c7163008h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6b f7 ff ff}
04fdh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 c7 03 00 00}
0502h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0506h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
050ah movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
050eh call 7ff7c7162ff8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 45 f7 ff ff}
0513h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b1 03 00 00}
0518h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
051ch movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0520h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0524h call 7ff7c7162fe8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1f f7 ff ff}
0529h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 9b 03 00 00}
052eh movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0532h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0536h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
053ah call 7ff7c7162fd8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f9 f6 ff ff}
053fh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 85 03 00 00}
0544h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0548h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
054ch movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0550h call 7ff7c7162fc8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d3 f6 ff ff}
0555h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 6f 03 00 00}
055ah movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
055eh movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0562h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0566h call 7ff7c7162fb8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ad f6 ff ff}
056bh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 59 03 00 00}
0570h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0574h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0578h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
057ch call 7ff7c7162fa8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 87 f6 ff ff}
0581h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 43 03 00 00}
0586h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
058ah movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
058eh movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0592h call 7ff7c7162f98h                      ; CALL rel32 || E8 cd || encoded[5]{e8 61 f6 ff ff}
0597h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 2d 03 00 00}
059ch movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
05a0h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
05a4h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
05a8h call 7ff7c7162588h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3b ec ff ff}
05adh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 17 03 00 00}
05b2h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
05b6h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
05bah movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
05beh call 7ff7c7162578h                      ; CALL rel32 || E8 cd || encoded[5]{e8 15 ec ff ff}
05c3h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 01 03 00 00}
05c8h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
05cch movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
05d0h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
05d4h call 7ff7c7162568h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ef eb ff ff}
05d9h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 eb 02 00 00}
05deh movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
05e2h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
05e6h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
05eah call 7ff7c7162558h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c9 eb ff ff}
05efh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 d5 02 00 00}
05f4h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
05f8h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
05fch movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0600h call 7ff7c7162548h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a3 eb ff ff}
0605h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 bf 02 00 00}
060ah movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
060eh movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0612h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0616h call 7ff7c7162538h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7d eb ff ff}
061bh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 a9 02 00 00}
0620h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0624h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0628h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
062ch call 7ff7c7162528h                      ; CALL rel32 || E8 cd || encoded[5]{e8 57 eb ff ff}
0631h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 93 02 00 00}
0636h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
063ah movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
063eh movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0642h call 7ff7c7162518h                      ; CALL rel32 || E8 cd || encoded[5]{e8 31 eb ff ff}
0647h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 7d 02 00 00}
064ch movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0650h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0654h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0658h call 7ff7c7162508h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0b eb ff ff}
065dh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 67 02 00 00}
0662h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0666h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
066ah movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
066eh call 7ff7c71624f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e5 ea ff ff}
0673h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 51 02 00 00}
0678h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
067ch movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0680h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0684h call 7ff7c71624e8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bf ea ff ff}
0689h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 3b 02 00 00}
068eh movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0692h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0696h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
069ah call 7ff7c71624d8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 99 ea ff ff}
069fh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 25 02 00 00}
06a4h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
06a8h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
06ach movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
06b0h call 7ff7c71624c8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 73 ea ff ff}
06b5h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 0f 02 00 00}
06bah movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
06beh movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
06c2h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
06c6h call 7ff7c71624b8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 4d ea ff ff}
06cbh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f9 01 00 00}
06d0h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
06d4h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
06d8h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
06dch call 7ff7c71624a8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 27 ea ff ff}
06e1h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 e3 01 00 00}
06e6h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
06eah movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
06eeh movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
06f2h call 7ff7c7162498h                      ; CALL rel32 || E8 cd || encoded[5]{e8 01 ea ff ff}
06f7h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 cd 01 00 00}
06fch movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0700h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0704h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0708h call 7ff7c7162488h                      ; CALL rel32 || E8 cd || encoded[5]{e8 db e9 ff ff}
070dh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b7 01 00 00}
0712h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0716h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
071ah movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
071eh call 7ff7c7162478h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b5 e9 ff ff}
0723h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 a1 01 00 00}
0728h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
072ch movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0730h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0734h call 7ff7c7162468h                      ; CALL rel32 || E8 cd || encoded[5]{e8 8f e9 ff ff}
0739h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 8b 01 00 00}
073eh movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0742h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0746h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
074ah call 7ff7c7162458h                      ; CALL rel32 || E8 cd || encoded[5]{e8 69 e9 ff ff}
074fh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 75 01 00 00}
0754h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0758h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
075ch movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0760h call 7ff7c7162448h                      ; CALL rel32 || E8 cd || encoded[5]{e8 43 e9 ff ff}
0765h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 5f 01 00 00}
076ah movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
076eh movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0772h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0776h call 7ff7c7162438h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1d e9 ff ff}
077bh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 49 01 00 00}
0780h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0784h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0788h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
078ch call 7ff7c7162428h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f7 e8 ff ff}
0791h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 33 01 00 00}
0796h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
079ah movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
079eh movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
07a2h call 7ff7c7162418h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d1 e8 ff ff}
07a7h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 1d 01 00 00}
07ach movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
07b0h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
07b4h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
07b8h call 7ff7c7162408h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ab e8 ff ff}
07bdh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 07 01 00 00}
07c2h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
07c6h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
07cah movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
07ceh call 7ff7c71623f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 85 e8 ff ff}
07d3h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f1 00 00 00}
07d8h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
07dch movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
07e0h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
07e4h call 7ff7c71623e8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5f e8 ff ff}
07e9h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 db 00 00 00}
07eeh movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
07f2h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
07f6h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
07fah call 7ff7c71623d8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 39 e8 ff ff}
07ffh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 c5 00 00 00}
0804h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0808h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
080ch movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0810h call 7ff7c71623c8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 13 e8 ff ff}
0815h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 af 00 00 00}
081ah movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
081eh movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0822h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0826h call 7ff7c71623b8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ed e7 ff ff}
082bh jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 99 00 00 00}
0830h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0834h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0838h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
083ch call 7ff7c71623a8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c7 e7 ff ff}
0841h jmp near ptr 08c9h                      ; JMP rel32 || E9 cd || encoded[5]{e9 83 00 00 00}
0846h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
084ah movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
084eh movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0852h call 7ff7c7162398h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a1 e7 ff ff}
0857h jmp short 08c9h                         ; JMP rel8 || EB cb || encoded[2]{eb 70}
0859h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
085dh movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0861h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0865h call 7ff7c7162388h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7e e7 ff ff}
086ah jmp short 08c9h                         ; JMP rel8 || EB cb || encoded[2]{eb 5d}
086ch movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0870h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0874h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
0878h call 7ff7c7162378h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5b e7 ff ff}
087dh jmp short 08c9h                         ; JMP rel8 || EB cb || encoded[2]{eb 4a}
087fh movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0883h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
0887h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
088bh call 7ff7c7162368h                      ; CALL rel32 || E8 cd || encoded[5]{e8 38 e7 ff ff}
0890h jmp short 08c9h                         ; JMP rel8 || EB cb || encoded[2]{eb 37}
0892h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
0896h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
089ah movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
089eh call 7ff7c7162358h                      ; CALL rel32 || E8 cd || encoded[5]{e8 15 e7 ff ff}
08a3h jmp short 08c9h                         ; JMP rel8 || EB cb || encoded[2]{eb 24}
08a5h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
08a9h movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
08adh movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
08b1h call 7ff7c7162348h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f2 e6 ff ff}
08b6h jmp short 08c9h                         ; JMP rel8 || EB cb || encoded[2]{eb 11}
08b8h movsx rcx,dx                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf ca}
08bch movsx rdx,si                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf d6}
08c0h movsx r8,di                             ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{4c 0f bf c7}
08c4h call 7ff7c7162338h                      ; CALL rel32 || E8 cd || encoded[5]{e8 cf e6 ff ff}
08c9h movsx rax,ax                            ; MOVSX r64, r/m16 || REX.W 0F BF /r || encoded[4]{48 0f bf c0}
08cdh add rsp,20h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 20}
08d1h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
08d2h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
08d3h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
08d4h ret                                     ; RET || C3 || encoded[1]{c3}
08d5h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
08dfh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2c 30 d4 5e}
08e4h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
08e7h movzx ecx,bl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 cb}
08eah call 7ff7c7162328h                      ; CALL rel32 || E8 cd || encoded[5]{e8 99 e6 ff ff}
08efh mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
08f2h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
08f5h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 66 53 24 ff}
08fah mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
08fdh call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5e 7c cb 5e}
0902h int 3                                   ; INT3 || CC || encoded[1]{cc}
0903h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0905h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0907h add [rsi],ah                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 26}
0909h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
090bh add [rbp],al                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 45 00}
090eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0910h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[3]{66 00 00}
0913h add [rbp],bh                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 7d 00}
0916h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0918h sahf                                    ; SAHF || 9E || encoded[1]{9e}
0919h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
091bh add [rbp-22000000h],dh                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 b5 00 00 00 de}
0921h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0923h add ch,bh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 fd}
0925h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0927h add [rdx],ah                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 22}
0929h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
092bh add [rcx+1],al                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 41 01}
092eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0930h pop rsp                                 ; POP r64 || 58+ro || encoded[1]{5c}
0931h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
0933h add [rax-50ffffffh],dl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 90 01 00 00 af}
0939h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
093bh add ch,al                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 c5}
093dh add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
093fh add bl,bl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 db}
0941h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
0943h add cl,dh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 f1}
0945h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
0947h add [rdi],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 07}
0949h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
094bh add [rip+33000002h],bl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 1d 02 00 00 33}
0951h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
0953h add [rcx+2],cl                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 49 02}
0956h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0958h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0959h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
095bh add [rbp+2],dh                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 75 02}
095eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0960h mov eax,[rdx]                           ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b 02}
0962h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0964h mov eax,[0cd000002b7000002h]            ; MOV EAX, moffs32 || o32 A1 mo || encoded[9]{a1 02 00 00 b7 02 00 00 cd}
096dh add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
096fh add bl,ah                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 e3}
0971h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
0973h add cl,bh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 f9}
0975h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
0977h add [rdi],cl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 0f}
0979h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
097bh add [rip+3b000003h],ah                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 25 03 00 00 3b}
0981h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
0983h add [rcx+3],dl                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 51 03}
0986h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0988h add eax,[eax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[3]{67 03 00}
098bh add [rbp+3],bh                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 7d 03}
098eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0990h xchg ebx,eax                            ; XCHG r32, EAX || o32 90+rd || encoded[1]{93}
0991h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
0993h add [rcx-40fffffdh],ch                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 a9 03 00 00 bf}
0999h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
099bh add ch,dl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 d5}
099dh add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
099fh add bl,ch                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 eb}
09a1h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
09a3h add [rcx],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 01}
09a5h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
09a7h add [rdi],dl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 17}
09a9h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
09abh add [rip+43000004h],ch                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 2d 04 00 00 43}
09b1h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
09b3h add [rcx+4],bl                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 59 04}
09b6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
09b8h outsd                                   ; OUTSD || o32 6F || encoded[1]{6f}
09b9h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
09bbh add [rbp-64fffffch],al                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 85 04 00 00 9b}
09c1h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
09c3h add [rcx-38fffffch],dh                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 b1 04 00 00 c7}
09c9h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
09cbh add ch,bl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 dd}
09cdh add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
09cfh add bl,dh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 f3}
09d1h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
09d3h add [rcx],cl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 09}
09d5h add eax,51f0000h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 00 1f 05}
09dah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
09dch xor eax,4b000005h                       ; XOR EAX, imm32 || o32 35 id || encoded[5]{35 05 00 00 4b}
09e1h add eax,5610000h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 00 61 05}
09e6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
09e8h ja short 09efh                          ; JA rel8 || 77 cb || encoded[2]{77 05}
09eah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
09ech lea eax,[rip+5a30000h]                  ; LEA r32, m || o32 8D /r || encoded[6]{8d 05 00 00 a3 05}
09f2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
09f4h mov ecx,0cf000005h                      ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 05 00 00 cf}
09f9h add eax,5e50000h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 00 e5 05}
09feh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0a00h sti                                     ; STI || FB || encoded[1]{fb}
0a01h add eax,6110000h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 00 11 06}
0a06h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0a08h (bad)                                   ; <invalid> || <invalid> || encoded[2]{27 06}
0a0ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0a0ch cmp eax,53000006h                       ; CMP EAX, imm32 || o32 3D id || encoded[5]{3d 06 00 00 53}
0a11h (bad)                                   ; <invalid> || <invalid> || encoded[2]{06 00}
0a13h add [rcx+6],ch                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 69 06}
0a16h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0a18h jg short 0a20h                          ; JG rel8 || 7F cb || encoded[2]{7f 06}
0a1ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0a1ch xchg ebp,eax                            ; XCHG r32, EAX || o32 90+rd || encoded[1]{95}
0a1dh (bad)                                   ; <invalid> || <invalid> || encoded[2]{06 00}
0a1fh add [rbx-3efffffah],ch                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 ab 06 00 00 c1}
0a25h (bad)                                   ; <invalid> || <invalid> || encoded[2]{06 00}
0a27h add bh,dl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 d7}
0a29h (bad)                                   ; <invalid> || <invalid> || encoded[2]{06 00}
0a2bh add ch,ch                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 ed}
0a2dh (bad)                                   ; <invalid> || <invalid> || encoded[2]{06 00}
0a2fh add [rbx],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 03}
0a31h (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
0a33h add [rcx],bl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 19}
0a35h (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
0a37h add [rdi],ch                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 2f}
0a39h (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
0a3bh add [rbp+7],al                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 45 07}
0a3eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0a40h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0a41h (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
0a43h add [rcx+7],dh                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 71 07}
0a46h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0a48h xchg eax,[rdi]                          ; XCHG r/m32, r32 || o32 87 /r || encoded[2]{87 07}
0a4ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0a4ch popfq                                   ; POPFQ || 9D || encoded[1]{9d}
0a4dh (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
0a4fh add [rbx-36fffff9h],dh                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 b3 07 00 00 c9}
0a55h (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
0a57h add bh,bl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 df}
0a59h (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
0a5bh add ch,dh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 f5}
0a5dh (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 00}
0a5fh add [rbx],cl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 0b}
0a61h or [rax],al                             ; OR r/m8, r8 || 08 /r || encoded[2]{08 00}
0a63h add [rcx],ah                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 21}
0a65h or [rax],al                             ; OR r/m8, r8 || 08 /r || encoded[2]{08 00}
0a67h add [rdi],dh                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 37}
0a69h or [rax],al                             ; OR r/m8, r8 || 08 /r || encoded[2]{08 00}
0a6bh add [rdx+8],cl                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 4a 08}
0a6eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0a70h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0a71h or [rax],al                             ; OR r/m8, r8 || 08 /r || encoded[2]{08 00}
0a73h add [rax+8],dh                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 70 08}
0a76h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0a78h or dword ptr [rax],0                    ; OR r/m32, imm8 || o32 83 /1 ib || encoded[3]{83 08 00}
0a7bh add [rsi-56fffff8h],dl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 96 08 00 00 a9}
0a81h or [rax],al                             ; OR r/m8, r8 || 08 /r || encoded[2]{08 00}
0a83h add [rcx],bl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 19}
0a85h (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 04}
0a87h add [rdi],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 07}
0a89h xor al,[rbx]                            ; XOR r8, r/m8 || 32 /r || encoded[2]{32 03}
0a8bh xor [rdx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 02}
0a8dh (bad)                                   ; <invalid> || <invalid> || encoded[2]{60 01}
0a8fh jo short 0ad1h                          ; JO rel8 || 70 cb || encoded[2]{70 40}
------------------------------------------------------------------------------------------------------------------------
; uint eval<uint>(TernaryBitLogicKind:byte kind, uint a, uint b, uint c)
; eval_g[32u](TernaryBitLogicKind~8u,32u,32u,32u)[1761] = {57 56 48 83 ec 28 8b f9 8b f2 41 8b d0 45 8b c1 40 0f b6 cf ff c9 83 f9 5e 0f 87 0a 05 00 00 8b c9 48 8d 05 30 05 00 00 8b 04 88 4c 8d 0d de ff ff ff 49 03 c1 ff e0 41 0b d0 0b d6 8b c2 f7 d0 e9 dc 04 00 00 8b c2 8b d6 0b c2 f7 d0 41 23 c0 e9 cc 04 00 00 8b c2 8b d6 0b c2 f7 d0 e9 bf 04 00 00 8b c6 41 0b c0 f7 d0 23 c2 e9 b1 04 00 00 41 8b c0 44 8b c6 41 0b c0 f7 d0 e9 a1 04 00 00 8b c6 f7 d0 41 33 d0 23 c2 e9 93 04 00 00 8b c2 41 8b d0 23 c2 44 8b c6 41 0b c0 f7 d0 e9 7f 04 00 00 8b c6 f7 d0 23 c2 41 23 c0 e9 71 04 00 00 8b c2 41 33 c0 8b d6 0b c2 f7 d0 e9 61 04 00 00 8b c6 f7 d0 41 23 c0 e9 55 04 00 00 8b c6 f7 d0 8b ca f7 d1 41 0b c8 23 c1 e9 43 04 00 00 8b c6 f7 d0 44 8b c2 41 23 c0 e9 34 04 00 00 8b c6 f7 d0 41 8b c8 f7 d1 0b ca 23 c1 e9 22 04 00 00 8b c6 f7 d0 41 0b d0 23 c2 e9 14 04 00 00 8b c6 f7 d0 e9 0b 04 00 00 8b c2 41 0b c0 f7 d0 8b d6 23 c2 e9 fb 03 00 00 41 8b c0 0b c2 f7 d0 e9 ef 03 00 00 8b c2 f7 d0 8b d6 41 33 d0 23 c2 e9 df 03 00 00 8b c6 41 23 c0 0b c2 f7 d0 e9 d1 03 00 00 41 8b c0 f7 d0 44 8b c6 41 33 d0 23 c2 e9 bf 03 00 00 8b c6 23 c2 41 0b c0 f7 d0 e9 b1 03 00 00 8b c2 41 0b c0 f7 d0 41 33 d0 23 c6 c4 e2 48 f2 ca 0b c1 e9 99 03 00 00 8b c2 41 0b c0 41 23 d0 23 c6 c4 e2 48 f2 ca 0b c8 8b c1 f7 d0 e9 7f 03 00 00 8b c2 33 c6 8b d6 41 33 d0 23 c2 e9 6f 03 00 00 8b c2 41 33 c0 41 23 d0 8b ce 23 ca 33 c8 8b c1 f7 d0 e9 58 03 00 00 8b c2 23 c6 f7 d0 8b d6 41 33 d0 23 c2 e9 46 03 00 00 8b c6 f7 d0 f7 d2 41 23 c0 c4 62 38 f2 c2 41 0b c0 e9 30 03 00 00 41 8b c0 23 c6 f7 d0 44 8b c6 41 33 d0 23 c2 e9 1c 03 00 00 8b c6 f7 d0 41 f7 d0 23 c2 c4 c2 68 f2 d0 0b c2 e9 07 03 00 00 8b c2 41 0b c0 8b d6 33 c2 e9 f9 02 00 00 8b ca 41 0b c8 89 4c 24 20 48 8d 4c 24 20 e8 1d 30 82 ff 8b 10 8b ce e8 ac 63 5a ff 8b c8 e8 ed 2f 82 ff e9 d1 02 00 00 8b ce e8 49 f5 ff ff e9 c5 02 00 00 8b ce e8 2d f5 ff ff e9 b9 02 00 00 8b ce e8 11 f5 ff ff e9 ad 02 00 00 8b ce e8 f5 f4 ff ff e9 a1 02 00 00 8b ce e8 d9 f4 ff ff e9 95 02 00 00 8b ce e8 bd f4 ff ff e9 89 02 00 00 8b ce e8 a1 f4 ff ff e9 7d 02 00 00 8b ce e8 85 f4 ff ff e9 71 02 00 00 8b ce e8 69 f4 ff ff e9 65 02 00 00 8b ce e8 4d f4 ff ff e9 59 02 00 00 8b ce e8 31 f4 ff ff e9 4d 02 00 00 8b ce e8 15 f4 ff ff e9 41 02 00 00 8b ce e8 f9 f3 ff ff e9 35 02 00 00 8b ce e8 dd f3 ff ff e9 29 02 00 00 8b ce e8 c1 f3 ff ff e9 1d 02 00 00 8b ce e8 a5 f3 ff ff e9 11 02 00 00 8b ce e8 89 f3 ff ff e9 05 02 00 00 8b ce e8 6d f3 ff ff e9 f9 01 00 00 8b ce e8 51 f3 ff ff e9 ed 01 00 00 8b ce e8 35 f3 ff ff e9 e1 01 00 00 8b ce e8 19 f3 ff ff e9 d5 01 00 00 8b ce e8 fd f2 ff ff e9 c9 01 00 00 8b ce e8 e1 f2 ff ff e9 bd 01 00 00 8b ce e8 c5 f2 ff ff e9 b1 01 00 00 8b ce e8 a9 f2 ff ff e9 a5 01 00 00 8b ce e8 8d f2 ff ff e9 99 01 00 00 8b ce e8 71 f2 ff ff e9 8d 01 00 00 8b ce e8 55 f2 ff ff e9 81 01 00 00 8b ce e8 39 f2 ff ff e9 75 01 00 00 8b ce e8 1d f2 ff ff e9 69 01 00 00 8b ce e8 01 f2 ff ff e9 5d 01 00 00 8b ce e8 e5 f1 ff ff e9 51 01 00 00 8b ce e8 c9 f1 ff ff e9 45 01 00 00 8b ce e8 ad f1 ff ff e9 39 01 00 00 8b ce e8 91 f1 ff ff e9 2d 01 00 00 8b ce e8 75 f1 ff ff e9 21 01 00 00 8b ce e8 59 f1 ff ff e9 15 01 00 00 8b ce e8 3d f1 ff ff e9 09 01 00 00 8b ce e8 21 f1 ff ff e9 fd 00 00 00 8b ce e8 05 f1 ff ff e9 f1 00 00 00 8b ce e8 e9 f0 ff ff e9 e5 00 00 00 8b ce e8 cd f0 ff ff e9 d9 00 00 00 8b ce e8 b1 f0 ff ff e9 cd 00 00 00 8b ce e8 95 f0 ff ff e9 c1 00 00 00 8b ce e8 79 f0 ff ff e9 b5 00 00 00 8b ce e8 5d f0 ff ff e9 a9 00 00 00 8b ce e8 41 f0 ff ff e9 9d 00 00 00 8b ce e8 25 f0 ff ff e9 91 00 00 00 8b ce e8 09 f0 ff ff e9 85 00 00 00 8b ce e8 ed ef ff ff eb 7c 8b ce e8 d4 ef ff ff eb 73 8b ce e8 bb ef ff ff eb 6a 8b ce e8 a2 ef ff ff eb 61 8b ce e8 89 ef ff ff eb 58 8b ce e8 70 ef ff ff eb 4f 8b ce e8 57 ef ff ff eb 46 8b ce e8 3e ef ff ff eb 3d 8b ce e8 25 ef ff ff eb 34 8b ce e8 0c ef ff ff eb 2b 8b ce e8 f3 ee ff ff eb 22 8b ce e8 da ee ff ff eb 19 8b ce e8 19 e4 ff ff eb 10 8b ce e8 00 e4 ff ff eb 07 8b ce e8 e7 e3 ff ff 90 48 83 c4 28 5e 5f c3 48 b9 40 b0 5b c6 f7 7f 00 00 e8 18 1d d4 5e 48 8b f0 40 0f b6 cf e8 b4 e3 ff ff 48 8b d0 48 8b ce e8 51 40 24 ff 48 8b ce e8 49 69 cb 5e cc 27 00 00 00 35 00 00 00 45 00 00 00 52 00 00 00 60 00 00 00 70 00 00 00 7e 00 00 00 92 00 00 00 a0 00 00 00 b0 00 00 00 bc 00 00 00 ce 00 00 00 dd 00 00 00 ef 00 00 00 fd 00 00 00 06 01 00 00 16 01 00 00 22 01 00 00 32 01 00 00 40 01 00 00 52 01 00 00 60 01 00 00 78 01 00 00 92 01 00 00 a2 01 00 00 b9 01 00 00 cb 01 00 00 e1 01 00 00 f5 01 00 00 0a 02 00 00 18 02 00 00 40 02 00 00 4c 02 00 00 58 02 00 00 64 02 00 00 70 02 00 00 7c 02 00 00 88 02 00 00 94 02 00 00 a0 02 00 00 ac 02 00 00 b8 02 00 00 c4 02 00 00 d0 02 00 00 dc 02 00 00 e8 02 00 00 f4 02 00 00 00 03 00 00 0c 03 00 00 18 03 00 00 24 03 00 00 30 03 00 00 3c 03 00 00 48 03 00 00 54 03 00 00 60 03 00 00 6c 03 00 00 78 03 00 00 84 03 00 00 90 03 00 00 9c 03 00 00 a8 03 00 00 b4 03 00 00 c0 03 00 00 cc 03 00 00 d8 03 00 00 e4 03 00 00 f0 03 00 00 fc 03 00 00 08 04 00 00 14 04 00 00 20 04 00 00 2c 04 00 00 38 04 00 00 44 04 00 00 50 04 00 00 5c 04 00 00 68 04 00 00 74 04 00 00 80 04 00 00 8c 04 00 00 95 04 00 00 9e 04 00 00 a7 04 00 00 b0 04 00 00 b9 04 00 00 c2 04 00 00 cb 04 00 00 d4 04 00 00 dd 04 00 00 e6 04 00 00 ef 04 00 00 f8 04 00 00 01 05 00 00 0a 05 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0006h mov edi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f9}
0008h mov esi,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f2}
000ah mov edx,r8d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b d0}
000dh mov r8d,r9d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{45 8b c1}
0010h movzx ecx,dil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 cf}
0014h dec ecx                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c9}
0016h cmp ecx,5eh                             ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f9 5e}
0019h ja near ptr 0529h                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 0a 05 00 00}
001fh mov ecx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c9}
0021h lea rax,[rip+530h]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 30 05 00 00}
0028h mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
002bh lea r9,[rip-22h]                        ; LEA r64, m || REX.W 8D /r || encoded[7]{4c 8d 0d de ff ff ff}
0032h add rax,r9                              ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{49 03 c1}
0035h jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
0037h or edx,r8d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b d0}
003ah or edx,esi                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b d6}
003ch mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
003eh not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0040h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 dc 04 00 00}
0045h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
0047h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0049h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
004bh not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
004dh and eax,r8d                             ; AND r32, r/m32 || o32 23 /r || encoded[3]{41 23 c0}
0050h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 cc 04 00 00}
0055h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
0057h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0059h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
005bh not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
005dh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 bf 04 00 00}
0062h mov eax,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c6}
0064h or eax,r8d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b c0}
0067h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0069h and eax,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c2}
006bh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b1 04 00 00}
0070h mov eax,r8d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b c0}
0073h mov r8d,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c6}
0076h or eax,r8d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b c0}
0079h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
007bh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 a1 04 00 00}
0080h mov eax,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c6}
0082h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0084h xor edx,r8d                             ; XOR r32, r/m32 || o32 33 /r || encoded[3]{41 33 d0}
0087h and eax,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c2}
0089h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 93 04 00 00}
008eh mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
0090h mov edx,r8d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b d0}
0093h and eax,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c2}
0095h mov r8d,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c6}
0098h or eax,r8d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b c0}
009bh not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
009dh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 7f 04 00 00}
00a2h mov eax,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c6}
00a4h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
00a6h and eax,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c2}
00a8h and eax,r8d                             ; AND r32, r/m32 || o32 23 /r || encoded[3]{41 23 c0}
00abh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 71 04 00 00}
00b0h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
00b2h xor eax,r8d                             ; XOR r32, r/m32 || o32 33 /r || encoded[3]{41 33 c0}
00b5h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
00b7h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
00b9h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
00bbh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 61 04 00 00}
00c0h mov eax,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c6}
00c2h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
00c4h and eax,r8d                             ; AND r32, r/m32 || o32 23 /r || encoded[3]{41 23 c0}
00c7h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 55 04 00 00}
00cch mov eax,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c6}
00ceh not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
00d0h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
00d2h not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
00d4h or ecx,r8d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b c8}
00d7h and eax,ecx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c1}
00d9h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 43 04 00 00}
00deh mov eax,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c6}
00e0h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
00e2h mov r8d,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c2}
00e5h and eax,r8d                             ; AND r32, r/m32 || o32 23 /r || encoded[3]{41 23 c0}
00e8h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 34 04 00 00}
00edh mov eax,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c6}
00efh not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
00f1h mov ecx,r8d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b c8}
00f4h not ecx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d1}
00f6h or ecx,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b ca}
00f8h and eax,ecx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c1}
00fah jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 22 04 00 00}
00ffh mov eax,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c6}
0101h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0103h or edx,r8d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b d0}
0106h and eax,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c2}
0108h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 14 04 00 00}
010dh mov eax,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c6}
010fh not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0111h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 0b 04 00 00}
0116h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
0118h or eax,r8d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b c0}
011bh not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
011dh mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
011fh and eax,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c2}
0121h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 fb 03 00 00}
0126h mov eax,r8d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b c0}
0129h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
012bh not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
012dh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ef 03 00 00}
0132h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
0134h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0136h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0138h xor edx,r8d                             ; XOR r32, r/m32 || o32 33 /r || encoded[3]{41 33 d0}
013bh and eax,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c2}
013dh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 df 03 00 00}
0142h mov eax,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c6}
0144h and eax,r8d                             ; AND r32, r/m32 || o32 23 /r || encoded[3]{41 23 c0}
0147h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
0149h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
014bh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 d1 03 00 00}
0150h mov eax,r8d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b c0}
0153h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0155h mov r8d,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c6}
0158h xor edx,r8d                             ; XOR r32, r/m32 || o32 33 /r || encoded[3]{41 33 d0}
015bh and eax,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c2}
015dh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 bf 03 00 00}
0162h mov eax,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c6}
0164h and eax,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c2}
0166h or eax,r8d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b c0}
0169h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
016bh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b1 03 00 00}
0170h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
0172h or eax,r8d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b c0}
0175h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0177h xor edx,r8d                             ; XOR r32, r/m32 || o32 33 /r || encoded[3]{41 33 d0}
017ah and eax,esi                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c6}
017ch andn ecx,esi,edx                        ; ANDN r32a, r32b, r/m32 || VEX.LZ.0F38.W0 F2 /r || encoded[5]{c4 e2 48 f2 ca}
0181h or eax,ecx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c1}
0183h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 99 03 00 00}
0188h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
018ah or eax,r8d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b c0}
018dh and edx,r8d                             ; AND r32, r/m32 || o32 23 /r || encoded[3]{41 23 d0}
0190h and eax,esi                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c6}
0192h andn ecx,esi,edx                        ; ANDN r32a, r32b, r/m32 || VEX.LZ.0F38.W0 F2 /r || encoded[5]{c4 e2 48 f2 ca}
0197h or ecx,eax                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c8}
0199h mov eax,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c1}
019bh not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
019dh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 7f 03 00 00}
01a2h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
01a4h xor eax,esi                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c6}
01a6h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
01a8h xor edx,r8d                             ; XOR r32, r/m32 || o32 33 /r || encoded[3]{41 33 d0}
01abh and eax,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c2}
01adh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 6f 03 00 00}
01b2h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
01b4h xor eax,r8d                             ; XOR r32, r/m32 || o32 33 /r || encoded[3]{41 33 c0}
01b7h and edx,r8d                             ; AND r32, r/m32 || o32 23 /r || encoded[3]{41 23 d0}
01bah mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
01bch and ecx,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 ca}
01beh xor ecx,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c8}
01c0h mov eax,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c1}
01c2h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
01c4h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 58 03 00 00}
01c9h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
01cbh and eax,esi                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c6}
01cdh not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
01cfh mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
01d1h xor edx,r8d                             ; XOR r32, r/m32 || o32 33 /r || encoded[3]{41 33 d0}
01d4h and eax,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c2}
01d6h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 46 03 00 00}
01dbh mov eax,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c6}
01ddh not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
01dfh not edx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d2}
01e1h and eax,r8d                             ; AND r32, r/m32 || o32 23 /r || encoded[3]{41 23 c0}
01e4h andn r8d,r8d,edx                        ; ANDN r32a, r32b, r/m32 || VEX.LZ.0F38.W0 F2 /r || encoded[5]{c4 62 38 f2 c2}
01e9h or eax,r8d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b c0}
01ech jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 30 03 00 00}
01f1h mov eax,r8d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b c0}
01f4h and eax,esi                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c6}
01f6h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
01f8h mov r8d,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c6}
01fbh xor edx,r8d                             ; XOR r32, r/m32 || o32 33 /r || encoded[3]{41 33 d0}
01feh and eax,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c2}
0200h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 1c 03 00 00}
0205h mov eax,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c6}
0207h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0209h not r8d                                 ; NOT r/m32 || o32 F7 /2 || encoded[3]{41 f7 d0}
020ch and eax,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c2}
020eh andn edx,edx,r8d                        ; ANDN r32a, r32b, r/m32 || VEX.LZ.0F38.W0 F2 /r || encoded[5]{c4 c2 68 f2 d0}
0213h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
0215h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 07 03 00 00}
021ah mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
021ch or eax,r8d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b c0}
021fh mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0221h xor eax,edx                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c2}
0223h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f9 02 00 00}
0228h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
022ah or ecx,r8d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b c8}
022dh mov [rsp+20h],ecx                       ; MOV r/m32, r32 || o32 89 /r || encoded[4]{89 4c 24 20}
0231h lea rcx,[rsp+20h]                       ; LEA r64, m || REX.W 8D /r || encoded[5]{48 8d 4c 24 20}
0236h call 7ff7c6987cb8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1d 30 82 ff}
023bh mov edx,[rax]                           ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b 10}
023dh mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
023fh call 7ff7c670b050h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ac 63 5a ff}
0244h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0246h call 7ff7c6987c98h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ed 2f 82 ff}
024bh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 d1 02 00 00}
0250h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
0252h call 7ff7c7164200h                      ; CALL rel32 || E8 cd || encoded[5]{e8 49 f5 ff ff}
0257h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 c5 02 00 00}
025ch mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
025eh call 7ff7c71641f0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2d f5 ff ff}
0263h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b9 02 00 00}
0268h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
026ah call 7ff7c71641e0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 11 f5 ff ff}
026fh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ad 02 00 00}
0274h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
0276h call 7ff7c71641d0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f5 f4 ff ff}
027bh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 a1 02 00 00}
0280h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
0282h call 7ff7c71641c0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d9 f4 ff ff}
0287h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 95 02 00 00}
028ch mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
028eh call 7ff7c71641b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bd f4 ff ff}
0293h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 89 02 00 00}
0298h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
029ah call 7ff7c71641a0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a1 f4 ff ff}
029fh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 7d 02 00 00}
02a4h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
02a6h call 7ff7c7164190h                      ; CALL rel32 || E8 cd || encoded[5]{e8 85 f4 ff ff}
02abh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 71 02 00 00}
02b0h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
02b2h call 7ff7c7164180h                      ; CALL rel32 || E8 cd || encoded[5]{e8 69 f4 ff ff}
02b7h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 65 02 00 00}
02bch mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
02beh call 7ff7c7164170h                      ; CALL rel32 || E8 cd || encoded[5]{e8 4d f4 ff ff}
02c3h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 59 02 00 00}
02c8h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
02cah call 7ff7c7164160h                      ; CALL rel32 || E8 cd || encoded[5]{e8 31 f4 ff ff}
02cfh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 4d 02 00 00}
02d4h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
02d6h call 7ff7c7164150h                      ; CALL rel32 || E8 cd || encoded[5]{e8 15 f4 ff ff}
02dbh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 41 02 00 00}
02e0h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
02e2h call 7ff7c7164140h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f9 f3 ff ff}
02e7h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 35 02 00 00}
02ech mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
02eeh call 7ff7c7164130h                      ; CALL rel32 || E8 cd || encoded[5]{e8 dd f3 ff ff}
02f3h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 29 02 00 00}
02f8h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
02fah call 7ff7c7164120h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c1 f3 ff ff}
02ffh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 1d 02 00 00}
0304h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
0306h call 7ff7c7164110h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a5 f3 ff ff}
030bh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 11 02 00 00}
0310h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
0312h call 7ff7c7164100h                      ; CALL rel32 || E8 cd || encoded[5]{e8 89 f3 ff ff}
0317h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 05 02 00 00}
031ch mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
031eh call 7ff7c71640f0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6d f3 ff ff}
0323h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f9 01 00 00}
0328h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
032ah call 7ff7c71640e0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 51 f3 ff ff}
032fh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ed 01 00 00}
0334h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
0336h call 7ff7c71640d0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 35 f3 ff ff}
033bh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 e1 01 00 00}
0340h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
0342h call 7ff7c71640c0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 19 f3 ff ff}
0347h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 d5 01 00 00}
034ch mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
034eh call 7ff7c71640b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fd f2 ff ff}
0353h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 c9 01 00 00}
0358h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
035ah call 7ff7c71640a0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e1 f2 ff ff}
035fh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 bd 01 00 00}
0364h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
0366h call 7ff7c7164090h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c5 f2 ff ff}
036bh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b1 01 00 00}
0370h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
0372h call 7ff7c7164080h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a9 f2 ff ff}
0377h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 a5 01 00 00}
037ch mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
037eh call 7ff7c7164070h                      ; CALL rel32 || E8 cd || encoded[5]{e8 8d f2 ff ff}
0383h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 99 01 00 00}
0388h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
038ah call 7ff7c7164060h                      ; CALL rel32 || E8 cd || encoded[5]{e8 71 f2 ff ff}
038fh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 8d 01 00 00}
0394h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
0396h call 7ff7c7164050h                      ; CALL rel32 || E8 cd || encoded[5]{e8 55 f2 ff ff}
039bh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 81 01 00 00}
03a0h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
03a2h call 7ff7c7164040h                      ; CALL rel32 || E8 cd || encoded[5]{e8 39 f2 ff ff}
03a7h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 75 01 00 00}
03ach mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
03aeh call 7ff7c7164030h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1d f2 ff ff}
03b3h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 69 01 00 00}
03b8h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
03bah call 7ff7c7164020h                      ; CALL rel32 || E8 cd || encoded[5]{e8 01 f2 ff ff}
03bfh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 5d 01 00 00}
03c4h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
03c6h call 7ff7c7164010h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e5 f1 ff ff}
03cbh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 51 01 00 00}
03d0h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
03d2h call 7ff7c7164000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c9 f1 ff ff}
03d7h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 45 01 00 00}
03dch mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
03deh call 7ff7c7163ff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ad f1 ff ff}
03e3h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 39 01 00 00}
03e8h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
03eah call 7ff7c7163fe0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 91 f1 ff ff}
03efh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 2d 01 00 00}
03f4h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
03f6h call 7ff7c7163fd0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 75 f1 ff ff}
03fbh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 21 01 00 00}
0400h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
0402h call 7ff7c7163fc0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 59 f1 ff ff}
0407h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 15 01 00 00}
040ch mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
040eh call 7ff7c7163fb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3d f1 ff ff}
0413h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 09 01 00 00}
0418h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
041ah call 7ff7c7163fa0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 21 f1 ff ff}
041fh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 fd 00 00 00}
0424h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
0426h call 7ff7c7163f90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 05 f1 ff ff}
042bh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f1 00 00 00}
0430h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
0432h call 7ff7c7163f80h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e9 f0 ff ff}
0437h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 e5 00 00 00}
043ch mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
043eh call 7ff7c7163f70h                      ; CALL rel32 || E8 cd || encoded[5]{e8 cd f0 ff ff}
0443h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 d9 00 00 00}
0448h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
044ah call 7ff7c7163f60h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b1 f0 ff ff}
044fh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 cd 00 00 00}
0454h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
0456h call 7ff7c7163f50h                      ; CALL rel32 || E8 cd || encoded[5]{e8 95 f0 ff ff}
045bh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 c1 00 00 00}
0460h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
0462h call 7ff7c7163f40h                      ; CALL rel32 || E8 cd || encoded[5]{e8 79 f0 ff ff}
0467h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b5 00 00 00}
046ch mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
046eh call 7ff7c7163f30h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5d f0 ff ff}
0473h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 a9 00 00 00}
0478h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
047ah call 7ff7c7163f20h                      ; CALL rel32 || E8 cd || encoded[5]{e8 41 f0 ff ff}
047fh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 9d 00 00 00}
0484h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
0486h call 7ff7c7163f10h                      ; CALL rel32 || E8 cd || encoded[5]{e8 25 f0 ff ff}
048bh jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 91 00 00 00}
0490h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
0492h call 7ff7c7163f00h                      ; CALL rel32 || E8 cd || encoded[5]{e8 09 f0 ff ff}
0497h jmp near ptr 0521h                      ; JMP rel32 || E9 cd || encoded[5]{e9 85 00 00 00}
049ch mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
049eh call 7ff7c7163ef0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ed ef ff ff}
04a3h jmp short 0521h                         ; JMP rel8 || EB cb || encoded[2]{eb 7c}
04a5h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
04a7h call 7ff7c7163ee0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d4 ef ff ff}
04ach jmp short 0521h                         ; JMP rel8 || EB cb || encoded[2]{eb 73}
04aeh mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
04b0h call 7ff7c7163ed0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bb ef ff ff}
04b5h jmp short 0521h                         ; JMP rel8 || EB cb || encoded[2]{eb 6a}
04b7h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
04b9h call 7ff7c7163ec0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a2 ef ff ff}
04beh jmp short 0521h                         ; JMP rel8 || EB cb || encoded[2]{eb 61}
04c0h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
04c2h call 7ff7c7163eb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 89 ef ff ff}
04c7h jmp short 0521h                         ; JMP rel8 || EB cb || encoded[2]{eb 58}
04c9h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
04cbh call 7ff7c7163ea0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 70 ef ff ff}
04d0h jmp short 0521h                         ; JMP rel8 || EB cb || encoded[2]{eb 4f}
04d2h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
04d4h call 7ff7c7163e90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 57 ef ff ff}
04d9h jmp short 0521h                         ; JMP rel8 || EB cb || encoded[2]{eb 46}
04dbh mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
04ddh call 7ff7c7163e80h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3e ef ff ff}
04e2h jmp short 0521h                         ; JMP rel8 || EB cb || encoded[2]{eb 3d}
04e4h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
04e6h call 7ff7c7163e70h                      ; CALL rel32 || E8 cd || encoded[5]{e8 25 ef ff ff}
04ebh jmp short 0521h                         ; JMP rel8 || EB cb || encoded[2]{eb 34}
04edh mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
04efh call 7ff7c7163e60h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0c ef ff ff}
04f4h jmp short 0521h                         ; JMP rel8 || EB cb || encoded[2]{eb 2b}
04f6h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
04f8h call 7ff7c7163e50h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f3 ee ff ff}
04fdh jmp short 0521h                         ; JMP rel8 || EB cb || encoded[2]{eb 22}
04ffh mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
0501h call 7ff7c7163e40h                      ; CALL rel32 || E8 cd || encoded[5]{e8 da ee ff ff}
0506h jmp short 0521h                         ; JMP rel8 || EB cb || encoded[2]{eb 19}
0508h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
050ah call 7ff7c7163388h                      ; CALL rel32 || E8 cd || encoded[5]{e8 19 e4 ff ff}
050fh jmp short 0521h                         ; JMP rel8 || EB cb || encoded[2]{eb 10}
0511h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
0513h call 7ff7c7163378h                      ; CALL rel32 || E8 cd || encoded[5]{e8 00 e4 ff ff}
0518h jmp short 0521h                         ; JMP rel8 || EB cb || encoded[2]{eb 07}
051ah mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
051ch call 7ff7c7163368h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e7 e3 ff ff}
0521h nop                                     ; NOP || o32 90 || encoded[1]{90}
0522h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0526h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0527h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0528h ret                                     ; RET || C3 || encoded[1]{c3}
0529h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0533h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 18 1d d4 5e}
0538h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
053bh movzx ecx,dil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 cf}
053fh call 7ff7c7163358h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b4 e3 ff ff}
0544h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
0547h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
054ah call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 51 40 24 ff}
054fh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0552h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 49 69 cb 5e}
0557h int 3                                   ; INT3 || CC || encoded[1]{cc}
0558h (bad)                                   ; <invalid> || <invalid> || encoded[2]{27 00}
055ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
055ch xor eax,45000000h                       ; XOR EAX, imm32 || o32 35 id || encoded[5]{35 00 00 00 45}
0561h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0563h add [rdx],dl                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 52 00}
0566h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0568h (bad)                                   ; <invalid> || <invalid> || encoded[2]{60 00}
056ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
056ch jo short 056eh                          ; JO rel8 || 70 cb || encoded[2]{70 00}
056eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0570h jle short 0572h                         ; JLE rel8 || 7E cb || encoded[2]{7e 00}
0572h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0574h xchg edx,eax                            ; XCHG r32, EAX || o32 90+rd || encoded[1]{92}
0575h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0577h add [rax-50000000h],ah                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 a0 00 00 00 b0}
057dh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
057fh add [rax+rax+0ce0000h],bh               ; ADD r/m8, r8 || 00 /r || encoded[7]{00 bc 00 00 00 ce 00}
0586h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0588h fld qword ptr [rax]                     ; FLD m64fp || DD /0 || encoded[2]{dd 00}
058ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
058ch out dx,eax                              ; OUT DX, EAX || o32 EF || encoded[1]{ef}
058dh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
058fh add ch,bh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 fd}
0591h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0593h add [rsi],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 06}
0595h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
0597h add [rsi],dl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 16}
0599h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
059bh add [rdx],ah                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 22}
059dh add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
059fh add [rdx],dh                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 32}
05a1h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
05a3h add [rax+1],al                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 40 01}
05a6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
05a8h push rdx                                ; PUSH r64 || 50+ro || encoded[1]{52}
05a9h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
05abh add [rax+1],ah                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 60 01}
05aeh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
05b0h js short 05b3h                          ; JS rel8 || 78 cb || encoded[2]{78 01}
05b2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
05b4h xchg edx,eax                            ; XCHG r32, EAX || o32 90+rd || encoded[1]{92}
05b5h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
05b7h add [rdx-46ffffffh],ah                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 a2 01 00 00 b9}
05bdh add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
05bfh add bl,cl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 cb}
05c1h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
05c3h add cl,ah                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 e1}
05c5h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
05c7h add ch,dh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 f5}
05c9h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
05cbh add [rdx],cl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 0a}
05cdh add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
05cfh add [rax],bl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 18}
05d1h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
05d3h add [rax+2],al                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 40 02}
05d6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
05d8h add r8b,[rax]                           ; ADD r8, r/m8 || 02 /r || encoded[3]{4c 02 00}
05dbh add [rax+2],bl                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 58 02}
05deh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
05e0h add al,fs:[rax]                         ; ADD r8, r/m8 || 02 /r || encoded[3]{64 02 00}
05e3h add [rax+2],dh                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 70 02}
05e6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
05e8h jl short 05ech                          ; JL rel8 || 7C cb || encoded[2]{7c 02}
05eah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
05ech mov [rdx],al                            ; MOV r/m8, r8 || 88 /r || encoded[2]{88 02}
05eeh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
05f0h xchg esp,eax                            ; XCHG r32, EAX || o32 90+rd || encoded[1]{94}
05f1h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
05f3h add [rax-53fffffeh],ah                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 a0 02 00 00 ac}
05f9h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
05fbh add [rax-3bfffffeh],bh                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 b8 02 00 00 c4}
0601h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
0603h add al,dl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 d0}
0605h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
0607h add ah,bl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 dc}
0609h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
060bh add al,ch                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 e8}
060dh add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
060fh add ah,dh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 f4}
0611h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
0613h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0615h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
0617h add [rbx+rax],cl                        ; ADD r/m8, r8 || 00 /r || encoded[3]{00 0c 03}
061ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
061ch sbb [rbx],al                            ; SBB r/m8, r8 || 18 /r || encoded[2]{18 03}
061eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0620h and al,3                                ; AND AL, imm8 || 24 ib || encoded[2]{24 03}
0622h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0624h xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0626h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0628h cmp al,3                                ; CMP AL, imm8 || 3C ib || encoded[2]{3c 03}
062ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
062ch add rax,[rax]                           ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 00}
062fh add [rbx+rax],dl                        ; ADD r/m8, r8 || 00 /r || encoded[4]{00 54 03 00}
0633h add [rax+3],ah                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 60 03}
0636h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0638h insb                                    ; INSB || 6C || encoded[1]{6c}
0639h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
063bh add [rax+3],bh                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 78 03}
063eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0640h test al,[rbx]                           ; TEST r/m8, r8 || 84 /r || encoded[2]{84 03}
0642h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0644h nop                                     ; NOP || o32 90 || encoded[1]{90}
0645h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
0647h add [rbx+rax+3a80000h],bl               ; ADD r/m8, r8 || 00 /r || encoded[7]{00 9c 03 00 00 a8 03}
064eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0650h mov ah,3                                ; MOV r8, imm8 || B0+rb ib || encoded[2]{b4 03}
0652h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0654h rol byte ptr [rbx],0                    ; ROL r/m8, imm8 || C0 /0 ib || encoded[3]{c0 03 00}
0657h add ah,cl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 cc}
0659h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
065bh add al,bl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 d8}
065dh add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
065fh add ah,ah                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 e4}
0661h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
0663h add al,dh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 f0}
0665h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
0667h add ah,bh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 fc}
0669h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
066bh add [rax],cl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 08}
066dh add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
066fh add [rsp+rax],dl                        ; ADD r/m8, r8 || 00 /r || encoded[3]{00 14 04}
0672h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0674h and [rax+rax],al                        ; AND r/m8, r8 || 20 /r || encoded[3]{20 04 00}
0677h add [rsp+rax],ch                        ; ADD r/m8, r8 || 00 /r || encoded[3]{00 2c 04}
067ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
067ch cmp [rax+rax],al                        ; CMP r/m8, r8 || 38 /r || encoded[3]{38 04 00}
067fh add [rsp+rax],al                        ; ADD r/m8, r8 || 00 /r || encoded[4]{00 44 04 00}
0683h add [rax+4],dl                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 50 04}
0686h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0688h pop rsp                                 ; POP r64 || 58+ro || encoded[1]{5c}
0689h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
068bh add [rax+4],ch                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 68 04}
068eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0690h je short 0696h                          ; JE rel8 || 74 cb || encoded[2]{74 04}
0692h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0694h add byte ptr [rax+rax],0                ; ADD r/m8, imm8 || 80 /0 ib || encoded[4]{80 04 00 00}
0698h mov [rax+rax],es                        ; MOV r32/m16, Sreg || o32 8C /r || encoded[3]{8c 04 00}
069bh add [rbp-61fffffch],dl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 95 04 00 00 9e}
06a1h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
06a3h add [rdi-4ffffffch],ah                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 a7 04 00 00 b0}
06a9h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
06abh add [rcx-3dfffffch],bh                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 b9 04 00 00 c2}
06b1h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
06b3h add bl,cl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 cb}
06b5h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
06b7h add ah,dl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 d4}
06b9h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
06bbh add ch,bl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 dd}
06bdh add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
06bfh add dh,ah                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 e6}
06c1h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
06c3h add bh,ch                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 ef}
06c5h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
06c7h add al,bh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 f8}
06c9h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
06cbh add [rcx],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 01}
06cdh add eax,50a0000h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 00 0a 05}
06d2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
06d4h sbb [rsi],eax                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 06}
06d6h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
06d8h (bad)                                   ; <invalid> || <invalid> || encoded[2]{06 42}
06dah add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
06ddh jo short 06dfh                          ; JO rel8 || 70 cb || encoded[2]{70 00}
06dfh (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; int eval<int>(TernaryBitLogicKind:byte kind, int a, int b, int c)
; eval_g[32i](TernaryBitLogicKind~8u,32i,32i,32i)[2105] = {57 56 53 48 83 ec 30 8b d9 41 8b f0 41 8b f9 0f b6 cb ff c9 83 f9 5e 0f 87 63 06 00 00 8b c9 48 8d 05 8a 06 00 00 8b 04 88 4c 8d 05 df ff ff ff 49 03 c0 ff e0 0b f7 0b d6 8b c2 f7 d0 e9 35 06 00 00 8b c6 0b c2 f7 d0 8b cf 23 c1 e9 26 06 00 00 8b c6 0b c2 f7 d0 e9 1b 06 00 00 8b c2 8b d7 0b c2 f7 d0 8b ce 23 c1 e9 0a 06 00 00 8b c7 0b c2 f7 d0 e9 ff 05 00 00 8b c2 f7 d0 8b d6 8b cf 33 ca 23 c1 e9 ee 05 00 00 8b c6 8b cf 23 c8 0b ca 8b c1 f7 d0 e9 dd 05 00 00 8b c2 f7 d0 8b d6 23 c2 8b cf 23 c1 e9 cc 05 00 00 8b c6 8b cf 33 c8 0b ca 8b c1 f7 d0 e9 bb 05 00 00 8b c2 f7 d0 8b d7 23 c2 e9 ae 05 00 00 8b da f7 d3 8b ce e8 bc fd ff ff 0b c7 23 c3 e9 9a 05 00 00 8b c2 f7 d0 8b d6 23 c2 e9 8d 05 00 00 8b da f7 d3 8b cf e8 9b fd ff ff 0b c6 23 c3 e9 79 05 00 00 8b c2 f7 d0 8b d6 0b d7 23 c2 e9 6a 05 00 00 8b c2 f7 d0 e9 61 05 00 00 8b c6 8b cf 0b c8 8b c1 f7 d0 23 c2 e9 50 05 00 00 8b c7 8b ce 0b c8 8b c1 f7 d0 e9 41 05 00 00 8b c6 f7 d0 8b cf 33 ca 23 c1 e9 32 05 00 00 8b c2 8b d7 23 d0 8b ce 0b ca 8b c1 f7 d0 e9 1f 05 00 00 8b c7 f7 d0 8b ce 33 ca 23 c1 e9 10 05 00 00 8b c2 8b d6 23 d0 8b cf 0b ca 8b c1 f7 d0 e9 fd 04 00 00 8b c6 0b c7 f7 d0 8b ce 44 8b c7 41 33 c8 23 c2 c4 e2 68 f2 d1 0b c2 e9 e1 04 00 00 8b c6 0b c7 8b ce 44 8b c7 41 23 c8 23 c2 c4 e2 68 f2 d1 0b d0 8b c2 f7 d0 e9 c3 04 00 00 8b c6 33 c2 8b cf 33 ca 23 c1 e9 b4 04 00 00 8b de 33 df 8b ce 8b c7 23 c8 89 4c 24 2c 8b ca 8b 54 24 2c e8 8c 91 82 ff 8b d0 8b cb e8 eb 70 ff ff 8b c8 e8 f4 7a ff ff e9 86 04 00 00 8b ca 8b d6 44 8b c7 e8 f3 fa ff ff e9 75 04 00 00 8b ca 8b d6 44 8b c7 e8 d2 fa ff ff e9 64 04 00 00 8b ca 8b d6 44 8b c7 e8 b1 fa ff ff e9 53 04 00 00 8b ca 8b d6 44 8b c7 e8 90 fa ff ff e9 42 04 00 00 8b ca 8b d6 44 8b c7 e8 6f fa ff ff e9 31 04 00 00 8b ca 8b d6 44 8b c7 e8 4e fa ff ff e9 20 04 00 00 8b ca 8b d6 44 8b c7 e8 2d fa ff ff e9 0f 04 00 00 8b ca 8b d6 44 8b c7 e8 0c fa ff ff e9 fe 03 00 00 8b ca 8b d6 44 8b c7 e8 eb f9 ff ff e9 ed 03 00 00 8b ca 8b d6 44 8b c7 e8 ca f9 ff ff e9 dc 03 00 00 8b ca 8b d6 44 8b c7 e8 a9 f9 ff ff e9 cb 03 00 00 8b ca 8b d6 44 8b c7 e8 88 f9 ff ff e9 ba 03 00 00 8b ca 8b d6 44 8b c7 e8 67 f9 ff ff e9 a9 03 00 00 8b ca 8b d6 44 8b c7 e8 46 f9 ff ff e9 98 03 00 00 8b ca 8b d6 44 8b c7 e8 25 f9 ff ff e9 87 03 00 00 8b ca 8b d6 44 8b c7 e8 04 f9 ff ff e9 76 03 00 00 8b ca 8b d6 44 8b c7 e8 e3 f8 ff ff e9 65 03 00 00 8b ca 8b d6 44 8b c7 e8 c2 f1 ff ff e9 54 03 00 00 8b ca 8b d6 44 8b c7 e8 a1 f1 ff ff e9 43 03 00 00 8b ca 8b d6 44 8b c7 e8 80 f1 ff ff e9 32 03 00 00 8b ca 8b d6 44 8b c7 e8 5f f1 ff ff e9 21 03 00 00 8b ca 8b d6 44 8b c7 e8 3e f1 ff ff e9 10 03 00 00 8b ca 8b d6 44 8b c7 e8 1d f1 ff ff e9 ff 02 00 00 8b ca 8b d6 44 8b c7 e8 fc f0 ff ff e9 ee 02 00 00 8b ca 8b d6 44 8b c7 e8 db f0 ff ff e9 dd 02 00 00 8b ca 8b d6 44 8b c7 e8 ba f0 ff ff e9 cc 02 00 00 8b ca 8b d6 44 8b c7 e8 99 f0 ff ff e9 bb 02 00 00 8b ca 8b d6 44 8b c7 e8 78 f0 ff ff e9 aa 02 00 00 8b ca 8b d6 44 8b c7 e8 57 f0 ff ff e9 99 02 00 00 8b ca 8b d6 44 8b c7 e8 36 f0 ff ff e9 88 02 00 00 8b ca 8b d6 44 8b c7 e8 15 f0 ff ff e9 77 02 00 00 8b ca 8b d6 44 8b c7 e8 f4 ef ff ff e9 66 02 00 00 8b ca 8b d6 44 8b c7 e8 d3 ef ff ff e9 55 02 00 00 8b ca 8b d6 44 8b c7 e8 b2 ef ff ff e9 44 02 00 00 8b ca 8b d6 44 8b c7 e8 91 ef ff ff e9 33 02 00 00 8b ca 8b d6 44 8b c7 e8 70 ef ff ff e9 22 02 00 00 8b ca 8b d6 44 8b c7 e8 4f ef ff ff e9 11 02 00 00 8b ca 8b d6 44 8b c7 e8 2e ef ff ff e9 00 02 00 00 8b ca 8b d6 44 8b c7 e8 0d ef ff ff e9 ef 01 00 00 8b ca 8b d6 44 8b c7 e8 ec ee ff ff e9 de 01 00 00 8b ca 8b d6 44 8b c7 e8 cb ee ff ff e9 cd 01 00 00 8b ca 8b d6 44 8b c7 e8 aa ee ff ff e9 bc 01 00 00 8b ca 8b d6 44 8b c7 e8 89 ee ff ff e9 ab 01 00 00 8b ca 8b d6 44 8b c7 e8 68 ee ff ff e9 9a 01 00 00 8b ca 8b d6 44 8b c7 e8 47 ee ff ff e9 89 01 00 00 8b ca 8b d6 44 8b c7 e8 26 ee ff ff e9 78 01 00 00 8b ca 8b d6 44 8b c7 e8 05 ee ff ff e9 67 01 00 00 8b ca 8b d6 44 8b c7 e8 e4 ed ff ff e9 56 01 00 00 8b ca 8b d6 44 8b c7 e8 c3 ed ff ff e9 45 01 00 00 8b ca 8b d6 44 8b c7 e8 a2 ed ff ff e9 34 01 00 00 8b ca 8b d6 44 8b c7 e8 81 ed ff ff e9 23 01 00 00 8b ca 8b d6 44 8b c7 e8 60 ed ff ff e9 12 01 00 00 8b ca 8b d6 44 8b c7 e8 3f ed ff ff e9 01 01 00 00 8b ca 8b d6 44 8b c7 e8 1e ed ff ff e9 f0 00 00 00 8b ca 8b d6 44 8b c7 e8 fd ec ff ff e9 df 00 00 00 8b ca 8b d6 44 8b c7 e8 dc ec ff ff e9 ce 00 00 00 8b ca 8b d6 44 8b c7 e8 bb ec ff ff e9 bd 00 00 00 8b ca 8b d6 44 8b c7 e8 9a ec ff ff e9 ac 00 00 00 8b ca 8b d6 44 8b c7 e8 79 ec ff ff e9 9b 00 00 00 8b ca 8b d6 44 8b c7 e8 58 ec ff ff e9 8a 00 00 00 8b ca 8b d6 44 8b c7 e8 37 ec ff ff eb 7c 8b ca 8b d6 44 8b c7 e8 19 ec ff ff eb 6e 8b ca 8b d6 44 8b c7 e8 fb eb ff ff eb 60 8b ca 8b d6 44 8b c7 e8 dd eb ff ff eb 52 8b ca 8b d6 44 8b c7 e8 bf eb ff ff eb 44 8b ca 8b d6 44 8b c7 e8 a1 eb ff ff eb 36 8b ca 8b d6 44 8b c7 e8 83 eb ff ff eb 28 8b ca 8b d6 44 8b c7 e8 65 eb ff ff eb 1a 8b ca 8b d6 44 8b c7 e8 47 eb ff ff eb 0c 8b ca 8b d6 44 8b c7 e8 29 eb ff ff 90 48 83 c4 30 5b 5e 5f c3 48 b9 40 b0 5b c6 f7 7f 00 00 e8 c1 10 d4 5e 48 8b f0 0f b6 cb e8 f6 ea ff ff 48 8b d0 48 8b ce e8 fb 33 24 ff 48 8b ce e8 f3 5c cb 5e cc 00 00 26 00 00 00 33 00 00 00 42 00 00 00 4d 00 00 00 5e 00 00 00 69 00 00 00 7a 00 00 00 8b 00 00 00 9c 00 00 00 ad 00 00 00 ba 00 00 00 ce 00 00 00 db 00 00 00 ef 00 00 00 fe 00 00 00 07 01 00 00 18 01 00 00 27 01 00 00 36 01 00 00 49 01 00 00 58 01 00 00 6b 01 00 00 87 01 00 00 a5 01 00 00 b4 01 00 00 e2 01 00 00 f3 01 00 00 04 02 00 00 15 02 00 00 26 02 00 00 37 02 00 00 48 02 00 00 59 02 00 00 6a 02 00 00 7b 02 00 00 8c 02 00 00 9d 02 00 00 ae 02 00 00 bf 02 00 00 d0 02 00 00 e1 02 00 00 f2 02 00 00 03 03 00 00 14 03 00 00 25 03 00 00 36 03 00 00 47 03 00 00 58 03 00 00 69 03 00 00 7a 03 00 00 8b 03 00 00 9c 03 00 00 ad 03 00 00 be 03 00 00 cf 03 00 00 e0 03 00 00 f1 03 00 00 02 04 00 00 13 04 00 00 24 04 00 00 35 04 00 00 46 04 00 00 57 04 00 00 68 04 00 00 79 04 00 00 8a 04 00 00 9b 04 00 00 ac 04 00 00 bd 04 00 00 ce 04 00 00 df 04 00 00 f0 04 00 00 01 05 00 00 12 05 00 00 23 05 00 00 34 05 00 00 45 05 00 00 56 05 00 00 67 05 00 00 78 05 00 00 89 05 00 00 9a 05 00 00 ab 05 00 00 bc 05 00 00 cd 05 00 00 de 05 00 00 ec 05 00 00 fa 05 00 00 08 06 00 00 16 06 00 00 24 06 00 00 32 06 00 00 40 06 00 00 4e 06 00 00 5c 06 00 00 19 07 04 00 07 52 03 30 02 60 01 70 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0003h sub rsp,30h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 30}
0007h mov ebx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d9}
0009h mov esi,r8d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b f0}
000ch mov edi,r9d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b f9}
000fh movzx ecx,bl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 cb}
0012h dec ecx                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c9}
0014h cmp ecx,5eh                             ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f9 5e}
0017h ja near ptr 0680h                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 63 06 00 00}
001dh mov ecx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c9}
001fh lea rax,[rip+68ah]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 8a 06 00 00}
0026h mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0029h lea r8,[rip-21h]                        ; LEA r64, m || REX.W 8D /r || encoded[7]{4c 8d 05 df ff ff ff}
0030h add rax,r8                              ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{49 03 c0}
0033h jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
0035h or esi,edi                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b f7}
0037h or edx,esi                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b d6}
0039h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
003bh not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
003dh jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 35 06 00 00}
0042h mov eax,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c6}
0044h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
0046h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0048h mov ecx,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b cf}
004ah and eax,ecx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c1}
004ch jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 26 06 00 00}
0051h mov eax,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c6}
0053h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
0055h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0057h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 1b 06 00 00}
005ch mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
005eh mov edx,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d7}
0060h or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
0062h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0064h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
0066h and eax,ecx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c1}
0068h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 0a 06 00 00}
006dh mov eax,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c7}
006fh or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
0071h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0073h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ff 05 00 00}
0078h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
007ah not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
007ch mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
007eh mov ecx,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b cf}
0080h xor ecx,edx                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 ca}
0082h and eax,ecx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c1}
0084h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ee 05 00 00}
0089h mov eax,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c6}
008bh mov ecx,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b cf}
008dh and ecx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c8}
008fh or ecx,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b ca}
0091h mov eax,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c1}
0093h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0095h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 dd 05 00 00}
009ah mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
009ch not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
009eh mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
00a0h and eax,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c2}
00a2h mov ecx,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b cf}
00a4h and eax,ecx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c1}
00a6h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 cc 05 00 00}
00abh mov eax,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c6}
00adh mov ecx,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b cf}
00afh xor ecx,eax                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c8}
00b1h or ecx,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b ca}
00b3h mov eax,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c1}
00b5h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
00b7h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 bb 05 00 00}
00bch mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
00beh not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
00c0h mov edx,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d7}
00c2h and eax,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c2}
00c4h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ae 05 00 00}
00c9h mov ebx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b da}
00cbh not ebx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d3}
00cdh mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
00cfh call 7ff7c71653f0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bc fd ff ff}
00d4h or eax,edi                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c7}
00d6h and eax,ebx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c3}
00d8h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 9a 05 00 00}
00ddh mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
00dfh not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
00e1h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
00e3h and eax,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c2}
00e5h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 8d 05 00 00}
00eah mov ebx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b da}
00ech not ebx                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d3}
00eeh mov ecx,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b cf}
00f0h call 7ff7c71653f0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9b fd ff ff}
00f5h or eax,esi                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c6}
00f7h and eax,ebx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c3}
00f9h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 79 05 00 00}
00feh mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
0100h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0102h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0104h or edx,edi                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b d7}
0106h and eax,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c2}
0108h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 6a 05 00 00}
010dh mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
010fh not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0111h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 61 05 00 00}
0116h mov eax,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c6}
0118h mov ecx,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b cf}
011ah or ecx,eax                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c8}
011ch mov eax,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c1}
011eh not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0120h and eax,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c2}
0122h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 50 05 00 00}
0127h mov eax,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c7}
0129h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
012bh or ecx,eax                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c8}
012dh mov eax,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c1}
012fh not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0131h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 41 05 00 00}
0136h mov eax,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c6}
0138h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
013ah mov ecx,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b cf}
013ch xor ecx,edx                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 ca}
013eh and eax,ecx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c1}
0140h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 32 05 00 00}
0145h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
0147h mov edx,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d7}
0149h and edx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 d0}
014bh mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
014dh or ecx,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b ca}
014fh mov eax,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c1}
0151h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0153h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 1f 05 00 00}
0158h mov eax,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c7}
015ah not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
015ch mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
015eh xor ecx,edx                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 ca}
0160h and eax,ecx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c1}
0162h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 10 05 00 00}
0167h mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
0169h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
016bh and edx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 d0}
016dh mov ecx,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b cf}
016fh or ecx,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b ca}
0171h mov eax,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c1}
0173h not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0175h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 fd 04 00 00}
017ah mov eax,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c6}
017ch or eax,edi                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c7}
017eh not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
0180h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
0182h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
0185h xor ecx,r8d                             ; XOR r32, r/m32 || o32 33 /r || encoded[3]{41 33 c8}
0188h and eax,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c2}
018ah andn edx,edx,ecx                        ; ANDN r32a, r32b, r/m32 || VEX.LZ.0F38.W0 F2 /r || encoded[5]{c4 e2 68 f2 d1}
018fh or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
0191h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 e1 04 00 00}
0196h mov eax,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c6}
0198h or eax,edi                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c7}
019ah mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
019ch mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
019fh and ecx,r8d                             ; AND r32, r/m32 || o32 23 /r || encoded[3]{41 23 c8}
01a2h and eax,edx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c2}
01a4h andn edx,edx,ecx                        ; ANDN r32a, r32b, r/m32 || VEX.LZ.0F38.W0 F2 /r || encoded[5]{c4 e2 68 f2 d1}
01a9h or edx,eax                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b d0}
01abh mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
01adh not eax                                 ; NOT r/m32 || o32 F7 /2 || encoded[2]{f7 d0}
01afh jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 c3 04 00 00}
01b4h mov eax,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c6}
01b6h xor eax,edx                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 c2}
01b8h mov ecx,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b cf}
01bah xor ecx,edx                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 ca}
01bch and eax,ecx                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c1}
01beh jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b4 04 00 00}
01c3h mov ebx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b de}
01c5h xor ebx,edi                             ; XOR r32, r/m32 || o32 33 /r || encoded[2]{33 df}
01c7h mov ecx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ce}
01c9h mov eax,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c7}
01cbh and ecx,eax                             ; AND r32, r/m32 || o32 23 /r || encoded[2]{23 c8}
01cdh mov [rsp+2ch],ecx                       ; MOV r/m32, r32 || o32 89 /r || encoded[4]{89 4c 24 2c}
01d1h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
01d3h mov edx,[rsp+2ch]                       ; MOV r32, r/m32 || o32 8B /r || encoded[4]{8b 54 24 2c}
01d7h call 7ff7c698e8c8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 8c 91 82 ff}
01dch mov edx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d0}
01deh mov ecx,ebx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b cb}
01e0h call 7ff7c715c830h                      ; CALL rel32 || E8 cd || encoded[5]{e8 eb 70 ff ff}
01e5h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
01e7h call 7ff7c715d240h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f4 7a ff ff}
01ech jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 86 04 00 00}
01f1h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
01f3h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
01f5h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
01f8h call 7ff7c7165250h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f3 fa ff ff}
01fdh jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 75 04 00 00}
0202h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0204h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0206h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
0209h call 7ff7c7165240h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d2 fa ff ff}
020eh jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 64 04 00 00}
0213h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0215h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0217h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
021ah call 7ff7c7165230h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b1 fa ff ff}
021fh jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 53 04 00 00}
0224h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0226h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0228h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
022bh call 7ff7c7165220h                      ; CALL rel32 || E8 cd || encoded[5]{e8 90 fa ff ff}
0230h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 42 04 00 00}
0235h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0237h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0239h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
023ch call 7ff7c7165210h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6f fa ff ff}
0241h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 31 04 00 00}
0246h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0248h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
024ah mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
024dh call 7ff7c7165200h                      ; CALL rel32 || E8 cd || encoded[5]{e8 4e fa ff ff}
0252h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 20 04 00 00}
0257h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0259h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
025bh mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
025eh call 7ff7c71651f0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2d fa ff ff}
0263h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 0f 04 00 00}
0268h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
026ah mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
026ch mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
026fh call 7ff7c71651e0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0c fa ff ff}
0274h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 fe 03 00 00}
0279h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
027bh mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
027dh mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
0280h call 7ff7c71651d0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 eb f9 ff ff}
0285h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ed 03 00 00}
028ah mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
028ch mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
028eh mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
0291h call 7ff7c71651c0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ca f9 ff ff}
0296h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 dc 03 00 00}
029bh mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
029dh mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
029fh mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
02a2h call 7ff7c71651b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a9 f9 ff ff}
02a7h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 cb 03 00 00}
02ach mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
02aeh mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
02b0h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
02b3h call 7ff7c71651a0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 88 f9 ff ff}
02b8h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ba 03 00 00}
02bdh mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
02bfh mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
02c1h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
02c4h call 7ff7c7165190h                      ; CALL rel32 || E8 cd || encoded[5]{e8 67 f9 ff ff}
02c9h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 a9 03 00 00}
02ceh mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
02d0h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
02d2h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
02d5h call 7ff7c7165180h                      ; CALL rel32 || E8 cd || encoded[5]{e8 46 f9 ff ff}
02dah jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 98 03 00 00}
02dfh mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
02e1h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
02e3h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
02e6h call 7ff7c7165170h                      ; CALL rel32 || E8 cd || encoded[5]{e8 25 f9 ff ff}
02ebh jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 87 03 00 00}
02f0h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
02f2h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
02f4h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
02f7h call 7ff7c7165160h                      ; CALL rel32 || E8 cd || encoded[5]{e8 04 f9 ff ff}
02fch jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 76 03 00 00}
0301h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0303h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0305h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
0308h call 7ff7c7165150h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e3 f8 ff ff}
030dh jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 65 03 00 00}
0312h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0314h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0316h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
0319h call 7ff7c7164a40h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c2 f1 ff ff}
031eh jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 54 03 00 00}
0323h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0325h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0327h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
032ah call 7ff7c7164a30h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a1 f1 ff ff}
032fh jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 43 03 00 00}
0334h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0336h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0338h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
033bh call 7ff7c7164a20h                      ; CALL rel32 || E8 cd || encoded[5]{e8 80 f1 ff ff}
0340h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 32 03 00 00}
0345h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0347h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0349h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
034ch call 7ff7c7164a10h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5f f1 ff ff}
0351h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 21 03 00 00}
0356h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0358h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
035ah mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
035dh call 7ff7c7164a00h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3e f1 ff ff}
0362h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 10 03 00 00}
0367h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0369h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
036bh mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
036eh call 7ff7c71649f0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1d f1 ff ff}
0373h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ff 02 00 00}
0378h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
037ah mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
037ch mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
037fh call 7ff7c71649e0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fc f0 ff ff}
0384h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ee 02 00 00}
0389h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
038bh mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
038dh mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
0390h call 7ff7c71649d0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 db f0 ff ff}
0395h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 dd 02 00 00}
039ah mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
039ch mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
039eh mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
03a1h call 7ff7c71649c0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ba f0 ff ff}
03a6h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 cc 02 00 00}
03abh mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
03adh mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
03afh mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
03b2h call 7ff7c71649b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 99 f0 ff ff}
03b7h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 bb 02 00 00}
03bch mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
03beh mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
03c0h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
03c3h call 7ff7c71649a0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 78 f0 ff ff}
03c8h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 aa 02 00 00}
03cdh mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
03cfh mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
03d1h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
03d4h call 7ff7c7164990h                      ; CALL rel32 || E8 cd || encoded[5]{e8 57 f0 ff ff}
03d9h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 99 02 00 00}
03deh mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
03e0h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
03e2h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
03e5h call 7ff7c7164980h                      ; CALL rel32 || E8 cd || encoded[5]{e8 36 f0 ff ff}
03eah jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 88 02 00 00}
03efh mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
03f1h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
03f3h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
03f6h call 7ff7c7164970h                      ; CALL rel32 || E8 cd || encoded[5]{e8 15 f0 ff ff}
03fbh jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 77 02 00 00}
0400h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0402h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0404h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
0407h call 7ff7c7164960h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f4 ef ff ff}
040ch jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 66 02 00 00}
0411h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0413h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0415h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
0418h call 7ff7c7164950h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d3 ef ff ff}
041dh jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 55 02 00 00}
0422h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0424h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0426h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
0429h call 7ff7c7164940h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b2 ef ff ff}
042eh jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 44 02 00 00}
0433h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0435h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0437h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
043ah call 7ff7c7164930h                      ; CALL rel32 || E8 cd || encoded[5]{e8 91 ef ff ff}
043fh jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 33 02 00 00}
0444h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0446h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0448h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
044bh call 7ff7c7164920h                      ; CALL rel32 || E8 cd || encoded[5]{e8 70 ef ff ff}
0450h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 22 02 00 00}
0455h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0457h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0459h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
045ch call 7ff7c7164910h                      ; CALL rel32 || E8 cd || encoded[5]{e8 4f ef ff ff}
0461h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 11 02 00 00}
0466h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0468h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
046ah mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
046dh call 7ff7c7164900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2e ef ff ff}
0472h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 00 02 00 00}
0477h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0479h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
047bh mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
047eh call 7ff7c71648f0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0d ef ff ff}
0483h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ef 01 00 00}
0488h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
048ah mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
048ch mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
048fh call 7ff7c71648e0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ec ee ff ff}
0494h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 de 01 00 00}
0499h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
049bh mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
049dh mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
04a0h call 7ff7c71648d0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 cb ee ff ff}
04a5h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 cd 01 00 00}
04aah mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
04ach mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
04aeh mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
04b1h call 7ff7c71648c0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 aa ee ff ff}
04b6h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 bc 01 00 00}
04bbh mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
04bdh mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
04bfh mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
04c2h call 7ff7c71648b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 89 ee ff ff}
04c7h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ab 01 00 00}
04cch mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
04ceh mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
04d0h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
04d3h call 7ff7c71648a0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 68 ee ff ff}
04d8h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 9a 01 00 00}
04ddh mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
04dfh mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
04e1h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
04e4h call 7ff7c7164890h                      ; CALL rel32 || E8 cd || encoded[5]{e8 47 ee ff ff}
04e9h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 89 01 00 00}
04eeh mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
04f0h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
04f2h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
04f5h call 7ff7c7164880h                      ; CALL rel32 || E8 cd || encoded[5]{e8 26 ee ff ff}
04fah jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 78 01 00 00}
04ffh mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0501h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0503h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
0506h call 7ff7c7164870h                      ; CALL rel32 || E8 cd || encoded[5]{e8 05 ee ff ff}
050bh jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 67 01 00 00}
0510h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0512h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0514h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
0517h call 7ff7c7164860h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e4 ed ff ff}
051ch jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 56 01 00 00}
0521h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0523h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0525h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
0528h call 7ff7c7164850h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c3 ed ff ff}
052dh jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 45 01 00 00}
0532h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0534h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0536h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
0539h call 7ff7c7164840h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a2 ed ff ff}
053eh jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 34 01 00 00}
0543h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0545h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0547h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
054ah call 7ff7c7164830h                      ; CALL rel32 || E8 cd || encoded[5]{e8 81 ed ff ff}
054fh jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 23 01 00 00}
0554h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0556h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0558h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
055bh call 7ff7c7164820h                      ; CALL rel32 || E8 cd || encoded[5]{e8 60 ed ff ff}
0560h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 12 01 00 00}
0565h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0567h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0569h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
056ch call 7ff7c7164810h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3f ed ff ff}
0571h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 01 01 00 00}
0576h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0578h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
057ah mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
057dh call 7ff7c7164800h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1e ed ff ff}
0582h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f0 00 00 00}
0587h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0589h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
058bh mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
058eh call 7ff7c71647f0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fd ec ff ff}
0593h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 df 00 00 00}
0598h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
059ah mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
059ch mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
059fh call 7ff7c71647e0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 dc ec ff ff}
05a4h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ce 00 00 00}
05a9h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
05abh mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
05adh mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
05b0h call 7ff7c71647d0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bb ec ff ff}
05b5h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 bd 00 00 00}
05bah mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
05bch mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
05beh mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
05c1h call 7ff7c71647c0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9a ec ff ff}
05c6h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ac 00 00 00}
05cbh mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
05cdh mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
05cfh mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
05d2h call 7ff7c71647b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 79 ec ff ff}
05d7h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 9b 00 00 00}
05dch mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
05deh mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
05e0h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
05e3h call 7ff7c71647a0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 58 ec ff ff}
05e8h jmp near ptr 0677h                      ; JMP rel32 || E9 cd || encoded[5]{e9 8a 00 00 00}
05edh mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
05efh mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
05f1h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
05f4h call 7ff7c7164790h                      ; CALL rel32 || E8 cd || encoded[5]{e8 37 ec ff ff}
05f9h jmp short 0677h                         ; JMP rel8 || EB cb || encoded[2]{eb 7c}
05fbh mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
05fdh mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
05ffh mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
0602h call 7ff7c7164780h                      ; CALL rel32 || E8 cd || encoded[5]{e8 19 ec ff ff}
0607h jmp short 0677h                         ; JMP rel8 || EB cb || encoded[2]{eb 6e}
0609h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
060bh mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
060dh mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
0610h call 7ff7c7164770h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fb eb ff ff}
0615h jmp short 0677h                         ; JMP rel8 || EB cb || encoded[2]{eb 60}
0617h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0619h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
061bh mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
061eh call 7ff7c7164760h                      ; CALL rel32 || E8 cd || encoded[5]{e8 dd eb ff ff}
0623h jmp short 0677h                         ; JMP rel8 || EB cb || encoded[2]{eb 52}
0625h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0627h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0629h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
062ch call 7ff7c7164750h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bf eb ff ff}
0631h jmp short 0677h                         ; JMP rel8 || EB cb || encoded[2]{eb 44}
0633h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0635h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0637h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
063ah call 7ff7c7164740h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a1 eb ff ff}
063fh jmp short 0677h                         ; JMP rel8 || EB cb || encoded[2]{eb 36}
0641h mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0643h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0645h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
0648h call 7ff7c7164730h                      ; CALL rel32 || E8 cd || encoded[5]{e8 83 eb ff ff}
064dh jmp short 0677h                         ; JMP rel8 || EB cb || encoded[2]{eb 28}
064fh mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
0651h mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0653h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
0656h call 7ff7c7164720h                      ; CALL rel32 || E8 cd || encoded[5]{e8 65 eb ff ff}
065bh jmp short 0677h                         ; JMP rel8 || EB cb || encoded[2]{eb 1a}
065dh mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
065fh mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
0661h mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
0664h call 7ff7c7164710h                      ; CALL rel32 || E8 cd || encoded[5]{e8 47 eb ff ff}
0669h jmp short 0677h                         ; JMP rel8 || EB cb || encoded[2]{eb 0c}
066bh mov ecx,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b ca}
066dh mov edx,esi                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d6}
066fh mov r8d,edi                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c7}
0672h call 7ff7c7164700h                      ; CALL rel32 || E8 cd || encoded[5]{e8 29 eb ff ff}
0677h nop                                     ; NOP || o32 90 || encoded[1]{90}
0678h add rsp,30h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 30}
067ch pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
067dh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
067eh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
067fh ret                                     ; RET || C3 || encoded[1]{c3}
0680h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
068ah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c1 10 d4 5e}
068fh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0692h movzx ecx,bl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 cb}
0695h call 7ff7c71646f0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f6 ea ff ff}
069ah mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
069dh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
06a0h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fb 33 24 ff}
06a5h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
06a8h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f3 5c cb 5e}
06adh int 3                                   ; INT3 || CC || encoded[1]{cc}
06aeh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
06b0h add es:[rax],al                         ; ADD r/m8, r8 || 00 /r || encoded[3]{26 00 00}
06b3h add [rbx],dh                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 33}
06b5h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
06b7h add [rdx],al                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 42 00}
06bah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
06bch add [r8],r8b                            ; ADD r/m8, r8 || 00 /r || encoded[3]{4d 00 00}
06bfh add [rsi],bl                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 5e 00}
06c2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
06c4h imul eax,[rax],7a0000h                  ; IMUL r32, r/m32, imm32 || o32 69 /r id || encoded[6]{69 00 00 00 7a 00}
06cah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
06cch mov eax,[rax]                           ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b 00}
06ceh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
06d0h pushfq                                  ; PUSHFQ || 9C || encoded[1]{9c}
06d1h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
06d3h add [rbp-46000000h],ch                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 ad 00 00 00 ba}
06d9h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
06dbh add dh,cl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 ce}
06ddh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
06dfh add bl,bl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 db}
06e1h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
06e3h add bh,ch                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 ef}
06e5h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
06e7h add dh,bh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 fe}
06e9h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
06ebh add [rdi],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 07}
06edh add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
06efh add [rax],bl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 18}
06f1h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
06f3h add [rdi],ah                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 27}
06f5h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
06f7h add [rsi],dh                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 36}
06f9h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
06fbh add [rcx+1],cl                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 49 01}
06feh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0700h pop rax                                 ; POP r64 || 58+ro || encoded[1]{58}
0701h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
0703h add [rbx+1],ch                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 6b 01}
0706h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0708h xchg eax,[rcx]                          ; XCHG r/m32, r32 || o32 87 /r || encoded[2]{87 01}
070ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
070ch movsd                                   ; MOVSD || o32 A5 || encoded[1]{a5}
070dh add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
070fh add [rcx+rax+1e20000h],dh               ; ADD r/m8, r8 || 00 /r || encoded[7]{00 b4 01 00 00 e2 01}
0716h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0718h rep add [rax],eax                       ; ADD r/m32, r32 || o32 01 /r || encoded[3]{f3 01 00}
071bh add [rdx+rax],al                        ; ADD r/m8, r8 || 00 /r || encoded[3]{00 04 02}
071eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0720h adc eax,26000002h                       ; ADC EAX, imm32 || o32 15 id || encoded[5]{15 02 00 00 26}
0725h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
0727h add [rdi],dh                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 37}
0729h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
072bh add [rax+2],cl                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 48 02}
072eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0730h pop rcx                                 ; POP r64 || 58+ro || encoded[1]{59}
0731h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
0733h add [rdx+2],ch                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 6a 02}
0736h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0738h jnp short 073ch                         ; JNP rel8 || 7B cb || encoded[2]{7b 02}
073ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
073ch mov [rdx],es                            ; MOV r32/m16, Sreg || o32 8C /r || encoded[2]{8c 02}
073eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0740h popfq                                   ; POPFQ || 9D || encoded[1]{9d}
0741h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
0743h add [rsi-40fffffeh],ch                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 ae 02 00 00 bf}
0749h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
074bh add al,dl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 d0}
074dh add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
074fh add cl,ah                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 e1}
0751h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
0753h add dl,dh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 f2}
0755h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
0757h add [rbx],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 03}
0759h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
075bh add [rbx+rax],dl                        ; ADD r/m8, r8 || 00 /r || encoded[3]{00 14 03}
075eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0760h and eax,36000003h                       ; AND EAX, imm32 || o32 25 id || encoded[5]{25 03 00 00 36}
0765h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
0767h add [rdi+3],al                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 47 03}
076ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
076ch pop rax                                 ; POP r64 || 58+ro || encoded[1]{58}
076dh add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
076fh add [rcx+3],ch                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 69 03}
0772h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0774h jp short 0779h                          ; JP rel8 || 7A cb || encoded[2]{7a 03}
0776h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0778h mov eax,[rbx]                           ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b 03}
077ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
077ch pushfq                                  ; PUSHFQ || 9C || encoded[1]{9c}
077dh add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
077fh add [rbp-41fffffdh],ch                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 ad 03 00 00 be}
0785h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
0787h add bh,cl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 cf}
0789h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
078bh add al,ah                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 e0}
078dh add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
078fh add cl,dh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 f1}
0791h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
0793h add [rdx],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 02}
0795h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
0797h add [rbx],dl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 13}
0799h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
079bh add [rsp+rax],ah                        ; ADD r/m8, r8 || 00 /r || encoded[3]{00 24 04}
079eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
07a0h xor eax,46000004h                       ; XOR EAX, imm32 || o32 35 id || encoded[5]{35 04 00 00 46}
07a5h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
07a7h add [rdi+4],dl                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 57 04}
07aah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
07ach push 79000004h                          ; PUSH imm32 || 68 id || encoded[5]{68 04 00 00 79}
07b1h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
07b3h add [rdx-64fffffch],cl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 8a 04 00 00 9b}
07b9h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
07bbh add [rsp+rax+4bd0000h],ch               ; ADD r/m8, r8 || 00 /r || encoded[7]{00 ac 04 00 00 bd 04}
07c2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
07c4h (bad)                                   ; <invalid> || <invalid> || encoded[2]{ce 04}
07c6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
07c8h fild word ptr [rax+rax]                 ; FILD m16int || DF /0 || encoded[3]{df 04 00}
07cbh add al,dh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 f0}
07cdh add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
07cfh add [rcx],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 01}
07d1h add eax,5120000h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 00 12 05}
07d6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
07d8h and eax,[rip+5340000h]                  ; AND r32, r/m32 || o32 23 /r || encoded[6]{23 05 00 00 34 05}
07deh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
07e0h add eax,5560000h                        ; ADD EAX, imm32 || o32 05 id || encoded[6]{45 05 00 00 56 05}
07e6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
07e8h add eax,5780000h                        ; ADD EAX, imm32 || o32 05 id || encoded[6]{67 05 00 00 78 05}
07eeh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
07f0h mov [rip+59a0000h],eax                  ; MOV r/m32, r32 || o32 89 /r || encoded[6]{89 05 00 00 9a 05}
07f6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
07f8h stosd                                   ; STOSD || o32 AB || encoded[1]{ab}
07f9h add eax,5bc0000h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 00 bc 05}
07feh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0800h int 5                                   ; INT imm8 || CD ib || encoded[2]{cd 05}
0802h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0804h fiadd word ptr [rip+5ec0000h]           ; FIADD m16int || DE /0 || encoded[6]{de 05 00 00 ec 05}
080ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
080ch cli                                     ; CLI || FA || encoded[1]{fa}
080dh add eax,6080000h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 00 08 06}
0812h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0814h (bad)                                   ; <invalid> || <invalid> || encoded[2]{16 06}
0816h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0818h and al,6                                ; AND AL, imm8 || 24 ib || encoded[2]{24 06}
081ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
081ch xor al,[rsi]                            ; XOR r8, r/m8 || 32 /r || encoded[2]{32 06}
081eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0820h (bad)                                   ; <invalid> || <invalid> || encoded[3]{40 06 00}
0823h add [rsi+6],cl                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 4e 06}
0826h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0828h pop rsp                                 ; POP r64 || 58+ro || encoded[1]{5c}
0829h (bad)                                   ; <invalid> || <invalid> || encoded[2]{06 00}
082bh add [rcx],bl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 19}
082dh (bad)                                   ; <invalid> || <invalid> || encoded[2]{07 04}
082fh add [rdi],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 07}
0831h push rdx                                ; PUSH r64 || 50+ro || encoded[1]{52}
0832h add esi,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 30}
0834h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
0837h jo short 0879h                          ; JO rel8 || 70 cb || encoded[2]{70 40}
------------------------------------------------------------------------------------------------------------------------
; ulong eval<ulong>(TernaryBitLogicKind:byte kind, ulong a, ulong b, ulong c)
; eval_g[64u](TernaryBitLogicKind~8u,64u,64u,64u)[1945] = {57 56 48 83 ec 28 8b f9 48 8b f2 49 8b d0 4d 8b c1 40 0f b6 cf ff c9 83 f9 5e 0f 87 bb 05 00 00 8b c9 48 8d 05 e7 05 00 00 8b 04 88 4c 8d 0d de ff ff ff 49 03 c1 ff e0 49 0b d0 48 0b d6 48 8b c2 48 f7 d0 e9 8a 05 00 00 48 8b c2 48 8b d6 48 0b c2 48 f7 d0 49 23 c0 e9 76 05 00 00 48 8b c2 48 8b d6 48 0b c2 48 f7 d0 e9 65 05 00 00 48 8b c6 49 0b c0 48 f7 d0 48 23 c2 e9 54 05 00 00 49 8b c0 4c 8b c6 49 0b c0 48 f7 d0 e9 43 05 00 00 48 8b c6 48 f7 d0 49 33 d0 48 23 c2 e9 32 05 00 00 48 8b c2 49 8b d0 48 23 c2 4c 8b c6 49 0b c0 48 f7 d0 e9 1b 05 00 00 48 8b c6 48 f7 d0 48 23 c2 49 23 c0 e9 0a 05 00 00 48 8b c2 49 33 c0 48 8b d6 48 0b c2 48 f7 d0 e9 f6 04 00 00 48 8b c6 48 f7 d0 49 23 c0 e9 e8 04 00 00 48 8b c6 48 f7 d0 48 8b ca 48 f7 d1 49 0b c8 48 23 c1 e9 d1 04 00 00 48 8b c6 48 f7 d0 4c 8b c2 49 23 c0 e9 c0 04 00 00 48 8b c6 48 f7 d0 49 8b c8 48 f7 d1 48 0b ca 48 23 c1 e9 a9 04 00 00 48 8b c6 48 f7 d0 49 0b d0 48 23 c2 e9 98 04 00 00 48 8b c6 48 f7 d0 e9 8d 04 00 00 48 8b c2 49 0b c0 48 f7 d0 48 8b d6 48 23 c2 e9 79 04 00 00 49 8b c0 48 0b c2 48 f7 d0 e9 6b 04 00 00 48 8b c2 48 f7 d0 48 8b d6 49 33 d0 48 23 c2 e9 57 04 00 00 48 8b c6 49 23 c0 48 0b c2 48 f7 d0 e9 46 04 00 00 49 8b c0 48 f7 d0 4c 8b c6 49 33 d0 48 23 c2 e9 32 04 00 00 48 8b c6 48 23 c2 49 0b c0 48 f7 d0 e9 21 04 00 00 48 8b c2 49 0b c0 48 f7 d0 49 33 d0 48 23 c6 c4 e2 c8 f2 ca 48 0b c1 e9 05 04 00 00 48 8b c2 49 0b c0 49 23 d0 48 23 c6 c4 e2 c8 f2 ca 48 0b c8 48 8b c1 48 f7 d0 e9 e6 03 00 00 48 8b c2 48 33 c6 48 8b d6 49 33 d0 48 23 c2 e9 d2 03 00 00 48 8b c2 49 33 c0 49 23 d0 48 8b ce 48 23 ca 48 33 c8 48 8b c1 48 f7 d0 e9 b5 03 00 00 48 8b c2 48 23 c6 48 f7 d0 48 8b d6 49 33 d0 48 23 c2 e9 9e 03 00 00 48 8b c6 48 f7 d0 48 f7 d2 49 23 c0 c4 62 b8 f2 c2 49 0b c0 e9 85 03 00 00 49 8b c0 48 23 c6 48 f7 d0 4c 8b c6 49 33 d0 48 23 c2 e9 6e 03 00 00 48 8b c6 48 f7 d0 49 f7 d0 48 23 c2 c4 c2 e8 f2 d0 48 0b c2 e9 55 03 00 00 48 8b c2 49 0b c0 48 8b d6 48 33 c2 e9 44 03 00 00 48 8b ca 49 0b c8 48 89 4c 24 20 48 8d 4c 24 20 e8 04 18 82 ff 48 8b 10 48 8b ce e8 21 48 5a ff 48 8b c8 e8 d1 17 82 ff e9 17 03 00 00 48 8b ce e8 04 f8 ff ff e9 0a 03 00 00 48 8b ce e8 e7 f7 ff ff e9 fd 02 00 00 48 8b ce e8 ca f7 ff ff e9 f0 02 00 00 48 8b ce e8 ad f7 ff ff e9 e3 02 00 00 48 8b ce e8 90 f7 ff ff e9 d6 02 00 00 48 8b ce e8 73 f7 ff ff e9 c9 02 00 00 48 8b ce e8 56 f7 ff ff e9 bc 02 00 00 48 8b ce e8 39 f7 ff ff e9 af 02 00 00 48 8b ce e8 1c f7 ff ff e9 a2 02 00 00 48 8b ce e8 ff f6 ff ff e9 95 02 00 00 48 8b ce e8 e2 f6 ff ff e9 88 02 00 00 48 8b ce e8 c5 f6 ff ff e9 7b 02 00 00 48 8b ce e8 a8 f6 ff ff e9 6e 02 00 00 48 8b ce e8 8b f6 ff ff e9 61 02 00 00 48 8b ce e8 6e f6 ff ff e9 54 02 00 00 48 8b ce e8 51 f6 ff ff e9 47 02 00 00 48 8b ce e8 34 f6 ff ff e9 3a 02 00 00 48 8b ce e8 17 f6 ff ff e9 2d 02 00 00 48 8b ce e8 fa f5 ff ff e9 20 02 00 00 48 8b ce e8 dd f5 ff ff e9 13 02 00 00 48 8b ce e8 c0 f5 ff ff e9 06 02 00 00 48 8b ce e8 a3 f5 ff ff e9 f9 01 00 00 48 8b ce e8 86 f5 ff ff e9 ec 01 00 00 48 8b ce e8 69 f5 ff ff e9 df 01 00 00 48 8b ce e8 4c f5 ff ff e9 d2 01 00 00 48 8b ce e8 2f f5 ff ff e9 c5 01 00 00 48 8b ce e8 12 f5 ff ff e9 b8 01 00 00 48 8b ce e8 f5 f4 ff ff e9 ab 01 00 00 48 8b ce e8 d8 f4 ff ff e9 9e 01 00 00 48 8b ce e8 bb f4 ff ff e9 91 01 00 00 48 8b ce e8 9e f4 ff ff e9 84 01 00 00 48 8b ce e8 81 f4 ff ff e9 77 01 00 00 48 8b ce e8 64 f4 ff ff e9 6a 01 00 00 48 8b ce e8 47 f4 ff ff e9 5d 01 00 00 48 8b ce e8 2a f4 ff ff e9 50 01 00 00 48 8b ce e8 0d f4 ff ff e9 43 01 00 00 48 8b ce e8 f0 f3 ff ff e9 36 01 00 00 48 8b ce e8 d3 f3 ff ff e9 29 01 00 00 48 8b ce e8 b6 f3 ff ff e9 1c 01 00 00 48 8b ce e8 99 f3 ff ff e9 0f 01 00 00 48 8b ce e8 7c f3 ff ff e9 02 01 00 00 48 8b ce e8 5f f3 ff ff e9 f5 00 00 00 48 8b ce e8 42 f3 ff ff e9 e8 00 00 00 48 8b ce e8 25 f3 ff ff e9 db 00 00 00 48 8b ce e8 08 f3 ff ff e9 ce 00 00 00 48 8b ce e8 eb f2 ff ff e9 c1 00 00 00 48 8b ce e8 ce f2 ff ff e9 b4 00 00 00 48 8b ce e8 59 ea ff ff e9 a7 00 00 00 48 8b ce e8 3c ea ff ff e9 9a 00 00 00 48 8b ce e8 1f ea ff ff e9 8d 00 00 00 48 8b ce e8 02 ea ff ff e9 80 00 00 00 48 8b ce e8 e5 e9 ff ff eb 76 48 8b ce e8 cb e9 ff ff eb 6c 48 8b ce e8 b1 e9 ff ff eb 62 48 8b ce e8 97 e9 ff ff eb 58 48 8b ce e8 7d e9 ff ff eb 4e 48 8b ce e8 63 e9 ff ff eb 44 48 8b ce e8 49 e9 ff ff eb 3a 48 8b ce e8 2f e9 ff ff eb 30 48 8b ce e8 15 e9 ff ff eb 26 48 8b ce e8 fb e8 ff ff eb 1c 48 8b ce e8 e1 e8 ff ff eb 12 48 8b ce e8 c7 e8 ff ff eb 08 48 8b ce e8 ad e8 ff ff 90 48 83 c4 28 5e 5f c3 48 b9 40 b0 5b c6 f7 7f 00 00 e8 06 01 d4 5e 48 8b f0 40 0f b6 cf e8 7a e8 ff ff 48 8b d0 48 8b ce e8 3f 24 24 ff 48 8b ce e8 37 4d cb 5e cc 00 00 00 00 00 00 27 00 00 00 38 00 00 00 4c 00 00 00 5d 00 00 00 6e 00 00 00 7f 00 00 00 90 00 00 00 a7 00 00 00 b8 00 00 00 cc 00 00 00 da 00 00 00 f1 00 00 00 02 01 00 00 19 01 00 00 2a 01 00 00 35 01 00 00 49 01 00 00 57 01 00 00 6b 01 00 00 7c 01 00 00 90 01 00 00 a1 01 00 00 bd 01 00 00 dc 01 00 00 f0 01 00 00 0d 02 00 00 24 02 00 00 3d 02 00 00 54 02 00 00 6d 02 00 00 7e 02 00 00 ab 02 00 00 b8 02 00 00 c5 02 00 00 d2 02 00 00 df 02 00 00 ec 02 00 00 f9 02 00 00 06 03 00 00 13 03 00 00 20 03 00 00 2d 03 00 00 3a 03 00 00 47 03 00 00 54 03 00 00 61 03 00 00 6e 03 00 00 7b 03 00 00 88 03 00 00 95 03 00 00 a2 03 00 00 af 03 00 00 bc 03 00 00 c9 03 00 00 d6 03 00 00 e3 03 00 00 f0 03 00 00 fd 03 00 00 0a 04 00 00 17 04 00 00 24 04 00 00 31 04 00 00 3e 04 00 00 4b 04 00 00 58 04 00 00 65 04 00 00 72 04 00 00 7f 04 00 00 8c 04 00 00 99 04 00 00 a6 04 00 00 b3 04 00 00 c0 04 00 00 cd 04 00 00 da 04 00 00 e7 04 00 00 f4 04 00 00 01 05 00 00 0e 05 00 00 1b 05 00 00 28 05 00 00 35 05 00 00 42 05 00 00 4c 05 00 00 56 05 00 00 60 05 00 00 6a 05 00 00 74 05 00 00 7e 05 00 00 88 05 00 00 92 05 00 00 9c 05 00 00 a6 05 00 00 b0 05 00 00 ba 05 00 00 19 06 03 00 06 42 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0006h mov edi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f9}
0008h mov rsi,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f2}
000bh mov rdx,r8                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{49 8b d0}
000eh mov r8,r9                               ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4d 8b c1}
0011h movzx ecx,dil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 cf}
0015h dec ecx                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c9}
0017h cmp ecx,5eh                             ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f9 5e}
001ah ja near ptr 05dbh                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 bb 05 00 00}
0020h mov ecx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c9}
0022h lea rax,[rip+5e7h]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 e7 05 00 00}
0029h mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
002ch lea r9,[rip-22h]                        ; LEA r64, m || REX.W 8D /r || encoded[7]{4c 8d 0d de ff ff ff}
0033h add rax,r9                              ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{49 03 c1}
0036h jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
0038h or rdx,r8                               ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{49 0b d0}
003bh or rdx,rsi                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b d6}
003eh mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
0041h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0044h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 8a 05 00 00}
0049h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
004ch mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
004fh or rax,rdx                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b c2}
0052h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0055h and rax,r8                              ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{49 23 c0}
0058h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 76 05 00 00}
005dh mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
0060h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0063h or rax,rdx                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b c2}
0066h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0069h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 65 05 00 00}
006eh mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0071h or rax,r8                               ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{49 0b c0}
0074h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0077h and rax,rdx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c2}
007ah jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 54 05 00 00}
007fh mov rax,r8                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{49 8b c0}
0082h mov r8,rsi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c6}
0085h or rax,r8                               ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{49 0b c0}
0088h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
008bh jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 43 05 00 00}
0090h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0093h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0096h xor rdx,r8                              ; XOR r64, r/m64 || REX.W 33 /r || encoded[3]{49 33 d0}
0099h and rax,rdx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c2}
009ch jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 32 05 00 00}
00a1h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
00a4h mov rdx,r8                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{49 8b d0}
00a7h and rax,rdx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c2}
00aah mov r8,rsi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c6}
00adh or rax,r8                               ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{49 0b c0}
00b0h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
00b3h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 1b 05 00 00}
00b8h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
00bbh not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
00beh and rax,rdx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c2}
00c1h and rax,r8                              ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{49 23 c0}
00c4h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 0a 05 00 00}
00c9h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
00cch xor rax,r8                              ; XOR r64, r/m64 || REX.W 33 /r || encoded[3]{49 33 c0}
00cfh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
00d2h or rax,rdx                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b c2}
00d5h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
00d8h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f6 04 00 00}
00ddh mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
00e0h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
00e3h and rax,r8                              ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{49 23 c0}
00e6h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 e8 04 00 00}
00ebh mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
00eeh not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
00f1h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
00f4h not rcx                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d1}
00f7h or rcx,r8                               ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{49 0b c8}
00fah and rax,rcx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c1}
00fdh jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 d1 04 00 00}
0102h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0105h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0108h mov r8,rdx                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c2}
010bh and rax,r8                              ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{49 23 c0}
010eh jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 c0 04 00 00}
0113h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0116h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0119h mov rcx,r8                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{49 8b c8}
011ch not rcx                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d1}
011fh or rcx,rdx                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b ca}
0122h and rax,rcx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c1}
0125h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 a9 04 00 00}
012ah mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
012dh not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0130h or rdx,r8                               ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{49 0b d0}
0133h and rax,rdx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c2}
0136h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 98 04 00 00}
013bh mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
013eh not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0141h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 8d 04 00 00}
0146h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
0149h or rax,r8                               ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{49 0b c0}
014ch not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
014fh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0152h and rax,rdx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c2}
0155h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 79 04 00 00}
015ah mov rax,r8                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{49 8b c0}
015dh or rax,rdx                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b c2}
0160h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0163h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 6b 04 00 00}
0168h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
016bh not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
016eh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0171h xor rdx,r8                              ; XOR r64, r/m64 || REX.W 33 /r || encoded[3]{49 33 d0}
0174h and rax,rdx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c2}
0177h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 57 04 00 00}
017ch mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
017fh and rax,r8                              ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{49 23 c0}
0182h or rax,rdx                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b c2}
0185h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0188h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 46 04 00 00}
018dh mov rax,r8                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{49 8b c0}
0190h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0193h mov r8,rsi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c6}
0196h xor rdx,r8                              ; XOR r64, r/m64 || REX.W 33 /r || encoded[3]{49 33 d0}
0199h and rax,rdx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c2}
019ch jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 32 04 00 00}
01a1h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
01a4h and rax,rdx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c2}
01a7h or rax,r8                               ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{49 0b c0}
01aah not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
01adh jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 21 04 00 00}
01b2h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
01b5h or rax,r8                               ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{49 0b c0}
01b8h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
01bbh xor rdx,r8                              ; XOR r64, r/m64 || REX.W 33 /r || encoded[3]{49 33 d0}
01beh and rax,rsi                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c6}
01c1h andn rcx,rsi,rdx                        ; ANDN r64a, r64b, r/m64 || VEX.LZ.0F38.W1 F2 /r || encoded[5]{c4 e2 c8 f2 ca}
01c6h or rax,rcx                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b c1}
01c9h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 05 04 00 00}
01ceh mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
01d1h or rax,r8                               ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{49 0b c0}
01d4h and rdx,r8                              ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{49 23 d0}
01d7h and rax,rsi                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c6}
01dah andn rcx,rsi,rdx                        ; ANDN r64a, r64b, r/m64 || VEX.LZ.0F38.W1 F2 /r || encoded[5]{c4 e2 c8 f2 ca}
01dfh or rcx,rax                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b c8}
01e2h mov rax,rcx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c1}
01e5h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
01e8h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 e6 03 00 00}
01edh mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
01f0h xor rax,rsi                             ; XOR r64, r/m64 || REX.W 33 /r || encoded[3]{48 33 c6}
01f3h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
01f6h xor rdx,r8                              ; XOR r64, r/m64 || REX.W 33 /r || encoded[3]{49 33 d0}
01f9h and rax,rdx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c2}
01fch jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 d2 03 00 00}
0201h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
0204h xor rax,r8                              ; XOR r64, r/m64 || REX.W 33 /r || encoded[3]{49 33 c0}
0207h and rdx,r8                              ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{49 23 d0}
020ah mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
020dh and rcx,rdx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 ca}
0210h xor rcx,rax                             ; XOR r64, r/m64 || REX.W 33 /r || encoded[3]{48 33 c8}
0213h mov rax,rcx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c1}
0216h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0219h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b5 03 00 00}
021eh mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
0221h and rax,rsi                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c6}
0224h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0227h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
022ah xor rdx,r8                              ; XOR r64, r/m64 || REX.W 33 /r || encoded[3]{49 33 d0}
022dh and rax,rdx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c2}
0230h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 9e 03 00 00}
0235h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0238h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
023bh not rdx                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d2}
023eh and rax,r8                              ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{49 23 c0}
0241h andn r8,r8,rdx                          ; ANDN r64a, r64b, r/m64 || VEX.LZ.0F38.W1 F2 /r || encoded[5]{c4 62 b8 f2 c2}
0246h or rax,r8                               ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{49 0b c0}
0249h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 85 03 00 00}
024eh mov rax,r8                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{49 8b c0}
0251h and rax,rsi                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c6}
0254h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0257h mov r8,rsi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c6}
025ah xor rdx,r8                              ; XOR r64, r/m64 || REX.W 33 /r || encoded[3]{49 33 d0}
025dh and rax,rdx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c2}
0260h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 6e 03 00 00}
0265h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0268h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
026bh not r8                                  ; NOT r/m64 || REX.W F7 /2 || encoded[3]{49 f7 d0}
026eh and rax,rdx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c2}
0271h andn rdx,rdx,r8                         ; ANDN r64a, r64b, r/m64 || VEX.LZ.0F38.W1 F2 /r || encoded[5]{c4 c2 e8 f2 d0}
0276h or rax,rdx                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b c2}
0279h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 55 03 00 00}
027eh mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
0281h or rax,r8                               ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{49 0b c0}
0284h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0287h xor rax,rdx                             ; XOR r64, r/m64 || REX.W 33 /r || encoded[3]{48 33 c2}
028ah jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 44 03 00 00}
028fh mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0292h or rcx,r8                               ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{49 0b c8}
0295h mov [rsp+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[5]{48 89 4c 24 20}
029ah lea rcx,[rsp+20h]                       ; LEA r64, m || REX.W 8D /r || encoded[5]{48 8d 4c 24 20}
029fh call 7ff7c6988068h                      ; CALL rel32 || E8 cd || encoded[5]{e8 04 18 82 ff}
02a4h mov rdx,[rax]                           ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b 10}
02a7h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
02aah call 7ff7c670b090h                      ; CALL rel32 || E8 cd || encoded[5]{e8 21 48 5a ff}
02afh mov rcx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c8}
02b2h call 7ff7c6988048h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d1 17 82 ff}
02b7h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 17 03 00 00}
02bch mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
02bfh call 7ff7c7166088h                      ; CALL rel32 || E8 cd || encoded[5]{e8 04 f8 ff ff}
02c4h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 0a 03 00 00}
02c9h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
02cch call 7ff7c7166078h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e7 f7 ff ff}
02d1h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 fd 02 00 00}
02d6h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
02d9h call 7ff7c7166068h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ca f7 ff ff}
02deh jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f0 02 00 00}
02e3h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
02e6h call 7ff7c7166058h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ad f7 ff ff}
02ebh jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 e3 02 00 00}
02f0h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
02f3h call 7ff7c7166048h                      ; CALL rel32 || E8 cd || encoded[5]{e8 90 f7 ff ff}
02f8h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 d6 02 00 00}
02fdh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0300h call 7ff7c7166038h                      ; CALL rel32 || E8 cd || encoded[5]{e8 73 f7 ff ff}
0305h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 c9 02 00 00}
030ah mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
030dh call 7ff7c7166028h                      ; CALL rel32 || E8 cd || encoded[5]{e8 56 f7 ff ff}
0312h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 bc 02 00 00}
0317h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
031ah call 7ff7c7166018h                      ; CALL rel32 || E8 cd || encoded[5]{e8 39 f7 ff ff}
031fh jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 af 02 00 00}
0324h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0327h call 7ff7c7166008h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1c f7 ff ff}
032ch jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 a2 02 00 00}
0331h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0334h call 7ff7c7165ff8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ff f6 ff ff}
0339h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 95 02 00 00}
033eh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0341h call 7ff7c7165fe8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e2 f6 ff ff}
0346h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 88 02 00 00}
034bh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
034eh call 7ff7c7165fd8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c5 f6 ff ff}
0353h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 7b 02 00 00}
0358h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
035bh call 7ff7c7165fc8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a8 f6 ff ff}
0360h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 6e 02 00 00}
0365h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0368h call 7ff7c7165fb8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 8b f6 ff ff}
036dh jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 61 02 00 00}
0372h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0375h call 7ff7c7165fa8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6e f6 ff ff}
037ah jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 54 02 00 00}
037fh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0382h call 7ff7c7165f98h                      ; CALL rel32 || E8 cd || encoded[5]{e8 51 f6 ff ff}
0387h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 47 02 00 00}
038ch mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
038fh call 7ff7c7165f88h                      ; CALL rel32 || E8 cd || encoded[5]{e8 34 f6 ff ff}
0394h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 3a 02 00 00}
0399h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
039ch call 7ff7c7165f78h                      ; CALL rel32 || E8 cd || encoded[5]{e8 17 f6 ff ff}
03a1h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 2d 02 00 00}
03a6h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
03a9h call 7ff7c7165f68h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fa f5 ff ff}
03aeh jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 20 02 00 00}
03b3h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
03b6h call 7ff7c7165f58h                      ; CALL rel32 || E8 cd || encoded[5]{e8 dd f5 ff ff}
03bbh jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 13 02 00 00}
03c0h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
03c3h call 7ff7c7165f48h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c0 f5 ff ff}
03c8h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 06 02 00 00}
03cdh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
03d0h call 7ff7c7165f38h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a3 f5 ff ff}
03d5h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f9 01 00 00}
03dah mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
03ddh call 7ff7c7165f28h                      ; CALL rel32 || E8 cd || encoded[5]{e8 86 f5 ff ff}
03e2h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ec 01 00 00}
03e7h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
03eah call 7ff7c7165f18h                      ; CALL rel32 || E8 cd || encoded[5]{e8 69 f5 ff ff}
03efh jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 df 01 00 00}
03f4h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
03f7h call 7ff7c7165f08h                      ; CALL rel32 || E8 cd || encoded[5]{e8 4c f5 ff ff}
03fch jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 d2 01 00 00}
0401h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0404h call 7ff7c7165ef8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2f f5 ff ff}
0409h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 c5 01 00 00}
040eh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0411h call 7ff7c7165ee8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 12 f5 ff ff}
0416h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b8 01 00 00}
041bh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
041eh call 7ff7c7165ed8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f5 f4 ff ff}
0423h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ab 01 00 00}
0428h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
042bh call 7ff7c7165ec8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d8 f4 ff ff}
0430h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 9e 01 00 00}
0435h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0438h call 7ff7c7165eb8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bb f4 ff ff}
043dh jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 91 01 00 00}
0442h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0445h call 7ff7c7165ea8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9e f4 ff ff}
044ah jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 84 01 00 00}
044fh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0452h call 7ff7c7165e98h                      ; CALL rel32 || E8 cd || encoded[5]{e8 81 f4 ff ff}
0457h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 77 01 00 00}
045ch mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
045fh call 7ff7c7165e88h                      ; CALL rel32 || E8 cd || encoded[5]{e8 64 f4 ff ff}
0464h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 6a 01 00 00}
0469h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
046ch call 7ff7c7165e78h                      ; CALL rel32 || E8 cd || encoded[5]{e8 47 f4 ff ff}
0471h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 5d 01 00 00}
0476h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0479h call 7ff7c7165e68h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2a f4 ff ff}
047eh jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 50 01 00 00}
0483h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0486h call 7ff7c7165e58h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0d f4 ff ff}
048bh jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 43 01 00 00}
0490h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0493h call 7ff7c7165e48h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f0 f3 ff ff}
0498h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 36 01 00 00}
049dh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
04a0h call 7ff7c7165e38h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d3 f3 ff ff}
04a5h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 29 01 00 00}
04aah mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
04adh call 7ff7c7165e28h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b6 f3 ff ff}
04b2h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 1c 01 00 00}
04b7h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
04bah call 7ff7c7165e18h                      ; CALL rel32 || E8 cd || encoded[5]{e8 99 f3 ff ff}
04bfh jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 0f 01 00 00}
04c4h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
04c7h call 7ff7c7165e08h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7c f3 ff ff}
04cch jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 02 01 00 00}
04d1h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
04d4h call 7ff7c7165df8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5f f3 ff ff}
04d9h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f5 00 00 00}
04deh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
04e1h call 7ff7c7165de8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 42 f3 ff ff}
04e6h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 e8 00 00 00}
04ebh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
04eeh call 7ff7c7165dd8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 25 f3 ff ff}
04f3h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 db 00 00 00}
04f8h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
04fbh call 7ff7c7165dc8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 08 f3 ff ff}
0500h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ce 00 00 00}
0505h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0508h call 7ff7c7165db8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 eb f2 ff ff}
050dh jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 c1 00 00 00}
0512h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0515h call 7ff7c7165da8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ce f2 ff ff}
051ah jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b4 00 00 00}
051fh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0522h call 7ff7c7165540h                      ; CALL rel32 || E8 cd || encoded[5]{e8 59 ea ff ff}
0527h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 a7 00 00 00}
052ch mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
052fh call 7ff7c7165530h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3c ea ff ff}
0534h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 9a 00 00 00}
0539h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
053ch call 7ff7c7165520h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1f ea ff ff}
0541h jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 8d 00 00 00}
0546h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0549h call 7ff7c7165510h                      ; CALL rel32 || E8 cd || encoded[5]{e8 02 ea ff ff}
054eh jmp near ptr 05d3h                      ; JMP rel32 || E9 cd || encoded[5]{e9 80 00 00 00}
0553h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0556h call 7ff7c7165500h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e5 e9 ff ff}
055bh jmp short 05d3h                         ; JMP rel8 || EB cb || encoded[2]{eb 76}
055dh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0560h call 7ff7c71654f0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 cb e9 ff ff}
0565h jmp short 05d3h                         ; JMP rel8 || EB cb || encoded[2]{eb 6c}
0567h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
056ah call 7ff7c71654e0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b1 e9 ff ff}
056fh jmp short 05d3h                         ; JMP rel8 || EB cb || encoded[2]{eb 62}
0571h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0574h call 7ff7c71654d0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 97 e9 ff ff}
0579h jmp short 05d3h                         ; JMP rel8 || EB cb || encoded[2]{eb 58}
057bh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
057eh call 7ff7c71654c0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7d e9 ff ff}
0583h jmp short 05d3h                         ; JMP rel8 || EB cb || encoded[2]{eb 4e}
0585h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0588h call 7ff7c71654b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 63 e9 ff ff}
058dh jmp short 05d3h                         ; JMP rel8 || EB cb || encoded[2]{eb 44}
058fh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0592h call 7ff7c71654a0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 49 e9 ff ff}
0597h jmp short 05d3h                         ; JMP rel8 || EB cb || encoded[2]{eb 3a}
0599h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
059ch call 7ff7c7165490h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2f e9 ff ff}
05a1h jmp short 05d3h                         ; JMP rel8 || EB cb || encoded[2]{eb 30}
05a3h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
05a6h call 7ff7c7165480h                      ; CALL rel32 || E8 cd || encoded[5]{e8 15 e9 ff ff}
05abh jmp short 05d3h                         ; JMP rel8 || EB cb || encoded[2]{eb 26}
05adh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
05b0h call 7ff7c7165470h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fb e8 ff ff}
05b5h jmp short 05d3h                         ; JMP rel8 || EB cb || encoded[2]{eb 1c}
05b7h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
05bah call 7ff7c7165460h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e1 e8 ff ff}
05bfh jmp short 05d3h                         ; JMP rel8 || EB cb || encoded[2]{eb 12}
05c1h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
05c4h call 7ff7c7165450h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c7 e8 ff ff}
05c9h jmp short 05d3h                         ; JMP rel8 || EB cb || encoded[2]{eb 08}
05cbh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
05ceh call 7ff7c7165440h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ad e8 ff ff}
05d3h nop                                     ; NOP || o32 90 || encoded[1]{90}
05d4h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
05d8h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
05d9h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
05dah ret                                     ; RET || C3 || encoded[1]{c3}
05dbh mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
05e5h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 06 01 d4 5e}
05eah mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
05edh movzx ecx,dil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 cf}
05f1h call 7ff7c7165430h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7a e8 ff ff}
05f6h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
05f9h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
05fch call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3f 24 24 ff}
0601h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0604h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 37 4d cb 5e}
0609h int 3                                   ; INT3 || CC || encoded[1]{cc}
060ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
060ch add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
060eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0610h (bad)                                   ; <invalid> || <invalid> || encoded[2]{27 00}
0612h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0614h cmp [rax],al                            ; CMP r/m8, r8 || 38 /r || encoded[2]{38 00}
0616h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0618h add [rax],r8b                           ; ADD r/m8, r8 || 00 /r || encoded[3]{4c 00 00}
061bh add [rbp],bl                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 5d 00}
061eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0620h outsb                                   ; OUTSB || 6E || encoded[1]{6e}
0621h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0623h add [rdi],bh                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 7f 00}
0626h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0628h nop                                     ; NOP || o32 90 || encoded[1]{90}
0629h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
062bh add [rdi-48000000h],ah                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 a7 00 00 00 b8}
0631h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0633h add ah,cl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 cc}
0635h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0637h add dl,bl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 da}
0639h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
063bh add cl,dh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 f1}
063dh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
063fh add [rdx],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 02}
0641h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
0643h add [rcx],bl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 19}
0645h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
0647h add [rdx],ch                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 2a}
0649h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
064bh add [rip+49000001h],dh                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 35 01 00 00 49}
0651h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
0653h add [rdi+1],dl                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 57 01}
0656h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0658h imul eax,[rcx],0                        ; IMUL r32, r/m32, imm8 || o32 6B /r ib || encoded[3]{6b 01 00}
065bh add [rcx+rax],bh                        ; ADD r/m8, r8 || 00 /r || encoded[4]{00 7c 01 00}
065fh add [rax-5effffffh],dl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 90 01 00 00 a1}
0665h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
0667h add [rbp-23ffffffh],bh                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 bd 01 00 00 dc}
066dh add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
066fh add al,dh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 f0}
0671h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
0673h add [rip+24000002h],cl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 0d 02 00 00 24}
0679h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
067bh add [rip+54000002h],bh                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 3d 02 00 00 54}
0681h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
0683h add [rbp+2],ch                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 6d 02}
0686h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0688h jle short 068ch                         ; JLE rel8 || 7E cb || encoded[2]{7e 02}
068ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
068ch stosd                                   ; STOSD || o32 AB || encoded[1]{ab}
068dh add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
068fh add [rax-3afffffeh],bh                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 b8 02 00 00 c5}
0695h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
0697h add dl,dl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 d2}
0699h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
069bh add bh,bl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 df}
069dh add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
069fh add ah,ch                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 ec}
06a1h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
06a3h add cl,bh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 f9}
06a5h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
06a7h add [rsi],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 06}
06a9h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
06abh add [rbx],dl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 13}
06adh add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
06afh add [rax],ah                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 20}
06b1h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
06b3h add [rip+3a000003h],ch                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 2d 03 00 00 3a}
06b9h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
06bbh add [rdi+3],al                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 47 03}
06beh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
06c0h push rsp                                ; PUSH r64 || 50+ro || encoded[1]{54}
06c1h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
06c3h add [rcx+3],ah                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 61 03}
06c6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
06c8h outsb                                   ; OUTSB || 6E || encoded[1]{6e}
06c9h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
06cbh add [rbx+3],bh                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 7b 03}
06ceh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
06d0h mov [rbx],al                            ; MOV r/m8, r8 || 88 /r || encoded[2]{88 03}
06d2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
06d4h xchg ebp,eax                            ; XCHG r32, EAX || o32 90+rd || encoded[1]{95}
06d5h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
06d7h add [rdx-50fffffdh],ah                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 a2 03 00 00 af}
06ddh add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
06dfh add [rbx+rax+3c90000h],bh               ; ADD r/m8, r8 || 00 /r || encoded[7]{00 bc 03 00 00 c9 03}
06e6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
06e8h (bad)                                   ; <invalid> || <invalid> || encoded[2]{d6 03}
06eah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
06ech jrcxz 06f1h                             ; JRCXZ rel8 || E3 cb || encoded[2]{e3 03}
06eeh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
06f0h (bad)                                   ; <invalid> || <invalid> || encoded[3]{f0 03 00}
06f3h add ch,bh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 fd}
06f5h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
06f7h add [rdx],cl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 0a}
06f9h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
06fbh add [rdi],dl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 17}
06fdh add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
06ffh add [rsp+rax],ah                        ; ADD r/m8, r8 || 00 /r || encoded[3]{00 24 04}
0702h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0704h xor [rax+rax],eax                       ; XOR r/m32, r32 || o32 31 /r || encoded[3]{31 04 00}
0707h add [rsi],bh                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 3e}
0709h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
070bh add [rbx+4],cl                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 4b 04}
070eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0710h pop rax                                 ; POP r64 || 58+ro || encoded[1]{58}
0711h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
0713h add [rbp+4],ah                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 65 04}
0716h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0718h jb short 071eh                          ; JB rel8 || 72 cb || encoded[2]{72 04}
071ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
071ch jg short 0722h                          ; JG rel8 || 7F cb || encoded[2]{7f 04}
071eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0720h mov [rax+rax],es                        ; MOV r32/m16, Sreg || o32 8C /r || encoded[3]{8c 04 00}
0723h add [rcx-59fffffch],bl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 99 04 00 00 a6}
0729h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
072bh add [rbx-3ffffffch],dh                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 b3 04 00 00 c0}
0731h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
0733h add ch,cl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 cd}
0735h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
0737h add dl,bl                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 da}
0739h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
073bh add bh,ah                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 e7}
073dh add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
073fh add ah,dh                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 f4}
0741h add al,0                                ; ADD AL, imm8 || 04 ib || encoded[2]{04 00}
0743h add [rcx],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 01}
0745h add eax,50e0000h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 00 0e 05}
074ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
074ch sbb eax,[rip+5280000h]                  ; SBB r32, r/m32 || o32 1B /r || encoded[6]{1b 05 00 00 28 05}
0752h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0754h xor eax,42000005h                       ; XOR EAX, imm32 || o32 35 id || encoded[5]{35 05 00 00 42}
0759h add eax,54c0000h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 00 4c 05}
075eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0760h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0761h add eax,5600000h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 00 60 05}
0766h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0768h push 5                                  ; PUSH imm8 || 6A ib || encoded[2]{6a 05}
076ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
076ch je short 0773h                          ; JE rel8 || 74 cb || encoded[2]{74 05}
076eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0770h jle short 0777h                         ; JLE rel8 || 7E cb || encoded[2]{7e 05}
0772h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0774h mov [rip+5920000h],al                   ; MOV r/m8, r8 || 88 /r || encoded[6]{88 05 00 00 92 05}
077ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
077ch pushfq                                  ; PUSHFQ || 9C || encoded[1]{9c}
077dh add eax,5a60000h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 00 a6 05}
0782h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0784h mov al,5                                ; MOV r8, imm8 || B0+rb ib || encoded[2]{b0 05}
0786h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0788h mov edx,19000005h                       ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{ba 05 00 00 19}
078dh (bad)                                   ; <invalid> || <invalid> || encoded[2]{06 03}
078fh add [rsi],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 06}
0791h add spl,[rax+1]                         ; ADD r8, r/m8 || 02 /r || encoded[4]{42 02 60 01}
0795h jo short 0797h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
0797h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; long eval<long>(TernaryBitLogicKind:byte kind, long a, long b, long c)
; eval_g[64i](TernaryBitLogicKind~8u,64i,64i,64i)[2025] = {57 56 53 48 83 ec 30 8b d9 49 8b f0 49 8b f9 0f b6 cb ff c9 83 f9 5e 0f 87 7b 07 00 00 8b c9 48 8d 05 a2 07 00 00 8b 04 88 4c 8d 05 df ff ff ff 49 03 c0 ff e0 48 0b f7 48 0b d6 48 8b c2 48 f7 d0 e9 49 07 00 00 48 8b c6 48 0b c2 48 f7 d0 48 8b cf 48 23 c1 e9 35 07 00 00 48 8b c6 48 0b c2 48 f7 d0 e9 27 07 00 00 48 8b c2 48 8b d7 48 0b c2 48 f7 d0 48 8b ce 48 23 c1 e9 10 07 00 00 48 8b c7 48 0b c2 48 f7 d0 e9 02 07 00 00 48 8b c2 48 f7 d0 48 8b d6 48 8b cf 48 33 ca 48 23 c1 e9 eb 06 00 00 48 8b c6 48 8b cf 48 23 c8 48 0b ca 48 8b c1 48 f7 d0 e9 d4 06 00 00 48 8b c2 48 f7 d0 48 8b d6 48 23 c2 48 8b cf 48 23 c1 e9 bd 06 00 00 48 8b c6 48 8b cf 48 33 c8 48 0b ca 48 8b c1 48 f7 d0 e9 a6 06 00 00 48 8b c2 48 f7 d0 48 8b d7 48 23 c2 e9 95 06 00 00 48 8b da 48 f7 d3 48 8b ce e8 20 fe ff ff 48 0b c7 48 23 c3 e9 7c 06 00 00 48 8b c2 48 f7 d0 48 8b d6 48 23 c2 e9 6b 06 00 00 48 8b da 48 f7 d3 48 8b cf e8 f6 fd ff ff 48 0b c6 48 23 c3 e9 52 06 00 00 48 8b c2 48 f7 d0 48 8b d6 48 0b d7 48 23 c2 e9 3e 06 00 00 48 8b c2 48 f7 d0 e9 33 06 00 00 48 8b c6 48 8b cf 48 0b c8 48 8b c1 48 f7 d0 48 23 c2 e9 1c 06 00 00 48 8b c7 48 8b ce 48 0b c8 48 8b c1 48 f7 d0 e9 08 06 00 00 48 8b c6 48 f7 d0 48 8b cf 48 33 ca 48 23 c1 e9 f4 05 00 00 48 8b c2 48 8b d7 48 23 d0 48 8b ce 48 0b ca 48 8b c1 48 f7 d0 e9 da 05 00 00 48 8b c7 48 f7 d0 48 8b ce 48 33 ca 48 23 c1 e9 c6 05 00 00 48 8b c2 48 8b d6 48 23 d0 48 8b cf 48 0b ca 48 8b c1 48 f7 d0 e9 ac 05 00 00 48 8b c6 48 0b c7 48 f7 d0 48 8b ce 4c 8b c7 49 33 c8 48 23 c2 c4 e2 e8 f2 d1 48 0b c2 e9 8a 05 00 00 48 8b c6 48 0b c7 48 8b ce 4c 8b c7 49 23 c8 48 23 c2 c4 e2 e8 f2 d1 48 0b d0 48 8b c2 48 f7 d0 e9 65 05 00 00 48 8b c6 48 33 c2 48 8b cf 48 33 ca 48 23 c1 e9 51 05 00 00 48 8b de 48 33 df 48 8b ce 48 8b c7 48 23 c8 48 89 4c 24 28 48 8b ca 48 8b 54 24 28 e8 89 75 82 ff 48 8b d0 48 8b cb e8 86 5c ff ff 48 8b c8 e8 1e 69 ff ff e9 18 05 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 03 fb ff ff e9 05 05 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 e0 fa ff ff e9 f2 04 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 bd fa ff ff e9 df 04 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 9a fa ff ff e9 cc 04 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 77 fa ff ff e9 b9 04 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 54 fa ff ff e9 a6 04 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 31 fa ff ff e9 93 04 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 0e fa ff ff e9 80 04 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 eb f9 ff ff e9 6d 04 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 c8 f9 ff ff e9 5a 04 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 a5 f9 ff ff e9 47 04 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 82 f9 ff ff e9 34 04 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 5f f9 ff ff e9 21 04 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 3c f9 ff ff e9 0e 04 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 19 f9 ff ff e9 fb 03 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 f6 f8 ff ff e9 e8 03 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 d3 f8 ff ff e9 d5 03 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 b0 f8 ff ff e9 c2 03 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 8d f8 ff ff e9 af 03 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 6a f8 ff ff e9 9c 03 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 47 f8 ff ff e9 89 03 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 24 f8 ff ff e9 76 03 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 01 f8 ff ff e9 63 03 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 de f7 ff ff e9 50 03 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 bb f7 ff ff e9 3d 03 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 98 f7 ff ff e9 2a 03 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 bd ef ff ff e9 17 03 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 9a ef ff ff e9 04 03 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 77 ef ff ff e9 f1 02 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 54 ef ff ff e9 de 02 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 31 ef ff ff e9 cb 02 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 0e ef ff ff e9 b8 02 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 eb ee ff ff e9 a5 02 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 c8 ee ff ff e9 92 02 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 a5 ee ff ff e9 7f 02 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 82 ee ff ff e9 6c 02 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 5f ee ff ff e9 59 02 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 3c ee ff ff e9 46 02 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 19 ee ff ff e9 33 02 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 f6 ed ff ff e9 20 02 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 d3 ed ff ff e9 0d 02 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 b0 ed ff ff e9 fa 01 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 8d ed ff ff e9 e7 01 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 6a ed ff ff e9 d4 01 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 47 ed ff ff e9 c1 01 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 24 ed ff ff e9 ae 01 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 01 ed ff ff e9 9b 01 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 de ec ff ff e9 88 01 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 bb ec ff ff e9 75 01 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 98 ec ff ff e9 62 01 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 75 ec ff ff e9 4f 01 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 52 ec ff ff e9 3c 01 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 2f ec ff ff e9 29 01 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 0c ec ff ff e9 16 01 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 e9 eb ff ff e9 03 01 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 c6 eb ff ff e9 f0 00 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 a3 eb ff ff e9 dd 00 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 80 eb ff ff e9 ca 00 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 5d eb ff ff e9 b7 00 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 3a eb ff ff e9 a4 00 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 17 eb ff ff e9 91 00 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 f4 ea ff ff e9 7e 00 00 00 48 8b ca 48 8b d6 4c 8b c7 e8 d1 ea ff ff eb 6e 48 8b ca 48 8b d6 4c 8b c7 e8 b1 ea ff ff eb 5e 48 8b ca 48 8b d6 4c 8b c7 e8 91 ea ff ff eb 4e 48 8b ca 48 8b d6 4c 8b c7 e8 71 ea ff ff eb 3e 48 8b ca 48 8b d6 4c 8b c7 e8 51 ea ff ff eb 2e 48 8b ca 48 8b d6 4c 8b c7 e8 31 ea ff ff eb 1e 48 8b ca 48 8b d6 4c 8b c7 e8 11 ea ff ff eb 0e 48 8b ca 48 8b d6 4c 8b c7 e8 f1 e9 ff ff 90 48 83 c4 30 5b 5e 5f c3 48 b9 40 b0 5b c6 f7 7f 00 00 e8 99 f3 d3 5e 48 8b f0 0f b6 cb e8 be e9 ff ff 48 8b d0 48 8b ce e8 d3 16 24 ff 48 8b ce e8 cb 3f cb 5e cc 00 00 26 00 00 00 37 00 00 00 4b 00 00 00 59 00 00 00 70 00 00 00 7e 00 00 00 95 00 00 00 ac 00 00 00 c3}
; TermCode = CTC_RET_Zx3
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0003h sub rsp,30h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 30}
0007h mov ebx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d9}
0009h mov rsi,r8                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{49 8b f0}
000ch mov rdi,r9                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{49 8b f9}
000fh movzx ecx,bl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 cb}
0012h dec ecx                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c9}
0014h cmp ecx,5eh                             ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f9 5e}
0017h ja near ptr 0798h                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 7b 07 00 00}
001dh mov ecx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c9}
001fh lea rax,[rip+7a2h]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 a2 07 00 00}
0026h mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0029h lea r8,[rip-21h]                        ; LEA r64, m || REX.W 8D /r || encoded[7]{4c 8d 05 df ff ff ff}
0030h add rax,r8                              ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{49 03 c0}
0033h jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
0035h or rsi,rdi                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b f7}
0038h or rdx,rsi                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b d6}
003bh mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
003eh not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0041h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 49 07 00 00}
0046h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0049h or rax,rdx                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b c2}
004ch not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
004fh mov rcx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cf}
0052h and rax,rcx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c1}
0055h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 35 07 00 00}
005ah mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
005dh or rax,rdx                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b c2}
0060h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0063h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 27 07 00 00}
0068h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
006bh mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
006eh or rax,rdx                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b c2}
0071h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0074h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0077h and rax,rcx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c1}
007ah jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 10 07 00 00}
007fh mov rax,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c7}
0082h or rax,rdx                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b c2}
0085h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0088h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 02 07 00 00}
008dh mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
0090h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0093h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0096h mov rcx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cf}
0099h xor rcx,rdx                             ; XOR r64, r/m64 || REX.W 33 /r || encoded[3]{48 33 ca}
009ch and rax,rcx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c1}
009fh jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 eb 06 00 00}
00a4h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
00a7h mov rcx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cf}
00aah and rcx,rax                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c8}
00adh or rcx,rdx                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b ca}
00b0h mov rax,rcx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c1}
00b3h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
00b6h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 d4 06 00 00}
00bbh mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
00beh not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
00c1h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
00c4h and rax,rdx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c2}
00c7h mov rcx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cf}
00cah and rax,rcx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c1}
00cdh jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 bd 06 00 00}
00d2h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
00d5h mov rcx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cf}
00d8h xor rcx,rax                             ; XOR r64, r/m64 || REX.W 33 /r || encoded[3]{48 33 c8}
00dbh or rcx,rdx                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b ca}
00deh mov rax,rcx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c1}
00e1h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
00e4h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 a6 06 00 00}
00e9h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
00ech not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
00efh mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
00f2h and rax,rdx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c2}
00f5h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 95 06 00 00}
00fah mov rbx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b da}
00fdh not rbx                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d3}
0100h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0103h call 7ff7c7167098h                      ; CALL rel32 || E8 cd || encoded[5]{e8 20 fe ff ff}
0108h or rax,rdi                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b c7}
010bh and rax,rbx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c3}
010eh jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 7c 06 00 00}
0113h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
0116h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0119h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
011ch and rax,rdx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c2}
011fh jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 6b 06 00 00}
0124h mov rbx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b da}
0127h not rbx                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d3}
012ah mov rcx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cf}
012dh call 7ff7c7167098h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f6 fd ff ff}
0132h or rax,rsi                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b c6}
0135h and rax,rbx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c3}
0138h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 52 06 00 00}
013dh mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
0140h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0143h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0146h or rdx,rdi                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b d7}
0149h and rax,rdx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c2}
014ch jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 3e 06 00 00}
0151h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
0154h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0157h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 33 06 00 00}
015ch mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
015fh mov rcx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cf}
0162h or rcx,rax                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b c8}
0165h mov rax,rcx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c1}
0168h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
016bh and rax,rdx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c2}
016eh jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 1c 06 00 00}
0173h mov rax,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c7}
0176h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0179h or rcx,rax                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b c8}
017ch mov rax,rcx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c1}
017fh not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0182h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 08 06 00 00}
0187h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
018ah not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
018dh mov rcx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cf}
0190h xor rcx,rdx                             ; XOR r64, r/m64 || REX.W 33 /r || encoded[3]{48 33 ca}
0193h and rax,rcx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c1}
0196h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 f4 05 00 00}
019bh mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
019eh mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
01a1h and rdx,rax                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 d0}
01a4h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
01a7h or rcx,rdx                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b ca}
01aah mov rax,rcx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c1}
01adh not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
01b0h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 da 05 00 00}
01b5h mov rax,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c7}
01b8h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
01bbh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
01beh xor rcx,rdx                             ; XOR r64, r/m64 || REX.W 33 /r || encoded[3]{48 33 ca}
01c1h and rax,rcx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c1}
01c4h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 c6 05 00 00}
01c9h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
01cch mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
01cfh and rdx,rax                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 d0}
01d2h mov rcx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cf}
01d5h or rcx,rdx                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b ca}
01d8h mov rax,rcx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c1}
01dbh not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
01deh jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 ac 05 00 00}
01e3h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
01e6h or rax,rdi                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b c7}
01e9h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
01ech mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
01efh mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
01f2h xor rcx,r8                              ; XOR r64, r/m64 || REX.W 33 /r || encoded[3]{49 33 c8}
01f5h and rax,rdx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c2}
01f8h andn rdx,rdx,rcx                        ; ANDN r64a, r64b, r/m64 || VEX.LZ.0F38.W1 F2 /r || encoded[5]{c4 e2 e8 f2 d1}
01fdh or rax,rdx                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b c2}
0200h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 8a 05 00 00}
0205h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0208h or rax,rdi                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b c7}
020bh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
020eh mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
0211h and rcx,r8                              ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{49 23 c8}
0214h and rax,rdx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c2}
0217h andn rdx,rdx,rcx                        ; ANDN r64a, r64b, r/m64 || VEX.LZ.0F38.W1 F2 /r || encoded[5]{c4 e2 e8 f2 d1}
021ch or rdx,rax                              ; OR r64, r/m64 || REX.W 0B /r || encoded[3]{48 0b d0}
021fh mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
0222h not rax                                 ; NOT r/m64 || REX.W F7 /2 || encoded[3]{48 f7 d0}
0225h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 65 05 00 00}
022ah mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
022dh xor rax,rdx                             ; XOR r64, r/m64 || REX.W 33 /r || encoded[3]{48 33 c2}
0230h mov rcx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cf}
0233h xor rcx,rdx                             ; XOR r64, r/m64 || REX.W 33 /r || encoded[3]{48 33 ca}
0236h and rax,rcx                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c1}
0239h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 51 05 00 00}
023eh mov rbx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b de}
0241h xor rbx,rdi                             ; XOR r64, r/m64 || REX.W 33 /r || encoded[3]{48 33 df}
0244h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0247h mov rax,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c7}
024ah and rcx,rax                             ; AND r64, r/m64 || REX.W 23 /r || encoded[3]{48 23 c8}
024dh mov [rsp+28h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[5]{48 89 4c 24 28}
0252h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0255h mov rdx,[rsp+28h]                       ; MOV r64, r/m64 || REX.W 8B /r || encoded[5]{48 8b 54 24 28}
025ah call 7ff7c698e958h                      ; CALL rel32 || E8 cd || encoded[5]{e8 89 75 82 ff}
025fh mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
0262h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0265h call 7ff7c715d060h                      ; CALL rel32 || E8 cd || encoded[5]{e8 86 5c ff ff}
026ah mov rcx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c8}
026dh call 7ff7c715dd00h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1e 69 ff ff}
0272h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 18 05 00 00}
0277h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
027ah mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
027dh mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
0280h call 7ff7c7166ef8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 03 fb ff ff}
0285h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 05 05 00 00}
028ah mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
028dh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0290h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
0293h call 7ff7c7166ee8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e0 fa ff ff}
0298h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 f2 04 00 00}
029dh mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
02a0h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
02a3h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
02a6h call 7ff7c7166ed8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bd fa ff ff}
02abh jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 df 04 00 00}
02b0h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
02b3h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
02b6h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
02b9h call 7ff7c7166ec8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9a fa ff ff}
02beh jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 cc 04 00 00}
02c3h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
02c6h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
02c9h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
02cch call 7ff7c7166eb8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 77 fa ff ff}
02d1h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 b9 04 00 00}
02d6h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
02d9h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
02dch mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
02dfh call 7ff7c7166ea8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 54 fa ff ff}
02e4h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 a6 04 00 00}
02e9h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
02ech mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
02efh mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
02f2h call 7ff7c7166e98h                      ; CALL rel32 || E8 cd || encoded[5]{e8 31 fa ff ff}
02f7h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 93 04 00 00}
02fch mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
02ffh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0302h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
0305h call 7ff7c7166e88h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0e fa ff ff}
030ah jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 80 04 00 00}
030fh mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0312h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0315h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
0318h call 7ff7c7166e78h                      ; CALL rel32 || E8 cd || encoded[5]{e8 eb f9 ff ff}
031dh jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 6d 04 00 00}
0322h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0325h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0328h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
032bh call 7ff7c7166e68h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c8 f9 ff ff}
0330h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 5a 04 00 00}
0335h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0338h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
033bh mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
033eh call 7ff7c7166e58h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a5 f9 ff ff}
0343h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 47 04 00 00}
0348h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
034bh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
034eh mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
0351h call 7ff7c7166e48h                      ; CALL rel32 || E8 cd || encoded[5]{e8 82 f9 ff ff}
0356h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 34 04 00 00}
035bh mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
035eh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0361h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
0364h call 7ff7c7166e38h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5f f9 ff ff}
0369h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 21 04 00 00}
036eh mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0371h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0374h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
0377h call 7ff7c7166e28h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3c f9 ff ff}
037ch jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 0e 04 00 00}
0381h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0384h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0387h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
038ah call 7ff7c7166e18h                      ; CALL rel32 || E8 cd || encoded[5]{e8 19 f9 ff ff}
038fh jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 fb 03 00 00}
0394h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0397h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
039ah mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
039dh call 7ff7c7166e08h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f6 f8 ff ff}
03a2h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 e8 03 00 00}
03a7h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
03aah mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
03adh mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
03b0h call 7ff7c7166df8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d3 f8 ff ff}
03b5h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 d5 03 00 00}
03bah mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
03bdh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
03c0h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
03c3h call 7ff7c7166de8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b0 f8 ff ff}
03c8h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 c2 03 00 00}
03cdh mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
03d0h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
03d3h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
03d6h call 7ff7c7166dd8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 8d f8 ff ff}
03dbh jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 af 03 00 00}
03e0h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
03e3h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
03e6h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
03e9h call 7ff7c7166dc8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6a f8 ff ff}
03eeh jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 9c 03 00 00}
03f3h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
03f6h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
03f9h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
03fch call 7ff7c7166db8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 47 f8 ff ff}
0401h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 89 03 00 00}
0406h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0409h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
040ch mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
040fh call 7ff7c7166da8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 24 f8 ff ff}
0414h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 76 03 00 00}
0419h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
041ch mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
041fh mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
0422h call 7ff7c7166d98h                      ; CALL rel32 || E8 cd || encoded[5]{e8 01 f8 ff ff}
0427h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 63 03 00 00}
042ch mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
042fh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0432h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
0435h call 7ff7c7166d88h                      ; CALL rel32 || E8 cd || encoded[5]{e8 de f7 ff ff}
043ah jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 50 03 00 00}
043fh mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0442h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0445h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
0448h call 7ff7c7166d78h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bb f7 ff ff}
044dh jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 3d 03 00 00}
0452h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0455h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0458h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
045bh call 7ff7c7166d68h                      ; CALL rel32 || E8 cd || encoded[5]{e8 98 f7 ff ff}
0460h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 2a 03 00 00}
0465h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0468h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
046bh mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
046eh call 7ff7c71665a0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bd ef ff ff}
0473h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 17 03 00 00}
0478h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
047bh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
047eh mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
0481h call 7ff7c7166590h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9a ef ff ff}
0486h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 04 03 00 00}
048bh mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
048eh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0491h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
0494h call 7ff7c7166580h                      ; CALL rel32 || E8 cd || encoded[5]{e8 77 ef ff ff}
0499h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 f1 02 00 00}
049eh mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
04a1h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
04a4h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
04a7h call 7ff7c7166570h                      ; CALL rel32 || E8 cd || encoded[5]{e8 54 ef ff ff}
04ach jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 de 02 00 00}
04b1h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
04b4h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
04b7h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
04bah call 7ff7c7166560h                      ; CALL rel32 || E8 cd || encoded[5]{e8 31 ef ff ff}
04bfh jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 cb 02 00 00}
04c4h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
04c7h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
04cah mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
04cdh call 7ff7c7166550h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0e ef ff ff}
04d2h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 b8 02 00 00}
04d7h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
04dah mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
04ddh mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
04e0h call 7ff7c7166540h                      ; CALL rel32 || E8 cd || encoded[5]{e8 eb ee ff ff}
04e5h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 a5 02 00 00}
04eah mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
04edh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
04f0h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
04f3h call 7ff7c7166530h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c8 ee ff ff}
04f8h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 92 02 00 00}
04fdh mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0500h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0503h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
0506h call 7ff7c7166520h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a5 ee ff ff}
050bh jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 7f 02 00 00}
0510h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0513h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0516h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
0519h call 7ff7c7166510h                      ; CALL rel32 || E8 cd || encoded[5]{e8 82 ee ff ff}
051eh jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 6c 02 00 00}
0523h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0526h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0529h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
052ch call 7ff7c7166500h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5f ee ff ff}
0531h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 59 02 00 00}
0536h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0539h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
053ch mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
053fh call 7ff7c71664f0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3c ee ff ff}
0544h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 46 02 00 00}
0549h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
054ch mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
054fh mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
0552h call 7ff7c71664e0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 19 ee ff ff}
0557h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 33 02 00 00}
055ch mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
055fh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0562h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
0565h call 7ff7c71664d0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f6 ed ff ff}
056ah jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 20 02 00 00}
056fh mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0572h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0575h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
0578h call 7ff7c71664c0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d3 ed ff ff}
057dh jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 0d 02 00 00}
0582h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0585h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0588h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
058bh call 7ff7c71664b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b0 ed ff ff}
0590h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 fa 01 00 00}
0595h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0598h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
059bh mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
059eh call 7ff7c71664a0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 8d ed ff ff}
05a3h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 e7 01 00 00}
05a8h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
05abh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
05aeh mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
05b1h call 7ff7c7166490h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6a ed ff ff}
05b6h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 d4 01 00 00}
05bbh mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
05beh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
05c1h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
05c4h call 7ff7c7166480h                      ; CALL rel32 || E8 cd || encoded[5]{e8 47 ed ff ff}
05c9h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 c1 01 00 00}
05ceh mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
05d1h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
05d4h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
05d7h call 7ff7c7166470h                      ; CALL rel32 || E8 cd || encoded[5]{e8 24 ed ff ff}
05dch jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 ae 01 00 00}
05e1h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
05e4h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
05e7h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
05eah call 7ff7c7166460h                      ; CALL rel32 || E8 cd || encoded[5]{e8 01 ed ff ff}
05efh jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 9b 01 00 00}
05f4h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
05f7h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
05fah mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
05fdh call 7ff7c7166450h                      ; CALL rel32 || E8 cd || encoded[5]{e8 de ec ff ff}
0602h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 88 01 00 00}
0607h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
060ah mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
060dh mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
0610h call 7ff7c7166440h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bb ec ff ff}
0615h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 75 01 00 00}
061ah mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
061dh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0620h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
0623h call 7ff7c7166430h                      ; CALL rel32 || E8 cd || encoded[5]{e8 98 ec ff ff}
0628h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 62 01 00 00}
062dh mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0630h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0633h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
0636h call 7ff7c7166420h                      ; CALL rel32 || E8 cd || encoded[5]{e8 75 ec ff ff}
063bh jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 4f 01 00 00}
0640h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0643h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0646h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
0649h call 7ff7c7166410h                      ; CALL rel32 || E8 cd || encoded[5]{e8 52 ec ff ff}
064eh jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 3c 01 00 00}
0653h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0656h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0659h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
065ch call 7ff7c7166400h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2f ec ff ff}
0661h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 29 01 00 00}
0666h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0669h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
066ch mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
066fh call 7ff7c71663f0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0c ec ff ff}
0674h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 16 01 00 00}
0679h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
067ch mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
067fh mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
0682h call 7ff7c71663e0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e9 eb ff ff}
0687h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 03 01 00 00}
068ch mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
068fh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0692h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
0695h call 7ff7c71663d0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c6 eb ff ff}
069ah jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 f0 00 00 00}
069fh mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
06a2h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
06a5h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
06a8h call 7ff7c71663c0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a3 eb ff ff}
06adh jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 dd 00 00 00}
06b2h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
06b5h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
06b8h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
06bbh call 7ff7c71663b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 80 eb ff ff}
06c0h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 ca 00 00 00}
06c5h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
06c8h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
06cbh mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
06ceh call 7ff7c71663a0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5d eb ff ff}
06d3h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 b7 00 00 00}
06d8h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
06dbh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
06deh mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
06e1h call 7ff7c7166390h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3a eb ff ff}
06e6h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 a4 00 00 00}
06ebh mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
06eeh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
06f1h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
06f4h call 7ff7c7166380h                      ; CALL rel32 || E8 cd || encoded[5]{e8 17 eb ff ff}
06f9h jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 91 00 00 00}
06feh mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0701h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0704h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
0707h call 7ff7c7166370h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f4 ea ff ff}
070ch jmp near ptr 078fh                      ; JMP rel32 || E9 cd || encoded[5]{e9 7e 00 00 00}
0711h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0714h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0717h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
071ah call 7ff7c7166360h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d1 ea ff ff}
071fh jmp short 078fh                         ; JMP rel8 || EB cb || encoded[2]{eb 6e}
0721h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0724h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0727h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
072ah call 7ff7c7166350h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b1 ea ff ff}
072fh jmp short 078fh                         ; JMP rel8 || EB cb || encoded[2]{eb 5e}
0731h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0734h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0737h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
073ah call 7ff7c7166340h                      ; CALL rel32 || E8 cd || encoded[5]{e8 91 ea ff ff}
073fh jmp short 078fh                         ; JMP rel8 || EB cb || encoded[2]{eb 4e}
0741h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0744h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0747h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
074ah call 7ff7c7166330h                      ; CALL rel32 || E8 cd || encoded[5]{e8 71 ea ff ff}
074fh jmp short 078fh                         ; JMP rel8 || EB cb || encoded[2]{eb 3e}
0751h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0754h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0757h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
075ah call 7ff7c7166320h                      ; CALL rel32 || E8 cd || encoded[5]{e8 51 ea ff ff}
075fh jmp short 078fh                         ; JMP rel8 || EB cb || encoded[2]{eb 2e}
0761h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0764h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0767h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
076ah call 7ff7c7166310h                      ; CALL rel32 || E8 cd || encoded[5]{e8 31 ea ff ff}
076fh jmp short 078fh                         ; JMP rel8 || EB cb || encoded[2]{eb 1e}
0771h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0774h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0777h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
077ah call 7ff7c7166300h                      ; CALL rel32 || E8 cd || encoded[5]{e8 11 ea ff ff}
077fh jmp short 078fh                         ; JMP rel8 || EB cb || encoded[2]{eb 0e}
0781h mov rcx,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ca}
0784h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0787h mov r8,rdi                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c7}
078ah call 7ff7c71662f0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f1 e9 ff ff}
078fh nop                                     ; NOP || o32 90 || encoded[1]{90}
0790h add rsp,30h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 30}
0794h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0795h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0796h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0797h ret                                     ; RET || C3 || encoded[1]{c3}
0798h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
07a2h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 99 f3 d3 5e}
07a7h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
07aah movzx ecx,bl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 cb}
07adh call 7ff7c71662e0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 be e9 ff ff}
07b2h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
07b5h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
07b8h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d3 16 24 ff}
07bdh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
07c0h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 cb 3f cb 5e}
07c5h int 3                                   ; INT3 || CC || encoded[1]{cc}
07c6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
07c8h add es:[rax],al                         ; ADD r/m8, r8 || 00 /r || encoded[3]{26 00 00}
07cbh add [rdi],dh                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 37}
07cdh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
07cfh add [rbx],cl                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 4b 00}
07d2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
07d4h pop rcx                                 ; POP r64 || 58+ro || encoded[1]{59}
07d5h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
07d7h add [rax],dh                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 70 00}
07dah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
07dch jle short 07deh                         ; JLE rel8 || 7E cb || encoded[2]{7e 00}
07deh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
07e0h xchg ebp,eax                            ; XCHG r32, EAX || o32 90+rd || encoded[1]{95}
07e1h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
07e3h (bad)                                   ; <invalid> || <invalid> || encoded[6]{00 ac 00 00 00 c3}
------------------------------------------------------------------------------------------------------------------------
; byte eval<byte>(ShiftOpKind:byte kind, byte a, byte count)
; eval_g[8u](ShiftOpKind~8u,8u,8u)[353] = {57 56 55 53 48 83 ec 28 8b f1 44 0f b6 ce 41 ff c9 41 83 f9 03 77 1a 45 8b d1 48 8d 0d 1f 01 00 00 42 8b 0c 91 48 8d 05 de ff ff ff 48 03 c8 ff e1 40 80 fe 08 0f 85 7f 00 00 00 0f b6 c2 45 0f b6 d0 41 8b ca 44 8b c8 41 d3 f9 41 8b ca f7 d9 83 c1 08 d3 e0 41 0b c1 0f b6 c0 48 83 c4 28 5b 5d 5e 5f c3 0f b6 c2 45 0f b6 d0 41 8b ca d3 e0 0f b6 c0 48 83 c4 28 5b 5d 5e 5f c3 0f b6 c2 45 0f b6 d0 41 8b ca d3 e8 0f b6 c0 48 83 c4 28 5b 5d 5e 5f c3 0f b6 c2 45 0f b6 d0 41 8b ca 8b d0 d3 e2 41 8b ca f7 d9 83 c1 08 d3 f8 0b c2 0f b6 c0 48 83 c4 28 5b 5d 5e 5f c3 48 b9 e0 5a 3f c7 f7 7f 00 00 e8 07 ed d3 5e 48 8b f8 40 88 77 08 48 b9 58 77 35 c6 f7 7f 00 00 e8 31 70 ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 df ec d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 c8 85 e6 5e 48 8b e8 48 8b ce e8 9d ac 23 ff 8b c8 e8 fe 83 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 30 c1 21 ff 48 8b d0 48 8b cb e8 ed 0f 24 ff 48 8b cb e8 e5 38 cb 5e cc 00 00 00 00 5a 00 00 00 72 00 00 00 b0 00 00 00 8a 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx r9d,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{44 0f b6 ce}
000eh dec r9d                                 ; DEC r/m32 || o32 FF /1 || encoded[3]{41 ff c9}
0011h cmp r9d,3                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[4]{41 83 f9 03}
0015h ja short 0031h                          ; JA rel8 || 77 cb || encoded[2]{77 1a}
0017h mov r10d,r9d                            ; MOV r32, r/m32 || o32 8B /r || encoded[3]{45 8b d1}
001ah lea rcx,[rip+11fh]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 0d 1f 01 00 00}
0021h mov ecx,[rcx+r10*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[4]{42 8b 0c 91}
0025h lea rax,[rip-22h]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 de ff ff ff}
002ch add rcx,rax                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 c8}
002fh jmp rcx                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e1}
0031h cmp sil,8                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 08}
0035h jne near ptr 00bah                      ; JNE rel32 || 0F 85 cd || encoded[6]{0f 85 7f 00 00 00}
003bh movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
003eh movzx r10d,r8b                          ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 d0}
0042h mov ecx,r10d                            ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b ca}
0045h mov r9d,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c8}
0048h sar r9d,cl                              ; SAR r/m32, CL || o32 D3 /7 || encoded[3]{41 d3 f9}
004bh mov ecx,r10d                            ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b ca}
004eh neg ecx                                 ; NEG r/m32 || o32 F7 /3 || encoded[2]{f7 d9}
0050h add ecx,8                               ; ADD r/m32, imm8 || o32 83 /0 ib || encoded[3]{83 c1 08}
0053h shl eax,cl                              ; SHL r/m32, CL || o32 D3 /4 || encoded[2]{d3 e0}
0055h or eax,r9d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b c1}
0058h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
005bh add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
005fh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0060h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0061h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0062h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0063h ret                                     ; RET || C3 || encoded[1]{c3}
0064h movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
0067h movzx r10d,r8b                          ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 d0}
006bh mov ecx,r10d                            ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b ca}
006eh shl eax,cl                              ; SHL r/m32, CL || o32 D3 /4 || encoded[2]{d3 e0}
0070h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
0073h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0077h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0078h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0079h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
007ah pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
007bh ret                                     ; RET || C3 || encoded[1]{c3}
007ch movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
007fh movzx r10d,r8b                          ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 d0}
0083h mov ecx,r10d                            ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b ca}
0086h shr eax,cl                              ; SHR r/m32, CL || o32 D3 /5 || encoded[2]{d3 e8}
0088h movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
008bh add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
008fh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0090h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0091h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0092h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0093h ret                                     ; RET || C3 || encoded[1]{c3}
0094h movzx eax,dl                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c2}
0097h movzx r10d,r8b                          ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 d0}
009bh mov ecx,r10d                            ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b ca}
009eh mov edx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d0}
00a0h shl edx,cl                              ; SHL r/m32, CL || o32 D3 /4 || encoded[2]{d3 e2}
00a2h mov ecx,r10d                            ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b ca}
00a5h neg ecx                                 ; NEG r/m32 || o32 F7 /3 || encoded[2]{f7 d9}
00a7h add ecx,8                               ; ADD r/m32, imm8 || o32 83 /0 ib || encoded[3]{83 c1 08}
00aah sar eax,cl                              ; SAR r/m32, CL || o32 D3 /7 || encoded[2]{d3 f8}
00ach or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
00aeh movzx eax,al                            ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[3]{0f b6 c0}
00b1h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
00b5h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
00b6h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
00b7h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
00b8h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
00b9h ret                                     ; RET || C3 || encoded[1]{c3}
00bah mov rcx,7ff7c73f5ae0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e0 5a 3f c7 f7 7f 00 00}
00c4h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 07 ed d3 5e}
00c9h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
00cch mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
00d0h mov rcx,7ff7c6357758h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 58 77 35 c6 f7 7f 00 00}
00dah call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 31 70 ce 5e}
00dfh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00e2h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
00ech call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 df ec d3 5e}
00f1h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
00f4h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
00f9h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0103h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c8 85 e6 5e}
0108h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
010bh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
010eh call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9d ac 23 ff}
0113h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0115h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fe 83 23 ff}
011ah mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
011dh mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0120h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0123h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 30 c1 21 ff}
0128h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
012bh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
012eh call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ed 0f 24 ff}
0133h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0136h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e5 38 cb 5e}
013bh int 3                                   ; INT3 || CC || encoded[1]{cc}
013ch add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
013eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0140h pop rdx                                 ; POP r64 || 58+ro || encoded[1]{5a}
0141h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0143h add [rdx],dh                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 72 00}
0146h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0148h mov al,0                                ; MOV r8, imm8 || B0+rb ib || encoded[2]{b0 00}
014ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
014ch mov al,[rax]                            ; MOV r8, r/m8 || 8A /r || encoded[2]{8a 00}
014eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0150h sbb [rax],ecx                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 08}
0152h add eax,4420800h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 08 42 04}
0157h xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0159h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
015ah add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
015dh jo short 015fh                          ; JO rel8 || 70 cb || encoded[2]{70 00}
015fh (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; ushort eval<ushort>(ShiftOpKind:byte kind, ushort a, byte count)
; eval_g[16u](ShiftOpKind~8u,16u,8u)[353] = {57 56 55 53 48 83 ec 28 8b f1 44 0f b6 ce 41 ff c9 41 83 f9 03 77 1a 45 8b d1 48 8d 0d 1f 01 00 00 42 8b 0c 91 48 8d 05 de ff ff ff 48 03 c8 ff e1 40 80 fe 08 0f 85 7f 00 00 00 0f b7 c2 45 0f b6 d0 41 8b ca 44 8b c8 41 d3 f9 41 8b ca f7 d9 83 c1 10 d3 e0 41 0b c1 0f b7 c0 48 83 c4 28 5b 5d 5e 5f c3 0f b7 c2 45 0f b6 d0 41 8b ca d3 e0 0f b7 c0 48 83 c4 28 5b 5d 5e 5f c3 0f b7 c2 45 0f b6 d0 41 8b ca d3 e8 0f b7 c0 48 83 c4 28 5b 5d 5e 5f c3 0f b7 c2 45 0f b6 d0 41 8b ca 8b d0 d3 e2 41 8b ca f7 d9 83 c1 10 d3 f8 0b c2 0f b7 c0 48 83 c4 28 5b 5d 5e 5f c3 48 b9 e0 5a 3f c7 f7 7f 00 00 e8 97 eb d3 5e 48 8b f8 40 88 77 08 48 b9 38 87 35 c6 f7 7f 00 00 e8 c1 6e ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 6f eb d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 58 84 e6 5e 48 8b e8 48 8b ce e8 2d ab 23 ff 8b c8 e8 8e 82 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 c0 bf 21 ff 48 8b d0 48 8b cb e8 7d 0e 24 ff 48 8b cb e8 75 37 cb 5e cc 00 00 00 00 5a 00 00 00 72 00 00 00 b0 00 00 00 8a 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx r9d,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{44 0f b6 ce}
000eh dec r9d                                 ; DEC r/m32 || o32 FF /1 || encoded[3]{41 ff c9}
0011h cmp r9d,3                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[4]{41 83 f9 03}
0015h ja short 0031h                          ; JA rel8 || 77 cb || encoded[2]{77 1a}
0017h mov r10d,r9d                            ; MOV r32, r/m32 || o32 8B /r || encoded[3]{45 8b d1}
001ah lea rcx,[rip+11fh]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 0d 1f 01 00 00}
0021h mov ecx,[rcx+r10*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[4]{42 8b 0c 91}
0025h lea rax,[rip-22h]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 de ff ff ff}
002ch add rcx,rax                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 c8}
002fh jmp rcx                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e1}
0031h cmp sil,8                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 08}
0035h jne near ptr 00bah                      ; JNE rel32 || 0F 85 cd || encoded[6]{0f 85 7f 00 00 00}
003bh movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
003eh movzx r10d,r8b                          ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 d0}
0042h mov ecx,r10d                            ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b ca}
0045h mov r9d,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{44 8b c8}
0048h sar r9d,cl                              ; SAR r/m32, CL || o32 D3 /7 || encoded[3]{41 d3 f9}
004bh mov ecx,r10d                            ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b ca}
004eh neg ecx                                 ; NEG r/m32 || o32 F7 /3 || encoded[2]{f7 d9}
0050h add ecx,10h                             ; ADD r/m32, imm8 || o32 83 /0 ib || encoded[3]{83 c1 10}
0053h shl eax,cl                              ; SHL r/m32, CL || o32 D3 /4 || encoded[2]{d3 e0}
0055h or eax,r9d                              ; OR r32, r/m32 || o32 0B /r || encoded[3]{41 0b c1}
0058h movzx eax,ax                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c0}
005bh add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
005fh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0060h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0061h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0062h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0063h ret                                     ; RET || C3 || encoded[1]{c3}
0064h movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
0067h movzx r10d,r8b                          ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 d0}
006bh mov ecx,r10d                            ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b ca}
006eh shl eax,cl                              ; SHL r/m32, CL || o32 D3 /4 || encoded[2]{d3 e0}
0070h movzx eax,ax                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c0}
0073h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0077h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0078h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0079h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
007ah pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
007bh ret                                     ; RET || C3 || encoded[1]{c3}
007ch movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
007fh movzx r10d,r8b                          ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 d0}
0083h mov ecx,r10d                            ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b ca}
0086h shr eax,cl                              ; SHR r/m32, CL || o32 D3 /5 || encoded[2]{d3 e8}
0088h movzx eax,ax                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c0}
008bh add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
008fh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0090h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0091h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0092h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0093h ret                                     ; RET || C3 || encoded[1]{c3}
0094h movzx eax,dx                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c2}
0097h movzx r10d,r8b                          ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{45 0f b6 d0}
009bh mov ecx,r10d                            ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b ca}
009eh mov edx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b d0}
00a0h shl edx,cl                              ; SHL r/m32, CL || o32 D3 /4 || encoded[2]{d3 e2}
00a2h mov ecx,r10d                            ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b ca}
00a5h neg ecx                                 ; NEG r/m32 || o32 F7 /3 || encoded[2]{f7 d9}
00a7h add ecx,10h                             ; ADD r/m32, imm8 || o32 83 /0 ib || encoded[3]{83 c1 10}
00aah sar eax,cl                              ; SAR r/m32, CL || o32 D3 /7 || encoded[2]{d3 f8}
00ach or eax,edx                              ; OR r32, r/m32 || o32 0B /r || encoded[2]{0b c2}
00aeh movzx eax,ax                            ; MOVZX r32, r/m16 || o32 0F B7 /r || encoded[3]{0f b7 c0}
00b1h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
00b5h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
00b6h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
00b7h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
00b8h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
00b9h ret                                     ; RET || C3 || encoded[1]{c3}
00bah mov rcx,7ff7c73f5ae0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e0 5a 3f c7 f7 7f 00 00}
00c4h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 97 eb d3 5e}
00c9h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
00cch mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
00d0h mov rcx,7ff7c6358738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 38 87 35 c6 f7 7f 00 00}
00dah call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c1 6e ce 5e}
00dfh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00e2h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
00ech call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6f eb d3 5e}
00f1h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
00f4h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
00f9h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0103h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 58 84 e6 5e}
0108h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
010bh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
010eh call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2d ab 23 ff}
0113h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0115h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 8e 82 23 ff}
011ah mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
011dh mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0120h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0123h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c0 bf 21 ff}
0128h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
012bh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
012eh call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7d 0e 24 ff}
0133h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0136h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 75 37 cb 5e}
013bh int 3                                   ; INT3 || CC || encoded[1]{cc}
013ch add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
013eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0140h pop rdx                                 ; POP r64 || 58+ro || encoded[1]{5a}
0141h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0143h add [rdx],dh                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 72 00}
0146h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0148h mov al,0                                ; MOV r8, imm8 || B0+rb ib || encoded[2]{b0 00}
014ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
014ch mov al,[rax]                            ; MOV r8, r/m8 || 8A /r || encoded[2]{8a 00}
014eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0150h sbb [rax],ecx                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 08}
0152h add eax,4420800h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 08 42 04}
0157h xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0159h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
015ah add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
015dh jo short 015fh                          ; JO rel8 || 70 cb || encoded[2]{70 00}
015fh (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; uint eval<uint>(ShiftOpKind:byte kind, uint a, byte count)
; eval_g[32u](ShiftOpKind~8u,32u,8u)[289] = {57 56 55 53 48 83 ec 28 8b f1 44 0f b6 ce 41 ff c9 41 83 f9 03 77 19 41 8b c9 48 8d 05 df 00 00 00 8b 04 88 4c 8d 0d df ff ff ff 49 03 c1 ff e0 40 80 fe 08 75 44 41 0f b6 c8 d3 ca 8b c2 48 83 c4 28 5b 5d 5e 5f c3 41 0f b6 c8 8b c2 d3 e0 48 83 c4 28 5b 5d 5e 5f c3 41 0f b6 c8 8b c2 d3 e8 48 83 c4 28 5b 5d 5e 5f c3 41 0f b6 c8 8b c2 d3 c0 48 83 c4 28 5b 5d 5e 5f c3 48 b9 e0 5a 3f c7 f7 7f 00 00 e8 67 ea d3 5e 48 8b f8 40 88 77 08 48 b9 d8 96 35 c6 f7 7f 00 00 e8 91 6d ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 3f ea d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 28 83 e6 5e 48 8b e8 48 8b ce e8 fd a9 23 ff 8b c8 e8 5e 81 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 90 be 21 ff 48 8b d0 48 8b cb e8 4d 0d 24 ff 48 8b cb e8 45 36 cb 5e cc 00 00 00 00 3d 00 00 00 4e 00 00 00 70 00 00 00 5f 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx r9d,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{44 0f b6 ce}
000eh dec r9d                                 ; DEC r/m32 || o32 FF /1 || encoded[3]{41 ff c9}
0011h cmp r9d,3                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[4]{41 83 f9 03}
0015h ja short 0030h                          ; JA rel8 || 77 cb || encoded[2]{77 19}
0017h mov ecx,r9d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b c9}
001ah lea rax,[rip+0dfh]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 df 00 00 00}
0021h mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0024h lea r9,[rip-21h]                        ; LEA r64, m || REX.W 8D /r || encoded[7]{4c 8d 0d df ff ff ff}
002bh add rax,r9                              ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{49 03 c1}
002eh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
0030h cmp sil,8                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 08}
0034h jne short 007ah                         ; JNE rel8 || 75 cb || encoded[2]{75 44}
0036h movzx ecx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c8}
003ah ror edx,cl                              ; ROR r/m32, CL || o32 D3 /1 || encoded[2]{d3 ca}
003ch mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
003eh add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0042h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0043h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0044h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0045h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0046h ret                                     ; RET || C3 || encoded[1]{c3}
0047h movzx ecx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c8}
004bh mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
004dh shl eax,cl                              ; SHL r/m32, CL || o32 D3 /4 || encoded[2]{d3 e0}
004fh add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0053h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0054h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0055h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0056h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0057h ret                                     ; RET || C3 || encoded[1]{c3}
0058h movzx ecx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c8}
005ch mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
005eh shr eax,cl                              ; SHR r/m32, CL || o32 D3 /5 || encoded[2]{d3 e8}
0060h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0064h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0065h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0066h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0067h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0068h ret                                     ; RET || C3 || encoded[1]{c3}
0069h movzx ecx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c8}
006dh mov eax,edx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c2}
006fh rol eax,cl                              ; ROL r/m32, CL || o32 D3 /0 || encoded[2]{d3 c0}
0071h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0075h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0076h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0077h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0078h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0079h ret                                     ; RET || C3 || encoded[1]{c3}
007ah mov rcx,7ff7c73f5ae0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e0 5a 3f c7 f7 7f 00 00}
0084h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 67 ea d3 5e}
0089h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
008ch mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0090h mov rcx,7ff7c63596d8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d8 96 35 c6 f7 7f 00 00}
009ah call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 91 6d ce 5e}
009fh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00a2h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
00ach call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3f ea d3 5e}
00b1h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
00b4h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
00b9h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
00c3h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 28 83 e6 5e}
00c8h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
00cbh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
00ceh call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fd a9 23 ff}
00d3h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
00d5h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5e 81 23 ff}
00dah mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
00ddh mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
00e0h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
00e3h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 90 be 21 ff}
00e8h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
00ebh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
00eeh call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 4d 0d 24 ff}
00f3h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
00f6h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 45 36 cb 5e}
00fbh int 3                                   ; INT3 || CC || encoded[1]{cc}
00fch add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
00feh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0100h cmp eax,4e000000h                       ; CMP EAX, imm32 || o32 3D id || encoded[5]{3d 00 00 00 4e}
0105h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0107h add [rax],dh                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 70 00}
010ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
010ch pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
010dh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
010fh add [rcx],bl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 19}
0111h or [rip+4420800h],al                    ; OR r/m8, r8 || 08 /r || encoded[6]{08 05 00 08 42 04}
0117h xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0119h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
011ah add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
011dh jo short 011fh                          ; JO rel8 || 70 cb || encoded[2]{70 00}
011fh (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; ulong eval<ulong>(ShiftOpKind:byte kind, ulong a, byte count)
; eval_g[64u](ShiftOpKind~8u,64u,8u)[297] = {57 56 55 53 48 83 ec 28 8b f1 44 0f b6 ce 41 ff c9 41 83 f9 03 77 19 41 8b c9 48 8d 05 e7 00 00 00 8b 04 88 4c 8d 0d df ff ff ff 49 03 c1 ff e0 40 80 fe 08 75 4c 41 0f b6 c8 48 d3 ca 48 8b c2 48 83 c4 28 5b 5d 5e 5f c3 41 0f b6 c8 48 8b c2 48 d3 e0 48 83 c4 28 5b 5d 5e 5f c3 41 0f b6 c8 48 8b c2 48 d3 e8 48 83 c4 28 5b 5d 5e 5f c3 41 0f b6 c8 48 8b c2 48 d3 c0 48 83 c4 28 5b 5d 5e 5f c3 48 b9 e0 5a 3f c7 f7 7f 00 00 e8 2f e9 d3 5e 48 8b f8 40 88 77 08 48 b9 78 a6 35 c6 f7 7f 00 00 e8 59 6c ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 07 e9 d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 f0 81 e6 5e 48 8b e8 48 8b ce e8 c5 a8 23 ff 8b c8 e8 26 80 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 58 bd 21 ff 48 8b d0 48 8b cb e8 15 0c 24 ff 48 8b cb e8 0d 35 cb 5e cc 00 00 00 00 3f 00 00 00 52 00 00 00 78 00 00 00 65 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx r9d,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{44 0f b6 ce}
000eh dec r9d                                 ; DEC r/m32 || o32 FF /1 || encoded[3]{41 ff c9}
0011h cmp r9d,3                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[4]{41 83 f9 03}
0015h ja short 0030h                          ; JA rel8 || 77 cb || encoded[2]{77 19}
0017h mov ecx,r9d                             ; MOV r32, r/m32 || o32 8B /r || encoded[3]{41 8b c9}
001ah lea rax,[rip+0e7h]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 e7 00 00 00}
0021h mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0024h lea r9,[rip-21h]                        ; LEA r64, m || REX.W 8D /r || encoded[7]{4c 8d 0d df ff ff ff}
002bh add rax,r9                              ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{49 03 c1}
002eh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
0030h cmp sil,8                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 08}
0034h jne short 0082h                         ; JNE rel8 || 75 cb || encoded[2]{75 4c}
0036h movzx ecx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c8}
003ah ror rdx,cl                              ; ROR r/m64, CL || REX.W D3 /1 || encoded[3]{48 d3 ca}
003dh mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
0040h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0044h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0045h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0046h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0047h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0048h ret                                     ; RET || C3 || encoded[1]{c3}
0049h movzx ecx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c8}
004dh mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
0050h shl rax,cl                              ; SHL r/m64, CL || REX.W D3 /4 || encoded[3]{48 d3 e0}
0053h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0057h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0058h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0059h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
005ah pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
005bh ret                                     ; RET || C3 || encoded[1]{c3}
005ch movzx ecx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c8}
0060h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
0063h shr rax,cl                              ; SHR r/m64, CL || REX.W D3 /5 || encoded[3]{48 d3 e8}
0066h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
006ah pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
006bh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
006ch pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
006dh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
006eh ret                                     ; RET || C3 || encoded[1]{c3}
006fh movzx ecx,r8b                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{41 0f b6 c8}
0073h mov rax,rdx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c2}
0076h rol rax,cl                              ; ROL r/m64, CL || REX.W D3 /0 || encoded[3]{48 d3 c0}
0079h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
007dh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
007eh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
007fh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0080h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0081h ret                                     ; RET || C3 || encoded[1]{c3}
0082h mov rcx,7ff7c73f5ae0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e0 5a 3f c7 f7 7f 00 00}
008ch call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2f e9 d3 5e}
0091h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0094h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0098h mov rcx,7ff7c635a678h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 78 a6 35 c6 f7 7f 00 00}
00a2h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 59 6c ce 5e}
00a7h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00aah mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
00b4h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 07 e9 d3 5e}
00b9h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
00bch mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
00c1h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
00cbh call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f0 81 e6 5e}
00d0h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
00d3h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
00d6h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c5 a8 23 ff}
00dbh mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
00ddh call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 26 80 23 ff}
00e2h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
00e5h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
00e8h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
00ebh call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 58 bd 21 ff}
00f0h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
00f3h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
00f6h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 15 0c 24 ff}
00fbh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
00feh call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0d 35 cb 5e}
0103h int 3                                   ; INT3 || CC || encoded[1]{cc}
0104h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0106h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0108h (bad)                                   ; <invalid> || <invalid> || encoded[2]{3f 00}
010ah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
010ch push rdx                                ; PUSH r64 || 50+ro || encoded[1]{52}
010dh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
010fh add [rax],bh                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 78 00}
0112h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0114h add gs:[rax],al                         ; ADD r/m8, r8 || 00 /r || encoded[3]{65 00 00}
0117h add [rcx],bl                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 19}
0119h or [rip+4420800h],al                    ; OR r/m8, r8 || 08 /r || encoded[6]{08 05 00 08 42 04}
011fh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0121h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
0122h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
0125h jo short 0127h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
0127h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; Shifter<byte> lookup<byte>(ShiftOpKind:byte kind)
; lookup_g[8u](ShiftOpKind~8u)[465] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 c6 ff c8 83 f8 03 77 18 8b c8 48 8d 05 ba 01 00 00 8b 04 88 48 8d 15 e2 ff ff ff 48 03 c2 ff e0 40 80 fe 08 0f 85 18 01 00 00 48 b9 e0 6c 3f c7 f7 7f 00 00 e8 3a e8 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 6b d9 d3 5e 48 b8 c0 e0 25 c6 f7 7f 00 00 48 89 46 18 48 b8 d8 70 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 e0 6c 3f c7 f7 7f 00 00 e8 f4 e7 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 25 d9 d3 5e 48 b8 c0 e0 25 c6 f7 7f 00 00 48 89 46 18 48 b8 58 71 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 e0 6c 3f c7 f7 7f 00 00 e8 ae e7 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 df d8 d3 5e 48 b8 c0 e0 25 c6 f7 7f 00 00 48 89 46 18 48 b8 38 71 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 e0 6c 3f c7 f7 7f 00 00 e8 68 e7 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 99 d8 d3 5e 48 b8 c0 e0 25 c6 f7 7f 00 00 48 89 46 18 48 b8 f8 70 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 e0 5a 3f c7 f7 7f 00 00 e8 22 e7 d3 5e 48 8b f8 40 88 77 08 48 b9 58 77 35 c6 f7 7f 00 00 e8 4c 6a ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 fa e6 d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 e3 7f e6 5e 48 8b e8 48 8b ce e8 b8 a6 23 ff 8b c8 e8 19 7e 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 4b bb 21 ff 48 8b d0 48 8b cb e8 08 0a 24 ff 48 8b cb e8 00 33 cb 5e cc}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx eax,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 c6}
000eh dec eax                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c8}
0010h cmp eax,3                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f8 03}
0013h ja short 002dh                          ; JA rel8 || 77 cb || encoded[2]{77 18}
0015h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0017h lea rax,[rip+1bah]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 ba 01 00 00}
001eh mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0021h lea rdx,[rip-1eh]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 15 e2 ff ff ff}
0028h add rax,rdx                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 c2}
002bh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
002dh cmp sil,8                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 08}
0031h jne near ptr 014fh                      ; JNE rel32 || 0F 85 cd || encoded[6]{0f 85 18 01 00 00}
0037h mov rcx,7ff7c73f6ce0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e0 6c 3f c7 f7 7f 00 00}
0041h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3a e8 d3 5e}
0046h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0049h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
004dh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0050h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6b d9 d3 5e}
0055h mov rax,7ff7c625e0c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 c0 e0 25 c6 f7 7f 00 00}
005fh mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0063h mov rax,7ff7c71670d8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 d8 70 16 c7 f7 7f 00 00}
006dh mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0071h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0074h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0078h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0079h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
007ah pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
007bh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
007ch ret                                     ; RET || C3 || encoded[1]{c3}
007dh mov rcx,7ff7c73f6ce0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e0 6c 3f c7 f7 7f 00 00}
0087h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f4 e7 d3 5e}
008ch mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
008fh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0093h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0096h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 25 d9 d3 5e}
009bh mov rax,7ff7c625e0c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 c0 e0 25 c6 f7 7f 00 00}
00a5h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
00a9h mov rax,7ff7c7167158h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 58 71 16 c7 f7 7f 00 00}
00b3h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
00b7h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
00bah add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
00beh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
00bfh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
00c0h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
00c1h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
00c2h ret                                     ; RET || C3 || encoded[1]{c3}
00c3h mov rcx,7ff7c73f6ce0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e0 6c 3f c7 f7 7f 00 00}
00cdh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ae e7 d3 5e}
00d2h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00d5h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
00d9h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
00dch call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 df d8 d3 5e}
00e1h mov rax,7ff7c625e0c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 c0 e0 25 c6 f7 7f 00 00}
00ebh mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
00efh mov rax,7ff7c7167138h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 38 71 16 c7 f7 7f 00 00}
00f9h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
00fdh mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0100h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0104h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0105h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0106h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0107h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0108h ret                                     ; RET || C3 || encoded[1]{c3}
0109h mov rcx,7ff7c73f6ce0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e0 6c 3f c7 f7 7f 00 00}
0113h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 68 e7 d3 5e}
0118h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
011bh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
011fh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0122h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 99 d8 d3 5e}
0127h mov rax,7ff7c625e0c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 c0 e0 25 c6 f7 7f 00 00}
0131h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0135h mov rax,7ff7c71670f8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 f8 70 16 c7 f7 7f 00 00}
013fh mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0143h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0146h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
014ah pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
014bh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
014ch pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
014dh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
014eh ret                                     ; RET || C3 || encoded[1]{c3}
014fh mov rcx,7ff7c73f5ae0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e0 5a 3f c7 f7 7f 00 00}
0159h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 22 e7 d3 5e}
015eh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0161h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0165h mov rcx,7ff7c6357758h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 58 77 35 c6 f7 7f 00 00}
016fh call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 4c 6a ce 5e}
0174h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0177h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0181h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fa e6 d3 5e}
0186h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
0189h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
018eh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0198h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e3 7f e6 5e}
019dh mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
01a0h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
01a3h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b8 a6 23 ff}
01a8h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
01aah call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 19 7e 23 ff}
01afh mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
01b2h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
01b5h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
01b8h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 4b bb 21 ff}
01bdh mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
01c0h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
01c3h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 08 0a 24 ff}
01c8h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
01cbh call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 00 33 cb 5e}
01d0h int 3                                   ; INT3 || CC || encoded[1]{cc}
------------------------------------------------------------------------------------------------------------------------
; Shifter<sbyte> lookup<sbyte>(ShiftOpKind:byte kind)
; lookup_g[8i](ShiftOpKind~8u)[465] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 c6 ff c8 83 f8 03 77 18 8b c8 48 8d 05 ba 01 00 00 8b 04 88 48 8d 15 e2 ff ff ff 48 03 c2 ff e0 40 80 fe 08 0f 85 18 01 00 00 48 b9 d0 70 3f c7 f7 7f 00 00 e8 2a e6 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 5b d7 d3 5e 48 b8 00 e1 25 c6 f7 7f 00 00 48 89 46 18 48 b8 50 7d 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 d0 70 3f c7 f7 7f 00 00 e8 e4 e5 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 15 d7 d3 5e 48 b8 00 e1 25 c6 f7 7f 00 00 48 89 46 18 48 b8 90 7d 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 d0 70 3f c7 f7 7f 00 00 e8 9e e5 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 cf d6 d3 5e 48 b8 00 e1 25 c6 f7 7f 00 00 48 89 46 18 48 b8 80 7d 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 d0 70 3f c7 f7 7f 00 00 e8 58 e5 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 89 d6 d3 5e 48 b8 00 e1 25 c6 f7 7f 00 00 48 89 46 18 48 b8 60 7d 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 e0 5a 3f c7 f7 7f 00 00 e8 12 e5 d3 5e 48 8b f8 40 88 77 08 48 b9 68 6f 35 c6 f7 7f 00 00 e8 3c 68 ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 ea e4 d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 d3 7d e6 5e 48 8b e8 48 8b ce e8 a8 a4 23 ff 8b c8 e8 09 7c 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 3b b9 21 ff 48 8b d0 48 8b cb e8 f8 07 24 ff 48 8b cb e8 f0 30 cb 5e cc}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx eax,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 c6}
000eh dec eax                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c8}
0010h cmp eax,3                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f8 03}
0013h ja short 002dh                          ; JA rel8 || 77 cb || encoded[2]{77 18}
0015h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0017h lea rax,[rip+1bah]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 ba 01 00 00}
001eh mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0021h lea rdx,[rip-1eh]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 15 e2 ff ff ff}
0028h add rax,rdx                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 c2}
002bh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
002dh cmp sil,8                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 08}
0031h jne near ptr 014fh                      ; JNE rel32 || 0F 85 cd || encoded[6]{0f 85 18 01 00 00}
0037h mov rcx,7ff7c73f70d0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d0 70 3f c7 f7 7f 00 00}
0041h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2a e6 d3 5e}
0046h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0049h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
004dh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0050h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5b d7 d3 5e}
0055h mov rax,7ff7c625e100h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 00 e1 25 c6 f7 7f 00 00}
005fh mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0063h mov rax,7ff7c7167d50h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 50 7d 16 c7 f7 7f 00 00}
006dh mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0071h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0074h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0078h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0079h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
007ah pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
007bh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
007ch ret                                     ; RET || C3 || encoded[1]{c3}
007dh mov rcx,7ff7c73f70d0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d0 70 3f c7 f7 7f 00 00}
0087h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e4 e5 d3 5e}
008ch mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
008fh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0093h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0096h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 15 d7 d3 5e}
009bh mov rax,7ff7c625e100h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 00 e1 25 c6 f7 7f 00 00}
00a5h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
00a9h mov rax,7ff7c7167d90h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 90 7d 16 c7 f7 7f 00 00}
00b3h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
00b7h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
00bah add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
00beh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
00bfh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
00c0h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
00c1h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
00c2h ret                                     ; RET || C3 || encoded[1]{c3}
00c3h mov rcx,7ff7c73f70d0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d0 70 3f c7 f7 7f 00 00}
00cdh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9e e5 d3 5e}
00d2h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00d5h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
00d9h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
00dch call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 cf d6 d3 5e}
00e1h mov rax,7ff7c625e100h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 00 e1 25 c6 f7 7f 00 00}
00ebh mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
00efh mov rax,7ff7c7167d80h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 80 7d 16 c7 f7 7f 00 00}
00f9h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
00fdh mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0100h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0104h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0105h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0106h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0107h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0108h ret                                     ; RET || C3 || encoded[1]{c3}
0109h mov rcx,7ff7c73f70d0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d0 70 3f c7 f7 7f 00 00}
0113h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 58 e5 d3 5e}
0118h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
011bh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
011fh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0122h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 89 d6 d3 5e}
0127h mov rax,7ff7c625e100h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 00 e1 25 c6 f7 7f 00 00}
0131h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0135h mov rax,7ff7c7167d60h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 60 7d 16 c7 f7 7f 00 00}
013fh mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0143h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0146h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
014ah pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
014bh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
014ch pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
014dh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
014eh ret                                     ; RET || C3 || encoded[1]{c3}
014fh mov rcx,7ff7c73f5ae0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e0 5a 3f c7 f7 7f 00 00}
0159h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 12 e5 d3 5e}
015eh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0161h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0165h mov rcx,7ff7c6356f68h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 68 6f 35 c6 f7 7f 00 00}
016fh call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3c 68 ce 5e}
0174h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0177h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0181h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ea e4 d3 5e}
0186h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
0189h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
018eh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0198h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d3 7d e6 5e}
019dh mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
01a0h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
01a3h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a8 a4 23 ff}
01a8h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
01aah call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 09 7c 23 ff}
01afh mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
01b2h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
01b5h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
01b8h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3b b9 21 ff}
01bdh mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
01c0h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
01c3h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f8 07 24 ff}
01c8h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
01cbh call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f0 30 cb 5e}
01d0h int 3                                   ; INT3 || CC || encoded[1]{cc}
------------------------------------------------------------------------------------------------------------------------
; Shifter<ushort> lookup<ushort>(ShiftOpKind:byte kind)
; lookup_g[16u](ShiftOpKind~8u)[465] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 c6 ff c8 83 f8 03 77 18 8b c8 48 8d 05 ba 01 00 00 8b 04 88 48 8d 15 e2 ff ff ff 48 03 c2 ff e0 40 80 fe 08 0f 85 18 01 00 00 48 b9 c0 74 3f c7 f7 7f 00 00 e8 1a e4 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 4b d5 d3 5e 48 b8 40 e1 25 c6 f7 7f 00 00 48 89 46 18 48 b8 30 7b 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 c0 74 3f c7 f7 7f 00 00 e8 d4 e3 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 05 d5 d3 5e 48 b8 40 e1 25 c6 f7 7f 00 00 48 89 46 18 48 b8 70 7b 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 c0 74 3f c7 f7 7f 00 00 e8 8e e3 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 bf d4 d3 5e 48 b8 40 e1 25 c6 f7 7f 00 00 48 89 46 18 48 b8 60 7b 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 c0 74 3f c7 f7 7f 00 00 e8 48 e3 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 79 d4 d3 5e 48 b8 40 e1 25 c6 f7 7f 00 00 48 89 46 18 48 b8 40 7b 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 e0 5a 3f c7 f7 7f 00 00 e8 02 e3 d3 5e 48 8b f8 40 88 77 08 48 b9 38 87 35 c6 f7 7f 00 00 e8 2c 66 ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 da e2 d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 c3 7b e6 5e 48 8b e8 48 8b ce e8 98 a2 23 ff 8b c8 e8 f9 79 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 2b b7 21 ff 48 8b d0 48 8b cb e8 e8 05 24 ff 48 8b cb e8 e0 2e cb 5e cc}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx eax,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 c6}
000eh dec eax                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c8}
0010h cmp eax,3                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f8 03}
0013h ja short 002dh                          ; JA rel8 || 77 cb || encoded[2]{77 18}
0015h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0017h lea rax,[rip+1bah]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 ba 01 00 00}
001eh mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0021h lea rdx,[rip-1eh]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 15 e2 ff ff ff}
0028h add rax,rdx                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 c2}
002bh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
002dh cmp sil,8                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 08}
0031h jne near ptr 014fh                      ; JNE rel32 || 0F 85 cd || encoded[6]{0f 85 18 01 00 00}
0037h mov rcx,7ff7c73f74c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 74 3f c7 f7 7f 00 00}
0041h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1a e4 d3 5e}
0046h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0049h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
004dh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0050h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 4b d5 d3 5e}
0055h mov rax,7ff7c625e140h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 40 e1 25 c6 f7 7f 00 00}
005fh mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0063h mov rax,7ff7c7167b30h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 30 7b 16 c7 f7 7f 00 00}
006dh mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0071h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0074h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0078h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0079h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
007ah pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
007bh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
007ch ret                                     ; RET || C3 || encoded[1]{c3}
007dh mov rcx,7ff7c73f74c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 74 3f c7 f7 7f 00 00}
0087h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d4 e3 d3 5e}
008ch mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
008fh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0093h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0096h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 05 d5 d3 5e}
009bh mov rax,7ff7c625e140h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 40 e1 25 c6 f7 7f 00 00}
00a5h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
00a9h mov rax,7ff7c7167b70h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 70 7b 16 c7 f7 7f 00 00}
00b3h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
00b7h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
00bah add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
00beh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
00bfh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
00c0h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
00c1h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
00c2h ret                                     ; RET || C3 || encoded[1]{c3}
00c3h mov rcx,7ff7c73f74c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 74 3f c7 f7 7f 00 00}
00cdh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 8e e3 d3 5e}
00d2h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00d5h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
00d9h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
00dch call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bf d4 d3 5e}
00e1h mov rax,7ff7c625e140h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 40 e1 25 c6 f7 7f 00 00}
00ebh mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
00efh mov rax,7ff7c7167b60h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 60 7b 16 c7 f7 7f 00 00}
00f9h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
00fdh mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0100h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0104h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0105h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0106h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0107h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0108h ret                                     ; RET || C3 || encoded[1]{c3}
0109h mov rcx,7ff7c73f74c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 74 3f c7 f7 7f 00 00}
0113h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 48 e3 d3 5e}
0118h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
011bh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
011fh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0122h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 79 d4 d3 5e}
0127h mov rax,7ff7c625e140h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 40 e1 25 c6 f7 7f 00 00}
0131h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0135h mov rax,7ff7c7167b40h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 40 7b 16 c7 f7 7f 00 00}
013fh mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0143h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0146h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
014ah pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
014bh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
014ch pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
014dh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
014eh ret                                     ; RET || C3 || encoded[1]{c3}
014fh mov rcx,7ff7c73f5ae0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e0 5a 3f c7 f7 7f 00 00}
0159h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 02 e3 d3 5e}
015eh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0161h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0165h mov rcx,7ff7c6358738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 38 87 35 c6 f7 7f 00 00}
016fh call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2c 66 ce 5e}
0174h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0177h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0181h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 da e2 d3 5e}
0186h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
0189h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
018eh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0198h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c3 7b e6 5e}
019dh mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
01a0h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
01a3h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 98 a2 23 ff}
01a8h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
01aah call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f9 79 23 ff}
01afh mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
01b2h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
01b5h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
01b8h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2b b7 21 ff}
01bdh mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
01c0h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
01c3h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e8 05 24 ff}
01c8h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
01cbh call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e0 2e cb 5e}
01d0h int 3                                   ; INT3 || CC || encoded[1]{cc}
------------------------------------------------------------------------------------------------------------------------
; Shifter<short> lookup<short>(ShiftOpKind:byte kind)
; lookup_g[16i](ShiftOpKind~8u)[465] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 c6 ff c8 83 f8 03 77 18 8b c8 48 8d 05 ba 01 00 00 8b 04 88 48 8d 15 e2 ff ff ff 48 03 c2 ff e0 40 80 fe 08 0f 85 18 01 00 00 48 b9 d0 76 3f c7 f7 7f 00 00 e8 0a e2 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 3b d3 d3 5e 48 b8 80 e1 25 c6 f7 7f 00 00 48 89 46 18 48 b8 10 7e 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 d0 76 3f c7 f7 7f 00 00 e8 c4 e1 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 f5 d2 d3 5e 48 b8 80 e1 25 c6 f7 7f 00 00 48 89 46 18 48 b8 50 7e 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 d0 76 3f c7 f7 7f 00 00 e8 7e e1 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 af d2 d3 5e 48 b8 80 e1 25 c6 f7 7f 00 00 48 89 46 18 48 b8 40 7e 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 d0 76 3f c7 f7 7f 00 00 e8 38 e1 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 69 d2 d3 5e 48 b8 80 e1 25 c6 f7 7f 00 00 48 89 46 18 48 b8 20 7e 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 e0 5a 3f c7 f7 7f 00 00 e8 f2 e0 d3 5e 48 8b f8 40 88 77 08 48 b9 48 7f 35 c6 f7 7f 00 00 e8 1c 64 ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 ca e0 d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 b3 79 e6 5e 48 8b e8 48 8b ce e8 88 a0 23 ff 8b c8 e8 e9 77 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 1b b5 21 ff 48 8b d0 48 8b cb e8 d8 03 24 ff 48 8b cb e8 d0 2c cb 5e cc}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx eax,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 c6}
000eh dec eax                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c8}
0010h cmp eax,3                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f8 03}
0013h ja short 002dh                          ; JA rel8 || 77 cb || encoded[2]{77 18}
0015h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0017h lea rax,[rip+1bah]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 ba 01 00 00}
001eh mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0021h lea rdx,[rip-1eh]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 15 e2 ff ff ff}
0028h add rax,rdx                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 c2}
002bh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
002dh cmp sil,8                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 08}
0031h jne near ptr 014fh                      ; JNE rel32 || 0F 85 cd || encoded[6]{0f 85 18 01 00 00}
0037h mov rcx,7ff7c73f76d0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d0 76 3f c7 f7 7f 00 00}
0041h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0a e2 d3 5e}
0046h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0049h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
004dh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0050h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3b d3 d3 5e}
0055h mov rax,7ff7c625e180h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 80 e1 25 c6 f7 7f 00 00}
005fh mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0063h mov rax,7ff7c7167e10h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 10 7e 16 c7 f7 7f 00 00}
006dh mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0071h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0074h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0078h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0079h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
007ah pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
007bh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
007ch ret                                     ; RET || C3 || encoded[1]{c3}
007dh mov rcx,7ff7c73f76d0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d0 76 3f c7 f7 7f 00 00}
0087h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c4 e1 d3 5e}
008ch mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
008fh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0093h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0096h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f5 d2 d3 5e}
009bh mov rax,7ff7c625e180h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 80 e1 25 c6 f7 7f 00 00}
00a5h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
00a9h mov rax,7ff7c7167e50h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 50 7e 16 c7 f7 7f 00 00}
00b3h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
00b7h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
00bah add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
00beh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
00bfh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
00c0h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
00c1h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
00c2h ret                                     ; RET || C3 || encoded[1]{c3}
00c3h mov rcx,7ff7c73f76d0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d0 76 3f c7 f7 7f 00 00}
00cdh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7e e1 d3 5e}
00d2h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00d5h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
00d9h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
00dch call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 af d2 d3 5e}
00e1h mov rax,7ff7c625e180h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 80 e1 25 c6 f7 7f 00 00}
00ebh mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
00efh mov rax,7ff7c7167e40h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 40 7e 16 c7 f7 7f 00 00}
00f9h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
00fdh mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0100h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0104h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0105h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0106h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0107h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0108h ret                                     ; RET || C3 || encoded[1]{c3}
0109h mov rcx,7ff7c73f76d0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d0 76 3f c7 f7 7f 00 00}
0113h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 38 e1 d3 5e}
0118h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
011bh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
011fh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0122h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 69 d2 d3 5e}
0127h mov rax,7ff7c625e180h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 80 e1 25 c6 f7 7f 00 00}
0131h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0135h mov rax,7ff7c7167e20h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 20 7e 16 c7 f7 7f 00 00}
013fh mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0143h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0146h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
014ah pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
014bh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
014ch pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
014dh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
014eh ret                                     ; RET || C3 || encoded[1]{c3}
014fh mov rcx,7ff7c73f5ae0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e0 5a 3f c7 f7 7f 00 00}
0159h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f2 e0 d3 5e}
015eh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0161h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0165h mov rcx,7ff7c6357f48h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 48 7f 35 c6 f7 7f 00 00}
016fh call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1c 64 ce 5e}
0174h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0177h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0181h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ca e0 d3 5e}
0186h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
0189h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
018eh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0198h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b3 79 e6 5e}
019dh mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
01a0h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
01a3h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 88 a0 23 ff}
01a8h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
01aah call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e9 77 23 ff}
01afh mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
01b2h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
01b5h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
01b8h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1b b5 21 ff}
01bdh mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
01c0h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
01c3h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d8 03 24 ff}
01c8h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
01cbh call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d0 2c cb 5e}
01d0h int 3                                   ; INT3 || CC || encoded[1]{cc}
------------------------------------------------------------------------------------------------------------------------
; Shifter<uint> lookup<uint>(ShiftOpKind:byte kind)
; lookup_g[32u](ShiftOpKind~8u)[465] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 c6 ff c8 83 f8 03 77 18 8b c8 48 8d 05 ba 01 00 00 8b 04 88 48 8d 15 e2 ff ff ff 48 03 c2 ff e0 40 80 fe 08 0f 85 18 01 00 00 48 b9 c0 7a 3f c7 f7 7f 00 00 e8 fa df d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 2b d1 d3 5e 48 b8 c0 e1 25 c6 f7 7f 00 00 48 89 46 18 48 b8 90 7b 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 c0 7a 3f c7 f7 7f 00 00 e8 b4 df d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 e5 d0 d3 5e 48 b8 c0 e1 25 c6 f7 7f 00 00 48 89 46 18 48 b8 d0 7b 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 c0 7a 3f c7 f7 7f 00 00 e8 6e df d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 9f d0 d3 5e 48 b8 c0 e1 25 c6 f7 7f 00 00 48 89 46 18 48 b8 c0 7b 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 c0 7a 3f c7 f7 7f 00 00 e8 28 df d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 59 d0 d3 5e 48 b8 c0 e1 25 c6 f7 7f 00 00 48 89 46 18 48 b8 a0 7b 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 e0 5a 3f c7 f7 7f 00 00 e8 e2 de d3 5e 48 8b f8 40 88 77 08 48 b9 d8 96 35 c6 f7 7f 00 00 e8 0c 62 ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 ba de d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 a3 77 e6 5e 48 8b e8 48 8b ce e8 78 9e 23 ff 8b c8 e8 d9 75 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 0b b3 21 ff 48 8b d0 48 8b cb e8 c8 01 24 ff 48 8b cb e8 c0 2a cb 5e cc}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx eax,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 c6}
000eh dec eax                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c8}
0010h cmp eax,3                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f8 03}
0013h ja short 002dh                          ; JA rel8 || 77 cb || encoded[2]{77 18}
0015h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0017h lea rax,[rip+1bah]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 ba 01 00 00}
001eh mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0021h lea rdx,[rip-1eh]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 15 e2 ff ff ff}
0028h add rax,rdx                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 c2}
002bh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
002dh cmp sil,8                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 08}
0031h jne near ptr 014fh                      ; JNE rel32 || 0F 85 cd || encoded[6]{0f 85 18 01 00 00}
0037h mov rcx,7ff7c73f7ac0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 7a 3f c7 f7 7f 00 00}
0041h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fa df d3 5e}
0046h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0049h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
004dh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0050h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2b d1 d3 5e}
0055h mov rax,7ff7c625e1c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 c0 e1 25 c6 f7 7f 00 00}
005fh mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0063h mov rax,7ff7c7167b90h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 90 7b 16 c7 f7 7f 00 00}
006dh mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0071h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0074h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0078h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0079h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
007ah pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
007bh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
007ch ret                                     ; RET || C3 || encoded[1]{c3}
007dh mov rcx,7ff7c73f7ac0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 7a 3f c7 f7 7f 00 00}
0087h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b4 df d3 5e}
008ch mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
008fh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0093h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0096h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e5 d0 d3 5e}
009bh mov rax,7ff7c625e1c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 c0 e1 25 c6 f7 7f 00 00}
00a5h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
00a9h mov rax,7ff7c7167bd0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 d0 7b 16 c7 f7 7f 00 00}
00b3h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
00b7h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
00bah add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
00beh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
00bfh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
00c0h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
00c1h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
00c2h ret                                     ; RET || C3 || encoded[1]{c3}
00c3h mov rcx,7ff7c73f7ac0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 7a 3f c7 f7 7f 00 00}
00cdh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6e df d3 5e}
00d2h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00d5h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
00d9h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
00dch call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9f d0 d3 5e}
00e1h mov rax,7ff7c625e1c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 c0 e1 25 c6 f7 7f 00 00}
00ebh mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
00efh mov rax,7ff7c7167bc0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 c0 7b 16 c7 f7 7f 00 00}
00f9h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
00fdh mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0100h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0104h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0105h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0106h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0107h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0108h ret                                     ; RET || C3 || encoded[1]{c3}
0109h mov rcx,7ff7c73f7ac0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 7a 3f c7 f7 7f 00 00}
0113h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 28 df d3 5e}
0118h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
011bh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
011fh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0122h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 59 d0 d3 5e}
0127h mov rax,7ff7c625e1c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 c0 e1 25 c6 f7 7f 00 00}
0131h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0135h mov rax,7ff7c7167ba0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 a0 7b 16 c7 f7 7f 00 00}
013fh mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0143h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0146h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
014ah pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
014bh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
014ch pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
014dh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
014eh ret                                     ; RET || C3 || encoded[1]{c3}
014fh mov rcx,7ff7c73f5ae0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e0 5a 3f c7 f7 7f 00 00}
0159h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e2 de d3 5e}
015eh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0161h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0165h mov rcx,7ff7c63596d8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d8 96 35 c6 f7 7f 00 00}
016fh call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0c 62 ce 5e}
0174h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0177h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0181h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ba de d3 5e}
0186h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
0189h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
018eh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0198h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a3 77 e6 5e}
019dh mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
01a0h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
01a3h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 78 9e 23 ff}
01a8h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
01aah call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d9 75 23 ff}
01afh mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
01b2h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
01b5h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
01b8h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0b b3 21 ff}
01bdh mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
01c0h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
01c3h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c8 01 24 ff}
01c8h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
01cbh call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c0 2a cb 5e}
01d0h int 3                                   ; INT3 || CC || encoded[1]{cc}
------------------------------------------------------------------------------------------------------------------------
; Shifter<int> lookup<int>(ShiftOpKind:byte kind)
; lookup_g[32i](ShiftOpKind~8u)[465] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 c6 ff c8 83 f8 03 77 18 8b c8 48 8d 05 ba 01 00 00 8b 04 88 48 8d 15 e2 ff ff ff 48 03 c2 ff e0 40 80 fe 08 0f 85 18 01 00 00 48 b9 d0 7c 3f c7 f7 7f 00 00 e8 ea d9 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 1b cb d3 5e 48 b8 00 e2 25 c6 f7 7f 00 00 48 89 46 18 48 b8 78 8e 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 d0 7c 3f c7 f7 7f 00 00 e8 a4 d9 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 d5 ca d3 5e 48 b8 00 e2 25 c6 f7 7f 00 00 48 89 46 18 48 b8 b8 8e 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 d0 7c 3f c7 f7 7f 00 00 e8 5e d9 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 8f ca d3 5e 48 b8 00 e2 25 c6 f7 7f 00 00 48 89 46 18 48 b8 a8 8e 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 d0 7c 3f c7 f7 7f 00 00 e8 18 d9 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 49 ca d3 5e 48 b8 00 e2 25 c6 f7 7f 00 00 48 89 46 18 48 b8 88 8e 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 e0 5a 3f c7 f7 7f 00 00 e8 d2 d8 d3 5e 48 8b f8 40 88 77 08 48 b9 08 8f 35 c6 f7 7f 00 00 e8 fc 5b ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 aa d8 d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 93 71 e6 5e 48 8b e8 48 8b ce e8 68 98 23 ff 8b c8 e8 c9 6f 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 fb ac 21 ff 48 8b d0 48 8b cb e8 b8 fb 23 ff 48 8b cb e8 b0 24 cb 5e cc}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx eax,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 c6}
000eh dec eax                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c8}
0010h cmp eax,3                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f8 03}
0013h ja short 002dh                          ; JA rel8 || 77 cb || encoded[2]{77 18}
0015h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0017h lea rax,[rip+1bah]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 ba 01 00 00}
001eh mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0021h lea rdx,[rip-1eh]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 15 e2 ff ff ff}
0028h add rax,rdx                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 c2}
002bh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
002dh cmp sil,8                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 08}
0031h jne near ptr 014fh                      ; JNE rel32 || 0F 85 cd || encoded[6]{0f 85 18 01 00 00}
0037h mov rcx,7ff7c73f7cd0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d0 7c 3f c7 f7 7f 00 00}
0041h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ea d9 d3 5e}
0046h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0049h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
004dh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0050h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1b cb d3 5e}
0055h mov rax,7ff7c625e200h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 00 e2 25 c6 f7 7f 00 00}
005fh mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0063h mov rax,7ff7c7168e78h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 78 8e 16 c7 f7 7f 00 00}
006dh mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0071h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0074h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0078h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0079h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
007ah pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
007bh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
007ch ret                                     ; RET || C3 || encoded[1]{c3}
007dh mov rcx,7ff7c73f7cd0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d0 7c 3f c7 f7 7f 00 00}
0087h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a4 d9 d3 5e}
008ch mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
008fh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0093h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0096h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d5 ca d3 5e}
009bh mov rax,7ff7c625e200h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 00 e2 25 c6 f7 7f 00 00}
00a5h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
00a9h mov rax,7ff7c7168eb8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 b8 8e 16 c7 f7 7f 00 00}
00b3h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
00b7h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
00bah add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
00beh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
00bfh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
00c0h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
00c1h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
00c2h ret                                     ; RET || C3 || encoded[1]{c3}
00c3h mov rcx,7ff7c73f7cd0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d0 7c 3f c7 f7 7f 00 00}
00cdh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5e d9 d3 5e}
00d2h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00d5h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
00d9h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
00dch call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 8f ca d3 5e}
00e1h mov rax,7ff7c625e200h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 00 e2 25 c6 f7 7f 00 00}
00ebh mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
00efh mov rax,7ff7c7168ea8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 a8 8e 16 c7 f7 7f 00 00}
00f9h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
00fdh mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0100h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0104h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0105h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0106h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0107h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0108h ret                                     ; RET || C3 || encoded[1]{c3}
0109h mov rcx,7ff7c73f7cd0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d0 7c 3f c7 f7 7f 00 00}
0113h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 18 d9 d3 5e}
0118h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
011bh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
011fh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0122h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 49 ca d3 5e}
0127h mov rax,7ff7c625e200h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 00 e2 25 c6 f7 7f 00 00}
0131h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0135h mov rax,7ff7c7168e88h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 88 8e 16 c7 f7 7f 00 00}
013fh mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0143h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0146h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
014ah pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
014bh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
014ch pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
014dh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
014eh ret                                     ; RET || C3 || encoded[1]{c3}
014fh mov rcx,7ff7c73f5ae0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e0 5a 3f c7 f7 7f 00 00}
0159h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d2 d8 d3 5e}
015eh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0161h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0165h mov rcx,7ff7c6358f08h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 08 8f 35 c6 f7 7f 00 00}
016fh call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fc 5b ce 5e}
0174h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0177h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0181h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 aa d8 d3 5e}
0186h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
0189h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
018eh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0198h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 93 71 e6 5e}
019dh mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
01a0h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
01a3h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 68 98 23 ff}
01a8h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
01aah call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c9 6f 23 ff}
01afh mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
01b2h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
01b5h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
01b8h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fb ac 21 ff}
01bdh mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
01c0h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
01c3h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b8 fb 23 ff}
01c8h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
01cbh call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b0 24 cb 5e}
01d0h int 3                                   ; INT3 || CC || encoded[1]{cc}
------------------------------------------------------------------------------------------------------------------------
; Shifter<ulong> lookup<ulong>(ShiftOpKind:byte kind)
; lookup_g[64u](ShiftOpKind~8u)[465] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 c6 ff c8 83 f8 03 77 18 8b c8 48 8d 05 ba 01 00 00 8b 04 88 48 8d 15 e2 ff ff ff 48 03 c2 ff e0 40 80 fe 08 0f 85 18 01 00 00 48 b9 c0 80 3f c7 f7 7f 00 00 e8 da d7 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 0b c9 d3 5e 48 b8 40 e2 25 c6 f7 7f 00 00 48 89 46 18 48 b8 f0 7b 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 c0 80 3f c7 f7 7f 00 00 e8 94 d7 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 c5 c8 d3 5e 48 b8 40 e2 25 c6 f7 7f 00 00 48 89 46 18 48 b8 30 7c 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 c0 80 3f c7 f7 7f 00 00 e8 4e d7 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 7f c8 d3 5e 48 b8 40 e2 25 c6 f7 7f 00 00 48 89 46 18 48 b8 20 7c 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 c0 80 3f c7 f7 7f 00 00 e8 08 d7 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 39 c8 d3 5e 48 b8 40 e2 25 c6 f7 7f 00 00 48 89 46 18 48 b8 00 7c 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 e0 5a 3f c7 f7 7f 00 00 e8 c2 d6 d3 5e 48 8b f8 40 88 77 08 48 b9 78 a6 35 c6 f7 7f 00 00 e8 ec 59 ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 9a d6 d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 83 6f e6 5e 48 8b e8 48 8b ce e8 58 96 23 ff 8b c8 e8 b9 6d 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 eb aa 21 ff 48 8b d0 48 8b cb e8 a8 f9 23 ff 48 8b cb e8 a0 22 cb 5e cc}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx eax,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 c6}
000eh dec eax                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c8}
0010h cmp eax,3                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f8 03}
0013h ja short 002dh                          ; JA rel8 || 77 cb || encoded[2]{77 18}
0015h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0017h lea rax,[rip+1bah]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 ba 01 00 00}
001eh mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0021h lea rdx,[rip-1eh]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 15 e2 ff ff ff}
0028h add rax,rdx                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 c2}
002bh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
002dh cmp sil,8                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 08}
0031h jne near ptr 014fh                      ; JNE rel32 || 0F 85 cd || encoded[6]{0f 85 18 01 00 00}
0037h mov rcx,7ff7c73f80c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 80 3f c7 f7 7f 00 00}
0041h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 da d7 d3 5e}
0046h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0049h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
004dh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0050h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0b c9 d3 5e}
0055h mov rax,7ff7c625e240h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 40 e2 25 c6 f7 7f 00 00}
005fh mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0063h mov rax,7ff7c7167bf0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 f0 7b 16 c7 f7 7f 00 00}
006dh mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0071h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0074h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0078h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0079h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
007ah pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
007bh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
007ch ret                                     ; RET || C3 || encoded[1]{c3}
007dh mov rcx,7ff7c73f80c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 80 3f c7 f7 7f 00 00}
0087h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 94 d7 d3 5e}
008ch mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
008fh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0093h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0096h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c5 c8 d3 5e}
009bh mov rax,7ff7c625e240h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 40 e2 25 c6 f7 7f 00 00}
00a5h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
00a9h mov rax,7ff7c7167c30h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 30 7c 16 c7 f7 7f 00 00}
00b3h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
00b7h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
00bah add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
00beh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
00bfh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
00c0h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
00c1h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
00c2h ret                                     ; RET || C3 || encoded[1]{c3}
00c3h mov rcx,7ff7c73f80c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 80 3f c7 f7 7f 00 00}
00cdh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 4e d7 d3 5e}
00d2h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00d5h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
00d9h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
00dch call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7f c8 d3 5e}
00e1h mov rax,7ff7c625e240h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 40 e2 25 c6 f7 7f 00 00}
00ebh mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
00efh mov rax,7ff7c7167c20h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 20 7c 16 c7 f7 7f 00 00}
00f9h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
00fdh mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0100h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0104h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0105h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0106h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0107h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0108h ret                                     ; RET || C3 || encoded[1]{c3}
0109h mov rcx,7ff7c73f80c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 80 3f c7 f7 7f 00 00}
0113h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 08 d7 d3 5e}
0118h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
011bh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
011fh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0122h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 39 c8 d3 5e}
0127h mov rax,7ff7c625e240h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 40 e2 25 c6 f7 7f 00 00}
0131h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0135h mov rax,7ff7c7167c00h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 00 7c 16 c7 f7 7f 00 00}
013fh mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0143h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0146h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
014ah pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
014bh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
014ch pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
014dh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
014eh ret                                     ; RET || C3 || encoded[1]{c3}
014fh mov rcx,7ff7c73f5ae0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e0 5a 3f c7 f7 7f 00 00}
0159h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c2 d6 d3 5e}
015eh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0161h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0165h mov rcx,7ff7c635a678h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 78 a6 35 c6 f7 7f 00 00}
016fh call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ec 59 ce 5e}
0174h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0177h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0181h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9a d6 d3 5e}
0186h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
0189h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
018eh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0198h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 83 6f e6 5e}
019dh mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
01a0h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
01a3h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 58 96 23 ff}
01a8h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
01aah call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b9 6d 23 ff}
01afh mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
01b2h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
01b5h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
01b8h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 eb aa 21 ff}
01bdh mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
01c0h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
01c3h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a8 f9 23 ff}
01c8h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
01cbh call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a0 22 cb 5e}
01d0h int 3                                   ; INT3 || CC || encoded[1]{cc}
------------------------------------------------------------------------------------------------------------------------
; Shifter<long> lookup<long>(ShiftOpKind:byte kind)
; lookup_g[64i](ShiftOpKind~8u)[465] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 c6 ff c8 83 f8 03 77 18 8b c8 48 8d 05 ba 01 00 00 8b 04 88 48 8d 15 e2 ff ff ff 48 03 c2 ff e0 40 80 fe 08 0f 85 18 01 00 00 48 b9 d0 82 3f c7 f7 7f 00 00 e8 ca d5 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 fb c6 d3 5e 48 b8 80 e2 25 c6 f7 7f 00 00 48 89 46 18 48 b8 38 8f 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 d0 82 3f c7 f7 7f 00 00 e8 84 d5 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 b5 c6 d3 5e 48 b8 80 e2 25 c6 f7 7f 00 00 48 89 46 18 48 b8 78 8f 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 d0 82 3f c7 f7 7f 00 00 e8 3e d5 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 6f c6 d3 5e 48 b8 80 e2 25 c6 f7 7f 00 00 48 89 46 18 48 b8 68 8f 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 d0 82 3f c7 f7 7f 00 00 e8 f8 d4 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 29 c6 d3 5e 48 b8 80 e2 25 c6 f7 7f 00 00 48 89 46 18 48 b8 48 8f 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 e0 5a 3f c7 f7 7f 00 00 e8 b2 d4 d3 5e 48 8b f8 40 88 77 08 48 b9 a8 9e 35 c6 f7 7f 00 00 e8 dc 57 ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 8a d4 d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 73 6d e6 5e 48 8b e8 48 8b ce e8 48 94 23 ff 8b c8 e8 a9 6b 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 db a8 21 ff 48 8b d0 48 8b cb e8 98 f7 23 ff 48 8b cb e8 90 20 cb 5e cc}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx eax,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 c6}
000eh dec eax                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c8}
0010h cmp eax,3                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f8 03}
0013h ja short 002dh                          ; JA rel8 || 77 cb || encoded[2]{77 18}
0015h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0017h lea rax,[rip+1bah]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 ba 01 00 00}
001eh mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0021h lea rdx,[rip-1eh]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 15 e2 ff ff ff}
0028h add rax,rdx                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 c2}
002bh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
002dh cmp sil,8                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 08}
0031h jne near ptr 014fh                      ; JNE rel32 || 0F 85 cd || encoded[6]{0f 85 18 01 00 00}
0037h mov rcx,7ff7c73f82d0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d0 82 3f c7 f7 7f 00 00}
0041h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ca d5 d3 5e}
0046h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0049h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
004dh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0050h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fb c6 d3 5e}
0055h mov rax,7ff7c625e280h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 80 e2 25 c6 f7 7f 00 00}
005fh mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0063h mov rax,7ff7c7168f38h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 38 8f 16 c7 f7 7f 00 00}
006dh mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0071h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0074h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0078h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0079h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
007ah pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
007bh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
007ch ret                                     ; RET || C3 || encoded[1]{c3}
007dh mov rcx,7ff7c73f82d0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d0 82 3f c7 f7 7f 00 00}
0087h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 84 d5 d3 5e}
008ch mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
008fh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0093h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0096h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b5 c6 d3 5e}
009bh mov rax,7ff7c625e280h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 80 e2 25 c6 f7 7f 00 00}
00a5h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
00a9h mov rax,7ff7c7168f78h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 78 8f 16 c7 f7 7f 00 00}
00b3h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
00b7h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
00bah add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
00beh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
00bfh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
00c0h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
00c1h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
00c2h ret                                     ; RET || C3 || encoded[1]{c3}
00c3h mov rcx,7ff7c73f82d0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d0 82 3f c7 f7 7f 00 00}
00cdh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3e d5 d3 5e}
00d2h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00d5h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
00d9h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
00dch call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6f c6 d3 5e}
00e1h mov rax,7ff7c625e280h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 80 e2 25 c6 f7 7f 00 00}
00ebh mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
00efh mov rax,7ff7c7168f68h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 68 8f 16 c7 f7 7f 00 00}
00f9h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
00fdh mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0100h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
0104h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
0105h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
0106h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
0107h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
0108h ret                                     ; RET || C3 || encoded[1]{c3}
0109h mov rcx,7ff7c73f82d0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d0 82 3f c7 f7 7f 00 00}
0113h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f8 d4 d3 5e}
0118h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
011bh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
011fh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0122h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 29 c6 d3 5e}
0127h mov rax,7ff7c625e280h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 80 e2 25 c6 f7 7f 00 00}
0131h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0135h mov rax,7ff7c7168f48h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 48 8f 16 c7 f7 7f 00 00}
013fh mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0143h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0146h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
014ah pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
014bh pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
014ch pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
014dh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
014eh ret                                     ; RET || C3 || encoded[1]{c3}
014fh mov rcx,7ff7c73f5ae0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e0 5a 3f c7 f7 7f 00 00}
0159h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b2 d4 d3 5e}
015eh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0161h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0165h mov rcx,7ff7c6359ea8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 a8 9e 35 c6 f7 7f 00 00}
016fh call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 dc 57 ce 5e}
0174h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0177h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0181h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 8a d4 d3 5e}
0186h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
0189h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
018eh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0198h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 73 6d e6 5e}
019dh mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
01a0h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
01a3h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 48 94 23 ff}
01a8h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
01aah call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a9 6b 23 ff}
01afh mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
01b2h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
01b5h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
01b8h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 db a8 21 ff}
01bdh mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
01c0h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
01c3h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 98 f7 23 ff}
01c8h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
01cbh call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 90 20 cb 5e}
01d0h int 3                                   ; INT3 || CC || encoded[1]{cc}
------------------------------------------------------------------------------------------------------------------------
; BinaryOp<byte> lookup<byte>(ComparisonKind:byte kind)
; lookup_g[8u](ComparisonKind~8u)[601] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 ce ff c9 83 f9 05 0f 87 93 01 00 00 8b c9 48 8d 05 0e 02 00 00 8b 04 88 48 8d 15 de ff ff ff 48 03 c2 ff e0 48 b9 70 88 3f c7 f7 7f 00 00 e8 c0 d3 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 f1 c4 d3 5e 48 b9 c0 e0 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 00 de 15 c7 f7 7f 00 00 48 89 4e 20 e9 30 01 00 00 48 b9 70 88 3f c7 f7 7f 00 00 e8 81 d3 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 b2 c4 d3 5e 48 b9 c0 e0 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 60 dd 15 c7 f7 7f 00 00 48 89 4e 20 e9 f1 00 00 00 48 b9 70 88 3f c7 f7 7f 00 00 e8 42 d3 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 73 c4 d3 5e 48 b9 c0 e0 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 e0 dd 15 c7 f7 7f 00 00 48 89 4e 20 e9 b2 00 00 00 48 b9 70 88 3f c7 f7 7f 00 00 e8 03 d3 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 34 c4 d3 5e 48 b9 c0 e0 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 c0 dd 15 c7 f7 7f 00 00 48 89 4e 20 eb 76 48 b9 70 88 3f c7 f7 7f 00 00 e8 c7 d2 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 f8 c3 d3 5e 48 b9 c0 e0 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 a0 dd 15 c7 f7 7f 00 00 48 89 4e 20 eb 3a 48 b9 70 88 3f c7 f7 7f 00 00 e8 8b d2 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 bc c3 d3 5e 48 b8 c0 e0 25 c6 f7 7f 00 00 48 89 46 18 48 b8 80 dd 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 30 c7 3c c7 f7 7f 00 00 e8 45 d2 d3 5e 48 8b f8 40 88 77 08 48 b9 58 77 35 c6 f7 7f 00 00 e8 6f 55 ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 1d d2 d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 06 6b e6 5e 48 8b e8 48 8b ce e8 db 91 23 ff 8b c8 e8 3c 69 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 6e a6 21 ff 48 8b d0 48 8b cb e8 2b f5 23 ff 48 8b cb e8 23 1e cb 5e cc 00 00 27 00 00 00 a5 00 00 00 e4 00 00 00 20 01 00 00 5c 01 00 00 66 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx ecx,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 ce}
000eh dec ecx                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c9}
0010h cmp ecx,5                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f9 05}
0013h ja near ptr 01ach                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 93 01 00 00}
0019h mov ecx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c9}
001bh lea rax,[rip+20eh]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 0e 02 00 00}
0022h mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0025h lea rdx,[rip-22h]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 15 de ff ff ff}
002ch add rax,rdx                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 c2}
002fh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
0031h mov rcx,7ff7c73f8870h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 88 3f c7 f7 7f 00 00}
003bh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c0 d3 d3 5e}
0040h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0043h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0047h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
004ah call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f1 c4 d3 5e}
004fh mov rcx,7ff7c625e0c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e0 25 c6 f7 7f 00 00}
0059h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
005dh mov rcx,7ff7c715de00h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 de 15 c7 f7 7f 00 00}
0067h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
006bh jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 30 01 00 00}
0070h mov rcx,7ff7c73f8870h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 88 3f c7 f7 7f 00 00}
007ah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 81 d3 d3 5e}
007fh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0082h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0086h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0089h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b2 c4 d3 5e}
008eh mov rcx,7ff7c625e0c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e0 25 c6 f7 7f 00 00}
0098h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
009ch mov rcx,7ff7c715dd60h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 dd 15 c7 f7 7f 00 00}
00a6h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00aah jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f1 00 00 00}
00afh mov rcx,7ff7c73f8870h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 88 3f c7 f7 7f 00 00}
00b9h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 42 d3 d3 5e}
00beh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00c1h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
00c5h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
00c8h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 73 c4 d3 5e}
00cdh mov rcx,7ff7c625e0c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e0 25 c6 f7 7f 00 00}
00d7h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
00dbh mov rcx,7ff7c715dde0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e0 dd 15 c7 f7 7f 00 00}
00e5h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00e9h jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b2 00 00 00}
00eeh mov rcx,7ff7c73f8870h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 88 3f c7 f7 7f 00 00}
00f8h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 03 d3 d3 5e}
00fdh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0100h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0104h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0107h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 34 c4 d3 5e}
010ch mov rcx,7ff7c625e0c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e0 25 c6 f7 7f 00 00}
0116h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
011ah mov rcx,7ff7c715ddc0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 dd 15 c7 f7 7f 00 00}
0124h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0128h jmp short 01a0h                         ; JMP rel8 || EB cb || encoded[2]{eb 76}
012ah mov rcx,7ff7c73f8870h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 88 3f c7 f7 7f 00 00}
0134h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c7 d2 d3 5e}
0139h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
013ch lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0140h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0143h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f8 c3 d3 5e}
0148h mov rcx,7ff7c625e0c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e0 25 c6 f7 7f 00 00}
0152h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0156h mov rcx,7ff7c715dda0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 a0 dd 15 c7 f7 7f 00 00}
0160h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0164h jmp short 01a0h                         ; JMP rel8 || EB cb || encoded[2]{eb 3a}
0166h mov rcx,7ff7c73f8870h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 88 3f c7 f7 7f 00 00}
0170h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 8b d2 d3 5e}
0175h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0178h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
017ch mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
017fh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bc c3 d3 5e}
0184h mov rax,7ff7c625e0c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 c0 e0 25 c6 f7 7f 00 00}
018eh mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0192h mov rax,7ff7c715dd80h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 80 dd 15 c7 f7 7f 00 00}
019ch mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
01a0h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
01a3h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
01a7h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
01a8h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
01a9h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
01aah pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
01abh ret                                     ; RET || C3 || encoded[1]{c3}
01ach mov rcx,7ff7c73cc730h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 c7 3c c7 f7 7f 00 00}
01b6h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 45 d2 d3 5e}
01bbh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
01beh mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
01c2h mov rcx,7ff7c6357758h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 58 77 35 c6 f7 7f 00 00}
01cch call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6f 55 ce 5e}
01d1h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
01d4h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
01deh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1d d2 d3 5e}
01e3h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
01e6h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
01ebh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
01f5h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 06 6b e6 5e}
01fah mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
01fdh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0200h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 db 91 23 ff}
0205h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0207h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3c 69 23 ff}
020ch mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
020fh mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0212h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0215h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6e a6 21 ff}
021ah mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
021dh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0220h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2b f5 23 ff}
0225h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0228h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 23 1e cb 5e}
022dh int 3                                   ; INT3 || CC || encoded[1]{cc}
022eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0230h (bad)                                   ; <invalid> || <invalid> || encoded[2]{27 00}
0232h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0234h movsd                                   ; MOVSD || o32 A5 || encoded[1]{a5}
0235h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0237h add ah,ah                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 e4}
0239h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
023bh add [rax],ah                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 20}
023dh add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
023fh add [rcx+rax],bl                        ; ADD r/m8, r8 || 00 /r || encoded[4]{00 5c 01 00}
0243h add [rsi],ah                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 66 00}
0246h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0248h sbb [rax],ecx                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 08}
024ah add eax,4420800h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 08 42 04}
024fh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0251h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
0252h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
0255h jo short 0257h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
0257h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; BinaryOp<sbyte> lookup<sbyte>(ComparisonKind:byte kind)
; lookup_g[8i](ComparisonKind~8u)[601] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 ce ff c9 83 f9 05 0f 87 93 01 00 00 8b c9 48 8d 05 0e 02 00 00 8b 04 88 48 8d 15 de ff ff ff 48 03 c2 ff e0 48 b9 20 8d 3f c7 f7 7f 00 00 e8 50 d1 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 81 c2 d3 5e 48 b9 c0 e2 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 90 df 15 c7 f7 7f 00 00 48 89 4e 20 e9 30 01 00 00 48 b9 20 8d 3f c7 f7 7f 00 00 e8 11 d1 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 42 c2 d3 5e 48 b9 c0 e2 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 40 df 15 c7 f7 7f 00 00 48 89 4e 20 e9 f1 00 00 00 48 b9 20 8d 3f c7 f7 7f 00 00 e8 d2 d0 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 03 c2 d3 5e 48 b9 c0 e2 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 80 df 15 c7 f7 7f 00 00 48 89 4e 20 e9 b2 00 00 00 48 b9 20 8d 3f c7 f7 7f 00 00 e8 93 d0 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 c4 c1 d3 5e 48 b9 c0 e2 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 70 df 15 c7 f7 7f 00 00 48 89 4e 20 eb 76 48 b9 20 8d 3f c7 f7 7f 00 00 e8 57 d0 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 88 c1 d3 5e 48 b9 c0 e2 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 60 df 15 c7 f7 7f 00 00 48 89 4e 20 eb 3a 48 b9 20 8d 3f c7 f7 7f 00 00 e8 1b d0 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 4c c1 d3 5e 48 b8 c0 e2 25 c6 f7 7f 00 00 48 89 46 18 48 b8 50 df 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 30 c7 3c c7 f7 7f 00 00 e8 d5 cf d3 5e 48 8b f8 40 88 77 08 48 b9 68 6f 35 c6 f7 7f 00 00 e8 ff 52 ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 ad cf d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 96 68 e6 5e 48 8b e8 48 8b ce e8 6b 8f 23 ff 8b c8 e8 cc 66 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 fe a3 21 ff 48 8b d0 48 8b cb e8 bb f2 23 ff 48 8b cb e8 b3 1b cb 5e cc 00 00 27 00 00 00 a5 00 00 00 e4 00 00 00 20 01 00 00 5c 01 00 00 66 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx ecx,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 ce}
000eh dec ecx                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c9}
0010h cmp ecx,5                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f9 05}
0013h ja near ptr 01ach                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 93 01 00 00}
0019h mov ecx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c9}
001bh lea rax,[rip+20eh]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 0e 02 00 00}
0022h mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0025h lea rdx,[rip-22h]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 15 de ff ff ff}
002ch add rax,rdx                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 c2}
002fh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
0031h mov rcx,7ff7c73f8d20h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 8d 3f c7 f7 7f 00 00}
003bh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 50 d1 d3 5e}
0040h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0043h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0047h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
004ah call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 81 c2 d3 5e}
004fh mov rcx,7ff7c625e2c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e2 25 c6 f7 7f 00 00}
0059h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
005dh mov rcx,7ff7c715df90h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 90 df 15 c7 f7 7f 00 00}
0067h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
006bh jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 30 01 00 00}
0070h mov rcx,7ff7c73f8d20h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 8d 3f c7 f7 7f 00 00}
007ah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 11 d1 d3 5e}
007fh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0082h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0086h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0089h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 42 c2 d3 5e}
008eh mov rcx,7ff7c625e2c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e2 25 c6 f7 7f 00 00}
0098h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
009ch mov rcx,7ff7c715df40h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 df 15 c7 f7 7f 00 00}
00a6h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00aah jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f1 00 00 00}
00afh mov rcx,7ff7c73f8d20h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 8d 3f c7 f7 7f 00 00}
00b9h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d2 d0 d3 5e}
00beh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00c1h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
00c5h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
00c8h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 03 c2 d3 5e}
00cdh mov rcx,7ff7c625e2c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e2 25 c6 f7 7f 00 00}
00d7h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
00dbh mov rcx,7ff7c715df80h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 df 15 c7 f7 7f 00 00}
00e5h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00e9h jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b2 00 00 00}
00eeh mov rcx,7ff7c73f8d20h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 8d 3f c7 f7 7f 00 00}
00f8h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 93 d0 d3 5e}
00fdh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0100h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0104h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0107h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c4 c1 d3 5e}
010ch mov rcx,7ff7c625e2c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e2 25 c6 f7 7f 00 00}
0116h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
011ah mov rcx,7ff7c715df70h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 df 15 c7 f7 7f 00 00}
0124h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0128h jmp short 01a0h                         ; JMP rel8 || EB cb || encoded[2]{eb 76}
012ah mov rcx,7ff7c73f8d20h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 8d 3f c7 f7 7f 00 00}
0134h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 57 d0 d3 5e}
0139h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
013ch lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0140h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0143h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 88 c1 d3 5e}
0148h mov rcx,7ff7c625e2c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e2 25 c6 f7 7f 00 00}
0152h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0156h mov rcx,7ff7c715df60h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 df 15 c7 f7 7f 00 00}
0160h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0164h jmp short 01a0h                         ; JMP rel8 || EB cb || encoded[2]{eb 3a}
0166h mov rcx,7ff7c73f8d20h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 8d 3f c7 f7 7f 00 00}
0170h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1b d0 d3 5e}
0175h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0178h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
017ch mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
017fh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 4c c1 d3 5e}
0184h mov rax,7ff7c625e2c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 c0 e2 25 c6 f7 7f 00 00}
018eh mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0192h mov rax,7ff7c715df50h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 50 df 15 c7 f7 7f 00 00}
019ch mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
01a0h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
01a3h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
01a7h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
01a8h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
01a9h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
01aah pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
01abh ret                                     ; RET || C3 || encoded[1]{c3}
01ach mov rcx,7ff7c73cc730h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 c7 3c c7 f7 7f 00 00}
01b6h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d5 cf d3 5e}
01bbh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
01beh mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
01c2h mov rcx,7ff7c6356f68h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 68 6f 35 c6 f7 7f 00 00}
01cch call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ff 52 ce 5e}
01d1h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
01d4h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
01deh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ad cf d3 5e}
01e3h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
01e6h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
01ebh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
01f5h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 96 68 e6 5e}
01fah mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
01fdh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0200h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6b 8f 23 ff}
0205h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0207h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 cc 66 23 ff}
020ch mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
020fh mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0212h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0215h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fe a3 21 ff}
021ah mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
021dh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0220h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bb f2 23 ff}
0225h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0228h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b3 1b cb 5e}
022dh int 3                                   ; INT3 || CC || encoded[1]{cc}
022eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0230h (bad)                                   ; <invalid> || <invalid> || encoded[2]{27 00}
0232h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0234h movsd                                   ; MOVSD || o32 A5 || encoded[1]{a5}
0235h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0237h add ah,ah                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 e4}
0239h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
023bh add [rax],ah                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 20}
023dh add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
023fh add [rcx+rax],bl                        ; ADD r/m8, r8 || 00 /r || encoded[4]{00 5c 01 00}
0243h add [rsi],ah                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 66 00}
0246h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0248h sbb [rax],ecx                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 08}
024ah add eax,4420800h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 08 42 04}
024fh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0251h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
0252h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
0255h jo short 0257h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
0257h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; BinaryOp<ushort> lookup<ushort>(ComparisonKind:byte kind)
; lookup_g[16u](ComparisonKind~8u)[601] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 ce ff c9 83 f9 05 0f 87 93 01 00 00 8b c9 48 8d 05 0e 02 00 00 8b 04 88 48 8d 15 de ff ff ff 48 03 c2 ff e0 48 b9 30 8f 3f c7 f7 7f 00 00 e8 e0 ce d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 11 c0 d3 5e 48 b9 00 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 30 e0 15 c7 f7 7f 00 00 48 89 4e 20 e9 30 01 00 00 48 b9 30 8f 3f c7 f7 7f 00 00 e8 a1 ce d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 d2 bf d3 5e 48 b9 00 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 e0 df 15 c7 f7 7f 00 00 48 89 4e 20 e9 f1 00 00 00 48 b9 30 8f 3f c7 f7 7f 00 00 e8 62 ce d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 93 bf d3 5e 48 b9 00 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 20 e0 15 c7 f7 7f 00 00 48 89 4e 20 e9 b2 00 00 00 48 b9 30 8f 3f c7 f7 7f 00 00 e8 23 ce d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 54 bf d3 5e 48 b9 00 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 10 e0 15 c7 f7 7f 00 00 48 89 4e 20 eb 76 48 b9 30 8f 3f c7 f7 7f 00 00 e8 e7 cd d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 18 bf d3 5e 48 b9 00 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 00 e0 15 c7 f7 7f 00 00 48 89 4e 20 eb 3a 48 b9 30 8f 3f c7 f7 7f 00 00 e8 ab cd d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 dc be d3 5e 48 b8 00 e3 25 c6 f7 7f 00 00 48 89 46 18 48 b8 f0 df 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 30 c7 3c c7 f7 7f 00 00 e8 65 cd d3 5e 48 8b f8 40 88 77 08 48 b9 38 87 35 c6 f7 7f 00 00 e8 8f 50 ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 3d cd d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 26 66 e6 5e 48 8b e8 48 8b ce e8 fb 8c 23 ff 8b c8 e8 5c 64 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 8e a1 21 ff 48 8b d0 48 8b cb e8 4b f0 23 ff 48 8b cb e8 43 19 cb 5e cc 00 00 27 00 00 00 a5 00 00 00 e4 00 00 00 20 01 00 00 5c 01 00 00 66 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx ecx,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 ce}
000eh dec ecx                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c9}
0010h cmp ecx,5                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f9 05}
0013h ja near ptr 01ach                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 93 01 00 00}
0019h mov ecx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c9}
001bh lea rax,[rip+20eh]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 0e 02 00 00}
0022h mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0025h lea rdx,[rip-22h]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 15 de ff ff ff}
002ch add rax,rdx                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 c2}
002fh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
0031h mov rcx,7ff7c73f8f30h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 8f 3f c7 f7 7f 00 00}
003bh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e0 ce d3 5e}
0040h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0043h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0047h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
004ah call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 11 c0 d3 5e}
004fh mov rcx,7ff7c625e300h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e3 25 c6 f7 7f 00 00}
0059h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
005dh mov rcx,7ff7c715e030h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 e0 15 c7 f7 7f 00 00}
0067h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
006bh jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 30 01 00 00}
0070h mov rcx,7ff7c73f8f30h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 8f 3f c7 f7 7f 00 00}
007ah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a1 ce d3 5e}
007fh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0082h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0086h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0089h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d2 bf d3 5e}
008eh mov rcx,7ff7c625e300h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e3 25 c6 f7 7f 00 00}
0098h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
009ch mov rcx,7ff7c715dfe0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e0 df 15 c7 f7 7f 00 00}
00a6h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00aah jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f1 00 00 00}
00afh mov rcx,7ff7c73f8f30h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 8f 3f c7 f7 7f 00 00}
00b9h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 62 ce d3 5e}
00beh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00c1h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
00c5h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
00c8h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 93 bf d3 5e}
00cdh mov rcx,7ff7c625e300h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e3 25 c6 f7 7f 00 00}
00d7h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
00dbh mov rcx,7ff7c715e020h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 e0 15 c7 f7 7f 00 00}
00e5h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00e9h jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b2 00 00 00}
00eeh mov rcx,7ff7c73f8f30h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 8f 3f c7 f7 7f 00 00}
00f8h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 23 ce d3 5e}
00fdh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0100h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0104h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0107h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 54 bf d3 5e}
010ch mov rcx,7ff7c625e300h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e3 25 c6 f7 7f 00 00}
0116h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
011ah mov rcx,7ff7c715e010h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 10 e0 15 c7 f7 7f 00 00}
0124h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0128h jmp short 01a0h                         ; JMP rel8 || EB cb || encoded[2]{eb 76}
012ah mov rcx,7ff7c73f8f30h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 8f 3f c7 f7 7f 00 00}
0134h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e7 cd d3 5e}
0139h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
013ch lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0140h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0143h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 18 bf d3 5e}
0148h mov rcx,7ff7c625e300h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e3 25 c6 f7 7f 00 00}
0152h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0156h mov rcx,7ff7c715e000h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e0 15 c7 f7 7f 00 00}
0160h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0164h jmp short 01a0h                         ; JMP rel8 || EB cb || encoded[2]{eb 3a}
0166h mov rcx,7ff7c73f8f30h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 8f 3f c7 f7 7f 00 00}
0170h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ab cd d3 5e}
0175h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0178h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
017ch mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
017fh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 dc be d3 5e}
0184h mov rax,7ff7c625e300h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 00 e3 25 c6 f7 7f 00 00}
018eh mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0192h mov rax,7ff7c715dff0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 f0 df 15 c7 f7 7f 00 00}
019ch mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
01a0h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
01a3h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
01a7h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
01a8h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
01a9h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
01aah pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
01abh ret                                     ; RET || C3 || encoded[1]{c3}
01ach mov rcx,7ff7c73cc730h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 c7 3c c7 f7 7f 00 00}
01b6h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 65 cd d3 5e}
01bbh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
01beh mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
01c2h mov rcx,7ff7c6358738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 38 87 35 c6 f7 7f 00 00}
01cch call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 8f 50 ce 5e}
01d1h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
01d4h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
01deh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3d cd d3 5e}
01e3h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
01e6h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
01ebh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
01f5h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 26 66 e6 5e}
01fah mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
01fdh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0200h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fb 8c 23 ff}
0205h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0207h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5c 64 23 ff}
020ch mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
020fh mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0212h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0215h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 8e a1 21 ff}
021ah mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
021dh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0220h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 4b f0 23 ff}
0225h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0228h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 43 19 cb 5e}
022dh int 3                                   ; INT3 || CC || encoded[1]{cc}
022eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0230h (bad)                                   ; <invalid> || <invalid> || encoded[2]{27 00}
0232h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0234h movsd                                   ; MOVSD || o32 A5 || encoded[1]{a5}
0235h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0237h add ah,ah                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 e4}
0239h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
023bh add [rax],ah                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 20}
023dh add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
023fh add [rcx+rax],bl                        ; ADD r/m8, r8 || 00 /r || encoded[4]{00 5c 01 00}
0243h add [rsi],ah                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 66 00}
0246h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0248h sbb [rax],ecx                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 08}
024ah add eax,4420800h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 08 42 04}
024fh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0251h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
0252h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
0255h jo short 0257h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
0257h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; BinaryOp<short> lookup<short>(ComparisonKind:byte kind)
; lookup_g[16i](ComparisonKind~8u)[601] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 ce ff c9 83 f9 05 0f 87 93 01 00 00 8b c9 48 8d 05 0e 02 00 00 8b 04 88 48 8d 15 de ff ff ff 48 03 c2 ff e0 48 b9 40 91 3f c7 f7 7f 00 00 e8 70 cc d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 a1 bd d3 5e 48 b9 40 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 e8 e7 15 c7 f7 7f 00 00 48 89 4e 20 e9 30 01 00 00 48 b9 40 91 3f c7 f7 7f 00 00 e8 31 cc d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 62 bd d3 5e 48 b9 40 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 80 e0 15 c7 f7 7f 00 00 48 89 4e 20 e9 f1 00 00 00 48 b9 40 91 3f c7 f7 7f 00 00 e8 f2 cb d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 23 bd d3 5e 48 b9 40 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 c0 e0 15 c7 f7 7f 00 00 48 89 4e 20 e9 b2 00 00 00 48 b9 40 91 3f c7 f7 7f 00 00 e8 b3 cb d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 e4 bc d3 5e 48 b9 40 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 b0 e0 15 c7 f7 7f 00 00 48 89 4e 20 eb 76 48 b9 40 91 3f c7 f7 7f 00 00 e8 77 cb d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 a8 bc d3 5e 48 b9 40 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 a0 e0 15 c7 f7 7f 00 00 48 89 4e 20 eb 3a 48 b9 40 91 3f c7 f7 7f 00 00 e8 3b cb d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 6c bc d3 5e 48 b8 40 e3 25 c6 f7 7f 00 00 48 89 46 18 48 b8 90 e0 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 30 c7 3c c7 f7 7f 00 00 e8 f5 ca d3 5e 48 8b f8 40 88 77 08 48 b9 48 7f 35 c6 f7 7f 00 00 e8 1f 4e ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 cd ca d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 b6 63 e6 5e 48 8b e8 48 8b ce e8 8b 8a 23 ff 8b c8 e8 ec 61 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 1e 9f 21 ff 48 8b d0 48 8b cb e8 db ed 23 ff 48 8b cb e8 d3 16 cb 5e cc 00 00 27 00 00 00 a5 00 00 00 e4 00 00 00 20 01 00 00 5c 01 00 00 66 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx ecx,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 ce}
000eh dec ecx                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c9}
0010h cmp ecx,5                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f9 05}
0013h ja near ptr 01ach                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 93 01 00 00}
0019h mov ecx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c9}
001bh lea rax,[rip+20eh]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 0e 02 00 00}
0022h mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0025h lea rdx,[rip-22h]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 15 de ff ff ff}
002ch add rax,rdx                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 c2}
002fh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
0031h mov rcx,7ff7c73f9140h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 91 3f c7 f7 7f 00 00}
003bh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 70 cc d3 5e}
0040h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0043h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0047h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
004ah call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a1 bd d3 5e}
004fh mov rcx,7ff7c625e340h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e3 25 c6 f7 7f 00 00}
0059h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
005dh mov rcx,7ff7c715e7e8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e8 e7 15 c7 f7 7f 00 00}
0067h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
006bh jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 30 01 00 00}
0070h mov rcx,7ff7c73f9140h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 91 3f c7 f7 7f 00 00}
007ah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 31 cc d3 5e}
007fh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0082h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0086h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0089h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 62 bd d3 5e}
008eh mov rcx,7ff7c625e340h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e3 25 c6 f7 7f 00 00}
0098h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
009ch mov rcx,7ff7c715e080h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 e0 15 c7 f7 7f 00 00}
00a6h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00aah jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f1 00 00 00}
00afh mov rcx,7ff7c73f9140h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 91 3f c7 f7 7f 00 00}
00b9h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f2 cb d3 5e}
00beh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00c1h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
00c5h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
00c8h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 23 bd d3 5e}
00cdh mov rcx,7ff7c625e340h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e3 25 c6 f7 7f 00 00}
00d7h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
00dbh mov rcx,7ff7c715e0c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e0 15 c7 f7 7f 00 00}
00e5h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00e9h jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b2 00 00 00}
00eeh mov rcx,7ff7c73f9140h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 91 3f c7 f7 7f 00 00}
00f8h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b3 cb d3 5e}
00fdh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0100h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0104h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0107h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e4 bc d3 5e}
010ch mov rcx,7ff7c625e340h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e3 25 c6 f7 7f 00 00}
0116h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
011ah mov rcx,7ff7c715e0b0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 b0 e0 15 c7 f7 7f 00 00}
0124h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0128h jmp short 01a0h                         ; JMP rel8 || EB cb || encoded[2]{eb 76}
012ah mov rcx,7ff7c73f9140h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 91 3f c7 f7 7f 00 00}
0134h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 77 cb d3 5e}
0139h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
013ch lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0140h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0143h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a8 bc d3 5e}
0148h mov rcx,7ff7c625e340h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e3 25 c6 f7 7f 00 00}
0152h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0156h mov rcx,7ff7c715e0a0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 a0 e0 15 c7 f7 7f 00 00}
0160h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0164h jmp short 01a0h                         ; JMP rel8 || EB cb || encoded[2]{eb 3a}
0166h mov rcx,7ff7c73f9140h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 91 3f c7 f7 7f 00 00}
0170h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3b cb d3 5e}
0175h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0178h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
017ch mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
017fh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6c bc d3 5e}
0184h mov rax,7ff7c625e340h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 40 e3 25 c6 f7 7f 00 00}
018eh mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0192h mov rax,7ff7c715e090h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 90 e0 15 c7 f7 7f 00 00}
019ch mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
01a0h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
01a3h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
01a7h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
01a8h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
01a9h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
01aah pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
01abh ret                                     ; RET || C3 || encoded[1]{c3}
01ach mov rcx,7ff7c73cc730h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 c7 3c c7 f7 7f 00 00}
01b6h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f5 ca d3 5e}
01bbh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
01beh mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
01c2h mov rcx,7ff7c6357f48h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 48 7f 35 c6 f7 7f 00 00}
01cch call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1f 4e ce 5e}
01d1h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
01d4h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
01deh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 cd ca d3 5e}
01e3h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
01e6h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
01ebh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
01f5h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b6 63 e6 5e}
01fah mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
01fdh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0200h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 8b 8a 23 ff}
0205h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0207h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ec 61 23 ff}
020ch mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
020fh mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0212h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0215h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1e 9f 21 ff}
021ah mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
021dh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0220h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 db ed 23 ff}
0225h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0228h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d3 16 cb 5e}
022dh int 3                                   ; INT3 || CC || encoded[1]{cc}
022eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0230h (bad)                                   ; <invalid> || <invalid> || encoded[2]{27 00}
0232h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0234h movsd                                   ; MOVSD || o32 A5 || encoded[1]{a5}
0235h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0237h add ah,ah                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 e4}
0239h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
023bh add [rax],ah                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 20}
023dh add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
023fh add [rcx+rax],bl                        ; ADD r/m8, r8 || 00 /r || encoded[4]{00 5c 01 00}
0243h add [rsi],ah                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 66 00}
0246h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0248h sbb [rax],ecx                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 08}
024ah add eax,4420800h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 08 42 04}
024fh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0251h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
0252h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
0255h jo short 0257h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
0257h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; BinaryOp<uint> lookup<uint>(ComparisonKind:byte kind)
; lookup_g[32u](ComparisonKind~8u)[601] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 ce ff c9 83 f9 05 0f 87 93 01 00 00 8b c9 48 8d 05 0e 02 00 00 8b 04 88 48 8d 15 de ff ff ff 48 03 c2 ff e0 48 b9 50 93 3f c7 f7 7f 00 00 e8 00 ca d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 31 bb d3 5e 48 b9 80 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 88 e8 15 c7 f7 7f 00 00 48 89 4e 20 e9 30 01 00 00 48 b9 50 93 3f c7 f7 7f 00 00 e8 c1 c9 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 f2 ba d3 5e 48 b9 80 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 38 e8 15 c7 f7 7f 00 00 48 89 4e 20 e9 f1 00 00 00 48 b9 50 93 3f c7 f7 7f 00 00 e8 82 c9 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 b3 ba d3 5e 48 b9 80 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 78 e8 15 c7 f7 7f 00 00 48 89 4e 20 e9 b2 00 00 00 48 b9 50 93 3f c7 f7 7f 00 00 e8 43 c9 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 74 ba d3 5e 48 b9 80 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 68 e8 15 c7 f7 7f 00 00 48 89 4e 20 eb 76 48 b9 50 93 3f c7 f7 7f 00 00 e8 07 c9 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 38 ba d3 5e 48 b9 80 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 58 e8 15 c7 f7 7f 00 00 48 89 4e 20 eb 3a 48 b9 50 93 3f c7 f7 7f 00 00 e8 cb c8 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 fc b9 d3 5e 48 b8 80 e3 25 c6 f7 7f 00 00 48 89 46 18 48 b8 48 e8 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 30 c7 3c c7 f7 7f 00 00 e8 85 c8 d3 5e 48 8b f8 40 88 77 08 48 b9 d8 96 35 c6 f7 7f 00 00 e8 af 4b ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 5d c8 d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 46 61 e6 5e 48 8b e8 48 8b ce e8 1b 88 23 ff 8b c8 e8 7c 5f 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 ae 9c 21 ff 48 8b d0 48 8b cb e8 6b eb 23 ff 48 8b cb e8 63 14 cb 5e cc 00 00 27 00 00 00 a5 00 00 00 e4 00 00 00 20 01 00 00 5c 01 00 00 66 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx ecx,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 ce}
000eh dec ecx                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c9}
0010h cmp ecx,5                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f9 05}
0013h ja near ptr 01ach                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 93 01 00 00}
0019h mov ecx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c9}
001bh lea rax,[rip+20eh]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 0e 02 00 00}
0022h mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0025h lea rdx,[rip-22h]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 15 de ff ff ff}
002ch add rax,rdx                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 c2}
002fh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
0031h mov rcx,7ff7c73f9350h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 50 93 3f c7 f7 7f 00 00}
003bh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 00 ca d3 5e}
0040h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0043h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0047h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
004ah call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 31 bb d3 5e}
004fh mov rcx,7ff7c625e380h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 e3 25 c6 f7 7f 00 00}
0059h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
005dh mov rcx,7ff7c715e888h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 88 e8 15 c7 f7 7f 00 00}
0067h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
006bh jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 30 01 00 00}
0070h mov rcx,7ff7c73f9350h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 50 93 3f c7 f7 7f 00 00}
007ah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c1 c9 d3 5e}
007fh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0082h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0086h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0089h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f2 ba d3 5e}
008eh mov rcx,7ff7c625e380h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 e3 25 c6 f7 7f 00 00}
0098h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
009ch mov rcx,7ff7c715e838h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 38 e8 15 c7 f7 7f 00 00}
00a6h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00aah jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f1 00 00 00}
00afh mov rcx,7ff7c73f9350h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 50 93 3f c7 f7 7f 00 00}
00b9h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 82 c9 d3 5e}
00beh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00c1h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
00c5h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
00c8h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b3 ba d3 5e}
00cdh mov rcx,7ff7c625e380h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 e3 25 c6 f7 7f 00 00}
00d7h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
00dbh mov rcx,7ff7c715e878h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 78 e8 15 c7 f7 7f 00 00}
00e5h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00e9h jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b2 00 00 00}
00eeh mov rcx,7ff7c73f9350h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 50 93 3f c7 f7 7f 00 00}
00f8h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 43 c9 d3 5e}
00fdh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0100h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0104h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0107h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 74 ba d3 5e}
010ch mov rcx,7ff7c625e380h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 e3 25 c6 f7 7f 00 00}
0116h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
011ah mov rcx,7ff7c715e868h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 68 e8 15 c7 f7 7f 00 00}
0124h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0128h jmp short 01a0h                         ; JMP rel8 || EB cb || encoded[2]{eb 76}
012ah mov rcx,7ff7c73f9350h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 50 93 3f c7 f7 7f 00 00}
0134h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 07 c9 d3 5e}
0139h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
013ch lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0140h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0143h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 38 ba d3 5e}
0148h mov rcx,7ff7c625e380h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 e3 25 c6 f7 7f 00 00}
0152h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0156h mov rcx,7ff7c715e858h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 58 e8 15 c7 f7 7f 00 00}
0160h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0164h jmp short 01a0h                         ; JMP rel8 || EB cb || encoded[2]{eb 3a}
0166h mov rcx,7ff7c73f9350h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 50 93 3f c7 f7 7f 00 00}
0170h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 cb c8 d3 5e}
0175h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0178h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
017ch mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
017fh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fc b9 d3 5e}
0184h mov rax,7ff7c625e380h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 80 e3 25 c6 f7 7f 00 00}
018eh mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0192h mov rax,7ff7c715e848h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 48 e8 15 c7 f7 7f 00 00}
019ch mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
01a0h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
01a3h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
01a7h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
01a8h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
01a9h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
01aah pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
01abh ret                                     ; RET || C3 || encoded[1]{c3}
01ach mov rcx,7ff7c73cc730h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 c7 3c c7 f7 7f 00 00}
01b6h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 85 c8 d3 5e}
01bbh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
01beh mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
01c2h mov rcx,7ff7c63596d8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d8 96 35 c6 f7 7f 00 00}
01cch call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 af 4b ce 5e}
01d1h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
01d4h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
01deh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5d c8 d3 5e}
01e3h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
01e6h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
01ebh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
01f5h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 46 61 e6 5e}
01fah mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
01fdh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0200h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1b 88 23 ff}
0205h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0207h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7c 5f 23 ff}
020ch mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
020fh mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0212h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0215h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ae 9c 21 ff}
021ah mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
021dh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0220h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6b eb 23 ff}
0225h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0228h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 63 14 cb 5e}
022dh int 3                                   ; INT3 || CC || encoded[1]{cc}
022eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0230h (bad)                                   ; <invalid> || <invalid> || encoded[2]{27 00}
0232h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0234h movsd                                   ; MOVSD || o32 A5 || encoded[1]{a5}
0235h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0237h add ah,ah                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 e4}
0239h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
023bh add [rax],ah                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 20}
023dh add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
023fh add [rcx+rax],bl                        ; ADD r/m8, r8 || 00 /r || encoded[4]{00 5c 01 00}
0243h add [rsi],ah                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 66 00}
0246h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0248h sbb [rax],ecx                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 08}
024ah add eax,4420800h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 08 42 04}
024fh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0251h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
0252h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
0255h jo short 0257h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
0257h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; BinaryOp<int> lookup<int>(ComparisonKind:byte kind)
; lookup_g[32i](ComparisonKind~8u)[601] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 ce ff c9 83 f9 05 0f 87 93 01 00 00 8b c9 48 8d 05 0e 02 00 00 8b 04 88 48 8d 15 de ff ff ff 48 03 c2 ff e0 48 b9 60 95 3f c7 f7 7f 00 00 e8 90 c7 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 c1 b8 d3 5e 48 b9 c0 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 28 e9 15 c7 f7 7f 00 00 48 89 4e 20 e9 30 01 00 00 48 b9 60 95 3f c7 f7 7f 00 00 e8 51 c7 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 82 b8 d3 5e 48 b9 c0 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 d8 e8 15 c7 f7 7f 00 00 48 89 4e 20 e9 f1 00 00 00 48 b9 60 95 3f c7 f7 7f 00 00 e8 12 c7 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 43 b8 d3 5e 48 b9 c0 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 18 e9 15 c7 f7 7f 00 00 48 89 4e 20 e9 b2 00 00 00 48 b9 60 95 3f c7 f7 7f 00 00 e8 d3 c6 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 04 b8 d3 5e 48 b9 c0 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 08 e9 15 c7 f7 7f 00 00 48 89 4e 20 eb 76 48 b9 60 95 3f c7 f7 7f 00 00 e8 97 c6 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 c8 b7 d3 5e 48 b9 c0 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 f8 e8 15 c7 f7 7f 00 00 48 89 4e 20 eb 3a 48 b9 60 95 3f c7 f7 7f 00 00 e8 5b c6 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 8c b7 d3 5e 48 b8 c0 e3 25 c6 f7 7f 00 00 48 89 46 18 48 b8 e8 e8 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 30 c7 3c c7 f7 7f 00 00 e8 15 c6 d3 5e 48 8b f8 40 88 77 08 48 b9 08 8f 35 c6 f7 7f 00 00 e8 3f 49 ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 ed c5 d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 d6 5e e6 5e 48 8b e8 48 8b ce e8 ab 85 23 ff 8b c8 e8 0c 5d 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 3e 9a 21 ff 48 8b d0 48 8b cb e8 fb e8 23 ff 48 8b cb e8 f3 11 cb 5e cc 00 00 27 00 00 00 a5 00 00 00 e4 00 00 00 20 01 00 00 5c 01 00 00 66 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx ecx,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 ce}
000eh dec ecx                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c9}
0010h cmp ecx,5                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f9 05}
0013h ja near ptr 01ach                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 93 01 00 00}
0019h mov ecx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c9}
001bh lea rax,[rip+20eh]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 0e 02 00 00}
0022h mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0025h lea rdx,[rip-22h]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 15 de ff ff ff}
002ch add rax,rdx                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 c2}
002fh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
0031h mov rcx,7ff7c73f9560h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 95 3f c7 f7 7f 00 00}
003bh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 90 c7 d3 5e}
0040h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0043h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0047h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
004ah call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c1 b8 d3 5e}
004fh mov rcx,7ff7c625e3c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e3 25 c6 f7 7f 00 00}
0059h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
005dh mov rcx,7ff7c715e928h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 28 e9 15 c7 f7 7f 00 00}
0067h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
006bh jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 30 01 00 00}
0070h mov rcx,7ff7c73f9560h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 95 3f c7 f7 7f 00 00}
007ah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 51 c7 d3 5e}
007fh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0082h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0086h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0089h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 82 b8 d3 5e}
008eh mov rcx,7ff7c625e3c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e3 25 c6 f7 7f 00 00}
0098h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
009ch mov rcx,7ff7c715e8d8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d8 e8 15 c7 f7 7f 00 00}
00a6h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00aah jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f1 00 00 00}
00afh mov rcx,7ff7c73f9560h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 95 3f c7 f7 7f 00 00}
00b9h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 12 c7 d3 5e}
00beh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00c1h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
00c5h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
00c8h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 43 b8 d3 5e}
00cdh mov rcx,7ff7c625e3c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e3 25 c6 f7 7f 00 00}
00d7h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
00dbh mov rcx,7ff7c715e918h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 18 e9 15 c7 f7 7f 00 00}
00e5h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00e9h jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b2 00 00 00}
00eeh mov rcx,7ff7c73f9560h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 95 3f c7 f7 7f 00 00}
00f8h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d3 c6 d3 5e}
00fdh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0100h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0104h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0107h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 04 b8 d3 5e}
010ch mov rcx,7ff7c625e3c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e3 25 c6 f7 7f 00 00}
0116h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
011ah mov rcx,7ff7c715e908h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 08 e9 15 c7 f7 7f 00 00}
0124h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0128h jmp short 01a0h                         ; JMP rel8 || EB cb || encoded[2]{eb 76}
012ah mov rcx,7ff7c73f9560h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 95 3f c7 f7 7f 00 00}
0134h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 97 c6 d3 5e}
0139h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
013ch lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0140h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0143h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c8 b7 d3 5e}
0148h mov rcx,7ff7c625e3c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e3 25 c6 f7 7f 00 00}
0152h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0156h mov rcx,7ff7c715e8f8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 f8 e8 15 c7 f7 7f 00 00}
0160h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0164h jmp short 01a0h                         ; JMP rel8 || EB cb || encoded[2]{eb 3a}
0166h mov rcx,7ff7c73f9560h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 95 3f c7 f7 7f 00 00}
0170h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5b c6 d3 5e}
0175h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0178h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
017ch mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
017fh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 8c b7 d3 5e}
0184h mov rax,7ff7c625e3c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 c0 e3 25 c6 f7 7f 00 00}
018eh mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0192h mov rax,7ff7c715e8e8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 e8 e8 15 c7 f7 7f 00 00}
019ch mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
01a0h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
01a3h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
01a7h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
01a8h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
01a9h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
01aah pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
01abh ret                                     ; RET || C3 || encoded[1]{c3}
01ach mov rcx,7ff7c73cc730h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 c7 3c c7 f7 7f 00 00}
01b6h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 15 c6 d3 5e}
01bbh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
01beh mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
01c2h mov rcx,7ff7c6358f08h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 08 8f 35 c6 f7 7f 00 00}
01cch call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3f 49 ce 5e}
01d1h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
01d4h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
01deh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ed c5 d3 5e}
01e3h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
01e6h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
01ebh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
01f5h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d6 5e e6 5e}
01fah mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
01fdh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0200h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ab 85 23 ff}
0205h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0207h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0c 5d 23 ff}
020ch mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
020fh mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0212h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0215h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3e 9a 21 ff}
021ah mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
021dh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0220h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fb e8 23 ff}
0225h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0228h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f3 11 cb 5e}
022dh int 3                                   ; INT3 || CC || encoded[1]{cc}
022eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0230h (bad)                                   ; <invalid> || <invalid> || encoded[2]{27 00}
0232h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0234h movsd                                   ; MOVSD || o32 A5 || encoded[1]{a5}
0235h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0237h add ah,ah                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 e4}
0239h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
023bh add [rax],ah                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 20}
023dh add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
023fh add [rcx+rax],bl                        ; ADD r/m8, r8 || 00 /r || encoded[4]{00 5c 01 00}
0243h add [rsi],ah                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 66 00}
0246h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0248h sbb [rax],ecx                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 08}
024ah add eax,4420800h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 08 42 04}
024fh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0251h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
0252h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
0255h jo short 0257h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
0257h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; BinaryOp<ulong> lookup<ulong>(ComparisonKind:byte kind)
; lookup_g[64u](ComparisonKind~8u)[601] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 ce ff c9 83 f9 05 0f 87 93 01 00 00 8b c9 48 8d 05 0e 02 00 00 8b 04 88 48 8d 15 de ff ff ff 48 03 c2 ff e0 48 b9 70 97 3f c7 f7 7f 00 00 e8 20 c5 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 51 b6 d3 5e 48 b9 00 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 c8 e9 15 c7 f7 7f 00 00 48 89 4e 20 e9 30 01 00 00 48 b9 70 97 3f c7 f7 7f 00 00 e8 e1 c4 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 12 b6 d3 5e 48 b9 00 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 78 e9 15 c7 f7 7f 00 00 48 89 4e 20 e9 f1 00 00 00 48 b9 70 97 3f c7 f7 7f 00 00 e8 a2 c4 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 d3 b5 d3 5e 48 b9 00 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 b8 e9 15 c7 f7 7f 00 00 48 89 4e 20 e9 b2 00 00 00 48 b9 70 97 3f c7 f7 7f 00 00 e8 63 c4 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 94 b5 d3 5e 48 b9 00 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 a8 e9 15 c7 f7 7f 00 00 48 89 4e 20 eb 76 48 b9 70 97 3f c7 f7 7f 00 00 e8 27 c4 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 58 b5 d3 5e 48 b9 00 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 98 e9 15 c7 f7 7f 00 00 48 89 4e 20 eb 3a 48 b9 70 97 3f c7 f7 7f 00 00 e8 eb c3 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 1c b5 d3 5e 48 b8 00 e4 25 c6 f7 7f 00 00 48 89 46 18 48 b8 88 e9 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 30 c7 3c c7 f7 7f 00 00 e8 a5 c3 d3 5e 48 8b f8 40 88 77 08 48 b9 78 a6 35 c6 f7 7f 00 00 e8 cf 46 ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 7d c3 d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 66 5c e6 5e 48 8b e8 48 8b ce e8 3b 83 23 ff 8b c8 e8 9c 5a 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 ce 97 21 ff 48 8b d0 48 8b cb e8 8b e6 23 ff 48 8b cb e8 83 0f cb 5e cc 00 00 27 00 00 00 a5 00 00 00 e4 00 00 00 20 01 00 00 5c 01 00 00 66 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx ecx,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 ce}
000eh dec ecx                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c9}
0010h cmp ecx,5                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f9 05}
0013h ja near ptr 01ach                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 93 01 00 00}
0019h mov ecx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c9}
001bh lea rax,[rip+20eh]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 0e 02 00 00}
0022h mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0025h lea rdx,[rip-22h]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 15 de ff ff ff}
002ch add rax,rdx                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 c2}
002fh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
0031h mov rcx,7ff7c73f9770h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 97 3f c7 f7 7f 00 00}
003bh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 20 c5 d3 5e}
0040h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0043h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0047h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
004ah call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 51 b6 d3 5e}
004fh mov rcx,7ff7c625e400h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e4 25 c6 f7 7f 00 00}
0059h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
005dh mov rcx,7ff7c715e9c8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c8 e9 15 c7 f7 7f 00 00}
0067h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
006bh jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 30 01 00 00}
0070h mov rcx,7ff7c73f9770h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 97 3f c7 f7 7f 00 00}
007ah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e1 c4 d3 5e}
007fh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0082h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0086h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0089h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 12 b6 d3 5e}
008eh mov rcx,7ff7c625e400h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e4 25 c6 f7 7f 00 00}
0098h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
009ch mov rcx,7ff7c715e978h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 78 e9 15 c7 f7 7f 00 00}
00a6h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00aah jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f1 00 00 00}
00afh mov rcx,7ff7c73f9770h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 97 3f c7 f7 7f 00 00}
00b9h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a2 c4 d3 5e}
00beh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00c1h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
00c5h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
00c8h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d3 b5 d3 5e}
00cdh mov rcx,7ff7c625e400h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e4 25 c6 f7 7f 00 00}
00d7h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
00dbh mov rcx,7ff7c715e9b8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 b8 e9 15 c7 f7 7f 00 00}
00e5h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00e9h jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b2 00 00 00}
00eeh mov rcx,7ff7c73f9770h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 97 3f c7 f7 7f 00 00}
00f8h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 63 c4 d3 5e}
00fdh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0100h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0104h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0107h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 94 b5 d3 5e}
010ch mov rcx,7ff7c625e400h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e4 25 c6 f7 7f 00 00}
0116h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
011ah mov rcx,7ff7c715e9a8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 a8 e9 15 c7 f7 7f 00 00}
0124h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0128h jmp short 01a0h                         ; JMP rel8 || EB cb || encoded[2]{eb 76}
012ah mov rcx,7ff7c73f9770h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 97 3f c7 f7 7f 00 00}
0134h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 27 c4 d3 5e}
0139h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
013ch lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0140h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0143h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 58 b5 d3 5e}
0148h mov rcx,7ff7c625e400h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e4 25 c6 f7 7f 00 00}
0152h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0156h mov rcx,7ff7c715e998h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 98 e9 15 c7 f7 7f 00 00}
0160h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0164h jmp short 01a0h                         ; JMP rel8 || EB cb || encoded[2]{eb 3a}
0166h mov rcx,7ff7c73f9770h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 97 3f c7 f7 7f 00 00}
0170h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 eb c3 d3 5e}
0175h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0178h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
017ch mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
017fh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1c b5 d3 5e}
0184h mov rax,7ff7c625e400h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 00 e4 25 c6 f7 7f 00 00}
018eh mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0192h mov rax,7ff7c715e988h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 88 e9 15 c7 f7 7f 00 00}
019ch mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
01a0h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
01a3h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
01a7h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
01a8h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
01a9h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
01aah pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
01abh ret                                     ; RET || C3 || encoded[1]{c3}
01ach mov rcx,7ff7c73cc730h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 c7 3c c7 f7 7f 00 00}
01b6h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a5 c3 d3 5e}
01bbh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
01beh mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
01c2h mov rcx,7ff7c635a678h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 78 a6 35 c6 f7 7f 00 00}
01cch call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 cf 46 ce 5e}
01d1h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
01d4h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
01deh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7d c3 d3 5e}
01e3h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
01e6h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
01ebh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
01f5h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 66 5c e6 5e}
01fah mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
01fdh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0200h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3b 83 23 ff}
0205h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0207h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9c 5a 23 ff}
020ch mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
020fh mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0212h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0215h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ce 97 21 ff}
021ah mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
021dh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0220h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 8b e6 23 ff}
0225h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0228h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 83 0f cb 5e}
022dh int 3                                   ; INT3 || CC || encoded[1]{cc}
022eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0230h (bad)                                   ; <invalid> || <invalid> || encoded[2]{27 00}
0232h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0234h movsd                                   ; MOVSD || o32 A5 || encoded[1]{a5}
0235h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0237h add ah,ah                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 e4}
0239h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
023bh add [rax],ah                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 20}
023dh add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
023fh add [rcx+rax],bl                        ; ADD r/m8, r8 || 00 /r || encoded[4]{00 5c 01 00}
0243h add [rsi],ah                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 66 00}
0246h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0248h sbb [rax],ecx                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 08}
024ah add eax,4420800h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 08 42 04}
024fh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0251h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
0252h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
0255h jo short 0257h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
0257h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; BinaryOp<long> lookup<long>(ComparisonKind:byte kind)
; lookup_g[64i](ComparisonKind~8u)[601] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 ce ff c9 83 f9 05 0f 87 93 01 00 00 8b c9 48 8d 05 0e 02 00 00 8b 04 88 48 8d 15 de ff ff ff 48 03 c2 ff e0 48 b9 80 99 3f c7 f7 7f 00 00 e8 b0 c2 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 e1 b3 d3 5e 48 b9 40 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 68 ea 15 c7 f7 7f 00 00 48 89 4e 20 e9 30 01 00 00 48 b9 80 99 3f c7 f7 7f 00 00 e8 71 c2 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 a2 b3 d3 5e 48 b9 40 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 18 ea 15 c7 f7 7f 00 00 48 89 4e 20 e9 f1 00 00 00 48 b9 80 99 3f c7 f7 7f 00 00 e8 32 c2 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 63 b3 d3 5e 48 b9 40 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 58 ea 15 c7 f7 7f 00 00 48 89 4e 20 e9 b2 00 00 00 48 b9 80 99 3f c7 f7 7f 00 00 e8 f3 c1 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 24 b3 d3 5e 48 b9 40 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 48 ea 15 c7 f7 7f 00 00 48 89 4e 20 eb 76 48 b9 80 99 3f c7 f7 7f 00 00 e8 b7 c1 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 e8 b2 d3 5e 48 b9 40 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 38 ea 15 c7 f7 7f 00 00 48 89 4e 20 eb 3a 48 b9 80 99 3f c7 f7 7f 00 00 e8 7b c1 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 ac b2 d3 5e 48 b8 40 e4 25 c6 f7 7f 00 00 48 89 46 18 48 b8 28 ea 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 30 c7 3c c7 f7 7f 00 00 e8 35 c1 d3 5e 48 8b f8 40 88 77 08 48 b9 a8 9e 35 c6 f7 7f 00 00 e8 5f 44 ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 0d c1 d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 f6 59 e6 5e 48 8b e8 48 8b ce e8 cb 80 23 ff 8b c8 e8 2c 58 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 5e 95 21 ff 48 8b d0 48 8b cb e8 1b e4 23 ff 48 8b cb e8 13 0d cb 5e cc 00 00 27 00 00 00 a5 00 00 00 e4 00 00 00 20 01 00 00 5c 01 00 00 66 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx ecx,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 ce}
000eh dec ecx                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c9}
0010h cmp ecx,5                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f9 05}
0013h ja near ptr 01ach                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 93 01 00 00}
0019h mov ecx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c9}
001bh lea rax,[rip+20eh]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 0e 02 00 00}
0022h mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0025h lea rdx,[rip-22h]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 15 de ff ff ff}
002ch add rax,rdx                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 c2}
002fh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
0031h mov rcx,7ff7c73f9980h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 99 3f c7 f7 7f 00 00}
003bh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b0 c2 d3 5e}
0040h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0043h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0047h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
004ah call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e1 b3 d3 5e}
004fh mov rcx,7ff7c625e440h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e4 25 c6 f7 7f 00 00}
0059h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
005dh mov rcx,7ff7c715ea68h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 68 ea 15 c7 f7 7f 00 00}
0067h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
006bh jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 30 01 00 00}
0070h mov rcx,7ff7c73f9980h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 99 3f c7 f7 7f 00 00}
007ah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 71 c2 d3 5e}
007fh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0082h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0086h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0089h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a2 b3 d3 5e}
008eh mov rcx,7ff7c625e440h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e4 25 c6 f7 7f 00 00}
0098h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
009ch mov rcx,7ff7c715ea18h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 18 ea 15 c7 f7 7f 00 00}
00a6h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00aah jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f1 00 00 00}
00afh mov rcx,7ff7c73f9980h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 99 3f c7 f7 7f 00 00}
00b9h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 32 c2 d3 5e}
00beh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00c1h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
00c5h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
00c8h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 63 b3 d3 5e}
00cdh mov rcx,7ff7c625e440h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e4 25 c6 f7 7f 00 00}
00d7h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
00dbh mov rcx,7ff7c715ea58h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 58 ea 15 c7 f7 7f 00 00}
00e5h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00e9h jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b2 00 00 00}
00eeh mov rcx,7ff7c73f9980h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 99 3f c7 f7 7f 00 00}
00f8h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f3 c1 d3 5e}
00fdh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0100h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0104h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0107h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 24 b3 d3 5e}
010ch mov rcx,7ff7c625e440h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e4 25 c6 f7 7f 00 00}
0116h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
011ah mov rcx,7ff7c715ea48h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 48 ea 15 c7 f7 7f 00 00}
0124h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0128h jmp short 01a0h                         ; JMP rel8 || EB cb || encoded[2]{eb 76}
012ah mov rcx,7ff7c73f9980h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 99 3f c7 f7 7f 00 00}
0134h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b7 c1 d3 5e}
0139h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
013ch lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0140h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0143h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e8 b2 d3 5e}
0148h mov rcx,7ff7c625e440h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e4 25 c6 f7 7f 00 00}
0152h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0156h mov rcx,7ff7c715ea38h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 38 ea 15 c7 f7 7f 00 00}
0160h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0164h jmp short 01a0h                         ; JMP rel8 || EB cb || encoded[2]{eb 3a}
0166h mov rcx,7ff7c73f9980h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 99 3f c7 f7 7f 00 00}
0170h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7b c1 d3 5e}
0175h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0178h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
017ch mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
017fh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ac b2 d3 5e}
0184h mov rax,7ff7c625e440h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 40 e4 25 c6 f7 7f 00 00}
018eh mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0192h mov rax,7ff7c715ea28h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 28 ea 15 c7 f7 7f 00 00}
019ch mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
01a0h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
01a3h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
01a7h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
01a8h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
01a9h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
01aah pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
01abh ret                                     ; RET || C3 || encoded[1]{c3}
01ach mov rcx,7ff7c73cc730h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 c7 3c c7 f7 7f 00 00}
01b6h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 35 c1 d3 5e}
01bbh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
01beh mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
01c2h mov rcx,7ff7c6359ea8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 a8 9e 35 c6 f7 7f 00 00}
01cch call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5f 44 ce 5e}
01d1h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
01d4h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
01deh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0d c1 d3 5e}
01e3h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
01e6h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
01ebh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
01f5h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f6 59 e6 5e}
01fah mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
01fdh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0200h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 cb 80 23 ff}
0205h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0207h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2c 58 23 ff}
020ch mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
020fh mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0212h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0215h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5e 95 21 ff}
021ah mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
021dh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0220h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1b e4 23 ff}
0225h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0228h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 13 0d cb 5e}
022dh int 3                                   ; INT3 || CC || encoded[1]{cc}
022eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0230h (bad)                                   ; <invalid> || <invalid> || encoded[2]{27 00}
0232h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0234h movsd                                   ; MOVSD || o32 A5 || encoded[1]{a5}
0235h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0237h add ah,ah                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 e4}
0239h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
023bh add [rax],ah                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 20}
023dh add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
023fh add [rcx+rax],bl                        ; ADD r/m8, r8 || 00 /r || encoded[4]{00 5c 01 00}
0243h add [rsi],ah                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 66 00}
0246h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0248h sbb [rax],ecx                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 08}
024ah add eax,4420800h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 08 42 04}
024fh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0251h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
0252h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
0255h jo short 0257h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
0257h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; BinaryOp<float> lookup<float>(ComparisonKind:byte kind)
; lookup_g[32f](ComparisonKind~8u)[601] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 ce ff c9 83 f9 05 0f 87 93 01 00 00 8b c9 48 8d 05 0e 02 00 00 8b 04 88 48 8d 15 de ff ff ff 48 03 c2 ff e0 48 b9 90 9b 3f c7 f7 7f 00 00 e8 40 bc d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 71 ad d3 5e 48 b9 80 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 28 ac 16 c7 f7 7f 00 00 48 89 4e 20 e9 30 01 00 00 48 b9 90 9b 3f c7 f7 7f 00 00 e8 01 bc d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 32 ad d3 5e 48 b9 80 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 28 92 16 c7 f7 7f 00 00 48 89 4e 20 e9 f1 00 00 00 48 b9 90 9b 3f c7 f7 7f 00 00 e8 c2 bb d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 f3 ac d3 5e 48 b9 80 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 68 92 16 c7 f7 7f 00 00 48 89 4e 20 e9 b2 00 00 00 48 b9 90 9b 3f c7 f7 7f 00 00 e8 83 bb d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 b4 ac d3 5e 48 b9 80 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 58 92 16 c7 f7 7f 00 00 48 89 4e 20 eb 76 48 b9 90 9b 3f c7 f7 7f 00 00 e8 47 bb d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 78 ac d3 5e 48 b9 80 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 48 92 16 c7 f7 7f 00 00 48 89 4e 20 eb 3a 48 b9 90 9b 3f c7 f7 7f 00 00 e8 0b bb d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 3c ac d3 5e 48 b8 80 e4 25 c6 f7 7f 00 00 48 89 46 18 48 b8 38 92 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 30 c7 3c c7 f7 7f 00 00 e8 c5 ba d3 5e 48 8b f8 40 88 77 08 48 b9 58 af 35 c6 f7 7f 00 00 e8 ef 3d ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 9d ba d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 86 53 e6 5e 48 8b e8 48 8b ce e8 5b 7a 23 ff 8b c8 e8 bc 51 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 ee 8e 21 ff 48 8b d0 48 8b cb e8 ab dd 23 ff 48 8b cb e8 a3 06 cb 5e cc 00 00 27 00 00 00 a5 00 00 00 e4 00 00 00 20 01 00 00 5c 01 00 00 66 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx ecx,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 ce}
000eh dec ecx                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c9}
0010h cmp ecx,5                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f9 05}
0013h ja near ptr 01ach                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 93 01 00 00}
0019h mov ecx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c9}
001bh lea rax,[rip+20eh]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 0e 02 00 00}
0022h mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0025h lea rdx,[rip-22h]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 15 de ff ff ff}
002ch add rax,rdx                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 c2}
002fh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
0031h mov rcx,7ff7c73f9b90h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 90 9b 3f c7 f7 7f 00 00}
003bh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 40 bc d3 5e}
0040h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0043h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0047h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
004ah call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 71 ad d3 5e}
004fh mov rcx,7ff7c625e480h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 e4 25 c6 f7 7f 00 00}
0059h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
005dh mov rcx,7ff7c716ac28h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 28 ac 16 c7 f7 7f 00 00}
0067h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
006bh jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 30 01 00 00}
0070h mov rcx,7ff7c73f9b90h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 90 9b 3f c7 f7 7f 00 00}
007ah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 01 bc d3 5e}
007fh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0082h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0086h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0089h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 32 ad d3 5e}
008eh mov rcx,7ff7c625e480h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 e4 25 c6 f7 7f 00 00}
0098h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
009ch mov rcx,7ff7c7169228h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 28 92 16 c7 f7 7f 00 00}
00a6h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00aah jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f1 00 00 00}
00afh mov rcx,7ff7c73f9b90h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 90 9b 3f c7 f7 7f 00 00}
00b9h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c2 bb d3 5e}
00beh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00c1h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
00c5h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
00c8h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f3 ac d3 5e}
00cdh mov rcx,7ff7c625e480h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 e4 25 c6 f7 7f 00 00}
00d7h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
00dbh mov rcx,7ff7c7169268h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 68 92 16 c7 f7 7f 00 00}
00e5h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00e9h jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b2 00 00 00}
00eeh mov rcx,7ff7c73f9b90h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 90 9b 3f c7 f7 7f 00 00}
00f8h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 83 bb d3 5e}
00fdh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0100h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0104h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0107h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b4 ac d3 5e}
010ch mov rcx,7ff7c625e480h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 e4 25 c6 f7 7f 00 00}
0116h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
011ah mov rcx,7ff7c7169258h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 58 92 16 c7 f7 7f 00 00}
0124h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0128h jmp short 01a0h                         ; JMP rel8 || EB cb || encoded[2]{eb 76}
012ah mov rcx,7ff7c73f9b90h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 90 9b 3f c7 f7 7f 00 00}
0134h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 47 bb d3 5e}
0139h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
013ch lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0140h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0143h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 78 ac d3 5e}
0148h mov rcx,7ff7c625e480h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 e4 25 c6 f7 7f 00 00}
0152h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0156h mov rcx,7ff7c7169248h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 48 92 16 c7 f7 7f 00 00}
0160h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0164h jmp short 01a0h                         ; JMP rel8 || EB cb || encoded[2]{eb 3a}
0166h mov rcx,7ff7c73f9b90h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 90 9b 3f c7 f7 7f 00 00}
0170h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0b bb d3 5e}
0175h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0178h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
017ch mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
017fh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3c ac d3 5e}
0184h mov rax,7ff7c625e480h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 80 e4 25 c6 f7 7f 00 00}
018eh mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0192h mov rax,7ff7c7169238h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 38 92 16 c7 f7 7f 00 00}
019ch mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
01a0h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
01a3h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
01a7h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
01a8h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
01a9h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
01aah pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
01abh ret                                     ; RET || C3 || encoded[1]{c3}
01ach mov rcx,7ff7c73cc730h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 c7 3c c7 f7 7f 00 00}
01b6h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c5 ba d3 5e}
01bbh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
01beh mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
01c2h mov rcx,7ff7c635af58h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 58 af 35 c6 f7 7f 00 00}
01cch call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ef 3d ce 5e}
01d1h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
01d4h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
01deh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9d ba d3 5e}
01e3h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
01e6h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
01ebh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
01f5h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 86 53 e6 5e}
01fah mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
01fdh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0200h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5b 7a 23 ff}
0205h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0207h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bc 51 23 ff}
020ch mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
020fh mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0212h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0215h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ee 8e 21 ff}
021ah mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
021dh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0220h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ab dd 23 ff}
0225h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0228h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a3 06 cb 5e}
022dh int 3                                   ; INT3 || CC || encoded[1]{cc}
022eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0230h (bad)                                   ; <invalid> || <invalid> || encoded[2]{27 00}
0232h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0234h movsd                                   ; MOVSD || o32 A5 || encoded[1]{a5}
0235h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0237h add ah,ah                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 e4}
0239h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
023bh add [rax],ah                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 20}
023dh add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
023fh add [rcx+rax],bl                        ; ADD r/m8, r8 || 00 /r || encoded[4]{00 5c 01 00}
0243h add [rsi],ah                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 66 00}
0246h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0248h sbb [rax],ecx                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 08}
024ah add eax,4420800h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 08 42 04}
024fh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0251h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
0252h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
0255h jo short 0257h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
0257h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; BinaryOp<double> lookup<double>(ComparisonKind:byte kind)
; lookup_g[64f](ComparisonKind~8u)[601] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 ce ff c9 83 f9 05 0f 87 93 01 00 00 8b c9 48 8d 05 0e 02 00 00 8b 04 88 48 8d 15 de ff ff ff 48 03 c2 ff e0 48 b9 40 a0 3f c7 f7 7f 00 00 e8 d0 b9 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 01 ab d3 5e 48 b9 c0 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 d0 ac 16 c7 f7 7f 00 00 48 89 4e 20 e9 30 01 00 00 48 b9 40 a0 3f c7 f7 7f 00 00 e8 91 b9 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 c2 aa d3 5e 48 b9 c0 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 80 ac 16 c7 f7 7f 00 00 48 89 4e 20 e9 f1 00 00 00 48 b9 40 a0 3f c7 f7 7f 00 00 e8 52 b9 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 83 aa d3 5e 48 b9 c0 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 c0 ac 16 c7 f7 7f 00 00 48 89 4e 20 e9 b2 00 00 00 48 b9 40 a0 3f c7 f7 7f 00 00 e8 13 b9 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 44 aa d3 5e 48 b9 c0 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 b0 ac 16 c7 f7 7f 00 00 48 89 4e 20 eb 76 48 b9 40 a0 3f c7 f7 7f 00 00 e8 d7 b8 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 08 aa d3 5e 48 b9 c0 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 a0 ac 16 c7 f7 7f 00 00 48 89 4e 20 eb 3a 48 b9 40 a0 3f c7 f7 7f 00 00 e8 9b b8 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 cc a9 d3 5e 48 b8 c0 e4 25 c6 f7 7f 00 00 48 89 46 18 48 b8 90 ac 16 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 30 c7 3c c7 f7 7f 00 00 e8 55 b8 d3 5e 48 8b f8 40 88 77 08 48 b9 38 b8 35 c6 f7 7f 00 00 e8 7f 3b ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 2d b8 d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 16 51 e6 5e 48 8b e8 48 8b ce e8 eb 77 23 ff 8b c8 e8 4c 4f 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 7e 8c 21 ff 48 8b d0 48 8b cb e8 3b db 23 ff 48 8b cb e8 33 04 cb 5e cc 00 00 27 00 00 00 a5 00 00 00 e4 00 00 00 20 01 00 00 5c 01 00 00 66 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx ecx,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 ce}
000eh dec ecx                                 ; DEC r/m32 || o32 FF /1 || encoded[2]{ff c9}
0010h cmp ecx,5                               ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f9 05}
0013h ja near ptr 01ach                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 93 01 00 00}
0019h mov ecx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c9}
001bh lea rax,[rip+20eh]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 0e 02 00 00}
0022h mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0025h lea rdx,[rip-22h]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 15 de ff ff ff}
002ch add rax,rdx                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 c2}
002fh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
0031h mov rcx,7ff7c73fa040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 a0 3f c7 f7 7f 00 00}
003bh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d0 b9 d3 5e}
0040h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0043h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0047h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
004ah call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 01 ab d3 5e}
004fh mov rcx,7ff7c625e4c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e4 25 c6 f7 7f 00 00}
0059h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
005dh mov rcx,7ff7c716acd0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d0 ac 16 c7 f7 7f 00 00}
0067h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
006bh jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 30 01 00 00}
0070h mov rcx,7ff7c73fa040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 a0 3f c7 f7 7f 00 00}
007ah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 91 b9 d3 5e}
007fh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0082h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0086h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0089h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c2 aa d3 5e}
008eh mov rcx,7ff7c625e4c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e4 25 c6 f7 7f 00 00}
0098h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
009ch mov rcx,7ff7c716ac80h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 ac 16 c7 f7 7f 00 00}
00a6h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00aah jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f1 00 00 00}
00afh mov rcx,7ff7c73fa040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 a0 3f c7 f7 7f 00 00}
00b9h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 52 b9 d3 5e}
00beh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00c1h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
00c5h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
00c8h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 83 aa d3 5e}
00cdh mov rcx,7ff7c625e4c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e4 25 c6 f7 7f 00 00}
00d7h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
00dbh mov rcx,7ff7c716acc0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 ac 16 c7 f7 7f 00 00}
00e5h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00e9h jmp near ptr 01a0h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b2 00 00 00}
00eeh mov rcx,7ff7c73fa040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 a0 3f c7 f7 7f 00 00}
00f8h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 13 b9 d3 5e}
00fdh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0100h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0104h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0107h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 44 aa d3 5e}
010ch mov rcx,7ff7c625e4c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e4 25 c6 f7 7f 00 00}
0116h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
011ah mov rcx,7ff7c716acb0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 b0 ac 16 c7 f7 7f 00 00}
0124h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0128h jmp short 01a0h                         ; JMP rel8 || EB cb || encoded[2]{eb 76}
012ah mov rcx,7ff7c73fa040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 a0 3f c7 f7 7f 00 00}
0134h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d7 b8 d3 5e}
0139h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
013ch lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0140h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0143h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 08 aa d3 5e}
0148h mov rcx,7ff7c625e4c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e4 25 c6 f7 7f 00 00}
0152h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0156h mov rcx,7ff7c716aca0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 a0 ac 16 c7 f7 7f 00 00}
0160h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0164h jmp short 01a0h                         ; JMP rel8 || EB cb || encoded[2]{eb 3a}
0166h mov rcx,7ff7c73fa040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 a0 3f c7 f7 7f 00 00}
0170h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9b b8 d3 5e}
0175h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0178h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
017ch mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
017fh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 cc a9 d3 5e}
0184h mov rax,7ff7c625e4c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 c0 e4 25 c6 f7 7f 00 00}
018eh mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0192h mov rax,7ff7c716ac90h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 90 ac 16 c7 f7 7f 00 00}
019ch mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
01a0h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
01a3h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
01a7h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
01a8h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
01a9h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
01aah pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
01abh ret                                     ; RET || C3 || encoded[1]{c3}
01ach mov rcx,7ff7c73cc730h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 c7 3c c7 f7 7f 00 00}
01b6h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 55 b8 d3 5e}
01bbh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
01beh mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
01c2h mov rcx,7ff7c635b838h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 38 b8 35 c6 f7 7f 00 00}
01cch call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7f 3b ce 5e}
01d1h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
01d4h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
01deh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2d b8 d3 5e}
01e3h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
01e6h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
01ebh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
01f5h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 16 51 e6 5e}
01fah mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
01fdh mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0200h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 eb 77 23 ff}
0205h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0207h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 4c 4f 23 ff}
020ch mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
020fh mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0212h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0215h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7e 8c 21 ff}
021ah mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
021dh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0220h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3b db 23 ff}
0225h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0228h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 33 04 cb 5e}
022dh int 3                                   ; INT3 || CC || encoded[1]{cc}
022eh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0230h (bad)                                   ; <invalid> || <invalid> || encoded[2]{27 00}
0232h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0234h movsd                                   ; MOVSD || o32 A5 || encoded[1]{a5}
0235h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0237h add ah,ah                               ; ADD r/m8, r8 || 00 /r || encoded[2]{00 e4}
0239h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
023bh add [rax],ah                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 20}
023dh add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
023fh add [rcx+rax],bl                        ; ADD r/m8, r8 || 00 /r || encoded[4]{00 5c 01 00}
0243h add [rsi],ah                            ; ADD r/m8, r8 || 00 /r || encoded[3]{00 66 00}
0246h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
0248h sbb [rax],ecx                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 08}
024ah add eax,4420800h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 08 42 04}
024fh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0251h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
0252h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
0255h jo short 0257h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
0257h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; UnaryOp<byte> lookup<byte>(UnaryBitLogicKind:byte kind)
; lookup_g[8u](UnaryBitLogicKind~8u)[313] = {57 56 55 53 48 83 ec 28 8b f1 40 80 fe 01 74 50 40 80 fe 02 0f 85 8c 00 00 00 48 b9 a0 a6 3f c7 f7 7f 00 00 e8 77 b7 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 a8 a8 d3 5e 48 b8 00 e5 25 c6 f7 7f 00 00 48 89 46 18 48 b8 00 d1 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 a0 a6 3f c7 f7 7f 00 00 e8 31 b7 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 62 a8 d3 5e 48 b8 00 e5 25 c6 f7 7f 00 00 48 89 46 18 48 b8 e0 d0 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 20 c6 35 c7 f7 7f 00 00 e8 eb b6 d3 5e 48 8b f8 40 88 77 08 48 b9 58 77 35 c6 f7 7f 00 00 e8 15 3a ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 c3 b6 d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 ac 4f e6 5e 48 8b e8 48 8b ce e8 81 76 23 ff 8b c8 e8 e2 4d 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 14 8b 21 ff 48 8b d0 48 8b cb e8 d1 d9 23 ff 48 8b cb e8 c9 02 cb 5e cc 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah cmp sil,1                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 01}
000eh je short 0060h                          ; JE rel8 || 74 cb || encoded[2]{74 50}
0010h cmp sil,2                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 02}
0014h jne near ptr 00a6h                      ; JNE rel32 || 0F 85 cd || encoded[6]{0f 85 8c 00 00 00}
001ah mov rcx,7ff7c73fa6a0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 a0 a6 3f c7 f7 7f 00 00}
0024h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 77 b7 d3 5e}
0029h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
002ch lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0030h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0033h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a8 a8 d3 5e}
0038h mov rax,7ff7c625e500h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 00 e5 25 c6 f7 7f 00 00}
0042h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0046h mov rax,7ff7c715d100h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 00 d1 15 c7 f7 7f 00 00}
0050h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0054h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0057h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
005bh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
005ch pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
005dh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
005eh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
005fh ret                                     ; RET || C3 || encoded[1]{c3}
0060h mov rcx,7ff7c73fa6a0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 a0 a6 3f c7 f7 7f 00 00}
006ah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 31 b7 d3 5e}
006fh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0072h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0076h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0079h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 62 a8 d3 5e}
007eh mov rax,7ff7c625e500h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 00 e5 25 c6 f7 7f 00 00}
0088h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
008ch mov rax,7ff7c715d0e0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 e0 d0 15 c7 f7 7f 00 00}
0096h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
009ah mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
009dh add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
00a1h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
00a2h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
00a3h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
00a4h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
00a5h ret                                     ; RET || C3 || encoded[1]{c3}
00a6h mov rcx,7ff7c735c620h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 c6 35 c7 f7 7f 00 00}
00b0h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 eb b6 d3 5e}
00b5h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
00b8h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
00bch mov rcx,7ff7c6357758h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 58 77 35 c6 f7 7f 00 00}
00c6h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 15 3a ce 5e}
00cbh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00ceh mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
00d8h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c3 b6 d3 5e}
00ddh mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
00e0h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
00e5h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
00efh call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ac 4f e6 5e}
00f4h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
00f7h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
00fah call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 81 76 23 ff}
00ffh mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0101h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e2 4d 23 ff}
0106h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0109h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
010ch mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
010fh call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 14 8b 21 ff}
0114h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
0117h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
011ah call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d1 d9 23 ff}
011fh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0122h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c9 02 cb 5e}
0127h int 3                                   ; INT3 || CC || encoded[1]{cc}
0128h sbb [rax],ecx                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 08}
012ah add eax,4420800h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 08 42 04}
012fh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0131h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
0132h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
0135h jo short 0137h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
0137h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; UnaryOp<sbyte> lookup<sbyte>(UnaryBitLogicKind:byte kind)
; lookup_g[8i](UnaryBitLogicKind~8u)[313] = {57 56 55 53 48 83 ec 28 8b f1 40 80 fe 01 74 50 40 80 fe 02 0f 85 8c 00 00 00 48 b9 d0 a9 3f c7 f7 7f 00 00 e8 27 b6 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 58 a7 d3 5e 48 b8 30 e5 25 c6 f7 7f 00 00 48 89 46 18 48 b8 70 d1 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 d0 a9 3f c7 f7 7f 00 00 e8 e1 b5 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 12 a7 d3 5e 48 b8 30 e5 25 c6 f7 7f 00 00 48 89 46 18 48 b8 60 d1 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 20 c6 35 c7 f7 7f 00 00 e8 9b b5 d3 5e 48 8b f8 40 88 77 08 48 b9 68 6f 35 c6 f7 7f 00 00 e8 c5 38 ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 73 b5 d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 5c 4e e6 5e 48 8b e8 48 8b ce e8 31 75 23 ff 8b c8 e8 92 4c 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 c4 89 21 ff 48 8b d0 48 8b cb e8 81 d8 23 ff 48 8b cb e8 79 01 cb 5e cc 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah cmp sil,1                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 01}
000eh je short 0060h                          ; JE rel8 || 74 cb || encoded[2]{74 50}
0010h cmp sil,2                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 02}
0014h jne near ptr 00a6h                      ; JNE rel32 || 0F 85 cd || encoded[6]{0f 85 8c 00 00 00}
001ah mov rcx,7ff7c73fa9d0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d0 a9 3f c7 f7 7f 00 00}
0024h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 27 b6 d3 5e}
0029h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
002ch lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0030h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0033h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 58 a7 d3 5e}
0038h mov rax,7ff7c625e530h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 30 e5 25 c6 f7 7f 00 00}
0042h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0046h mov rax,7ff7c715d170h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 70 d1 15 c7 f7 7f 00 00}
0050h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0054h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0057h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
005bh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
005ch pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
005dh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
005eh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
005fh ret                                     ; RET || C3 || encoded[1]{c3}
0060h mov rcx,7ff7c73fa9d0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d0 a9 3f c7 f7 7f 00 00}
006ah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e1 b5 d3 5e}
006fh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0072h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0076h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0079h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 12 a7 d3 5e}
007eh mov rax,7ff7c625e530h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 30 e5 25 c6 f7 7f 00 00}
0088h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
008ch mov rax,7ff7c715d160h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 60 d1 15 c7 f7 7f 00 00}
0096h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
009ah mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
009dh add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
00a1h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
00a2h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
00a3h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
00a4h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
00a5h ret                                     ; RET || C3 || encoded[1]{c3}
00a6h mov rcx,7ff7c735c620h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 c6 35 c7 f7 7f 00 00}
00b0h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9b b5 d3 5e}
00b5h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
00b8h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
00bch mov rcx,7ff7c6356f68h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 68 6f 35 c6 f7 7f 00 00}
00c6h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c5 38 ce 5e}
00cbh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00ceh mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
00d8h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 73 b5 d3 5e}
00ddh mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
00e0h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
00e5h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
00efh call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5c 4e e6 5e}
00f4h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
00f7h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
00fah call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 31 75 23 ff}
00ffh mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0101h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 92 4c 23 ff}
0106h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0109h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
010ch mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
010fh call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c4 89 21 ff}
0114h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
0117h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
011ah call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 81 d8 23 ff}
011fh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0122h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 79 01 cb 5e}
0127h int 3                                   ; INT3 || CC || encoded[1]{cc}
0128h sbb [rax],ecx                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 08}
012ah add eax,4420800h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 08 42 04}
012fh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0131h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
0132h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
0135h jo short 0137h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
0137h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; UnaryOp<ushort> lookup<ushort>(UnaryBitLogicKind:byte kind)
; lookup_g[16u](UnaryBitLogicKind~8u)[313] = {57 56 55 53 48 83 ec 28 8b f1 40 80 fe 01 74 50 40 80 fe 02 0f 85 8c 00 00 00 48 b9 e0 ab 3f c7 f7 7f 00 00 e8 d7 b4 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 08 a6 d3 5e 48 b8 60 e5 25 c6 f7 7f 00 00 48 89 46 18 48 b8 b0 d1 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 e0 ab 3f c7 f7 7f 00 00 e8 91 b4 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 c2 a5 d3 5e 48 b8 60 e5 25 c6 f7 7f 00 00 48 89 46 18 48 b8 a0 d1 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 20 c6 35 c7 f7 7f 00 00 e8 4b b4 d3 5e 48 8b f8 40 88 77 08 48 b9 38 87 35 c6 f7 7f 00 00 e8 75 37 ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 23 b4 d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 0c 4d e6 5e 48 8b e8 48 8b ce e8 e1 73 23 ff 8b c8 e8 42 4b 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 74 88 21 ff 48 8b d0 48 8b cb e8 31 d7 23 ff 48 8b cb e8 29 00 cb 5e cc 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah cmp sil,1                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 01}
000eh je short 0060h                          ; JE rel8 || 74 cb || encoded[2]{74 50}
0010h cmp sil,2                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 02}
0014h jne near ptr 00a6h                      ; JNE rel32 || 0F 85 cd || encoded[6]{0f 85 8c 00 00 00}
001ah mov rcx,7ff7c73fabe0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e0 ab 3f c7 f7 7f 00 00}
0024h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d7 b4 d3 5e}
0029h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
002ch lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0030h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0033h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 08 a6 d3 5e}
0038h mov rax,7ff7c625e560h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 60 e5 25 c6 f7 7f 00 00}
0042h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0046h mov rax,7ff7c715d1b0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 b0 d1 15 c7 f7 7f 00 00}
0050h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0054h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0057h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
005bh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
005ch pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
005dh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
005eh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
005fh ret                                     ; RET || C3 || encoded[1]{c3}
0060h mov rcx,7ff7c73fabe0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e0 ab 3f c7 f7 7f 00 00}
006ah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 91 b4 d3 5e}
006fh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0072h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0076h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0079h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c2 a5 d3 5e}
007eh mov rax,7ff7c625e560h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 60 e5 25 c6 f7 7f 00 00}
0088h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
008ch mov rax,7ff7c715d1a0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 a0 d1 15 c7 f7 7f 00 00}
0096h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
009ah mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
009dh add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
00a1h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
00a2h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
00a3h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
00a4h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
00a5h ret                                     ; RET || C3 || encoded[1]{c3}
00a6h mov rcx,7ff7c735c620h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 c6 35 c7 f7 7f 00 00}
00b0h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 4b b4 d3 5e}
00b5h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
00b8h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
00bch mov rcx,7ff7c6358738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 38 87 35 c6 f7 7f 00 00}
00c6h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 75 37 ce 5e}
00cbh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00ceh mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
00d8h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 23 b4 d3 5e}
00ddh mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
00e0h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
00e5h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
00efh call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0c 4d e6 5e}
00f4h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
00f7h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
00fah call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e1 73 23 ff}
00ffh mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0101h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 42 4b 23 ff}
0106h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0109h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
010ch mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
010fh call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 74 88 21 ff}
0114h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
0117h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
011ah call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 31 d7 23 ff}
011fh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0122h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 29 00 cb 5e}
0127h int 3                                   ; INT3 || CC || encoded[1]{cc}
0128h sbb [rax],ecx                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 08}
012ah add eax,4420800h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 08 42 04}
012fh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0131h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
0132h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
0135h jo short 0137h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
0137h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; UnaryOp<short> lookup<short>(UnaryBitLogicKind:byte kind)
; lookup_g[16i](UnaryBitLogicKind~8u)[313] = {57 56 55 53 48 83 ec 28 8b f1 40 80 fe 01 74 50 40 80 fe 02 0f 85 8c 00 00 00 48 b9 f0 ad 3f c7 f7 7f 00 00 e8 87 b3 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 b8 a4 d3 5e 48 b8 90 e5 25 c6 f7 7f 00 00 48 89 46 18 48 b8 e0 d1 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 f0 ad 3f c7 f7 7f 00 00 e8 41 b3 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 72 a4 d3 5e 48 b8 90 e5 25 c6 f7 7f 00 00 48 89 46 18 48 b8 d0 d1 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 20 c6 35 c7 f7 7f 00 00 e8 fb b2 d3 5e 48 8b f8 40 88 77 08 48 b9 48 7f 35 c6 f7 7f 00 00 e8 25 36 ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 d3 b2 d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 bc 4b e6 5e 48 8b e8 48 8b ce e8 91 72 23 ff 8b c8 e8 f2 49 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 24 87 21 ff 48 8b d0 48 8b cb e8 e1 d5 23 ff 48 8b cb e8 d9 fe ca 5e cc 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah cmp sil,1                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 01}
000eh je short 0060h                          ; JE rel8 || 74 cb || encoded[2]{74 50}
0010h cmp sil,2                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 02}
0014h jne near ptr 00a6h                      ; JNE rel32 || 0F 85 cd || encoded[6]{0f 85 8c 00 00 00}
001ah mov rcx,7ff7c73fadf0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 f0 ad 3f c7 f7 7f 00 00}
0024h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 87 b3 d3 5e}
0029h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
002ch lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0030h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0033h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b8 a4 d3 5e}
0038h mov rax,7ff7c625e590h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 90 e5 25 c6 f7 7f 00 00}
0042h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0046h mov rax,7ff7c715d1e0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 e0 d1 15 c7 f7 7f 00 00}
0050h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0054h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0057h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
005bh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
005ch pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
005dh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
005eh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
005fh ret                                     ; RET || C3 || encoded[1]{c3}
0060h mov rcx,7ff7c73fadf0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 f0 ad 3f c7 f7 7f 00 00}
006ah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 41 b3 d3 5e}
006fh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0072h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0076h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0079h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 72 a4 d3 5e}
007eh mov rax,7ff7c625e590h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 90 e5 25 c6 f7 7f 00 00}
0088h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
008ch mov rax,7ff7c715d1d0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 d0 d1 15 c7 f7 7f 00 00}
0096h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
009ah mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
009dh add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
00a1h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
00a2h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
00a3h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
00a4h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
00a5h ret                                     ; RET || C3 || encoded[1]{c3}
00a6h mov rcx,7ff7c735c620h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 c6 35 c7 f7 7f 00 00}
00b0h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fb b2 d3 5e}
00b5h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
00b8h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
00bch mov rcx,7ff7c6357f48h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 48 7f 35 c6 f7 7f 00 00}
00c6h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 25 36 ce 5e}
00cbh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00ceh mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
00d8h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d3 b2 d3 5e}
00ddh mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
00e0h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
00e5h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
00efh call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bc 4b e6 5e}
00f4h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
00f7h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
00fah call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 91 72 23 ff}
00ffh mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0101h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f2 49 23 ff}
0106h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0109h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
010ch mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
010fh call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 24 87 21 ff}
0114h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
0117h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
011ah call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e1 d5 23 ff}
011fh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0122h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d9 fe ca 5e}
0127h int 3                                   ; INT3 || CC || encoded[1]{cc}
0128h sbb [rax],ecx                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 08}
012ah add eax,4420800h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 08 42 04}
012fh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0131h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
0132h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
0135h jo short 0137h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
0137h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; UnaryOp<uint> lookup<uint>(UnaryBitLogicKind:byte kind)
; lookup_g[32u](UnaryBitLogicKind~8u)[313] = {57 56 55 53 48 83 ec 28 8b f1 40 80 fe 01 74 50 40 80 fe 02 0f 85 8c 00 00 00 48 b9 00 b0 3f c7 f7 7f 00 00 e8 37 b2 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 68 a3 d3 5e 48 b8 d0 da 25 c6 f7 7f 00 00 48 89 46 18 48 b8 20 d2 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 00 b0 3f c7 f7 7f 00 00 e8 f1 b1 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 22 a3 d3 5e 48 b8 d0 da 25 c6 f7 7f 00 00 48 89 46 18 48 b8 10 d2 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 20 c6 35 c7 f7 7f 00 00 e8 ab b1 d3 5e 48 8b f8 40 88 77 08 48 b9 d8 96 35 c6 f7 7f 00 00 e8 d5 34 ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 83 b1 d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 6c 4a e6 5e 48 8b e8 48 8b ce e8 41 71 23 ff 8b c8 e8 a2 48 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 d4 85 21 ff 48 8b d0 48 8b cb e8 91 d4 23 ff 48 8b cb e8 89 fd ca 5e cc 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah cmp sil,1                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 01}
000eh je short 0060h                          ; JE rel8 || 74 cb || encoded[2]{74 50}
0010h cmp sil,2                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 02}
0014h jne near ptr 00a6h                      ; JNE rel32 || 0F 85 cd || encoded[6]{0f 85 8c 00 00 00}
001ah mov rcx,7ff7c73fb000h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 b0 3f c7 f7 7f 00 00}
0024h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 37 b2 d3 5e}
0029h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
002ch lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0030h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0033h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 68 a3 d3 5e}
0038h mov rax,7ff7c625dad0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 d0 da 25 c6 f7 7f 00 00}
0042h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0046h mov rax,7ff7c715d220h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 20 d2 15 c7 f7 7f 00 00}
0050h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0054h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0057h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
005bh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
005ch pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
005dh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
005eh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
005fh ret                                     ; RET || C3 || encoded[1]{c3}
0060h mov rcx,7ff7c73fb000h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 b0 3f c7 f7 7f 00 00}
006ah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f1 b1 d3 5e}
006fh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0072h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0076h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0079h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 22 a3 d3 5e}
007eh mov rax,7ff7c625dad0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 d0 da 25 c6 f7 7f 00 00}
0088h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
008ch mov rax,7ff7c715d210h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 10 d2 15 c7 f7 7f 00 00}
0096h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
009ah mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
009dh add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
00a1h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
00a2h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
00a3h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
00a4h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
00a5h ret                                     ; RET || C3 || encoded[1]{c3}
00a6h mov rcx,7ff7c735c620h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 c6 35 c7 f7 7f 00 00}
00b0h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ab b1 d3 5e}
00b5h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
00b8h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
00bch mov rcx,7ff7c63596d8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d8 96 35 c6 f7 7f 00 00}
00c6h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d5 34 ce 5e}
00cbh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00ceh mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
00d8h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 83 b1 d3 5e}
00ddh mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
00e0h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
00e5h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
00efh call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6c 4a e6 5e}
00f4h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
00f7h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
00fah call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 41 71 23 ff}
00ffh mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0101h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a2 48 23 ff}
0106h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0109h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
010ch mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
010fh call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d4 85 21 ff}
0114h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
0117h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
011ah call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 91 d4 23 ff}
011fh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0122h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 89 fd ca 5e}
0127h int 3                                   ; INT3 || CC || encoded[1]{cc}
0128h sbb [rax],ecx                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 08}
012ah add eax,4420800h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 08 42 04}
012fh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0131h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
0132h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
0135h jo short 0137h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
0137h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; UnaryOp<int> lookup<int>(UnaryBitLogicKind:byte kind)
; lookup_g[32i](UnaryBitLogicKind~8u)[313] = {57 56 55 53 48 83 ec 28 8b f1 40 80 fe 01 74 50 40 80 fe 02 0f 85 8c 00 00 00 48 b9 10 b2 3f c7 f7 7f 00 00 e8 e7 b0 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 18 a2 d3 5e 48 b8 80 d2 25 c6 f7 7f 00 00 48 89 46 18 48 b8 50 d2 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 10 b2 3f c7 f7 7f 00 00 e8 a1 b0 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 d2 a1 d3 5e 48 b8 80 d2 25 c6 f7 7f 00 00 48 89 46 18 48 b8 40 d2 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 20 c6 35 c7 f7 7f 00 00 e8 5b b0 d3 5e 48 8b f8 40 88 77 08 48 b9 08 8f 35 c6 f7 7f 00 00 e8 85 33 ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 33 b0 d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 1c 49 e6 5e 48 8b e8 48 8b ce e8 f1 6f 23 ff 8b c8 e8 52 47 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 84 84 21 ff 48 8b d0 48 8b cb e8 41 d3 23 ff 48 8b cb e8 39 fc ca 5e cc 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah cmp sil,1                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 01}
000eh je short 0060h                          ; JE rel8 || 74 cb || encoded[2]{74 50}
0010h cmp sil,2                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 02}
0014h jne near ptr 00a6h                      ; JNE rel32 || 0F 85 cd || encoded[6]{0f 85 8c 00 00 00}
001ah mov rcx,7ff7c73fb210h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 10 b2 3f c7 f7 7f 00 00}
0024h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e7 b0 d3 5e}
0029h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
002ch lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0030h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0033h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 18 a2 d3 5e}
0038h mov rax,7ff7c625d280h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 80 d2 25 c6 f7 7f 00 00}
0042h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0046h mov rax,7ff7c715d250h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 50 d2 15 c7 f7 7f 00 00}
0050h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0054h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0057h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
005bh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
005ch pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
005dh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
005eh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
005fh ret                                     ; RET || C3 || encoded[1]{c3}
0060h mov rcx,7ff7c73fb210h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 10 b2 3f c7 f7 7f 00 00}
006ah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a1 b0 d3 5e}
006fh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0072h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0076h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0079h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d2 a1 d3 5e}
007eh mov rax,7ff7c625d280h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 80 d2 25 c6 f7 7f 00 00}
0088h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
008ch mov rax,7ff7c715d240h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 40 d2 15 c7 f7 7f 00 00}
0096h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
009ah mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
009dh add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
00a1h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
00a2h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
00a3h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
00a4h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
00a5h ret                                     ; RET || C3 || encoded[1]{c3}
00a6h mov rcx,7ff7c735c620h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 c6 35 c7 f7 7f 00 00}
00b0h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5b b0 d3 5e}
00b5h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
00b8h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
00bch mov rcx,7ff7c6358f08h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 08 8f 35 c6 f7 7f 00 00}
00c6h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 85 33 ce 5e}
00cbh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00ceh mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
00d8h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 33 b0 d3 5e}
00ddh mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
00e0h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
00e5h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
00efh call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1c 49 e6 5e}
00f4h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
00f7h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
00fah call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f1 6f 23 ff}
00ffh mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0101h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 52 47 23 ff}
0106h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0109h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
010ch mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
010fh call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 84 84 21 ff}
0114h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
0117h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
011ah call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 41 d3 23 ff}
011fh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0122h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 39 fc ca 5e}
0127h int 3                                   ; INT3 || CC || encoded[1]{cc}
0128h sbb [rax],ecx                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 08}
012ah add eax,4420800h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 08 42 04}
012fh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0131h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
0132h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
0135h jo short 0137h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
0137h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; UnaryOp<ulong> lookup<ulong>(UnaryBitLogicKind:byte kind)
; lookup_g[64u](UnaryBitLogicKind~8u)[313] = {57 56 55 53 48 83 ec 28 8b f1 40 80 fe 01 74 50 40 80 fe 02 0f 85 8c 00 00 00 48 b9 20 b4 3f c7 f7 7f 00 00 e8 97 af d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 c8 a0 d3 5e 48 b8 c0 e5 25 c6 f7 7f 00 00 48 89 46 18 48 b8 e0 dc 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 20 b4 3f c7 f7 7f 00 00 e8 51 af d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 82 a0 d3 5e 48 b8 c0 e5 25 c6 f7 7f 00 00 48 89 46 18 48 b8 d0 dc 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 20 c6 35 c7 f7 7f 00 00 e8 0b af d3 5e 48 8b f8 40 88 77 08 48 b9 78 a6 35 c6 f7 7f 00 00 e8 35 32 ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 e3 ae d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 cc 47 e6 5e 48 8b e8 48 8b ce e8 a1 6e 23 ff 8b c8 e8 02 46 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 34 83 21 ff 48 8b d0 48 8b cb e8 f1 d1 23 ff 48 8b cb e8 e9 fa ca 5e cc 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah cmp sil,1                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 01}
000eh je short 0060h                          ; JE rel8 || 74 cb || encoded[2]{74 50}
0010h cmp sil,2                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 02}
0014h jne near ptr 00a6h                      ; JNE rel32 || 0F 85 cd || encoded[6]{0f 85 8c 00 00 00}
001ah mov rcx,7ff7c73fb420h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 b4 3f c7 f7 7f 00 00}
0024h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 97 af d3 5e}
0029h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
002ch lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0030h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0033h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c8 a0 d3 5e}
0038h mov rax,7ff7c625e5c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 c0 e5 25 c6 f7 7f 00 00}
0042h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0046h mov rax,7ff7c715dce0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 e0 dc 15 c7 f7 7f 00 00}
0050h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0054h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0057h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
005bh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
005ch pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
005dh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
005eh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
005fh ret                                     ; RET || C3 || encoded[1]{c3}
0060h mov rcx,7ff7c73fb420h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 b4 3f c7 f7 7f 00 00}
006ah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 51 af d3 5e}
006fh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0072h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0076h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0079h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 82 a0 d3 5e}
007eh mov rax,7ff7c625e5c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 c0 e5 25 c6 f7 7f 00 00}
0088h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
008ch mov rax,7ff7c715dcd0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 d0 dc 15 c7 f7 7f 00 00}
0096h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
009ah mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
009dh add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
00a1h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
00a2h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
00a3h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
00a4h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
00a5h ret                                     ; RET || C3 || encoded[1]{c3}
00a6h mov rcx,7ff7c735c620h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 c6 35 c7 f7 7f 00 00}
00b0h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0b af d3 5e}
00b5h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
00b8h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
00bch mov rcx,7ff7c635a678h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 78 a6 35 c6 f7 7f 00 00}
00c6h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 35 32 ce 5e}
00cbh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00ceh mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
00d8h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e3 ae d3 5e}
00ddh mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
00e0h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
00e5h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
00efh call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 cc 47 e6 5e}
00f4h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
00f7h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
00fah call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a1 6e 23 ff}
00ffh mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0101h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 02 46 23 ff}
0106h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0109h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
010ch mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
010fh call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 34 83 21 ff}
0114h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
0117h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
011ah call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f1 d1 23 ff}
011fh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0122h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e9 fa ca 5e}
0127h int 3                                   ; INT3 || CC || encoded[1]{cc}
0128h sbb [rax],ecx                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 08}
012ah add eax,4420800h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 08 42 04}
012fh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0131h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
0132h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
0135h jo short 0137h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
0137h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; UnaryOp<long> lookup<long>(UnaryBitLogicKind:byte kind)
; lookup_g[64i](UnaryBitLogicKind~8u)[313] = {57 56 55 53 48 83 ec 28 8b f1 40 80 fe 01 74 50 40 80 fe 02 0f 85 8c 00 00 00 48 b9 30 b6 3f c7 f7 7f 00 00 e8 47 ae d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 78 9f d3 5e 48 b8 f0 e5 25 c6 f7 7f 00 00 48 89 46 18 48 b8 10 dd 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 30 b6 3f c7 f7 7f 00 00 e8 01 ae d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 32 9f d3 5e 48 b8 f0 e5 25 c6 f7 7f 00 00 48 89 46 18 48 b8 00 dd 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 20 c6 35 c7 f7 7f 00 00 e8 bb ad d3 5e 48 8b f8 40 88 77 08 48 b9 a8 9e 35 c6 f7 7f 00 00 e8 e5 30 ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 93 ad d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 7c 46 e6 5e 48 8b e8 48 8b ce e8 51 6d 23 ff 8b c8 e8 b2 44 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 e4 81 21 ff 48 8b d0 48 8b cb e8 a1 d0 23 ff 48 8b cb e8 99 f9 ca 5e cc 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah cmp sil,1                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 01}
000eh je short 0060h                          ; JE rel8 || 74 cb || encoded[2]{74 50}
0010h cmp sil,2                               ; CMP r/m8, imm8 || 80 /7 ib || encoded[4]{40 80 fe 02}
0014h jne near ptr 00a6h                      ; JNE rel32 || 0F 85 cd || encoded[6]{0f 85 8c 00 00 00}
001ah mov rcx,7ff7c73fb630h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 b6 3f c7 f7 7f 00 00}
0024h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 47 ae d3 5e}
0029h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
002ch lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0030h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0033h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 78 9f d3 5e}
0038h mov rax,7ff7c625e5f0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 f0 e5 25 c6 f7 7f 00 00}
0042h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0046h mov rax,7ff7c715dd10h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 10 dd 15 c7 f7 7f 00 00}
0050h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0054h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0057h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
005bh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
005ch pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
005dh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
005eh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
005fh ret                                     ; RET || C3 || encoded[1]{c3}
0060h mov rcx,7ff7c73fb630h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 b6 3f c7 f7 7f 00 00}
006ah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 01 ae d3 5e}
006fh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0072h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0076h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0079h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 32 9f d3 5e}
007eh mov rax,7ff7c625e5f0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 f0 e5 25 c6 f7 7f 00 00}
0088h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
008ch mov rax,7ff7c715dd00h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 00 dd 15 c7 f7 7f 00 00}
0096h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
009ah mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
009dh add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
00a1h pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
00a2h pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
00a3h pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
00a4h pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
00a5h ret                                     ; RET || C3 || encoded[1]{c3}
00a6h mov rcx,7ff7c735c620h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 c6 35 c7 f7 7f 00 00}
00b0h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bb ad d3 5e}
00b5h mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
00b8h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
00bch mov rcx,7ff7c6359ea8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 a8 9e 35 c6 f7 7f 00 00}
00c6h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e5 30 ce 5e}
00cbh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00ceh mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
00d8h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 93 ad d3 5e}
00ddh mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
00e0h mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
00e5h mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
00efh call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7c 46 e6 5e}
00f4h mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
00f7h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
00fah call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 51 6d 23 ff}
00ffh mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
0101h call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b2 44 23 ff}
0106h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0109h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
010ch mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
010fh call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e4 81 21 ff}
0114h mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
0117h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
011ah call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a1 d0 23 ff}
011fh mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0122h call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 99 f9 ca 5e}
0127h int 3                                   ; INT3 || CC || encoded[1]{cc}
0128h sbb [rax],ecx                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 08}
012ah add eax,4420800h                        ; ADD EAX, imm32 || o32 05 id || encoded[5]{05 00 08 42 04}
012fh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
0131h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
0132h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
0135h jo short 0137h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
0137h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; BinaryOp<byte> lookup<byte>(BinaryBitLogicKind:byte kind)
; lookup_g[8u](BinaryBitLogicKind~8u)[1273] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 ce 83 f9 0f 0f 87 09 04 00 00 8b c9 48 8d 05 88 04 00 00 8b 04 88 48 8d 15 e0 ff ff ff 48 03 c2 ff e0 48 b9 70 88 3f c7 f7 7f 00 00 e8 e2 a8 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 13 9a d3 5e 48 b9 c0 e0 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 98 80 15 c7 f7 7f 00 00 48 89 4e 20 e9 a6 03 00 00 48 b9 70 88 3f c7 f7 7f 00 00 e8 a3 a8 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 d4 99 d3 5e 48 b9 c0 e0 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 a0 bd 15 c7 f7 7f 00 00 48 89 4e 20 e9 67 03 00 00 48 b9 70 88 3f c7 f7 7f 00 00 e8 64 a8 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 95 99 d3 5e 48 b9 c0 e0 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 80 bd 15 c7 f7 7f 00 00 48 89 4e 20 e9 28 03 00 00 48 b9 70 88 3f c7 f7 7f 00 00 e8 25 a8 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 56 99 d3 5e 48 b9 c0 e0 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 b8 80 15 c7 f7 7f 00 00 48 89 4e 20 e9 e9 02 00 00 48 b9 70 88 3f c7 f7 7f 00 00 e8 e6 a7 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 17 99 d3 5e 48 b9 c0 e0 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 c0 bc 15 c7 f7 7f 00 00 48 89 4e 20 e9 aa 02 00 00 48 b9 70 88 3f c7 f7 7f 00 00 e8 a7 a7 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 d8 98 d3 5e 48 b9 c0 e0 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 a0 bc 15 c7 f7 7f 00 00 48 89 4e 20 e9 6b 02 00 00 48 b9 70 88 3f c7 f7 7f 00 00 e8 68 a7 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 99 98 d3 5e 48 b9 c0 e0 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 e0 bc 15 c7 f7 7f 00 00 48 89 4e 20 e9 2c 02 00 00 48 b9 70 88 3f c7 f7 7f 00 00 e8 29 a7 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 5a 98 d3 5e 48 b9 c0 e0 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 80 bc 15 c7 f7 7f 00 00 48 89 4e 20 e9 ed 01 00 00 48 b9 70 88 3f c7 f7 7f 00 00 e8 ea a6 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 1b 98 d3 5e 48 b9 c0 e0 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 40 bd 15 c7 f7 7f 00 00 48 89 4e 20 e9 ae 01 00 00 48 b9 70 88 3f c7 f7 7f 00 00 e8 ab a6 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 dc 97 d3 5e 48 b9 c0 e0 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 00 bd 15 c7 f7 7f 00 00 48 89 4e 20 e9 6f 01 00 00 48 b9 70 88 3f c7 f7 7f 00 00 e8 6c a6 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 9d 97 d3 5e 48 b9 c0 e0 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 20 bc 15 c7 f7 7f 00 00 48 89 4e 20 e9 30 01 00 00 48 b9 70 88 3f c7 f7 7f 00 00 e8 2d a6 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 5e 97 d3 5e 48 b9 c0 e0 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 60 bc 15 c7 f7 7f 00 00 48 89 4e 20 e9 f1 00 00 00 48 b9 70 88 3f c7 f7 7f 00 00 e8 ee a5 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 1f 97 d3 5e 48 b9 c0 e0 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 40 bc 15 c7 f7 7f 00 00 48 89 4e 20 e9 b2 00 00 00 48 b9 70 88 3f c7 f7 7f 00 00 e8 af a5 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 e0 96 d3 5e 48 b9 c0 e0 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 20 bd 15 c7 f7 7f 00 00 48 89 4e 20 eb 76 48 b9 70 88 3f c7 f7 7f 00 00 e8 73 a5 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 a4 96 d3 5e 48 b9 c0 e0 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 d8 80 15 c7 f7 7f 00 00 48 89 4e 20 eb 3a 48 b9 70 88 3f c7 f7 7f 00 00 e8 37 a5 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 68 96 d3 5e 48 b8 c0 e0 25 c6 f7 7f 00 00 48 89 46 18 48 b8 60 bd 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 78 c9 35 c7 f7 7f 00 00 e8 f1 a4 d3 5e 48 8b f8 40 88 77 08 48 b9 58 77 35 c6 f7 7f 00 00 e8 1b 28 ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 c9 a4 d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 b2 3d e6 5e 48 8b e8 48 8b ce e8 87 64 23 ff 8b c8 e8 e8 3b 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 1a 79 21 ff 48 8b d0 48 8b cb e8 d7 c7 23 ff 48 8b cb e8 cf f0 ca 5e cc 00 00 00 00 00 00 64 00 00 00 a3 00 00 00 d0 03 00 00 1d 02 00 00 58 03 00 00 5c 02 00 00 9f 01 00 00 21 01 00 00 60 01 00 00 de 01 00 00 da 02 00 00 19 03 00 00 9b 02 00 00 94 03 00 00 e2 00 00 00 25 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx ecx,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 ce}
000eh cmp ecx,0fh                             ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f9 0f}
0011h ja near ptr 0420h                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 09 04 00 00}
0017h mov ecx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c9}
0019h lea rax,[rip+488h]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 88 04 00 00}
0020h mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0023h lea rdx,[rip-20h]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 15 e0 ff ff ff}
002ah add rax,rdx                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 c2}
002dh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
002fh mov rcx,7ff7c73f8870h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 88 3f c7 f7 7f 00 00}
0039h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e2 a8 d3 5e}
003eh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0041h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0045h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0048h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 13 9a d3 5e}
004dh mov rcx,7ff7c625e0c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e0 25 c6 f7 7f 00 00}
0057h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
005bh mov rcx,7ff7c7158098h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 98 80 15 c7 f7 7f 00 00}
0065h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0069h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 a6 03 00 00}
006eh mov rcx,7ff7c73f8870h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 88 3f c7 f7 7f 00 00}
0078h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a3 a8 d3 5e}
007dh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0080h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0084h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0087h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d4 99 d3 5e}
008ch mov rcx,7ff7c625e0c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e0 25 c6 f7 7f 00 00}
0096h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
009ah mov rcx,7ff7c715bda0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 a0 bd 15 c7 f7 7f 00 00}
00a4h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00a8h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 67 03 00 00}
00adh mov rcx,7ff7c73f8870h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 88 3f c7 f7 7f 00 00}
00b7h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 64 a8 d3 5e}
00bch mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00bfh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
00c3h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
00c6h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 95 99 d3 5e}
00cbh mov rcx,7ff7c625e0c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e0 25 c6 f7 7f 00 00}
00d5h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
00d9h mov rcx,7ff7c715bd80h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 bd 15 c7 f7 7f 00 00}
00e3h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00e7h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 28 03 00 00}
00ech mov rcx,7ff7c73f8870h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 88 3f c7 f7 7f 00 00}
00f6h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 25 a8 d3 5e}
00fbh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00feh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0102h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0105h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 56 99 d3 5e}
010ah mov rcx,7ff7c625e0c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e0 25 c6 f7 7f 00 00}
0114h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0118h mov rcx,7ff7c71580b8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 b8 80 15 c7 f7 7f 00 00}
0122h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0126h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 e9 02 00 00}
012bh mov rcx,7ff7c73f8870h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 88 3f c7 f7 7f 00 00}
0135h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e6 a7 d3 5e}
013ah mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
013dh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0141h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0144h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 17 99 d3 5e}
0149h mov rcx,7ff7c625e0c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e0 25 c6 f7 7f 00 00}
0153h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0157h mov rcx,7ff7c715bcc0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 bc 15 c7 f7 7f 00 00}
0161h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0165h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 aa 02 00 00}
016ah mov rcx,7ff7c73f8870h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 88 3f c7 f7 7f 00 00}
0174h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a7 a7 d3 5e}
0179h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
017ch lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0180h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0183h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d8 98 d3 5e}
0188h mov rcx,7ff7c625e0c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e0 25 c6 f7 7f 00 00}
0192h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0196h mov rcx,7ff7c715bca0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 a0 bc 15 c7 f7 7f 00 00}
01a0h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
01a4h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 6b 02 00 00}
01a9h mov rcx,7ff7c73f8870h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 88 3f c7 f7 7f 00 00}
01b3h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 68 a7 d3 5e}
01b8h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
01bbh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
01bfh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
01c2h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 99 98 d3 5e}
01c7h mov rcx,7ff7c625e0c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e0 25 c6 f7 7f 00 00}
01d1h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
01d5h mov rcx,7ff7c715bce0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e0 bc 15 c7 f7 7f 00 00}
01dfh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
01e3h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 2c 02 00 00}
01e8h mov rcx,7ff7c73f8870h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 88 3f c7 f7 7f 00 00}
01f2h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 29 a7 d3 5e}
01f7h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
01fah lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
01feh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0201h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5a 98 d3 5e}
0206h mov rcx,7ff7c625e0c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e0 25 c6 f7 7f 00 00}
0210h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0214h mov rcx,7ff7c715bc80h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 bc 15 c7 f7 7f 00 00}
021eh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0222h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ed 01 00 00}
0227h mov rcx,7ff7c73f8870h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 88 3f c7 f7 7f 00 00}
0231h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ea a6 d3 5e}
0236h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0239h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
023dh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0240h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1b 98 d3 5e}
0245h mov rcx,7ff7c625e0c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e0 25 c6 f7 7f 00 00}
024fh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0253h mov rcx,7ff7c715bd40h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 bd 15 c7 f7 7f 00 00}
025dh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0261h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ae 01 00 00}
0266h mov rcx,7ff7c73f8870h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 88 3f c7 f7 7f 00 00}
0270h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ab a6 d3 5e}
0275h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0278h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
027ch mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
027fh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 dc 97 d3 5e}
0284h mov rcx,7ff7c625e0c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e0 25 c6 f7 7f 00 00}
028eh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0292h mov rcx,7ff7c715bd00h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 bd 15 c7 f7 7f 00 00}
029ch mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
02a0h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 6f 01 00 00}
02a5h mov rcx,7ff7c73f8870h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 88 3f c7 f7 7f 00 00}
02afh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6c a6 d3 5e}
02b4h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
02b7h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
02bbh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
02beh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9d 97 d3 5e}
02c3h mov rcx,7ff7c625e0c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e0 25 c6 f7 7f 00 00}
02cdh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
02d1h mov rcx,7ff7c715bc20h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 bc 15 c7 f7 7f 00 00}
02dbh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
02dfh jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 30 01 00 00}
02e4h mov rcx,7ff7c73f8870h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 88 3f c7 f7 7f 00 00}
02eeh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2d a6 d3 5e}
02f3h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
02f6h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
02fah mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
02fdh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5e 97 d3 5e}
0302h mov rcx,7ff7c625e0c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e0 25 c6 f7 7f 00 00}
030ch mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0310h mov rcx,7ff7c715bc60h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 bc 15 c7 f7 7f 00 00}
031ah mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
031eh jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f1 00 00 00}
0323h mov rcx,7ff7c73f8870h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 88 3f c7 f7 7f 00 00}
032dh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ee a5 d3 5e}
0332h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0335h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0339h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
033ch call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1f 97 d3 5e}
0341h mov rcx,7ff7c625e0c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e0 25 c6 f7 7f 00 00}
034bh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
034fh mov rcx,7ff7c715bc40h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 bc 15 c7 f7 7f 00 00}
0359h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
035dh jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b2 00 00 00}
0362h mov rcx,7ff7c73f8870h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 88 3f c7 f7 7f 00 00}
036ch call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 af a5 d3 5e}
0371h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0374h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0378h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
037bh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e0 96 d3 5e}
0380h mov rcx,7ff7c625e0c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e0 25 c6 f7 7f 00 00}
038ah mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
038eh mov rcx,7ff7c715bd20h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 bd 15 c7 f7 7f 00 00}
0398h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
039ch jmp short 0414h                         ; JMP rel8 || EB cb || encoded[2]{eb 76}
039eh mov rcx,7ff7c73f8870h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 88 3f c7 f7 7f 00 00}
03a8h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 73 a5 d3 5e}
03adh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
03b0h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
03b4h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
03b7h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a4 96 d3 5e}
03bch mov rcx,7ff7c625e0c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e0 25 c6 f7 7f 00 00}
03c6h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
03cah mov rcx,7ff7c71580d8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d8 80 15 c7 f7 7f 00 00}
03d4h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
03d8h jmp short 0414h                         ; JMP rel8 || EB cb || encoded[2]{eb 3a}
03dah mov rcx,7ff7c73f8870h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 88 3f c7 f7 7f 00 00}
03e4h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 37 a5 d3 5e}
03e9h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
03ech lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
03f0h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
03f3h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 68 96 d3 5e}
03f8h mov rax,7ff7c625e0c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 c0 e0 25 c6 f7 7f 00 00}
0402h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0406h mov rax,7ff7c715bd60h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 60 bd 15 c7 f7 7f 00 00}
0410h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0414h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0417h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
041bh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
041ch pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
041dh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
041eh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
041fh ret                                     ; RET || C3 || encoded[1]{c3}
0420h mov rcx,7ff7c735c978h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 78 c9 35 c7 f7 7f 00 00}
042ah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f1 a4 d3 5e}
042fh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0432h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0436h mov rcx,7ff7c6357758h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 58 77 35 c6 f7 7f 00 00}
0440h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1b 28 ce 5e}
0445h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0448h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0452h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c9 a4 d3 5e}
0457h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
045ah mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
045fh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0469h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b2 3d e6 5e}
046eh mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
0471h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0474h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 87 64 23 ff}
0479h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
047bh call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e8 3b 23 ff}
0480h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0483h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0486h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0489h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1a 79 21 ff}
048eh mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
0491h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0494h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d7 c7 23 ff}
0499h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
049ch call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 cf f0 ca 5e}
04a1h int 3                                   ; INT3 || CC || encoded[1]{cc}
04a2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04a4h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04a6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04a8h add fs:[rax],al                         ; ADD r/m8, r8 || 00 /r || encoded[3]{64 00 00}
04abh add [rbx-30000000h],ah                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 a3 00 00 00 d0}
04b1h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
04b3h add [rip+58000002h],bl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 1d 02 00 00 58}
04b9h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
04bbh add [rdx+rax],bl                        ; ADD r/m8, r8 || 00 /r || encoded[4]{00 5c 02 00}
04bfh add [rdi+21000001h],bl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 9f 01 00 00 21}
04c5h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
04c7h add [rax+1],ah                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 60 01}
04cah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04cch fiadd word ptr [rcx]                    ; FIADD m16int || DE /0 || encoded[2]{de 01}
04ceh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04d0h fiadd dword ptr [rdx]                   ; FIADD m32int || DA /0 || encoded[2]{da 02}
04d2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04d4h sbb [rbx],eax                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 03}
04d6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04d8h wait                                    ; WAIT || 9B || encoded[1]{9b}
04d9h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
04dbh add [rbx+rax+0e20000h],dl               ; ADD r/m8, r8 || 00 /r || encoded[7]{00 94 03 00 00 e2 00}
04e2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04e4h and eax,19000000h                       ; AND EAX, imm32 || o32 25 id || encoded[5]{25 00 00 00 19}
04e9h or [rip+4420800h],al                    ; OR r/m8, r8 || 08 /r || encoded[6]{08 05 00 08 42 04}
04efh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
04f1h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
04f2h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
04f5h jo short 04f7h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
04f7h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; BinaryOp<sbyte> lookup<sbyte>(BinaryBitLogicKind:byte kind)
; lookup_g[8i](BinaryBitLogicKind~8u)[1273] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 ce 83 f9 0f 0f 87 09 04 00 00 8b c9 48 8d 05 88 04 00 00 8b 04 88 48 8d 15 e0 ff ff ff 48 03 c2 ff e0 48 b9 20 8d 3f c7 f7 7f 00 00 e8 d2 a3 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 03 95 d3 5e 48 b9 c0 e2 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 e0 be 15 c7 f7 7f 00 00 48 89 4e 20 e9 a6 03 00 00 48 b9 20 8d 3f c7 f7 7f 00 00 e8 93 a3 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 c4 94 d3 5e 48 b9 c0 e2 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 d0 bf 15 c7 f7 7f 00 00 48 89 4e 20 e9 67 03 00 00 48 b9 20 8d 3f c7 f7 7f 00 00 e8 54 a3 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 85 94 d3 5e 48 b9 c0 e2 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 c0 bf 15 c7 f7 7f 00 00 48 89 4e 20 e9 28 03 00 00 48 b9 20 8d 3f c7 f7 7f 00 00 e8 15 a3 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 46 94 d3 5e 48 b9 c0 e2 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 f0 be 15 c7 f7 7f 00 00 48 89 4e 20 e9 e9 02 00 00 48 b9 20 8d 3f c7 f7 7f 00 00 e8 d6 a2 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 07 94 d3 5e 48 b9 c0 e2 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 60 bf 15 c7 f7 7f 00 00 48 89 4e 20 e9 aa 02 00 00 48 b9 20 8d 3f c7 f7 7f 00 00 e8 97 a2 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 c8 93 d3 5e 48 b9 c0 e2 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 50 bf 15 c7 f7 7f 00 00 48 89 4e 20 e9 6b 02 00 00 48 b9 20 8d 3f c7 f7 7f 00 00 e8 58 a2 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 89 93 d3 5e 48 b9 c0 e2 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 70 bf 15 c7 f7 7f 00 00 48 89 4e 20 e9 2c 02 00 00 48 b9 20 8d 3f c7 f7 7f 00 00 e8 19 a2 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 4a 93 d3 5e 48 b9 c0 e2 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 40 bf 15 c7 f7 7f 00 00 48 89 4e 20 e9 ed 01 00 00 48 b9 20 8d 3f c7 f7 7f 00 00 e8 da a1 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 0b 93 d3 5e 48 b9 c0 e2 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 a0 bf 15 c7 f7 7f 00 00 48 89 4e 20 e9 ae 01 00 00 48 b9 20 8d 3f c7 f7 7f 00 00 e8 9b a1 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 cc 92 d3 5e 48 b9 c0 e2 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 80 bf 15 c7 f7 7f 00 00 48 89 4e 20 e9 6f 01 00 00 48 b9 20 8d 3f c7 f7 7f 00 00 e8 5c a1 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 8d 92 d3 5e 48 b9 c0 e2 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 10 bf 15 c7 f7 7f 00 00 48 89 4e 20 e9 30 01 00 00 48 b9 20 8d 3f c7 f7 7f 00 00 e8 1d a1 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 4e 92 d3 5e 48 b9 c0 e2 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 30 bf 15 c7 f7 7f 00 00 48 89 4e 20 e9 f1 00 00 00 48 b9 20 8d 3f c7 f7 7f 00 00 e8 de a0 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 0f 92 d3 5e 48 b9 c0 e2 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 20 bf 15 c7 f7 7f 00 00 48 89 4e 20 e9 b2 00 00 00 48 b9 20 8d 3f c7 f7 7f 00 00 e8 9f a0 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 d0 91 d3 5e 48 b9 c0 e2 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 90 bf 15 c7 f7 7f 00 00 48 89 4e 20 eb 76 48 b9 20 8d 3f c7 f7 7f 00 00 e8 63 a0 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 94 91 d3 5e 48 b9 c0 e2 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 00 bf 15 c7 f7 7f 00 00 48 89 4e 20 eb 3a 48 b9 20 8d 3f c7 f7 7f 00 00 e8 27 a0 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 58 91 d3 5e 48 b8 c0 e2 25 c6 f7 7f 00 00 48 89 46 18 48 b8 b0 bf 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 78 c9 35 c7 f7 7f 00 00 e8 e1 9f d3 5e 48 8b f8 40 88 77 08 48 b9 68 6f 35 c6 f7 7f 00 00 e8 0b 23 ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 b9 9f d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 a2 38 e6 5e 48 8b e8 48 8b ce e8 77 5f 23 ff 8b c8 e8 d8 36 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 0a 74 21 ff 48 8b d0 48 8b cb e8 c7 c2 23 ff 48 8b cb e8 bf eb ca 5e cc 00 00 00 00 00 00 64 00 00 00 a3 00 00 00 d0 03 00 00 1d 02 00 00 58 03 00 00 5c 02 00 00 9f 01 00 00 21 01 00 00 60 01 00 00 de 01 00 00 da 02 00 00 19 03 00 00 9b 02 00 00 94 03 00 00 e2 00 00 00 25 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx ecx,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 ce}
000eh cmp ecx,0fh                             ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f9 0f}
0011h ja near ptr 0420h                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 09 04 00 00}
0017h mov ecx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c9}
0019h lea rax,[rip+488h]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 88 04 00 00}
0020h mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0023h lea rdx,[rip-20h]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 15 e0 ff ff ff}
002ah add rax,rdx                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 c2}
002dh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
002fh mov rcx,7ff7c73f8d20h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 8d 3f c7 f7 7f 00 00}
0039h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d2 a3 d3 5e}
003eh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0041h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0045h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0048h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 03 95 d3 5e}
004dh mov rcx,7ff7c625e2c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e2 25 c6 f7 7f 00 00}
0057h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
005bh mov rcx,7ff7c715bee0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e0 be 15 c7 f7 7f 00 00}
0065h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0069h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 a6 03 00 00}
006eh mov rcx,7ff7c73f8d20h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 8d 3f c7 f7 7f 00 00}
0078h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 93 a3 d3 5e}
007dh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0080h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0084h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0087h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c4 94 d3 5e}
008ch mov rcx,7ff7c625e2c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e2 25 c6 f7 7f 00 00}
0096h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
009ah mov rcx,7ff7c715bfd0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d0 bf 15 c7 f7 7f 00 00}
00a4h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00a8h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 67 03 00 00}
00adh mov rcx,7ff7c73f8d20h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 8d 3f c7 f7 7f 00 00}
00b7h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 54 a3 d3 5e}
00bch mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00bfh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
00c3h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
00c6h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 85 94 d3 5e}
00cbh mov rcx,7ff7c625e2c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e2 25 c6 f7 7f 00 00}
00d5h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
00d9h mov rcx,7ff7c715bfc0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 bf 15 c7 f7 7f 00 00}
00e3h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00e7h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 28 03 00 00}
00ech mov rcx,7ff7c73f8d20h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 8d 3f c7 f7 7f 00 00}
00f6h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 15 a3 d3 5e}
00fbh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00feh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0102h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0105h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 46 94 d3 5e}
010ah mov rcx,7ff7c625e2c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e2 25 c6 f7 7f 00 00}
0114h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0118h mov rcx,7ff7c715bef0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 f0 be 15 c7 f7 7f 00 00}
0122h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0126h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 e9 02 00 00}
012bh mov rcx,7ff7c73f8d20h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 8d 3f c7 f7 7f 00 00}
0135h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d6 a2 d3 5e}
013ah mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
013dh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0141h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0144h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 07 94 d3 5e}
0149h mov rcx,7ff7c625e2c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e2 25 c6 f7 7f 00 00}
0153h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0157h mov rcx,7ff7c715bf60h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 bf 15 c7 f7 7f 00 00}
0161h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0165h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 aa 02 00 00}
016ah mov rcx,7ff7c73f8d20h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 8d 3f c7 f7 7f 00 00}
0174h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 97 a2 d3 5e}
0179h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
017ch lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0180h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0183h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c8 93 d3 5e}
0188h mov rcx,7ff7c625e2c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e2 25 c6 f7 7f 00 00}
0192h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0196h mov rcx,7ff7c715bf50h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 50 bf 15 c7 f7 7f 00 00}
01a0h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
01a4h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 6b 02 00 00}
01a9h mov rcx,7ff7c73f8d20h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 8d 3f c7 f7 7f 00 00}
01b3h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 58 a2 d3 5e}
01b8h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
01bbh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
01bfh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
01c2h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 89 93 d3 5e}
01c7h mov rcx,7ff7c625e2c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e2 25 c6 f7 7f 00 00}
01d1h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
01d5h mov rcx,7ff7c715bf70h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 bf 15 c7 f7 7f 00 00}
01dfh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
01e3h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 2c 02 00 00}
01e8h mov rcx,7ff7c73f8d20h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 8d 3f c7 f7 7f 00 00}
01f2h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 19 a2 d3 5e}
01f7h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
01fah lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
01feh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0201h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 4a 93 d3 5e}
0206h mov rcx,7ff7c625e2c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e2 25 c6 f7 7f 00 00}
0210h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0214h mov rcx,7ff7c715bf40h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 bf 15 c7 f7 7f 00 00}
021eh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0222h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ed 01 00 00}
0227h mov rcx,7ff7c73f8d20h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 8d 3f c7 f7 7f 00 00}
0231h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 da a1 d3 5e}
0236h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0239h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
023dh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0240h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0b 93 d3 5e}
0245h mov rcx,7ff7c625e2c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e2 25 c6 f7 7f 00 00}
024fh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0253h mov rcx,7ff7c715bfa0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 a0 bf 15 c7 f7 7f 00 00}
025dh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0261h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ae 01 00 00}
0266h mov rcx,7ff7c73f8d20h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 8d 3f c7 f7 7f 00 00}
0270h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9b a1 d3 5e}
0275h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0278h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
027ch mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
027fh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 cc 92 d3 5e}
0284h mov rcx,7ff7c625e2c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e2 25 c6 f7 7f 00 00}
028eh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0292h mov rcx,7ff7c715bf80h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 bf 15 c7 f7 7f 00 00}
029ch mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
02a0h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 6f 01 00 00}
02a5h mov rcx,7ff7c73f8d20h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 8d 3f c7 f7 7f 00 00}
02afh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5c a1 d3 5e}
02b4h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
02b7h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
02bbh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
02beh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 8d 92 d3 5e}
02c3h mov rcx,7ff7c625e2c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e2 25 c6 f7 7f 00 00}
02cdh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
02d1h mov rcx,7ff7c715bf10h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 10 bf 15 c7 f7 7f 00 00}
02dbh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
02dfh jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 30 01 00 00}
02e4h mov rcx,7ff7c73f8d20h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 8d 3f c7 f7 7f 00 00}
02eeh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1d a1 d3 5e}
02f3h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
02f6h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
02fah mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
02fdh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 4e 92 d3 5e}
0302h mov rcx,7ff7c625e2c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e2 25 c6 f7 7f 00 00}
030ch mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0310h mov rcx,7ff7c715bf30h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 bf 15 c7 f7 7f 00 00}
031ah mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
031eh jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f1 00 00 00}
0323h mov rcx,7ff7c73f8d20h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 8d 3f c7 f7 7f 00 00}
032dh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 de a0 d3 5e}
0332h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0335h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0339h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
033ch call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0f 92 d3 5e}
0341h mov rcx,7ff7c625e2c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e2 25 c6 f7 7f 00 00}
034bh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
034fh mov rcx,7ff7c715bf20h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 bf 15 c7 f7 7f 00 00}
0359h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
035dh jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b2 00 00 00}
0362h mov rcx,7ff7c73f8d20h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 8d 3f c7 f7 7f 00 00}
036ch call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9f a0 d3 5e}
0371h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0374h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0378h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
037bh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d0 91 d3 5e}
0380h mov rcx,7ff7c625e2c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e2 25 c6 f7 7f 00 00}
038ah mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
038eh mov rcx,7ff7c715bf90h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 90 bf 15 c7 f7 7f 00 00}
0398h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
039ch jmp short 0414h                         ; JMP rel8 || EB cb || encoded[2]{eb 76}
039eh mov rcx,7ff7c73f8d20h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 8d 3f c7 f7 7f 00 00}
03a8h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 63 a0 d3 5e}
03adh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
03b0h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
03b4h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
03b7h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 94 91 d3 5e}
03bch mov rcx,7ff7c625e2c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e2 25 c6 f7 7f 00 00}
03c6h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
03cah mov rcx,7ff7c715bf00h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 bf 15 c7 f7 7f 00 00}
03d4h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
03d8h jmp short 0414h                         ; JMP rel8 || EB cb || encoded[2]{eb 3a}
03dah mov rcx,7ff7c73f8d20h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 8d 3f c7 f7 7f 00 00}
03e4h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 27 a0 d3 5e}
03e9h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
03ech lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
03f0h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
03f3h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 58 91 d3 5e}
03f8h mov rax,7ff7c625e2c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 c0 e2 25 c6 f7 7f 00 00}
0402h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0406h mov rax,7ff7c715bfb0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 b0 bf 15 c7 f7 7f 00 00}
0410h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0414h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0417h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
041bh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
041ch pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
041dh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
041eh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
041fh ret                                     ; RET || C3 || encoded[1]{c3}
0420h mov rcx,7ff7c735c978h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 78 c9 35 c7 f7 7f 00 00}
042ah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e1 9f d3 5e}
042fh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0432h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0436h mov rcx,7ff7c6356f68h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 68 6f 35 c6 f7 7f 00 00}
0440h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0b 23 ce 5e}
0445h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0448h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0452h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b9 9f d3 5e}
0457h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
045ah mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
045fh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0469h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a2 38 e6 5e}
046eh mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
0471h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0474h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 77 5f 23 ff}
0479h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
047bh call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d8 36 23 ff}
0480h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0483h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0486h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0489h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0a 74 21 ff}
048eh mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
0491h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0494h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c7 c2 23 ff}
0499h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
049ch call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bf eb ca 5e}
04a1h int 3                                   ; INT3 || CC || encoded[1]{cc}
04a2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04a4h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04a6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04a8h add fs:[rax],al                         ; ADD r/m8, r8 || 00 /r || encoded[3]{64 00 00}
04abh add [rbx-30000000h],ah                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 a3 00 00 00 d0}
04b1h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
04b3h add [rip+58000002h],bl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 1d 02 00 00 58}
04b9h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
04bbh add [rdx+rax],bl                        ; ADD r/m8, r8 || 00 /r || encoded[4]{00 5c 02 00}
04bfh add [rdi+21000001h],bl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 9f 01 00 00 21}
04c5h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
04c7h add [rax+1],ah                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 60 01}
04cah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04cch fiadd word ptr [rcx]                    ; FIADD m16int || DE /0 || encoded[2]{de 01}
04ceh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04d0h fiadd dword ptr [rdx]                   ; FIADD m32int || DA /0 || encoded[2]{da 02}
04d2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04d4h sbb [rbx],eax                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 03}
04d6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04d8h wait                                    ; WAIT || 9B || encoded[1]{9b}
04d9h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
04dbh add [rbx+rax+0e20000h],dl               ; ADD r/m8, r8 || 00 /r || encoded[7]{00 94 03 00 00 e2 00}
04e2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04e4h and eax,19000000h                       ; AND EAX, imm32 || o32 25 id || encoded[5]{25 00 00 00 19}
04e9h or [rip+4420800h],al                    ; OR r/m8, r8 || 08 /r || encoded[6]{08 05 00 08 42 04}
04efh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
04f1h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
04f2h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
04f5h jo short 04f7h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
04f7h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; BinaryOp<ushort> lookup<ushort>(BinaryBitLogicKind:byte kind)
; lookup_g[16u](BinaryBitLogicKind~8u)[1273] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 ce 83 f9 0f 0f 87 09 04 00 00 8b c9 48 8d 05 88 04 00 00 8b 04 88 48 8d 15 e0 ff ff ff 48 03 c2 ff e0 48 b9 30 8f 3f c7 f7 7f 00 00 e8 c2 9e d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 f3 8f d3 5e 48 b9 00 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 f0 bf 15 c7 f7 7f 00 00 48 89 4e 20 e9 a6 03 00 00 48 b9 30 8f 3f c7 f7 7f 00 00 e8 83 9e d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 b4 8f d3 5e 48 b9 00 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 40 c5 15 c7 f7 7f 00 00 48 89 4e 20 e9 67 03 00 00 48 b9 30 8f 3f c7 f7 7f 00 00 e8 44 9e d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 75 8f d3 5e 48 b9 00 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 30 c5 15 c7 f7 7f 00 00 48 89 4e 20 e9 28 03 00 00 48 b9 30 8f 3f c7 f7 7f 00 00 e8 05 9e d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 36 8f d3 5e 48 b9 00 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 00 c0 15 c7 f7 7f 00 00 48 89 4e 20 e9 e9 02 00 00 48 b9 30 8f 3f c7 f7 7f 00 00 e8 c6 9d d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 f7 8e d3 5e 48 b9 00 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 d0 c4 15 c7 f7 7f 00 00 48 89 4e 20 e9 aa 02 00 00 48 b9 30 8f 3f c7 f7 7f 00 00 e8 87 9d d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 b8 8e d3 5e 48 b9 00 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 c0 c4 15 c7 f7 7f 00 00 48 89 4e 20 e9 6b 02 00 00 48 b9 30 8f 3f c7 f7 7f 00 00 e8 48 9d d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 79 8e d3 5e 48 b9 00 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 e0 c4 15 c7 f7 7f 00 00 48 89 4e 20 e9 2c 02 00 00 48 b9 30 8f 3f c7 f7 7f 00 00 e8 09 9d d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 3a 8e d3 5e 48 b9 00 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 b0 c4 15 c7 f7 7f 00 00 48 89 4e 20 e9 ed 01 00 00 48 b9 30 8f 3f c7 f7 7f 00 00 e8 ca 9c d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 fb 8d d3 5e 48 b9 00 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 10 c5 15 c7 f7 7f 00 00 48 89 4e 20 e9 ae 01 00 00 48 b9 30 8f 3f c7 f7 7f 00 00 e8 8b 9c d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 bc 8d d3 5e 48 b9 00 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 f0 c4 15 c7 f7 7f 00 00 48 89 4e 20 e9 6f 01 00 00 48 b9 30 8f 3f c7 f7 7f 00 00 e8 4c 9c d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 7d 8d d3 5e 48 b9 00 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 80 c4 15 c7 f7 7f 00 00 48 89 4e 20 e9 30 01 00 00 48 b9 30 8f 3f c7 f7 7f 00 00 e8 0d 9c d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 3e 8d d3 5e 48 b9 00 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 a0 c4 15 c7 f7 7f 00 00 48 89 4e 20 e9 f1 00 00 00 48 b9 30 8f 3f c7 f7 7f 00 00 e8 ce 9b d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 ff 8c d3 5e 48 b9 00 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 90 c4 15 c7 f7 7f 00 00 48 89 4e 20 e9 b2 00 00 00 48 b9 30 8f 3f c7 f7 7f 00 00 e8 8f 9b d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 c0 8c d3 5e 48 b9 00 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 00 c5 15 c7 f7 7f 00 00 48 89 4e 20 eb 76 48 b9 30 8f 3f c7 f7 7f 00 00 e8 53 9b d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 84 8c d3 5e 48 b9 00 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 10 c0 15 c7 f7 7f 00 00 48 89 4e 20 eb 3a 48 b9 30 8f 3f c7 f7 7f 00 00 e8 17 9b d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 48 8c d3 5e 48 b8 00 e3 25 c6 f7 7f 00 00 48 89 46 18 48 b8 20 c5 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 78 c9 35 c7 f7 7f 00 00 e8 d1 9a d3 5e 48 8b f8 40 88 77 08 48 b9 38 87 35 c6 f7 7f 00 00 e8 fb 1d ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 a9 9a d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 92 33 e6 5e 48 8b e8 48 8b ce e8 67 5a 23 ff 8b c8 e8 c8 31 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 fa 6e 21 ff 48 8b d0 48 8b cb e8 b7 bd 23 ff 48 8b cb e8 af e6 ca 5e cc 00 00 00 00 00 00 64 00 00 00 a3 00 00 00 d0 03 00 00 1d 02 00 00 58 03 00 00 5c 02 00 00 9f 01 00 00 21 01 00 00 60 01 00 00 de 01 00 00 da 02 00 00 19 03 00 00 9b 02 00 00 94 03 00 00 e2 00 00 00 25 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx ecx,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 ce}
000eh cmp ecx,0fh                             ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f9 0f}
0011h ja near ptr 0420h                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 09 04 00 00}
0017h mov ecx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c9}
0019h lea rax,[rip+488h]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 88 04 00 00}
0020h mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0023h lea rdx,[rip-20h]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 15 e0 ff ff ff}
002ah add rax,rdx                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 c2}
002dh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
002fh mov rcx,7ff7c73f8f30h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 8f 3f c7 f7 7f 00 00}
0039h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c2 9e d3 5e}
003eh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0041h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0045h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0048h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f3 8f d3 5e}
004dh mov rcx,7ff7c625e300h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e3 25 c6 f7 7f 00 00}
0057h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
005bh mov rcx,7ff7c715bff0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 f0 bf 15 c7 f7 7f 00 00}
0065h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0069h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 a6 03 00 00}
006eh mov rcx,7ff7c73f8f30h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 8f 3f c7 f7 7f 00 00}
0078h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 83 9e d3 5e}
007dh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0080h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0084h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0087h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b4 8f d3 5e}
008ch mov rcx,7ff7c625e300h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e3 25 c6 f7 7f 00 00}
0096h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
009ah mov rcx,7ff7c715c540h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 c5 15 c7 f7 7f 00 00}
00a4h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00a8h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 67 03 00 00}
00adh mov rcx,7ff7c73f8f30h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 8f 3f c7 f7 7f 00 00}
00b7h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 44 9e d3 5e}
00bch mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00bfh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
00c3h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
00c6h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 75 8f d3 5e}
00cbh mov rcx,7ff7c625e300h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e3 25 c6 f7 7f 00 00}
00d5h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
00d9h mov rcx,7ff7c715c530h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 c5 15 c7 f7 7f 00 00}
00e3h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00e7h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 28 03 00 00}
00ech mov rcx,7ff7c73f8f30h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 8f 3f c7 f7 7f 00 00}
00f6h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 05 9e d3 5e}
00fbh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00feh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0102h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0105h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 36 8f d3 5e}
010ah mov rcx,7ff7c625e300h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e3 25 c6 f7 7f 00 00}
0114h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0118h mov rcx,7ff7c715c000h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 c0 15 c7 f7 7f 00 00}
0122h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0126h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 e9 02 00 00}
012bh mov rcx,7ff7c73f8f30h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 8f 3f c7 f7 7f 00 00}
0135h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c6 9d d3 5e}
013ah mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
013dh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0141h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0144h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f7 8e d3 5e}
0149h mov rcx,7ff7c625e300h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e3 25 c6 f7 7f 00 00}
0153h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0157h mov rcx,7ff7c715c4d0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d0 c4 15 c7 f7 7f 00 00}
0161h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0165h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 aa 02 00 00}
016ah mov rcx,7ff7c73f8f30h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 8f 3f c7 f7 7f 00 00}
0174h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 87 9d d3 5e}
0179h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
017ch lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0180h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0183h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b8 8e d3 5e}
0188h mov rcx,7ff7c625e300h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e3 25 c6 f7 7f 00 00}
0192h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0196h mov rcx,7ff7c715c4c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 c4 15 c7 f7 7f 00 00}
01a0h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
01a4h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 6b 02 00 00}
01a9h mov rcx,7ff7c73f8f30h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 8f 3f c7 f7 7f 00 00}
01b3h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 48 9d d3 5e}
01b8h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
01bbh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
01bfh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
01c2h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 79 8e d3 5e}
01c7h mov rcx,7ff7c625e300h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e3 25 c6 f7 7f 00 00}
01d1h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
01d5h mov rcx,7ff7c715c4e0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e0 c4 15 c7 f7 7f 00 00}
01dfh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
01e3h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 2c 02 00 00}
01e8h mov rcx,7ff7c73f8f30h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 8f 3f c7 f7 7f 00 00}
01f2h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 09 9d d3 5e}
01f7h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
01fah lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
01feh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0201h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3a 8e d3 5e}
0206h mov rcx,7ff7c625e300h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e3 25 c6 f7 7f 00 00}
0210h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0214h mov rcx,7ff7c715c4b0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 b0 c4 15 c7 f7 7f 00 00}
021eh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0222h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ed 01 00 00}
0227h mov rcx,7ff7c73f8f30h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 8f 3f c7 f7 7f 00 00}
0231h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ca 9c d3 5e}
0236h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0239h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
023dh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0240h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fb 8d d3 5e}
0245h mov rcx,7ff7c625e300h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e3 25 c6 f7 7f 00 00}
024fh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0253h mov rcx,7ff7c715c510h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 10 c5 15 c7 f7 7f 00 00}
025dh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0261h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ae 01 00 00}
0266h mov rcx,7ff7c73f8f30h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 8f 3f c7 f7 7f 00 00}
0270h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 8b 9c d3 5e}
0275h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0278h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
027ch mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
027fh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bc 8d d3 5e}
0284h mov rcx,7ff7c625e300h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e3 25 c6 f7 7f 00 00}
028eh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0292h mov rcx,7ff7c715c4f0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 f0 c4 15 c7 f7 7f 00 00}
029ch mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
02a0h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 6f 01 00 00}
02a5h mov rcx,7ff7c73f8f30h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 8f 3f c7 f7 7f 00 00}
02afh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 4c 9c d3 5e}
02b4h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
02b7h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
02bbh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
02beh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7d 8d d3 5e}
02c3h mov rcx,7ff7c625e300h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e3 25 c6 f7 7f 00 00}
02cdh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
02d1h mov rcx,7ff7c715c480h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 c4 15 c7 f7 7f 00 00}
02dbh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
02dfh jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 30 01 00 00}
02e4h mov rcx,7ff7c73f8f30h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 8f 3f c7 f7 7f 00 00}
02eeh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0d 9c d3 5e}
02f3h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
02f6h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
02fah mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
02fdh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3e 8d d3 5e}
0302h mov rcx,7ff7c625e300h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e3 25 c6 f7 7f 00 00}
030ch mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0310h mov rcx,7ff7c715c4a0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 a0 c4 15 c7 f7 7f 00 00}
031ah mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
031eh jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f1 00 00 00}
0323h mov rcx,7ff7c73f8f30h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 8f 3f c7 f7 7f 00 00}
032dh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ce 9b d3 5e}
0332h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0335h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0339h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
033ch call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ff 8c d3 5e}
0341h mov rcx,7ff7c625e300h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e3 25 c6 f7 7f 00 00}
034bh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
034fh mov rcx,7ff7c715c490h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 90 c4 15 c7 f7 7f 00 00}
0359h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
035dh jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b2 00 00 00}
0362h mov rcx,7ff7c73f8f30h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 8f 3f c7 f7 7f 00 00}
036ch call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 8f 9b d3 5e}
0371h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0374h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0378h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
037bh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c0 8c d3 5e}
0380h mov rcx,7ff7c625e300h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e3 25 c6 f7 7f 00 00}
038ah mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
038eh mov rcx,7ff7c715c500h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 c5 15 c7 f7 7f 00 00}
0398h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
039ch jmp short 0414h                         ; JMP rel8 || EB cb || encoded[2]{eb 76}
039eh mov rcx,7ff7c73f8f30h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 8f 3f c7 f7 7f 00 00}
03a8h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 53 9b d3 5e}
03adh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
03b0h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
03b4h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
03b7h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 84 8c d3 5e}
03bch mov rcx,7ff7c625e300h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e3 25 c6 f7 7f 00 00}
03c6h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
03cah mov rcx,7ff7c715c010h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 10 c0 15 c7 f7 7f 00 00}
03d4h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
03d8h jmp short 0414h                         ; JMP rel8 || EB cb || encoded[2]{eb 3a}
03dah mov rcx,7ff7c73f8f30h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 8f 3f c7 f7 7f 00 00}
03e4h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 17 9b d3 5e}
03e9h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
03ech lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
03f0h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
03f3h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 48 8c d3 5e}
03f8h mov rax,7ff7c625e300h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 00 e3 25 c6 f7 7f 00 00}
0402h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0406h mov rax,7ff7c715c520h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 20 c5 15 c7 f7 7f 00 00}
0410h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0414h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0417h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
041bh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
041ch pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
041dh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
041eh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
041fh ret                                     ; RET || C3 || encoded[1]{c3}
0420h mov rcx,7ff7c735c978h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 78 c9 35 c7 f7 7f 00 00}
042ah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d1 9a d3 5e}
042fh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0432h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0436h mov rcx,7ff7c6358738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 38 87 35 c6 f7 7f 00 00}
0440h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fb 1d ce 5e}
0445h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0448h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0452h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a9 9a d3 5e}
0457h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
045ah mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
045fh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0469h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 92 33 e6 5e}
046eh mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
0471h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0474h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 67 5a 23 ff}
0479h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
047bh call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c8 31 23 ff}
0480h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0483h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0486h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0489h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fa 6e 21 ff}
048eh mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
0491h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0494h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b7 bd 23 ff}
0499h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
049ch call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 af e6 ca 5e}
04a1h int 3                                   ; INT3 || CC || encoded[1]{cc}
04a2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04a4h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04a6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04a8h add fs:[rax],al                         ; ADD r/m8, r8 || 00 /r || encoded[3]{64 00 00}
04abh add [rbx-30000000h],ah                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 a3 00 00 00 d0}
04b1h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
04b3h add [rip+58000002h],bl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 1d 02 00 00 58}
04b9h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
04bbh add [rdx+rax],bl                        ; ADD r/m8, r8 || 00 /r || encoded[4]{00 5c 02 00}
04bfh add [rdi+21000001h],bl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 9f 01 00 00 21}
04c5h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
04c7h add [rax+1],ah                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 60 01}
04cah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04cch fiadd word ptr [rcx]                    ; FIADD m16int || DE /0 || encoded[2]{de 01}
04ceh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04d0h fiadd dword ptr [rdx]                   ; FIADD m32int || DA /0 || encoded[2]{da 02}
04d2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04d4h sbb [rbx],eax                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 03}
04d6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04d8h wait                                    ; WAIT || 9B || encoded[1]{9b}
04d9h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
04dbh add [rbx+rax+0e20000h],dl               ; ADD r/m8, r8 || 00 /r || encoded[7]{00 94 03 00 00 e2 00}
04e2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04e4h and eax,19000000h                       ; AND EAX, imm32 || o32 25 id || encoded[5]{25 00 00 00 19}
04e9h or [rip+4420800h],al                    ; OR r/m8, r8 || 08 /r || encoded[6]{08 05 00 08 42 04}
04efh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
04f1h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
04f2h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
04f5h jo short 04f7h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
04f7h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; BinaryOp<short> lookup<short>(BinaryBitLogicKind:byte kind)
; lookup_g[16i](BinaryBitLogicKind~8u)[1273] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 ce 83 f9 0f 0f 87 09 04 00 00 8b c9 48 8d 05 88 04 00 00 8b 04 88 48 8d 15 e0 ff ff ff 48 03 c2 ff e0 48 b9 40 91 3f c7 f7 7f 00 00 e8 b2 99 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 e3 8a d3 5e 48 b9 40 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 70 c5 15 c7 f7 7f 00 00 48 89 4e 20 e9 a6 03 00 00 48 b9 40 91 3f c7 f7 7f 00 00 e8 73 99 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 a4 8a d3 5e 48 b9 40 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 60 c6 15 c7 f7 7f 00 00 48 89 4e 20 e9 67 03 00 00 48 b9 40 91 3f c7 f7 7f 00 00 e8 34 99 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 65 8a d3 5e 48 b9 40 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 50 c6 15 c7 f7 7f 00 00 48 89 4e 20 e9 28 03 00 00 48 b9 40 91 3f c7 f7 7f 00 00 e8 f5 98 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 26 8a d3 5e 48 b9 40 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 80 c5 15 c7 f7 7f 00 00 48 89 4e 20 e9 e9 02 00 00 48 b9 40 91 3f c7 f7 7f 00 00 e8 b6 98 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 e7 89 d3 5e 48 b9 40 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 f0 c5 15 c7 f7 7f 00 00 48 89 4e 20 e9 aa 02 00 00 48 b9 40 91 3f c7 f7 7f 00 00 e8 77 98 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 a8 89 d3 5e 48 b9 40 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 e0 c5 15 c7 f7 7f 00 00 48 89 4e 20 e9 6b 02 00 00 48 b9 40 91 3f c7 f7 7f 00 00 e8 38 98 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 69 89 d3 5e 48 b9 40 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 00 c6 15 c7 f7 7f 00 00 48 89 4e 20 e9 2c 02 00 00 48 b9 40 91 3f c7 f7 7f 00 00 e8 f9 97 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 2a 89 d3 5e 48 b9 40 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 d0 c5 15 c7 f7 7f 00 00 48 89 4e 20 e9 ed 01 00 00 48 b9 40 91 3f c7 f7 7f 00 00 e8 ba 97 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 eb 88 d3 5e 48 b9 40 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 30 c6 15 c7 f7 7f 00 00 48 89 4e 20 e9 ae 01 00 00 48 b9 40 91 3f c7 f7 7f 00 00 e8 7b 97 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 ac 88 d3 5e 48 b9 40 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 10 c6 15 c7 f7 7f 00 00 48 89 4e 20 e9 6f 01 00 00 48 b9 40 91 3f c7 f7 7f 00 00 e8 3c 97 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 6d 88 d3 5e 48 b9 40 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 a0 c5 15 c7 f7 7f 00 00 48 89 4e 20 e9 30 01 00 00 48 b9 40 91 3f c7 f7 7f 00 00 e8 fd 96 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 2e 88 d3 5e 48 b9 40 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 c0 c5 15 c7 f7 7f 00 00 48 89 4e 20 e9 f1 00 00 00 48 b9 40 91 3f c7 f7 7f 00 00 e8 be 96 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 ef 87 d3 5e 48 b9 40 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 b0 c5 15 c7 f7 7f 00 00 48 89 4e 20 e9 b2 00 00 00 48 b9 40 91 3f c7 f7 7f 00 00 e8 7f 96 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 b0 87 d3 5e 48 b9 40 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 20 c6 15 c7 f7 7f 00 00 48 89 4e 20 eb 76 48 b9 40 91 3f c7 f7 7f 00 00 e8 43 96 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 74 87 d3 5e 48 b9 40 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 90 c5 15 c7 f7 7f 00 00 48 89 4e 20 eb 3a 48 b9 40 91 3f c7 f7 7f 00 00 e8 07 96 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 38 87 d3 5e 48 b8 40 e3 25 c6 f7 7f 00 00 48 89 46 18 48 b8 40 c6 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 78 c9 35 c7 f7 7f 00 00 e8 c1 95 d3 5e 48 8b f8 40 88 77 08 48 b9 48 7f 35 c6 f7 7f 00 00 e8 eb 18 ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 99 95 d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 82 2e e6 5e 48 8b e8 48 8b ce e8 57 55 23 ff 8b c8 e8 b8 2c 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 ea 69 21 ff 48 8b d0 48 8b cb e8 a7 b8 23 ff 48 8b cb e8 9f e1 ca 5e cc 00 00 00 00 00 00 64 00 00 00 a3 00 00 00 d0 03 00 00 1d 02 00 00 58 03 00 00 5c 02 00 00 9f 01 00 00 21 01 00 00 60 01 00 00 de 01 00 00 da 02 00 00 19 03 00 00 9b 02 00 00 94 03 00 00 e2 00 00 00 25 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx ecx,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 ce}
000eh cmp ecx,0fh                             ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f9 0f}
0011h ja near ptr 0420h                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 09 04 00 00}
0017h mov ecx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c9}
0019h lea rax,[rip+488h]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 88 04 00 00}
0020h mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0023h lea rdx,[rip-20h]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 15 e0 ff ff ff}
002ah add rax,rdx                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 c2}
002dh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
002fh mov rcx,7ff7c73f9140h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 91 3f c7 f7 7f 00 00}
0039h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b2 99 d3 5e}
003eh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0041h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0045h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0048h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e3 8a d3 5e}
004dh mov rcx,7ff7c625e340h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e3 25 c6 f7 7f 00 00}
0057h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
005bh mov rcx,7ff7c715c570h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 c5 15 c7 f7 7f 00 00}
0065h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0069h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 a6 03 00 00}
006eh mov rcx,7ff7c73f9140h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 91 3f c7 f7 7f 00 00}
0078h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 73 99 d3 5e}
007dh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0080h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0084h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0087h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a4 8a d3 5e}
008ch mov rcx,7ff7c625e340h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e3 25 c6 f7 7f 00 00}
0096h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
009ah mov rcx,7ff7c715c660h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 c6 15 c7 f7 7f 00 00}
00a4h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00a8h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 67 03 00 00}
00adh mov rcx,7ff7c73f9140h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 91 3f c7 f7 7f 00 00}
00b7h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 34 99 d3 5e}
00bch mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00bfh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
00c3h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
00c6h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 65 8a d3 5e}
00cbh mov rcx,7ff7c625e340h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e3 25 c6 f7 7f 00 00}
00d5h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
00d9h mov rcx,7ff7c715c650h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 50 c6 15 c7 f7 7f 00 00}
00e3h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00e7h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 28 03 00 00}
00ech mov rcx,7ff7c73f9140h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 91 3f c7 f7 7f 00 00}
00f6h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f5 98 d3 5e}
00fbh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00feh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0102h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0105h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 26 8a d3 5e}
010ah mov rcx,7ff7c625e340h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e3 25 c6 f7 7f 00 00}
0114h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0118h mov rcx,7ff7c715c580h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 c5 15 c7 f7 7f 00 00}
0122h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0126h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 e9 02 00 00}
012bh mov rcx,7ff7c73f9140h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 91 3f c7 f7 7f 00 00}
0135h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b6 98 d3 5e}
013ah mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
013dh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0141h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0144h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e7 89 d3 5e}
0149h mov rcx,7ff7c625e340h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e3 25 c6 f7 7f 00 00}
0153h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0157h mov rcx,7ff7c715c5f0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 f0 c5 15 c7 f7 7f 00 00}
0161h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0165h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 aa 02 00 00}
016ah mov rcx,7ff7c73f9140h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 91 3f c7 f7 7f 00 00}
0174h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 77 98 d3 5e}
0179h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
017ch lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0180h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0183h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a8 89 d3 5e}
0188h mov rcx,7ff7c625e340h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e3 25 c6 f7 7f 00 00}
0192h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0196h mov rcx,7ff7c715c5e0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e0 c5 15 c7 f7 7f 00 00}
01a0h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
01a4h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 6b 02 00 00}
01a9h mov rcx,7ff7c73f9140h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 91 3f c7 f7 7f 00 00}
01b3h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 38 98 d3 5e}
01b8h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
01bbh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
01bfh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
01c2h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 69 89 d3 5e}
01c7h mov rcx,7ff7c625e340h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e3 25 c6 f7 7f 00 00}
01d1h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
01d5h mov rcx,7ff7c715c600h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 c6 15 c7 f7 7f 00 00}
01dfh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
01e3h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 2c 02 00 00}
01e8h mov rcx,7ff7c73f9140h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 91 3f c7 f7 7f 00 00}
01f2h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f9 97 d3 5e}
01f7h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
01fah lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
01feh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0201h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2a 89 d3 5e}
0206h mov rcx,7ff7c625e340h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e3 25 c6 f7 7f 00 00}
0210h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0214h mov rcx,7ff7c715c5d0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d0 c5 15 c7 f7 7f 00 00}
021eh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0222h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ed 01 00 00}
0227h mov rcx,7ff7c73f9140h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 91 3f c7 f7 7f 00 00}
0231h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ba 97 d3 5e}
0236h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0239h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
023dh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0240h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 eb 88 d3 5e}
0245h mov rcx,7ff7c625e340h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e3 25 c6 f7 7f 00 00}
024fh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0253h mov rcx,7ff7c715c630h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 c6 15 c7 f7 7f 00 00}
025dh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0261h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ae 01 00 00}
0266h mov rcx,7ff7c73f9140h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 91 3f c7 f7 7f 00 00}
0270h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7b 97 d3 5e}
0275h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0278h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
027ch mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
027fh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ac 88 d3 5e}
0284h mov rcx,7ff7c625e340h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e3 25 c6 f7 7f 00 00}
028eh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0292h mov rcx,7ff7c715c610h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 10 c6 15 c7 f7 7f 00 00}
029ch mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
02a0h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 6f 01 00 00}
02a5h mov rcx,7ff7c73f9140h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 91 3f c7 f7 7f 00 00}
02afh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3c 97 d3 5e}
02b4h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
02b7h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
02bbh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
02beh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6d 88 d3 5e}
02c3h mov rcx,7ff7c625e340h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e3 25 c6 f7 7f 00 00}
02cdh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
02d1h mov rcx,7ff7c715c5a0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 a0 c5 15 c7 f7 7f 00 00}
02dbh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
02dfh jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 30 01 00 00}
02e4h mov rcx,7ff7c73f9140h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 91 3f c7 f7 7f 00 00}
02eeh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fd 96 d3 5e}
02f3h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
02f6h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
02fah mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
02fdh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2e 88 d3 5e}
0302h mov rcx,7ff7c625e340h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e3 25 c6 f7 7f 00 00}
030ch mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0310h mov rcx,7ff7c715c5c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 c5 15 c7 f7 7f 00 00}
031ah mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
031eh jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f1 00 00 00}
0323h mov rcx,7ff7c73f9140h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 91 3f c7 f7 7f 00 00}
032dh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 be 96 d3 5e}
0332h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0335h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0339h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
033ch call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ef 87 d3 5e}
0341h mov rcx,7ff7c625e340h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e3 25 c6 f7 7f 00 00}
034bh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
034fh mov rcx,7ff7c715c5b0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 b0 c5 15 c7 f7 7f 00 00}
0359h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
035dh jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b2 00 00 00}
0362h mov rcx,7ff7c73f9140h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 91 3f c7 f7 7f 00 00}
036ch call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7f 96 d3 5e}
0371h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0374h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0378h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
037bh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b0 87 d3 5e}
0380h mov rcx,7ff7c625e340h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e3 25 c6 f7 7f 00 00}
038ah mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
038eh mov rcx,7ff7c715c620h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 c6 15 c7 f7 7f 00 00}
0398h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
039ch jmp short 0414h                         ; JMP rel8 || EB cb || encoded[2]{eb 76}
039eh mov rcx,7ff7c73f9140h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 91 3f c7 f7 7f 00 00}
03a8h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 43 96 d3 5e}
03adh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
03b0h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
03b4h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
03b7h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 74 87 d3 5e}
03bch mov rcx,7ff7c625e340h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e3 25 c6 f7 7f 00 00}
03c6h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
03cah mov rcx,7ff7c715c590h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 90 c5 15 c7 f7 7f 00 00}
03d4h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
03d8h jmp short 0414h                         ; JMP rel8 || EB cb || encoded[2]{eb 3a}
03dah mov rcx,7ff7c73f9140h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 91 3f c7 f7 7f 00 00}
03e4h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 07 96 d3 5e}
03e9h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
03ech lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
03f0h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
03f3h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 38 87 d3 5e}
03f8h mov rax,7ff7c625e340h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 40 e3 25 c6 f7 7f 00 00}
0402h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0406h mov rax,7ff7c715c640h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 40 c6 15 c7 f7 7f 00 00}
0410h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0414h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0417h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
041bh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
041ch pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
041dh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
041eh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
041fh ret                                     ; RET || C3 || encoded[1]{c3}
0420h mov rcx,7ff7c735c978h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 78 c9 35 c7 f7 7f 00 00}
042ah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c1 95 d3 5e}
042fh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0432h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0436h mov rcx,7ff7c6357f48h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 48 7f 35 c6 f7 7f 00 00}
0440h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 eb 18 ce 5e}
0445h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0448h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0452h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 99 95 d3 5e}
0457h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
045ah mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
045fh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0469h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 82 2e e6 5e}
046eh mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
0471h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0474h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 57 55 23 ff}
0479h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
047bh call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b8 2c 23 ff}
0480h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0483h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0486h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0489h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ea 69 21 ff}
048eh mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
0491h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0494h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a7 b8 23 ff}
0499h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
049ch call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9f e1 ca 5e}
04a1h int 3                                   ; INT3 || CC || encoded[1]{cc}
04a2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04a4h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04a6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04a8h add fs:[rax],al                         ; ADD r/m8, r8 || 00 /r || encoded[3]{64 00 00}
04abh add [rbx-30000000h],ah                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 a3 00 00 00 d0}
04b1h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
04b3h add [rip+58000002h],bl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 1d 02 00 00 58}
04b9h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
04bbh add [rdx+rax],bl                        ; ADD r/m8, r8 || 00 /r || encoded[4]{00 5c 02 00}
04bfh add [rdi+21000001h],bl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 9f 01 00 00 21}
04c5h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
04c7h add [rax+1],ah                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 60 01}
04cah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04cch fiadd word ptr [rcx]                    ; FIADD m16int || DE /0 || encoded[2]{de 01}
04ceh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04d0h fiadd dword ptr [rdx]                   ; FIADD m32int || DA /0 || encoded[2]{da 02}
04d2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04d4h sbb [rbx],eax                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 03}
04d6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04d8h wait                                    ; WAIT || 9B || encoded[1]{9b}
04d9h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
04dbh add [rbx+rax+0e20000h],dl               ; ADD r/m8, r8 || 00 /r || encoded[7]{00 94 03 00 00 e2 00}
04e2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04e4h and eax,19000000h                       ; AND EAX, imm32 || o32 25 id || encoded[5]{25 00 00 00 19}
04e9h or [rip+4420800h],al                    ; OR r/m8, r8 || 08 /r || encoded[6]{08 05 00 08 42 04}
04efh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
04f1h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
04f2h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
04f5h jo short 04f7h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
04f7h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; BinaryOp<uint> lookup<uint>(BinaryBitLogicKind:byte kind)
; lookup_g[32u](BinaryBitLogicKind~8u)[1273] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 ce 83 f9 0f 0f 87 09 04 00 00 8b c9 48 8d 05 88 04 00 00 8b 04 88 48 8d 15 e0 ff ff ff 48 03 c2 ff e0 48 b9 50 93 3f c7 f7 7f 00 00 e8 a2 94 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 d3 85 d3 5e 48 b9 80 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 80 c6 15 c7 f7 7f 00 00 48 89 4e 20 e9 a6 03 00 00 48 b9 50 93 3f c7 f7 7f 00 00 e8 63 94 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 94 85 d3 5e 48 b9 80 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 70 c7 15 c7 f7 7f 00 00 48 89 4e 20 e9 67 03 00 00 48 b9 50 93 3f c7 f7 7f 00 00 e8 24 94 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 55 85 d3 5e 48 b9 80 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 60 c7 15 c7 f7 7f 00 00 48 89 4e 20 e9 28 03 00 00 48 b9 50 93 3f c7 f7 7f 00 00 e8 e5 93 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 16 85 d3 5e 48 b9 80 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 90 c6 15 c7 f7 7f 00 00 48 89 4e 20 e9 e9 02 00 00 48 b9 50 93 3f c7 f7 7f 00 00 e8 a6 93 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 d7 84 d3 5e 48 b9 80 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 00 c7 15 c7 f7 7f 00 00 48 89 4e 20 e9 aa 02 00 00 48 b9 50 93 3f c7 f7 7f 00 00 e8 67 93 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 98 84 d3 5e 48 b9 80 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 f0 c6 15 c7 f7 7f 00 00 48 89 4e 20 e9 6b 02 00 00 48 b9 50 93 3f c7 f7 7f 00 00 e8 28 93 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 59 84 d3 5e 48 b9 80 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 10 c7 15 c7 f7 7f 00 00 48 89 4e 20 e9 2c 02 00 00 48 b9 50 93 3f c7 f7 7f 00 00 e8 e9 92 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 1a 84 d3 5e 48 b9 80 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 e0 c6 15 c7 f7 7f 00 00 48 89 4e 20 e9 ed 01 00 00 48 b9 50 93 3f c7 f7 7f 00 00 e8 aa 92 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 db 83 d3 5e 48 b9 80 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 40 c7 15 c7 f7 7f 00 00 48 89 4e 20 e9 ae 01 00 00 48 b9 50 93 3f c7 f7 7f 00 00 e8 6b 92 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 9c 83 d3 5e 48 b9 80 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 20 c7 15 c7 f7 7f 00 00 48 89 4e 20 e9 6f 01 00 00 48 b9 50 93 3f c7 f7 7f 00 00 e8 2c 92 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 5d 83 d3 5e 48 b9 80 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 b0 c6 15 c7 f7 7f 00 00 48 89 4e 20 e9 30 01 00 00 48 b9 50 93 3f c7 f7 7f 00 00 e8 ed 91 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 1e 83 d3 5e 48 b9 80 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 d0 c6 15 c7 f7 7f 00 00 48 89 4e 20 e9 f1 00 00 00 48 b9 50 93 3f c7 f7 7f 00 00 e8 ae 91 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 df 82 d3 5e 48 b9 80 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 c0 c6 15 c7 f7 7f 00 00 48 89 4e 20 e9 b2 00 00 00 48 b9 50 93 3f c7 f7 7f 00 00 e8 6f 91 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 a0 82 d3 5e 48 b9 80 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 30 c7 15 c7 f7 7f 00 00 48 89 4e 20 eb 76 48 b9 50 93 3f c7 f7 7f 00 00 e8 33 91 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 64 82 d3 5e 48 b9 80 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 a0 c6 15 c7 f7 7f 00 00 48 89 4e 20 eb 3a 48 b9 50 93 3f c7 f7 7f 00 00 e8 f7 90 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 28 82 d3 5e 48 b8 80 e3 25 c6 f7 7f 00 00 48 89 46 18 48 b8 50 c7 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 78 c9 35 c7 f7 7f 00 00 e8 b1 90 d3 5e 48 8b f8 40 88 77 08 48 b9 d8 96 35 c6 f7 7f 00 00 e8 db 13 ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 89 90 d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 72 29 e6 5e 48 8b e8 48 8b ce e8 47 50 23 ff 8b c8 e8 a8 27 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 da 64 21 ff 48 8b d0 48 8b cb e8 97 b3 23 ff 48 8b cb e8 8f dc ca 5e cc 00 00 00 00 00 00 64 00 00 00 a3 00 00 00 d0 03 00 00 1d 02 00 00 58 03 00 00 5c 02 00 00 9f 01 00 00 21 01 00 00 60 01 00 00 de 01 00 00 da 02 00 00 19 03 00 00 9b 02 00 00 94 03 00 00 e2 00 00 00 25 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx ecx,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 ce}
000eh cmp ecx,0fh                             ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f9 0f}
0011h ja near ptr 0420h                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 09 04 00 00}
0017h mov ecx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c9}
0019h lea rax,[rip+488h]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 88 04 00 00}
0020h mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0023h lea rdx,[rip-20h]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 15 e0 ff ff ff}
002ah add rax,rdx                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 c2}
002dh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
002fh mov rcx,7ff7c73f9350h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 50 93 3f c7 f7 7f 00 00}
0039h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a2 94 d3 5e}
003eh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0041h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0045h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0048h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d3 85 d3 5e}
004dh mov rcx,7ff7c625e380h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 e3 25 c6 f7 7f 00 00}
0057h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
005bh mov rcx,7ff7c715c680h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 c6 15 c7 f7 7f 00 00}
0065h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0069h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 a6 03 00 00}
006eh mov rcx,7ff7c73f9350h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 50 93 3f c7 f7 7f 00 00}
0078h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 63 94 d3 5e}
007dh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0080h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0084h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0087h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 94 85 d3 5e}
008ch mov rcx,7ff7c625e380h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 e3 25 c6 f7 7f 00 00}
0096h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
009ah mov rcx,7ff7c715c770h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 c7 15 c7 f7 7f 00 00}
00a4h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00a8h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 67 03 00 00}
00adh mov rcx,7ff7c73f9350h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 50 93 3f c7 f7 7f 00 00}
00b7h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 24 94 d3 5e}
00bch mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00bfh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
00c3h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
00c6h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 55 85 d3 5e}
00cbh mov rcx,7ff7c625e380h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 e3 25 c6 f7 7f 00 00}
00d5h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
00d9h mov rcx,7ff7c715c760h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 c7 15 c7 f7 7f 00 00}
00e3h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00e7h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 28 03 00 00}
00ech mov rcx,7ff7c73f9350h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 50 93 3f c7 f7 7f 00 00}
00f6h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e5 93 d3 5e}
00fbh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00feh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0102h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0105h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 16 85 d3 5e}
010ah mov rcx,7ff7c625e380h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 e3 25 c6 f7 7f 00 00}
0114h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0118h mov rcx,7ff7c715c690h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 90 c6 15 c7 f7 7f 00 00}
0122h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0126h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 e9 02 00 00}
012bh mov rcx,7ff7c73f9350h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 50 93 3f c7 f7 7f 00 00}
0135h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a6 93 d3 5e}
013ah mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
013dh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0141h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0144h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d7 84 d3 5e}
0149h mov rcx,7ff7c625e380h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 e3 25 c6 f7 7f 00 00}
0153h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0157h mov rcx,7ff7c715c700h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 c7 15 c7 f7 7f 00 00}
0161h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0165h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 aa 02 00 00}
016ah mov rcx,7ff7c73f9350h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 50 93 3f c7 f7 7f 00 00}
0174h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 67 93 d3 5e}
0179h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
017ch lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0180h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0183h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 98 84 d3 5e}
0188h mov rcx,7ff7c625e380h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 e3 25 c6 f7 7f 00 00}
0192h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0196h mov rcx,7ff7c715c6f0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 f0 c6 15 c7 f7 7f 00 00}
01a0h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
01a4h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 6b 02 00 00}
01a9h mov rcx,7ff7c73f9350h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 50 93 3f c7 f7 7f 00 00}
01b3h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 28 93 d3 5e}
01b8h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
01bbh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
01bfh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
01c2h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 59 84 d3 5e}
01c7h mov rcx,7ff7c625e380h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 e3 25 c6 f7 7f 00 00}
01d1h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
01d5h mov rcx,7ff7c715c710h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 10 c7 15 c7 f7 7f 00 00}
01dfh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
01e3h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 2c 02 00 00}
01e8h mov rcx,7ff7c73f9350h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 50 93 3f c7 f7 7f 00 00}
01f2h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e9 92 d3 5e}
01f7h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
01fah lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
01feh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0201h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1a 84 d3 5e}
0206h mov rcx,7ff7c625e380h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 e3 25 c6 f7 7f 00 00}
0210h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0214h mov rcx,7ff7c715c6e0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e0 c6 15 c7 f7 7f 00 00}
021eh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0222h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ed 01 00 00}
0227h mov rcx,7ff7c73f9350h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 50 93 3f c7 f7 7f 00 00}
0231h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 aa 92 d3 5e}
0236h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0239h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
023dh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0240h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 db 83 d3 5e}
0245h mov rcx,7ff7c625e380h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 e3 25 c6 f7 7f 00 00}
024fh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0253h mov rcx,7ff7c715c740h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 c7 15 c7 f7 7f 00 00}
025dh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0261h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ae 01 00 00}
0266h mov rcx,7ff7c73f9350h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 50 93 3f c7 f7 7f 00 00}
0270h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6b 92 d3 5e}
0275h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0278h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
027ch mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
027fh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9c 83 d3 5e}
0284h mov rcx,7ff7c625e380h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 e3 25 c6 f7 7f 00 00}
028eh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0292h mov rcx,7ff7c715c720h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 c7 15 c7 f7 7f 00 00}
029ch mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
02a0h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 6f 01 00 00}
02a5h mov rcx,7ff7c73f9350h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 50 93 3f c7 f7 7f 00 00}
02afh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2c 92 d3 5e}
02b4h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
02b7h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
02bbh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
02beh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5d 83 d3 5e}
02c3h mov rcx,7ff7c625e380h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 e3 25 c6 f7 7f 00 00}
02cdh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
02d1h mov rcx,7ff7c715c6b0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 b0 c6 15 c7 f7 7f 00 00}
02dbh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
02dfh jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 30 01 00 00}
02e4h mov rcx,7ff7c73f9350h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 50 93 3f c7 f7 7f 00 00}
02eeh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ed 91 d3 5e}
02f3h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
02f6h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
02fah mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
02fdh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1e 83 d3 5e}
0302h mov rcx,7ff7c625e380h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 e3 25 c6 f7 7f 00 00}
030ch mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0310h mov rcx,7ff7c715c6d0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d0 c6 15 c7 f7 7f 00 00}
031ah mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
031eh jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f1 00 00 00}
0323h mov rcx,7ff7c73f9350h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 50 93 3f c7 f7 7f 00 00}
032dh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ae 91 d3 5e}
0332h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0335h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0339h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
033ch call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 df 82 d3 5e}
0341h mov rcx,7ff7c625e380h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 e3 25 c6 f7 7f 00 00}
034bh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
034fh mov rcx,7ff7c715c6c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 c6 15 c7 f7 7f 00 00}
0359h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
035dh jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b2 00 00 00}
0362h mov rcx,7ff7c73f9350h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 50 93 3f c7 f7 7f 00 00}
036ch call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6f 91 d3 5e}
0371h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0374h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0378h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
037bh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a0 82 d3 5e}
0380h mov rcx,7ff7c625e380h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 e3 25 c6 f7 7f 00 00}
038ah mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
038eh mov rcx,7ff7c715c730h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 c7 15 c7 f7 7f 00 00}
0398h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
039ch jmp short 0414h                         ; JMP rel8 || EB cb || encoded[2]{eb 76}
039eh mov rcx,7ff7c73f9350h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 50 93 3f c7 f7 7f 00 00}
03a8h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 33 91 d3 5e}
03adh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
03b0h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
03b4h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
03b7h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 64 82 d3 5e}
03bch mov rcx,7ff7c625e380h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 e3 25 c6 f7 7f 00 00}
03c6h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
03cah mov rcx,7ff7c715c6a0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 a0 c6 15 c7 f7 7f 00 00}
03d4h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
03d8h jmp short 0414h                         ; JMP rel8 || EB cb || encoded[2]{eb 3a}
03dah mov rcx,7ff7c73f9350h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 50 93 3f c7 f7 7f 00 00}
03e4h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f7 90 d3 5e}
03e9h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
03ech lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
03f0h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
03f3h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 28 82 d3 5e}
03f8h mov rax,7ff7c625e380h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 80 e3 25 c6 f7 7f 00 00}
0402h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0406h mov rax,7ff7c715c750h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 50 c7 15 c7 f7 7f 00 00}
0410h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0414h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0417h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
041bh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
041ch pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
041dh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
041eh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
041fh ret                                     ; RET || C3 || encoded[1]{c3}
0420h mov rcx,7ff7c735c978h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 78 c9 35 c7 f7 7f 00 00}
042ah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b1 90 d3 5e}
042fh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0432h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0436h mov rcx,7ff7c63596d8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d8 96 35 c6 f7 7f 00 00}
0440h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 db 13 ce 5e}
0445h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0448h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0452h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 89 90 d3 5e}
0457h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
045ah mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
045fh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0469h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 72 29 e6 5e}
046eh mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
0471h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0474h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 47 50 23 ff}
0479h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
047bh call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a8 27 23 ff}
0480h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0483h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0486h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0489h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 da 64 21 ff}
048eh mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
0491h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0494h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 97 b3 23 ff}
0499h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
049ch call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 8f dc ca 5e}
04a1h int 3                                   ; INT3 || CC || encoded[1]{cc}
04a2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04a4h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04a6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04a8h add fs:[rax],al                         ; ADD r/m8, r8 || 00 /r || encoded[3]{64 00 00}
04abh add [rbx-30000000h],ah                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 a3 00 00 00 d0}
04b1h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
04b3h add [rip+58000002h],bl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 1d 02 00 00 58}
04b9h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
04bbh add [rdx+rax],bl                        ; ADD r/m8, r8 || 00 /r || encoded[4]{00 5c 02 00}
04bfh add [rdi+21000001h],bl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 9f 01 00 00 21}
04c5h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
04c7h add [rax+1],ah                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 60 01}
04cah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04cch fiadd word ptr [rcx]                    ; FIADD m16int || DE /0 || encoded[2]{de 01}
04ceh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04d0h fiadd dword ptr [rdx]                   ; FIADD m32int || DA /0 || encoded[2]{da 02}
04d2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04d4h sbb [rbx],eax                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 03}
04d6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04d8h wait                                    ; WAIT || 9B || encoded[1]{9b}
04d9h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
04dbh add [rbx+rax+0e20000h],dl               ; ADD r/m8, r8 || 00 /r || encoded[7]{00 94 03 00 00 e2 00}
04e2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04e4h and eax,19000000h                       ; AND EAX, imm32 || o32 25 id || encoded[5]{25 00 00 00 19}
04e9h or [rip+4420800h],al                    ; OR r/m8, r8 || 08 /r || encoded[6]{08 05 00 08 42 04}
04efh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
04f1h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
04f2h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
04f5h jo short 04f7h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
04f7h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; BinaryOp<int> lookup<int>(BinaryBitLogicKind:byte kind)
; lookup_g[32i](BinaryBitLogicKind~8u)[1273] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 ce 83 f9 0f 0f 87 09 04 00 00 8b c9 48 8d 05 88 04 00 00 8b 04 88 48 8d 15 e0 ff ff ff 48 03 c2 ff e0 48 b9 60 95 3f c7 f7 7f 00 00 e8 92 8f d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 c3 80 d3 5e 48 b9 c0 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 a0 c7 15 c7 f7 7f 00 00 48 89 4e 20 e9 a6 03 00 00 48 b9 60 95 3f c7 f7 7f 00 00 e8 53 8f d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 84 80 d3 5e 48 b9 c0 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 90 ce 15 c7 f7 7f 00 00 48 89 4e 20 e9 67 03 00 00 48 b9 60 95 3f c7 f7 7f 00 00 e8 14 8f d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 45 80 d3 5e 48 b9 c0 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 80 ce 15 c7 f7 7f 00 00 48 89 4e 20 e9 28 03 00 00 48 b9 60 95 3f c7 f7 7f 00 00 e8 d5 8e d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 06 80 d3 5e 48 b9 c0 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 b0 c7 15 c7 f7 7f 00 00 48 89 4e 20 e9 e9 02 00 00 48 b9 60 95 3f c7 f7 7f 00 00 e8 96 8e d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 c7 7f d3 5e 48 b9 c0 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 20 c8 15 c7 f7 7f 00 00 48 89 4e 20 e9 aa 02 00 00 48 b9 60 95 3f c7 f7 7f 00 00 e8 57 8e d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 88 7f d3 5e 48 b9 c0 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 10 c8 15 c7 f7 7f 00 00 48 89 4e 20 e9 6b 02 00 00 48 b9 60 95 3f c7 f7 7f 00 00 e8 18 8e d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 49 7f d3 5e 48 b9 c0 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 30 c8 15 c7 f7 7f 00 00 48 89 4e 20 e9 2c 02 00 00 48 b9 60 95 3f c7 f7 7f 00 00 e8 d9 8d d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 0a 7f d3 5e 48 b9 c0 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 00 c8 15 c7 f7 7f 00 00 48 89 4e 20 e9 ed 01 00 00 48 b9 60 95 3f c7 f7 7f 00 00 e8 9a 8d d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 cb 7e d3 5e 48 b9 c0 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 60 c8 15 c7 f7 7f 00 00 48 89 4e 20 e9 ae 01 00 00 48 b9 60 95 3f c7 f7 7f 00 00 e8 5b 8d d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 8c 7e d3 5e 48 b9 c0 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 40 c8 15 c7 f7 7f 00 00 48 89 4e 20 e9 6f 01 00 00 48 b9 60 95 3f c7 f7 7f 00 00 e8 1c 8d d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 4d 7e d3 5e 48 b9 c0 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 d0 c7 15 c7 f7 7f 00 00 48 89 4e 20 e9 30 01 00 00 48 b9 60 95 3f c7 f7 7f 00 00 e8 dd 8c d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 0e 7e d3 5e 48 b9 c0 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 f0 c7 15 c7 f7 7f 00 00 48 89 4e 20 e9 f1 00 00 00 48 b9 60 95 3f c7 f7 7f 00 00 e8 9e 8c d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 cf 7d d3 5e 48 b9 c0 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 e0 c7 15 c7 f7 7f 00 00 48 89 4e 20 e9 b2 00 00 00 48 b9 60 95 3f c7 f7 7f 00 00 e8 5f 8c d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 90 7d d3 5e 48 b9 c0 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 50 c8 15 c7 f7 7f 00 00 48 89 4e 20 eb 76 48 b9 60 95 3f c7 f7 7f 00 00 e8 23 8c d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 54 7d d3 5e 48 b9 c0 e3 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 c0 c7 15 c7 f7 7f 00 00 48 89 4e 20 eb 3a 48 b9 60 95 3f c7 f7 7f 00 00 e8 e7 8b d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 18 7d d3 5e 48 b8 c0 e3 25 c6 f7 7f 00 00 48 89 46 18 48 b8 70 c8 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 78 c9 35 c7 f7 7f 00 00 e8 a1 8b d3 5e 48 8b f8 40 88 77 08 48 b9 08 8f 35 c6 f7 7f 00 00 e8 cb 0e ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 79 8b d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 62 24 e6 5e 48 8b e8 48 8b ce e8 37 4b 23 ff 8b c8 e8 98 22 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 ca 5f 21 ff 48 8b d0 48 8b cb e8 87 ae 23 ff 48 8b cb e8 7f d7 ca 5e cc 00 00 00 00 00 00 64 00 00 00 a3 00 00 00 d0 03 00 00 1d 02 00 00 58 03 00 00 5c 02 00 00 9f 01 00 00 21 01 00 00 60 01 00 00 de 01 00 00 da 02 00 00 19 03 00 00 9b 02 00 00 94 03 00 00 e2 00 00 00 25 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx ecx,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 ce}
000eh cmp ecx,0fh                             ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f9 0f}
0011h ja near ptr 0420h                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 09 04 00 00}
0017h mov ecx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c9}
0019h lea rax,[rip+488h]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 88 04 00 00}
0020h mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0023h lea rdx,[rip-20h]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 15 e0 ff ff ff}
002ah add rax,rdx                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 c2}
002dh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
002fh mov rcx,7ff7c73f9560h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 95 3f c7 f7 7f 00 00}
0039h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 92 8f d3 5e}
003eh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0041h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0045h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0048h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c3 80 d3 5e}
004dh mov rcx,7ff7c625e3c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e3 25 c6 f7 7f 00 00}
0057h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
005bh mov rcx,7ff7c715c7a0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 a0 c7 15 c7 f7 7f 00 00}
0065h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0069h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 a6 03 00 00}
006eh mov rcx,7ff7c73f9560h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 95 3f c7 f7 7f 00 00}
0078h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 53 8f d3 5e}
007dh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0080h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0084h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0087h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 84 80 d3 5e}
008ch mov rcx,7ff7c625e3c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e3 25 c6 f7 7f 00 00}
0096h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
009ah mov rcx,7ff7c715ce90h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 90 ce 15 c7 f7 7f 00 00}
00a4h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00a8h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 67 03 00 00}
00adh mov rcx,7ff7c73f9560h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 95 3f c7 f7 7f 00 00}
00b7h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 14 8f d3 5e}
00bch mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00bfh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
00c3h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
00c6h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 45 80 d3 5e}
00cbh mov rcx,7ff7c625e3c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e3 25 c6 f7 7f 00 00}
00d5h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
00d9h mov rcx,7ff7c715ce80h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 ce 15 c7 f7 7f 00 00}
00e3h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00e7h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 28 03 00 00}
00ech mov rcx,7ff7c73f9560h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 95 3f c7 f7 7f 00 00}
00f6h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d5 8e d3 5e}
00fbh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00feh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0102h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0105h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 06 80 d3 5e}
010ah mov rcx,7ff7c625e3c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e3 25 c6 f7 7f 00 00}
0114h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0118h mov rcx,7ff7c715c7b0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 b0 c7 15 c7 f7 7f 00 00}
0122h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0126h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 e9 02 00 00}
012bh mov rcx,7ff7c73f9560h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 95 3f c7 f7 7f 00 00}
0135h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 96 8e d3 5e}
013ah mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
013dh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0141h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0144h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c7 7f d3 5e}
0149h mov rcx,7ff7c625e3c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e3 25 c6 f7 7f 00 00}
0153h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0157h mov rcx,7ff7c715c820h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 c8 15 c7 f7 7f 00 00}
0161h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0165h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 aa 02 00 00}
016ah mov rcx,7ff7c73f9560h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 95 3f c7 f7 7f 00 00}
0174h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 57 8e d3 5e}
0179h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
017ch lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0180h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0183h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 88 7f d3 5e}
0188h mov rcx,7ff7c625e3c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e3 25 c6 f7 7f 00 00}
0192h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0196h mov rcx,7ff7c715c810h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 10 c8 15 c7 f7 7f 00 00}
01a0h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
01a4h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 6b 02 00 00}
01a9h mov rcx,7ff7c73f9560h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 95 3f c7 f7 7f 00 00}
01b3h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 18 8e d3 5e}
01b8h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
01bbh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
01bfh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
01c2h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 49 7f d3 5e}
01c7h mov rcx,7ff7c625e3c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e3 25 c6 f7 7f 00 00}
01d1h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
01d5h mov rcx,7ff7c715c830h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 c8 15 c7 f7 7f 00 00}
01dfh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
01e3h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 2c 02 00 00}
01e8h mov rcx,7ff7c73f9560h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 95 3f c7 f7 7f 00 00}
01f2h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d9 8d d3 5e}
01f7h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
01fah lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
01feh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0201h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0a 7f d3 5e}
0206h mov rcx,7ff7c625e3c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e3 25 c6 f7 7f 00 00}
0210h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0214h mov rcx,7ff7c715c800h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 c8 15 c7 f7 7f 00 00}
021eh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0222h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ed 01 00 00}
0227h mov rcx,7ff7c73f9560h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 95 3f c7 f7 7f 00 00}
0231h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9a 8d d3 5e}
0236h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0239h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
023dh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0240h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 cb 7e d3 5e}
0245h mov rcx,7ff7c625e3c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e3 25 c6 f7 7f 00 00}
024fh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0253h mov rcx,7ff7c715c860h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 c8 15 c7 f7 7f 00 00}
025dh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0261h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ae 01 00 00}
0266h mov rcx,7ff7c73f9560h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 95 3f c7 f7 7f 00 00}
0270h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5b 8d d3 5e}
0275h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0278h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
027ch mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
027fh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 8c 7e d3 5e}
0284h mov rcx,7ff7c625e3c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e3 25 c6 f7 7f 00 00}
028eh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0292h mov rcx,7ff7c715c840h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 c8 15 c7 f7 7f 00 00}
029ch mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
02a0h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 6f 01 00 00}
02a5h mov rcx,7ff7c73f9560h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 95 3f c7 f7 7f 00 00}
02afh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 1c 8d d3 5e}
02b4h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
02b7h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
02bbh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
02beh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 4d 7e d3 5e}
02c3h mov rcx,7ff7c625e3c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e3 25 c6 f7 7f 00 00}
02cdh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
02d1h mov rcx,7ff7c715c7d0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d0 c7 15 c7 f7 7f 00 00}
02dbh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
02dfh jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 30 01 00 00}
02e4h mov rcx,7ff7c73f9560h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 95 3f c7 f7 7f 00 00}
02eeh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 dd 8c d3 5e}
02f3h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
02f6h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
02fah mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
02fdh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0e 7e d3 5e}
0302h mov rcx,7ff7c625e3c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e3 25 c6 f7 7f 00 00}
030ch mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0310h mov rcx,7ff7c715c7f0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 f0 c7 15 c7 f7 7f 00 00}
031ah mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
031eh jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f1 00 00 00}
0323h mov rcx,7ff7c73f9560h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 95 3f c7 f7 7f 00 00}
032dh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 9e 8c d3 5e}
0332h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0335h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0339h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
033ch call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 cf 7d d3 5e}
0341h mov rcx,7ff7c625e3c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e3 25 c6 f7 7f 00 00}
034bh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
034fh mov rcx,7ff7c715c7e0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e0 c7 15 c7 f7 7f 00 00}
0359h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
035dh jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b2 00 00 00}
0362h mov rcx,7ff7c73f9560h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 95 3f c7 f7 7f 00 00}
036ch call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5f 8c d3 5e}
0371h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0374h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0378h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
037bh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 90 7d d3 5e}
0380h mov rcx,7ff7c625e3c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e3 25 c6 f7 7f 00 00}
038ah mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
038eh mov rcx,7ff7c715c850h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 50 c8 15 c7 f7 7f 00 00}
0398h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
039ch jmp short 0414h                         ; JMP rel8 || EB cb || encoded[2]{eb 76}
039eh mov rcx,7ff7c73f9560h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 95 3f c7 f7 7f 00 00}
03a8h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 23 8c d3 5e}
03adh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
03b0h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
03b4h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
03b7h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 54 7d d3 5e}
03bch mov rcx,7ff7c625e3c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 e3 25 c6 f7 7f 00 00}
03c6h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
03cah mov rcx,7ff7c715c7c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 c7 15 c7 f7 7f 00 00}
03d4h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
03d8h jmp short 0414h                         ; JMP rel8 || EB cb || encoded[2]{eb 3a}
03dah mov rcx,7ff7c73f9560h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 95 3f c7 f7 7f 00 00}
03e4h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e7 8b d3 5e}
03e9h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
03ech lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
03f0h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
03f3h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 18 7d d3 5e}
03f8h mov rax,7ff7c625e3c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 c0 e3 25 c6 f7 7f 00 00}
0402h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0406h mov rax,7ff7c715c870h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 70 c8 15 c7 f7 7f 00 00}
0410h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0414h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0417h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
041bh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
041ch pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
041dh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
041eh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
041fh ret                                     ; RET || C3 || encoded[1]{c3}
0420h mov rcx,7ff7c735c978h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 78 c9 35 c7 f7 7f 00 00}
042ah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a1 8b d3 5e}
042fh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0432h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0436h mov rcx,7ff7c6358f08h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 08 8f 35 c6 f7 7f 00 00}
0440h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 cb 0e ce 5e}
0445h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0448h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0452h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 79 8b d3 5e}
0457h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
045ah mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
045fh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0469h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 62 24 e6 5e}
046eh mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
0471h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0474h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 37 4b 23 ff}
0479h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
047bh call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 98 22 23 ff}
0480h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0483h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0486h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0489h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ca 5f 21 ff}
048eh mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
0491h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0494h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 87 ae 23 ff}
0499h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
049ch call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7f d7 ca 5e}
04a1h int 3                                   ; INT3 || CC || encoded[1]{cc}
04a2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04a4h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04a6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04a8h add fs:[rax],al                         ; ADD r/m8, r8 || 00 /r || encoded[3]{64 00 00}
04abh add [rbx-30000000h],ah                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 a3 00 00 00 d0}
04b1h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
04b3h add [rip+58000002h],bl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 1d 02 00 00 58}
04b9h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
04bbh add [rdx+rax],bl                        ; ADD r/m8, r8 || 00 /r || encoded[4]{00 5c 02 00}
04bfh add [rdi+21000001h],bl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 9f 01 00 00 21}
04c5h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
04c7h add [rax+1],ah                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 60 01}
04cah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04cch fiadd word ptr [rcx]                    ; FIADD m16int || DE /0 || encoded[2]{de 01}
04ceh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04d0h fiadd dword ptr [rdx]                   ; FIADD m32int || DA /0 || encoded[2]{da 02}
04d2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04d4h sbb [rbx],eax                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 03}
04d6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04d8h wait                                    ; WAIT || 9B || encoded[1]{9b}
04d9h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
04dbh add [rbx+rax+0e20000h],dl               ; ADD r/m8, r8 || 00 /r || encoded[7]{00 94 03 00 00 e2 00}
04e2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04e4h and eax,19000000h                       ; AND EAX, imm32 || o32 25 id || encoded[5]{25 00 00 00 19}
04e9h or [rip+4420800h],al                    ; OR r/m8, r8 || 08 /r || encoded[6]{08 05 00 08 42 04}
04efh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
04f1h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
04f2h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
04f5h jo short 04f7h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
04f7h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; BinaryOp<ulong> lookup<ulong>(BinaryBitLogicKind:byte kind)
; lookup_g[64u](BinaryBitLogicKind~8u)[1273] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 ce 83 f9 0f 0f 87 09 04 00 00 8b c9 48 8d 05 88 04 00 00 8b 04 88 48 8d 15 e0 ff ff ff 48 03 c2 ff e0 48 b9 70 97 3f c7 f7 7f 00 00 e8 82 8a d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 b3 7b d3 5e 48 b9 00 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 b0 ce 15 c7 f7 7f 00 00 48 89 4e 20 e9 a6 03 00 00 48 b9 70 97 3f c7 f7 7f 00 00 e8 43 8a d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 74 7b d3 5e 48 b9 00 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 a0 cf 15 c7 f7 7f 00 00 48 89 4e 20 e9 67 03 00 00 48 b9 70 97 3f c7 f7 7f 00 00 e8 04 8a d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 35 7b d3 5e 48 b9 00 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 90 cf 15 c7 f7 7f 00 00 48 89 4e 20 e9 28 03 00 00 48 b9 70 97 3f c7 f7 7f 00 00 e8 c5 89 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 f6 7a d3 5e 48 b9 00 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 c0 ce 15 c7 f7 7f 00 00 48 89 4e 20 e9 e9 02 00 00 48 b9 70 97 3f c7 f7 7f 00 00 e8 86 89 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 b7 7a d3 5e 48 b9 00 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 30 cf 15 c7 f7 7f 00 00 48 89 4e 20 e9 aa 02 00 00 48 b9 70 97 3f c7 f7 7f 00 00 e8 47 89 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 78 7a d3 5e 48 b9 00 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 20 cf 15 c7 f7 7f 00 00 48 89 4e 20 e9 6b 02 00 00 48 b9 70 97 3f c7 f7 7f 00 00 e8 08 89 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 39 7a d3 5e 48 b9 00 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 40 cf 15 c7 f7 7f 00 00 48 89 4e 20 e9 2c 02 00 00 48 b9 70 97 3f c7 f7 7f 00 00 e8 c9 88 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 fa 79 d3 5e 48 b9 00 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 10 cf 15 c7 f7 7f 00 00 48 89 4e 20 e9 ed 01 00 00 48 b9 70 97 3f c7 f7 7f 00 00 e8 8a 88 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 bb 79 d3 5e 48 b9 00 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 70 cf 15 c7 f7 7f 00 00 48 89 4e 20 e9 ae 01 00 00 48 b9 70 97 3f c7 f7 7f 00 00 e8 4b 88 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 7c 79 d3 5e 48 b9 00 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 50 cf 15 c7 f7 7f 00 00 48 89 4e 20 e9 6f 01 00 00 48 b9 70 97 3f c7 f7 7f 00 00 e8 0c 88 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 3d 79 d3 5e 48 b9 00 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 e0 ce 15 c7 f7 7f 00 00 48 89 4e 20 e9 30 01 00 00 48 b9 70 97 3f c7 f7 7f 00 00 e8 cd 87 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 fe 78 d3 5e 48 b9 00 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 00 cf 15 c7 f7 7f 00 00 48 89 4e 20 e9 f1 00 00 00 48 b9 70 97 3f c7 f7 7f 00 00 e8 8e 87 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 bf 78 d3 5e 48 b9 00 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 f0 ce 15 c7 f7 7f 00 00 48 89 4e 20 e9 b2 00 00 00 48 b9 70 97 3f c7 f7 7f 00 00 e8 4f 87 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 80 78 d3 5e 48 b9 00 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 60 cf 15 c7 f7 7f 00 00 48 89 4e 20 eb 76 48 b9 70 97 3f c7 f7 7f 00 00 e8 13 87 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 44 78 d3 5e 48 b9 00 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 d0 ce 15 c7 f7 7f 00 00 48 89 4e 20 eb 3a 48 b9 70 97 3f c7 f7 7f 00 00 e8 d7 86 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 08 78 d3 5e 48 b8 00 e4 25 c6 f7 7f 00 00 48 89 46 18 48 b8 80 cf 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 78 c9 35 c7 f7 7f 00 00 e8 91 86 d3 5e 48 8b f8 40 88 77 08 48 b9 78 a6 35 c6 f7 7f 00 00 e8 bb 09 ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 69 86 d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 52 1f e6 5e 48 8b e8 48 8b ce e8 27 46 23 ff 8b c8 e8 88 1d 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 ba 5a 21 ff 48 8b d0 48 8b cb e8 77 a9 23 ff 48 8b cb e8 6f d2 ca 5e cc 00 00 00 00 00 00 64 00 00 00 a3 00 00 00 d0 03 00 00 1d 02 00 00 58 03 00 00 5c 02 00 00 9f 01 00 00 21 01 00 00 60 01 00 00 de 01 00 00 da 02 00 00 19 03 00 00 9b 02 00 00 94 03 00 00 e2 00 00 00 25 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx ecx,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 ce}
000eh cmp ecx,0fh                             ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f9 0f}
0011h ja near ptr 0420h                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 09 04 00 00}
0017h mov ecx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c9}
0019h lea rax,[rip+488h]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 88 04 00 00}
0020h mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0023h lea rdx,[rip-20h]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 15 e0 ff ff ff}
002ah add rax,rdx                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 c2}
002dh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
002fh mov rcx,7ff7c73f9770h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 97 3f c7 f7 7f 00 00}
0039h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 82 8a d3 5e}
003eh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0041h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0045h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0048h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b3 7b d3 5e}
004dh mov rcx,7ff7c625e400h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e4 25 c6 f7 7f 00 00}
0057h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
005bh mov rcx,7ff7c715ceb0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 b0 ce 15 c7 f7 7f 00 00}
0065h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0069h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 a6 03 00 00}
006eh mov rcx,7ff7c73f9770h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 97 3f c7 f7 7f 00 00}
0078h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 43 8a d3 5e}
007dh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0080h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0084h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0087h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 74 7b d3 5e}
008ch mov rcx,7ff7c625e400h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e4 25 c6 f7 7f 00 00}
0096h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
009ah mov rcx,7ff7c715cfa0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 a0 cf 15 c7 f7 7f 00 00}
00a4h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00a8h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 67 03 00 00}
00adh mov rcx,7ff7c73f9770h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 97 3f c7 f7 7f 00 00}
00b7h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 04 8a d3 5e}
00bch mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00bfh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
00c3h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
00c6h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 35 7b d3 5e}
00cbh mov rcx,7ff7c625e400h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e4 25 c6 f7 7f 00 00}
00d5h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
00d9h mov rcx,7ff7c715cf90h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 90 cf 15 c7 f7 7f 00 00}
00e3h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00e7h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 28 03 00 00}
00ech mov rcx,7ff7c73f9770h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 97 3f c7 f7 7f 00 00}
00f6h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c5 89 d3 5e}
00fbh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00feh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0102h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0105h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f6 7a d3 5e}
010ah mov rcx,7ff7c625e400h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e4 25 c6 f7 7f 00 00}
0114h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0118h mov rcx,7ff7c715cec0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 ce 15 c7 f7 7f 00 00}
0122h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0126h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 e9 02 00 00}
012bh mov rcx,7ff7c73f9770h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 97 3f c7 f7 7f 00 00}
0135h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 86 89 d3 5e}
013ah mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
013dh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0141h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0144h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b7 7a d3 5e}
0149h mov rcx,7ff7c625e400h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e4 25 c6 f7 7f 00 00}
0153h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0157h mov rcx,7ff7c715cf30h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 cf 15 c7 f7 7f 00 00}
0161h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0165h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 aa 02 00 00}
016ah mov rcx,7ff7c73f9770h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 97 3f c7 f7 7f 00 00}
0174h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 47 89 d3 5e}
0179h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
017ch lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0180h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0183h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 78 7a d3 5e}
0188h mov rcx,7ff7c625e400h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e4 25 c6 f7 7f 00 00}
0192h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0196h mov rcx,7ff7c715cf20h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 cf 15 c7 f7 7f 00 00}
01a0h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
01a4h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 6b 02 00 00}
01a9h mov rcx,7ff7c73f9770h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 97 3f c7 f7 7f 00 00}
01b3h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 08 89 d3 5e}
01b8h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
01bbh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
01bfh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
01c2h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 39 7a d3 5e}
01c7h mov rcx,7ff7c625e400h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e4 25 c6 f7 7f 00 00}
01d1h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
01d5h mov rcx,7ff7c715cf40h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 cf 15 c7 f7 7f 00 00}
01dfh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
01e3h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 2c 02 00 00}
01e8h mov rcx,7ff7c73f9770h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 97 3f c7 f7 7f 00 00}
01f2h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c9 88 d3 5e}
01f7h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
01fah lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
01feh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0201h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fa 79 d3 5e}
0206h mov rcx,7ff7c625e400h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e4 25 c6 f7 7f 00 00}
0210h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0214h mov rcx,7ff7c715cf10h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 10 cf 15 c7 f7 7f 00 00}
021eh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0222h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ed 01 00 00}
0227h mov rcx,7ff7c73f9770h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 97 3f c7 f7 7f 00 00}
0231h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 8a 88 d3 5e}
0236h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0239h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
023dh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0240h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bb 79 d3 5e}
0245h mov rcx,7ff7c625e400h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e4 25 c6 f7 7f 00 00}
024fh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0253h mov rcx,7ff7c715cf70h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 cf 15 c7 f7 7f 00 00}
025dh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0261h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ae 01 00 00}
0266h mov rcx,7ff7c73f9770h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 97 3f c7 f7 7f 00 00}
0270h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 4b 88 d3 5e}
0275h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0278h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
027ch mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
027fh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7c 79 d3 5e}
0284h mov rcx,7ff7c625e400h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e4 25 c6 f7 7f 00 00}
028eh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0292h mov rcx,7ff7c715cf50h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 50 cf 15 c7 f7 7f 00 00}
029ch mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
02a0h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 6f 01 00 00}
02a5h mov rcx,7ff7c73f9770h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 97 3f c7 f7 7f 00 00}
02afh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 0c 88 d3 5e}
02b4h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
02b7h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
02bbh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
02beh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3d 79 d3 5e}
02c3h mov rcx,7ff7c625e400h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e4 25 c6 f7 7f 00 00}
02cdh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
02d1h mov rcx,7ff7c715cee0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e0 ce 15 c7 f7 7f 00 00}
02dbh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
02dfh jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 30 01 00 00}
02e4h mov rcx,7ff7c73f9770h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 97 3f c7 f7 7f 00 00}
02eeh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 cd 87 d3 5e}
02f3h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
02f6h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
02fah mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
02fdh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fe 78 d3 5e}
0302h mov rcx,7ff7c625e400h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e4 25 c6 f7 7f 00 00}
030ch mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0310h mov rcx,7ff7c715cf00h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 cf 15 c7 f7 7f 00 00}
031ah mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
031eh jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f1 00 00 00}
0323h mov rcx,7ff7c73f9770h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 97 3f c7 f7 7f 00 00}
032dh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 8e 87 d3 5e}
0332h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0335h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0339h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
033ch call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bf 78 d3 5e}
0341h mov rcx,7ff7c625e400h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e4 25 c6 f7 7f 00 00}
034bh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
034fh mov rcx,7ff7c715cef0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 f0 ce 15 c7 f7 7f 00 00}
0359h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
035dh jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b2 00 00 00}
0362h mov rcx,7ff7c73f9770h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 97 3f c7 f7 7f 00 00}
036ch call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 4f 87 d3 5e}
0371h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0374h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0378h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
037bh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 80 78 d3 5e}
0380h mov rcx,7ff7c625e400h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e4 25 c6 f7 7f 00 00}
038ah mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
038eh mov rcx,7ff7c715cf60h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 cf 15 c7 f7 7f 00 00}
0398h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
039ch jmp short 0414h                         ; JMP rel8 || EB cb || encoded[2]{eb 76}
039eh mov rcx,7ff7c73f9770h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 97 3f c7 f7 7f 00 00}
03a8h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 13 87 d3 5e}
03adh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
03b0h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
03b4h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
03b7h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 44 78 d3 5e}
03bch mov rcx,7ff7c625e400h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 e4 25 c6 f7 7f 00 00}
03c6h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
03cah mov rcx,7ff7c715ced0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d0 ce 15 c7 f7 7f 00 00}
03d4h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
03d8h jmp short 0414h                         ; JMP rel8 || EB cb || encoded[2]{eb 3a}
03dah mov rcx,7ff7c73f9770h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 97 3f c7 f7 7f 00 00}
03e4h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 d7 86 d3 5e}
03e9h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
03ech lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
03f0h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
03f3h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 08 78 d3 5e}
03f8h mov rax,7ff7c625e400h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 00 e4 25 c6 f7 7f 00 00}
0402h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0406h mov rax,7ff7c715cf80h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 80 cf 15 c7 f7 7f 00 00}
0410h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0414h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0417h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
041bh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
041ch pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
041dh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
041eh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
041fh ret                                     ; RET || C3 || encoded[1]{c3}
0420h mov rcx,7ff7c735c978h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 78 c9 35 c7 f7 7f 00 00}
042ah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 91 86 d3 5e}
042fh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0432h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0436h mov rcx,7ff7c635a678h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 78 a6 35 c6 f7 7f 00 00}
0440h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bb 09 ce 5e}
0445h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0448h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0452h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 69 86 d3 5e}
0457h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
045ah mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
045fh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0469h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 52 1f e6 5e}
046eh mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
0471h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0474h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 27 46 23 ff}
0479h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
047bh call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 88 1d 23 ff}
0480h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0483h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0486h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0489h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ba 5a 21 ff}
048eh mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
0491h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0494h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 77 a9 23 ff}
0499h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
049ch call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6f d2 ca 5e}
04a1h int 3                                   ; INT3 || CC || encoded[1]{cc}
04a2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04a4h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04a6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04a8h add fs:[rax],al                         ; ADD r/m8, r8 || 00 /r || encoded[3]{64 00 00}
04abh add [rbx-30000000h],ah                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 a3 00 00 00 d0}
04b1h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
04b3h add [rip+58000002h],bl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 1d 02 00 00 58}
04b9h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
04bbh add [rdx+rax],bl                        ; ADD r/m8, r8 || 00 /r || encoded[4]{00 5c 02 00}
04bfh add [rdi+21000001h],bl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 9f 01 00 00 21}
04c5h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
04c7h add [rax+1],ah                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 60 01}
04cah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04cch fiadd word ptr [rcx]                    ; FIADD m16int || DE /0 || encoded[2]{de 01}
04ceh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04d0h fiadd dword ptr [rdx]                   ; FIADD m32int || DA /0 || encoded[2]{da 02}
04d2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04d4h sbb [rbx],eax                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 03}
04d6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04d8h wait                                    ; WAIT || 9B || encoded[1]{9b}
04d9h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
04dbh add [rbx+rax+0e20000h],dl               ; ADD r/m8, r8 || 00 /r || encoded[7]{00 94 03 00 00 e2 00}
04e2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04e4h and eax,19000000h                       ; AND EAX, imm32 || o32 25 id || encoded[5]{25 00 00 00 19}
04e9h or [rip+4420800h],al                    ; OR r/m8, r8 || 08 /r || encoded[6]{08 05 00 08 42 04}
04efh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
04f1h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
04f2h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
04f5h jo short 04f7h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
04f7h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
------------------------------------------------------------------------------------------------------------------------
; BinaryOp<long> lookup<long>(BinaryBitLogicKind:byte kind)
; lookup_g[64i](BinaryBitLogicKind~8u)[1273] = {57 56 55 53 48 83 ec 28 8b f1 40 0f b6 ce 83 f9 0f 0f 87 09 04 00 00 8b c9 48 8d 05 88 04 00 00 8b 04 88 48 8d 15 e0 ff ff ff 48 03 c2 ff e0 48 b9 80 99 3f c7 f7 7f 00 00 e8 72 85 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 a3 76 d3 5e 48 b9 40 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 d0 cf 15 c7 f7 7f 00 00 48 89 4e 20 e9 a6 03 00 00 48 b9 80 99 3f c7 f7 7f 00 00 e8 33 85 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 64 76 d3 5e 48 b9 40 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 c0 d0 15 c7 f7 7f 00 00 48 89 4e 20 e9 67 03 00 00 48 b9 80 99 3f c7 f7 7f 00 00 e8 f4 84 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 25 76 d3 5e 48 b9 40 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 b0 d0 15 c7 f7 7f 00 00 48 89 4e 20 e9 28 03 00 00 48 b9 80 99 3f c7 f7 7f 00 00 e8 b5 84 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 e6 75 d3 5e 48 b9 40 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 e0 cf 15 c7 f7 7f 00 00 48 89 4e 20 e9 e9 02 00 00 48 b9 80 99 3f c7 f7 7f 00 00 e8 76 84 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 a7 75 d3 5e 48 b9 40 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 50 d0 15 c7 f7 7f 00 00 48 89 4e 20 e9 aa 02 00 00 48 b9 80 99 3f c7 f7 7f 00 00 e8 37 84 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 68 75 d3 5e 48 b9 40 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 40 d0 15 c7 f7 7f 00 00 48 89 4e 20 e9 6b 02 00 00 48 b9 80 99 3f c7 f7 7f 00 00 e8 f8 83 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 29 75 d3 5e 48 b9 40 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 60 d0 15 c7 f7 7f 00 00 48 89 4e 20 e9 2c 02 00 00 48 b9 80 99 3f c7 f7 7f 00 00 e8 b9 83 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 ea 74 d3 5e 48 b9 40 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 30 d0 15 c7 f7 7f 00 00 48 89 4e 20 e9 ed 01 00 00 48 b9 80 99 3f c7 f7 7f 00 00 e8 7a 83 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 ab 74 d3 5e 48 b9 40 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 90 d0 15 c7 f7 7f 00 00 48 89 4e 20 e9 ae 01 00 00 48 b9 80 99 3f c7 f7 7f 00 00 e8 3b 83 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 6c 74 d3 5e 48 b9 40 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 70 d0 15 c7 f7 7f 00 00 48 89 4e 20 e9 6f 01 00 00 48 b9 80 99 3f c7 f7 7f 00 00 e8 fc 82 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 2d 74 d3 5e 48 b9 40 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 00 d0 15 c7 f7 7f 00 00 48 89 4e 20 e9 30 01 00 00 48 b9 80 99 3f c7 f7 7f 00 00 e8 bd 82 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 ee 73 d3 5e 48 b9 40 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 20 d0 15 c7 f7 7f 00 00 48 89 4e 20 e9 f1 00 00 00 48 b9 80 99 3f c7 f7 7f 00 00 e8 7e 82 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 af 73 d3 5e 48 b9 40 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 10 d0 15 c7 f7 7f 00 00 48 89 4e 20 e9 b2 00 00 00 48 b9 80 99 3f c7 f7 7f 00 00 e8 3f 82 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 70 73 d3 5e 48 b9 40 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 80 d0 15 c7 f7 7f 00 00 48 89 4e 20 eb 76 48 b9 80 99 3f c7 f7 7f 00 00 e8 03 82 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 34 73 d3 5e 48 b9 40 e4 25 c6 f7 7f 00 00 48 89 4e 18 48 b9 f0 cf 15 c7 f7 7f 00 00 48 89 4e 20 eb 3a 48 b9 80 99 3f c7 f7 7f 00 00 e8 c7 81 d3 5e 48 8b f0 48 8d 4e 08 48 8b d6 e8 f8 72 d3 5e 48 b8 40 e4 25 c6 f7 7f 00 00 48 89 46 18 48 b8 a0 d0 15 c7 f7 7f 00 00 48 89 46 20 48 8b c6 48 83 c4 28 5b 5d 5e 5f c3 48 b9 78 c9 35 c7 f7 7f 00 00 e8 81 81 d3 5e 48 8b f8 40 88 77 08 48 b9 a8 9e 35 c6 f7 7f 00 00 e8 ab 04 ce 5e 48 8b f0 48 b9 40 b0 5b c6 f7 7f 00 00 e8 59 81 d3 5e 48 8b d8 b9 4c 04 00 00 48 ba 38 c7 7c c6 f7 7f 00 00 e8 42 1a e6 5e 48 8b e8 48 8b ce e8 17 41 23 ff 8b c8 e8 78 18 23 ff 4c 8b c0 48 8b cd 48 8b d7 e8 aa 55 21 ff 48 8b d0 48 8b cb e8 67 a4 23 ff 48 8b cb e8 5f cd ca 5e cc 00 00 00 00 00 00 64 00 00 00 a3 00 00 00 d0 03 00 00 1d 02 00 00 58 03 00 00 5c 02 00 00 9f 01 00 00 21 01 00 00 60 01 00 00 de 01 00 00 da 02 00 00 19 03 00 00 9b 02 00 00 94 03 00 00 e2 00 00 00 25 00 00 00 19 08 05 00 08 42 04 30 03 50 02 60 01 70 00 00 40}
; TermCode = CTC_Zx7
0000h push rdi                                ; PUSH r64 || 50+ro || encoded[1]{57}
0001h push rsi                                ; PUSH r64 || 50+ro || encoded[1]{56}
0002h push rbp                                ; PUSH r64 || 50+ro || encoded[1]{55}
0003h push rbx                                ; PUSH r64 || 50+ro || encoded[1]{53}
0004h sub rsp,28h                             ; SUB r/m64, imm8 || REX.W 83 /5 ib || encoded[4]{48 83 ec 28}
0008h mov esi,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b f1}
000ah movzx ecx,sil                           ; MOVZX r32, r/m8 || o32 0F B6 /r || encoded[4]{40 0f b6 ce}
000eh cmp ecx,0fh                             ; CMP r/m32, imm8 || o32 83 /7 ib || encoded[3]{83 f9 0f}
0011h ja near ptr 0420h                       ; JA rel32 || 0F 87 cd || encoded[6]{0f 87 09 04 00 00}
0017h mov ecx,ecx                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c9}
0019h lea rax,[rip+488h]                      ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 05 88 04 00 00}
0020h mov eax,[rax+rcx*4]                     ; MOV r32, r/m32 || o32 8B /r || encoded[3]{8b 04 88}
0023h lea rdx,[rip-20h]                       ; LEA r64, m || REX.W 8D /r || encoded[7]{48 8d 15 e0 ff ff ff}
002ah add rax,rdx                             ; ADD r64, r/m64 || REX.W 03 /r || encoded[3]{48 03 c2}
002dh jmp rax                                 ; JMP r/m64 || FF /4 || encoded[2]{ff e0}
002fh mov rcx,7ff7c73f9980h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 99 3f c7 f7 7f 00 00}
0039h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 72 85 d3 5e}
003eh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0041h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0045h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0048h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a3 76 d3 5e}
004dh mov rcx,7ff7c625e440h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e4 25 c6 f7 7f 00 00}
0057h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
005bh mov rcx,7ff7c715cfd0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 d0 cf 15 c7 f7 7f 00 00}
0065h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0069h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 a6 03 00 00}
006eh mov rcx,7ff7c73f9980h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 99 3f c7 f7 7f 00 00}
0078h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 33 85 d3 5e}
007dh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0080h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0084h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0087h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 64 76 d3 5e}
008ch mov rcx,7ff7c625e440h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e4 25 c6 f7 7f 00 00}
0096h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
009ah mov rcx,7ff7c715d0c0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 c0 d0 15 c7 f7 7f 00 00}
00a4h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00a8h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 67 03 00 00}
00adh mov rcx,7ff7c73f9980h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 99 3f c7 f7 7f 00 00}
00b7h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f4 84 d3 5e}
00bch mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00bfh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
00c3h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
00c6h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 25 76 d3 5e}
00cbh mov rcx,7ff7c625e440h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e4 25 c6 f7 7f 00 00}
00d5h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
00d9h mov rcx,7ff7c715d0b0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 b0 d0 15 c7 f7 7f 00 00}
00e3h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
00e7h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 28 03 00 00}
00ech mov rcx,7ff7c73f9980h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 99 3f c7 f7 7f 00 00}
00f6h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b5 84 d3 5e}
00fbh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
00feh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0102h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0105h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 e6 75 d3 5e}
010ah mov rcx,7ff7c625e440h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e4 25 c6 f7 7f 00 00}
0114h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0118h mov rcx,7ff7c715cfe0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 e0 cf 15 c7 f7 7f 00 00}
0122h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0126h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 e9 02 00 00}
012bh mov rcx,7ff7c73f9980h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 99 3f c7 f7 7f 00 00}
0135h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 76 84 d3 5e}
013ah mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
013dh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0141h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0144h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 a7 75 d3 5e}
0149h mov rcx,7ff7c625e440h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e4 25 c6 f7 7f 00 00}
0153h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0157h mov rcx,7ff7c715d050h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 50 d0 15 c7 f7 7f 00 00}
0161h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0165h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 aa 02 00 00}
016ah mov rcx,7ff7c73f9980h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 99 3f c7 f7 7f 00 00}
0174h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 37 84 d3 5e}
0179h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
017ch lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0180h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0183h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 68 75 d3 5e}
0188h mov rcx,7ff7c625e440h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e4 25 c6 f7 7f 00 00}
0192h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0196h mov rcx,7ff7c715d040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 d0 15 c7 f7 7f 00 00}
01a0h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
01a4h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 6b 02 00 00}
01a9h mov rcx,7ff7c73f9980h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 99 3f c7 f7 7f 00 00}
01b3h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f8 83 d3 5e}
01b8h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
01bbh lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
01bfh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
01c2h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 29 75 d3 5e}
01c7h mov rcx,7ff7c625e440h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e4 25 c6 f7 7f 00 00}
01d1h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
01d5h mov rcx,7ff7c715d060h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 60 d0 15 c7 f7 7f 00 00}
01dfh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
01e3h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 2c 02 00 00}
01e8h mov rcx,7ff7c73f9980h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 99 3f c7 f7 7f 00 00}
01f2h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 b9 83 d3 5e}
01f7h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
01fah lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
01feh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0201h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ea 74 d3 5e}
0206h mov rcx,7ff7c625e440h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e4 25 c6 f7 7f 00 00}
0210h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0214h mov rcx,7ff7c715d030h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 30 d0 15 c7 f7 7f 00 00}
021eh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0222h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ed 01 00 00}
0227h mov rcx,7ff7c73f9980h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 99 3f c7 f7 7f 00 00}
0231h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7a 83 d3 5e}
0236h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0239h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
023dh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
0240h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ab 74 d3 5e}
0245h mov rcx,7ff7c625e440h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e4 25 c6 f7 7f 00 00}
024fh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0253h mov rcx,7ff7c715d090h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 90 d0 15 c7 f7 7f 00 00}
025dh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
0261h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 ae 01 00 00}
0266h mov rcx,7ff7c73f9980h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 99 3f c7 f7 7f 00 00}
0270h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3b 83 d3 5e}
0275h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0278h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
027ch mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
027fh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 6c 74 d3 5e}
0284h mov rcx,7ff7c625e440h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e4 25 c6 f7 7f 00 00}
028eh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0292h mov rcx,7ff7c715d070h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 70 d0 15 c7 f7 7f 00 00}
029ch mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
02a0h jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 6f 01 00 00}
02a5h mov rcx,7ff7c73f9980h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 99 3f c7 f7 7f 00 00}
02afh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 fc 82 d3 5e}
02b4h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
02b7h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
02bbh mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
02beh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 2d 74 d3 5e}
02c3h mov rcx,7ff7c625e440h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e4 25 c6 f7 7f 00 00}
02cdh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
02d1h mov rcx,7ff7c715d000h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 00 d0 15 c7 f7 7f 00 00}
02dbh mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
02dfh jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 30 01 00 00}
02e4h mov rcx,7ff7c73f9980h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 99 3f c7 f7 7f 00 00}
02eeh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 bd 82 d3 5e}
02f3h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
02f6h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
02fah mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
02fdh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ee 73 d3 5e}
0302h mov rcx,7ff7c625e440h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e4 25 c6 f7 7f 00 00}
030ch mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
0310h mov rcx,7ff7c715d020h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 20 d0 15 c7 f7 7f 00 00}
031ah mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
031eh jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 f1 00 00 00}
0323h mov rcx,7ff7c73f9980h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 99 3f c7 f7 7f 00 00}
032dh call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 7e 82 d3 5e}
0332h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0335h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0339h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
033ch call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 af 73 d3 5e}
0341h mov rcx,7ff7c625e440h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e4 25 c6 f7 7f 00 00}
034bh mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
034fh mov rcx,7ff7c715d010h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 10 d0 15 c7 f7 7f 00 00}
0359h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
035dh jmp near ptr 0414h                      ; JMP rel32 || E9 cd || encoded[5]{e9 b2 00 00 00}
0362h mov rcx,7ff7c73f9980h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 99 3f c7 f7 7f 00 00}
036ch call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 3f 82 d3 5e}
0371h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0374h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
0378h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
037bh call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 70 73 d3 5e}
0380h mov rcx,7ff7c625e440h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e4 25 c6 f7 7f 00 00}
038ah mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
038eh mov rcx,7ff7c715d080h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 d0 15 c7 f7 7f 00 00}
0398h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
039ch jmp short 0414h                         ; JMP rel8 || EB cb || encoded[2]{eb 76}
039eh mov rcx,7ff7c73f9980h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 99 3f c7 f7 7f 00 00}
03a8h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 03 82 d3 5e}
03adh mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
03b0h lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
03b4h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
03b7h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 34 73 d3 5e}
03bch mov rcx,7ff7c625e440h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 e4 25 c6 f7 7f 00 00}
03c6h mov [rsi+18h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 18}
03cah mov rcx,7ff7c715cff0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 f0 cf 15 c7 f7 7f 00 00}
03d4h mov [rsi+20h],rcx                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 4e 20}
03d8h jmp short 0414h                         ; JMP rel8 || EB cb || encoded[2]{eb 3a}
03dah mov rcx,7ff7c73f9980h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 80 99 3f c7 f7 7f 00 00}
03e4h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 c7 81 d3 5e}
03e9h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
03ech lea rcx,[rsi+8]                         ; LEA r64, m || REX.W 8D /r || encoded[4]{48 8d 4e 08}
03f0h mov rdx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d6}
03f3h call 7ff825ea5df0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 f8 72 d3 5e}
03f8h mov rax,7ff7c625e440h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 40 e4 25 c6 f7 7f 00 00}
0402h mov [rsi+18h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 18}
0406h mov rax,7ff7c715d0a0h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b8 a0 d0 15 c7 f7 7f 00 00}
0410h mov [rsi+20h],rax                       ; MOV r/m64, r64 || REX.W 89 /r || encoded[4]{48 89 46 20}
0414h mov rax,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b c6}
0417h add rsp,28h                             ; ADD r/m64, imm8 || REX.W 83 /0 ib || encoded[4]{48 83 c4 28}
041bh pop rbx                                 ; POP r64 || 58+ro || encoded[1]{5b}
041ch pop rbp                                 ; POP r64 || 58+ro || encoded[1]{5d}
041dh pop rsi                                 ; POP r64 || 58+ro || encoded[1]{5e}
041eh pop rdi                                 ; POP r64 || 58+ro || encoded[1]{5f}
041fh ret                                     ; RET || C3 || encoded[1]{c3}
0420h mov rcx,7ff7c735c978h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 78 c9 35 c7 f7 7f 00 00}
042ah call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 81 81 d3 5e}
042fh mov rdi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f8}
0432h mov [rdi+8],sil                         ; MOV r/m8, r8 || 88 /r || encoded[4]{40 88 77 08}
0436h mov rcx,7ff7c6359ea8h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 a8 9e 35 c6 f7 7f 00 00}
0440h call 7ff825e4eff0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 ab 04 ce 5e}
0445h mov rsi,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b f0}
0448h mov rcx,7ff7c65bb040h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 b9 40 b0 5b c6 f7 7f 00 00}
0452h call 7ff825ea6cb0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 59 81 d3 5e}
0457h mov rbx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d8}
045ah mov ecx,44ch                            ; MOV r32, imm32 || o32 B8+rd id || encoded[5]{b9 4c 04 00 00}
045fh mov rdx,7ff7c67cc738h                   ; MOV r64, imm64 || REX.W B8+ro io || encoded[10]{48 ba 38 c7 7c c6 f7 7f 00 00}
0469h call 7ff825fd05b0h                      ; CALL rel32 || E8 cd || encoded[5]{e8 42 1a e6 5e}
046eh mov rbp,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b e8}
0471h mov rcx,rsi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b ce}
0474h call 7ff7c63a2c90h                      ; CALL rel32 || E8 cd || encoded[5]{e8 17 41 23 ff}
0479h mov ecx,eax                             ; MOV r32, r/m32 || o32 8B /r || encoded[2]{8b c8}
047bh call 7ff7c63a03f8h                      ; CALL rel32 || E8 cd || encoded[5]{e8 78 18 23 ff}
0480h mov r8,rax                              ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{4c 8b c0}
0483h mov rcx,rbp                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cd}
0486h mov rdx,rdi                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d7}
0489h call 7ff7c6384138h                      ; CALL rel32 || E8 cd || encoded[5]{e8 aa 55 21 ff}
048eh mov rdx,rax                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b d0}
0491h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
0494h call 7ff7c63a9000h                      ; CALL rel32 || E8 cd || encoded[5]{e8 67 a4 23 ff}
0499h mov rcx,rbx                             ; MOV r64, r/m64 || REX.W 8B /r || encoded[3]{48 8b cb}
049ch call 7ff825e1b900h                      ; CALL rel32 || E8 cd || encoded[5]{e8 5f cd ca 5e}
04a1h int 3                                   ; INT3 || CC || encoded[1]{cc}
04a2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04a4h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04a6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04a8h add fs:[rax],al                         ; ADD r/m8, r8 || 00 /r || encoded[3]{64 00 00}
04abh add [rbx-30000000h],ah                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 a3 00 00 00 d0}
04b1h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
04b3h add [rip+58000002h],bl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 1d 02 00 00 58}
04b9h add eax,[rax]                           ; ADD r32, r/m32 || o32 03 /r || encoded[2]{03 00}
04bbh add [rdx+rax],bl                        ; ADD r/m8, r8 || 00 /r || encoded[4]{00 5c 02 00}
04bfh add [rdi+21000001h],bl                  ; ADD r/m8, r8 || 00 /r || encoded[6]{00 9f 01 00 00 21}
04c5h add [rax],eax                           ; ADD r/m32, r32 || o32 01 /r || encoded[2]{01 00}
04c7h add [rax+1],ah                          ; ADD r/m8, r8 || 00 /r || encoded[3]{00 60 01}
04cah add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04cch fiadd word ptr [rcx]                    ; FIADD m16int || DE /0 || encoded[2]{de 01}
04ceh add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04d0h fiadd dword ptr [rdx]                   ; FIADD m32int || DA /0 || encoded[2]{da 02}
04d2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04d4h sbb [rbx],eax                           ; SBB r/m32, r32 || o32 19 /r || encoded[2]{19 03}
04d6h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04d8h wait                                    ; WAIT || 9B || encoded[1]{9b}
04d9h add al,[rax]                            ; ADD r8, r/m8 || 02 /r || encoded[2]{02 00}
04dbh add [rbx+rax+0e20000h],dl               ; ADD r/m8, r8 || 00 /r || encoded[7]{00 94 03 00 00 e2 00}
04e2h add [rax],al                            ; ADD r/m8, r8 || 00 /r || encoded[2]{00 00}
04e4h and eax,19000000h                       ; AND EAX, imm32 || o32 25 id || encoded[5]{25 00 00 00 19}
04e9h or [rip+4420800h],al                    ; OR r/m8, r8 || 08 /r || encoded[6]{08 05 00 08 42 04}
04efh xor [rbx],al                            ; XOR r/m8, r8 || 30 /r || encoded[2]{30 03}
04f1h push rax                                ; PUSH r64 || 50+ro || encoded[1]{50}
04f2h add ah,[rax+1]                          ; ADD r8, r/m8 || 02 /r || encoded[3]{02 60 01}
04f5h jo short 04f7h                          ; JO rel8 || 70 cb || encoded[2]{70 00}
04f7h (bad)                                   ; <invalid> || <invalid> || encoded[2]{00 40}
